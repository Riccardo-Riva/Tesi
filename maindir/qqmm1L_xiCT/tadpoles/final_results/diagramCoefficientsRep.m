{{{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{((I/27)*2^(1 - 4*d)*EL^6*((2*Pi)^(3*d)*((-224 + 232*d - 74*d^2 + 7*d^3)*
         s^2 + 4*(144 - 76*d + 9*d^2)*s*t + 4*(176 - 80*d + 7*d^2)*t^2) - 
      2^(1 + 3*d)*(32 - 20*d + 3*d^2)*Pi^(3*d)*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
       GaugeXi[Q] - (-4 + d)^2*(2*Pi)^(3*d)*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
       GaugeXi[Q]^2))/((-4 + d)*Pi^(4*d)*s^2), 
   ((-I/27)*2^(3 - d)*(32 - 14*d + d^2)*EL^6*(s + 2*t))/((-4 + d)*Pi^d*s), 
   ((-I/27)*4^(1 - d)*EL^6*t*(3*d*(2*Pi)^d*s^2 + 2^(3 + d)*Pi^d*
       (-s^2 + s*t + 2*t^2)))/(Pi^(2*d)*s), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
  {((-I/27)*4^(-2 - d)*EL^6*(-39*d^4*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(s^2*(3*d^4 + d*(864 + 2320*sw^2 - 3712*sw^4) + 
          d^3*(174 + 70*sw^2 - 112*sw^4) + 64*(-6 - 35*sw^2 + 56*sw^4) + 
          2*d^2*(-309 - 370*sw^2 + 592*sw^4)) + 
        s*(57*d^3 - 9*d^4 - 1152*(-1 - 5*sw^2 + 8*sw^4) - 
          72*d^2*(-1 - 5*sw^2 + 8*sw^4) + 32*d*(-27 - 95*sw^2 + 152*sw^4))*
         t - 2*(176 - 80*d + 7*d^2)*(3 - 20*sw^2 + 32*sw^4)*t^2) + 
      2*(9*d^4*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (2*s^2*(96 + 320*sw^2 - 512*sw^4 + d^2*(93 + 130*sw^2 - 208*sw^4) + 
            3*d^3*(-8 - 5*sw^2 + 8*sw^4) + 12*d*(-13 - 30*sw^2 + 48*sw^4)) + 
          s*(-105*d^3 + 9*d^4 + 256*(3 - 5*sw^2 + 8*sw^4) - 
            160*d*(6 - 5*sw^2 + 8*sw^4) + 12*d^2*(39 - 10*sw^2 + 16*sw^4))*
           t + 2*(32 - 20*d + 3*d^2)*(3 - 20*sw^2 + 32*sw^4)*t^2))*
       GaugeXi[Q] + (9*d^4*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(96 - 3*d^4 + 320*sw^2 - 512*sw^4 + d^2*(78 + 100*sw^2 - 
              160*sw^4) + 2*d^3*(-9 - 5*sw^2 + 8*sw^4) + 
            16*d*(-9 - 20*sw^2 + 32*sw^4)) + (-4 + d)^2*s*(-15*d + 3*d^2 + 
            8*(3 - 5*sw^2 + 8*sw^4))*t + 2*(-4 + d)^2*(3 - 20*sw^2 + 32*sw^4)*
           t^2))*GaugeXi[Q]^2))/((-4 + d)*Pi^(2*d)*(mz^2 - s)*s*sw^2*
     (-1 + sw^2)), ((I/27)*4^(-1 - d)*EL^6*(-3*d^4*(2*Pi)^d*s + 
      2^(1 + d)*Pi^d*(s*(-39*d^3 + 6*d^4 + d^2*(90 + 10*sw^2 - 16*sw^4) + 
          4*d*(12 - 35*sw^2 + 56*sw^4) - 8*(33 - 40*sw^2 + 64*sw^4)) + 
        (-24*d^3 + 3*d^4 + d^2*(60 + 20*sw^2 - 32*sw^4) - 
          32*(3 - 20*sw^2 + 32*sw^4) + 4*d*(-3 - 70*sw^2 + 112*sw^4))*t)))/
    ((-4 + d)*Pi^(2*d)*(mz^2 - s)*sw^2*(-1 + sw^2)), 
   ((-I/27)*2^(-3 - 2*d)*EL^6*t*(-3*d^3*(2*Pi)^d*s^2 + 
      2^(2 + d)*Pi^d*(s^2*(-6 + 6*d^2 + 40*sw^2 - 64*sw^4 + 
          3*d*(-3 - 5*sw^2 + 8*sw^4)) + 2*s*(-6 + 3*d - 20*sw^2 + 32*sw^4)*
         t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2)))/(Pi^(2*d)*(mz^2 - s)*sw^2*
     (-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, 
 {{0, ((I/27)*4^(-1 - d)*EL^6*(39*d^3*(2*Pi)^d*s + 
      mz^2*(-3*d^3*(5 + d)*(2*Pi)^d + 2^(1 + d)*Pi^d*(-9*d^3 + 3*d^4 - 
          6*d^2*(-9 - 5*sw^2 + 8*sw^4) - 12*(3 - 20*sw^2 + 32*sw^4) + 
          2*d*(-21 - 85*sw^2 + 136*sw^4))) + 2^(1 + d)*Pi^d*
       (s*(9*d^3 - 3*d^4 + d*(6 + 170*sw^2 - 272*sw^4) + 
          d^2*(-78 - 20*sw^2 + 32*sw^4) + 4*(39 - 80*sw^2 + 128*sw^4)) + 
        (36*d^3 - 3*d^4 + 4*d^2*(-42 - 5*sw^2 + 8*sw^4) - 
          4*d*(-87 - 50*sw^2 + 80*sw^4) + 8*(-33 - 50*sw^2 + 80*sw^4))*t)))/
    ((-4 + d)*Pi^(2*d)*s*sw^2*(-1 + sw^2)), 0, 
   ((I/27)*16^(-1 - d)*EL^6*(117*d^3*(2*Pi)^(3*d)*s^4 + 
      2^(1 + 3*d)*Pi^(3*d)*s^2*(-2*s^2*(-60 + 3*d^4 + 280*sw^2 - 448*sw^4 + 
          d^2*(78 + 55*sw^2 - 88*sw^4) + d*(-33 - 250*sw^2 + 400*sw^4)) + 
        s*(75*d^2 - 3*d^3 - 96*(-3 - 5*sw^2 + 8*sw^4) + 
          4*d*(-69 - 70*sw^2 + 112*sw^4))*t + 2*(-28 + 15*d)*
         (3 - 20*sw^2 + 32*sw^4)*t^2) + mz^4*(117*d^3*(2*Pi)^(3*d)*s^2 + 
        2^(1 + 3*d)*Pi^(3*d)*(-2*s^2*(-60 + 3*d^4 + 280*sw^2 - 448*sw^4 + 
            d^2*(78 + 55*sw^2 - 88*sw^4) + d*(-33 - 250*sw^2 + 400*sw^4)) + 
          s*(27*d^2 - 3*d^3 + d*(-84 + 40*sw^2 - 64*sw^4) + 
            32*(3 - 5*sw^2 + 8*sw^4))*t - 2*(-4 + d)*(3 - 20*sw^2 + 32*sw^4)*
           t^2)) + 2*mz^2*s*(-57*d^3*(2*Pi)^(3*d)*s^2 + 
        2^(1 + 3*d)*Pi^(3*d)*(s^2*(3*d^4 - 4*d^3*sw^2*(-5 + 8*sw^2) - 
            24*(9 - 10*sw^2 + 16*sw^4) + d^2*(48 - 50*sw^2 + 80*sw^4) + 
            2*d*(51 - 50*sw^2 + 80*sw^4)) + s*(69*d^3 - 6*d^4 + 
            d^2*(-327 + 80*sw^2 - 128*sw^4) - 96*(6 - 5*sw^2 + 8*sw^4) + 
            12*d*(59 - 30*sw^2 + 48*sw^4))*t - 2*(4 - 5*d + 2*d^2)*
           (3 - 20*sw^2 + 32*sw^4)*t^2)) + 2*(-57*d^3*(2*Pi)^(3*d)*s^4 + 
        2^(1 + 3*d)*Pi^(3*d)*s^2*(s^2*(3*d^4 + d^2*(72 + 50*sw^2 - 80*sw^4) - 
            24*(3 - 10*sw^2 + 16*sw^4) + 2*d*(-9 - 110*sw^2 + 176*sw^4)) + 
          s*(-51*d^2 + 3*d^3 + d*(180 + 120*sw^2 - 192*sw^4) + 
            32*(-6 - 5*sw^2 + 8*sw^4))*t - 2*(-12 + 7*d)*(3 - 20*sw^2 + 
            32*sw^4)*t^2) + mz^4*(-57*d^3*(2*Pi)^(3*d)*s^2 + 
          2^(1 + 3*d)*Pi^(3*d)*(s^2*(3*d^4 + d^2*(72 + 50*sw^2 - 80*sw^4) - 
              24*(3 - 10*sw^2 + 16*sw^4) + 2*d*(-9 - 110*sw^2 + 176*sw^4)) + 
            s*(-27*d^2 + 3*d^3 - 32*(3 - 5*sw^2 + 8*sw^4) + d*(84 - 40*sw^2 + 
                64*sw^4))*t + 2*(-4 + d)*(3 - 20*sw^2 + 32*sw^4)*t^2)) + 
        2*mz^2*s*(-3*d^3*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
           (2*s^2*(84 + 40*sw^2 - 64*sw^4 + 2*d^3*sw^2*(-5 + 8*sw^2) + 
              d^2*(18 + 55*sw^2 - 88*sw^4) + 3*d*(-25 - 30*sw^2 + 48*sw^4)) + 
            s*(-69*d^3 + 6*d^4 - 44*d*(15 - 10*sw^2 + 16*sw^4) + 
              16*(33 - 40*sw^2 + 64*sw^4) + d^2*(315 - 80*sw^2 + 128*sw^4))*
             t + 2*(12 - 9*d + 2*d^2)*(3 - 20*sw^2 + 32*sw^4)*t^2)))*
       GaugeXi[Q] - (3*d^3*(2*Pi)^(3*d)*s^4 + 2^(1 + 3*d)*Pi^(3*d)*s^2*
         (2*s^2*(-12 - 40*sw^2 + 64*sw^4 + d*(15 + 30*sw^2 - 48*sw^4) + 
            d^2*(-6 - 5*sw^2 + 8*sw^4)) + s*(-27*d^2 + 3*d^3 - 
            32*(3 - 5*sw^2 + 8*sw^4) + d*(84 - 40*sw^2 + 64*sw^4))*t + 
          2*(-4 + d)*(3 - 20*sw^2 + 32*sw^4)*t^2) + 
        mz^4*(3*d^3*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
           (2*s^2*(-12 - 40*sw^2 + 64*sw^4 + d*(15 + 30*sw^2 - 48*sw^4) + 
              d^2*(-6 - 5*sw^2 + 8*sw^4)) + s*(-27*d^2 + 3*d^3 - 
              32*(3 - 5*sw^2 + 8*sw^4) + d*(84 - 40*sw^2 + 64*sw^4))*t + 
            2*(-4 + d)*(3 - 20*sw^2 + 32*sw^4)*t^2)) + 
        2*mz^2*s*(-63*d^3*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
           (s^2*(3*d^4 + 4*d^3*sw^2*(-5 + 8*sw^2) + d^2*(120 + 170*sw^2 - 
                272*sw^4) + 40*(3 + 10*sw^2 - 16*sw^4) + 2*d*(-99 - 
                230*sw^2 + 368*sw^4)) + s*(-69*d^3 + 6*d^4 + 
              d*(-612 + 520*sw^2 - 832*sw^4) + 160*(3 - 5*sw^2 + 8*sw^4) + 
              d^2*(303 - 80*sw^2 + 128*sw^4))*t + 2*(20 - 13*d + 2*d^2)*
             (3 - 20*sw^2 + 32*sw^4)*t^2)))*GaugeXi[Q]^2))/
    ((-4 + d)*mz^2*Pi^(4*d)*(mz^2 - s)^2*s^2*sw^2*(-1 + sw^2)*
     (-1 + GaugeXi[Q])), 
   ((-I/432)*EL^6*(-((2^(3 - d)*s*(mz^3 - mz*s)^2*(-156 - 36*d^2 + 3*d^3 - 
          40*sw^2 + 64*sw^4 - 4*d*(-33 - 5*sw^2 + 8*sw^4))*
         ((-4 + d)*s - 2*t))/Pi^d) + (2^(3 - 2*d)*(-3 + d)*mz^2*(mz^2 - s)*s*
        (-3*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
          (2*s^2*(-6 + 6*d^2 + 40*sw^2 - 64*sw^4 + 3*d*(-3 - 5*sw^2 + 8*
                sw^4)) + s*(-36*d^2 + 3*d^3 - 4*d*(-36 - 5*sw^2 + 8*sw^4) + 
             12*(-15 - 10*sw^2 + 16*sw^4))*t + 8*(3 - 20*sw^2 + 32*sw^4)*
            t^2) + mz^2*(3*d^3*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (-2*s*(-6 + 6*d^2 + 40*sw^2 - 64*sw^4 + 3*d*(-3 - 5*sw^2 + 
                 8*sw^4)) + (156 + 36*d^2 - 3*d^3 + 40*sw^2 - 64*sw^4 + 4*d*
                (-33 - 5*sw^2 + 8*sw^4))*t))))/Pi^(2*d) + 
      (4^(1 - d)*(-4 + d)*(mz^2 - s)^2*s*(-3*d^2*(2*Pi)^d*s^2 - 
         2^(1 + d)*Pi^d*(2*s^2*(3 + 10*sw^2 - 16*sw^4 + 
             d*(-3 - 5*sw^2 + 8*sw^4)) + s*(-15*d + 3*d^2 + 
             8*(3 - 5*sw^2 + 8*sw^4))*t + 2*(3 - 20*sw^2 + 32*sw^4)*t^2) + 
         mz^2*(3*d^3*(2*Pi)^d*s - 2^(1 + d)*Pi^d*
            (2*s*(12*d^2 + d*(-57 + 5*sw^2 - 8*sw^4) + 4*(21 - 5*sw^2 + 
                 8*sw^4)) + (156 + 36*d^2 - 3*d^3 + 40*sw^2 - 64*sw^4 + 4*d*
                (-33 - 5*sw^2 + 8*sw^4))*t))))/Pi^(2*d) + 
      (2^(1 - d)*(-4 + d)*(mz^2 - s)^2*s^2*((-4 + d)*mz^2 + d*s)*
        (-1 + 4*sw^2)*(-3 + 8*sw^2)*(-1 + GaugeXi[Q]))/Pi^d + 
      (2^(1 - d)*(-4 + d)*(mz^2 - s)^3*s*(s*(-6 + 3*d - 20*sw^2 + 32*sw^4) - 
         2*(3 - 20*sw^2 + 32*sw^4)*t)*(-1 + GaugeXi[Q]))/Pi^d - 
      ((-4 + d)*(mz^2 - s)^2*s*((-4 + d)*mz^2 + (-2 + d)*s)*
        (s*(-6 + 3*d - 20*sw^2 + 32*sw^4) - 2*(3 - 20*sw^2 + 32*sw^4)*t)*
        (-1 + GaugeXi[Q]))/(2*Pi)^d + ((-4 + d)*(mz^2 - s)^2*
        (3*d*s - 4*s*(3 - 5*sw^2 + 8*sw^4) - 2*(3 - 20*sw^2 + 32*sw^4)*t)*
        (mz^2*((-4 + d)*s + 2*t) + s*(d*s + 2*t))*(-1 + GaugeXi[Q]))/
       (2*Pi)^d - (2^(2 - d)*(-4 + d)*(mz^2 - s)^2*s*
        (s*(-6 + 3*d - 20*sw^2 + 32*sw^4)*t + 
         mz^2*(s*(-6 + 3*d - 20*sw^2 + 32*sw^4) + 3*d*t - 
           4*(3 - 5*sw^2 + 8*sw^4)*t))*(-1 + GaugeXi[Q]))/Pi^d - 
      (2^(1 - 4*d)*(-4 + d)*(-3 + d)*s*(mz^2 + s)*
        (mz^4*(2*Pi)^(3*d)*(-6 + 3*d - 20*sw^2 + 32*sw^4)*t + 
         (2*Pi)^(3*d)*s^2*(-6 + 3*d - 20*sw^2 + 32*sw^4)*t + 
         2^(1 + 3*d)*mz^2*Pi^(3*d)*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
             4*d*(-3 - 5*sw^2 + 8*sw^4)) + 3*s*(18 - 11*d + 2*d^2 - 20*sw^2 + 
             32*sw^4)*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2))*(-1 + GaugeXi[Q]))/
       Pi^(4*d) - ((-4 + d)*(mz^2 - s)*s*((-4 + d)*mz^2 + (-2 + d)*s)*
        (mz^2*(3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-3 - 10*sw^2 + 16*sw^4) + 
             (-3 + 20*sw^2 - 32*sw^4)*t)) + s*(-9*d*(2*Pi)^d*s + 
           2^(1 + d)*Pi^d*(s*(3 + 3*d + 10*sw^2 - 16*sw^4) + 
             (3 - 20*sw^2 + 32*sw^4)*t)))*(-1 + GaugeXi[Q]))/(2*Pi)^(2*d)))/
    ((-4 + d)*mz^2*(mz^2 - s)^2*s^2*sw^2*(-1 + sw^2)), 
   ((I/27)*2^(-3 - 2*d)*EL^6*t*(-3*d^3*(2*Pi)^d*s + 
      mz^2*(-3*d^3*(2*Pi)^d + 2^(1 + d)*Pi^d*(324 + 60*d^2 - 3*d^3 + 
          2*d*(-123 - 5*sw^2 + 8*sw^4))) + 2^(1 + d)*Pi^d*
       (s*(36 - 6*d^2 + 3*d^3 + 2*d*(-3 - 5*sw^2 + 8*sw^4)) + 
        4*(30 - 18*d + 3*d^2 - 20*sw^2 + 32*sw^4)*t)))/
    (Pi^(2*d)*s*sw^2*(-1 + sw^2)), ((I/27)*2^(-3 - 2*d)*EL^6*t*
     (-3*d^3*(2*Pi)^d*s^2 + mz^4*(-3*d^3*(2*Pi)^d + 2^(2 + d)*Pi^d*
         (-6 + 6*d^2 + 40*sw^2 - 64*sw^4 + 3*d*(-3 - 5*sw^2 + 8*sw^4))) + 
      2^(1 + d)*mz^2*Pi^d*(s*(-18*d^2 + 3*d^3 - 4*d*(-3 - 5*sw^2 + 8*sw^4) + 
          16*(3 - 5*sw^2 + 8*sw^4)) + 4*(30 - 18*d + 3*d^2 - 20*sw^2 + 
          32*sw^4)*t) + 2^(2 + d)*Pi^d*
       (s^2*(-6 + 6*d^2 + 40*sw^2 - 64*sw^4 + 3*d*(-3 - 5*sw^2 + 8*sw^4)) + 
        2*s*(-6 + 3*d - 20*sw^2 + 32*sw^4)*t + 4*(3 - 20*sw^2 + 32*sw^4)*
         t^2)))/(Pi^(2*d)*s*sw^2*(-1 + sw^2)), 
   ((-I/27)*4^(-2 - d)*EL^6*(-9*d^2*(2*Pi)^d*s^4 + 2^(1 + d)*Pi^d*s^2*
       (s^2*(-6 + 3*d^2 - 20*sw^2 + 32*sw^4 + d*(6 + 10*sw^2 - 16*sw^4)) + 
        s*(15*d - 3*d^2 - 8*(3 - 5*sw^2 + 8*sw^4))*t - 
        2*(3 - 20*sw^2 + 32*sw^4)*t^2) + 2*s*(mz^2 + s)*
       (3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
          s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[Q] - 
      (9*d^2*(2*Pi)^d*s^4 - 2^(1 + d)*Pi^d*s^2*
         (s^2*(-6 + 3*d^2 - 20*sw^2 + 32*sw^4 + d*(6 + 10*sw^2 - 16*sw^4)) + 
          s*(15*d - 3*d^2 - 8*(3 - 5*sw^2 + 8*sw^4))*t - 
          2*(3 - 20*sw^2 + 32*sw^4)*t^2) + 2^(2 + d)*mz^2*Pi^d*s*
         (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
          2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          4*(3 - 20*sw^2 + 32*sw^4)*t^2) + mz^4*(3*d^2*(2*Pi)^d*s^2 + 
          2^(1 + d)*Pi^d*(2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 
                8*sw^4)) + s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
            2*(3 - 20*sw^2 + 32*sw^4)*t^2)))*GaugeXi[Q]^2 + 
      2*mz^2*(mz^2 + s)*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
          s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[Q]^3 - 
      mz^4*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
          s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[Q]^4))/
    (mz^2*Pi^(2*d)*s^2*sw^2*(-1 + sw^2)*(-1 + GaugeXi[Q])*
     (s - mz^2*GaugeXi[Q])^2), ((I/27)*4^(-2 - d)*EL^6*
     (3*s^2*(d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(6 + d^2 + 20*sw^2 - 32*sw^4 + 2*d*(-3 - 5*sw^2 + 8*sw^4)) + 
          s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          2*(3 - 20*sw^2 + 32*sw^4)*t^2)) - 
      2*s*(3*d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
         (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
          s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          2*(3 - 20*sw^2 + 32*sw^4)*t^2) + 2^(1 + d)*mz^2*Pi^d*
         (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
          2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          4*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[Q] + 
      (-9*d^2*(2*Pi)^d*s^4 + 2^(1 + d)*Pi^d*s^2*
         (s^2*(-6 + 3*d^2 - 20*sw^2 + 32*sw^4 + d*(6 + 10*sw^2 - 16*sw^4)) + 
          s*(15*d - 3*d^2 - 8*(3 - 5*sw^2 + 8*sw^4))*t - 
          2*(3 - 20*sw^2 + 32*sw^4)*t^2) + 2^(2 + d)*mz^2*Pi^d*s*
         (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
          2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          4*(3 - 20*sw^2 + 32*sw^4)*t^2) + mz^4*(3*d^2*(2*Pi)^d*s^2 + 
          2^(1 + d)*Pi^d*(2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 
                8*sw^4)) + s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
            2*(3 - 20*sw^2 + 32*sw^4)*t^2)))*GaugeXi[Q]^2 - 
      2*mz^4*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
          s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[Q]^3 + 
      mz^4*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
          s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[Q]^4))/
    (mz^2*Pi^(2*d)*s^2*sw^2*(-1 + sw^2)*(-1 + GaugeXi[Q])*
     (s - mz^2*GaugeXi[Q])), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, ((I/27)*2^(-5 - 2*d)*EL^6*(171*d^3*(2*Pi)^d*s + 
      mz^2*(9*(-11 + d)*d^3*(2*Pi)^d + 2^(2 + d)*Pi^d*
         (-33*d^3*sw^2*(-5 + 8*sw^2) + 3*d^4*sw^2*(-5 + 8*sw^2) + 
          d^2*(81 - 540*sw^2 + 786*sw^4 + 240*sw^6 - 192*sw^8) - 
          6*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8) + 
          d*(-63 + 420*sw^2 - 230*sw^4 - 1360*sw^6 + 1088*sw^8))) - 
      2^(1 + d)*Pi^d*(s*(-468 + 3120*sw^2 - 6656*sw^4 + 5120*sw^6 - 
          4096*sw^8 - 114*d^3*sw^2*(-5 + 8*sw^2) + 
          d^4*(9 - 60*sw^2 + 96*sw^4) + d^2*(234 - 1560*sw^2 + 2392*sw^4 + 
            320*sw^6 - 256*sw^8) + 2*d*(-9 + 60*sw^2 + 346*sw^4 - 1360*sw^6 + 
            1088*sw^8)) + (-36*d^3*(3 - 20*sw^2 + 32*sw^4) + 
          d^4*(9 - 60*sw^2 + 96*sw^4) - 8*d^2*(-63 + 420*sw^2 - 659*sw^4 - 
            40*sw^6 + 32*sw^8) + 4*d*(-261 + 1740*sw^2 - 2524*sw^4 - 
            800*sw^6 + 640*sw^8) - 8*(-99 + 660*sw^2 - 796*sw^4 - 800*sw^6 + 
            640*sw^8))*t)))/((-4 + d)*Pi^(2*d)*(mz^2 - s)*sw^4*
     (-1 + sw^2)^2), 0, ((I/27)*2^(-7 - 4*d)*EL^6*
     (mz^4*(9*d^3*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
         (s^2*(-6*d^4*(3 - 20*sw^2 + 32*sw^4) + 9*d^3*(19 - 130*sw^2 + 
              208*sw^4) + 4*d^2*(-117 + 780*sw^2 - 1105*sw^4 - 440*sw^6 + 
              352*sw^8) + 8*(45 - 300*sw^2 + 844*sw^4 - 1120*sw^6 + 
              896*sw^8) - 2*d*(-99 + 660*sw^2 + 244*sw^4 - 4000*sw^6 + 
              3200*sw^8)) + s*(d^3*(-9 + 60*sw^2 - 96*sw^4) + 
            27*d^2*(3 - 20*sw^2 + 32*sw^4) + 32*(9 - 60*sw^2 + 122*sw^4 - 
              80*sw^6 + 64*sw^8) - 4*d*(63 - 420*sw^2 + 724*sw^4 - 160*sw^6 + 
              128*sw^8))*t - 2*(-4 + d)*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
            256*sw^8)*t^2)) - s^2*(9*d^3*(2*Pi)^(3*d)*s^2 + 
        2^(1 + 3*d)*Pi^(3*d)*(2*s^2*(d^4*(9 - 60*sw^2 + 96*sw^4) - 
            9*d^3*(10 - 65*sw^2 + 104*sw^4) + d^2*(234 - 1560*sw^2 + 
              2210*sw^4 + 880*sw^6 - 704*sw^8) - 4*(45 - 300*sw^2 + 
              844*sw^4 - 1120*sw^6 + 896*sw^8) + d*(-99 + 660*sw^2 + 
              244*sw^4 - 4000*sw^6 + 3200*sw^8)) + 
          s*(-75*d^2*(3 - 20*sw^2 + 32*sw^4) + d^3*(9 - 60*sw^2 + 96*sw^4) + 
            d*(828 - 5520*sw^2 + 7376*sw^4 + 4480*sw^6 - 3584*sw^8) + 
            96*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 64*sw^8))*t - 
          2*(-28 + 15*d)*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*
           t^2)) + 2*mz^2*s*(-171*d^3*(2*Pi)^(3*d)*s^2 + 
        2^(1 + 3*d)*Pi^(3*d)*(s^2*(d^4*(9 - 60*sw^2 + 96*sw^4) + 
            d^3*(570*sw^2 - 1016*sw^4 + 320*sw^6 - 256*sw^8) - 
            24*(27 - 180*sw^2 + 340*sw^4 - 160*sw^6 + 128*sw^8) + 
            4*d^2*(36 - 240*sw^2 + 449*sw^4 - 200*sw^6 + 160*sw^8) + 
            2*d*(153 - 1020*sw^2 + 1892*sw^4 - 800*sw^6 + 640*sw^8)) + 
          s*(69*d^3*(3 - 20*sw^2 + 32*sw^4) - 6*d^4*(3 - 20*sw^2 + 32*sw^4) + 
            d^2*(-981 + 6540*sw^2 - 10880*sw^4 + 1280*sw^6 - 1024*sw^8) - 
            192*(9 - 60*sw^2 + 109*sw^4 - 40*sw^6 + 32*sw^8) + 
            12*d*(177 - 1180*sw^2 + 2044*sw^4 - 480*sw^6 + 384*sw^8))*t - 
          2*(4 - 5*d + 2*d^2)*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*
           t^2)) + 2*(-171*d^3*(2*Pi)^(3*d)*s^4 + 2^(1 + 3*d)*Pi^(3*d)*s^2*
         (s^2*(-114*d^3*sw^2*(-5 + 8*sw^2) + d^4*(9 - 60*sw^2 + 96*sw^4) - 
            24*(9 - 60*sw^2 + 148*sw^4 - 160*sw^6 + 128*sw^8) - 
            4*d^2*(-54 + 360*sw^2 - 511*sw^4 - 200*sw^6 + 160*sw^8) + 
            d*(-54 + 360*sw^2 + 568*sw^4 - 3520*sw^6 + 2816*sw^8)) + 
          s*(-51*d^2*(3 - 20*sw^2 + 32*sw^4) + d^3*(9 - 60*sw^2 + 96*sw^4) + 
            64*(-9 + 60*sw^2 - 83*sw^4 - 40*sw^6 + 32*sw^8) - 
            12*d*(-45 + 300*sw^2 - 428*sw^4 - 160*sw^6 + 128*sw^8))*t - 
          2*(-12 + 7*d)*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^2) + 
        mz^4*(-171*d^3*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
           (s^2*(-114*d^3*sw^2*(-5 + 8*sw^2) + d^4*(9 - 60*sw^2 + 96*sw^4) - 
              24*(9 - 60*sw^2 + 148*sw^4 - 160*sw^6 + 128*sw^8) - 
              4*d^2*(-54 + 360*sw^2 - 511*sw^4 - 200*sw^6 + 160*sw^8) + 
              d*(-54 + 360*sw^2 + 568*sw^4 - 3520*sw^6 + 2816*sw^8)) + 
            s*(-27*d^2*(3 - 20*sw^2 + 32*sw^4) + d^3*(9 - 60*sw^2 + 
                96*sw^4) - 32*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8) + 
              4*d*(63 - 420*sw^2 + 724*sw^4 - 160*sw^6 + 128*sw^8))*t + 
            2*(-4 + d)*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^2)) + 
        2*mz^2*s*(-9*d^3*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
           (2*s^2*(d^3*sw^2*(15 + 28*sw^2 - 160*sw^4 + 128*sw^6) + 
              d^2*(54 - 360*sw^2 + 290*sw^4 + 880*sw^6 - 704*sw^8) + 
              4*(63 - 420*sw^2 + 620*sw^4 + 160*sw^6 - 128*sw^8) + 
              3*d*(-75 + 500*sw^2 - 644*sw^4 - 480*sw^6 + 384*sw^8)) + 
            s*(-69*d^3*(3 - 20*sw^2 + 32*sw^4) + 6*d^4*(3 - 20*sw^2 + 
                32*sw^4) - 44*d*(45 - 300*sw^2 + 532*sw^4 - 160*sw^6 + 
                128*sw^8) + 16*(99 - 660*sw^2 + 1264*sw^4 - 640*sw^6 + 
                512*sw^8) + d^2*(945 - 6300*sw^2 + 10496*sw^4 - 1280*sw^6 + 
                1024*sw^8))*t + 2*(12 - 9*d + 2*d^2)*(9 - 60*sw^2 + 
              200*sw^4 - 320*sw^6 + 256*sw^8)*t^2)))*GaugeXi[Q] - 
      (9*d^3*(2*Pi)^(3*d)*s^4 + 2^(1 + 3*d)*Pi^(3*d)*s^2*
         (2*s^2*(3*d^3*sw^2*(-5 + 8*sw^2) + d*(45 - 300*sw^2 + 324*sw^4 + 
              480*sw^6 - 384*sw^8) + 2*d^2*(-9 + 60*sw^2 - 83*sw^4 - 
              40*sw^6 + 32*sw^8) + 4*(-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 
              128*sw^8)) + s*(-27*d^2*(3 - 20*sw^2 + 32*sw^4) + 
            d^3*(9 - 60*sw^2 + 96*sw^4) - 32*(9 - 60*sw^2 + 122*sw^4 - 
              80*sw^6 + 64*sw^8) + 4*d*(63 - 420*sw^2 + 724*sw^4 - 160*sw^6 + 
              128*sw^8))*t + 2*(-4 + d)*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
            256*sw^8)*t^2) + mz^4*(-9*d^3*(2*Pi)^(3*d)*s^2 + 
          2^(1 + 3*d)*Pi^(3*d)*(s^2*(d^3*(9 - 30*sw^2 + 48*sw^4) + 
              d*(90 - 600*sw^2 + 648*sw^4 + 960*sw^6 - 768*sw^8) + 
              4*d^2*(-9 + 60*sw^2 - 83*sw^4 - 40*sw^6 + 32*sw^8) + 
              8*(-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 128*sw^8)) + 
            s*(-27*d^2*(3 - 20*sw^2 + 32*sw^4) + d^3*(9 - 60*sw^2 + 
                96*sw^4) - 32*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8) + 
              4*d*(63 - 420*sw^2 + 724*sw^4 - 160*sw^6 + 128*sw^8))*t + 
            2*(-4 + d)*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^2)) + 
        2*mz^2*s*(-189*d^3*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
           (s^2*(d^4*(9 - 60*sw^2 + 96*sw^4) - 40*(-9 + 60*sw^2 - 44*sw^4 - 
                160*sw^6 + 128*sw^8) + d^3*(630*sw^2 - 904*sw^4 - 320*sw^6 + 
                256*sw^8) - 4*d^2*(-90 + 600*sw^2 - 739*sw^4 - 680*sw^6 + 
                544*sw^8) + d*(-594 + 3960*sw^2 - 3944*sw^4 - 7360*sw^6 + 
                5888*sw^8)) + s*(-69*d^3*(3 - 20*sw^2 + 32*sw^4) + 
              6*d^4*(3 - 20*sw^2 + 32*sw^4) + 160*(9 - 60*sw^2 + 122*sw^4 - 
                80*sw^6 + 64*sw^8) + d^2*(909 - 6060*sw^2 + 10112*sw^4 - 
                1280*sw^6 + 1024*sw^8) - 4*d*(459 - 3060*sw^2 + 5572*sw^4 - 
                2080*sw^6 + 1664*sw^8))*t + 2*(20 - 13*d + 2*d^2)*
             (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^2)))*
       GaugeXi[Q]^2))/((-4 + d)*mz^2*Pi^(4*d)*(mz^2 - s)^3*s*sw^4*
     (-1 + sw^2)^2*(-1 + GaugeXi[Q])), 
   ((-I/27)*2^(-7 - 4*d)*EL^6*(-(4^(3 + d)*(4 - d)*Pi^(2*d)*(mz^2 - s)^2*s*
        (4*sw^8*(d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*(-2*(-1 + d)*s^2 + 
             (8 - 5*d + d^2)*s*t + 2*t^2) + mz^2*(-(d^3*(2*Pi)^d*s) + 
             2^(1 + d)*Pi^d*((56 - 38*d + 8*d^2)*s - (-52 + 44*d - 12*d^2 + 
                 d^3)*t))) - (sw^4*(3 - 4*sw^2)^2*(d^2*(2*Pi)^d*s^2 + 
            2^(1 + d)*Pi^d*((4 - 3*d)*s^2 + (4 - 5*d + d^2)*s*t - 2*t^2) + 
            mz^2*(-(d^3*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*((52 - 37*d + 8*d^2)*s - 
                (-56 + 46*d - 12*d^2 + d^3)*t))))/4 + (-1/2 + sw^2)^2*
          (((3 - 4*sw^2)^2*(d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*(-2*(-1 + d)*
                 s^2 + (8 - 5*d + d^2)*s*t + 2*t^2) + 
              mz^2*(-(d^3*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*((56 - 38*d + 8*d^2)*
                   s - (-52 + 44*d - 12*d^2 + d^3)*t))))/4 - 
           4*sw^4*(d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*((4 - 3*d)*s^2 + 
               (4 - 5*d + d^2)*s*t - 2*t^2) + mz^2*(-(d^3*(2*Pi)^d*s) + 
               2^(1 + d)*Pi^d*((52 - 37*d + 8*d^2)*s - (-56 + 46*d - 12*d^2 + 
                   d^3)*t)))))*(1 - GaugeXi[Q])) - 2^(7 + 2*d)*(3 - d)*mz^2*
       Pi^(2*d)*(mz^2 - s)*s*(4*sw^8*(d^3*(2*Pi)^d*s^2 + 
          2^(1 + d)*Pi^d*((4 + 6*d - 4*d^2)*s^2 - (-60 + 48*d - 12*d^2 + d^3)*
             s*t - 8*t^2) + mz^2*(-(d^3*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*
             ((-4 - 6*d + 4*d^2)*s + (-52 + 44*d - 12*d^2 + d^3)*t))) - 
        (sw^4*(3 - 4*sw^2)^2*(d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
            ((-4 + 9*d - 4*d^2)*s^2 - (-72 + 50*d - 12*d^2 + d^3)*s*t + 
             8*t^2) + mz^2*(-(d^3*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*
              ((4 - 9*d + 4*d^2)*s + (-56 + 46*d - 12*d^2 + d^3)*t))))/4 + 
        (-1/2 + sw^2)^2*(((3 - 4*sw^2)^2*(d^3*(2*Pi)^d*s^2 + 
             2^(1 + d)*Pi^d*((4 + 6*d - 4*d^2)*s^2 - (-60 + 48*d - 12*d^2 + 
                 d^3)*s*t - 8*t^2) + mz^2*(-(d^3*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*
                ((-4 - 6*d + 4*d^2)*s + (-52 + 44*d - 12*d^2 + d^3)*t))))/4 - 
          4*sw^4*(d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*((-4 + 9*d - 4*d^2)*s^2 - 
              (-72 + 50*d - 12*d^2 + d^3)*s*t + 8*t^2) + 
            mz^2*(-(d^3*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*((4 - 9*d + 4*d^2)*s + 
                (-56 + 46*d - 12*d^2 + d^3)*t)))))*(1 - GaugeXi[Q]) - 
      2^(2 + 3*d)*Pi^(3*d)*s*(mz^3 - mz*s)^2*(-468 + 3120*sw^2 - 4784*sw^4 - 
        640*sw^6 + 512*sw^8 - 36*d^2*(3 - 20*sw^2 + 32*sw^4) + 
        d^3*(9 - 60*sw^2 + 96*sw^4) - 4*d*(-99 + 660*sw^2 - 1030*sw^4 - 
          80*sw^6 + 64*sw^8))*((-4 + d)*s - 2*t)*(-1 + GaugeXi[Q]) + 
      4^(1 + d)*Pi^(2*d)*s*(mz^3 - mz*s)^2*(-9*d^3*(2*Pi)^d + 
        2^(2 + d)*Pi^d*(117 - 780*sw^2 + 1196*sw^4 + 160*sw^6 - 128*sw^8 - 
          3*d^3*sw^2*(-5 + 8*sw^2) + 9*d^2*(3 - 20*sw^2 + 32*sw^4) + 
          d*(-99 + 660*sw^2 - 1030*sw^4 - 80*sw^6 + 64*sw^8)))*
       ((-4 + d)*s - 2*t)*(-1 + GaugeXi[Q]) + 2^(1 + 3*d)*(-4 + d)*Pi^(3*d)*
       (mz^2 - s)^2*s^2*((-4 + d)*mz^2 + d*s)*(1 - 4*sw^2 + 8*sw^4)*
       (9 - 24*sw^2 + 32*sw^4)*(-1 + GaugeXi[Q])^2 - 
      4^(1 + d)*(-4 + d)*Pi^(2*d)*(mz^2 - s)^2*s*
       (s*(9*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(-9 - 30*(-2 + d)*sw^2 + 
            (-44 + 48*d)*sw^4 - 160*sw^6 + 128*sw^8))*t + 
        mz^2*(9*d*(2*Pi)^d*(s + t) + 2^(1 + d)*Pi^d*
           (s*(-9 - 30*(-2 + d)*sw^2 + (-44 + 48*d)*sw^4 - 160*sw^6 + 
              128*sw^8) - 2*(9 + 15*(-4 + d)*sw^2 + (122 - 24*d)*sw^4 - 
              80*sw^6 + 64*sw^8)*t)))*(-1 + GaugeXi[Q])^2 - 
      2*(-4 + d)*(-3 + d)*s*(mz^2 + s)*(mz^4*(2*Pi)^(3*d)*
         (d*(9 - 60*sw^2 + 96*sw^4) + 2*(-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 
            128*sw^8))*t + (2*Pi)^(3*d)*s^2*(d*(9 - 60*sw^2 + 96*sw^4) + 
          2*(-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 128*sw^8))*t + 
        2*mz^2*(9*d*(2*Pi)^(3*d)*s*(d*s - 11*t) + 2^(1 + 3*d)*Pi^(3*d)*
           (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
              3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 
                80*sw^6 + 64*sw^8)) + 3*s*(27 - 180*sw^2 + 340*sw^4 - 
              160*sw^6 + 128*sw^8 - 22*d*sw^2*(-5 + 8*sw^2) + 
              d^2*(3 - 20*sw^2 + 32*sw^4))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 
              320*sw^6 + 256*sw^8)*t^2)))*(-1 + GaugeXi[Q])^2 + 
      (-4 + d)*(2*Pi)^(2*d)*(mz^2 - s)^3*s*(9*d*(2*Pi)^d*s + 
        2^(1 + d)*Pi^d*(s*(-9 - 30*(-2 + d)*sw^2 + (-44 + 48*d)*sw^4 - 
            160*sw^6 + 128*sw^8) + (-9 + 60*sw^2 - 200*sw^4 + 320*sw^6 - 
            256*sw^8)*t) - 2^(1 + d)*Pi^d*(d*s*(9 - 60*sw^2 + 96*sw^4) + 
          2*s*(-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 128*sw^8) - 
          2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t)*GaugeXi[Q] + 
        (9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-9 - 30*(-2 + d)*sw^2 + 
              (-44 + 48*d)*sw^4 - 160*sw^6 + 128*sw^8) + 
            (-9 + 60*sw^2 - 200*sw^4 + 320*sw^6 - 256*sw^8)*t))*
         GaugeXi[Q]^2) - (-4 + d)*(2*Pi)^(2*d)*(mz^2 - s)^2*s*
       ((-4 + d)*mz^2 + (-2 + d)*s)*(9*d*(2*Pi)^d*s + 
        2^(1 + d)*Pi^d*(s*(-9 - 30*(-2 + d)*sw^2 + (-44 + 48*d)*sw^4 - 
            160*sw^6 + 128*sw^8) + (-9 + 60*sw^2 - 200*sw^4 + 320*sw^6 - 
            256*sw^8)*t) - 2^(1 + d)*Pi^d*(d*s*(9 - 60*sw^2 + 96*sw^4) + 
          2*s*(-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 128*sw^8) - 
          2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t)*GaugeXi[Q] + 
        (9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-9 - 30*(-2 + d)*sw^2 + 
              (-44 + 48*d)*sw^4 - 160*sw^6 + 128*sw^8) + 
            (-9 + 60*sw^2 - 200*sw^4 + 320*sw^6 - 256*sw^8)*t))*
         GaugeXi[Q]^2) + (-4 + d)*(2*Pi)^(2*d)*(mz^2 - s)^3*s*
       (27*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-9 + 60*sw^2 - 44*sw^4 - 
            160*sw^6 + 128*sw^8 + d*(-9 - 30*sw^2 + 48*sw^4)) + 
          (-9 + 60*sw^2 - 200*sw^4 + 320*sw^6 - 256*sw^8)*t) - 
        2^(1 + d)*Pi^d*(d*s*(9 - 60*sw^2 + 96*sw^4) + 
          2*s*(-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 128*sw^8) - 
          2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t)*GaugeXi[Q] + 
        (27*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-9 + 60*sw^2 - 44*sw^4 - 
              160*sw^6 + 128*sw^8 + d*(-9 - 30*sw^2 + 48*sw^4)) + 
            (-9 + 60*sw^2 - 200*sw^4 + 320*sw^6 - 256*sw^8)*t))*
         GaugeXi[Q]^2) + (-4 + d)*(2*Pi)^(2*d)*(mz^2 - s)^2*
       (mz^2*((-4 + d)*s + 2*t) + s*(d*s + 2*t))*(9*d*(2*Pi)^d*s - 
        2^(1 + d)*Pi^d*(2*s*(9 + 15*(-4 + d)*sw^2 + (122 - 24*d)*sw^4 - 
            80*sw^6 + 64*sw^8) + (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
            256*sw^8)*t) - 2^(1 + d)*Pi^d*(d*s*(9 - 60*sw^2 + 96*sw^4) - 
          4*s*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8) - 
          2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t)*GaugeXi[Q] + 
        (9*d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(2*s*(9 + 15*(-4 + d)*sw^2 + 
              (122 - 24*d)*sw^4 - 80*sw^6 + 64*sw^8) + 
            (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t))*
         GaugeXi[Q]^2) - (-4 + d)*(2*Pi)^(2*d)*(mz^2 - s)*s*
       ((-4 + d)*mz^2 + (-2 + d)*s)*
       (-(s*(9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-9 - 30*(-2 + d)*sw^2 + 
               (-44 + 48*d)*sw^4 - 160*sw^6 + 128*sw^8) + 
             (-9 + 60*sw^2 - 200*sw^4 + 320*sw^6 - 256*sw^8)*t))) + 
        mz^2*(-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
           (s*(-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 128*sw^8 + 
              d*(9 - 30*sw^2 + 48*sw^4)) + (-9 + 60*sw^2 - 200*sw^4 + 
              320*sw^6 - 256*sw^8)*t)) - 2*(mz^2 - s)*(9*d*(2*Pi)^d*s + 
          2^(1 + d)*Pi^d*(s*(-9 - 30*(-2 + d)*sw^2 + (-44 + 48*d)*sw^4 - 
              160*sw^6 + 128*sw^8) + (-9 + 60*sw^2 - 200*sw^4 + 320*sw^6 - 
              256*sw^8)*t))*GaugeXi[Q] + 
        (-(s*(9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-9 - 30*(-2 + d)*sw^2 + 
                 (-44 + 48*d)*sw^4 - 160*sw^6 + 128*sw^8) + (-9 + 60*sw^2 - 
                 200*sw^4 + 320*sw^6 - 256*sw^8)*t))) + 
          mz^2*(-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-9 + 60*sw^2 - 44*sw^4 - 
                160*sw^6 + 128*sw^8 + d*(9 - 30*sw^2 + 48*sw^4)) + 
              (-9 + 60*sw^2 - 200*sw^4 + 320*sw^6 - 256*sw^8)*t)))*
         GaugeXi[Q]^2)))/((-4 + d)*Pi^(4*d)*(mz^2 - s)^3*s*sw^4*
     (mz - mz*sw^2)^2*(-1 + GaugeXi[Q])), 
   ((I/27)*4^(-3 - d)*EL^6*t*(-9*d^3*(2*Pi)^d*s + 
      mz^2*(-9*d^3*(2*Pi)^d + 2^(1 + d)*Pi^d*
         (-9*d^3*(1 - 10*sw^2 + 16*sw^4) + 324*(3 - 20*sw^2 + 32*sw^4) + 
          60*d^2*(3 - 20*sw^2 + 32*sw^4) + 2*d*(-369 + 2460*sw^2 - 
            3910*sw^4 - 80*sw^6 + 64*sw^8))) + 2^(1 + d)*Pi^d*
       (s*(36*(3 - 20*sw^2 + 32*sw^4) - 6*d^2*(3 - 20*sw^2 + 32*sw^4) + 
          d^3*(9 - 30*sw^2 + 48*sw^4) + 2*d*(-9 + 60*sw^2 - 70*sw^4 - 
            80*sw^6 + 64*sw^8)) + 4*(90 - 600*sw^2 + 1064*sw^4 - 320*sw^6 + 
          256*sw^8 - 18*d*(3 - 20*sw^2 + 32*sw^4) + 
          d^2*(9 - 60*sw^2 + 96*sw^4))*t)))/(Pi^(2*d)*(mz^2 - s)*sw^4*
     (-1 + sw^2)^2), ((I/27)*4^(-3 - d)*EL^6*t*(-9*d^3*(2*Pi)^d*s^2 - 
      mz^4*(9*d^3*(2*Pi)^d + 2^(2 + d)*Pi^d*(3*d^3*sw^2*(-5 + 8*sw^2) - 
          6*d^2*(3 - 20*sw^2 + 32*sw^4) - 3*d*(-9 + 60*sw^2 - 70*sw^4 - 
            80*sw^6 + 64*sw^8) + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
            256*sw^8))) + 2^(2 + d)*Pi^d*
       (s^2*(-3*d^3*sw^2*(-5 + 8*sw^2) + 6*d^2*(3 - 20*sw^2 + 32*sw^4) + 
          3*d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 64*sw^8) - 
          2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)) + 
        2*s*(d*(9 - 60*sw^2 + 96*sw^4) + 2*(-9 + 60*sw^2 - 44*sw^4 - 
            160*sw^6 + 128*sw^8))*t + 4*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
          256*sw^8)*t^2) + 2*mz^2*(9*d^3*(2*Pi)^d*s + 
        2^(1 + d)*Pi^d*(s*(6*d^3*sw^2*(-5 + 8*sw^2) - 
            9*d^2*(3 - 20*sw^2 + 32*sw^4) - 2*d*(-9 + 60*sw^2 - 70*sw^4 - 
              80*sw^6 + 64*sw^8) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 
              64*sw^8)) + 2*(90 - 600*sw^2 + 1064*sw^4 - 320*sw^6 + 
            256*sw^8 - 18*d*(3 - 20*sw^2 + 32*sw^4) + 
            d^2*(9 - 60*sw^2 + 96*sw^4))*t))))/(Pi^(2*d)*(mz^2 - s)*sw^4*
     (-1 + sw^2)^2), ((I/27)*2^(-3 - 2*d)*EL^6*
     (-(s*(9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
           (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
              3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 
                80*sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
              d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
                80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 
              320*sw^6 + 256*sw^8)*t^2)))/16 - 
      ((sw^4*(3 - 4*sw^2)^2*(2^(1 + d)*Pi^d*s*((8 - 6*d + d^2)*s^2 + 
             2*(4 - 5*d + d^2)*s*t - 4*t^2) + mz^2*(-(d^2*(2*Pi)^d*s^2) + 
             2^(1 + d)*Pi^d*((4 - 3*d + d^2)*s^2 + (4 - 5*d + d^2)*s*t - 2*
                t^2))))/4 - 4*sw^8*(2^(1 + d)*Pi^d*s*((-2 + d)^2*s^2 + 
            2*(8 - 5*d + d^2)*s*t + 4*t^2) + mz^2*(-(d^2*(2*Pi)^d*s^2) + 
            2^(1 + d)*Pi^d*((2 - 2*d + d^2)*s^2 + (8 - 5*d + d^2)*s*t + 
              2*t^2))) + (-1/2 + sw^2)^2*
         (4*sw^4*(2^(1 + d)*Pi^d*s*((8 - 6*d + d^2)*s^2 + 2*(4 - 5*d + d^2)*s*
               t - 4*t^2) + mz^2*(-(d^2*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*(
                (4 - 3*d + d^2)*s^2 + (4 - 5*d + d^2)*s*t - 2*t^2))) - 
          ((3 - 4*sw^2)^2*(2^(1 + d)*Pi^d*s*((-2 + d)^2*s^2 + 2*(8 - 5*d + 
                 d^2)*s*t + 4*t^2) + mz^2*(-(d^2*(2*Pi)^d*s^2) + 2^(1 + d)*
                Pi^d*((2 - 2*d + d^2)*s^2 + (8 - 5*d + d^2)*s*t + 2*t^2))))/
           4))*GaugeXi[Q] + 
      ((sw^4*(3 - 4*sw^2)^2*(d^2*(2*Pi)^d*s^3 + 2^(1 + d)*mz^2*Pi^d*
            ((8 - 6*d + d^2)*s^2 + 2*(4 - 5*d + d^2)*s*t - 4*t^2) + 
           2^(1 + d)*Pi^d*s*((4 - 3*d)*s^2 + (4 - 5*d + d^2)*s*t - 2*t^2)))/
         4 - 4*sw^8*(d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*(-2*(-1 + d)*s^2 + 
            (8 - 5*d + d^2)*s*t + 2*t^2) + 2^(1 + d)*mz^2*Pi^d*
           ((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 4*t^2)) + 
        (-1/2 + sw^2)^2*(4*sw^4*(d^2*(2*Pi)^d*s^3 + 2^(1 + d)*mz^2*Pi^d*
             ((8 - 6*d + d^2)*s^2 + 2*(4 - 5*d + d^2)*s*t - 4*t^2) + 
            2^(1 + d)*Pi^d*s*((4 - 3*d)*s^2 + (4 - 5*d + d^2)*s*t - 2*t^2)) - 
          ((3 - 4*sw^2)^2*(d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
              (-2*(-1 + d)*s^2 + (8 - 5*d + d^2)*s*t + 2*t^2) + 
             2^(1 + d)*mz^2*Pi^d*((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 4*
                t^2)))/4))*GaugeXi[Q]^2 + 
      (mz^2*(-9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
          (s^2*(18 - 120*sw^2 + 88*sw^4 + 320*sw^6 - 256*sw^8 + 
             d^2*(9 - 30*sw^2 + 48*sw^4) + 2*d*(-9 + 60*sw^2 - 70*sw^4 - 80*
                sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
             d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*
                sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
             256*sw^8)*t^2))*GaugeXi[Q]^3)/16))/(mz^2*Pi^(2*d)*(mz^2 - s)*s*
     sw^4*(-1 + sw^2)^2*(-1 + GaugeXi[Q])*(-s + mz^2*GaugeXi[Q])), 
   ((-I/27)*2^(-7 - 2*d)*EL^6*(3*s^2*(9*d^2*(2*Pi)^d*s^2 + 
        2^(1 + d)*Pi^d*(2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
            3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
              64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
            d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
              80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
            256*sw^8)*t^2)) + 
      32*s*((sw^4*(3 - 4*sw^2)^2*(d^2*(2*Pi)^d*s^3 + 2^(1 + d)*mz^2*Pi^d*
            ((8 - 6*d + d^2)*s^2 + 2*(4 - 5*d + d^2)*s*t - 4*t^2) + 
           2^(1 + d)*Pi^d*s*((4 - 3*d)*s^2 + (4 - 5*d + d^2)*s*t - 2*t^2)))/
         4 - 4*sw^8*(d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*(-2*(-1 + d)*s^2 + 
            (8 - 5*d + d^2)*s*t + 2*t^2) + 2^(1 + d)*mz^2*Pi^d*
           ((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 4*t^2)) + 
        (-1/2 + sw^2)^2*(4*sw^4*(d^2*(2*Pi)^d*s^3 + 2^(1 + d)*mz^2*Pi^d*
             ((8 - 6*d + d^2)*s^2 + 2*(4 - 5*d + d^2)*s*t - 4*t^2) + 
            2^(1 + d)*Pi^d*s*((4 - 3*d)*s^2 + (4 - 5*d + d^2)*s*t - 2*t^2)) - 
          ((3 - 4*sw^2)^2*(d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
              (-2*(-1 + d)*s^2 + (8 - 5*d + d^2)*s*t + 2*t^2) + 
             2^(1 + d)*mz^2*Pi^d*((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 4*
                t^2)))/4))*GaugeXi[Q] + 
      16*((sw^4*(3 - 4*sw^2)^2*(d^2*(2*Pi)^d*s^4 - 2^(2 + d)*mz^2*Pi^d*s*
            ((8 - 6*d + d^2)*s^2 + 2*(4 - 5*d + d^2)*s*t - 4*t^2) - 
           2^(1 + d)*Pi^d*s^2*((-4 + 3*d)*s^2 - (4 - 5*d + d^2)*s*t + 
             2*t^2) - mz^4*(-(d^2*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*
              ((4 - 3*d + d^2)*s^2 + (4 - 5*d + d^2)*s*t - 2*t^2))))/4 - 
        4*sw^8*(d^2*(2*Pi)^d*s^4 - 2^(1 + d)*Pi^d*s^2*(2*(-1 + d)*s^2 - 
            (8 - 5*d + d^2)*s*t - 2*t^2) - 2^(2 + d)*mz^2*Pi^d*s*
           ((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 4*t^2) - 
          mz^4*(-(d^2*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*((2 - 2*d + d^2)*s^2 + 
              (8 - 5*d + d^2)*s*t + 2*t^2))) + (-1/2 + sw^2)^2*
         (4*sw^4*(d^2*(2*Pi)^d*s^4 - 2^(2 + d)*mz^2*Pi^d*s*
             ((8 - 6*d + d^2)*s^2 + 2*(4 - 5*d + d^2)*s*t - 4*t^2) - 
            2^(1 + d)*Pi^d*s^2*((-4 + 3*d)*s^2 - (4 - 5*d + d^2)*s*t + 
              2*t^2) - mz^4*(-(d^2*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*(
                (4 - 3*d + d^2)*s^2 + (4 - 5*d + d^2)*s*t - 2*t^2))) - 
          ((3 - 4*sw^2)^2*(d^2*(2*Pi)^d*s^4 - 2^(1 + d)*Pi^d*s^2*
              (2*(-1 + d)*s^2 - (8 - 5*d + d^2)*s*t - 2*t^2) - 
             2^(2 + d)*mz^2*Pi^d*s*((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 
               4*t^2) - mz^4*(-(d^2*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*
                ((2 - 2*d + d^2)*s^2 + (8 - 5*d + d^2)*s*t + 2*t^2))))/4))*
       GaugeXi[Q]^2 - 2*mz^4*(9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
            3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
              64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
            d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
              80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
            256*sw^8)*t^2))*GaugeXi[Q]^3 + 
      mz^4*(-9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(18 - 120*sw^2 + 88*sw^4 + 320*sw^6 - 256*sw^8 + 
            d^2*(9 - 30*sw^2 + 48*sw^4) + 2*d*(-9 + 60*sw^2 - 70*sw^4 - 
              80*sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
            d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
              80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
            256*sw^8)*t^2))*GaugeXi[Q]^4))/(mz^2*Pi^(2*d)*(mz^2 - s)*s*sw^4*
     (-1 + sw^2)^2*(-1 + GaugeXi[Q])*(-s + mz^2*GaugeXi[Q])), 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, ((I/27)*2^(-2 - d)*EL^6*
     (s*(57*d^3 - 6*d^4 + d*(12 + 340*sw^2 - 544*sw^4) + 
        4*d^2*(-39 - 10*sw^2 + 16*sw^4) + 8*(39 - 80*sw^2 + 128*sw^4)) + 
      mz^2*(-33*d^3 + 3*d^4 - 12*d^2*(-9 - 5*sw^2 + 8*sw^4) - 
        24*(3 - 20*sw^2 + 32*sw^4) + 4*d*(-21 - 85*sw^2 + 136*sw^4)) - 
      2*(-36*d^3 + 3*d^4 + 8*(33 + 50*sw^2 - 80*sw^4) - 
        4*d^2*(-42 - 5*sw^2 + 8*sw^4) + 4*d*(-87 - 50*sw^2 + 80*sw^4))*t))/
    ((-4 + d)*Pi^d*s*sw^2*(-1 + sw^2)), 0, 
   ((I/27)*16^(-1 - d)*EL^6*(117*d^3*(2*Pi)^(3*d)*s^4 + 
      2^(1 + 3*d)*Pi^(3*d)*s^2*(-2*s^2*(-60 + 3*d^4 + 280*sw^2 - 448*sw^4 + 
          d^2*(78 + 55*sw^2 - 88*sw^4) + d*(-33 - 250*sw^2 + 400*sw^4)) + 
        s*(75*d^2 - 3*d^3 - 96*(-3 - 5*sw^2 + 8*sw^4) + 
          4*d*(-69 - 70*sw^2 + 112*sw^4))*t + 2*(-28 + 15*d)*
         (3 - 20*sw^2 + 32*sw^4)*t^2) + mz^4*(117*d^3*(2*Pi)^(3*d)*s^2 + 
        2^(1 + 3*d)*Pi^(3*d)*(-2*s^2*(-60 + 3*d^4 + 280*sw^2 - 448*sw^4 + 
            d^2*(78 + 55*sw^2 - 88*sw^4) + d*(-33 - 250*sw^2 + 400*sw^4)) + 
          s*(27*d^2 - 3*d^3 + d*(-84 + 40*sw^2 - 64*sw^4) + 
            32*(3 - 5*sw^2 + 8*sw^4))*t - 2*(-4 + d)*(3 - 20*sw^2 + 32*sw^4)*
           t^2)) + 2*mz^2*s*(-57*d^3*(2*Pi)^(3*d)*s^2 + 
        2^(1 + 3*d)*Pi^(3*d)*(s^2*(3*d^4 - 4*d^3*sw^2*(-5 + 8*sw^2) - 
            24*(9 - 10*sw^2 + 16*sw^4) + d^2*(48 - 50*sw^2 + 80*sw^4) + 
            2*d*(51 - 50*sw^2 + 80*sw^4)) + s*(69*d^3 - 6*d^4 + 
            d^2*(-327 + 80*sw^2 - 128*sw^4) - 96*(6 - 5*sw^2 + 8*sw^4) + 
            12*d*(59 - 30*sw^2 + 48*sw^4))*t - 2*(4 - 5*d + 2*d^2)*
           (3 - 20*sw^2 + 32*sw^4)*t^2)) + 2*(-57*d^3*(2*Pi)^(3*d)*s^4 + 
        2^(1 + 3*d)*Pi^(3*d)*s^2*(s^2*(3*d^4 + d^2*(72 + 50*sw^2 - 80*sw^4) - 
            24*(3 - 10*sw^2 + 16*sw^4) + 2*d*(-9 - 110*sw^2 + 176*sw^4)) + 
          s*(-51*d^2 + 3*d^3 + d*(180 + 120*sw^2 - 192*sw^4) + 
            32*(-6 - 5*sw^2 + 8*sw^4))*t - 2*(-12 + 7*d)*(3 - 20*sw^2 + 
            32*sw^4)*t^2) + mz^4*(-57*d^3*(2*Pi)^(3*d)*s^2 + 
          2^(1 + 3*d)*Pi^(3*d)*(s^2*(3*d^4 + d^2*(72 + 50*sw^2 - 80*sw^4) - 
              24*(3 - 10*sw^2 + 16*sw^4) + 2*d*(-9 - 110*sw^2 + 176*sw^4)) + 
            s*(-27*d^2 + 3*d^3 - 32*(3 - 5*sw^2 + 8*sw^4) + d*(84 - 40*sw^2 + 
                64*sw^4))*t + 2*(-4 + d)*(3 - 20*sw^2 + 32*sw^4)*t^2)) + 
        2*mz^2*s*(-3*d^3*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
           (2*s^2*(84 + 40*sw^2 - 64*sw^4 + 2*d^3*sw^2*(-5 + 8*sw^2) + 
              d^2*(18 + 55*sw^2 - 88*sw^4) + 3*d*(-25 - 30*sw^2 + 48*sw^4)) + 
            s*(-69*d^3 + 6*d^4 - 44*d*(15 - 10*sw^2 + 16*sw^4) + 
              16*(33 - 40*sw^2 + 64*sw^4) + d^2*(315 - 80*sw^2 + 128*sw^4))*
             t + 2*(12 - 9*d + 2*d^2)*(3 - 20*sw^2 + 32*sw^4)*t^2)))*
       GaugeXi[Q] + (-3*d^3*(2*Pi)^(3*d)*s^4 + 2^(1 + 3*d)*Pi^(3*d)*s^2*
         (-2*s^2*(-12 - 40*sw^2 + 64*sw^4 + d*(15 + 30*sw^2 - 48*sw^4) + 
            d^2*(-6 - 5*sw^2 + 8*sw^4)) + s*(27*d^2 - 3*d^3 + 
            d*(-84 + 40*sw^2 - 64*sw^4) + 32*(3 - 5*sw^2 + 8*sw^4))*t - 
          2*(-4 + d)*(3 - 20*sw^2 + 32*sw^4)*t^2) + 
        mz^4*(-3*d^3*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
           (-2*s^2*(-12 - 40*sw^2 + 64*sw^4 + d*(15 + 30*sw^2 - 48*sw^4) + 
              d^2*(-6 - 5*sw^2 + 8*sw^4)) + s*(27*d^2 - 3*d^3 + 
              d*(-84 + 40*sw^2 - 64*sw^4) + 32*(3 - 5*sw^2 + 8*sw^4))*t - 
            2*(-4 + d)*(3 - 20*sw^2 + 32*sw^4)*t^2)) - 
        2*mz^2*s*(-63*d^3*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
           (s^2*(3*d^4 + 4*d^3*sw^2*(-5 + 8*sw^2) + d^2*(120 + 170*sw^2 - 
                272*sw^4) + 40*(3 + 10*sw^2 - 16*sw^4) + 2*d*(-99 - 
                230*sw^2 + 368*sw^4)) + s*(-69*d^3 + 6*d^4 + 
              d*(-612 + 520*sw^2 - 832*sw^4) + 160*(3 - 5*sw^2 + 8*sw^4) + 
              d^2*(303 - 80*sw^2 + 128*sw^4))*t + 2*(20 - 13*d + 2*d^2)*
             (3 - 20*sw^2 + 32*sw^4)*t^2)))*GaugeXi[Q]^2))/
    ((-4 + d)*mz^2*Pi^(4*d)*(mz^2 - s)^2*s^2*sw^2*(-1 + sw^2)*
     (-1 + GaugeXi[Q])), 
   ((-I/432)*EL^6*(-((2^(3 - d)*s*(mz^3 - mz*s)^2*(-156 - 36*d^2 + 3*d^3 - 
          40*sw^2 + 64*sw^4 - 4*d*(-33 - 5*sw^2 + 8*sw^4))*
         ((-4 + d)*s - 2*t))/Pi^d) + (4^(1 - d)*(-3 + d)*mz^2*(mz^2 - s)*s*
        (-3*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
          (2*s^2*(-6 + 6*d^2 + 40*sw^2 - 64*sw^4 + 3*d*(-3 - 5*sw^2 + 8*
                sw^4)) + s*(-36*d^2 + 3*d^3 - 4*d*(-36 - 5*sw^2 + 8*sw^4) + 
             12*(-15 - 10*sw^2 + 16*sw^4))*t + 8*(3 - 20*sw^2 + 32*sw^4)*
            t^2) + mz^2*(-9*d^3*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (2*s*(6 - 6*d^2 + 3*d^3 - 40*sw^2 + 64*sw^4 + d*(9 + 15*sw^2 - 
                 24*sw^4)) + (156 + 36*d^2 - 3*d^3 + 40*sw^2 - 64*sw^4 + 4*d*
                (-33 - 5*sw^2 + 8*sw^4))*t))))/Pi^(2*d) + 
      (4^(1 - d)*(-3 + d)*mz^2*(mz^2 - s)*s*(-3*d^3*(2*Pi)^d*s^2 + 
         2^(1 + d)*Pi^d*(2*s^2*(-6 + 6*d^2 + 40*sw^2 - 64*sw^4 + 
             3*d*(-3 - 5*sw^2 + 8*sw^4)) + s*(-36*d^2 + 3*d^3 - 
             4*d*(-36 - 5*sw^2 + 8*sw^4) + 12*(-15 - 10*sw^2 + 16*sw^4))*t + 
           8*(3 - 20*sw^2 + 32*sw^4)*t^2) + mz^2*(3*d^3*(2*Pi)^d*s + 
           2^(1 + d)*Pi^d*(-2*s*(-6 + 6*d^2 + 40*sw^2 - 64*sw^4 + 3*d*
                (-3 - 5*sw^2 + 8*sw^4)) + (156 + 36*d^2 - 3*d^3 + 40*sw^2 - 
               64*sw^4 + 4*d*(-33 - 5*sw^2 + 8*sw^4))*t))))/Pi^(2*d) + 
      (4^(1 - d)*(-4 + d)*(mz^2 - s)^2*s*(-3*d^2*(2*Pi)^d*s^2 - 
         2^(1 + d)*Pi^d*(2*s^2*(3 + 10*sw^2 - 16*sw^4 + 
             d*(-3 - 5*sw^2 + 8*sw^4)) + s*(-15*d + 3*d^2 + 
             8*(3 - 5*sw^2 + 8*sw^4))*t + 2*(3 - 20*sw^2 + 32*sw^4)*t^2) + 
         mz^2*(3*d^3*(2*Pi)^d*s - 2^(1 + d)*Pi^d*
            (2*s*(12*d^2 + d*(-57 + 5*sw^2 - 8*sw^4) + 4*(21 - 5*sw^2 + 
                 8*sw^4)) + (156 + 36*d^2 - 3*d^3 + 40*sw^2 - 64*sw^4 + 4*d*
                (-33 - 5*sw^2 + 8*sw^4))*t))))/Pi^(2*d) + 
      (2^(1 - d)*(-4 + d)*(mz^2 - s)^2*s^2*((-4 + d)*mz^2 + d*s)*
        (-1 + 4*sw^2)*(-3 + 8*sw^2)*(-1 + GaugeXi[Q]))/Pi^d + 
      (2^(1 - d)*(-4 + d)*(mz^2 - s)^3*s*(s*(-6 + 3*d - 20*sw^2 + 32*sw^4) - 
         2*(3 - 20*sw^2 + 32*sw^4)*t)*(-1 + GaugeXi[Q]))/Pi^d - 
      ((-4 + d)*(mz^2 - s)^2*s*((-4 + d)*mz^2 + (-2 + d)*s)*
        (s*(-6 + 3*d - 20*sw^2 + 32*sw^4) - 2*(3 - 20*sw^2 + 32*sw^4)*t)*
        (-1 + GaugeXi[Q]))/(2*Pi)^d + ((-4 + d)*(mz^2 - s)^2*
        (3*d*s - 4*s*(3 - 5*sw^2 + 8*sw^4) - 2*(3 - 20*sw^2 + 32*sw^4)*t)*
        (mz^2*((-4 + d)*s + 2*t) + s*(d*s + 2*t))*(-1 + GaugeXi[Q]))/
       (2*Pi)^d - (2^(2 - d)*(-4 + d)*(mz^2 - s)^2*s*
        (s*(-6 + 3*d - 20*sw^2 + 32*sw^4)*t + 
         mz^2*(s*(-6 + 3*d - 20*sw^2 + 32*sw^4) + 3*d*t - 
           4*(3 - 5*sw^2 + 8*sw^4)*t))*(-1 + GaugeXi[Q]))/Pi^d - 
      (2^(1 - 4*d)*(-4 + d)*(-3 + d)*s*(mz^2 + s)*
        (mz^4*(2*Pi)^(3*d)*(-6 + 3*d - 20*sw^2 + 32*sw^4)*t + 
         (2*Pi)^(3*d)*s^2*(-6 + 3*d - 20*sw^2 + 32*sw^4)*t + 
         2^(1 + 3*d)*mz^2*Pi^(3*d)*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
             4*d*(-3 - 5*sw^2 + 8*sw^4)) + 3*s*(18 - 11*d + 2*d^2 - 20*sw^2 + 
             32*sw^4)*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2))*(-1 + GaugeXi[Q]))/
       Pi^(4*d) - ((-4 + d)*(mz^2 - s)*s*((-4 + d)*mz^2 + (-2 + d)*s)*
        (mz^2*(3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-3 - 10*sw^2 + 16*sw^4) + 
             (-3 + 20*sw^2 - 32*sw^4)*t)) + s*(-9*d*(2*Pi)^d*s + 
           2^(1 + d)*Pi^d*(s*(3 + 3*d + 10*sw^2 - 16*sw^4) + 
             (3 - 20*sw^2 + 32*sw^4)*t)))*(-1 + GaugeXi[Q]))/(2*Pi)^(2*d)))/
    ((-4 + d)*mz^2*(mz^2 - s)^2*s^2*sw^2*(-1 + sw^2)), 
   ((I/27)*2^(-3 - 2*d)*EL^6*t*(-3*d^3*(2*Pi)^d*s + 
      mz^2*(-3*d^3*(2*Pi)^d + 2^(1 + d)*Pi^d*(324 + 60*d^2 - 3*d^3 + 
          2*d*(-123 - 5*sw^2 + 8*sw^4))) + 2^(1 + d)*Pi^d*
       (s*(36 - 6*d^2 + 3*d^3 + 2*d*(-3 - 5*sw^2 + 8*sw^4)) + 
        4*(30 - 18*d + 3*d^2 - 20*sw^2 + 32*sw^4)*t)))/
    (Pi^(2*d)*s*sw^2*(-1 + sw^2)), ((I/27)*2^(-3 - 2*d)*EL^6*t*
     (-3*d^3*(2*Pi)^d*s^2 + mz^4*(-3*d^3*(2*Pi)^d + 2^(2 + d)*Pi^d*
         (-6 + 6*d^2 + 40*sw^2 - 64*sw^4 + 3*d*(-3 - 5*sw^2 + 8*sw^4))) + 
      2^(1 + d)*mz^2*Pi^d*(s*(-18*d^2 + 3*d^3 - 4*d*(-3 - 5*sw^2 + 8*sw^4) + 
          16*(3 - 5*sw^2 + 8*sw^4)) + 4*(30 - 18*d + 3*d^2 - 20*sw^2 + 
          32*sw^4)*t) + 2^(2 + d)*Pi^d*
       (s^2*(-6 + 6*d^2 + 40*sw^2 - 64*sw^4 + 3*d*(-3 - 5*sw^2 + 8*sw^4)) + 
        2*s*(-6 + 3*d - 20*sw^2 + 32*sw^4)*t + 4*(3 - 20*sw^2 + 32*sw^4)*
         t^2)))/(Pi^(2*d)*s*sw^2*(-1 + sw^2)), 
   ((I/27)*4^(-2 - d)*EL^6*(-9*d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
       (s^2*(-6 + 3*d^2 - 20*sw^2 + 32*sw^4 + d*(6 + 10*sw^2 - 16*sw^4)) + 
        s*(15*d - 3*d^2 - 8*(3 - 5*sw^2 + 8*sw^4))*t - 
        2*(3 - 20*sw^2 + 32*sw^4)*t^2) + 
      (2^(1 + d)*Pi^d*s*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
            4*d*(-3 - 5*sw^2 + 8*sw^4)) + 2*s*(-15*d + 3*d^2 + 
            8*(3 - 5*sw^2 + 8*sw^4))*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2) + 
        mz^2*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
           (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
            s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
            2*(3 - 20*sw^2 + 32*sw^4)*t^2)))*GaugeXi[Q] - 
      (9*d^2*(2*Pi)^d*s^3 - 2^(1 + d)*Pi^d*s*
         (s^2*(-6 + 3*d^2 - 20*sw^2 + 32*sw^4 + d*(6 + 10*sw^2 - 16*sw^4)) + 
          s*(15*d - 3*d^2 - 8*(3 - 5*sw^2 + 8*sw^4))*t - 
          2*(3 - 20*sw^2 + 32*sw^4)*t^2) + 2^(1 + d)*mz^2*Pi^d*
         (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
          2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          4*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[Q]^2 + 
      mz^2*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
          s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[Q]^3))/
    (mz^2*Pi^(2*d)*s^2*sw^2*(-1 + sw^2)*(-1 + GaugeXi[Q])*
     (-s + mz^2*GaugeXi[Q])), ((-I/27)*4^(-2 - d)*EL^6*
     (3*s^2*(d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(6 + d^2 + 20*sw^2 - 32*sw^4 + 2*d*(-3 - 5*sw^2 + 8*sw^4)) + 
          s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          2*(3 - 20*sw^2 + 32*sw^4)*t^2)) - 
      2*s*(3*d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
         (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
          s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          2*(3 - 20*sw^2 + 32*sw^4)*t^2) + 2^(1 + d)*mz^2*Pi^d*
         (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
          2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          4*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[Q] + 
      (-9*d^2*(2*Pi)^d*s^4 + 2^(1 + d)*Pi^d*s^2*
         (s^2*(-6 + 3*d^2 - 20*sw^2 + 32*sw^4 + d*(6 + 10*sw^2 - 16*sw^4)) + 
          s*(15*d - 3*d^2 - 8*(3 - 5*sw^2 + 8*sw^4))*t - 
          2*(3 - 20*sw^2 + 32*sw^4)*t^2) + 2^(2 + d)*mz^2*Pi^d*s*
         (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
          2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          4*(3 - 20*sw^2 + 32*sw^4)*t^2) + mz^4*(3*d^2*(2*Pi)^d*s^2 + 
          2^(1 + d)*Pi^d*(2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 
                8*sw^4)) + s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
            2*(3 - 20*sw^2 + 32*sw^4)*t^2)))*GaugeXi[Q]^2 - 
      2*mz^4*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
          s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[Q]^3 + 
      mz^4*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
          s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[Q]^4))/
    (mz^2*Pi^(2*d)*s^2*sw^2*(-1 + sw^2)*(-1 + GaugeXi[Q])*
     (-s + mz^2*GaugeXi[Q])), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, ((I/27)*2^(-5 - 2*d)*EL^6*(171*d^3*(2*Pi)^d*s + 
      mz^2*(9*(-11 + d)*d^3*(2*Pi)^d + 2^(2 + d)*Pi^d*
         (-33*d^3*sw^2*(-5 + 8*sw^2) + 3*d^4*sw^2*(-5 + 8*sw^2) + 
          d^2*(81 - 540*sw^2 + 786*sw^4 + 240*sw^6 - 192*sw^8) - 
          6*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8) + 
          d*(-63 + 420*sw^2 - 230*sw^4 - 1360*sw^6 + 1088*sw^8))) - 
      2^(1 + d)*Pi^d*(s*(-468 + 3120*sw^2 - 6656*sw^4 + 5120*sw^6 - 
          4096*sw^8 - 114*d^3*sw^2*(-5 + 8*sw^2) + 
          d^4*(9 - 60*sw^2 + 96*sw^4) + d^2*(234 - 1560*sw^2 + 2392*sw^4 + 
            320*sw^6 - 256*sw^8) + 2*d*(-9 + 60*sw^2 + 346*sw^4 - 1360*sw^6 + 
            1088*sw^8)) + (-36*d^3*(3 - 20*sw^2 + 32*sw^4) + 
          d^4*(9 - 60*sw^2 + 96*sw^4) - 8*d^2*(-63 + 420*sw^2 - 659*sw^4 - 
            40*sw^6 + 32*sw^8) + 4*d*(-261 + 1740*sw^2 - 2524*sw^4 - 
            800*sw^6 + 640*sw^8) - 8*(-99 + 660*sw^2 - 796*sw^4 - 800*sw^6 + 
            640*sw^8))*t)))/((-4 + d)*Pi^(2*d)*(mz^2 - s)*sw^4*
     (-1 + sw^2)^2), 0, ((-I/27)*2^(-7 - 4*d)*EL^6*
     (4^(3 + d)*(2 - d)*Pi^(2*d)*(mz^2 - s)*s*
       (4*sw^8*(d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*((4 + 6*d - 4*d^2)*s^2 - 
            (-60 + 48*d - 12*d^2 + d^3)*s*t - 8*t^2) + 
          mz^2*(-(d^3*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*((-4 - 6*d + 4*d^2)*s + 
              (-52 + 44*d - 12*d^2 + d^3)*t))) - 
        (sw^4*(3 - 4*sw^2)^2*(d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
            ((-4 + 9*d - 4*d^2)*s^2 - (-72 + 50*d - 12*d^2 + d^3)*s*t + 
             8*t^2) + mz^2*(-(d^3*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*
              ((4 - 9*d + 4*d^2)*s + (-56 + 46*d - 12*d^2 + d^3)*t))))/4 + 
        (-1/2 + sw^2)^2*(((3 - 4*sw^2)^2*(d^3*(2*Pi)^d*s^2 + 
             2^(1 + d)*Pi^d*((4 + 6*d - 4*d^2)*s^2 - (-60 + 48*d - 12*d^2 + 
                 d^3)*s*t - 8*t^2) + mz^2*(-(d^3*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*
                ((-4 - 6*d + 4*d^2)*s + (-52 + 44*d - 12*d^2 + d^3)*t))))/4 - 
          4*sw^4*(d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*((-4 + 9*d - 4*d^2)*s^2 - 
              (-72 + 50*d - 12*d^2 + d^3)*s*t + 8*t^2) + 
            mz^2*(-(d^3*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*((4 - 9*d + 4*d^2)*s + 
                (-56 + 46*d - 12*d^2 + d^3)*t)))))*(1 - GaugeXi[Q]) - 
      2^(2 + 3*d)*(-4 + d)*Pi^(3*d)*(mz^2 - s)^2*s^2*
       (-24*d^2*(3 - 20*sw^2 + 32*sw^4) + d^3*(9 - 60*sw^2 + 96*sw^4) - 
        12*d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 64*sw^8) + 
        8*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8))*(-1 + GaugeXi[Q]) - 
      8^(1 + d)*Pi^(3*d)*(mz^2 - s)^2*s*(-468 + 3120*sw^2 - 4784*sw^4 - 
        640*sw^6 + 512*sw^8 - 36*d^2*(3 - 20*sw^2 + 32*sw^4) + 
        d^3*(9 - 60*sw^2 + 96*sw^4) - 4*d*(-99 + 660*sw^2 - 1030*sw^4 - 
          80*sw^6 + 64*sw^8))*t*(-1 + GaugeXi[Q]) - 2^(3 + 2*d)*Pi^(2*d)*
       (mz^2 - s)^2*s*(9*d^3*(2*Pi)^d + 2^(2 + d)*Pi^d*(-117 + 780*sw^2 - 
          1196*sw^4 - 160*sw^6 + 128*sw^8 + 3*d^3*sw^2*(-5 + 8*sw^2) - 
          9*d^2*(3 - 20*sw^2 + 32*sw^4) + d*(99 - 660*sw^2 + 1030*sw^4 + 
            80*sw^6 - 64*sw^8)))*t*(-1 + GaugeXi[Q]) + 
      4^(1 + d)*(-4 + d)*Pi^(2*d)*(mz^2 - s)^2*s*(9*d^3*(2*Pi)^d*s + 
        2^(1 + d)*Pi^d*(2*s*(3*d^3*sw^2*(-5 + 8*sw^2) - 
            6*d^2*(3 - 20*sw^2 + 32*sw^4) - 3*d*(-9 + 60*sw^2 - 70*sw^4 - 
              80*sw^6 + 64*sw^8) + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
              256*sw^8)) + (468 - 3120*sw^2 + 4784*sw^4 + 640*sw^6 - 
            512*sw^8 + d^3*(-9 + 60*sw^2 - 96*sw^4) + 
            36*d^2*(3 - 20*sw^2 + 32*sw^4) + 4*d*(-99 + 660*sw^2 - 
              1030*sw^4 - 80*sw^6 + 64*sw^8))*t))*(-1 + GaugeXi[Q]) - 
      2^(1 + 3*d)*(-4 + d)*d*Pi^(3*d)*(mz^2 - s)^2*s^2*(1 - 4*sw^2 + 8*sw^4)*
       (9 - 24*sw^2 + 32*sw^4)*(-1 + GaugeXi[Q])^2 + 
      2^(1 + 3*d)*(-4 + d)*Pi^(3*d)*(mz^2 - s)^2*s*
       (d*(9 - 60*sw^2 + 96*sw^4) + 2*(-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 
          128*sw^8))*t*(-1 + GaugeXi[Q])^2 - 32*(2 - d)*(4 - d)*s*
       ((sw^4*(3 - 4*sw^2)^2*((-4 + d)*mz^4*t + (-4 + d)*s^2*t + 
           2*mz^2*((8 - 6*d + d^2)*s^2 + (12 - 11*d + 2*d^2)*s*t - 4*t^2)))/
         4 - 4*sw^8*((-2 + d)*mz^4*t + (-2 + d)*s^2*t + 
          2*mz^2*((-2 + d)^2*s^2 + (18 - 11*d + 2*d^2)*s*t + 4*t^2)) + 
        (-1/2 + sw^2)^2*(4*sw^4*((-4 + d)*mz^4*t + (-4 + d)*s^2*t + 
            2*mz^2*((8 - 6*d + d^2)*s^2 + (12 - 11*d + 2*d^2)*s*t - 4*t^2)) - 
          ((3 - 4*sw^2)^2*((-2 + d)*mz^4*t + (-2 + d)*s^2*t + 
             2*mz^2*((-2 + d)^2*s^2 + (18 - 11*d + 2*d^2)*s*t + 4*t^2)))/4))*
       ((2*Pi)^(3*d) - 2^(1 + 3*d)*Pi^(3*d)*GaugeXi[Q] + 
        (2*Pi)^(3*d)*GaugeXi[Q]^2) + (-4 + d)*(2*Pi)^(2*d)*(mz^2 - s)^2*s*
       (9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-9 - 30*(-2 + d)*sw^2 + 
            (-44 + 48*d)*sw^4 - 160*sw^6 + 128*sw^8) + 
          (-9 + 60*sw^2 - 200*sw^4 + 320*sw^6 - 256*sw^8)*t) - 
        2^(1 + d)*Pi^d*(d*s*(9 - 60*sw^2 + 96*sw^4) + 
          2*s*(-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 128*sw^8) - 
          2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t)*GaugeXi[Q] + 
        (9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-9 - 30*(-2 + d)*sw^2 + 
              (-44 + 48*d)*sw^4 - 160*sw^6 + 128*sw^8) + 
            (-9 + 60*sw^2 - 200*sw^4 + 320*sw^6 - 256*sw^8)*t))*
         GaugeXi[Q]^2) + (-4 + d)*(-2 + d)*(2*Pi)^(2*d)*(mz^2 - s)^2*s*
       (9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-9 - 30*(-2 + d)*sw^2 + 
            (-44 + 48*d)*sw^4 - 160*sw^6 + 128*sw^8) + 
          (-9 + 60*sw^2 - 200*sw^4 + 320*sw^6 - 256*sw^8)*t) - 
        2^(1 + d)*Pi^d*(d*s*(9 - 60*sw^2 + 96*sw^4) + 
          2*s*(-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 128*sw^8) - 
          2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t)*GaugeXi[Q] + 
        (9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-9 - 30*(-2 + d)*sw^2 + 
              (-44 + 48*d)*sw^4 - 160*sw^6 + 128*sw^8) + 
            (-9 + 60*sw^2 - 200*sw^4 + 320*sw^6 - 256*sw^8)*t))*
         GaugeXi[Q]^2) + (-4 + d)*(2*Pi)^(2*d)*(mz^2 - s)^2*s*
       (-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-9 + 60*sw^2 - 44*sw^4 - 
            160*sw^6 + 128*sw^8 + d*(9 - 30*sw^2 + 48*sw^4)) + 
          (-9 + 60*sw^2 - 200*sw^4 + 320*sw^6 - 256*sw^8)*t) - 
        2^(1 + d)*Pi^d*(d*s*(9 - 60*sw^2 + 96*sw^4) + 
          2*s*(-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 128*sw^8) - 
          2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t)*GaugeXi[Q] + 
        (-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-9 + 60*sw^2 - 44*sw^4 - 
              160*sw^6 + 128*sw^8 + d*(9 - 30*sw^2 + 48*sw^4)) + 
            (-9 + 60*sw^2 - 200*sw^4 + 320*sw^6 - 256*sw^8)*t))*
         GaugeXi[Q]^2) - (-4 + d)*(2*Pi)^(2*d)*(mz^2 - s)^2*(d*s + 2*t)*
       (9*d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(2*s*(9 + 15*(-4 + d)*sw^2 + 
            (122 - 24*d)*sw^4 - 80*sw^6 + 64*sw^8) + 
          (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t) - 
        2^(1 + d)*Pi^d*(d*s*(9 - 60*sw^2 + 96*sw^4) - 
          4*s*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8) - 
          2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t)*GaugeXi[Q] + 
        (9*d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(2*s*(9 + 15*(-4 + d)*sw^2 + 
              (122 - 24*d)*sw^4 - 80*sw^6 + 64*sw^8) + 
            (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t))*
         GaugeXi[Q]^2) + (-4 + d)*(-2 + d)*(2*Pi)^(2*d)*(mz^2 - s)*s*
       (-(s*(9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-9 - 30*(-2 + d)*sw^2 + 
               (-44 + 48*d)*sw^4 - 160*sw^6 + 128*sw^8) + 
             (-9 + 60*sw^2 - 200*sw^4 + 320*sw^6 - 256*sw^8)*t))) + 
        mz^2*(27*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
           (s*(-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 128*sw^8 + 
              d*(-9 - 30*sw^2 + 48*sw^4)) + (-9 + 60*sw^2 - 200*sw^4 + 
              320*sw^6 - 256*sw^8)*t)) - 2*(mz^2 - s)*(9*d*(2*Pi)^d*s + 
          2^(1 + d)*Pi^d*(s*(-9 - 30*(-2 + d)*sw^2 + (-44 + 48*d)*sw^4 - 
              160*sw^6 + 128*sw^8) + (-9 + 60*sw^2 - 200*sw^4 + 320*sw^6 - 
              256*sw^8)*t))*GaugeXi[Q] + 
        (-(s*(9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-9 - 30*(-2 + d)*sw^2 + 
                 (-44 + 48*d)*sw^4 - 160*sw^6 + 128*sw^8) + (-9 + 60*sw^2 - 
                 200*sw^4 + 320*sw^6 - 256*sw^8)*t))) + 
          mz^2*(27*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-9 + 60*sw^2 - 44*sw^4 - 
                160*sw^6 + 128*sw^8 + d*(-9 - 30*sw^2 + 48*sw^4)) + 
              (-9 + 60*sw^2 - 200*sw^4 + 320*sw^6 - 256*sw^8)*t)))*
         GaugeXi[Q]^2)))/((-4 + d)*mz^2*Pi^(4*d)*(mz^2 - s)^3*s*sw^4*
     (-1 + sw^2)^2*(-1 + GaugeXi[Q])), 
   ((-I/27)*2^(-7 - 4*d)*EL^6*(-(2^(7 + 2*d)*(3 - d)*mz^2*Pi^(2*d)*s*
        (mz^3 - mz*s)^2*(4*sw^8*(d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
            ((4 + 6*d - 4*d^2)*s^2 - (-60 + 48*d - 12*d^2 + d^3)*s*t - 
             8*t^2) + mz^2*(-(d^3*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*
              ((-4 - 6*d + 4*d^2)*s + (-52 + 44*d - 12*d^2 + d^3)*t))) - 
         (sw^4*(3 - 4*sw^2)^2*(d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
             ((-4 + 9*d - 4*d^2)*s^2 - (-72 + 50*d - 12*d^2 + d^3)*s*t + 
              8*t^2) + mz^2*(-(d^3*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(
                (4 - 9*d + 4*d^2)*s + (-56 + 46*d - 12*d^2 + d^3)*t))))/4 + 
         (-1/2 + sw^2)^2*(((3 - 4*sw^2)^2*(d^3*(2*Pi)^d*s^2 + 
              2^(1 + d)*Pi^d*((4 + 6*d - 4*d^2)*s^2 - (-60 + 48*d - 12*d^2 + 
                  d^3)*s*t - 8*t^2) + mz^2*(-(d^3*(2*Pi)^d*s) + 2^(1 + d)*
                 Pi^d*((-4 - 6*d + 4*d^2)*s + (-52 + 44*d - 12*d^2 + d^3)*
                   t))))/4 - 4*sw^4*(d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
              ((-4 + 9*d - 4*d^2)*s^2 - (-72 + 50*d - 12*d^2 + d^3)*s*t + 8*
                t^2) + mz^2*(-(d^3*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*
                ((4 - 9*d + 4*d^2)*s + (-56 + 46*d - 12*d^2 + d^3)*t)))))*
        (1 - GaugeXi[Q])) - 2^(2 + 3*d)*mz^4*Pi^(3*d)*(mz^2 - s)^3*s*
       (-468 + 3120*sw^2 - 4784*sw^4 - 640*sw^6 + 512*sw^8 - 
        36*d^2*(3 - 20*sw^2 + 32*sw^4) + d^3*(9 - 60*sw^2 + 96*sw^4) - 
        4*d*(-99 + 660*sw^2 - 1030*sw^4 - 80*sw^6 + 64*sw^8))*
       ((-4 + d)*s - 2*t)*(-1 + GaugeXi[Q]) + 4^(1 + d)*mz^4*Pi^(2*d)*
       (mz^2 - s)^3*s*(-9*d^3*(2*Pi)^d + 2^(2 + d)*Pi^d*
         (117 - 780*sw^2 + 1196*sw^4 + 160*sw^6 - 128*sw^8 - 
          3*d^3*sw^2*(-5 + 8*sw^2) + 9*d^2*(3 - 20*sw^2 + 32*sw^4) + 
          d*(-99 + 660*sw^2 - 1030*sw^4 - 80*sw^6 + 64*sw^8)))*
       ((-4 + d)*s - 2*t)*(-1 + GaugeXi[Q]) + 4^(1 + d)*(-4 + d)*Pi^(2*d)*
       (mz^2 - s)*s*(mz^3 - mz*s)^2*(-9*d^2*(2*Pi)^d*s^2 - 
        2^(1 + d)*Pi^d*(2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
            3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
              64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
            d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
              80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
            256*sw^8)*t^2) + mz^2*(9*d^3*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
           (2*s*(3*d^3*sw^2*(-5 + 8*sw^2) - 12*d^2*(3 - 20*sw^2 + 32*sw^4) - 
              4*(63 - 420*sw^2 + 698*sw^4 - 80*sw^6 + 64*sw^8) + 
              d*(171 - 1140*sw^2 + 1850*sw^4 - 80*sw^6 + 64*sw^8)) + 
            (-468 + 3120*sw^2 - 4784*sw^4 - 640*sw^6 + 512*sw^8 - 
              36*d^2*(3 - 20*sw^2 + 32*sw^4) + d^3*(9 - 60*sw^2 + 96*sw^4) - 
              4*d*(-99 + 660*sw^2 - 1030*sw^4 - 80*sw^6 + 64*sw^8))*t)))*
       (-1 + GaugeXi[Q]) + 2^(1 + 3*d)*(-4 + d)*mz^2*Pi^(3*d)*(mz^2 - s)^3*
       s^2*((-4 + d)*mz^2 + d*s)*(1 - 4*sw^2 + 8*sw^4)*
       (9 - 24*sw^2 + 32*sw^4)*(-1 + GaugeXi[Q])^2 - 
      4^(1 + d)*(-4 + d)*Pi^(2*d)*(mz^2 - s)*s*(mz^3 - mz*s)^2*
       (s*(9*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(-9 - 30*(-2 + d)*sw^2 + 
            (-44 + 48*d)*sw^4 - 160*sw^6 + 128*sw^8))*t + 
        mz^2*(9*d*(2*Pi)^d*(s + t) + 2^(1 + d)*Pi^d*
           (s*(-9 - 30*(-2 + d)*sw^2 + (-44 + 48*d)*sw^4 - 160*sw^6 + 
              128*sw^8) - 2*(9 + 15*(-4 + d)*sw^2 + (122 - 24*d)*sw^4 - 
              80*sw^6 + 64*sw^8)*t)))*(-1 + GaugeXi[Q])^2 + 
      32*(3 - d)*(4 - d)*mz^2*(mz^2 - s)*s*(mz^2 + s)*
       ((sw^4*(3 - 4*sw^2)^2*((-4 + d)*mz^4*t + (-4 + d)*s^2*t + 
           2*mz^2*((8 - 6*d + d^2)*s^2 + (12 - 11*d + 2*d^2)*s*t - 4*t^2)))/
         4 - 4*sw^8*((-2 + d)*mz^4*t + (-2 + d)*s^2*t + 
          2*mz^2*((-2 + d)^2*s^2 + (18 - 11*d + 2*d^2)*s*t + 4*t^2)) + 
        (-1/2 + sw^2)^2*(4*sw^4*((-4 + d)*mz^4*t + (-4 + d)*s^2*t + 
            2*mz^2*((8 - 6*d + d^2)*s^2 + (12 - 11*d + 2*d^2)*s*t - 4*t^2)) - 
          ((3 - 4*sw^2)^2*((-2 + d)*mz^4*t + (-2 + d)*s^2*t + 
             2*mz^2*((-2 + d)^2*s^2 + (18 - 11*d + 2*d^2)*s*t + 4*t^2)))/4))*
       ((2*Pi)^(3*d) - 2^(1 + 3*d)*Pi^(3*d)*GaugeXi[Q] + 
        (2*Pi)^(3*d)*GaugeXi[Q]^2) + (-4 + d)*mz^2*(2*Pi)^(2*d)*(mz^2 - s)^4*
       s*(9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
         (s*(-9 - 30*(-2 + d)*sw^2 + (-44 + 48*d)*sw^4 - 160*sw^6 + 
            128*sw^8) + (-9 + 60*sw^2 - 200*sw^4 + 320*sw^6 - 256*sw^8)*t) - 
        2^(1 + d)*Pi^d*(d*s*(9 - 60*sw^2 + 96*sw^4) + 
          2*s*(-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 128*sw^8) - 
          2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t)*GaugeXi[Q] + 
        (9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-9 - 30*(-2 + d)*sw^2 + 
              (-44 + 48*d)*sw^4 - 160*sw^6 + 128*sw^8) + 
            (-9 + 60*sw^2 - 200*sw^4 + 320*sw^6 - 256*sw^8)*t))*
         GaugeXi[Q]^2) - (-4 + d)*(2*Pi)^(2*d)*(mz^2 - s)*s*
       ((-4 + d)*mz^2 + (-2 + d)*s)*(mz^3 - mz*s)^2*(9*d*(2*Pi)^d*s + 
        2^(1 + d)*Pi^d*(s*(-9 - 30*(-2 + d)*sw^2 + (-44 + 48*d)*sw^4 - 
            160*sw^6 + 128*sw^8) + (-9 + 60*sw^2 - 200*sw^4 + 320*sw^6 - 
            256*sw^8)*t) - 2^(1 + d)*Pi^d*(d*s*(9 - 60*sw^2 + 96*sw^4) + 
          2*s*(-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 128*sw^8) - 
          2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t)*GaugeXi[Q] + 
        (9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-9 - 30*(-2 + d)*sw^2 + 
              (-44 + 48*d)*sw^4 - 160*sw^6 + 128*sw^8) + 
            (-9 + 60*sw^2 - 200*sw^4 + 320*sw^6 - 256*sw^8)*t))*
         GaugeXi[Q]^2) + (-4 + d)*mz^2*(2*Pi)^(2*d)*(mz^2 - s)^4*s*
       (-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-9 + 60*sw^2 - 44*sw^4 - 
            160*sw^6 + 128*sw^8 + d*(9 - 30*sw^2 + 48*sw^4)) + 
          (-9 + 60*sw^2 - 200*sw^4 + 320*sw^6 - 256*sw^8)*t) - 
        2^(1 + d)*Pi^d*(d*s*(9 - 60*sw^2 + 96*sw^4) + 
          2*s*(-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 128*sw^8) - 
          2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t)*GaugeXi[Q] + 
        (-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-9 + 60*sw^2 - 44*sw^4 - 
              160*sw^6 + 128*sw^8 + d*(9 - 30*sw^2 + 48*sw^4)) + 
            (-9 + 60*sw^2 - 200*sw^4 + 320*sw^6 - 256*sw^8)*t))*
         GaugeXi[Q]^2) + (-4 + d)*(2*Pi)^(2*d)*(mz^2 - s)*(mz^3 - mz*s)^2*
       (mz^2*((-4 + d)*s + 2*t) + s*(d*s + 2*t))*(9*d*(2*Pi)^d*s - 
        2^(1 + d)*Pi^d*(2*s*(9 + 15*(-4 + d)*sw^2 + (122 - 24*d)*sw^4 - 
            80*sw^6 + 64*sw^8) + (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
            256*sw^8)*t) - 2^(1 + d)*Pi^d*(d*s*(9 - 60*sw^2 + 96*sw^4) - 
          4*s*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8) - 
          2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t)*GaugeXi[Q] + 
        (9*d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(2*s*(9 + 15*(-4 + d)*sw^2 + 
              (122 - 24*d)*sw^4 - 80*sw^6 + 64*sw^8) + 
            (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t))*
         GaugeXi[Q]^2) + (-4 + d)*(2*Pi)^(2*d)*s*((-4 + d)*mz^2 + (-2 + d)*s)*
       (mz^3 - mz*s)^2*(s*(9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
           (s*(-9 - 30*(-2 + d)*sw^2 + (-44 + 48*d)*sw^4 - 160*sw^6 + 
              128*sw^8) + (-9 + 60*sw^2 - 200*sw^4 + 320*sw^6 - 256*sw^8)*
             t)) + mz^2*(-27*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
           (s*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + d*(9 + 30*sw^2 - 
                48*sw^4)) + (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*
             t)) + 2*(mz^2 - s)*(9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
           (s*(-9 - 30*(-2 + d)*sw^2 + (-44 + 48*d)*sw^4 - 160*sw^6 + 
              128*sw^8) + (-9 + 60*sw^2 - 200*sw^4 + 320*sw^6 - 256*sw^8)*t))*
         GaugeXi[Q] + (s*(9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
             (s*(-9 - 30*(-2 + d)*sw^2 + (-44 + 48*d)*sw^4 - 160*sw^6 + 
                128*sw^8) + (-9 + 60*sw^2 - 200*sw^4 + 320*sw^6 - 256*sw^8)*
               t)) + mz^2*(-27*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
             (s*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
                d*(9 + 30*sw^2 - 48*sw^4)) + (9 - 60*sw^2 + 200*sw^4 - 
                320*sw^6 + 256*sw^8)*t)))*GaugeXi[Q]^2)))/
    ((-4 + d)*mz^2*Pi^(4*d)*(mz^2 - s)^2*s*(mz^3 - mz*s)^2*sw^4*(-1 + sw^2)^2*
     (-1 + GaugeXi[Q])), ((I/27)*4^(-3 - d)*EL^6*t*(-9*d^3*(2*Pi)^d*s + 
      mz^2*(-9*d^3*(2*Pi)^d + 2^(1 + d)*Pi^d*
         (-9*d^3*(1 - 10*sw^2 + 16*sw^4) + 324*(3 - 20*sw^2 + 32*sw^4) + 
          60*d^2*(3 - 20*sw^2 + 32*sw^4) + 2*d*(-369 + 2460*sw^2 - 
            3910*sw^4 - 80*sw^6 + 64*sw^8))) + 2^(1 + d)*Pi^d*
       (s*(36*(3 - 20*sw^2 + 32*sw^4) - 6*d^2*(3 - 20*sw^2 + 32*sw^4) + 
          d^3*(9 - 30*sw^2 + 48*sw^4) + 2*d*(-9 + 60*sw^2 - 70*sw^4 - 
            80*sw^6 + 64*sw^8)) + 4*(90 - 600*sw^2 + 1064*sw^4 - 320*sw^6 + 
          256*sw^8 - 18*d*(3 - 20*sw^2 + 32*sw^4) + 
          d^2*(9 - 60*sw^2 + 96*sw^4))*t)))/(Pi^(2*d)*(mz^2 - s)*sw^4*
     (-1 + sw^2)^2), ((I/27)*4^(-3 - d)*EL^6*t*(-9*d^3*(2*Pi)^d*s^2 - 
      mz^4*(-9*d^3*(2*Pi)^d + 2^(1 + d)*Pi^d*
         (-12*d^2*(3 - 20*sw^2 + 32*sw^4) + d^3*(9 - 30*sw^2 + 48*sw^4) - 
          6*d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 64*sw^8) + 
          4*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8))) + 
      2^(2 + d)*Pi^d*(s^2*(-3*d^3*sw^2*(-5 + 8*sw^2) + 
          6*d^2*(3 - 20*sw^2 + 32*sw^4) + 3*d*(-9 + 60*sw^2 - 70*sw^4 - 
            80*sw^6 + 64*sw^8) - 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
            256*sw^8)) + 2*s*(d*(9 - 60*sw^2 + 96*sw^4) + 
          2*(-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 128*sw^8))*t + 
        4*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^2) + 
      2*mz^2*(9*d^3*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
         (s*(6*d^3*sw^2*(-5 + 8*sw^2) - 9*d^2*(3 - 20*sw^2 + 32*sw^4) - 
            2*d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 64*sw^8) + 
            8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8)) + 
          2*(90 - 600*sw^2 + 1064*sw^4 - 320*sw^6 + 256*sw^8 - 
            18*d*(3 - 20*sw^2 + 32*sw^4) + d^2*(9 - 60*sw^2 + 96*sw^4))*t))))/
    (Pi^(2*d)*(mz^2 - s)*sw^4*(-1 + sw^2)^2), 
   ((I/27)*2^(-7 - 2*d)*EL^6*(9*d^2*(2*Pi)^d*s^4 + 2^(1 + d)*Pi^d*s^2*
       (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
          3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
            64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
          d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 
            64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*
         t^2) - 2*s*(mz^2 + s)*(9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
            3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
              64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
            d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
              80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
            256*sw^8)*t^2))*GaugeXi[Q] + 
      (9*d^2*(2*Pi)^d*s^4 + 2^(1 + d)*Pi^d*s^2*
         (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
            3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
              64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
            d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
              80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
            256*sw^8)*t^2) + 4*mz^2*s*(9*d^2*(2*Pi)^d*s^2 + 
          2^(1 + d)*Pi^d*(2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 
              128*sw^8 + 3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 
                70*sw^4 - 80*sw^6 + 64*sw^8)) + 
            s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + d^2*(9 - 60*sw^2 + 96*sw^4) + 
              8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8))*t + 
            2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^2)) + 
        mz^4*(27*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
           (s^2*(18 - 120*sw^2 + 88*sw^4 + 320*sw^6 - 256*sw^8 + 
              d^2*(-9 - 30*sw^2 + 48*sw^4) + 2*d*(-9 + 60*sw^2 - 70*sw^4 - 
                80*sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
              d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
                80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 
              320*sw^6 + 256*sw^8)*t^2)))*GaugeXi[Q]^2 - 
      2*mz^2*(mz^2 + s)*(9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
            3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
              64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
            d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
              80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
            256*sw^8)*t^2))*GaugeXi[Q]^3 + 
      mz^4*(27*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(18 - 120*sw^2 + 88*sw^4 + 320*sw^6 - 256*sw^8 + 
            d^2*(-9 - 30*sw^2 + 48*sw^4) + 2*d*(-9 + 60*sw^2 - 70*sw^4 - 
              80*sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
            d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
              80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
            256*sw^8)*t^2))*GaugeXi[Q]^4))/(mz^2*Pi^(2*d)*(mz^2 - s)*s*sw^4*
     (-1 + sw^2)^2*(-1 + GaugeXi[Q])*(s - mz^2*GaugeXi[Q])^2), 
   ((-I/27)*2^(-7 - 2*d)*EL^6*
     (-3*(9*d^2*(2*Pi)^d*s^4 + 2^(1 + d)*Pi^d*s^2*
         (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
            3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
              64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
            d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
              80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
            256*sw^8)*t^2)) + 2*s*(2*mz^2 + s)*(9*d^2*(2*Pi)^d*s^2 + 
        2^(1 + d)*Pi^d*(2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
            3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
              64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
            d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
              80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
            256*sw^8)*t^2))*GaugeXi[Q] - 
      (4*mz^2*s*(9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
           (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
              3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 
                80*sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
              d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
                80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 
              320*sw^6 + 256*sw^8)*t^2)) - s^2*(9*d^2*(2*Pi)^d*s^2 + 
          2^(1 + d)*Pi^d*(2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 
              128*sw^8 + 3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 
                70*sw^4 - 80*sw^6 + 64*sw^8)) + 
            s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + d^2*(9 - 60*sw^2 + 96*sw^4) + 
              8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8))*t + 
            2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^2)) + 
        mz^4*(27*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
           (s^2*(18 - 120*sw^2 + 88*sw^4 + 320*sw^6 - 256*sw^8 + 
              d^2*(-9 - 30*sw^2 + 48*sw^4) + 2*d*(-9 + 60*sw^2 - 70*sw^4 - 
                80*sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
              d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
                80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 
              320*sw^6 + 256*sw^8)*t^2)))*GaugeXi[Q]^2 + 
      2*mz^4*(9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
            3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
              64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
            d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
              80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
            256*sw^8)*t^2))*GaugeXi[Q]^3 - 
      mz^4*(27*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(18 - 120*sw^2 + 88*sw^4 + 320*sw^6 - 256*sw^8 + 
            d^2*(-9 - 30*sw^2 + 48*sw^4) + 2*d*(-9 + 60*sw^2 - 70*sw^4 - 
              80*sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
            d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
              80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
            256*sw^8)*t^2))*GaugeXi[Q]^4))/(mz^2*Pi^(2*d)*(mz^2 - s)*s*sw^4*
     (-1 + sw^2)^2*(-1 + GaugeXi[Q])*(s - mz^2*GaugeXi[Q])), 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, ((I/27)*2^(-5 - 2*d)*EL^6*(9*d^3*(2*Pi)^d*s + 
      2^(1 + d)*Pi^d*(2*s*(3*d^3*sw^2*(-5 + 8*sw^2) - 
          6*d^2*(3 - 20*sw^2 + 32*sw^4) - 3*d*(-9 + 60*sw^2 - 70*sw^4 - 
            80*sw^6 + 64*sw^8) + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
            256*sw^8)) + (-468 + 3120*sw^2 - 4784*sw^4 - 640*sw^6 + 
          512*sw^8 - 36*d^2*(3 - 20*sw^2 + 32*sw^4) + 
          d^3*(9 - 60*sw^2 + 96*sw^4) - 4*d*(-99 + 660*sw^2 - 1030*sw^4 - 
            80*sw^6 + 64*sw^8))*t)))/(Pi^(2*d)*s*sw^4*(-1 + sw^2)^2), 0, 
   ((I/27)*2^(-7 - d)*EL^6*(s^2*(d^2*(9 - 60*sw^2 + 96*sw^4) + 
        4*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8) + 
        4*d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 64*sw^8)) + 
      2*s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + d^2*(9 - 60*sw^2 + 96*sw^4) + 
        8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8))*t + 
      4*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^2)*
     (-mz^2 + s + mz^2*GaugeXi[Q]))/((-1 + d)*mz^4*Pi^d*s^2*sw^4*
     (-1 + sw^2)^2), 0, ((-I/27)*2^(-5 - d)*EL^6*t*
     (-4*mz^2*(-468 + 3120*sw^2 - 4784*sw^4 - 640*sw^6 + 512*sw^8 - 
        36*d^2*(3 - 20*sw^2 + 32*sw^4) + d^3*(9 - 60*sw^2 + 96*sw^4) - 
        4*d*(-99 + 660*sw^2 - 1030*sw^4 - 80*sw^6 + 64*sw^8)) + 
      s*(72*(3 - 20*sw^2 + 32*sw^4) - 12*d^2*(3 - 20*sw^2 + 32*sw^4) + 
        d^3*(9 - 60*sw^2 + 96*sw^4) + 4*d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
          64*sw^8)) + 8*(90 - 600*sw^2 + 1064*sw^4 - 320*sw^6 + 256*sw^8 - 
        18*d*(3 - 20*sw^2 + 32*sw^4) + d^2*(9 - 60*sw^2 + 96*sw^4))*t))/
    (Pi^d*s*sw^4*(-1 + sw^2)^2), 0, 
   ((-I/27)*2^(-3 - 2*d)*EL^6*
     (-(sw^4*(3 - 4*sw^2)^2*(-3*d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
           ((-4 + 3*d + d^2)*s^2 - (4 - 5*d + d^2)*s*t + 2*t^2) + 
          mz^2*(-(d^2*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*((-4 + 3*d)*s^2 - 
              (4 - 5*d + d^2)*s*t + 2*t^2))))/4 - 
      4*sw^8*(3*d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
         (-((-2 + 2*d + d^2)*s^2) + (8 - 5*d + d^2)*s*t + 2*t^2) + 
        mz^2*(d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*(-2*(-1 + d)*s^2 + 
            (8 - 5*d + d^2)*s*t + 2*t^2))) + (-1/2 + sw^2)^2*
       (4*sw^4*(3*d^2*(2*Pi)^d*s^3 - 2^(1 + d)*Pi^d*s*((-4 + 3*d + d^2)*s^2 - 
            (4 - 5*d + d^2)*s*t + 2*t^2) + mz^2*(d^2*(2*Pi)^d*s^2 + 
            2^(1 + d)*Pi^d*((4 - 3*d)*s^2 + (4 - 5*d + d^2)*s*t - 2*t^2))) + 
        ((3 - 4*sw^2)^2*(-3*d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
            ((-2 + 2*d + d^2)*s^2 - (8 - 5*d + d^2)*s*t - 2*t^2) + 
           mz^2*(-(d^2*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*(2*(-1 + d)*s^2 - 
               (8 - 5*d + d^2)*s*t - 2*t^2))))/4) - 
      ((sw^4*(3 - 4*sw^2)^2*(2^(1 + d)*Pi^d*s*((8 - 6*d + d^2)*s^2 + 
             2*(4 - 5*d + d^2)*s*t - 4*t^2) + 3*mz^2*(-(d^2*(2*Pi)^d*s^2) + 
             2^(1 + d)*Pi^d*((4 - 3*d + d^2)*s^2 + (4 - 5*d + d^2)*s*t - 2*
                t^2))))/4 - 4*sw^8*(2^(1 + d)*Pi^d*s*((-2 + d)^2*s^2 + 
            2*(8 - 5*d + d^2)*s*t + 4*t^2) + 3*mz^2*(-(d^2*(2*Pi)^d*s^2) + 
            2^(1 + d)*Pi^d*((2 - 2*d + d^2)*s^2 + (8 - 5*d + d^2)*s*t + 
              2*t^2))) + (-1/2 + sw^2)^2*
         (4*sw^4*(2^(1 + d)*Pi^d*s*((8 - 6*d + d^2)*s^2 + 2*(4 - 5*d + d^2)*s*
               t - 4*t^2) + 3*mz^2*(-(d^2*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*(
                (4 - 3*d + d^2)*s^2 + (4 - 5*d + d^2)*s*t - 2*t^2))) - 
          ((3 - 4*sw^2)^2*(2^(1 + d)*Pi^d*s*((-2 + d)^2*s^2 + 2*(8 - 5*d + 
                 d^2)*s*t + 4*t^2) + 3*mz^2*(-(d^2*(2*Pi)^d*s^2) + 2^(1 + d)*
                Pi^d*((2 - 2*d + d^2)*s^2 + (8 - 5*d + d^2)*s*t + 2*t^2))))/
           4))*GaugeXi[Q] + 
      ((sw^4*(3 - 4*sw^2)^2*(3*d^2*(2*Pi)^d*s^3 - 2^(1 + d)*Pi^d*s*
            ((-4 + 3*d + d^2)*s^2 - (4 - 5*d + d^2)*s*t + 2*t^2) + 
           mz^2*(d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*((12 - 9*d + d^2)*s^2 + 3*
                (4 - 5*d + d^2)*s*t - 6*t^2))))/4 - 
        4*sw^8*(3*d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
           (-((-2 + 2*d + d^2)*s^2) + (8 - 5*d + d^2)*s*t + 2*t^2) + 
          mz^2*(d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*((6 - 6*d + d^2)*s^2 + 
              3*(8 - 5*d + d^2)*s*t + 6*t^2))) + (-1/2 + sw^2)^2*
         (4*sw^4*(3*d^2*(2*Pi)^d*s^3 - 2^(1 + d)*Pi^d*s*
             ((-4 + 3*d + d^2)*s^2 - (4 - 5*d + d^2)*s*t + 2*t^2) + 
            mz^2*(d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*((12 - 9*d + d^2)*s^2 + 
                3*(4 - 5*d + d^2)*s*t - 6*t^2))) - 
          ((3 - 4*sw^2)^2*(3*d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
              (-((-2 + 2*d + d^2)*s^2) + (8 - 5*d + d^2)*s*t + 2*t^2) + 
             mz^2*(d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*((6 - 6*d + d^2)*s^2 + 
                 3*(8 - 5*d + d^2)*s*t + 6*t^2))))/4))*GaugeXi[Q]^2 + 
      (mz^2*(-99*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
          (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
             3*d^2*(9 - 5*sw^2 + 8*sw^4) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*
                sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
             d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*
                sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
             256*sw^8)*t^2))*GaugeXi[Q]^3)/16))/((-1 + d)*mz^4*Pi^(2*d)*s^2*
     sw^4*(-1 + sw^2)^2*(-1 + GaugeXi[Q])^2), 0, 
   ((I/27)*2^(-7 - 4*d)*EL^6*
     (-((2*Pi)^(3*d)*s*(4*(-1 + d)*mz^4 - 4*d*mz^2*s + d*s^2)*
        (1 - 4*sw^2 + 8*sw^4)*(9 - 24*sw^2 + 32*sw^4)*(-1 + GaugeXi[Q])^2) + 
      2^(2 + 3*d)*(-1 + d)*mz^4*Pi^(3*d)*(-468 + 3120*sw^2 - 4784*sw^4 - 
        640*sw^6 + 512*sw^8 - 36*d^2*(3 - 20*sw^2 + 32*sw^4) + 
        d^3*(9 - 60*sw^2 + 96*sw^4) - 4*d*(-99 + 660*sw^2 - 1030*sw^4 - 
          80*sw^6 + 64*sw^8))*(s + 2*t)*(-1 + GaugeXi[Q])^2 + 
      4^(1 + d)*(-1 + d)*mz^4*Pi^(2*d)*(9*d^3*(2*Pi)^d + 
        2^(2 + d)*Pi^d*(-117 + 780*sw^2 - 1196*sw^4 - 160*sw^6 + 128*sw^8 + 
          3*d^3*sw^2*(-5 + 8*sw^2) - 9*d^2*(3 - 20*sw^2 + 32*sw^4) + 
          d*(99 - 660*sw^2 + 1030*sw^4 + 80*sw^6 - 64*sw^8)))*(s + 2*t)*
       (-1 + GaugeXi[Q])^2 + (-1 + d)*(2*Pi)^(2*d)*(2*mz^2 - s)*
       (2^(1 + d)*mz^2*Pi^d*(d*s*(9 - 60*sw^2 + 96*sw^4) + 
          2*s*(-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 128*sw^8) - 
          2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t) - 
        s*(9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-9 - 30*(-2 + d)*sw^2 + 
              (-44 + 48*d)*sw^4 - 160*sw^6 + 128*sw^8) + 
            (-9 + 60*sw^2 - 200*sw^4 + 320*sw^6 - 256*sw^8)*t)))*
       (-1 + GaugeXi[Q])^2 + 32*(1 - d)*
       ((sw^4*(3 - 4*sw^2)^2*((-4 + d)*(2*Pi)^(3*d)*s^2*t - 
           2^(1 + 3*d)*mz^4*Pi^(3*d)*((-108 + 75*d - 16*d^2 + d^3)*s + 
             2*(-55 + 46*d - 12*d^2 + d^3)*t) + 2^(2 + 3*d)*mz^2*Pi^(3*d)*
            ((8 - 6*d + d^2)*s^2 + (12 - 11*d + 2*d^2)*s*t - 4*t^2)))/4 - 
        4*sw^8*((-2 + d)*(2*Pi)^(3*d)*s^2*t - 2^(1 + 3*d)*mz^4*Pi^(3*d)*
           ((-114 + 77*d - 16*d^2 + d^3)*s + 2*(-53 + 44*d - 12*d^2 + d^3)*
             t) + 2^(2 + 3*d)*mz^2*Pi^(3*d)*((-2 + d)^2*s^2 + 
            (18 - 11*d + 2*d^2)*s*t + 4*t^2)) + (-1/2 + sw^2)^2*
         (4*sw^4*((-4 + d)*(2*Pi)^(3*d)*s^2*t - 2^(1 + 3*d)*mz^4*Pi^(3*d)*
             ((-108 + 75*d - 16*d^2 + d^3)*s + 2*(-55 + 46*d - 12*d^2 + d^3)*
               t) + 2^(2 + 3*d)*mz^2*Pi^(3*d)*((8 - 6*d + d^2)*s^2 + 
              (12 - 11*d + 2*d^2)*s*t - 4*t^2)) - 
          ((3 - 4*sw^2)^2*((-2 + d)*(2*Pi)^(3*d)*s^2*t - 2^(1 + 3*d)*mz^4*
              Pi^(3*d)*((-114 + 77*d - 16*d^2 + d^3)*s + 2*(-53 + 44*d - 
                 12*d^2 + d^3)*t) + 2^(2 + 3*d)*mz^2*Pi^(3*d)*
              ((-2 + d)^2*s^2 + (18 - 11*d + 2*d^2)*s*t + 4*t^2)))/4))*
       (-1 + GaugeXi[Q])^2 + (2*Pi)^(2*d)*s*(4*(-1 + d)*mz^4 - 4*d*mz^2*s + 
        d*s^2)*(1 - 4*sw^2 + 8*sw^4)*(9 - 24*sw^2 + 32*sw^4)*
       (-(2*Pi)^d + 2^(1 + d)*Pi^d*GaugeXi[Q] - (2*Pi)^d*GaugeXi[Q]^2) - 
      (2*Pi)^(2*d)*(4*(-1 + d)*mz^4 - 4*mz^2*(d*s + 2*t) + s*(d*s + 2*t))*
       (9*d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(2*s*(9 + 15*(-4 + d)*sw^2 + 
            (122 - 24*d)*sw^4 - 80*sw^6 + 64*sw^8) + 
          (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t) - 
        2^(1 + d)*Pi^d*(d*s*(9 - 60*sw^2 + 96*sw^4) - 
          4*s*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8) - 
          2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t)*GaugeXi[Q] + 
        (9*d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(2*s*(9 + 15*(-4 + d)*sw^2 + 
              (122 - 24*d)*sw^4 - 80*sw^6 + 64*sw^8) + 
            (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t))*
         GaugeXi[Q]^2) + (-1 + d)*(2*Pi)^(2*d)*(2*mz^2 - s)*
       (2^(1 + d)*mz^2*Pi^d*(d*s*(9 - 60*sw^2 + 96*sw^4) + 
          2*s*(-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 128*sw^8) - 
          2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t) - 
        s*(27*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-9 + 60*sw^2 - 44*sw^4 - 
              160*sw^6 + 128*sw^8 + d*(-9 - 30*sw^2 + 48*sw^4)) + 
            (-9 + 60*sw^2 - 200*sw^4 + 320*sw^6 - 256*sw^8)*t)) - 
        2*(2^(1 + d)*mz^2*Pi^d*(d*s*(9 - 60*sw^2 + 96*sw^4) + 
            2*s*(-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 128*sw^8) - 
            2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t) - 
          s*(9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-9 - 30*(-2 + d)*sw^2 + 
                (-44 + 48*d)*sw^4 - 160*sw^6 + 128*sw^8) + (-9 + 60*sw^2 - 
                200*sw^4 + 320*sw^6 - 256*sw^8)*t)))*GaugeXi[Q] + 
        (2^(1 + d)*mz^2*Pi^d*(d*s*(9 - 60*sw^2 + 96*sw^4) + 
            2*s*(-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 128*sw^8) - 
            2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t) - 
          s*(27*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-9 + 60*sw^2 - 44*sw^4 - 
                160*sw^6 + 128*sw^8 + d*(-9 - 30*sw^2 + 48*sw^4)) + 
              (-9 + 60*sw^2 - 200*sw^4 + 320*sw^6 - 256*sw^8)*t)))*
         GaugeXi[Q]^2)))/(mz^4*Pi^(4*d)*(s - d*s)*sw^4*(-1 + sw^2)^2*
     (-1 + GaugeXi[Q])^2), ((I/27)*2^(-5 - d)*EL^6*
     (2*mz^2*s*(-24*d^2*(3 - 20*sw^2 + 32*sw^4) + 
        d^3*(9 - 60*sw^2 + 96*sw^4) - 12*d*(-9 + 60*sw^2 - 70*sw^4 - 
          80*sw^6 + 64*sw^8) + 8*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
          256*sw^8)) - s^2*(-24*d^2*(3 - 20*sw^2 + 32*sw^4) + 
        d^3*(9 - 60*sw^2 + 96*sw^4) - 12*d*(-9 + 60*sw^2 - 70*sw^4 - 
          80*sw^6 + 64*sw^8) + 8*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
          256*sw^8)) + 8*s*(d*(9 - 60*sw^2 + 96*sw^4) + 
        2*(-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 128*sw^8))*t + 
      16*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^2))/
    (Pi^d*s*sw^4*(-1 + sw^2)^2), 
   ((I/27)*EL^6*((sw^4*(3 - 4*sw^2)^2*(2^(2 + d)*(-4 + d)*mz^2*Pi^d*t*
          ((-2 - 2*d + d^2)*s + 4*(-2 + d)*t) + 2^(1 + d)*(-4 + d)*mz^4*Pi^d*
          ((2 - 4*d + d^2)*s - 2*(14 - 8*d + d^2)*t) + 
         t*(-(d^3*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*((4 - 9*d + 4*d^2)*s^2 + 
             4*(-4 + d)*s*t - 8*t^2))))/4 - 
      4*sw^8*(2^(2 + d)*mz^2*Pi^d*t*((16 + 4*d - 6*d^2 + d^3)*s + 
          4*(10 - 6*d + d^2)*t) + 2^(1 + d)*mz^4*Pi^d*
         ((8 + 12*d - 8*d^2 + d^3)*s - 2*(-52 + 44*d - 12*d^2 + d^3)*t) + 
        t*(-(d^3*(2*Pi)^d*s^2) + 2^(2 + d)*Pi^d*((-2 - 3*d + 2*d^2)*s^2 + 
            2*(-2 + d)*s*t + 4*t^2))) + (-1/2 + sw^2)^2*
       (4*sw^4*(2^(2 + d)*(-4 + d)*mz^2*Pi^d*t*((-2 - 2*d + d^2)*s + 
            4*(-2 + d)*t) + 2^(1 + d)*(-4 + d)*mz^4*Pi^d*((2 - 4*d + d^2)*s - 
            2*(14 - 8*d + d^2)*t) + t*(-(d^3*(2*Pi)^d*s^2) + 
            2^(1 + d)*Pi^d*((4 - 9*d + 4*d^2)*s^2 + 4*(-4 + d)*s*t - 
              8*t^2))) - ((3 - 4*sw^2)^2*(2^(2 + d)*mz^2*Pi^d*t*
            ((16 + 4*d - 6*d^2 + d^3)*s + 4*(10 - 6*d + d^2)*t) + 
           2^(1 + d)*mz^4*Pi^d*((8 + 12*d - 8*d^2 + d^3)*s - 
             2*(-52 + 44*d - 12*d^2 + d^3)*t) + t*(-(d^3*(2*Pi)^d*s^2) + 
             2^(2 + d)*Pi^d*((-2 - 3*d + 2*d^2)*s^2 + 2*(-2 + d)*s*t + 4*
                t^2))))/4)))/(2^(2*(1 + d))*Pi^(2*d)*s*sw^4*(-1 + sw^2)^2), 
   ((I/27)*2^(-3 - 2*d)*EL^6*
     (-(s*(27*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
           (s^2*(18 - 120*sw^2 + 88*sw^4 + 320*sw^6 - 256*sw^8 + 
              d^2*(-9 - 30*sw^2 + 48*sw^4) + 2*d*(-9 + 60*sw^2 - 70*sw^4 - 
                80*sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
              d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
                80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 
              320*sw^6 + 256*sw^8)*t^2)))/16 - 
      2*((sw^4*(3 - 4*sw^2)^2*(d^2*(2*Pi)^d*s^3 + 2^(1 + d)*mz^2*Pi^d*
            ((8 - 6*d + d^2)*s^2 + 2*(4 - 5*d + d^2)*s*t - 4*t^2) + 
           2^(1 + d)*Pi^d*s*((4 - 3*d)*s^2 + (4 - 5*d + d^2)*s*t - 2*t^2)))/
         4 - 4*sw^8*(d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*(-2*(-1 + d)*s^2 + 
            (8 - 5*d + d^2)*s*t + 2*t^2) + 2^(1 + d)*mz^2*Pi^d*
           ((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 4*t^2)) + 
        (-1/2 + sw^2)^2*(4*sw^4*(d^2*(2*Pi)^d*s^3 + 2^(1 + d)*mz^2*Pi^d*
             ((8 - 6*d + d^2)*s^2 + 2*(4 - 5*d + d^2)*s*t - 4*t^2) + 
            2^(1 + d)*Pi^d*s*((4 - 3*d)*s^2 + (4 - 5*d + d^2)*s*t - 2*t^2)) - 
          ((3 - 4*sw^2)^2*(d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
              (-2*(-1 + d)*s^2 + (8 - 5*d + d^2)*s*t + 2*t^2) + 
             2^(1 + d)*mz^2*Pi^d*((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 4*
                t^2)))/4))*GaugeXi[Q] + 
      ((sw^4*(3 - 4*sw^2)^2*(3*d^2*(2*Pi)^d*s^3 + 2^(3 + d)*mz^2*Pi^d*
            ((8 - 6*d + d^2)*s^2 + 2*(4 - 5*d + d^2)*s*t - 4*t^2) - 
           2^(1 + d)*Pi^d*s*((-4 + 3*d + d^2)*s^2 - (4 - 5*d + d^2)*s*t + 
             2*t^2)))/4 - 4*sw^8*(3*d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
           (-((-2 + 2*d + d^2)*s^2) + (8 - 5*d + d^2)*s*t + 2*t^2) + 
          2^(3 + d)*mz^2*Pi^d*((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 
            4*t^2)) + (-1/2 + sw^2)^2*(4*sw^4*(3*d^2*(2*Pi)^d*s^3 + 
            2^(3 + d)*mz^2*Pi^d*((8 - 6*d + d^2)*s^2 + 2*(4 - 5*d + d^2)*s*
               t - 4*t^2) - 2^(1 + d)*Pi^d*s*((-4 + 3*d + d^2)*s^2 - 
              (4 - 5*d + d^2)*s*t + 2*t^2)) - 
          ((3 - 4*sw^2)^2*(3*d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
              (-((-2 + 2*d + d^2)*s^2) + (8 - 5*d + d^2)*s*t + 2*t^2) + 
             2^(3 + d)*mz^2*Pi^d*((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 4*
                t^2)))/4))*GaugeXi[Q]^2 + 
      (mz^2*(9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
          (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
             3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
               64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
             d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*
                sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
             256*sw^8)*t^2))*GaugeXi[Q]^3)/4))/((-1 + d)*mz^4*Pi^(2*d)*s*sw^4*
     (-1 + sw^2)^2*(-1 + GaugeXi[Q])^2), 
   ((-I/27)*2^(-3 - 2*d)*EL^6*(4*sw^8*(3*d^2*(2*Pi)^d*s^3 + 
        2^(1 + d)*Pi^d*s*(-((-2 + 2*d + d^2)*s^2) + (8 - 5*d + d^2)*s*t + 
          2*t^2) + mz^2*(-5*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
           (2*(-1 + d + d^2)*s^2 - (8 - 5*d + d^2)*s*t - 2*t^2))) - 
      (sw^4*(3 - 4*sw^2)^2*(3*d^2*(2*Pi)^d*s^3 - 2^(1 + d)*Pi^d*s*
          ((-4 + 3*d + d^2)*s^2 - (4 - 5*d + d^2)*s*t + 2*t^2) + 
         mz^2*(-5*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*((-4 + 3*d + 2*d^2)*s^2 - 
             (4 - 5*d + d^2)*s*t + 2*t^2))))/4 - (-1/2 + sw^2)^2*
       (4*sw^4*(3*d^2*(2*Pi)^d*s^3 - 2^(1 + d)*Pi^d*s*((-4 + 3*d + d^2)*s^2 - 
            (4 - 5*d + d^2)*s*t + 2*t^2) - mz^2*(5*d^2*(2*Pi)^d*s^2 + 
            2^(1 + d)*Pi^d*((4 - 3*d - 2*d^2)*s^2 + (4 - 5*d + d^2)*s*t - 
              2*t^2))) + ((3 - 4*sw^2)^2*(-3*d^2*(2*Pi)^d*s^3 + 
           2^(1 + d)*Pi^d*s*((-2 + 2*d + d^2)*s^2 - (8 - 5*d + d^2)*s*t - 
             2*t^2) + mz^2*(5*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
              (-2*(-1 + d + d^2)*s^2 + (8 - 5*d + d^2)*s*t + 2*t^2))))/4) + 
      ((sw^4*(3 - 4*sw^2)^2*(2^(1 + d)*Pi^d*s*((8 - 6*d + d^2)*s^2 + 
             2*(4 - 5*d + d^2)*s*t - 4*t^2) + mz^2*(7*d^2*(2*Pi)^d*s^2 + 
             2^(1 + d)*Pi^d*((-12 + 9*d - 5*d^2)*s^2 - 3*(4 - 5*d + d^2)*s*
                t + 6*t^2))))/4 - 4*sw^8*(2^(1 + d)*Pi^d*s*
           ((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 4*t^2) - 
          mz^2*(-7*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*((6 - 6*d + 5*d^2)*s^2 + 
              3*(8 - 5*d + d^2)*s*t + 6*t^2))) + (-1/2 + sw^2)^2*
         (4*sw^4*(2^(1 + d)*Pi^d*s*((8 - 6*d + d^2)*s^2 + 2*(4 - 5*d + d^2)*s*
               t - 4*t^2) + mz^2*(7*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*(
                (-12 + 9*d - 5*d^2)*s^2 - 3*(4 - 5*d + d^2)*s*t + 6*t^2))) - 
          ((3 - 4*sw^2)^2*(2^(1 + d)*Pi^d*s*((-2 + d)^2*s^2 + 2*(8 - 5*d + 
                 d^2)*s*t + 4*t^2) - mz^2*(-7*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*
                Pi^d*((6 - 6*d + 5*d^2)*s^2 + 3*(8 - 5*d + d^2)*s*t + 
                 6*t^2))))/4))*GaugeXi[Q] + 
      (4*sw^8*(3*d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
           (-((-2 + 2*d + d^2)*s^2) + (8 - 5*d + d^2)*s*t + 2*t^2) + 
          mz^2*(-5*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*((-6 + 6*d + d^2)*s^2 - 
              3*(8 - 5*d + d^2)*s*t - 6*t^2))) - 
        (sw^4*(3 - 4*sw^2)^2*(3*d^2*(2*Pi)^d*s^3 - 2^(1 + d)*Pi^d*s*
            ((-4 + 3*d + d^2)*s^2 - (4 - 5*d + d^2)*s*t + 2*t^2) + 
           mz^2*(-5*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*((-12 + 9*d + d^2)*
                s^2 - 3*(4 - 5*d + d^2)*s*t + 6*t^2))))/4 + 
        (-1/2 + sw^2)^2*(((3 - 4*sw^2)^2*(3*d^2*(2*Pi)^d*s^3 + 
             2^(1 + d)*Pi^d*s*(-((-2 + 2*d + d^2)*s^2) + (8 - 5*d + d^2)*s*
                t + 2*t^2) + mz^2*(-5*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
                ((-6 + 6*d + d^2)*s^2 - 3*(8 - 5*d + d^2)*s*t - 6*t^2))))/4 - 
          4*sw^4*(3*d^2*(2*Pi)^d*s^3 - 2^(1 + d)*Pi^d*s*
             ((-4 + 3*d + d^2)*s^2 - (4 - 5*d + d^2)*s*t + 2*t^2) + 
            mz^2*(-5*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*((-12 + 9*d + d^2)*
                 s^2 - 3*(4 - 5*d + d^2)*s*t + 6*t^2)))))*GaugeXi[Q]^2 + 
      (mz^2*(-63*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
          (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
             3*d^2*(6 - 5*sw^2 + 8*sw^4) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*
                sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
             d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*
                sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
             256*sw^8)*t^2))*GaugeXi[Q]^3)/16))/((-1 + d)*mz^4*Pi^(2*d)*s^2*
     sw^4*(-1 + sw^2)^2*(-1 + GaugeXi[Q])^2), 
   ((-I/27)*2^(-7 - 4*d)*EL^6*(-((2*Pi)^(3*d)*s^2*(1 - 4*sw^2 + 8*sw^4)*
        (9 - 24*sw^2 + 32*sw^4)*(-1 + GaugeXi[Q])^2*(d*(mz^2 - s)^2 + 
         2*((-2 + d)*mz^4 - d*mz^2*s)*GaugeXi[Q] + d*mz^4*GaugeXi[Q]^2)) - 
      (2*Pi)^(2*d)*s^2*(1 - 4*sw^2 + 8*sw^4)*(9 - 24*sw^2 + 32*sw^4)*
       (d*(mz^2 - s)^2 + 2*((-2 + d)*mz^4 - d*mz^2*s)*GaugeXi[Q] + 
        d*mz^4*GaugeXi[Q]^2)*((2*Pi)^d - 2^(1 + d)*Pi^d*GaugeXi[Q] + 
        (2*Pi)^d*GaugeXi[Q]^2) + (-1 + d)*(2*Pi)^(2*d)*s*
       (mz^2 - s + mz^2*GaugeXi[Q])^2*(9*d*(2*Pi)^d*s + 
        2^(1 + d)*Pi^d*(s*(-9 - 30*(-2 + d)*sw^2 + (-44 + 48*d)*sw^4 - 
            160*sw^6 + 128*sw^8) + (-9 + 60*sw^2 - 200*sw^4 + 320*sw^6 - 
            256*sw^8)*t) - 2^(1 + d)*Pi^d*(d*s*(9 - 60*sw^2 + 96*sw^4) + 
          2*s*(-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 128*sw^8) - 
          2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t)*GaugeXi[Q] + 
        (9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-9 - 30*(-2 + d)*sw^2 + 
              (-44 + 48*d)*sw^4 - 160*sw^6 + 128*sw^8) + 
            (-9 + 60*sw^2 - 200*sw^4 + 320*sw^6 - 256*sw^8)*t))*
         GaugeXi[Q]^2) - (2*Pi)^(2*d)*((mz^2 - s)^2*(d*s + 2*t) + 
        2*(mz^4*((-2 + d)*s - 2*t) - mz^2*s*(d*s + 2*t))*GaugeXi[Q] + 
        mz^4*(d*s + 2*t)*GaugeXi[Q]^2)*(9*d*(2*Pi)^d*s - 
        2^(1 + d)*Pi^d*(2*s*(9 + 15*(-4 + d)*sw^2 + (122 - 24*d)*sw^4 - 
            80*sw^6 + 64*sw^8) + (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
            256*sw^8)*t) - 2^(1 + d)*Pi^d*(d*s*(9 - 60*sw^2 + 96*sw^4) - 
          4*s*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8) - 
          2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t)*GaugeXi[Q] + 
        (9*d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(2*s*(9 + 15*(-4 + d)*sw^2 + 
              (122 - 24*d)*sw^4 - 80*sw^6 + 64*sw^8) + 
            (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t))*
         GaugeXi[Q]^2) + (-1 + d)*(2*Pi)^(2*d)*s*(-mz^2 + s - 
        mz^2*GaugeXi[Q])*(s*(27*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
           (s*(-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 128*sw^8 + 
              d*(-9 - 30*sw^2 + 48*sw^4)) + (-9 + 60*sw^2 - 200*sw^4 + 
              320*sw^6 - 256*sw^8)*t)) + mz^2*(-45*d*(2*Pi)^d*s + 
          2^(1 + d)*Pi^d*(s*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 - 
              6*d*(-3 - 5*sw^2 + 8*sw^4)) + (9 - 60*sw^2 + 200*sw^4 - 
              320*sw^6 + 256*sw^8)*t)) + 
        (-(2^(1 + d)*Pi^d*s*(d*s*(9 - 60*sw^2 + 96*sw^4) + 
             2*s*(-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 128*sw^8) - 
             2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t)) + 
          mz^2*(-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-9 + 60*sw^2 - 44*sw^4 - 
                160*sw^6 + 128*sw^8 + d*(9 - 30*sw^2 + 48*sw^4)) + 
              (-9 + 60*sw^2 - 200*sw^4 + 320*sw^6 - 256*sw^8)*t)))*
         GaugeXi[Q] + (mz^2*(-45*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
             (s*(-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 128*sw^8 + 
                3*d*(9 - 10*sw^2 + 16*sw^4)) + (-9 + 60*sw^2 - 200*sw^4 + 
                320*sw^6 - 256*sw^8)*t)) + s*(27*d*(2*Pi)^d*s + 
            2^(1 + d)*Pi^d*(s*(-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 128*sw^8 + 
                d*(-9 - 30*sw^2 + 48*sw^4)) + (-9 + 60*sw^2 - 200*sw^4 + 
                320*sw^6 - 256*sw^8)*t)))*GaugeXi[Q]^2 - 
        mz^2*(9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
           (s*(-9 - 30*(-2 + d)*sw^2 + (-44 + 48*d)*sw^4 - 160*sw^6 + 
              128*sw^8) + (-9 + 60*sw^2 - 200*sw^4 + 320*sw^6 - 256*sw^8)*t))*
         GaugeXi[Q]^3) + 32*(1 - d)*s*
       ((2*Pi)^(3*d)*((sw^4*(3 - 4*sw^2)^2*((-4 + d)*mz^4*t + 
             (-4 + d)*s^2*t + 2*mz^2*((8 - 6*d + d^2)*s^2 + (12 - 11*d + 
                 2*d^2)*s*t - 4*t^2)))/4 - 4*sw^8*((-2 + d)*mz^4*t + 
            (-2 + d)*s^2*t + 2*mz^2*((-2 + d)^2*s^2 + (18 - 11*d + 2*d^2)*s*
               t + 4*t^2)) + (-1/2 + sw^2)^2*
           (4*sw^4*((-4 + d)*mz^4*t + (-4 + d)*s^2*t + 2*mz^2*(
                (8 - 6*d + d^2)*s^2 + (12 - 11*d + 2*d^2)*s*t - 4*t^2)) - 
            ((3 - 4*sw^2)^2*((-2 + d)*mz^4*t + (-2 + d)*s^2*t + 2*mz^2*
                ((-2 + d)^2*s^2 + (18 - 11*d + 2*d^2)*s*t + 4*t^2)))/4)) - 
        2^(1 + 3*d)*Pi^(3*d)*((sw^4*(3 - 4*sw^2)^2*((-4 + d)*s^2*t + 
             mz^4*((-4 + d)*s + 2*(-3 + d)*t) + mz^2*(2*(8 - 6*d + d^2)*s^2 + 
               (20 - 21*d + 4*d^2)*s*t - 8*t^2)))/4 - 
          4*sw^8*((-2 + d)*s^2*t + mz^4*((-2 + d)*s + 2*(-3 + d)*t) + 
            mz^2*(2*(-2 + d)^2*s^2 + (34 - 21*d + 4*d^2)*s*t + 8*t^2)) + 
          (-1/2 + sw^2)^2*(4*sw^4*((-4 + d)*s^2*t + mz^4*((-4 + d)*s + 
                2*(-3 + d)*t) + mz^2*(2*(8 - 6*d + d^2)*s^2 + 
                (20 - 21*d + 4*d^2)*s*t - 8*t^2)) - 
            ((3 - 4*sw^2)^2*((-2 + d)*s^2*t + mz^4*((-2 + d)*s + 2*(-3 + d)*
                  t) + mz^2*(2*(-2 + d)^2*s^2 + (34 - 21*d + 4*d^2)*s*t + 
                 8*t^2)))/4))*GaugeXi[Q] + (2*Pi)^(3*d)*
         ((sw^4*(3 - 4*sw^2)^2*((-4 + d)*s^2*t + 2*mz^4*(2*(-4 + d)*s + 
               (-8 + 3*d)*t) + 2*mz^2*((8 - 6*d + d^2)*s^2 + (4 - 9*d + 
                 2*d^2)*s*t - 4*t^2)))/4 - 4*sw^8*((-2 + d)*s^2*t + 
            mz^4*(4*(-2 + d)*s + 2*(-10 + 3*d)*t) + 2*mz^2*((-2 + d)^2*s^2 + 
              (14 - 9*d + 2*d^2)*s*t + 4*t^2)) + (-1/2 + sw^2)^2*
           (4*sw^4*((-4 + d)*s^2*t + 2*mz^4*(2*(-4 + d)*s + (-8 + 3*d)*t) + 
              2*mz^2*((8 - 6*d + d^2)*s^2 + (4 - 9*d + 2*d^2)*s*t - 4*t^2)) - 
            ((3 - 4*sw^2)^2*((-2 + d)*s^2*t + mz^4*(4*(-2 + d)*s + 
                 2*(-10 + 3*d)*t) + 2*mz^2*((-2 + d)^2*s^2 + 
                 (14 - 9*d + 2*d^2)*s*t + 4*t^2)))/4))*GaugeXi[Q]^2 + 
        8^(-1 + d)*mz^2*Pi^(3*d)*(s*(d*(9 - 60*sw^2 + 96*sw^4) + 
            2*(-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 128*sw^8))*t + 
          mz^2*(d*s*(9 - 60*sw^2 + 96*sw^4) + 2*s*(-9 + 60*sw^2 - 44*sw^4 - 
              160*sw^6 + 128*sw^8) + 6*(-3 + d)*(3 - 20*sw^2 + 32*sw^4)*t))*
         GaugeXi[Q]^3 - 2^(-4 + 3*d)*mz^4*Pi^(3*d)*
         (d*(9 - 60*sw^2 + 96*sw^4) + 2*(-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 
            128*sw^8))*t*GaugeXi[Q]^4)))/((1 - d)*mz^4*Pi^(4*d)*sw^4*
     (-1 + sw^2)^2*(s - s*GaugeXi[Q])^2), 
   ((I/27)*2^(-3 - 2*d)*EL^6*
     ((sw^4*(3 - 4*sw^2)^2*(3*d^2*(2*Pi)^d*s^3 - 2^(1 + d)*Pi^d*s*
          ((-4 + 3*d + d^2)*s^2 - (4 - 5*d + d^2)*s*t + 2*t^2) + 
         mz^2*(-7*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*((4 - 3*d + 4*d^2)*s^2 + 
             (4 - 5*d + d^2)*s*t - 2*t^2))))/4 - 
      4*sw^8*(3*d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
         (-((-2 + 2*d + d^2)*s^2) + (8 - 5*d + d^2)*s*t + 2*t^2) + 
        mz^2*(-7*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*((2 - 2*d + 4*d^2)*s^2 + 
            (8 - 5*d + d^2)*s*t + 2*t^2))) + (-1/2 + sw^2)^2*
       (4*sw^4*(3*d^2*(2*Pi)^d*s^3 - 2^(1 + d)*Pi^d*s*((-4 + 3*d + d^2)*s^2 - 
            (4 - 5*d + d^2)*s*t + 2*t^2) + mz^2*(-7*d^2*(2*Pi)^d*s^2 + 
            2^(1 + d)*Pi^d*((4 - 3*d + 4*d^2)*s^2 + (4 - 5*d + d^2)*s*t - 
              2*t^2))) - ((3 - 4*sw^2)^2*(3*d^2*(2*Pi)^d*s^3 + 
           2^(1 + d)*Pi^d*s*(-((-2 + 2*d + d^2)*s^2) + (8 - 5*d + d^2)*s*t + 
             2*t^2) + mz^2*(-7*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
              ((2 - 2*d + 4*d^2)*s^2 + (8 - 5*d + d^2)*s*t + 2*t^2))))/4) - 
      (sw^4*(3 - 4*sw^2)^2*(2^(1 + d)*Pi^d*s*((8 - 6*d + d^2)*s^2 + 
           2*(4 - 5*d + d^2)*s*t - 4*t^2) - mz^2*(-5*d^2*(2*Pi)^d*s^2 + 
           2^(1 + d)*Pi^d*((-12 + 9*d + d^2)*s^2 - 3*(4 - 5*d + d^2)*s*t + 
             6*t^2)))*GaugeXi[Q])/4 + 
      4*sw^8*(2^(1 + d)*Pi^d*s*((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 
          4*t^2) + mz^2*(5*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
           (-((-6 + 6*d + d^2)*s^2) + 3*(8 - 5*d + d^2)*s*t + 6*t^2)))*
       GaugeXi[Q] + (-1/2 + sw^2)^2*
       (((3 - 4*sw^2)^2*(2^(1 + d)*Pi^d*s*((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*
              s*t + 4*t^2) - mz^2*(-5*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
              ((-6 + 6*d + d^2)*s^2 - 3*(8 - 5*d + d^2)*s*t - 6*t^2))))/4 - 
        4*sw^4*(2^(1 + d)*Pi^d*s*((8 - 6*d + d^2)*s^2 + 2*(4 - 5*d + d^2)*s*
             t - 4*t^2) + mz^2*(5*d^2*(2*Pi)^d*s^2 - 2^(1 + d)*Pi^d*
             ((-12 + 9*d + d^2)*s^2 - 3*(4 - 5*d + d^2)*s*t + 6*t^2))))*
       GaugeXi[Q] + ((sw^4*(3 - 4*sw^2)^2*(3*d^2*(2*Pi)^d*s^3 - 
           2^(1 + d)*Pi^d*s*((-4 + 3*d + d^2)*s^2 - (4 - 5*d + d^2)*s*t + 
             2*t^2) + mz^2*(-7*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
              ((12 - 9*d + 5*d^2)*s^2 + 3*(4 - 5*d + d^2)*s*t - 6*t^2))))/4 - 
        4*sw^8*(3*d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
           (-((-2 + 2*d + d^2)*s^2) + (8 - 5*d + d^2)*s*t + 2*t^2) + 
          mz^2*(-7*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*((6 - 6*d + 5*d^2)*s^2 + 
              3*(8 - 5*d + d^2)*s*t + 6*t^2))) + (-1/2 + sw^2)^2*
         (4*sw^4*(3*d^2*(2*Pi)^d*s^3 - 2^(1 + d)*Pi^d*s*
             ((-4 + 3*d + d^2)*s^2 - (4 - 5*d + d^2)*s*t + 2*t^2) - 
            mz^2*(7*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*((-12 + 9*d - 5*d^2)*
                 s^2 - 3*(4 - 5*d + d^2)*s*t + 6*t^2))) - 
          ((3 - 4*sw^2)^2*(3*d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
              (-((-2 + 2*d + d^2)*s^2) + (8 - 5*d + d^2)*s*t + 2*t^2) + 
             mz^2*(-7*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*((6 - 6*d + 5*d^2)*
                  s^2 + 3*(8 - 5*d + d^2)*s*t + 6*t^2))))/4))*GaugeXi[Q]^2 + 
      (mz^2*(45*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
          (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
             3*d^2*(-3 - 5*sw^2 + 8*sw^4) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*
                sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
             d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*
                sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
             256*sw^8)*t^2))*GaugeXi[Q]^3)/16))/((-1 + d)*mz^4*Pi^(2*d)*s^2*
     sw^4*(-1 + sw^2)^2*(-1 + GaugeXi[Q])^2), 
   ((-I/27)*2^(-7 - 4*d)*EL^6*(-((2*Pi)^(3*d)*s^2*(1 - 4*sw^2 + 8*sw^4)*
        (9 - 24*sw^2 + 32*sw^4)*(-1 + GaugeXi[Q])^2*(d*(mz^2 - s)^2 + 
         2*((-2 + d)*mz^4 - d*mz^2*s)*GaugeXi[Q] + d*mz^4*GaugeXi[Q]^2)) - 
      (2*Pi)^(2*d)*s^2*(1 - 4*sw^2 + 8*sw^4)*(9 - 24*sw^2 + 32*sw^4)*
       (d*(mz^2 - s)^2 + 2*((-2 + d)*mz^4 - d*mz^2*s)*GaugeXi[Q] + 
        d*mz^4*GaugeXi[Q]^2)*((2*Pi)^d - 2^(1 + d)*Pi^d*GaugeXi[Q] + 
        (2*Pi)^d*GaugeXi[Q]^2) + (-1 + d)*(2*Pi)^(2*d)*s*
       (mz^2 - s + mz^2*GaugeXi[Q])^2*(9*d*(2*Pi)^d*s + 
        2^(1 + d)*Pi^d*(s*(-9 - 30*(-2 + d)*sw^2 + (-44 + 48*d)*sw^4 - 
            160*sw^6 + 128*sw^8) + (-9 + 60*sw^2 - 200*sw^4 + 320*sw^6 - 
            256*sw^8)*t) - 2^(1 + d)*Pi^d*(d*s*(9 - 60*sw^2 + 96*sw^4) + 
          2*s*(-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 128*sw^8) - 
          2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t)*GaugeXi[Q] + 
        (9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-9 - 30*(-2 + d)*sw^2 + 
              (-44 + 48*d)*sw^4 - 160*sw^6 + 128*sw^8) + 
            (-9 + 60*sw^2 - 200*sw^4 + 320*sw^6 - 256*sw^8)*t))*
         GaugeXi[Q]^2) - (2*Pi)^(2*d)*((mz^2 - s)^2*(d*s + 2*t) + 
        2*(mz^4*((-2 + d)*s - 2*t) - mz^2*s*(d*s + 2*t))*GaugeXi[Q] + 
        mz^4*(d*s + 2*t)*GaugeXi[Q]^2)*(9*d*(2*Pi)^d*s - 
        2^(1 + d)*Pi^d*(2*s*(9 + 15*(-4 + d)*sw^2 + (122 - 24*d)*sw^4 - 
            80*sw^6 + 64*sw^8) + (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
            256*sw^8)*t) - 2^(1 + d)*Pi^d*(d*s*(9 - 60*sw^2 + 96*sw^4) - 
          4*s*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8) - 
          2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t)*GaugeXi[Q] + 
        (9*d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(2*s*(9 + 15*(-4 + d)*sw^2 + 
              (122 - 24*d)*sw^4 - 80*sw^6 + 64*sw^8) + 
            (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t))*
         GaugeXi[Q]^2) + (-1 + d)*(2*Pi)^(2*d)*s*(-mz^2 + s - 
        mz^2*GaugeXi[Q])*(s*(27*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
           (s*(-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 128*sw^8 + 
              d*(-9 - 30*sw^2 + 48*sw^4)) + (-9 + 60*sw^2 - 200*sw^4 + 
              320*sw^6 - 256*sw^8)*t)) + mz^2*(-9*d*(2*Pi)^d*s + 
          2^(1 + d)*Pi^d*(s*(9 + 30*(-2 + d)*sw^2 + (44 - 48*d)*sw^4 + 
              160*sw^6 - 128*sw^8) + (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
              256*sw^8)*t)) + 
        (-(2^(1 + d)*Pi^d*s*(d*s*(9 - 60*sw^2 + 96*sw^4) + 
             2*s*(-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 128*sw^8) - 
             2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t)) + 
          mz^2*(-45*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-9 + 60*sw^2 - 
                44*sw^4 - 160*sw^6 + 128*sw^8 + 3*d*(9 - 10*sw^2 + 
                  16*sw^4)) + (-9 + 60*sw^2 - 200*sw^4 + 320*sw^6 - 256*sw^8)*
               t)))*GaugeXi[Q] + 
        (s*(27*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-9 + 60*sw^2 - 44*sw^4 - 
                160*sw^6 + 128*sw^8 + d*(-9 - 30*sw^2 + 48*sw^4)) + 
              (-9 + 60*sw^2 - 200*sw^4 + 320*sw^6 - 256*sw^8)*t)) + 
          mz^2*(-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-9 + 60*sw^2 - 44*sw^4 - 
                160*sw^6 + 128*sw^8 + d*(9 - 30*sw^2 + 48*sw^4)) + 
              (-9 + 60*sw^2 - 200*sw^4 + 320*sw^6 - 256*sw^8)*t)))*
         GaugeXi[Q]^2 - mz^2*(45*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
           (s*(-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 128*sw^8 + 
              6*d*(-3 - 5*sw^2 + 8*sw^4)) + (-9 + 60*sw^2 - 200*sw^4 + 
              320*sw^6 - 256*sw^8)*t))*GaugeXi[Q]^3) + 
      32*(1 - d)*s*((2*Pi)^(3*d)*((sw^4*(3 - 4*sw^2)^2*((-4 + d)*mz^4*t + 
             (-4 + d)*s^2*t + 2*mz^2*((8 - 6*d + d^2)*s^2 + (12 - 11*d + 
                 2*d^2)*s*t - 4*t^2)))/4 - 4*sw^8*((-2 + d)*mz^4*t + 
            (-2 + d)*s^2*t + 2*mz^2*((-2 + d)^2*s^2 + (18 - 11*d + 2*d^2)*s*
               t + 4*t^2)) + (-1/2 + sw^2)^2*
           (4*sw^4*((-4 + d)*mz^4*t + (-4 + d)*s^2*t + 2*mz^2*(
                (8 - 6*d + d^2)*s^2 + (12 - 11*d + 2*d^2)*s*t - 4*t^2)) - 
            ((3 - 4*sw^2)^2*((-2 + d)*mz^4*t + (-2 + d)*s^2*t + 2*mz^2*
                ((-2 + d)^2*s^2 + (18 - 11*d + 2*d^2)*s*t + 4*t^2)))/4)) - 
        2^(1 + 3*d)*Pi^(3*d)*((sw^4*(3 - 4*sw^2)^2*((-4 + d)*s^2*t + 
             mz^4*((-4 + d)*s + 2*(-3 + d)*t) + mz^2*(2*(8 - 6*d + d^2)*s^2 + 
               (20 - 21*d + 4*d^2)*s*t - 8*t^2)))/4 - 
          4*sw^8*((-2 + d)*s^2*t + mz^4*((-2 + d)*s + 2*(-3 + d)*t) + 
            mz^2*(2*(-2 + d)^2*s^2 + (34 - 21*d + 4*d^2)*s*t + 8*t^2)) + 
          (-1/2 + sw^2)^2*(4*sw^4*((-4 + d)*s^2*t + mz^4*((-4 + d)*s + 
                2*(-3 + d)*t) + mz^2*(2*(8 - 6*d + d^2)*s^2 + 
                (20 - 21*d + 4*d^2)*s*t - 8*t^2)) - 
            ((3 - 4*sw^2)^2*((-2 + d)*s^2*t + mz^4*((-2 + d)*s + 2*(-3 + d)*
                  t) + mz^2*(2*(-2 + d)^2*s^2 + (34 - 21*d + 4*d^2)*s*t + 
                 8*t^2)))/4))*GaugeXi[Q] + (2*Pi)^(3*d)*
         ((sw^4*(3 - 4*sw^2)^2*((-4 + d)*s^2*t + 2*mz^4*(2*(-4 + d)*s + 
               (-8 + 3*d)*t) + 2*mz^2*((8 - 6*d + d^2)*s^2 + (4 - 9*d + 
                 2*d^2)*s*t - 4*t^2)))/4 - 4*sw^8*((-2 + d)*s^2*t + 
            mz^4*(4*(-2 + d)*s + 2*(-10 + 3*d)*t) + 2*mz^2*((-2 + d)^2*s^2 + 
              (14 - 9*d + 2*d^2)*s*t + 4*t^2)) + (-1/2 + sw^2)^2*
           (4*sw^4*((-4 + d)*s^2*t + 2*mz^4*(2*(-4 + d)*s + (-8 + 3*d)*t) + 
              2*mz^2*((8 - 6*d + d^2)*s^2 + (4 - 9*d + 2*d^2)*s*t - 4*t^2)) - 
            ((3 - 4*sw^2)^2*((-2 + d)*s^2*t + mz^4*(4*(-2 + d)*s + 
                 2*(-10 + 3*d)*t) + 2*mz^2*((-2 + d)^2*s^2 + 
                 (14 - 9*d + 2*d^2)*s*t + 4*t^2)))/4))*GaugeXi[Q]^2 + 
        8^(-1 + d)*mz^2*Pi^(3*d)*(s*(d*(9 - 60*sw^2 + 96*sw^4) + 
            2*(-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 128*sw^8))*t + 
          mz^2*(d*s*(9 - 60*sw^2 + 96*sw^4) + 2*s*(-9 + 60*sw^2 - 44*sw^4 - 
              160*sw^6 + 128*sw^8) + 6*(-3 + d)*(3 - 20*sw^2 + 32*sw^4)*t))*
         GaugeXi[Q]^3 - 2^(-4 + 3*d)*mz^4*Pi^(3*d)*
         (d*(9 - 60*sw^2 + 96*sw^4) + 2*(-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 
            128*sw^8))*t*GaugeXi[Q]^4)))/((1 - d)*mz^4*Pi^(4*d)*sw^4*
     (-1 + sw^2)^2*(s - s*GaugeXi[Q])^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
  {0, ((I/27)*4^(-1 - d)*EL^6*
     ((1/2 - sw^2)^3*(((-3 + 4*sw^2)^3*(-(d^3*(2*Pi)^d*s) + 
           2^(1 + d)*Pi^d*((4 + 6*d - 4*d^2 + d^3)*s + 
             (-52 + 44*d - 12*d^2 + d^3)*t)))/8 + 
        8*sw^6*(d^3*(2*Pi)^d*s - 2^(1 + d)*Pi^d*((-4 + 9*d - 4*d^2 + d^3)*s + 
            (-56 + 46*d - 12*d^2 + d^3)*t))) + 
      sw^6*(8*sw^6*(d^3*(2*Pi)^d*s - 2^(1 + d)*Pi^d*
           ((4 + 6*d - 4*d^2 + d^3)*s + (-52 + 44*d - 12*d^2 + d^3)*t)) + 
        ((-3 + 4*sw^2)^3*(-(d^3*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*
            ((-4 + 9*d - 4*d^2 + d^3)*s + (-56 + 46*d - 12*d^2 + d^3)*t)))/
         8)))/(Pi^(2*d)*(mz^2 - s)*sw^6*(1 - sw^2)^3), 0, 
   ((-I/27)*2^(-4 - d)*EL^6*
     (-(sw^6*(-3 + 4*sw^2)^3*((8 - 6*d + d^2)*s^2 + 2*(4 - 5*d + d^2)*s*t - 
          4*t^2))/8 + 8*sw^12*((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 
        4*t^2) + (1/2 - sw^2)^3*(8*sw^6*((8 - 6*d + d^2)*s^2 + 
          2*(4 - 5*d + d^2)*s*t - 4*t^2) - 
        ((-3 + 4*sw^2)^3*((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 4*t^2))/
         8))*(-mz^2 + s + mz^2*GaugeXi[Q]))/((-1 + d)*mz^4*Pi^d*(mz^2 - s)*s*
     sw^6*(1 - sw^2)^3), 0, ((-I/27)*4^(-1 - d)*EL^6*t*
     (-(sw^6*(-3 + 4*sw^2)^3*(2^(2 + d)*(-56 + 46*d - 12*d^2 + d^3)*mz^2*
           Pi^d + d^3*(2*Pi)^d*s - 2^(1 + d)*Pi^d*((12 - 3*d - 2*d^2 + d^3)*
             s + 4*(8 - 6*d + d^2)*t)))/8 + 
      8*sw^12*(2^(2 + d)*(-52 + 44*d - 12*d^2 + d^3)*mz^2*Pi^d + 
        d^3*(2*Pi)^d*s - 2^(1 + d)*Pi^d*((12 - 2*d - 2*d^2 + d^3)*s + 
          4*(10 - 6*d + d^2)*t)) + (1/2 - sw^2)^3*
       (8*sw^6*(2^(2 + d)*(-56 + 46*d - 12*d^2 + d^3)*mz^2*Pi^d + 
          d^3*(2*Pi)^d*s - 2^(1 + d)*Pi^d*((12 - 3*d - 2*d^2 + d^3)*s + 
            4*(8 - 6*d + d^2)*t)) - ((-3 + 4*sw^2)^3*
          (2^(2 + d)*(-52 + 44*d - 12*d^2 + d^3)*mz^2*Pi^d + d^3*(2*Pi)^d*s - 
           2^(1 + d)*Pi^d*((12 - 2*d - 2*d^2 + d^3)*s + 4*(10 - 6*d + d^2)*
              t)))/8)))/(Pi^(2*d)*(mz^2 - s)*sw^6*(1 - sw^2)^3), 0, 
   ((-I/27)*4^(-2 - d)*EL^6*
     ((mz^2 + s)*((1/2 - sw^2)^3*(8*sw^6*(d^2*(2*Pi)^d*s^2 + 
            2^(1 + d)*Pi^d*((4 - 3*d)*s^2 + (4 - 5*d + d^2)*s*t - 2*t^2)) + 
          ((-3 + 4*sw^2)^3*(-(d^2*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*
              (2*(-1 + d)*s^2 - (8 - 5*d + d^2)*s*t - 2*t^2)))/8) + 
        sw^6*(((-3 + 4*sw^2)^3*(-(d^2*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*
              ((-4 + 3*d)*s^2 - (4 - 5*d + d^2)*s*t + 2*t^2)))/8 + 
          8*sw^6*(d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*(-2*(-1 + d)*s^2 + 
              (8 - 5*d + d^2)*s*t + 2*t^2)))) - 
      (sw^6*(((3 - 4*sw^2)^3*(2^(1 + d)*Pi^d*s*((8 - 6*d + d^2)*s^2 + 2*
                (4 - 5*d + d^2)*s*t - 4*t^2) + 3*mz^2*(-3*d^2*(2*Pi)^d*s^2 + 
               2^(1 + d)*Pi^d*((4 - 3*d + 2*d^2)*s^2 + (4 - 5*d + d^2)*s*t - 
                 2*t^2))))/8 + 8*sw^6*(2^(1 + d)*Pi^d*s*((-2 + d)^2*s^2 + 
              2*(8 - 5*d + d^2)*s*t + 4*t^2) + 3*mz^2*(-3*d^2*(2*Pi)^d*s^2 + 
              2^(1 + d)*Pi^d*(2*(1 - d + d^2)*s^2 + (8 - 5*d + d^2)*s*t + 
                2*t^2)))) + (1/2 - sw^2)^3*
         (8*sw^6*(2^(1 + d)*Pi^d*s*((8 - 6*d + d^2)*s^2 + 2*(4 - 5*d + d^2)*s*
               t - 4*t^2) + 3*mz^2*(-3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*(
                (4 - 3*d + 2*d^2)*s^2 + (4 - 5*d + d^2)*s*t - 2*t^2))) + 
          ((3 - 4*sw^2)^3*(2^(1 + d)*Pi^d*s*((-2 + d)^2*s^2 + 2*(8 - 5*d + 
                 d^2)*s*t + 4*t^2) + 3*mz^2*(-3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*
                Pi^d*(2*(1 - d + d^2)*s^2 + (8 - 5*d + d^2)*s*t + 2*t^2))))/
           8))*GaugeXi[Q] + 
      (sw^6*(-((-3 + 4*sw^2)^3*(d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*(
                (4 - 3*d)*s^2 + (4 - 5*d + d^2)*s*t - 2*t^2) + 
              mz^2*(-(d^2*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*((12 - 9*d + 2*d^2)*
                   s^2 + 3*(4 - 5*d + d^2)*s*t - 6*t^2))))/8 + 
          8*sw^6*(d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*(-2*(-1 + d)*s^2 + 
              (8 - 5*d + d^2)*s*t + 2*t^2) + mz^2*(-(d^2*(2*Pi)^d*s^2) + 
              2^(1 + d)*Pi^d*(2*(3 - 3*d + d^2)*s^2 + 3*(8 - 5*d + d^2)*s*t + 
                6*t^2)))) + (1/2 - sw^2)^3*
         (8*sw^6*(d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*((4 - 3*d)*s^2 + 
              (4 - 5*d + d^2)*s*t - 2*t^2) + mz^2*(-(d^2*(2*Pi)^d*s^2) + 
              2^(1 + d)*Pi^d*((12 - 9*d + 2*d^2)*s^2 + 3*(4 - 5*d + d^2)*s*
                 t - 6*t^2))) - ((-3 + 4*sw^2)^3*(d^2*(2*Pi)^d*s^3 + 
             2^(1 + d)*Pi^d*s*(-2*(-1 + d)*s^2 + (8 - 5*d + d^2)*s*t + 2*
                t^2) + mz^2*(-(d^2*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*
                (2*(3 - 3*d + d^2)*s^2 + 3*(8 - 5*d + d^2)*s*t + 6*t^2))))/
           8))*GaugeXi[Q]^2 + 
      mz^2*(sw^6*(((-3 + 4*sw^2)^3*(-11*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
              ((4 - 3*d + 6*d^2)*s^2 + (4 - 5*d + d^2)*s*t - 2*t^2)))/8 + 
          8*sw^6*(11*d^2*(2*Pi)^d*s^2 - 2^(1 + d)*Pi^d*
             ((2 - 2*d + 6*d^2)*s^2 + (8 - 5*d + d^2)*s*t + 2*t^2))) + 
        (1/2 - sw^2)^3*(8*sw^6*(11*d^2*(2*Pi)^d*s^2 - 2^(1 + d)*Pi^d*
             ((4 - 3*d + 6*d^2)*s^2 + (4 - 5*d + d^2)*s*t - 2*t^2)) + 
          ((-3 + 4*sw^2)^3*(-11*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
              ((2 - 2*d + 6*d^2)*s^2 + (8 - 5*d + d^2)*s*t + 2*t^2)))/8))*
       GaugeXi[Q]^3))/((-1 + d)*mz^4*Pi^(2*d)*(mz^2 - s)*s*sw^6*(1 - sw^2)^3*
     (-1 + GaugeXi[Q])^2), 0, 
   ((-I/432)*EL^6*((s*(4*(-1 + d)*mz^4 - 4*d*mz^2*s + d*s^2)*
        (sw^6 + (-1 + 2*sw^2)^3/8)*(8*sw^6 + (-3 + 4*sw^2)^3/8)*
        (-1 + GaugeXi[Q])^2)/(2*Pi)^d - (2^(2 - d)*(1 - d)*mz^4*
        ((1/2 - sw^2)^3*(-8*(-56 + 46*d - 12*d^2 + d^3)*sw^6 + 
           ((-52 + 44*d - 12*d^2 + d^3)*(-3 + 4*sw^2)^3)/8) + 
         sw^6*(-8*(-52 + 44*d - 12*d^2 + d^3)*sw^6 + 
           ((-56 + 46*d - 12*d^2 + d^3)*(-3 + 4*sw^2)^3)/8))*(s + 2*t)*
        (-1 + GaugeXi[Q])^2)/Pi^d - (4^(1 - d)*(1 - d)*mz^4*
        ((1/2 - sw^2)^3*(8*(2^(1 + d)*(28 - 23*d + 6*d^2)*Pi^d - 
             d^3*(2*Pi)^d)*sw^6 - ((2^(2 + d)*(13 - 11*d + 3*d^2)*Pi^d - 
              d^3*(2*Pi)^d)*(-3 + 4*sw^2)^3)/8) + 
         sw^6*(8*(2^(2 + d)*(13 - 11*d + 3*d^2)*Pi^d - d^3*(2*Pi)^d)*sw^6 - 
           ((2^(1 + d)*(28 - 23*d + 6*d^2)*Pi^d - d^3*(2*Pi)^d)*
             (-3 + 4*sw^2)^3)/8))*(s + 2*t)*(-1 + GaugeXi[Q])^2)/Pi^(2*d) + 
      (4^(1 - d)*(1 - d)*(mz^2 - s/2)*
        (sw^6*(-((-3 + 4*sw^2)^3*(s*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*
                  (2*s - t)) + 2^(1 + d)*mz^2*Pi^d*((-4 + d)*s + 2*t)))/8 + 
           8*sw^6*(2^(1 + d)*mz^2*Pi^d*((-2 + d)*s - 2*t) + 
             s*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(s + t)))) + 
         (1/2 - sw^2)^3*(8*sw^6*(s*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*
                (2*s - t)) + 2^(1 + d)*mz^2*Pi^d*((-4 + d)*s + 2*t)) - 
           ((-3 + 4*sw^2)^3*(2^(1 + d)*mz^2*Pi^d*((-2 + d)*s - 2*t) + 
              s*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(s + t))))/8))*
        (-1 + GaugeXi[Q])^2)/Pi^(2*d) + 
      (s*(4*(-1 + d)*mz^4 - 4*d*mz^2*s + d*s^2)*(sw^6 + (-1 + 2*sw^2)^3/8)*
        (8*sw^6 + (-3 + 4*sw^2)^3/8)*((2*Pi)^d - 2^(1 + d)*Pi^d*GaugeXi[Q] + 
         (2*Pi)^d*GaugeXi[Q]^2))/(2*Pi)^(2*d) + 
      ((4*(-1 + d)*mz^4 - 4*mz^2*(d*s + 2*t) + s*(d*s + 2*t))*
        (sw^6*(((-3 + 4*sw^2)^3*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(s - t)))/
            8 + 8*sw^6*(d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(2*s + t))) + 
         (1/2 - sw^2)^3*(8*sw^6*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(-s + t)) + 
           ((-3 + 4*sw^2)^3*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(2*s + t)))/
            8) - 2^(1 + d)*Pi^d*((1/2 - sw^2)^3*
            (-((-3 + 4*sw^2)^3*((-4 + d)*s - 2*t))/8 + 
             8*sw^6*((-2 + d)*s + 2*t)) + sw^6*(8*sw^6*((-4 + d)*s - 2*t) - 
             ((-3 + 4*sw^2)^3*((-2 + d)*s + 2*t))/8))*GaugeXi[Q] - 
         ((-27*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(54 + 135*(-4 + d)*sw^2 - 
                558*(-4 + d)*sw^4 + 40*(-115 + 27*d)*sw^6 - 96*(-49 + 9*d)*
                 sw^8 - 1920*sw^10 + 1024*sw^12) + (27 - 270*sw^2 + 
                1116*sw^4 - 2720*sw^6 + 4224*sw^8 - 3840*sw^10 + 2048*sw^12)*
               t))*GaugeXi[Q]^2)/64))/(2*Pi)^(2*d) + 
      2*(1 - d)*((2^(1 - d)*mz^4*(sw^6*(-8*(-2 + d)*sw^6 + 
             ((-4 + d)*(-3 + 4*sw^2)^3)/8) + (1/2 - sw^2)^3*
            (-8*(-4 + d)*sw^6 + ((-2 + d)*(-3 + 4*sw^2)^3)/8))*t*
          (-1 + GaugeXi[Q])^2)/Pi^d - (2^(2 - d)*mz^2*
          (sw^6 + (-1 + 2*sw^2)^3/8)*(8*sw^6 + (-3 + 4*sw^2)^3/8)*t^2*
          (-1 + GaugeXi[Q])^2)/Pi^d - 
        (3*2^(1 - d)*s*(sw^6 + (-1 + 2*sw^2)^3/8)*(8*sw^6 + 
           (-3 + 4*sw^2)^3/8)*(mz^2 + t)^2*(-1 + GaugeXi[Q])^2)/Pi^d + 
        (2^(1 - d)*s*t*(sw^6*(-((-3 + 4*sw^2)^3*((-4 + d)*s - 4*t))/8 + 
             8*sw^6*((-2 + d)*s + 4*t)) + (1/2 - sw^2)^3*
            (8*sw^6*((-4 + d)*s - 4*t) - ((-3 + 4*sw^2)^3*((-2 + d)*s + 4*t))/
              8))*(-1 + GaugeXi[Q])^2)/Pi^d - 
        (mz^4*(sw^6*(((-4 + d)*(-3 + 4*sw^2)^3*((2 - 4*d + d^2)*s - 
                2*(14 - 8*d + d^2)*t))/8 - 8*sw^6*((8 + 12*d - 8*d^2 + d^3)*
                s - 2*(-52 + 44*d - 12*d^2 + d^3)*t)) + (1/2 - sw^2)^3*
            (8*(4 - d)*sw^6*((2 - 4*d + d^2)*s - 2*(14 - 8*d + d^2)*t) + 
             ((-3 + 4*sw^2)^3*((8 + 12*d - 8*d^2 + d^3)*s - 
                2*(-52 + 44*d - 12*d^2 + d^3)*t))/8))*(-1 + GaugeXi[Q])^2)/
         (2*Pi)^d + (mz^4*(sw^6*(((-4 + d)*(-3 + 4*sw^2)^3*(
                (54 - 28*d + 3*d^2)*s + 2*(14 - 8*d + d^2)*t))/8 - 
             8*sw^6*((-216 + 164*d - 40*d^2 + 3*d^3)*s + 2*(-52 + 44*d - 
                 12*d^2 + d^3)*t)) + (1/2 - sw^2)^3*
            (8*(4 - d)*sw^6*((54 - 28*d + 3*d^2)*s + 2*(14 - 8*d + d^2)*t) + 
             ((-3 + 4*sw^2)^3*((-216 + 164*d - 40*d^2 + 3*d^3)*s + 
                2*(-52 + 44*d - 12*d^2 + d^3)*t))/8))*(-1 + GaugeXi[Q])^2)/
         (2*Pi)^d + (mz^4*(sw^6*(-((-3 + 4*sw^2)^3*(2^(1 + d)*(-1 + d)*Pi^d*
                  s + d*(2*Pi)^d*t))/8 + 8*sw^6*(2^(1 + d)*Pi^d*((-5 + d)*s - 
                 3*t) + d*(2*Pi)^d*t)) + (1/2 - sw^2)^3*
            (8*sw^6*(2^(1 + d)*(-1 + d)*Pi^d*s + d*(2*Pi)^d*t) - 
             ((-3 + 4*sw^2)^3*(2^(1 + d)*Pi^d*((-5 + d)*s - 3*t) + 
                d*(2*Pi)^d*t))/8))*(-1 + GaugeXi[Q])^2)/(2*Pi)^(2*d) - 
        ((s*t*(sw^6*(-((-3 + 4*sw^2)^3*((-4 + d)*s - 2*t))/8 + 8*sw^6*
                ((-2 + d)*s + 2*t)) + (1/2 - sw^2)^3*(8*sw^6*((-4 + d)*s - 
                 2*t) - ((-3 + 4*sw^2)^3*((-2 + d)*s + 2*t))/8)))/(2*Pi)^d - 
          (2^(2 - d)*mz^2*(sw^6*(-((-3 + 4*sw^2)^3*((8 - 6*d + d^2)*s^2 + 
                   2*(4 - 5*d + d^2)*s*t - 4*t^2))/8 + 8*sw^6*
                ((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 4*t^2)) + 
             (1/2 - sw^2)^3*(8*sw^6*((8 - 6*d + d^2)*s^2 + 2*(4 - 5*d + d^2)*
                  s*t - 4*t^2) - ((-3 + 4*sw^2)^3*((-2 + d)^2*s^2 + 
                  2*(8 - 5*d + d^2)*s*t + 4*t^2))/8)))/Pi^d)*
         (-1 + GaugeXi[Q])^2 + (2^(1 - d)*s*
          (sw^6*(-((-3 + 4*sw^2)^3*((-4 + d)*s - 4*t))/8 + 
             8*sw^6*((-2 + d)*s + 4*t)) + (1/2 - sw^2)^3*
            (8*sw^6*((-4 + d)*s - 4*t) - ((-3 + 4*sw^2)^3*((-2 + d)*s + 4*t))/
              8))*(mz - mz*GaugeXi[Q])^2)/Pi^d - 
        (2^(1 - d)*(sw^6*(-((-3 + 4*sw^2)^3*((-4 + d)*s^2 - 4*s*t - 2*t^2))/
              8 + 8*sw^6*((-2 + d)*s^2 + 4*s*t + 2*t^2)) + 
           (1/2 - sw^2)^3*(8*sw^6*((-4 + d)*s^2 - 4*s*t - 2*t^2) - 
             ((-3 + 4*sw^2)^3*((-2 + d)*s^2 + 4*s*t + 2*t^2))/8))*
          (mz - mz*GaugeXi[Q])^2)/Pi^d + (4^(-3 - d)*mz^4*t*
          (27*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(-27 - 135*(-2 + d)*sw^2 + 
             558*(-2 + d)*sw^4 - 40*(-47 + 27*d)*sw^6 + 96*(-5 + 9*d)*sw^8 - 
             1920*sw^10 + 1024*sw^12) - 2^(1 + d)*Pi^d*(-54 + 540*sw^2 - 
             2232*sw^4 + 3760*sw^6 - 960*sw^8 - 3840*sw^10 + 2048*sw^12 + 
             9*d*(3 - 30*sw^2 + 124*sw^4 - 240*sw^6 + 192*sw^8))*GaugeXi[Q] + 
           (27*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(-27 - 135*(-2 + d)*sw^2 + 558*
                (-2 + d)*sw^4 - 40*(-47 + 27*d)*sw^6 + 96*(-5 + 9*d)*sw^8 - 
               1920*sw^10 + 1024*sw^12))*GaugeXi[Q]^2))/Pi^(2*d) - 
        (2^(1 - 2*d)*mz^4*(sw^6*(((-3 + 4*sw^2)^3*(-(d*(2*Pi)^d*s) + 
                2^(1 + d)*Pi^d*(2*s - t)))/8 + 8*sw^6*(d*(2*Pi)^d*s - 
               2^(1 + d)*Pi^d*(s + t))) + (1/2 - sw^2)^3*
            (8*sw^6*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(-2*s + t)) + 
             ((-3 + 4*sw^2)^3*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(s + t)))/
              8) - 2^(1 + d)*Pi^d*((1/2 - sw^2)^3*(-((-3 + 4*sw^2)^3*
                  ((-2 + d)*s - 2*t))/8 + 8*sw^6*((-4 + d)*s + 2*t)) + 
             sw^6*(8*sw^6*((-2 + d)*s - 2*t) - ((-3 + 4*sw^2)^3*((-4 + d)*s + 
                  2*t))/8))*GaugeXi[Q] + ((27*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(
                s*(-27 - 135*(-2 + d)*sw^2 + 558*(-2 + d)*sw^4 - 
                  40*(-47 + 27*d)*sw^6 + 96*(-5 + 9*d)*sw^8 - 1920*sw^10 + 
                  1024*sw^12) + (-27 + 270*sw^2 - 1116*sw^4 + 2720*sw^6 - 
                  4224*sw^8 + 3840*sw^10 - 2048*sw^12)*t))*GaugeXi[Q]^2)/64))/
         Pi^(2*d) - (2^(1 - 2*d)*mz^2*t*
          (sw^6*(((-3 + 4*sw^2)^3*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*
                 (2*s - t)))/8 + 8*sw^6*(d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*
                (s + t))) + (1/2 - sw^2)^3*(8*sw^6*(d*(2*Pi)^d*s + 2^(1 + d)*
                Pi^d*(-2*s + t)) + ((-3 + 4*sw^2)^3*(-(d*(2*Pi)^d*s) + 
                2^(1 + d)*Pi^d*(s + t)))/8) - 2^(1 + d)*Pi^d*
            ((1/2 - sw^2)^3*(-((-3 + 4*sw^2)^3*((-2 + d)*s - 2*t))/8 + 8*sw^6*
                ((-4 + d)*s + 2*t)) + sw^6*(8*sw^6*((-2 + d)*s - 2*t) - 
               ((-3 + 4*sw^2)^3*((-4 + d)*s + 2*t))/8))*GaugeXi[Q] + 
           ((27*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-27 - 135*(-2 + d)*sw^2 + 
                  558*(-2 + d)*sw^4 - 40*(-47 + 27*d)*sw^6 + 96*(-5 + 9*d)*
                   sw^8 - 1920*sw^10 + 1024*sw^12) + (-27 + 270*sw^2 - 
                  1116*sw^4 + 2720*sw^6 - 4224*sw^8 + 3840*sw^10 - 
                  2048*sw^12)*t))*GaugeXi[Q]^2)/64))/Pi^(2*d) - 
        (2^(1 - 2*d)*mz^4*(sw^6*(-((-3 + 4*sw^2)^3*(d*(2*Pi)^d*s + 
                 2^(1 + d)*Pi^d*(s + t)))/8 + 8*sw^6*(d*(2*Pi)^d*s - 
               2^(1 + d)*Pi^d*(4*s + t))) + (1/2 - sw^2)^3*
            (8*sw^6*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s + t)) + 
             ((-3 + 4*sw^2)^3*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(4*s + t)))/
              8) - 2^(1 + d)*Pi^d*((1/2 - sw^2)^3*(-((-3 + 4*sw^2)^3*
                  ((-8 + d)*s - 2*t))/8 + 8*sw^6*((2 + d)*s + 2*t)) + 
             sw^6*(8*sw^6*((-8 + d)*s - 2*t) - ((-3 + 4*sw^2)^3*((2 + d)*s + 
                  2*t))/8))*GaugeXi[Q] + 
           (sw^6*(-((-3 + 4*sw^2)^3*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s + t)))/
                8 + 8*sw^6*(d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(4*s + t))) + 
             (1/2 - sw^2)^3*(8*sw^6*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s + t)) + 
               ((-3 + 4*sw^2)^3*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(4*s + t)))/
                8))*GaugeXi[Q]^2))/Pi^(2*d) - 
        (2^(1 - 2*d)*mz^2*t*(sw^6*(-((-3 + 4*sw^2)^3*(d*(2*Pi)^d*s + 
                 2^(1 + d)*Pi^d*(s + t)))/8 + 8*sw^6*(d*(2*Pi)^d*s - 
               2^(1 + d)*Pi^d*(4*s + t))) + (1/2 - sw^2)^3*
            (8*sw^6*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s + t)) + 
             ((-3 + 4*sw^2)^3*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(4*s + t)))/
              8) - 2^(1 + d)*Pi^d*((1/2 - sw^2)^3*(-((-3 + 4*sw^2)^3*
                  ((-8 + d)*s - 2*t))/8 + 8*sw^6*((2 + d)*s + 2*t)) + 
             sw^6*(8*sw^6*((-8 + d)*s - 2*t) - ((-3 + 4*sw^2)^3*((2 + d)*s + 
                  2*t))/8))*GaugeXi[Q] + 
           (sw^6*(-((-3 + 4*sw^2)^3*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s + t)))/
                8 + 8*sw^6*(d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(4*s + t))) + 
             (1/2 - sw^2)^3*(8*sw^6*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s + t)) + 
               ((-3 + 4*sw^2)^3*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(4*s + t)))/
                8))*GaugeXi[Q]^2))/Pi^(2*d))))/((-1 + d)*mz^4*(mz^2 - s)*sw^6*
     (1 - sw^2)^3*(-1 + GaugeXi[Q])^2), 
   ((-I/27)*2^(-2 - d)*EL^6*
     (-(sw^6*(-3 + 4*sw^2)^3*(2*(-8 + 18*d - 8*d^2 + d^3)*mz^2*s - 
          (-8 + 18*d - 8*d^2 + d^3)*s^2 + 8*(-4 + d)*s*t - 16*t^2))/8 + 
      8*sw^12*(2*(8 + 12*d - 8*d^2 + d^3)*mz^2*s - (8 + 12*d - 8*d^2 + d^3)*
         s^2 + 8*(-2 + d)*s*t + 16*t^2) + (1/2 - sw^2)^3*
       (8*sw^6*(2*(-8 + 18*d - 8*d^2 + d^3)*mz^2*s - 
          (-8 + 18*d - 8*d^2 + d^3)*s^2 + 8*(-4 + d)*s*t - 16*t^2) - 
        ((-3 + 4*sw^2)^3*(2*(8 + 12*d - 8*d^2 + d^3)*mz^2*s - 
           (8 + 12*d - 8*d^2 + d^3)*s^2 + 8*(-2 + d)*s*t + 16*t^2))/8)))/
    (Pi^d*(mz^2 - s)*sw^6*(1 - sw^2)^3), 
   ((I/27)*2^(-3 - 2*d)*EL^6*
     (sw^6*(((3 - 4*sw^2)^3*(2^(2 + d)*(-4 + d)*mz^2*Pi^d*t*
            ((-2 - 2*d + d^2)*s + 4*(-2 + d)*t) + 2^(1 + d)*(-4 + d)*mz^4*
            Pi^d*((2 - 4*d + d^2)*s - 2*(14 - 8*d + d^2)*t) + 
           t*(-(d^3*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*((4 - 9*d + 4*d^2)*s^2 + 4*
                (-4 + d)*s*t - 8*t^2))))/8 + 
        8*sw^6*(2^(2 + d)*mz^2*Pi^d*t*((16 + 4*d - 6*d^2 + d^3)*s + 
            4*(10 - 6*d + d^2)*t) + 2^(1 + d)*mz^4*Pi^d*
           ((8 + 12*d - 8*d^2 + d^3)*s - 2*(-52 + 44*d - 12*d^2 + d^3)*t) + 
          t*(-(d^3*(2*Pi)^d*s^2) + 2^(2 + d)*Pi^d*((-2 - 3*d + 2*d^2)*s^2 + 
              2*(-2 + d)*s*t + 4*t^2)))) + (1/2 - sw^2)^3*
       (8*sw^6*(2^(2 + d)*(-4 + d)*mz^2*Pi^d*t*((-2 - 2*d + d^2)*s + 
            4*(-2 + d)*t) + 2^(1 + d)*(-4 + d)*mz^4*Pi^d*((2 - 4*d + d^2)*s - 
            2*(14 - 8*d + d^2)*t) + t*(-(d^3*(2*Pi)^d*s^2) + 
            2^(1 + d)*Pi^d*((4 - 9*d + 4*d^2)*s^2 + 4*(-4 + d)*s*t - 
              8*t^2))) + ((3 - 4*sw^2)^3*(2^(2 + d)*mz^2*Pi^d*t*
            ((16 + 4*d - 6*d^2 + d^3)*s + 4*(10 - 6*d + d^2)*t) + 
           2^(1 + d)*mz^4*Pi^d*((8 + 12*d - 8*d^2 + d^3)*s - 
             2*(-52 + 44*d - 12*d^2 + d^3)*t) + t*(-(d^3*(2*Pi)^d*s^2) + 
             2^(2 + d)*Pi^d*((-2 - 3*d + 2*d^2)*s^2 + 2*(-2 + d)*s*t + 4*
                t^2))))/8)))/(Pi^(2*d)*(mz^2 - s)*sw^6*(1 - sw^2)^3), 
   ((-I/27)*4^(-5 - d)*EL^6*(27*d^2*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(s^2*(54 - 540*sw^2 + 2232*sw^4 - 3760*sw^6 + 960*sw^8 + 
          3840*sw^10 - 2048*sw^12 + 9*d^2*sw^2*(-15 + 62*sw^2 - 120*sw^4 + 
            96*sw^6) + 2*d*(-27 + 270*sw^2 - 1116*sw^4 + 2020*sw^6 - 
            1104*sw^8 - 960*sw^10 + 512*sw^12)) + 
        s*(-45*d*(3 - 30*sw^2 + 124*sw^4 - 240*sw^6 + 192*sw^8) + 
          9*d^2*(3 - 30*sw^2 + 124*sw^4 - 240*sw^6 + 192*sw^8) + 
          8*(27 - 270*sw^2 + 1116*sw^4 - 2300*sw^6 + 2352*sw^8 - 960*sw^10 + 
            512*sw^12))*t + 2*(27 - 270*sw^2 + 1116*sw^4 - 2720*sw^6 + 
          4224*sw^8 - 3840*sw^10 + 2048*sw^12)*t^2))*(s - 4*mz^2*GaugeXi[Q]))/
    ((-1 + d)*mz^4*Pi^(2*d)*(mz^2 - s)*sw^6*(-1 + sw^2)^3), 
   ((I/27)*4^(-2 - d)*EL^6*
     (sw^6*(((-3 + 4*sw^2)^3*(-(d^2*(2*Pi)^d*s^3) + 2^(1 + d)*Pi^d*s*
            ((-4 + 3*d)*s^2 - (4 - 5*d + d^2)*s*t + 2*t^2) + 
           mz^2*(-3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*((4 - 3*d + 2*d^2)*
                s^2 + (4 - 5*d + d^2)*s*t - 2*t^2))))/8 + 
        8*sw^6*(d^2*(2*Pi)^d*s^3 - 2^(1 + d)*Pi^d*s*(2*(-1 + d)*s^2 - 
            (8 - 5*d + d^2)*s*t - 2*t^2) - mz^2*(-3*d^2*(2*Pi)^d*s^2 + 
            2^(1 + d)*Pi^d*(2*(1 - d + d^2)*s^2 + (8 - 5*d + d^2)*s*t + 
              2*t^2)))) + (1/2 - sw^2)^3*
       (8*sw^6*(d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*((4 - 3*d)*s^2 + 
            (4 - 5*d + d^2)*s*t - 2*t^2) - mz^2*(-3*d^2*(2*Pi)^d*s^2 + 
            2^(1 + d)*Pi^d*((4 - 3*d + 2*d^2)*s^2 + (4 - 5*d + d^2)*s*t - 
              2*t^2))) + ((-3 + 4*sw^2)^3*(-(d^2*(2*Pi)^d*s^3) + 
           2^(1 + d)*Pi^d*s*(2*(-1 + d)*s^2 - (8 - 5*d + d^2)*s*t - 2*t^2) + 
           mz^2*(-3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*(2*(1 - d + d^2)*s^2 + 
               (8 - 5*d + d^2)*s*t + 2*t^2))))/8) - 
      ((1/2 - sw^2)^3*(((3 - 4*sw^2)^3*(2^(1 + d)*Pi^d*s*((-2 + d)^2*s^2 + 2*
                (8 - 5*d + d^2)*s*t + 4*t^2) + mz^2*(-11*d^2*(2*Pi)^d*s^2 + 
               2^(1 + d)*Pi^d*((-6 + 6*d + 4*d^2)*s^2 - 3*(8 - 5*d + d^2)*s*
                  t - 6*t^2))))/8 + 8*sw^6*(2^(1 + d)*Pi^d*s*
             ((8 - 6*d + d^2)*s^2 + 2*(4 - 5*d + d^2)*s*t - 4*t^2) + 
            mz^2*(-11*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*((-12 + 9*d + 4*d^2)*
                 s^2 - 3*(4 - 5*d + d^2)*s*t + 6*t^2)))) + 
        sw^6*(8*sw^6*(2^(1 + d)*Pi^d*s*((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*
               t + 4*t^2) + mz^2*(-11*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*(
                (-6 + 6*d + 4*d^2)*s^2 - 3*(8 - 5*d + d^2)*s*t - 6*t^2))) + 
          ((3 - 4*sw^2)^3*(2^(1 + d)*Pi^d*s*((8 - 6*d + d^2)*s^2 + 2*
                (4 - 5*d + d^2)*s*t - 4*t^2) + mz^2*(-11*d^2*(2*Pi)^d*s^2 + 
               2^(1 + d)*Pi^d*((-12 + 9*d + 4*d^2)*s^2 - 3*(4 - 5*d + d^2)*s*
                  t + 6*t^2))))/8))*GaugeXi[Q] + 
      (sw^6*(((3 - 4*sw^2)^3*(d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
              ((4 - 3*d)*s^2 + (4 - 5*d + d^2)*s*t - 2*t^2) + 
             mz^2*(5*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*((-12 + 9*d - 4*d^2)*
                  s^2 - 3*(4 - 5*d + d^2)*s*t + 6*t^2))))/8 + 
          8*sw^6*(d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*(-2*(-1 + d)*s^2 + 
              (8 - 5*d + d^2)*s*t + 2*t^2) - mz^2*(-5*d^2*(2*Pi)^d*s^2 + 
              2^(1 + d)*Pi^d*((6 - 6*d + 4*d^2)*s^2 + 3*(8 - 5*d + d^2)*s*t + 
                6*t^2)))) + (1/2 - sw^2)^3*
         (8*sw^6*(d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*((4 - 3*d)*s^2 + 
              (4 - 5*d + d^2)*s*t - 2*t^2) + mz^2*(5*d^2*(2*Pi)^d*s^2 + 
              2^(1 + d)*Pi^d*((-12 + 9*d - 4*d^2)*s^2 - 3*(4 - 5*d + d^2)*s*
                 t + 6*t^2))) + ((-3 + 4*sw^2)^3*(-(d^2*(2*Pi)^d*s^3) + 
             2^(1 + d)*Pi^d*s*(2*(-1 + d)*s^2 - (8 - 5*d + d^2)*s*t - 2*
                t^2) + mz^2*(-5*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
                ((6 - 6*d + 4*d^2)*s^2 + 3*(8 - 5*d + d^2)*s*t + 6*t^2))))/
           8))*GaugeXi[Q]^2 + 
      mz^2*((1/2 - sw^2)^3*(8*sw^6*(9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
             ((4 - 3*d - 4*d^2)*s^2 + (4 - 5*d + d^2)*s*t - 2*t^2)) + 
          ((-3 + 4*sw^2)^3*(-9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
              (2*(-1 + d + 2*d^2)*s^2 - (8 - 5*d + d^2)*s*t - 2*t^2)))/8) + 
        sw^6*(((-3 + 4*sw^2)^3*(-9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
              ((-4 + 3*d + 4*d^2)*s^2 - (4 - 5*d + d^2)*s*t + 2*t^2)))/8 + 
          8*sw^6*(9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
             (-2*(-1 + d + 2*d^2)*s^2 + (8 - 5*d + d^2)*s*t + 2*t^2))))*
       GaugeXi[Q]^3))/((-1 + d)*mz^4*Pi^(2*d)*(mz^2 - s)*s*sw^6*(1 - sw^2)^3*
     (-1 + GaugeXi[Q])^2), 
   ((-I/432)*EL^6*(((sw^6 + (-1 + 2*sw^2)^3/8)*(8*sw^6 + (-3 + 4*sw^2)^3/8)*
        (s - s*GaugeXi[Q])^2*(d*(mz^2 - s)^2 + 2*((-2 + d)*mz^4 - d*mz^2*s)*
          GaugeXi[Q] + d*mz^4*GaugeXi[Q]^2))/(2*Pi)^d + 
      (s^2*(sw^6 + (-1 + 2*sw^2)^3/8)*(8*sw^6 + (-3 + 4*sw^2)^3/8)*
        (d*(mz^2 - s)^2 + 2*((-2 + d)*mz^4 - d*mz^2*s)*GaugeXi[Q] + 
         d*mz^4*GaugeXi[Q]^2)*((2*Pi)^d - 2^(1 + d)*Pi^d*GaugeXi[Q] + 
         (2*Pi)^d*GaugeXi[Q]^2))/(2*Pi)^(2*d) + 
      ((1 - d)*s*(mz^2 - s + mz^2*GaugeXi[Q])^2*
        (sw^6*(((-3 + 4*sw^2)^3*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(2*s - t)))/
            8 + 8*sw^6*(d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(s + t))) + 
         (1/2 - sw^2)^3*(8*sw^6*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(-2*s + t)) + 
           ((-3 + 4*sw^2)^3*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(s + t)))/8) - 
         2^(1 + d)*Pi^d*((1/2 - sw^2)^3*(-((-3 + 4*sw^2)^3*((-2 + d)*s - 
                 2*t))/8 + 8*sw^6*((-4 + d)*s + 2*t)) + 
           sw^6*(8*sw^6*((-2 + d)*s - 2*t) - ((-3 + 4*sw^2)^3*((-4 + d)*s + 
                2*t))/8))*GaugeXi[Q] + 
         ((27*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-27 - 135*(-2 + d)*sw^2 + 
                558*(-2 + d)*sw^4 - 40*(-47 + 27*d)*sw^6 + 96*(-5 + 9*d)*
                 sw^8 - 1920*sw^10 + 1024*sw^12) + (-27 + 270*sw^2 - 
                1116*sw^4 + 2720*sw^6 - 4224*sw^8 + 3840*sw^10 - 2048*sw^12)*
               t))*GaugeXi[Q]^2)/64))/(2*Pi)^(2*d) + 
      (((mz^2 - s)^2*(d*s + 2*t) + 2*(mz^4*((-2 + d)*s - 2*t) - 
           mz^2*s*(d*s + 2*t))*GaugeXi[Q] + mz^4*(d*s + 2*t)*GaugeXi[Q]^2)*
        (sw^6*(((-3 + 4*sw^2)^3*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(s - t)))/
            8 + 8*sw^6*(d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(2*s + t))) + 
         (1/2 - sw^2)^3*(8*sw^6*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(-s + t)) + 
           ((-3 + 4*sw^2)^3*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(2*s + t)))/
            8) - 2^(1 + d)*Pi^d*((1/2 - sw^2)^3*
            (-((-3 + 4*sw^2)^3*((-4 + d)*s - 2*t))/8 + 
             8*sw^6*((-2 + d)*s + 2*t)) + sw^6*(8*sw^6*((-4 + d)*s - 2*t) - 
             ((-3 + 4*sw^2)^3*((-2 + d)*s + 2*t))/8))*GaugeXi[Q] - 
         ((-27*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(54 + 135*(-4 + d)*sw^2 - 
                558*(-4 + d)*sw^4 + 40*(-115 + 27*d)*sw^6 - 96*(-49 + 9*d)*
                 sw^8 - 1920*sw^10 + 1024*sw^12) + (27 - 270*sw^2 + 
                1116*sw^4 - 2720*sw^6 + 4224*sw^8 - 3840*sw^10 + 2048*sw^12)*
               t))*GaugeXi[Q]^2)/64))/(2*Pi)^(2*d) + 
      ((1 - d)*s*(mz^2 - s + mz^2*GaugeXi[Q])*
        ((1/2 - sw^2)^3*(-((-3 + 4*sw^2)^3*(mz^2*(-3*d*(2*Pi)^d*s + 
                 2^(1 + d)*Pi^d*(-s + 2*d*s - t)) + s*(-(d*(2*Pi)^d*s) + 
                 2^(1 + d)*Pi^d*(s + t))))/8 + 
           8*sw^6*(s*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(2*s - t)) + 
             mz^2*(-3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(2*(-1 + d)*s + t)))) + 
         sw^6*(8*sw^6*(mz^2*(-3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(-s + 2*d*s - 
                 t)) + s*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(s + t))) - 
           ((-3 + 4*sw^2)^3*(s*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(2*s - t)) + 
              mz^2*(-3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(2*(-1 + d)*s + t))))/
            8) + (sw^6*(-((-3 + 4*sw^2)^3*(mz^2*(-(d*(2*Pi)^d*s) + 
                   2^(1 + d)*Pi^d*(2*s - t)) + 2^(1 + d)*Pi^d*s*((-4 + d)*s + 
                   2*t)))/8 + 8*sw^6*(2^(1 + d)*Pi^d*s*((-2 + d)*s - 2*t) + 
               mz^2*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(s + t)))) + 
           (1/2 - sw^2)^3*(8*sw^6*(mz^2*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*
                  (2*s - t)) + 2^(1 + d)*Pi^d*s*((-4 + d)*s + 2*t)) - 
             ((-3 + 4*sw^2)^3*(2^(1 + d)*Pi^d*s*((-2 + d)*s - 2*t) + 
                mz^2*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(s + t))))/8))*
          GaugeXi[Q] + (sw^6*(-((-3 + 4*sw^2)^3*(s*(-(d*(2*Pi)^d*s) + 
                   2^(1 + d)*Pi^d*(2*s - t)) + mz^2*(-5*d*(2*Pi)^d*s + 
                   2^(1 + d)*Pi^d*(2*(1 + d)*s - t))))/8 + 
             8*sw^6*(s*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(s + t)) + mz^2*
                (-5*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s + 2*d*s + t)))) + 
           (1/2 - sw^2)^3*(8*sw^6*(s*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*
                  (2*s - t)) + mz^2*(-5*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
                  (2*(1 + d)*s - t))) - ((-3 + 4*sw^2)^3*(
                s*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(s + t)) + 
                mz^2*(-5*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s + 2*d*s + t))))/8))*
          GaugeXi[Q]^2 + (mz^2*(27*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
             (s*(-27 - 135*(-2 + d)*sw^2 + 558*(-2 + d)*sw^4 - 
                40*(-47 + 27*d)*sw^6 + 96*(-5 + 9*d)*sw^8 - 1920*sw^10 + 
                1024*sw^12) + (-27 + 270*sw^2 - 1116*sw^4 + 2720*sw^6 - 
                4224*sw^8 + 3840*sw^10 - 2048*sw^12)*t))*GaugeXi[Q]^3)/64))/
       (2*Pi)^(2*d) - 2*(1 - d)*s*((3*2^(1 - d)*s*(sw^6 + (-1 + 2*sw^2)^3/8)*
          (8*sw^6 + (-3 + 4*sw^2)^3/8)*(mz^2 + t)^2*(-1 + GaugeXi[Q])^2)/
         Pi^d - (2^(1 - d)*s*t*(sw^6*(-((-3 + 4*sw^2)^3*((-4 + d)*s - 4*t))/
              8 + 8*sw^6*((-2 + d)*s + 4*t)) + (1/2 - sw^2)^3*
            (8*sw^6*((-4 + d)*s - 4*t) - ((-3 + 4*sw^2)^3*((-2 + d)*s + 4*t))/
              8))*(-1 + GaugeXi[Q])^2)/Pi^d - 
        (mz^4*(sw^6*(-((-3 + 4*sw^2)^3*(2^(1 + d)*(-1 + d)*Pi^d*s + 
                 d*(2*Pi)^d*t))/8 + 8*sw^6*(2^(1 + d)*Pi^d*((-5 + d)*s - 
                 3*t) + d*(2*Pi)^d*t)) + (1/2 - sw^2)^3*
            (8*sw^6*(2^(1 + d)*(-1 + d)*Pi^d*s + d*(2*Pi)^d*t) - 
             ((-3 + 4*sw^2)^3*(2^(1 + d)*Pi^d*((-5 + d)*s - 3*t) + 
                d*(2*Pi)^d*t))/8))*(-1 + GaugeXi[Q])^2)/(2*Pi)^(2*d) + 
        ((s*t*(sw^6*(-((-3 + 4*sw^2)^3*((-4 + d)*s - 2*t))/8 + 8*sw^6*
                ((-2 + d)*s + 2*t)) + (1/2 - sw^2)^3*(8*sw^6*((-4 + d)*s - 
                 2*t) - ((-3 + 4*sw^2)^3*((-2 + d)*s + 2*t))/8)))/(2*Pi)^d - 
          (2^(1 - d)*mz^2*(sw^6*(-((-3 + 4*sw^2)^3*((8 - 6*d + d^2)*s^2 + 
                   2*(4 - 5*d + d^2)*s*t - 4*t^2))/8 + 8*sw^6*
                ((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 4*t^2)) + 
             (1/2 - sw^2)^3*(8*sw^6*((8 - 6*d + d^2)*s^2 + 2*(4 - 5*d + d^2)*
                  s*t - 4*t^2) - ((-3 + 4*sw^2)^3*((-2 + d)^2*s^2 + 
                  2*(8 - 5*d + d^2)*s*t + 4*t^2))/8)))/Pi^d)*
         (-1 + GaugeXi[Q])^2 + (2^(-5 - d)*mz^4*(-54 + 540*sw^2 - 2232*sw^4 + 
           3760*sw^6 - 960*sw^8 - 3840*sw^10 + 2048*sw^12 + 
           9*d*(3 - 30*sw^2 + 124*sw^4 - 240*sw^6 + 192*sw^8))*t*
          (-1 + GaugeXi[Q])^2*GaugeXi[Q])/Pi^d + 
        (2^(2 - d)*mz^2*(sw^6 + (-1 + 2*sw^2)^3/8)*(8*sw^6 + 
           (-3 + 4*sw^2)^3/8)*t^2*(-1 + GaugeXi[Q])^2*GaugeXi[Q])/Pi^d - 
        (2^(1 - d)*s*(sw^6*(-((-3 + 4*sw^2)^3*((-4 + d)*s - 4*t))/8 + 
             8*sw^6*((-2 + d)*s + 4*t)) + (1/2 - sw^2)^3*
            (8*sw^6*((-4 + d)*s - 4*t) - ((-3 + 4*sw^2)^3*((-2 + d)*s + 4*t))/
              8))*(mz - mz*GaugeXi[Q])^2)/Pi^d + 
        (2^(1 - d)*(sw^6*(-((-3 + 4*sw^2)^3*((-4 + d)*s^2 - 4*s*t - 2*t^2))/
              8 + 8*sw^6*((-2 + d)*s^2 + 4*s*t + 2*t^2)) + 
           (1/2 - sw^2)^3*(8*sw^6*((-4 + d)*s^2 - 4*s*t - 2*t^2) - 
             ((-3 + 4*sw^2)^3*((-2 + d)*s^2 + 4*s*t + 2*t^2))/8))*
          (mz - mz*GaugeXi[Q])^2)/Pi^d - (4^(-3 - d)*mz^4*t*GaugeXi[Q]^2*
          (27*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(-27 - 135*(-2 + d)*sw^2 + 
             558*(-2 + d)*sw^4 - 40*(-47 + 27*d)*sw^6 + 96*(-5 + 9*d)*sw^8 - 
             1920*sw^10 + 1024*sw^12) - 2^(1 + d)*Pi^d*(-54 + 540*sw^2 - 
             2232*sw^4 + 3760*sw^6 - 960*sw^8 - 3840*sw^10 + 2048*sw^12 + 
             9*d*(3 - 30*sw^2 + 124*sw^4 - 240*sw^6 + 192*sw^8))*GaugeXi[Q] + 
           (27*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(-27 - 135*(-2 + d)*sw^2 + 558*
                (-2 + d)*sw^4 - 40*(-47 + 27*d)*sw^6 + 96*(-5 + 9*d)*sw^8 - 
               1920*sw^10 + 1024*sw^12))*GaugeXi[Q]^2))/Pi^(2*d) + 
        (2^(1 - 2*d)*mz^4*GaugeXi[Q]*
          (sw^6*(((-3 + 4*sw^2)^3*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*
                 (2*s - t)))/8 + 8*sw^6*(d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*
                (s + t))) + (1/2 - sw^2)^3*(8*sw^6*(d*(2*Pi)^d*s + 2^(1 + d)*
                Pi^d*(-2*s + t)) + ((-3 + 4*sw^2)^3*(-(d*(2*Pi)^d*s) + 
                2^(1 + d)*Pi^d*(s + t)))/8) - 2^(1 + d)*Pi^d*
            ((1/2 - sw^2)^3*(-((-3 + 4*sw^2)^3*((-2 + d)*s - 2*t))/8 + 8*sw^6*
                ((-4 + d)*s + 2*t)) + sw^6*(8*sw^6*((-2 + d)*s - 2*t) - 
               ((-3 + 4*sw^2)^3*((-4 + d)*s + 2*t))/8))*GaugeXi[Q] + 
           ((27*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-27 - 135*(-2 + d)*sw^2 + 
                  558*(-2 + d)*sw^4 - 40*(-47 + 27*d)*sw^6 + 96*(-5 + 9*d)*
                   sw^8 - 1920*sw^10 + 1024*sw^12) + (-27 + 270*sw^2 - 
                  1116*sw^4 + 2720*sw^6 - 4224*sw^8 + 3840*sw^10 - 
                  2048*sw^12)*t))*GaugeXi[Q]^2)/64))/Pi^(2*d) + 
        (2^(1 - 2*d)*mz^2*t*GaugeXi[Q]*
          (sw^6*(((-3 + 4*sw^2)^3*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*
                 (2*s - t)))/8 + 8*sw^6*(d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*
                (s + t))) + (1/2 - sw^2)^3*(8*sw^6*(d*(2*Pi)^d*s + 2^(1 + d)*
                Pi^d*(-2*s + t)) + ((-3 + 4*sw^2)^3*(-(d*(2*Pi)^d*s) + 
                2^(1 + d)*Pi^d*(s + t)))/8) - 2^(1 + d)*Pi^d*
            ((1/2 - sw^2)^3*(-((-3 + 4*sw^2)^3*((-2 + d)*s - 2*t))/8 + 8*sw^6*
                ((-4 + d)*s + 2*t)) + sw^6*(8*sw^6*((-2 + d)*s - 2*t) - 
               ((-3 + 4*sw^2)^3*((-4 + d)*s + 2*t))/8))*GaugeXi[Q] + 
           ((27*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-27 - 135*(-2 + d)*sw^2 + 
                  558*(-2 + d)*sw^4 - 40*(-47 + 27*d)*sw^6 + 96*(-5 + 9*d)*
                   sw^8 - 1920*sw^10 + 1024*sw^12) + (-27 + 270*sw^2 - 
                  1116*sw^4 + 2720*sw^6 - 4224*sw^8 + 3840*sw^10 - 
                  2048*sw^12)*t))*GaugeXi[Q]^2)/64))/Pi^(2*d) + 
        (2^(1 - 2*d)*mz^4*(sw^6*(-((-3 + 4*sw^2)^3*(d*(2*Pi)^d*s + 
                 2^(1 + d)*Pi^d*(s + t)))/8 + 8*sw^6*(d*(2*Pi)^d*s - 
               2^(1 + d)*Pi^d*(4*s + t))) + (1/2 - sw^2)^3*
            (8*sw^6*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s + t)) + 
             ((-3 + 4*sw^2)^3*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(4*s + t)))/
              8) - 2^(1 + d)*Pi^d*((1/2 - sw^2)^3*(-((-3 + 4*sw^2)^3*
                  ((-8 + d)*s - 2*t))/8 + 8*sw^6*((2 + d)*s + 2*t)) + 
             sw^6*(8*sw^6*((-8 + d)*s - 2*t) - ((-3 + 4*sw^2)^3*((2 + d)*s + 
                  2*t))/8))*GaugeXi[Q] + 
           (sw^6*(-((-3 + 4*sw^2)^3*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s + t)))/
                8 + 8*sw^6*(d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(4*s + t))) + 
             (1/2 - sw^2)^3*(8*sw^6*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s + t)) + 
               ((-3 + 4*sw^2)^3*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(4*s + t)))/
                8))*GaugeXi[Q]^2))/Pi^(2*d) + 
        (2^(1 - 2*d)*mz^2*t*(sw^6*(-((-3 + 4*sw^2)^3*(d*(2*Pi)^d*s + 
                 2^(1 + d)*Pi^d*(s + t)))/8 + 8*sw^6*(d*(2*Pi)^d*s - 
               2^(1 + d)*Pi^d*(4*s + t))) + (1/2 - sw^2)^3*
            (8*sw^6*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s + t)) + 
             ((-3 + 4*sw^2)^3*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(4*s + t)))/
              8) - 2^(1 + d)*Pi^d*((1/2 - sw^2)^3*(-((-3 + 4*sw^2)^3*
                  ((-8 + d)*s - 2*t))/8 + 8*sw^6*((2 + d)*s + 2*t)) + 
             sw^6*(8*sw^6*((-8 + d)*s - 2*t) - ((-3 + 4*sw^2)^3*((2 + d)*s + 
                  2*t))/8))*GaugeXi[Q] + 
           (sw^6*(-((-3 + 4*sw^2)^3*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s + t)))/
                8 + 8*sw^6*(d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(4*s + t))) + 
             (1/2 - sw^2)^3*(8*sw^6*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s + t)) + 
               ((-3 + 4*sw^2)^3*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(4*s + t)))/
                8))*GaugeXi[Q]^2))/Pi^(2*d))))/(mz^4*(mz^2 - s)*(s - d*s)*
     sw^6*(1 - sw^2)^3*(-1 + GaugeXi[Q])^2), 
   ((I/27)*4^(-2 - d)*EL^6*((1/2 - sw^2)^3*
       (8*sw^6*(d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*((4 - 3*d)*s^2 + 
            (4 - 5*d + d^2)*s*t - 2*t^2) + mz^2*(9*d^2*(2*Pi)^d*s^2 + 
            2^(1 + d)*Pi^d*((4 - 3*d - 4*d^2)*s^2 + (4 - 5*d + d^2)*s*t - 
              2*t^2))) + ((-3 + 4*sw^2)^3*(-(d^2*(2*Pi)^d*s^3) + 
           2^(1 + d)*Pi^d*s*(2*(-1 + d)*s^2 - (8 - 5*d + d^2)*s*t - 2*t^2) + 
           mz^2*(-9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*(2*(-1 + d + 2*d^2)*
                s^2 - (8 - 5*d + d^2)*s*t - 2*t^2))))/8) + 
      sw^6*(((-3 + 4*sw^2)^3*(-(d^2*(2*Pi)^d*s^3) + 2^(1 + d)*Pi^d*s*
            ((-4 + 3*d)*s^2 - (4 - 5*d + d^2)*s*t + 2*t^2) + 
           mz^2*(-9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*((-4 + 3*d + 4*d^2)*
                s^2 - (4 - 5*d + d^2)*s*t + 2*t^2))))/8 + 
        8*sw^6*(d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*(-2*(-1 + d)*s^2 + 
            (8 - 5*d + d^2)*s*t + 2*t^2) + mz^2*(9*d^2*(2*Pi)^d*s^2 + 
            2^(1 + d)*Pi^d*(-2*(-1 + d + 2*d^2)*s^2 + (8 - 5*d + d^2)*s*t + 
              2*t^2)))) - 
      (sw^6*(((3 - 4*sw^2)^3*(2^(1 + d)*Pi^d*s*((8 - 6*d + d^2)*s^2 + 2*
                (4 - 5*d + d^2)*s*t - 4*t^2) + mz^2*(-5*d^2*(2*Pi)^d*s^2 + 
               2^(1 + d)*Pi^d*((12 - 9*d + 4*d^2)*s^2 + 3*(4 - 5*d + d^2)*s*
                  t - 6*t^2))))/8 + 8*sw^6*(2^(1 + d)*Pi^d*s*
             ((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 4*t^2) + 
            mz^2*(-5*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*((6 - 6*d + 4*d^2)*
                 s^2 + 3*(8 - 5*d + d^2)*s*t + 6*t^2)))) + 
        (1/2 - sw^2)^3*(8*sw^6*(2^(1 + d)*Pi^d*s*((8 - 6*d + d^2)*s^2 + 
              2*(4 - 5*d + d^2)*s*t - 4*t^2) + mz^2*(-5*d^2*(2*Pi)^d*s^2 + 
              2^(1 + d)*Pi^d*((12 - 9*d + 4*d^2)*s^2 + 3*(4 - 5*d + d^2)*s*
                 t - 6*t^2))) + ((3 - 4*sw^2)^3*(2^(1 + d)*Pi^d*s*
              ((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 4*t^2) + 
             mz^2*(-5*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*((6 - 6*d + 4*d^2)*
                  s^2 + 3*(8 - 5*d + d^2)*s*t + 6*t^2))))/8))*GaugeXi[Q] + 
      ((1/2 - sw^2)^3*(8*sw^6*(d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
             ((4 - 3*d)*s^2 + (4 - 5*d + d^2)*s*t - 2*t^2) + 
            mz^2*(11*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*((12 - 9*d - 4*d^2)*
                 s^2 + 3*(4 - 5*d + d^2)*s*t - 6*t^2))) + 
          ((-3 + 4*sw^2)^3*(-(d^2*(2*Pi)^d*s^3) + 2^(1 + d)*Pi^d*s*
              (2*(-1 + d)*s^2 - (8 - 5*d + d^2)*s*t - 2*t^2) + 
             mz^2*(-11*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*((-6 + 6*d + 4*d^2)*
                  s^2 - 3*(8 - 5*d + d^2)*s*t - 6*t^2))))/8) + 
        sw^6*(((-3 + 4*sw^2)^3*(-(d^2*(2*Pi)^d*s^3) + 2^(1 + d)*Pi^d*s*
              ((-4 + 3*d)*s^2 - (4 - 5*d + d^2)*s*t + 2*t^2) + 
             mz^2*(-11*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*((-12 + 9*d + 4*d^2)*
                  s^2 - 3*(4 - 5*d + d^2)*s*t + 6*t^2))))/8 + 
          8*sw^6*(d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*(-2*(-1 + d)*s^2 + 
              (8 - 5*d + d^2)*s*t + 2*t^2) + mz^2*(11*d^2*(2*Pi)^d*s^2 + 
              2^(1 + d)*Pi^d*((6 - 6*d - 4*d^2)*s^2 + 3*(8 - 5*d + d^2)*s*t + 
                6*t^2)))))*GaugeXi[Q]^2 + 
      mz^2*(sw^6*(((-3 + 4*sw^2)^3*(-3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
              ((4 - 3*d + 2*d^2)*s^2 + (4 - 5*d + d^2)*s*t - 2*t^2)))/8 + 
          8*sw^6*(3*d^2*(2*Pi)^d*s^2 - 2^(1 + d)*Pi^d*(2*(1 - d + d^2)*s^2 + 
              (8 - 5*d + d^2)*s*t + 2*t^2))) + (1/2 - sw^2)^3*
         (8*sw^6*(3*d^2*(2*Pi)^d*s^2 - 2^(1 + d)*Pi^d*
             ((4 - 3*d + 2*d^2)*s^2 + (4 - 5*d + d^2)*s*t - 2*t^2)) + 
          ((-3 + 4*sw^2)^3*(-3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
              (2*(1 - d + d^2)*s^2 + (8 - 5*d + d^2)*s*t + 2*t^2)))/8))*
       GaugeXi[Q]^3))/((-1 + d)*mz^4*Pi^(2*d)*(mz^2 - s)*s*sw^6*(1 - sw^2)^3*
     (-1 + GaugeXi[Q])^2), 
   ((-I/432)*EL^6*(((sw^6 + (-1 + 2*sw^2)^3/8)*(8*sw^6 + (-3 + 4*sw^2)^3/8)*
        (s - s*GaugeXi[Q])^2*(d*(mz^2 - s)^2 + 2*((-2 + d)*mz^4 - d*mz^2*s)*
          GaugeXi[Q] + d*mz^4*GaugeXi[Q]^2))/(2*Pi)^d + 
      (s^2*(sw^6 + (-1 + 2*sw^2)^3/8)*(8*sw^6 + (-3 + 4*sw^2)^3/8)*
        (d*(mz^2 - s)^2 + 2*((-2 + d)*mz^4 - d*mz^2*s)*GaugeXi[Q] + 
         d*mz^4*GaugeXi[Q]^2)*((2*Pi)^d - 2^(1 + d)*Pi^d*GaugeXi[Q] + 
         (2*Pi)^d*GaugeXi[Q]^2))/(2*Pi)^(2*d) + 
      ((1 - d)*s*(mz^2 - s + mz^2*GaugeXi[Q])^2*
        (sw^6*(((-3 + 4*sw^2)^3*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(2*s - t)))/
            8 + 8*sw^6*(d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(s + t))) + 
         (1/2 - sw^2)^3*(8*sw^6*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(-2*s + t)) + 
           ((-3 + 4*sw^2)^3*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(s + t)))/8) - 
         2^(1 + d)*Pi^d*((1/2 - sw^2)^3*(-((-3 + 4*sw^2)^3*((-2 + d)*s - 
                 2*t))/8 + 8*sw^6*((-4 + d)*s + 2*t)) + 
           sw^6*(8*sw^6*((-2 + d)*s - 2*t) - ((-3 + 4*sw^2)^3*((-4 + d)*s + 
                2*t))/8))*GaugeXi[Q] + 
         ((27*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-27 - 135*(-2 + d)*sw^2 + 
                558*(-2 + d)*sw^4 - 40*(-47 + 27*d)*sw^6 + 96*(-5 + 9*d)*
                 sw^8 - 1920*sw^10 + 1024*sw^12) + (-27 + 270*sw^2 - 
                1116*sw^4 + 2720*sw^6 - 4224*sw^8 + 3840*sw^10 - 2048*sw^12)*
               t))*GaugeXi[Q]^2)/64))/(2*Pi)^(2*d) + 
      (((mz^2 - s)^2*(d*s + 2*t) + 2*(mz^4*((-2 + d)*s - 2*t) - 
           mz^2*s*(d*s + 2*t))*GaugeXi[Q] + mz^4*(d*s + 2*t)*GaugeXi[Q]^2)*
        (sw^6*(((-3 + 4*sw^2)^3*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(s - t)))/
            8 + 8*sw^6*(d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(2*s + t))) + 
         (1/2 - sw^2)^3*(8*sw^6*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(-s + t)) + 
           ((-3 + 4*sw^2)^3*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(2*s + t)))/
            8) - 2^(1 + d)*Pi^d*((1/2 - sw^2)^3*
            (-((-3 + 4*sw^2)^3*((-4 + d)*s - 2*t))/8 + 
             8*sw^6*((-2 + d)*s + 2*t)) + sw^6*(8*sw^6*((-4 + d)*s - 2*t) - 
             ((-3 + 4*sw^2)^3*((-2 + d)*s + 2*t))/8))*GaugeXi[Q] - 
         ((-27*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(54 + 135*(-4 + d)*sw^2 - 
                558*(-4 + d)*sw^4 + 40*(-115 + 27*d)*sw^6 - 96*(-49 + 9*d)*
                 sw^8 - 1920*sw^10 + 1024*sw^12) + (27 - 270*sw^2 + 
                1116*sw^4 - 2720*sw^6 + 4224*sw^8 - 3840*sw^10 + 2048*sw^12)*
               t))*GaugeXi[Q]^2)/64))/(2*Pi)^(2*d) + 
      ((1 - d)*s*(mz^2 - s + mz^2*GaugeXi[Q])*
        ((mz^2 - s)*(27*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (s*(-27 - 135*(-2 + d)*sw^2 + 558*(-2 + d)*sw^4 - 40*(-47 + 27*d)*
                sw^6 + 96*(-5 + 9*d)*sw^8 - 1920*sw^10 + 1024*sw^12) + 
             (-27 + 270*sw^2 - 1116*sw^4 + 2720*sw^6 - 4224*sw^8 + 3840*
                sw^10 - 2048*sw^12)*t)) + 
         64*(sw^6*(-((-3 + 4*sw^2)^3*(mz^2*(-5*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
                    (2*(1 + d)*s - t)) + 2^(1 + d)*Pi^d*s*((-4 + d)*s + 
                   2*t)))/8 + 8*sw^6*(2^(1 + d)*Pi^d*s*((-2 + d)*s - 2*t) + 
               mz^2*(-5*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s + 2*d*s + t)))) + 
           (1/2 - sw^2)^3*(8*sw^6*(mz^2*(-5*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
                  (2*(1 + d)*s - t)) + 2^(1 + d)*Pi^d*s*((-4 + d)*s + 2*t)) - 
             ((-3 + 4*sw^2)^3*(2^(1 + d)*Pi^d*s*((-2 + d)*s - 2*t) + 
                mz^2*(-5*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s + 2*d*s + t))))/8))*
          GaugeXi[Q] - (mz^2 + s)*(27*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (s*(-27 - 135*(-2 + d)*sw^2 + 558*(-2 + d)*sw^4 - 40*(-47 + 27*d)*
                sw^6 + 96*(-5 + 9*d)*sw^8 - 1920*sw^10 + 1024*sw^12) + 
             (-27 + 270*sw^2 - 1116*sw^4 + 2720*sw^6 - 4224*sw^8 + 3840*
                sw^10 - 2048*sw^12)*t))*GaugeXi[Q]^2 + 
         mz^2*(-81*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (s*(-27 + 270*sw^2 - 1116*sw^4 + 1880*sw^6 - 480*sw^8 - 1920*
                sw^10 + 1024*sw^12 + 9*d*(6 - 15*sw^2 + 62*sw^4 - 120*sw^6 + 
                 96*sw^8)) + (-27 + 270*sw^2 - 1116*sw^4 + 2720*sw^6 - 4224*
                sw^8 + 3840*sw^10 - 2048*sw^12)*t))*GaugeXi[Q]^3))/
       (2^(2*(3 + d))*Pi^(2*d)) - 2*(1 - d)*s*
       ((2^(2 - d)*mz^2*(sw^6 + (-1 + 2*sw^2)^3/8)*(8*sw^6 + 
           (-3 + 4*sw^2)^3/8)*t^2*(-1 + GaugeXi[Q])^2)/Pi^d - 
        (2^(1 - d)*s*t*(sw^6*(-((-3 + 4*sw^2)^3*((-4 + d)*s - 4*t))/8 + 
             8*sw^6*((-2 + d)*s + 4*t)) + (1/2 - sw^2)^3*
            (8*sw^6*((-4 + d)*s - 4*t) - ((-3 + 4*sw^2)^3*((-2 + d)*s + 4*t))/
              8))*(-1 + GaugeXi[Q])^2)/Pi^d + 
        ((s*t*(sw^6*(-((-3 + 4*sw^2)^3*((-4 + d)*s - 2*t))/8 + 8*sw^6*
                ((-2 + d)*s + 2*t)) + (1/2 - sw^2)^3*(8*sw^6*((-4 + d)*s - 
                 2*t) - ((-3 + 4*sw^2)^3*((-2 + d)*s + 2*t))/8)))/(2*Pi)^d - 
          (2^(1 - d)*mz^2*(sw^6*(-((-3 + 4*sw^2)^3*((8 - 6*d + d^2)*s^2 + 
                   2*(4 - 5*d + d^2)*s*t - 4*t^2))/8 + 8*sw^6*
                ((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 4*t^2)) + 
             (1/2 - sw^2)^3*(8*sw^6*((8 - 6*d + d^2)*s^2 + 2*(4 - 5*d + d^2)*
                  s*t - 4*t^2) - ((-3 + 4*sw^2)^3*((-2 + d)^2*s^2 + 
                  2*(8 - 5*d + d^2)*s*t + 4*t^2))/8)))/Pi^d)*
         (-1 + GaugeXi[Q])^2 + (2^(-5 - d)*mz^4*(-54 + 540*sw^2 - 2232*sw^4 + 
           3760*sw^6 - 960*sw^8 - 3840*sw^10 + 2048*sw^12 + 
           9*d*(3 - 30*sw^2 + 124*sw^4 - 240*sw^6 + 192*sw^8))*t*
          (-1 + GaugeXi[Q])^2*GaugeXi[Q])/Pi^d - 
        (mz^4*(sw^6*(-((-3 + 4*sw^2)^3*(2^(1 + d)*(-1 + d)*Pi^d*s + 
                 d*(2*Pi)^d*t))/8 + 8*sw^6*(2^(1 + d)*Pi^d*((-5 + d)*s - 
                 3*t) + d*(2*Pi)^d*t)) + (1/2 - sw^2)^3*
            (8*sw^6*(2^(1 + d)*(-1 + d)*Pi^d*s + d*(2*Pi)^d*t) - 
             ((-3 + 4*sw^2)^3*(2^(1 + d)*Pi^d*((-5 + d)*s - 3*t) + 
                d*(2*Pi)^d*t))/8))*(-1 + GaugeXi[Q])^2*GaugeXi[Q]^2)/
         (2*Pi)^(2*d) - (2^(1 - d)*s*
          (sw^6*(-((-3 + 4*sw^2)^3*((-4 + d)*s - 4*t))/8 + 
             8*sw^6*((-2 + d)*s + 4*t)) + (1/2 - sw^2)^3*
            (8*sw^6*((-4 + d)*s - 4*t) - ((-3 + 4*sw^2)^3*((-2 + d)*s + 4*t))/
              8))*GaugeXi[Q]*(mz - mz*GaugeXi[Q])^2)/Pi^d + 
        (2^(1 - d)*(sw^6*(-((-3 + 4*sw^2)^3*((-4 + d)*s^2 - 4*s*t - 2*t^2))/
              8 + 8*sw^6*((-2 + d)*s^2 + 4*s*t + 2*t^2)) + 
           (1/2 - sw^2)^3*(8*sw^6*((-4 + d)*s^2 - 4*s*t - 2*t^2) - 
             ((-3 + 4*sw^2)^3*((-2 + d)*s^2 + 4*s*t + 2*t^2))/8))*GaugeXi[Q]*
          (mz - mz*GaugeXi[Q])^2)/Pi^d + 
        (3*2^(1 - d)*s*(sw^6 + (-1 + 2*sw^2)^3/8)*(8*sw^6 + 
           (-3 + 4*sw^2)^3/8)*(-1 + GaugeXi[Q])^2*(t + mz^2*GaugeXi[Q])^2)/
         Pi^d - (4^(-3 - d)*mz^4*t*(27*d*(2*Pi)^d + 2^(1 + d)*Pi^d*
            (-27 - 135*(-2 + d)*sw^2 + 558*(-2 + d)*sw^4 - 40*(-47 + 27*d)*
              sw^6 + 96*(-5 + 9*d)*sw^8 - 1920*sw^10 + 1024*sw^12) - 
           2^(1 + d)*Pi^d*(-54 + 540*sw^2 - 2232*sw^4 + 3760*sw^6 - 
             960*sw^8 - 3840*sw^10 + 2048*sw^12 + 9*d*(3 - 30*sw^2 + 124*
                sw^4 - 240*sw^6 + 192*sw^8))*GaugeXi[Q] + 
           (27*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(-27 - 135*(-2 + d)*sw^2 + 558*
                (-2 + d)*sw^4 - 40*(-47 + 27*d)*sw^6 + 96*(-5 + 9*d)*sw^8 - 
               1920*sw^10 + 1024*sw^12))*GaugeXi[Q]^2))/Pi^(2*d) + 
        (2^(1 - 2*d)*mz^2*t*(sw^6*(((-3 + 4*sw^2)^3*(-(d*(2*Pi)^d*s) + 
                2^(1 + d)*Pi^d*(2*s - t)))/8 + 8*sw^6*(d*(2*Pi)^d*s - 
               2^(1 + d)*Pi^d*(s + t))) + (1/2 - sw^2)^3*
            (8*sw^6*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(-2*s + t)) + 
             ((-3 + 4*sw^2)^3*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(s + t)))/
              8) - 2^(1 + d)*Pi^d*((1/2 - sw^2)^3*(-((-3 + 4*sw^2)^3*
                  ((-2 + d)*s - 2*t))/8 + 8*sw^6*((-4 + d)*s + 2*t)) + 
             sw^6*(8*sw^6*((-2 + d)*s - 2*t) - ((-3 + 4*sw^2)^3*((-4 + d)*s + 
                  2*t))/8))*GaugeXi[Q] + ((27*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(
                s*(-27 - 135*(-2 + d)*sw^2 + 558*(-2 + d)*sw^4 - 
                  40*(-47 + 27*d)*sw^6 + 96*(-5 + 9*d)*sw^8 - 1920*sw^10 + 
                  1024*sw^12) + (-27 + 270*sw^2 - 1116*sw^4 + 2720*sw^6 - 
                  4224*sw^8 + 3840*sw^10 - 2048*sw^12)*t))*GaugeXi[Q]^2)/64))/
         Pi^(2*d) + (2^(1 - 2*d)*mz^4*GaugeXi[Q]*
          (sw^6*(((-3 + 4*sw^2)^3*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*
                 (2*s - t)))/8 + 8*sw^6*(d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*
                (s + t))) + (1/2 - sw^2)^3*(8*sw^6*(d*(2*Pi)^d*s + 2^(1 + d)*
                Pi^d*(-2*s + t)) + ((-3 + 4*sw^2)^3*(-(d*(2*Pi)^d*s) + 
                2^(1 + d)*Pi^d*(s + t)))/8) - 2^(1 + d)*Pi^d*
            ((1/2 - sw^2)^3*(-((-3 + 4*sw^2)^3*((-2 + d)*s - 2*t))/8 + 8*sw^6*
                ((-4 + d)*s + 2*t)) + sw^6*(8*sw^6*((-2 + d)*s - 2*t) - 
               ((-3 + 4*sw^2)^3*((-4 + d)*s + 2*t))/8))*GaugeXi[Q] + 
           ((27*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-27 - 135*(-2 + d)*sw^2 + 
                  558*(-2 + d)*sw^4 - 40*(-47 + 27*d)*sw^6 + 96*(-5 + 9*d)*
                   sw^8 - 1920*sw^10 + 1024*sw^12) + (-27 + 270*sw^2 - 
                  1116*sw^4 + 2720*sw^6 - 4224*sw^8 + 3840*sw^10 - 
                  2048*sw^12)*t))*GaugeXi[Q]^2)/64))/Pi^(2*d) + 
        (2^(1 - 2*d)*mz^2*t*GaugeXi[Q]*
          (sw^6*(-((-3 + 4*sw^2)^3*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s + t)))/
              8 + 8*sw^6*(d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(4*s + t))) + 
           (1/2 - sw^2)^3*(8*sw^6*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s + t)) + 
             ((-3 + 4*sw^2)^3*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(4*s + t)))/
              8) - 2^(1 + d)*Pi^d*((1/2 - sw^2)^3*(-((-3 + 4*sw^2)^3*
                  ((-8 + d)*s - 2*t))/8 + 8*sw^6*((2 + d)*s + 2*t)) + 
             sw^6*(8*sw^6*((-8 + d)*s - 2*t) - ((-3 + 4*sw^2)^3*((2 + d)*s + 
                  2*t))/8))*GaugeXi[Q] + 
           (sw^6*(-((-3 + 4*sw^2)^3*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s + t)))/
                8 + 8*sw^6*(d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(4*s + t))) + 
             (1/2 - sw^2)^3*(8*sw^6*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s + t)) + 
               ((-3 + 4*sw^2)^3*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(4*s + t)))/
                8))*GaugeXi[Q]^2))/Pi^(2*d) + (2^(1 - 2*d)*mz^4*GaugeXi[Q]^2*
          (sw^6*(-((-3 + 4*sw^2)^3*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s + t)))/
              8 + 8*sw^6*(d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(4*s + t))) + 
           (1/2 - sw^2)^3*(8*sw^6*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s + t)) + 
             ((-3 + 4*sw^2)^3*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(4*s + t)))/
              8) - 2^(1 + d)*Pi^d*((1/2 - sw^2)^3*(-((-3 + 4*sw^2)^3*
                  ((-8 + d)*s - 2*t))/8 + 8*sw^6*((2 + d)*s + 2*t)) + 
             sw^6*(8*sw^6*((-8 + d)*s - 2*t) - ((-3 + 4*sw^2)^3*((2 + d)*s + 
                  2*t))/8))*GaugeXi[Q] + 
           (sw^6*(-((-3 + 4*sw^2)^3*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s + t)))/
                8 + 8*sw^6*(d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(4*s + t))) + 
             (1/2 - sw^2)^3*(8*sw^6*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s + t)) + 
               ((-3 + 4*sw^2)^3*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(4*s + t)))/
                8))*GaugeXi[Q]^2))/Pi^(2*d))))/(mz^4*(mz^2 - s)*(s - d*s)*
     sw^6*(1 - sw^2)^3*(-1 + GaugeXi[Q])^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{((-I/27)*2^(1 - 4*d)*EL^6*
     ((2*Pi)^(3*d)*((-96 + 216*d - 82*d^2 + 7*d^3)*s^2 + 
        4*(208 - 84*d + 5*d^2)*s*t + 4*(176 - 80*d + 7*d^2)*t^2) - 
      2^(1 + 3*d)*(32 - 20*d + 3*d^2)*Pi^(3*d)*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
       GaugeXi[Q] - (-4 + d)^2*(2*Pi)^(3*d)*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
       GaugeXi[Q]^2))/((-4 + d)*Pi^(4*d)*s^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, ((-I/27)*2^(3 - d)*(32 - 14*d + d^2)*EL^6*(s + 2*t))/
    ((-4 + d)*Pi^d*s), ((-I/27)*4^(1 - d)*EL^6*
     (2^(3 + d)*Pi^d*t*(3*s^2 + 5*s*t + 2*t^2) + 
      d*s^2*(2^(1 + d)*Pi^d*s + (2*Pi)^d*(s + 3*t))))/(Pi^(2*d)*s), 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}, {((-I/27)*4^(-2 - d)*EL^6*(15*d^4*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(s^2*(-15*d^4 - 96*(45 - 10*sw^2 + 16*sw^4) + 
          2*d^3*(99 - 35*sw^2 + 56*sw^4) + 48*d*(92 - 45*sw^2 + 72*sw^4) - 
          2*d^2*(759 - 410*sw^2 + 656*sw^4)) + 
        s*(-57*d^3 + 9*d^4 + 8*d^2*(-12 - 25*sw^2 + 40*sw^4) + 
          128*(-6 - 65*sw^2 + 104*sw^4) - 48*d*(-17 - 70*sw^2 + 112*sw^4))*
         t + 2*(176 - 80*d + 7*d^2)*(3 - 20*sw^2 + 32*sw^4)*t^2) - 
      2*(9*d^4*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (2*s^2*(96 + 320*sw^2 - 512*sw^4 + d^2*(93 + 130*sw^2 - 208*sw^4) + 
            3*d^3*(-8 - 5*sw^2 + 8*sw^4) + 12*d*(-13 - 30*sw^2 + 48*sw^4)) + 
          s*(-105*d^3 + 9*d^4 + 256*(3 - 5*sw^2 + 8*sw^4) - 
            160*d*(6 - 5*sw^2 + 8*sw^4) + 12*d^2*(39 - 10*sw^2 + 16*sw^4))*
           t + 2*(32 - 20*d + 3*d^2)*(3 - 20*sw^2 + 32*sw^4)*t^2))*
       GaugeXi[Q] + (-9*d^4*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(3*d^4 - 2*d^3*(-9 - 5*sw^2 + 8*sw^4) + 
            32*(-3 - 10*sw^2 + 16*sw^4) - 16*d*(-9 - 20*sw^2 + 32*sw^4) + 
            2*d^2*(-39 - 50*sw^2 + 80*sw^4)) - (-4 + d)^2*s*
           (-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t - 
          2*(-4 + d)^2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[Q]^2))/
    ((-4 + d)*Pi^(2*d)*(mz^2 - s)*s*sw^2*(-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, ((I/27)*4^(-1 - d)*EL^6*
     (-3*d^4*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
       (s*(-60*d^3 + 3*d^4 + d^2*(492 + 10*sw^2 - 16*sw^4) - 
          64*(-24 - 5*sw^2 + 8*sw^4) + 4*d*(-372 - 35*sw^2 + 56*sw^4)) + 
        (24*d^3 - 3*d^4 + d^2*(-66 + 20*sw^2 - 32*sw^4) - 
          32*(3 - 20*sw^2 + 32*sw^4) + 8*d*(12 - 35*sw^2 + 56*sw^4))*t)))/
    ((-4 + d)*Pi^(2*d)*(mz^2 - s)*sw^2*(-1 + sw^2)), 
   ((-I/27)*2^(-3 - 2*d)*EL^6*(s + t)*(-3*d^3*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(3*s^2*(-72 - 9*d^2 + d^3 + 
          2*d*(24 - 5*sw^2 + 8*sw^4)) + 12*s*(d + 4*sw^2*(-5 + 8*sw^2))*t + 
        8*(3 - 20*sw^2 + 32*sw^4)*t^2)))/(Pi^(2*d)*(mz^2 - s)*sw^2*
     (-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, ((I/27)*16^(-1 - d)*EL^6*(243*d^3*(2*Pi)^(3*d)*s^4 - 
      2^(1 + 3*d)*Pi^(3*d)*s^2*(2*s^2*(876 + 3*d^4 + 40*sw^2 - 64*sw^4 - 
          3*d*(341 - 30*sw^2 + 48*sw^4) + d^2*(402 - 55*sw^2 + 88*sw^4)) + 
        s*(75*d^2 - 3*d^3 + 32*(3 + 55*sw^2 - 88*sw^4) + 
          4*d*(-45 - 230*sw^2 + 368*sw^4))*t + 2*(-28 + 15*d)*
         (3 - 20*sw^2 + 32*sw^4)*t^2) - mz^4*(-243*d^3*(2*Pi)^(3*d)*s^2 + 
        2^(1 + 3*d)*Pi^(3*d)*(2*s^2*(780 + 3*d^4 - 280*sw^2 + 448*sw^4 + 
            d*(-927 + 250*sw^2 - 400*sw^4) + d^2*(378 - 55*sw^2 + 88*sw^4)) + 
          s*(27*d^2 - 3*d^3 + d*(-84 + 40*sw^2 - 64*sw^4) + 
            32*(3 - 5*sw^2 + 8*sw^4))*t - 2*(-4 + d)*(3 - 20*sw^2 + 32*sw^4)*
           t^2)) + 2*mz^2*s*(-303*d^3*(2*Pi)^(3*d)*s^2 + 
        2^(1 + 3*d)*Pi^(3*d)*(s^2*(1752 + 9*d^4 + 80*sw^2 - 128*sw^4 + 
            4*d^3*sw^2*(-5 + 8*sw^2) + d^2*(888 + 50*sw^2 - 80*sw^4) + 
            6*d*(-353 - 10*sw^2 + 16*sw^4)) + s*(-69*d^3 + 6*d^4 + 
            d*(-660 + 40*sw^2 - 64*sw^4) + 32*(15 + 5*sw^2 - 8*sw^4) + 
            d^2*(327 - 80*sw^2 + 128*sw^4))*t + 2*(4 - 5*d + 2*d^2)*
           (3 - 20*sw^2 + 32*sw^4)*t^2)) + 2*(-123*d^3*(2*Pi)^(3*d)*s^4 + 
        2^(1 + 3*d)*Pi^(3*d)*s^2*(s^2*(888 + 3*d^4 + 80*sw^2 - 128*sw^4 - 
            6*d*(173 - 10*sw^2 + 16*sw^4) + d^2*(408 - 50*sw^2 + 80*sw^4)) + 
          s*(51*d^2 - 3*d^3 + 32*(3 + 25*sw^2 - 40*sw^4) + 
            44*d*(-3 - 10*sw^2 + 16*sw^4))*t + 2*(-12 + 7*d)*
           (3 - 20*sw^2 + 32*sw^4)*t^2) + mz^4*(-123*d^3*(2*Pi)^(3*d)*s^2 + 
          2^(1 + 3*d)*Pi^(3*d)*(s^2*(3*d^4 + d*(-942 + 220*sw^2 - 352*sw^4) + 
              24*(33 - 10*sw^2 + 16*sw^4) + d^2*(384 - 50*sw^2 + 80*sw^4)) + 
            s*(27*d^2 - 3*d^3 + d*(-84 + 40*sw^2 - 64*sw^4) + 
              32*(3 - 5*sw^2 + 8*sw^4))*t - 2*(-4 + d)*(3 - 20*sw^2 + 
              32*sw^4)*t^2)) - 2*mz^2*s*(-183*d^3*(2*Pi)^(3*d)*s^2 + 
          2^(1 + 3*d)*Pi^(3*d)*(2*s^2*(468 + 3*d^4 + 120*sw^2 - 192*sw^4 + 
              2*d^3*sw^2*(-5 + 8*sw^2) + d^2*(252 + 55*sw^2 - 88*sw^4) + 
              d*(-579 - 130*sw^2 + 208*sw^4)) + s*(-69*d^3 + 6*d^4 + 
              32*(15 - 10*sw^2 + 16*sw^4) - 4*d*(159 - 70*sw^2 + 112*sw^4) + 
              d^2*(315 - 80*sw^2 + 128*sw^4))*t + 2*(12 - 9*d + 2*d^2)*
             (3 - 20*sw^2 + 32*sw^4)*t^2)))*GaugeXi[Q] + 
      (3*d^3*(2*Pi)^(3*d)*s^4 + 2^(1 + 3*d)*Pi^(3*d)*s^2*
         (2*s^2*(-12 - 40*sw^2 + 64*sw^4 + d*(15 + 30*sw^2 - 48*sw^4) + 
            d^2*(-6 - 5*sw^2 + 8*sw^4)) + s*(-27*d^2 + 3*d^3 - 
            32*(3 - 5*sw^2 + 8*sw^4) + d*(84 - 40*sw^2 + 64*sw^4))*t + 
          2*(-4 + d)*(3 - 20*sw^2 + 32*sw^4)*t^2) + 
        mz^4*(3*d^3*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
           (2*s^2*(-12 - 40*sw^2 + 64*sw^4 + d*(15 + 30*sw^2 - 48*sw^4) + 
              d^2*(-6 - 5*sw^2 + 8*sw^4)) + s*(-27*d^2 + 3*d^3 - 
              32*(3 - 5*sw^2 + 8*sw^4) + d*(84 - 40*sw^2 + 64*sw^4))*t + 
            2*(-4 + d)*(3 - 20*sw^2 + 32*sw^4)*t^2)) + 
        2*mz^2*s*(-63*d^3*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
           (s^2*(3*d^4 + 4*d^3*sw^2*(-5 + 8*sw^2) + d^2*(120 + 170*sw^2 - 
                272*sw^4) + 40*(3 + 10*sw^2 - 16*sw^4) + 2*d*(-99 - 
                230*sw^2 + 368*sw^4)) + s*(-69*d^3 + 6*d^4 + 
              d*(-612 + 520*sw^2 - 832*sw^4) + 160*(3 - 5*sw^2 + 8*sw^4) + 
              d^2*(303 - 80*sw^2 + 128*sw^4))*t + 2*(20 - 13*d + 2*d^2)*
             (3 - 20*sw^2 + 32*sw^4)*t^2)))*GaugeXi[Q]^2))/
    ((-4 + d)*mz^2*Pi^(4*d)*(mz^2 - s)^2*s^2*sw^2*(-1 + sw^2)*
     (-1 + GaugeXi[Q])), ((-I/27)*16^(-1 - d)*EL^6*
     (-(mz^6*(-627*d^3*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
          (2*s^2*(9*d^4 + d*(-2367 + 490*sw^2 - 784*sw^4) + 
             12*(177 - 50*sw^2 + 80*sw^4) + d^2*(942 - 95*sw^2 + 152*sw^4)) + 
           s*(-195*d^3 + 12*d^4 - 52*d*(57 - 10*sw^2 + 16*sw^4) + 
             32*(87 - 25*sw^2 + 40*sw^4) + d^2*(1155 - 80*sw^2 + 128*sw^4))*
            t - 2*(-4 + d)*(3 - 20*sw^2 + 32*sw^4)*t^2))) - 
      3*s^3*(3*d^3*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
         (2*s^2*(-12 - 40*sw^2 + 64*sw^4 + d*(15 + 30*sw^2 - 48*sw^4) + 
            d^2*(-6 - 5*sw^2 + 8*sw^4)) + s*(-27*d^2 + 3*d^3 - 
            32*(3 - 5*sw^2 + 8*sw^4) + d*(84 - 40*sw^2 + 64*sw^4))*t + 
          2*(-4 + d)*(3 - 20*sw^2 + 32*sw^4)*t^2)) + 
      mz^2*s^2*(513*d^3*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
         (-2*s^2*(2340 + 6*d^4 + 120*sw^2 - 192*sw^4 - 4*d^3*sw^2*
             (-5 + 8*sw^2) - 3*d*(823 - 170*sw^2 + 272*sw^4) + 
            d^2*(894 - 245*sw^2 + 392*sw^4)) + 
          s*(69*d^3 + d*(2364 + 2280*sw^2 - 3648*sw^4) + 
            d^2*(-753 - 80*sw^2 + 128*sw^4) + 32*(-69 - 185*sw^2 + 296*sw^4))*
           t + 2*(116 - 53*d + 4*d^2)*(3 - 20*sw^2 + 32*sw^4)*t^2)) + 
      mz^4*s*(-1395*d^3*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
         (2*s^2*(4716 + 21*d^4 + 360*sw^2 - 576*sw^4 + 4*d^3*sw^2*
             (-5 + 8*sw^2) + d*(-5247 + 50*sw^2 - 80*sw^4) + 
            d^2*(2082 + 5*sw^2 - 8*sw^4)) + s*(-543*d^3 + 36*d^4 + 
            32*(219 + 55*sw^2 - 88*sw^4) - 12*d*(655 - 30*sw^2 + 48*sw^4) + 
            d^2*(3147 - 320*sw^2 + 512*sw^4))*t + 2*(-28 - d + 4*d^2)*
           (3 - 20*sw^2 + 32*sw^4)*t^2)) + 
      2*(3*d^3*(2*Pi)^(3*d)*s^5 + 2^(1 + 3*d)*Pi^(3*d)*s^3*
         (2*s^2*(-12 - 40*sw^2 + 64*sw^4 + d*(15 + 30*sw^2 - 48*sw^4) + 
            d^2*(-6 - 5*sw^2 + 8*sw^4)) + s*(-27*d^2 + 3*d^3 - 
            32*(3 - 5*sw^2 + 8*sw^4) + d*(84 - 40*sw^2 + 64*sw^4))*t + 
          2*(-4 + d)*(3 - 20*sw^2 + 32*sw^4)*t^2) + 
        mz^6*(-315*d^3*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
           (s^2*(9*d^4 + d*(-2382 + 460*sw^2 - 736*sw^4) + 6*d^2*(158 - 
                15*sw^2 + 24*sw^4) + 8*(267 - 70*sw^2 + 112*sw^4)) + 
            s*(-99*d^3 + 6*d^4 + 96*(15 - 5*sw^2 + 8*sw^4) + 
              d^2*(591 - 40*sw^2 + 64*sw^4) - 4*d*(381 - 70*sw^2 + 112*sw^4))*
             t - 2*(-4 + d)*(3 - 20*sw^2 + 32*sw^4)*t^2)) + 
        mz^2*s^2*(-189*d^3*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
           (s^2*(3*d^4 - 8*d^3*sw^2*(-5 + 8*sw^2) - 106*d*(21 - 10*sw^2 + 
                16*sw^4) + 8*(273 - 50*sw^2 + 80*sw^4) + d^2*(756 - 
                430*sw^2 + 688*sw^4)) + s*(39*d^3 - 6*d^4 + 
              d^2*(33 + 120*sw^2 - 192*sw^4) + 160*(3 + 25*sw^2 - 40*sw^4) + 
              4*d*(-111 - 430*sw^2 + 688*sw^4))*t - 2*(84 - 41*d + 4*d^2)*
             (3 - 20*sw^2 + 32*sw^4)*t^2)) - 
        mz^4*s*(-765*d^3*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
           (2*s^2*(2436 + 12*d^4 + 440*sw^2 - 704*sw^4 + 4*d^3*sw^2*(-5 + 
                8*sw^2) + d^2*(1110 + 95*sw^2 - 152*sw^4) + 5*d*(-549 - 
                50*sw^2 + 80*sw^4)) + s*(-345*d^3 + 24*d^4 + 
              32*(129 - 5*sw^2 + 8*sw^4) + 3*d^2*(639 - 80*sw^2 + 128*sw^4) - 
              4*d*(1167 - 190*sw^2 + 304*sw^4))*t + 2*(12 - 15*d + 4*d^2)*
             (3 - 20*sw^2 + 32*sw^4)*t^2)))*GaugeXi[Q] + 
      (mz^2 + s)*(3*d^3*(2*Pi)^(3*d)*s^4 + 2^(1 + 3*d)*Pi^(3*d)*s^2*
         (2*s^2*(-12 - 40*sw^2 + 64*sw^4 + d*(15 + 30*sw^2 - 48*sw^4) + 
            d^2*(-6 - 5*sw^2 + 8*sw^4)) + s*(-27*d^2 + 3*d^3 - 
            32*(3 - 5*sw^2 + 8*sw^4) + d*(84 - 40*sw^2 + 64*sw^4))*t + 
          2*(-4 + d)*(3 - 20*sw^2 + 32*sw^4)*t^2) + 
        mz^4*(3*d^3*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
           (2*s^2*(-12 - 40*sw^2 + 64*sw^4 + d*(15 + 30*sw^2 - 48*sw^4) + 
              d^2*(-6 - 5*sw^2 + 8*sw^4)) + s*(-27*d^2 + 3*d^3 - 
              32*(3 - 5*sw^2 + 8*sw^4) + d*(84 - 40*sw^2 + 64*sw^4))*t + 
            2*(-4 + d)*(3 - 20*sw^2 + 32*sw^4)*t^2)) + 
        2*mz^2*s*(-69*d^3*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
           (s^2*(3*d^4 + 4*d^3*sw^2*(-5 + 8*sw^2) + d^2*(144 + 190*sw^2 - 
                304*sw^4) + 56*(3 + 10*sw^2 - 16*sw^4) + d*(-258 - 580*sw^2 + 
                928*sw^4)) + s*(-75*d^3 + 6*d^4 + 224*(3 - 5*sw^2 + 8*sw^4) - 
              60*d*(13 - 10*sw^2 + 16*sw^4) + d^2*(357 - 80*sw^2 + 128*sw^4))*
             t + 2*(28 - 15*d + 2*d^2)*(3 - 20*sw^2 + 32*sw^4)*t^2)))*
       GaugeXi[Q]^2))/((-4 + d)*mz^2*Pi^(4*d)*(mz^2 - s)^2*s^2*sw^2*
     (-1 + sw^2)*(-1 + GaugeXi[Q])), 0, 0, 
   ((-I/27)*4^(-2 - d)*EL^6*(-9*d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
       (s^2*(-6 + 3*d^2 - 20*sw^2 + 32*sw^4 + d*(6 + 10*sw^2 - 16*sw^4)) + 
        s*(15*d - 3*d^2 - 8*(3 - 5*sw^2 + 8*sw^4))*t - 
        2*(3 - 20*sw^2 + 32*sw^4)*t^2) + 
      (2^(1 + d)*Pi^d*s*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
            4*d*(-3 - 5*sw^2 + 8*sw^4)) + 2*s*(-15*d + 3*d^2 + 
            8*(3 - 5*sw^2 + 8*sw^4))*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2) + 
        mz^2*(-9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
           (2*s^2*(3 + 3*d^2 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 
                8*sw^4)) + s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
            2*(3 - 20*sw^2 + 32*sw^4)*t^2)))*GaugeXi[Q] - 
      (9*d^2*(2*Pi)^d*s^3 - 2^(1 + d)*Pi^d*s*
         (s^2*(-6 + 3*d^2 - 20*sw^2 + 32*sw^4 + d*(6 + 10*sw^2 - 16*sw^4)) + 
          s*(15*d - 3*d^2 - 8*(3 - 5*sw^2 + 8*sw^4))*t - 
          2*(3 - 20*sw^2 + 32*sw^4)*t^2) + 2^(1 + d)*mz^2*Pi^d*
         (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
          2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          4*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[Q]^2 + 
      mz^2*(-9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (2*s^2*(3 + 3*d^2 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
          s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[Q]^3))/
    (mz^2*Pi^(2*d)*s^2*sw^2*(-1 + sw^2)*(-1 + GaugeXi[Q])*
     (-s + mz^2*GaugeXi[Q])), ((-I/27)*4^(-2 - d)*EL^6*
     (3*s^2*(d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(6 + d^2 + 20*sw^2 - 32*sw^4 + 2*d*(-3 - 5*sw^2 + 8*sw^4)) + 
          s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          2*(3 - 20*sw^2 + 32*sw^4)*t^2)) - 
      2*s*(3*d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
         (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
          s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          2*(3 - 20*sw^2 + 32*sw^4)*t^2) + 2^(1 + d)*mz^2*Pi^d*
         (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
          2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          4*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[Q] + 
      (-9*d^2*(2*Pi)^d*s^4 + 2^(1 + d)*Pi^d*s^2*
         (s^2*(-6 + 3*d^2 - 20*sw^2 + 32*sw^4 + d*(6 + 10*sw^2 - 16*sw^4)) + 
          s*(15*d - 3*d^2 - 8*(3 - 5*sw^2 + 8*sw^4))*t - 
          2*(3 - 20*sw^2 + 32*sw^4)*t^2) + 2^(2 + d)*mz^2*Pi^d*s*
         (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
          2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          4*(3 - 20*sw^2 + 32*sw^4)*t^2) + mz^4*(-9*d^2*(2*Pi)^d*s^2 + 
          2^(1 + d)*Pi^d*(2*s^2*(3 + 3*d^2 + 10*sw^2 - 16*sw^4 + 
              d*(-3 - 5*sw^2 + 8*sw^4)) + s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 
                8*sw^4))*t + 2*(3 - 20*sw^2 + 32*sw^4)*t^2)))*GaugeXi[Q]^2 - 
      2*mz^4*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
          s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[Q]^3 + 
      mz^4*(-9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (2*s^2*(3 + 3*d^2 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
          s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[Q]^4))/
    (mz^2*Pi^(2*d)*s^2*sw^2*(-1 + sw^2)*(-1 + GaugeXi[Q])*
     (s - mz^2*GaugeXi[Q])), 0, 0, 0, 0, 0, 0, 0, 0, 
   ((I/27)*4^(-1 - d)*EL^6*(27*d^3*(2*Pi)^d*s + 
      mz^2*(-3*d^3*(15 + d)*(2*Pi)^d + 2^(1 + d)*Pi^d*(-9*d^3 + 3*d^4 + 
          48*(12 - 5*sw^2 + 8*sw^4) + 3*d^2*(71 - 10*sw^2 + 16*sw^4) - 
          2*d*(294 - 85*sw^2 + 136*sw^4))) + 2^(1 + d)*Pi^d*
       (s*(-225*d^2 + 9*d^3 + d*(744 + 30*sw^2 - 48*sw^4) + 
          16*(-51 - 5*sw^2 + 8*sw^4)) + (-36*d^3 + 3*d^4 + 
          2*d^2*(87 - 10*sw^2 + 16*sw^4) + 16*(24 - 25*sw^2 + 40*sw^4) - 
          8*d*(51 - 25*sw^2 + 40*sw^4))*t)))/((-4 + d)*Pi^(2*d)*s*sw^2*
     (-1 + sw^2)), 0, ((I/27)*2^(-3 - 2*d)*EL^6*
     ((s + t)*(-3*d^3*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
         (s*(33*d^2 + 16*(15 + 5*sw^2 - 8*sw^4) + 2*d*(-84 - 5*sw^2 + 
              8*sw^4)) + 4*(-18*d + 3*d^2 + 4*(6 + 5*sw^2 - 8*sw^4))*t)) + 
      mz^2*(-3*d^3*(2*Pi)^d*(s - 3*t) + 2^(1 + d)*Pi^d*
         (s*(-144 - 45*d^2 + 6*d^3 + 2*d*(72 - 5*sw^2 + 8*sw^4)) + 
          (-144 - 45*d^2 + 2*d*(72 - 5*sw^2 + 8*sw^4))*t))))/
    (Pi^(2*d)*s*sw^2*(-1 + sw^2)), ((I/27)*2^(-3 - 2*d)*EL^6*(s + t)*
     (-3*d^3*(2*Pi)^d*s^2 + mz^4*(3*d^3*(2*Pi)^d + 2^(1 + d)*Pi^d*
         (-27*d^2 - 16*(12 - 5*sw^2 + 8*sw^4) + 
          6*d*(22 - 5*sw^2 + 8*sw^4))) - 2^(1 + d)*mz^2*Pi^d*
       (s*(-432 - 60*d^2 + 3*d^3 + 4*d*(75 - 5*sw^2 + 8*sw^4)) - 
        4*(-18*d + 3*d^2 + 4*(6 + 5*sw^2 - 8*sw^4))*t) + 
      2^(1 + d)*Pi^d*(3*s^2*(-72 - 9*d^2 + d^3 + 
          2*d*(24 - 5*sw^2 + 8*sw^4)) + 12*s*(d + 4*sw^2*(-5 + 8*sw^2))*t + 
        8*(3 - 20*sw^2 + 32*sw^4)*t^2)))/(Pi^(2*d)*s*sw^2*(-1 + sw^2)), 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, ((I/27)*2^(-7 - 4*d)*EL^6*(-27*d^3*(2*Pi)^(3*d)*s^4 + 
      2^(1 + 3*d)*Pi^(3*d)*s^2*(-2*s^2*(-27*d^3*(7 - 45*sw^2 + 72*sw^4) + 
          d^4*(9 - 60*sw^2 + 96*sw^4) + 4*(657 - 4380*sw^2 + 6956*sw^4 + 
            160*sw^6 - 128*sw^8) + 2*d^2*(603 - 4020*sw^2 + 6575*sw^4 - 
            440*sw^6 + 352*sw^8) - 3*d*(1023 - 6820*sw^2 + 11068*sw^4 - 
            480*sw^6 + 384*sw^8)) + s*(-75*d^2*(3 - 20*sw^2 + 32*sw^4) + 
          d^3*(9 - 60*sw^2 + 96*sw^4) + 32*(-9 + 60*sw^2 + 190*sw^4 - 
            880*sw^6 + 704*sw^8) - 4*d*(-135 + 900*sw^2 - 244*sw^4 - 
            3680*sw^6 + 2944*sw^8))*t - 2*(-28 + 15*d)*
         (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^2) - 
      mz^4*(45*d^3*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
         (s^2*(6*d^4*(3 - 20*sw^2 + 32*sw^4) - 9*d^3*(43 - 270*sw^2 + 
              432*sw^4) + d*(-5562 + 37080*sw^2 - 61928*sw^4 + 8000*sw^6 - 
              6400*sw^8) + 4*d^2*(567 - 3780*sw^2 + 6191*sw^4 - 440*sw^6 + 
              352*sw^8) + 8*(585 - 3900*sw^2 + 6604*sw^4 - 1120*sw^6 + 
              896*sw^8)) + s*(d^3*(-9 + 60*sw^2 - 96*sw^4) + 
            27*d^2*(3 - 20*sw^2 + 32*sw^4) + 32*(9 - 60*sw^2 + 122*sw^4 - 
              80*sw^6 + 64*sw^8) - 4*d*(63 - 420*sw^2 + 724*sw^4 - 160*sw^6 + 
              128*sw^8))*t - 2*(-4 + d)*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
            256*sw^8)*t^2)) + 2*mz^2*s*(-909*d^3*(2*Pi)^(3*d)*s^2 + 
        2^(1 + 3*d)*Pi^(3*d)*(s^2*(9*d^4*(3 - 20*sw^2 + 32*sw^4) + 
            6*d*(-1059 + 7060*sw^2 - 11244*sw^4 - 160*sw^6 + 128*sw^8) - 
            8*(-657 + 4380*sw^2 - 6956*sw^4 - 160*sw^6 + 128*sw^8) - 
            4*d^2*(-666 + 4440*sw^2 - 7039*sw^4 - 200*sw^6 + 160*sw^8) + 
            d^3*(3030*sw^2 - 4744*sw^4 - 320*sw^6 + 256*sw^8)) + 
          s*(-69*d^3*(3 - 20*sw^2 + 32*sw^4) + 6*d^4*(3 - 20*sw^2 + 
              32*sw^4) - 32*(-45 + 300*sw^2 - 454*sw^4 - 80*sw^6 + 64*sw^8) - 
            4*d*(495 - 3300*sw^2 + 5332*sw^4 - 160*sw^6 + 128*sw^8) + 
            d^2*(981 - 6540*sw^2 + 10880*sw^4 - 1280*sw^6 + 1024*sw^8))*t + 
          2*(4 - 5*d + 2*d^2)*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*
           t^2)) + 2*(-369*d^3*(2*Pi)^(3*d)*s^4 + 2^(1 + 3*d)*Pi^(3*d)*s^2*
         (s^2*(-246*d^3*sw^2*(-5 + 8*sw^2) + d^4*(9 - 60*sw^2 + 96*sw^4) - 
            8*(-333 + 2220*sw^2 - 3500*sw^4 - 160*sw^6 + 128*sw^8) - 
            6*d*(519 - 3460*sw^2 + 5588*sw^4 - 160*sw^6 + 128*sw^8) + 
            4*d^2*(306 - 2040*sw^2 + 3329*sw^4 - 200*sw^6 + 160*sw^8)) - 
          s*(-51*d^2*(3 - 20*sw^2 + 32*sw^4) + d^3*(9 - 60*sw^2 + 96*sw^4) - 
            44*d*(-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 128*sw^8) + 
            32*(-9 + 60*sw^2 + 34*sw^4 - 400*sw^6 + 320*sw^8))*t + 
          2*(-12 + 7*d)*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^2) + 
        mz^4*(-369*d^3*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
           (s^2*(-246*d^3*sw^2*(-5 + 8*sw^2) + d^4*(9 - 60*sw^2 + 96*sw^4) + 
              24*(99 - 660*sw^2 + 1108*sw^4 - 160*sw^6 + 128*sw^8) + 
              4*d^2*(288 - 1920*sw^2 + 3137*sw^4 - 200*sw^6 + 160*sw^8) - 
              2*d*(1413 - 9420*sw^2 + 15644*sw^4 - 1760*sw^6 + 1408*sw^8)) + 
            s*(d^3*(-9 + 60*sw^2 - 96*sw^4) + 27*d^2*(3 - 20*sw^2 + 
                32*sw^4) + 32*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8) - 
              4*d*(63 - 420*sw^2 + 724*sw^4 - 160*sw^6 + 128*sw^8))*t - 
            2*(-4 + d)*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^2)) - 
        2*mz^2*s*(-549*d^3*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
           (2*s^2*(d^4*(9 - 60*sw^2 + 96*sw^4) + d^3*sw^2*(915 - 1412*sw^2 - 
                160*sw^4 + 128*sw^6) + d^2*(756 - 5040*sw^2 + 7778*sw^4 + 
                880*sw^6 - 704*sw^8) + 12*(117 - 780*sw^2 + 1196*sw^4 + 
                160*sw^6 - 128*sw^8) + d*(-1737 + 11580*sw^2 - 17852*sw^4 - 
                2080*sw^6 + 1664*sw^8)) + s*(-69*d^3*(3 - 20*sw^2 + 
                32*sw^4) + 6*d^4*(3 - 20*sw^2 + 32*sw^4) + 
              32*(45 - 300*sw^2 + 532*sw^4 - 160*sw^6 + 128*sw^8) - 
              4*d*(477 - 3180*sw^2 + 5452*sw^4 - 1120*sw^6 + 896*sw^8) + 
              d^2*(945 - 6300*sw^2 + 10496*sw^4 - 1280*sw^6 + 1024*sw^8))*t + 
            2*(12 - 9*d + 2*d^2)*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
              256*sw^8)*t^2)))*GaugeXi[Q] + 
      (-27*d^3*(2*Pi)^(3*d)*s^4 + 2^(1 + 3*d)*Pi^(3*d)*s^2*
         (2*s^2*(3*d^3*(3 - 5*sw^2 + 8*sw^4) + d*(45 - 300*sw^2 + 324*sw^4 + 
              480*sw^6 - 384*sw^8) + 2*d^2*(-9 + 60*sw^2 - 83*sw^4 - 
              40*sw^6 + 32*sw^8) + 4*(-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 
              128*sw^8)) + s*(-27*d^2*(3 - 20*sw^2 + 32*sw^4) + 
            d^3*(9 - 60*sw^2 + 96*sw^4) - 32*(9 - 60*sw^2 + 122*sw^4 - 
              80*sw^6 + 64*sw^8) + 4*d*(63 - 420*sw^2 + 724*sw^4 - 160*sw^6 + 
              128*sw^8))*t + 2*(-4 + d)*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
            256*sw^8)*t^2) + mz^4*(-45*d^3*(2*Pi)^(3*d)*s^2 + 
          2^(1 + 3*d)*Pi^(3*d)*(s^2*(3*d^3*(9 - 10*sw^2 + 16*sw^4) + 
              d*(90 - 600*sw^2 + 648*sw^4 + 960*sw^6 - 768*sw^8) + 
              4*d^2*(-9 + 60*sw^2 - 83*sw^4 - 40*sw^6 + 32*sw^8) + 
              8*(-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 128*sw^8)) + 
            s*(-27*d^2*(3 - 20*sw^2 + 32*sw^4) + d^3*(9 - 60*sw^2 + 
                96*sw^4) - 32*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8) + 
              4*d*(63 - 420*sw^2 + 724*sw^4 - 160*sw^6 + 128*sw^8))*t + 
            2*(-4 + d)*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^2)) + 
        2*mz^2*s*(-189*d^3*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
           (s^2*(d^4*(9 - 60*sw^2 + 96*sw^4) - 40*(-9 + 60*sw^2 - 44*sw^4 - 
                160*sw^6 + 128*sw^8) + d^3*(630*sw^2 - 904*sw^4 - 320*sw^6 + 
                256*sw^8) - 4*d^2*(-90 + 600*sw^2 - 739*sw^4 - 680*sw^6 + 
                544*sw^8) + d*(-594 + 3960*sw^2 - 3944*sw^4 - 7360*sw^6 + 
                5888*sw^8)) + s*(-69*d^3*(3 - 20*sw^2 + 32*sw^4) + 
              6*d^4*(3 - 20*sw^2 + 32*sw^4) + 160*(9 - 60*sw^2 + 122*sw^4 - 
                80*sw^6 + 64*sw^8) + d^2*(909 - 6060*sw^2 + 10112*sw^4 - 
                1280*sw^6 + 1024*sw^8) - 4*d*(459 - 3060*sw^2 + 5572*sw^4 - 
                2080*sw^6 + 1664*sw^8))*t + 2*(20 - 13*d + 2*d^2)*
             (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^2)))*
       GaugeXi[Q]^2))/((-4 + d)*mz^2*Pi^(4*d)*(mz^2 - s)^3*s*sw^4*
     (-1 + sw^2)^2*(-1 + GaugeXi[Q])), 
   ((I/27)*2^(-7 - 4*d)*EL^6*(4^(3 + d)*(4 - d)*Pi^(2*d)*(mz^2 - s)^2*s*
       ((sw^4*(3 - 4*sw^2)^2*(d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
            ((4 - 3*d)*s^2 + (4 - 5*d + d^2)*s*t - 2*t^2) + 
           mz^2*(-(d^3*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*((56 - 41*d + 9*d^2)*s - 
               (-52 + 44*d - 12*d^2 + d^3)*t))))/4 - 
        4*sw^8*(d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*(-2*(-1 + d)*s^2 + 
            (8 - 5*d + d^2)*s*t + 2*t^2) + mz^2*(-(d^3*(2*Pi)^d*s) + 
            2^(1 + d)*Pi^d*((64 - 44*d + 9*d^2)*s - (-56 + 46*d - 12*d^2 + 
                d^3)*t))) + (-1/2 + sw^2)^2*
         (4*sw^4*(d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*((4 - 3*d)*s^2 + 
              (4 - 5*d + d^2)*s*t - 2*t^2) + mz^2*(-(d^3*(2*Pi)^d*s) + 
              2^(1 + d)*Pi^d*((56 - 41*d + 9*d^2)*s - (-52 + 44*d - 12*d^2 + 
                  d^3)*t))) - ((3 - 4*sw^2)^2*(d^2*(2*Pi)^d*s^2 + 
             2^(1 + d)*Pi^d*(-2*(-1 + d)*s^2 + (8 - 5*d + d^2)*s*t + 2*t^2) + 
             mz^2*(-(d^3*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*((64 - 44*d + 9*d^2)*
                  s - (-56 + 46*d - 12*d^2 + d^3)*t))))/4))*
       (1 - GaugeXi[Q]) + 2^(2 + 3*d)*Pi^(3*d)*s*(mz^3 - mz*s)^2*
       (-36*d^2*(3 - 20*sw^2 + 32*sw^4) + d^3*(9 - 60*sw^2 + 96*sw^4) - 
        8*(63 - 420*sw^2 + 698*sw^4 - 80*sw^6 + 64*sw^8) + 
        d*(414 - 2760*sw^2 + 4520*sw^4 - 320*sw^6 + 256*sw^8))*
       ((-2 + d)*s + 2*t)*(-1 + GaugeXi[Q]) + 4^(1 + d)*Pi^(2*d)*s*
       (mz^3 - mz*s)^2*(9*d^3*(2*Pi)^d + 2^(1 + d)*Pi^d*
         (6*d^3*sw^2*(-5 + 8*sw^2) - 18*d^2*(3 - 20*sw^2 + 32*sw^4) - 
          4*(63 - 420*sw^2 + 698*sw^4 - 80*sw^6 + 64*sw^8) + 
          d*(207 - 1380*sw^2 + 2260*sw^4 - 160*sw^6 + 128*sw^8)))*
       ((-2 + d)*s + 2*t)*(-1 + GaugeXi[Q]) - 2^(3 + 2*d)*(-3 + d)*mz^2*
       Pi^(2*d)*(mz^2 - s)*s*(-27*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(-18*d^3*sw^2*(-5 + 8*sw^2) + 63*d^2*(3 - 20*sw^2 + 32*sw^4) + 
            d*(-846 + 5640*sw^2 - 9284*sw^4 + 800*sw^6 - 640*sw^8) + 
            16*(72 - 480*sw^2 + 781*sw^4 - 40*sw^6 + 32*sw^8)) + 
          s*(d^3*(-9 + 60*sw^2 - 96*sw^4) + 36*d^2*(3 - 20*sw^2 + 32*sw^4) + 
            d*(-450 + 3000*sw^2 - 4904*sw^4 + 320*sw^6 - 256*sw^8) - 
            8*(-63 + 420*sw^2 - 542*sw^4 - 400*sw^6 + 320*sw^8))*t - 
          8*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^2) + 
        mz^2*(27*d^3*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
           (s*(18*d^3*sw^2*(-5 + 8*sw^2) - 63*d^2*(3 - 20*sw^2 + 32*sw^4) - 
              24*(45 - 300*sw^2 + 506*sw^4 - 80*sw^6 + 64*sw^8) + 
              10*d*(81 - 540*sw^2 + 890*sw^4 - 80*sw^6 + 64*sw^8)) + 
            (-36*d^2*(3 - 20*sw^2 + 32*sw^4) + d^3*(9 - 60*sw^2 + 96*sw^4) - 
              8*(63 - 420*sw^2 + 698*sw^4 - 80*sw^6 + 64*sw^8) + 
              d*(414 - 2760*sw^2 + 4520*sw^4 - 320*sw^6 + 256*sw^8))*t)))*
       (-1 + GaugeXi[Q]) + 2^(1 + 3*d)*(-4 + d)*Pi^(3*d)*(mz^2 - s)^2*s^2*
       ((-4 + d)*mz^2 + d*s)*(1 - 4*sw^2 + 8*sw^4)*(9 - 24*sw^2 + 32*sw^4)*
       (-1 + GaugeXi[Q])^2 - 4^(1 + d)*(-4 + d)*Pi^(2*d)*(mz^2 - s)^2*s*
       (s*(9*d*(2*Pi)^d - 2^(2 + d)*Pi^d*(9 + 15*(-4 + d)*sw^2 + 
            (122 - 24*d)*sw^4 - 80*sw^6 + 64*sw^8))*(s + t) + 
        mz^2*(9*d*(2*Pi)^d*t + 2^(1 + d)*Pi^d*
           (s*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8) + 
            (-9 - 30*(-2 + d)*sw^2 + (-44 + 48*d)*sw^4 - 160*sw^6 + 128*sw^8)*
             t)))*(-1 + GaugeXi[Q])^2 - (-4 + d)*(2*Pi)^(2*d)*(mz^2 - s)^2*
       (mz^2*((-6 + d)*s - 2*t) + s*((-2 + d)*s - 2*t))*
       (9*d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(2*s*(9 + 15*(-4 + d)*sw^2 + 
            (122 - 24*d)*sw^4 - 80*sw^6 + 64*sw^8) + 
          (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t) - 
        2^(1 + d)*Pi^d*(d*s*(9 - 60*sw^2 + 96*sw^4) - 
          4*s*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8) - 
          2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t)*GaugeXi[Q] + 
        (9*d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(2*s*(9 + 15*(-4 + d)*sw^2 + 
              (122 - 24*d)*sw^4 - 80*sw^6 + 64*sw^8) + 
            (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t))*
         GaugeXi[Q]^2) + (-4 + d)*(2*Pi)^(2*d)*(mz^2 - s)^2*s*
       ((-4 + d)*mz^2 + (-2 + d)*s)*(9*d*(2*Pi)^d*s - 
        2^(1 + d)*Pi^d*(3*s*(9 + 10*(-6 + d)*sw^2 - 4*(-37 + 4*d)*sw^4 - 
            160*sw^6 + 128*sw^8) + (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
            256*sw^8)*t) - 2^(1 + d)*Pi^d*(d*s*(9 - 60*sw^2 + 96*sw^4) - 
          6*s*(9 - 60*sw^2 + 148*sw^4 - 160*sw^6 + 128*sw^8) - 
          2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t)*GaugeXi[Q] + 
        (9*d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(3*s*(9 + 10*(-6 + d)*sw^2 - 
              4*(-37 + 4*d)*sw^4 - 160*sw^6 + 128*sw^8) + 
            (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t))*
         GaugeXi[Q]^2) + 2^(1 + 2*d)*(-4 + d)*Pi^(2*d)*(mz^2 - s)^3*s*
       (-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(3*s*(9 + 10*(-6 + d)*sw^2 - 
            4*(-37 + 4*d)*sw^4 - 160*sw^6 + 128*sw^8) + 
          (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t) + 
        2^(1 + d)*Pi^d*(d*s*(9 - 60*sw^2 + 96*sw^4) - 
          6*s*(9 - 60*sw^2 + 148*sw^4 - 160*sw^6 + 128*sw^8) - 
          2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t)*GaugeXi[Q] + 
        (-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(3*s*(9 + 10*(-6 + d)*sw^2 - 
              4*(-37 + 4*d)*sw^4 - 160*sw^6 + 128*sw^8) + 
            (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t))*
         GaugeXi[Q]^2) + (4 - d)*(2*Pi)^(2*d)*(mz^2 - s)*s*
       ((-4 + d)*mz^2 + (-2 + d)*s)*(2^(2 + d)*Pi^d*(mz^2 - s)*sw^4*
         (96*s*sw^4 + 3*d*s*(3 - 8*sw^2) + 2*(9 - 24*sw^2 + 32*sw^4)*t) + 
        (1 - 2*sw^2)^2*(-(s*(-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
              (3*s*(9 + 4*(-6 + d)*sw^2 + 16*sw^4) + (9 - 24*sw^2 + 32*sw^4)*
                t))) + mz^2*(-27*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
             (3*s*((3 - 4*sw^2)^2 + d*(3 + 4*sw^2)) + (9 - 24*sw^2 + 32*sw^4)*
               t))) + 2*(mz^2 - s)*(9*d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*
           (3*s*(9 + 10*(-6 + d)*sw^2 - 4*(-37 + 4*d)*sw^4 - 160*sw^6 + 
              128*sw^8) + (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t))*
         GaugeXi[Q] - (mz^2*(27*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
             (-3*s*(9 - 60*sw^2 + 148*sw^4 - 160*sw^6 + 128*sw^8 + 
                d*(3 + 10*sw^2 - 16*sw^4)) + (-9 + 60*sw^2 - 200*sw^4 + 
                320*sw^6 - 256*sw^8)*t)) + s*(-9*d*(2*Pi)^d*s + 
            2^(1 + d)*Pi^d*(3*s*(9 + 10*(-6 + d)*sw^2 - 4*(-37 + 4*d)*sw^4 - 
                160*sw^6 + 128*sw^8) + (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
                256*sw^8)*t)))*GaugeXi[Q]^2) - 2*(-4 + d)*(-3 + d)*s*
       (mz^2 + s)*(mz^4*(2*Pi)^(3*d)*(d*(9 - 60*sw^2 + 96*sw^4) - 
          4*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8))*(s + t) + 
        (2*Pi)^(3*d)*s^2*(d*(9 - 60*sw^2 + 96*sw^4) - 
          4*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8))*(s + t) + 
        2*mz^2*(9*d*(2*Pi)^(3*d)*s*((-5 + d)*s - 11*t) + 2^(1 + 3*d)*Pi^(3*d)*
           (2*s^2*(18 - 15*(8 - 5*d + d^2)*sw^2 + 2*(83 - 47*d + 12*d^2)*sw^
                4 - 80*(-1 + d)*sw^6 + 64*(-1 + d)*sw^8) + 
            s*(-66*d*sw^2*(-5 + 8*sw^2) + d^2*(9 - 60*sw^2 + 96*sw^4) + 
              10*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8))*t + 
            2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^2)) - 
        2*(mz^4*(2*Pi)^(3*d)*(d*(9 - 60*sw^2 + 96*sw^4) - 
            4*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8))*(s + t) + 
          (2*Pi)^(3*d)*s^2*(d*(9 - 60*sw^2 + 96*sw^4) - 
            4*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8))*(s + t) + 
          2*mz^2*(9*d*(2*Pi)^(3*d)*s*((-5 + d)*s - 11*t) + 
            2^(1 + 3*d)*Pi^(3*d)*(2*s^2*(18 - 15*(8 - 5*d + d^2)*sw^2 + 
                2*(83 - 47*d + 12*d^2)*sw^4 - 80*(-1 + d)*sw^6 + 
                64*(-1 + d)*sw^8) + s*(-66*d*sw^2*(-5 + 8*sw^2) + 
                d^2*(9 - 60*sw^2 + 96*sw^4) + 10*(9 - 60*sw^2 + 122*sw^4 - 
                  80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 
                320*sw^6 + 256*sw^8)*t^2)))*GaugeXi[Q] + 
        (mz^4*(2*Pi)^(3*d)*(d*(9 - 60*sw^2 + 96*sw^4) - 
            4*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8))*(s + t) + 
          (2*Pi)^(3*d)*s^2*(d*(9 - 60*sw^2 + 96*sw^4) - 
            4*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8))*(s + t) + 
          2*mz^2*(9*d*(2*Pi)^(3*d)*s*((-5 + d)*s - 11*t) + 
            2^(1 + 3*d)*Pi^(3*d)*(2*s^2*(18 - 15*(8 - 5*d + d^2)*sw^2 + 
                2*(83 - 47*d + 12*d^2)*sw^4 - 80*(-1 + d)*sw^6 + 
                64*(-1 + d)*sw^8) + s*(-66*d*sw^2*(-5 + 8*sw^2) + 
                d^2*(9 - 60*sw^2 + 96*sw^4) + 10*(9 - 60*sw^2 + 122*sw^4 - 
                  80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 
                320*sw^6 + 256*sw^8)*t^2)))*GaugeXi[Q]^2)))/
    ((-4 + d)*Pi^(4*d)*(mz^2 - s)^3*s*sw^4*(mz - mz*sw^2)^2*
     (-1 + GaugeXi[Q])), 0, 0, ((-I/27)*2^(-7 - 2*d)*EL^6*
     (9*d^2*(2*Pi)^d*s^4 + 2^(1 + d)*Pi^d*s^2*
       (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
          3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
            64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
          d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 
            64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*
         t^2) - 2*s*(mz^2 + s)*(9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
            3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
              64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
            d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
              80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
            256*sw^8)*t^2))*GaugeXi[Q] + 
      (9*d^2*(2*Pi)^d*s^4 + 2^(1 + d)*Pi^d*s^2*
         (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
            3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
              64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
            d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
              80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
            256*sw^8)*t^2) + 4*mz^2*s*(9*d^2*(2*Pi)^d*s^2 + 
          2^(1 + d)*Pi^d*(2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 
              128*sw^8 + 3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 
                70*sw^4 - 80*sw^6 + 64*sw^8)) + 
            s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + d^2*(9 - 60*sw^2 + 96*sw^4) + 
              8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8))*t + 
            2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^2)) + 
        mz^4*(-45*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
           (s^2*(18 - 120*sw^2 + 88*sw^4 + 320*sw^6 - 256*sw^8 + 
              3*d^2*(9 - 10*sw^2 + 16*sw^4) + 2*d*(-9 + 60*sw^2 - 70*sw^4 - 
                80*sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
              d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
                80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 
              320*sw^6 + 256*sw^8)*t^2)))*GaugeXi[Q]^2 - 
      2*mz^2*(mz^2 + s)*(9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
            3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
              64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
            d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
              80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
            256*sw^8)*t^2))*GaugeXi[Q]^3 + 
      mz^4*(-45*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(18 - 120*sw^2 + 88*sw^4 + 320*sw^6 - 256*sw^8 + 
            3*d^2*(9 - 10*sw^2 + 16*sw^4) + 2*d*(-9 + 60*sw^2 - 70*sw^4 - 
              80*sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
            d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
              80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
            256*sw^8)*t^2))*GaugeXi[Q]^4))/(mz^2*Pi^(2*d)*(mz^2 - s)*s*sw^4*
     (-1 + sw^2)^2*(-1 + GaugeXi[Q])*(s - mz^2*GaugeXi[Q])^2), 
   ((I/27)*2^(-7 - 2*d)*EL^6*
     (-3*(9*d^2*(2*Pi)^d*s^5 + 2^(1 + d)*Pi^d*s^3*
         (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
            3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
              64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
            d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
              80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
            256*sw^8)*t^2)) + 
      s^2*(2*s*(9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
           (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
              3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 
                80*sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
              d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
                80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 
              320*sw^6 + 256*sw^8)*t^2)) + mz^2*(81*d^2*(2*Pi)^d*s^2 + 
          2^(1 + d)*Pi^d*(s^2*(3*d^2*(-3 - 70*sw^2 + 112*sw^4) + 
              14*d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 64*sw^8) - 
              14*(-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 128*sw^8)) + 
            7*s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + d^2*(9 - 60*sw^2 + 
                96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8))*
             t + 14*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^2)))*
       GaugeXi[Q] + s*(9*d^2*(2*Pi)^d*s^4 + 2^(1 + d)*Pi^d*s^2*
         (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
            3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
              64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
            d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
              80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
            256*sw^8)*t^2) - 6*mz^2*s*(9*d^2*(2*Pi)^d*s^2 + 
          2^(1 + d)*Pi^d*(2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 
              128*sw^8 + 3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 
                70*sw^4 - 80*sw^6 + 64*sw^8)) + 
            s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + d^2*(9 - 60*sw^2 + 96*sw^4) + 
              8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8))*t + 
            2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^2)) - 
        mz^4*(81*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
           (2*s^2*(3*d^2*(-3 - 25*sw^2 + 40*sw^4) + 5*(9 - 60*sw^2 + 
                44*sw^4 + 160*sw^6 - 128*sw^8) + 5*d*(-9 + 60*sw^2 - 
                70*sw^4 - 80*sw^6 + 64*sw^8)) + 
            5*s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + d^2*(9 - 60*sw^2 + 
                96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8))*
             t + 10*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^2)))*
       GaugeXi[Q]^2 + mz^2*(9*d^2*(2*Pi)^d*s^4 - 2^(1 + d)*Pi^d*s^2*
         (s^2*(18 - 120*sw^2 + 88*sw^4 + 320*sw^6 - 256*sw^8 + 
            d^2*(9 - 30*sw^2 + 48*sw^4) + 2*d*(-9 + 60*sw^2 - 70*sw^4 - 
              80*sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
            d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
              80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
            256*sw^8)*t^2) + 6*mz^2*s*(9*d^2*(2*Pi)^d*s^2 + 
          2^(1 + d)*Pi^d*(2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 
              128*sw^8 + 3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 
                70*sw^4 - 80*sw^6 + 64*sw^8)) + 
            s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + d^2*(9 - 60*sw^2 + 96*sw^4) + 
              8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8))*t + 
            2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^2)) + 
        mz^4*(-45*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
           (s^2*(18 - 120*sw^2 + 88*sw^4 + 320*sw^6 - 256*sw^8 + 
              3*d^2*(9 - 10*sw^2 + 16*sw^4) + 2*d*(-9 + 60*sw^2 - 70*sw^4 - 
                80*sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
              d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
                80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 
              320*sw^6 + 256*sw^8)*t^2)))*GaugeXi[Q]^3 - 
      mz^4*(45*d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
         (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
            3*d^2*(-3 - 5*sw^2 + 8*sw^4) + d*(-9 + 60*sw^2 - 70*sw^4 - 
              80*sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
            d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
              80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
            256*sw^8)*t^2) + 2*mz^2*(9*d^2*(2*Pi)^d*s^2 + 
          2^(1 + d)*Pi^d*(2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 
              128*sw^8 + 3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 
                70*sw^4 - 80*sw^6 + 64*sw^8)) + 
            s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + d^2*(9 - 60*sw^2 + 96*sw^4) + 
              8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8))*t + 
            2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^2)))*
       GaugeXi[Q]^4 + mz^6*(-45*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(18 - 120*sw^2 + 88*sw^4 + 320*sw^6 - 256*sw^8 + 
            3*d^2*(9 - 10*sw^2 + 16*sw^4) + 2*d*(-9 + 60*sw^2 - 70*sw^4 - 
              80*sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
            d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
              80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
            256*sw^8)*t^2))*GaugeXi[Q]^5))/(mz^2*Pi^(2*d)*(mz^2 - s)*s*sw^4*
     (-1 + sw^2)^2*(-1 + GaugeXi[Q])*(s - mz^2*GaugeXi[Q])^2), 0, 0, 0, 0, 0, 
   0, 0, 0, ((I/27)*2^(-5 - 2*d)*EL^6*(63*d^3*(2*Pi)^d*s + 
      (-3 + d)*mz^2*(9*d^3*(2*Pi)^d + 2^(1 + d)*Pi^d*
         (6*d^3*sw^2*(-5 + 8*sw^2) - 27*d^2*(3 - 20*sw^2 + 32*sw^4) - 
          32*(18 - 120*sw^2 + 205*sw^4 - 40*sw^6 + 32*sw^8) + 
          12*d*(33 - 220*sw^2 + 365*sw^4 - 40*sw^6 + 32*sw^8))) + 
      2^(1 + d)*Pi^d*(s*(-225*d^2*(3 - 20*sw^2 + 32*sw^4) + 
          18*d^3*(2 - 25*sw^2 + 40*sw^4) - 12*d*(-186 + 1240*sw^2 - 
            1971*sw^4 - 40*sw^6 + 32*sw^8) + 16*(-153 + 1020*sw^2 - 
            1606*sw^4 - 80*sw^6 + 64*sw^8)) + 
        (-36*d^3*(3 - 20*sw^2 + 32*sw^4) + d^4*(9 - 60*sw^2 + 96*sw^4) + 
          32*(36 - 240*sw^2 + 449*sw^4 - 200*sw^6 + 160*sw^8) + 
          d^2*(522 - 3480*sw^2 + 5672*sw^4 - 320*sw^6 + 256*sw^8) - 
          8*d*(153 - 1020*sw^2 + 1762*sw^4 - 400*sw^6 + 320*sw^8))*t)))/
    ((-4 + d)*Pi^(2*d)*(mz^2 - s)*sw^4*(-1 + sw^2)^2), 0, 
   ((I/27)*4^(-3 - d)*EL^6*
     (-((s + t)*(9*d^3*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
          (s*(6*d^3*sw^2*(-5 + 8*sw^2) - 33*d^2*(3 - 20*sw^2 + 32*sw^4) - 
             4*d*(-126 + 840*sw^2 - 1331*sw^4 - 40*sw^6 + 32*sw^8) + 
             16*(-45 + 300*sw^2 - 454*sw^4 - 80*sw^6 + 64*sw^8)) - 
           4*(-18*d*(3 - 20*sw^2 + 32*sw^4) + d^2*(9 - 60*sw^2 + 96*sw^4) - 
             8*(-9 + 60*sw^2 - 83*sw^4 - 40*sw^6 + 32*sw^8))*t))) + 
      mz^2*(-9*d^3*(2*Pi)^d*(s - 3*t) + 2^(1 + d)*Pi^d*
         (s*(18*d^3*(1 - 5*sw^2 + 8*sw^4) - 144*(3 - 20*sw^2 + 32*sw^4) - 
            45*d^2*(3 - 20*sw^2 + 32*sw^4) + 4*d*(108 - 720*sw^2 + 
              1165*sw^4 - 40*sw^6 + 32*sw^8)) + (18*d^3*sw^2*(-5 + 8*sw^2) - 
            144*(3 - 20*sw^2 + 32*sw^4) - 45*d^2*(3 - 20*sw^2 + 32*sw^4) + 
            4*d*(108 - 720*sw^2 + 1165*sw^4 - 40*sw^6 + 32*sw^8))*t))))/
    (Pi^(2*d)*(mz^2 - s)*sw^4*(-1 + sw^2)^2), 
   ((-I/27)*EL^6*
     (-(sw^4*(3 - 4*sw^2)^2*(mz^4*(2^(1 + d)*(56 - 41*d + 9*d^2)*Pi^d - 
            d^3*(2*Pi)^d)*(s + t) - d^3*(2*Pi)^d*s^2*(s + 3*t) + 
          2^(1 + d)*mz^2*Pi^d*((-144 + 98*d - 20*d^2 + d^3)*s^2 + 
            (-184 + 122*d - 24*d^2 + d^3)*s*t - 4*(10 - 6*d + d^2)*t^2) + 
          2^(1 + d)*Pi^d*(9*(8 - 5*d + d^2)*s^3 + (96 - 49*d + 9*d^2 + d^3)*
             s^2*t - 4*(-8 + d)*s*t^2 + 8*t^3)))/4 + 
      4*sw^8*(mz^4*(2^(1 + d)*(64 - 44*d + 9*d^2)*Pi^d - d^3*(2*Pi)^d)*
         (s + t) - d^3*(2*Pi)^d*s^2*(s + 3*t) + 2^(1 + d)*(-4 + d)*mz^2*Pi^d*
         (s + t)*((36 - 16*d + d^2)*s - 4*(-2 + d)*t) - 
        2^(1 + d)*Pi^d*((-72 + 48*d - 9*d^2)*s^3 - (72 - 52*d + 9*d^2 + d^3)*
           s^2*t + 4*(2 + d)*s*t^2 + 8*t^3)) + (-1/2 + sw^2)^2*
       (((3 - 4*sw^2)^2*(mz^4*(2^(1 + d)*(64 - 44*d + 9*d^2)*Pi^d - 
             d^3*(2*Pi)^d)*(s + t) - d^3*(2*Pi)^d*s^2*(s + 3*t) + 
           2^(1 + d)*(-4 + d)*mz^2*Pi^d*(s + t)*((36 - 16*d + d^2)*s - 
             4*(-2 + d)*t) + 2^(1 + d)*Pi^d*((72 - 48*d + 9*d^2)*s^3 + 
             (72 - 52*d + 9*d^2 + d^3)*s^2*t - 4*(2 + d)*s*t^2 - 8*t^3)))/4 - 
        4*sw^4*(mz^4*(2^(1 + d)*(56 - 41*d + 9*d^2)*Pi^d - d^3*(2*Pi)^d)*
           (s + t) - d^3*(2*Pi)^d*s^2*(s + 3*t) + 2^(1 + d)*mz^2*Pi^d*
           ((-144 + 98*d - 20*d^2 + d^3)*s^2 + (-184 + 122*d - 24*d^2 + d^3)*
             s*t - 4*(10 - 6*d + d^2)*t^2) + 2^(1 + d)*Pi^d*
           (9*(8 - 5*d + d^2)*s^3 + (96 - 49*d + 9*d^2 + d^3)*s^2*t - 
            4*(-8 + d)*s*t^2 + 8*t^3)))))/(2^(2*(1 + d))*Pi^(2*d)*(mz^2 - s)*
     sw^4*(-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, ((I/27)*16^(-1 - d)*EL^6*(243*d^3*(2*Pi)^(3*d)*s^4 - 
      2^(1 + 3*d)*Pi^(3*d)*s^2*(2*s^2*(876 + 3*d^4 + 40*sw^2 - 64*sw^4 - 
          3*d*(341 - 30*sw^2 + 48*sw^4) + d^2*(402 - 55*sw^2 + 88*sw^4)) + 
        s*(75*d^2 - 3*d^3 + 32*(3 + 55*sw^2 - 88*sw^4) + 
          4*d*(-45 - 230*sw^2 + 368*sw^4))*t + 2*(-28 + 15*d)*
         (3 - 20*sw^2 + 32*sw^4)*t^2) + mz^4*(243*d^3*(2*Pi)^(3*d)*s^2 - 
        2^(1 + 3*d)*Pi^(3*d)*(2*s^2*(780 + 3*d^4 - 280*sw^2 + 448*sw^4 + 
            d*(-927 + 250*sw^2 - 400*sw^4) + d^2*(378 - 55*sw^2 + 88*sw^4)) + 
          s*(27*d^2 - 3*d^3 + d*(-84 + 40*sw^2 - 64*sw^4) + 
            32*(3 - 5*sw^2 + 8*sw^4))*t - 2*(-4 + d)*(3 - 20*sw^2 + 32*sw^4)*
           t^2)) + 2*mz^2*s*(-303*d^3*(2*Pi)^(3*d)*s^2 + 
        2^(1 + 3*d)*Pi^(3*d)*(s^2*(1752 + 9*d^4 + 80*sw^2 - 128*sw^4 + 
            4*d^3*sw^2*(-5 + 8*sw^2) + d^2*(888 + 50*sw^2 - 80*sw^4) + 
            6*d*(-353 - 10*sw^2 + 16*sw^4)) + s*(-69*d^3 + 6*d^4 + 
            d*(-660 + 40*sw^2 - 64*sw^4) + 32*(15 + 5*sw^2 - 8*sw^4) + 
            d^2*(327 - 80*sw^2 + 128*sw^4))*t + 2*(4 - 5*d + 2*d^2)*
           (3 - 20*sw^2 + 32*sw^4)*t^2)) + 2*(-123*d^3*(2*Pi)^(3*d)*s^4 + 
        2^(1 + 3*d)*Pi^(3*d)*s^2*(s^2*(888 + 3*d^4 + 80*sw^2 - 128*sw^4 - 
            6*d*(173 - 10*sw^2 + 16*sw^4) + d^2*(408 - 50*sw^2 + 80*sw^4)) + 
          s*(51*d^2 - 3*d^3 + 32*(3 + 25*sw^2 - 40*sw^4) + 
            44*d*(-3 - 10*sw^2 + 16*sw^4))*t + 2*(-12 + 7*d)*
           (3 - 20*sw^2 + 32*sw^4)*t^2) + mz^4*(-123*d^3*(2*Pi)^(3*d)*s^2 + 
          2^(1 + 3*d)*Pi^(3*d)*(s^2*(3*d^4 + d*(-942 + 220*sw^2 - 352*sw^4) + 
              24*(33 - 10*sw^2 + 16*sw^4) + d^2*(384 - 50*sw^2 + 80*sw^4)) + 
            s*(27*d^2 - 3*d^3 + d*(-84 + 40*sw^2 - 64*sw^4) + 
              32*(3 - 5*sw^2 + 8*sw^4))*t - 2*(-4 + d)*(3 - 20*sw^2 + 
              32*sw^4)*t^2)) - 2*mz^2*s*(-183*d^3*(2*Pi)^(3*d)*s^2 + 
          2^(1 + 3*d)*Pi^(3*d)*(2*s^2*(468 + 3*d^4 + 120*sw^2 - 192*sw^4 + 
              2*d^3*sw^2*(-5 + 8*sw^2) + d^2*(252 + 55*sw^2 - 88*sw^4) + 
              d*(-579 - 130*sw^2 + 208*sw^4)) + s*(-69*d^3 + 6*d^4 + 
              32*(15 - 10*sw^2 + 16*sw^4) - 4*d*(159 - 70*sw^2 + 112*sw^4) + 
              d^2*(315 - 80*sw^2 + 128*sw^4))*t + 2*(12 - 9*d + 2*d^2)*
             (3 - 20*sw^2 + 32*sw^4)*t^2)))*GaugeXi[Q] + 
      (3*d^3*(2*Pi)^(3*d)*s^4 + 2^(1 + 3*d)*Pi^(3*d)*s^2*
         (2*s^2*(-12 - 40*sw^2 + 64*sw^4 + d*(15 + 30*sw^2 - 48*sw^4) + 
            d^2*(-6 - 5*sw^2 + 8*sw^4)) + s*(-27*d^2 + 3*d^3 - 
            32*(3 - 5*sw^2 + 8*sw^4) + d*(84 - 40*sw^2 + 64*sw^4))*t + 
          2*(-4 + d)*(3 - 20*sw^2 + 32*sw^4)*t^2) + 
        mz^4*(3*d^3*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
           (2*s^2*(-12 - 40*sw^2 + 64*sw^4 + d*(15 + 30*sw^2 - 48*sw^4) + 
              d^2*(-6 - 5*sw^2 + 8*sw^4)) + s*(-27*d^2 + 3*d^3 - 
              32*(3 - 5*sw^2 + 8*sw^4) + d*(84 - 40*sw^2 + 64*sw^4))*t + 
            2*(-4 + d)*(3 - 20*sw^2 + 32*sw^4)*t^2)) + 
        2*mz^2*s*(-63*d^3*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
           (s^2*(3*d^4 + 4*d^3*sw^2*(-5 + 8*sw^2) + d^2*(120 + 170*sw^2 - 
                272*sw^4) + 40*(3 + 10*sw^2 - 16*sw^4) + 2*d*(-99 - 
                230*sw^2 + 368*sw^4)) + s*(-69*d^3 + 6*d^4 + 
              d*(-612 + 520*sw^2 - 832*sw^4) + 160*(3 - 5*sw^2 + 8*sw^4) + 
              d^2*(303 - 80*sw^2 + 128*sw^4))*t + 2*(20 - 13*d + 2*d^2)*
             (3 - 20*sw^2 + 32*sw^4)*t^2)))*GaugeXi[Q]^2))/
    ((-4 + d)*mz^2*Pi^(4*d)*(mz^2 - s)^2*s^2*sw^2*(-1 + sw^2)*
     (-1 + GaugeXi[Q])), 
   ((-I/108)*EL^6*(-((2^(1 - d)*s*(mz^3 - mz*s)^2*(-36*d^2 + 3*d^3 - 
          8*(21 - 5*sw^2 + 8*sw^4) + 2*d*(69 - 10*sw^2 + 16*sw^4))*
         ((-2 + d)*s + 2*t)*(-1 + GaugeXi[Q]))/Pi^d) - 
      ((-4 + d)*(mz^2 - s)^2*s*(-3*d^2*(2*Pi)^d*s^2 - 2^(1 + d)*Pi^d*
          (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
           s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
           2*(3 - 20*sw^2 + 32*sw^4)*t^2) + mz^2*(3*d^3*(2*Pi)^d*s + 
           2^(1 + d)*Pi^d*(s*(-27*d^2 - 16*(12 - 5*sw^2 + 8*sw^4) + 6*d*
                (22 - 5*sw^2 + 8*sw^4)) + (-36*d^2 + 3*d^3 - 8*(21 - 5*sw^2 + 
                 8*sw^4) + 2*d*(69 - 10*sw^2 + 16*sw^4))*t)))*
        (-1 + GaugeXi[Q]))/(2*Pi)^(2*d) + ((-3 + d)*mz^2*(mz^2 - s)*s*
        (3*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
          (s^2*(63*d^2 - 6*d^3 + d*(-282 + 50*sw^2 - 80*sw^4) + 
             8*(48 - 5*sw^2 + 8*sw^4)) + s*(36*d^2 - 3*d^3 + 
             8*(21 + 25*sw^2 - 40*sw^4) - 2*d*(75 - 10*sw^2 + 16*sw^4))*t - 
           8*(3 - 20*sw^2 + 32*sw^4)*t^2) + mz^2*(9*d^3*(2*Pi)^d*s + 
           2^(1 + d)*Pi^d*(s*(-63*d^2 - 24*(15 - 5*sw^2 + 8*sw^4) + 10*d*
                (27 - 5*sw^2 + 8*sw^4)) + (-36*d^2 + 3*d^3 - 8*(21 - 5*sw^2 + 
                 8*sw^4) + 2*d*(69 - 10*sw^2 + 16*sw^4))*t)))*
        (-1 + GaugeXi[Q]))/(2*Pi)^(2*d) + ((-3 + d)*mz^2*(mz^2 - s)*s*
        (-3*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
          (s^2*(63*d^2 - 3*d^3 + d*(-282 + 50*sw^2 - 80*sw^4) + 
             8*(48 - 5*sw^2 + 8*sw^4)) + s*(36*d^2 - 3*d^3 + 
             8*(21 + 25*sw^2 - 40*sw^4) - 2*d*(75 - 10*sw^2 + 16*sw^4))*t - 
           8*(3 - 20*sw^2 + 32*sw^4)*t^2) + mz^2*(9*d^3*(2*Pi)^d*s + 
           2^(1 + d)*Pi^d*(s*(-63*d^2 - 24*(15 - 5*sw^2 + 8*sw^4) + 10*d*
                (27 - 5*sw^2 + 8*sw^4)) + (-36*d^2 + 3*d^3 - 8*(21 - 5*sw^2 + 
                 8*sw^4) + 2*d*(69 - 10*sw^2 + 16*sw^4))*t)))*
        (-1 + GaugeXi[Q]))/(2*Pi)^(2*d) - (2^(-1 - d)*(-4 + d)*(mz^2 - s)^2*
        s^2*((-4 + d)*mz^2 + d*s)*(-1 + 4*sw^2)*(-3 + 8*sw^2)*
        (-1 + GaugeXi[Q])^2)/Pi^d + (2^(-1 - d)*(-4 + d)*(mz^2 - s)^3*s*
        (3*s*(-6 + d + 20*sw^2 - 32*sw^4) - 2*(3 - 20*sw^2 + 32*sw^4)*t)*
        (-1 + GaugeXi[Q])^2)/Pi^d - (2^(-2 - d)*(-4 + d)*(mz^2 - s)^2*s*
        ((-4 + d)*mz^2 + (-2 + d)*s)*(3*s*(-6 + d + 20*sw^2 - 32*sw^4) - 
         2*(3 - 20*sw^2 + 32*sw^4)*t)*(-1 + GaugeXi[Q])^2)/Pi^d + 
      (2^(-2 - d)*(-4 + d)*(mz^2 - s)^2*(mz^2*((-6 + d)*s - 2*t) + 
         s*((-2 + d)*s - 2*t))*(3*d*s - 4*s*(3 - 5*sw^2 + 8*sw^4) - 
         2*(3 - 20*sw^2 + 32*sw^4)*t)*(-1 + GaugeXi[Q])^2)/Pi^d + 
      ((-4 + d)*(mz^2 - s)^2*s*(s*(3*d - 4*(3 - 5*sw^2 + 8*sw^4))*(s + t) + 
         mz^2*(s*(6 - 40*sw^2 + 64*sw^4) + (-6 + 3*d - 20*sw^2 + 32*sw^4)*t))*
        (-1 + GaugeXi[Q])^2)/(2*Pi)^d + (4^(-1 - d)*(-4 + d)*(mz^2 - s)*s*
        ((-4 + d)*mz^2 + (-2 + d)*s)*
        (s*(-3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(3*s*(-3 + d + 10*sw^2 - 16*
                sw^4) + (-3 + 20*sw^2 - 32*sw^4)*t)) + 
         mz^2*(-3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(9 - 30*sw^2 + 48*sw^4) + 
             (3 - 20*sw^2 + 32*sw^4)*t)))*(-1 + GaugeXi[Q])^2)/Pi^(2*d) + 
      (2^(-1 - 4*d)*(-4 + d)*(-3 + d)*s*(mz^2 + s)*
        (mz^4*(2*Pi)^(3*d)*(3*d - 4*(3 - 5*sw^2 + 8*sw^4))*(s + t) + 
         (2*Pi)^(3*d)*s^2*(3*d - 4*(3 - 5*sw^2 + 8*sw^4))*(s + t) + 
         2^(1 + 3*d)*mz^2*Pi^(3*d)*(s^2*(3*d^2 + 4*(6 + 5*sw^2 - 8*sw^4) + 
             d*(-15 - 20*sw^2 + 32*sw^4)) + s*(-33*d + 6*d^2 + 
             20*(3 - 5*sw^2 + 8*sw^4))*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2) + 
         2*(mz^4*(2*Pi)^(3*d)*(-3*d + 4*(3 - 5*sw^2 + 8*sw^4))*(s + t) + 
           (2*Pi)^(3*d)*s^2*(-3*d + 4*(3 - 5*sw^2 + 8*sw^4))*(s + t) - 
           2^(1 + 3*d)*mz^2*Pi^(3*d)*(s^2*(3*d^2 + 4*(6 + 5*sw^2 - 8*sw^4) + 
               d*(-15 - 20*sw^2 + 32*sw^4)) + s*(-33*d + 6*d^2 + 20*
                (3 - 5*sw^2 + 8*sw^4))*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2))*
          GaugeXi[Q] + (mz^4*(2*Pi)^(3*d)*(3*d - 4*(3 - 5*sw^2 + 8*sw^4))*
            (s + t) + (2*Pi)^(3*d)*s^2*(3*d - 4*(3 - 5*sw^2 + 8*sw^4))*
            (s + t) + 2^(1 + 3*d)*mz^2*Pi^(3*d)*
            (s^2*(3*d^2 + 4*(6 + 5*sw^2 - 8*sw^4) + d*(-15 - 20*sw^2 + 
                 32*sw^4)) + s*(-33*d + 6*d^2 + 20*(3 - 5*sw^2 + 8*sw^4))*t + 
             4*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[Q]^2))/Pi^(4*d)))/
    ((-4 + d)*mz^2*(mz^2 - s)^2*s^2*sw^2*(-1 + sw^2)*(-1 + GaugeXi[Q])), 0, 
   0, ((-I/27)*4^(-2 - d)*EL^6*(9*d^2*(2*Pi)^d*s^4 - 
      2^(1 + d)*Pi^d*s^2*(s^2*(-6 + 3*d^2 - 20*sw^2 + 32*sw^4 + 
          d*(6 + 10*sw^2 - 16*sw^4)) + s*(15*d - 3*d^2 - 
          8*(3 - 5*sw^2 + 8*sw^4))*t - 2*(3 - 20*sw^2 + 32*sw^4)*t^2) - 
      2*s*(mz^2 + s)*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
          s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[Q] + 
      (9*d^2*(2*Pi)^d*s^4 - 2^(1 + d)*Pi^d*s^2*
         (s^2*(-6 + 3*d^2 - 20*sw^2 + 32*sw^4 + d*(6 + 10*sw^2 - 16*sw^4)) + 
          s*(15*d - 3*d^2 - 8*(3 - 5*sw^2 + 8*sw^4))*t - 
          2*(3 - 20*sw^2 + 32*sw^4)*t^2) + 2^(2 + d)*mz^2*Pi^d*s*
         (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
          2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          4*(3 - 20*sw^2 + 32*sw^4)*t^2) + mz^4*(3*d^2*(2*Pi)^d*s^2 + 
          2^(1 + d)*Pi^d*(2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 
                8*sw^4)) + s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
            2*(3 - 20*sw^2 + 32*sw^4)*t^2)))*GaugeXi[Q]^2 - 
      2*mz^2*(mz^2 + s)*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
          s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[Q]^3 + 
      mz^4*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
          s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[Q]^4))/
    (mz^2*Pi^(2*d)*s^2*sw^2*(-1 + sw^2)*(-1 + GaugeXi[Q])*
     (s - mz^2*GaugeXi[Q])^2), ((-I/27)*4^(-2 - d)*EL^6*
     (3*s^3*(d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(6 + d^2 + 20*sw^2 - 32*sw^4 + 2*d*(-3 - 5*sw^2 + 8*sw^4)) + 
          s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          2*(3 - 20*sw^2 + 32*sw^4)*t^2)) - 
      s^2*(2^(1 + d)*Pi^d*s*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
            4*d*(-3 - 5*sw^2 + 8*sw^4)) + 2*s*(-15*d + 3*d^2 + 
            8*(3 - 5*sw^2 + 8*sw^4))*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2) + 
        mz^2*(33*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
           (-2*s^2*(3*d^2 - 7*d*(-3 - 5*sw^2 + 8*sw^4) + 7*(-3 - 10*sw^2 + 
                16*sw^4)) + 7*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
            14*(3 - 20*sw^2 + 32*sw^4)*t^2)))*GaugeXi[Q] + 
      s*(-9*d^2*(2*Pi)^d*s^4 + 2^(1 + d)*Pi^d*s^2*
         (s^2*(-6 + 3*d^2 - 20*sw^2 + 32*sw^4 + d*(6 + 10*sw^2 - 16*sw^4)) + 
          s*(15*d - 3*d^2 - 8*(3 - 5*sw^2 + 8*sw^4))*t - 
          2*(3 - 20*sw^2 + 32*sw^4)*t^2) + 3*2^(1 + d)*mz^2*Pi^d*s*
         (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
          2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          4*(3 - 20*sw^2 + 32*sw^4)*t^2) + mz^4*(9*d^2*(2*Pi)^d*s^2 + 
          2^(1 + d)*Pi^d*(s^2*(30 + 3*d^2 + 100*sw^2 - 160*sw^4 + 
              10*d*(-3 - 5*sw^2 + 8*sw^4)) + 5*s*(-15*d + 3*d^2 + 
              8*(3 - 5*sw^2 + 8*sw^4))*t + 10*(3 - 20*sw^2 + 32*sw^4)*t^2)))*
       GaugeXi[Q]^2 - mz^2*(9*d^2*(2*Pi)^d*s^4 - 2^(1 + d)*Pi^d*s^2*
         (2*s^2*(3 + 3*d^2 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
          s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          2*(3 - 20*sw^2 + 32*sw^4)*t^2) + 3*2^(1 + d)*mz^2*Pi^d*s*
         (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
          2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          4*(3 - 20*sw^2 + 32*sw^4)*t^2) + mz^4*(3*d^2*(2*Pi)^d*s^2 + 
          2^(1 + d)*Pi^d*(2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 
                8*sw^4)) + s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
            2*(3 - 20*sw^2 + 32*sw^4)*t^2)))*GaugeXi[Q]^3 + 
      mz^4*(-3*d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
         (s^2*(6 + 3*d^2 + 20*sw^2 - 32*sw^4 + 2*d*(-3 - 5*sw^2 + 8*sw^4)) + 
          s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          2*(3 - 20*sw^2 + 32*sw^4)*t^2) + 2^(1 + d)*mz^2*Pi^d*
         (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
          2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          4*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[Q]^4 - 
      mz^6*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
          s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[Q]^5))/
    (mz^2*Pi^(2*d)*s^2*sw^2*(-1 + sw^2)*(-1 + GaugeXi[Q])*
     (s - mz^2*GaugeXi[Q])^2), 0, 0, 0, 0, 0, 0, 0, 0, 
   ((I/27)*4^(-1 - d)*EL^6*(27*d^3*(2*Pi)^d*s + 
      mz^2*(-3*d^3*(15 + d)*(2*Pi)^d + 2^(1 + d)*Pi^d*(-9*d^3 + 3*d^4 + 
          48*(12 - 5*sw^2 + 8*sw^4) + 3*d^2*(71 - 10*sw^2 + 16*sw^4) - 
          2*d*(294 - 85*sw^2 + 136*sw^4))) + 2^(1 + d)*Pi^d*
       (s*(-225*d^2 + 9*d^3 + d*(744 + 30*sw^2 - 48*sw^4) + 
          16*(-51 - 5*sw^2 + 8*sw^4)) + (-36*d^3 + 3*d^4 + 
          2*d^2*(87 - 10*sw^2 + 16*sw^4) + 16*(24 - 25*sw^2 + 40*sw^4) - 
          8*d*(51 - 25*sw^2 + 40*sw^4))*t)))/((-4 + d)*Pi^(2*d)*s*sw^2*
     (-1 + sw^2)), 0, ((I/27)*2^(-3 - 2*d)*EL^6*
     ((s + t)*(-3*d^3*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
         (s*(33*d^2 + 16*(15 + 5*sw^2 - 8*sw^4) + 2*d*(-84 - 5*sw^2 + 
              8*sw^4)) + 4*(-18*d + 3*d^2 + 4*(6 + 5*sw^2 - 8*sw^4))*t)) + 
      mz^2*(-3*d^3*(2*Pi)^d*(s - 3*t) + 2^(1 + d)*Pi^d*
         (s*(-144 - 45*d^2 + 6*d^3 + 2*d*(72 - 5*sw^2 + 8*sw^4)) + 
          (-144 - 45*d^2 + 2*d*(72 - 5*sw^2 + 8*sw^4))*t))))/
    (Pi^(2*d)*s*sw^2*(-1 + sw^2)), ((I/27)*2^(-3 - 2*d)*EL^6*(s + t)*
     (-3*d^3*(2*Pi)^d*s^2 + mz^4*(3*d^3*(2*Pi)^d + 2^(1 + d)*Pi^d*
         (-27*d^2 - 16*(12 - 5*sw^2 + 8*sw^4) + 
          6*d*(22 - 5*sw^2 + 8*sw^4))) - 2^(1 + d)*mz^2*Pi^d*
       (s*(-432 - 60*d^2 + 3*d^3 + 4*d*(75 - 5*sw^2 + 8*sw^4)) - 
        4*(-18*d + 3*d^2 + 4*(6 + 5*sw^2 - 8*sw^4))*t) + 
      2^(1 + d)*Pi^d*(3*s^2*(-72 - 9*d^2 + d^3 + 
          2*d*(24 - 5*sw^2 + 8*sw^4)) + 12*s*(d + 4*sw^2*(-5 + 8*sw^2))*t + 
        8*(3 - 20*sw^2 + 32*sw^4)*t^2)))/(Pi^(2*d)*s*sw^2*(-1 + sw^2)), 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, ((I/27)*2^(-7 - 4*d)*EL^6*(-9*d^3*(2*Pi)^(3*d)*s^4 + 
      2^(1 + 3*d)*Pi^(3*d)*s^2*(s^2*(-6*d^4*(3 - 20*sw^2 + 32*sw^4) + 
          9*d^3*(41 - 270*sw^2 + 432*sw^4) + 8*(-657 + 4380*sw^2 - 
            6956*sw^4 - 160*sw^6 + 128*sw^8) - 4*d^2*(603 - 4020*sw^2 + 
            6575*sw^4 - 440*sw^6 + 352*sw^8) + 6*d*(1023 - 6820*sw^2 + 
            11068*sw^4 - 480*sw^6 + 384*sw^8)) + 
        s*(-75*d^2*(3 - 20*sw^2 + 32*sw^4) + d^3*(9 - 60*sw^2 + 96*sw^4) + 
          32*(-9 + 60*sw^2 + 190*sw^4 - 880*sw^6 + 704*sw^8) - 
          4*d*(-135 + 900*sw^2 - 244*sw^4 - 3680*sw^6 + 2944*sw^8))*t - 
        2*(-28 + 15*d)*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^2) + 
      mz^4*(27*d^3*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
         (s^2*(-6*d^4*(3 - 20*sw^2 + 32*sw^4) + 27*d^3*(13 - 90*sw^2 + 
              144*sw^4) - 4*d^2*(567 - 3780*sw^2 + 6191*sw^4 - 440*sw^6 + 
              352*sw^8) - 8*(585 - 3900*sw^2 + 6604*sw^4 - 1120*sw^6 + 
              896*sw^8) + d*(5562 - 37080*sw^2 + 61928*sw^4 - 8000*sw^6 + 
              6400*sw^8)) + s*(-27*d^2*(3 - 20*sw^2 + 32*sw^4) + 
            d^3*(9 - 60*sw^2 + 96*sw^4) - 32*(9 - 60*sw^2 + 122*sw^4 - 
              80*sw^6 + 64*sw^8) + 4*d*(63 - 420*sw^2 + 724*sw^4 - 160*sw^6 + 
              128*sw^8))*t + 2*(-4 + d)*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
            256*sw^8)*t^2)) + 2*mz^2*s*(-909*d^3*(2*Pi)^(3*d)*s^2 + 
        2^(1 + 3*d)*Pi^(3*d)*(s^2*(9*d^4*(3 - 20*sw^2 + 32*sw^4) + 
            6*d*(-1059 + 7060*sw^2 - 11244*sw^4 - 160*sw^6 + 128*sw^8) - 
            8*(-657 + 4380*sw^2 - 6956*sw^4 - 160*sw^6 + 128*sw^8) - 
            4*d^2*(-666 + 4440*sw^2 - 7039*sw^4 - 200*sw^6 + 160*sw^8) + 
            d^3*(3030*sw^2 - 4744*sw^4 - 320*sw^6 + 256*sw^8)) + 
          s*(-69*d^3*(3 - 20*sw^2 + 32*sw^4) + 6*d^4*(3 - 20*sw^2 + 
              32*sw^4) - 32*(-45 + 300*sw^2 - 454*sw^4 - 80*sw^6 + 64*sw^8) - 
            4*d*(495 - 3300*sw^2 + 5332*sw^4 - 160*sw^6 + 128*sw^8) + 
            d^2*(981 - 6540*sw^2 + 10880*sw^4 - 1280*sw^6 + 1024*sw^8))*t + 
          2*(4 - 5*d + 2*d^2)*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*
           t^2)) + 2*(-369*d^3*(2*Pi)^(3*d)*s^4 + 2^(1 + 3*d)*Pi^(3*d)*s^2*
         (s^2*(-246*d^3*sw^2*(-5 + 8*sw^2) + d^4*(9 - 60*sw^2 + 96*sw^4) - 
            8*(-333 + 2220*sw^2 - 3500*sw^4 - 160*sw^6 + 128*sw^8) - 
            6*d*(519 - 3460*sw^2 + 5588*sw^4 - 160*sw^6 + 128*sw^8) + 
            4*d^2*(306 - 2040*sw^2 + 3329*sw^4 - 200*sw^6 + 160*sw^8)) - 
          s*(-51*d^2*(3 - 20*sw^2 + 32*sw^4) + d^3*(9 - 60*sw^2 + 96*sw^4) - 
            44*d*(-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 128*sw^8) + 
            32*(-9 + 60*sw^2 + 34*sw^4 - 400*sw^6 + 320*sw^8))*t + 
          2*(-12 + 7*d)*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^2) + 
        mz^4*(-369*d^3*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
           (s^2*(-246*d^3*sw^2*(-5 + 8*sw^2) + d^4*(9 - 60*sw^2 + 96*sw^4) + 
              24*(99 - 660*sw^2 + 1108*sw^4 - 160*sw^6 + 128*sw^8) + 
              4*d^2*(288 - 1920*sw^2 + 3137*sw^4 - 200*sw^6 + 160*sw^8) - 
              2*d*(1413 - 9420*sw^2 + 15644*sw^4 - 1760*sw^6 + 1408*sw^8)) + 
            s*(d^3*(-9 + 60*sw^2 - 96*sw^4) + 27*d^2*(3 - 20*sw^2 + 
                32*sw^4) + 32*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8) - 
              4*d*(63 - 420*sw^2 + 724*sw^4 - 160*sw^6 + 128*sw^8))*t - 
            2*(-4 + d)*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^2)) - 
        2*mz^2*s*(-549*d^3*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
           (2*s^2*(d^4*(9 - 60*sw^2 + 96*sw^4) + d^3*sw^2*(915 - 1412*sw^2 - 
                160*sw^4 + 128*sw^6) + d^2*(756 - 5040*sw^2 + 7778*sw^4 + 
                880*sw^6 - 704*sw^8) + 12*(117 - 780*sw^2 + 1196*sw^4 + 
                160*sw^6 - 128*sw^8) + d*(-1737 + 11580*sw^2 - 17852*sw^4 - 
                2080*sw^6 + 1664*sw^8)) + s*(-69*d^3*(3 - 20*sw^2 + 
                32*sw^4) + 6*d^4*(3 - 20*sw^2 + 32*sw^4) + 
              32*(45 - 300*sw^2 + 532*sw^4 - 160*sw^6 + 128*sw^8) - 
              4*d*(477 - 3180*sw^2 + 5452*sw^4 - 1120*sw^6 + 896*sw^8) + 
              d^2*(945 - 6300*sw^2 + 10496*sw^4 - 1280*sw^6 + 1024*sw^8))*t + 
            2*(12 - 9*d + 2*d^2)*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
              256*sw^8)*t^2)))*GaugeXi[Q] + 
      (-9*d^3*(2*Pi)^(3*d)*s^4 + 2^(1 + 3*d)*Pi^(3*d)*s^2*
         (s^2*(d^3*(9 - 30*sw^2 + 48*sw^4) + d*(90 - 600*sw^2 + 648*sw^4 + 
              960*sw^6 - 768*sw^8) + 4*d^2*(-9 + 60*sw^2 - 83*sw^4 - 
              40*sw^6 + 32*sw^8) + 8*(-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 
              128*sw^8)) + s*(-27*d^2*(3 - 20*sw^2 + 32*sw^4) + 
            d^3*(9 - 60*sw^2 + 96*sw^4) - 32*(9 - 60*sw^2 + 122*sw^4 - 
              80*sw^6 + 64*sw^8) + 4*d*(63 - 420*sw^2 + 724*sw^4 - 160*sw^6 + 
              128*sw^8))*t + 2*(-4 + d)*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
            256*sw^8)*t^2) + mz^4*(27*d^3*(2*Pi)^(3*d)*s^2 + 
          2^(1 + 3*d)*Pi^(3*d)*(s^2*(d^3*(-9 - 30*sw^2 + 48*sw^4) + 
              d*(90 - 600*sw^2 + 648*sw^4 + 960*sw^6 - 768*sw^8) + 
              4*d^2*(-9 + 60*sw^2 - 83*sw^4 - 40*sw^6 + 32*sw^8) + 
              8*(-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 128*sw^8)) + 
            s*(-27*d^2*(3 - 20*sw^2 + 32*sw^4) + d^3*(9 - 60*sw^2 + 
                96*sw^4) - 32*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8) + 
              4*d*(63 - 420*sw^2 + 724*sw^4 - 160*sw^6 + 128*sw^8))*t + 
            2*(-4 + d)*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^2)) + 
        2*mz^2*s*(-189*d^3*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
           (s^2*(d^4*(9 - 60*sw^2 + 96*sw^4) - 40*(-9 + 60*sw^2 - 44*sw^4 - 
                160*sw^6 + 128*sw^8) + d^3*(630*sw^2 - 904*sw^4 - 320*sw^6 + 
                256*sw^8) - 4*d^2*(-90 + 600*sw^2 - 739*sw^4 - 680*sw^6 + 
                544*sw^8) + d*(-594 + 3960*sw^2 - 3944*sw^4 - 7360*sw^6 + 
                5888*sw^8)) + s*(-69*d^3*(3 - 20*sw^2 + 32*sw^4) + 
              6*d^4*(3 - 20*sw^2 + 32*sw^4) + 160*(9 - 60*sw^2 + 122*sw^4 - 
                80*sw^6 + 64*sw^8) + d^2*(909 - 6060*sw^2 + 10112*sw^4 - 
                1280*sw^6 + 1024*sw^8) - 4*d*(459 - 3060*sw^2 + 5572*sw^4 - 
                2080*sw^6 + 1664*sw^8))*t + 2*(20 - 13*d + 2*d^2)*
             (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^2)))*
       GaugeXi[Q]^2))/((-4 + d)*mz^2*Pi^(4*d)*(mz^2 - s)^3*s*sw^4*
     (-1 + sw^2)^2*(-1 + GaugeXi[Q])), 
   ((I/27)*2^(-7 - 4*d)*EL^6*(4^(3 + d)*(4 - d)*Pi^(2*d)*(mz^2 - s)^2*s*
       ((sw^4*(3 - 4*sw^2)^2*(d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
            ((4 - 3*d)*s^2 + (4 - 5*d + d^2)*s*t - 2*t^2) + 
           mz^2*(-(d^3*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*((56 - 41*d + 9*d^2)*s - 
               (-52 + 44*d - 12*d^2 + d^3)*t))))/4 - 
        4*sw^8*(d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*(-2*(-1 + d)*s^2 + 
            (8 - 5*d + d^2)*s*t + 2*t^2) + mz^2*(-(d^3*(2*Pi)^d*s) + 
            2^(1 + d)*Pi^d*((64 - 44*d + 9*d^2)*s - (-56 + 46*d - 12*d^2 + 
                d^3)*t))) + (-1/2 + sw^2)^2*
         (4*sw^4*(d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*((4 - 3*d)*s^2 + 
              (4 - 5*d + d^2)*s*t - 2*t^2) + mz^2*(-(d^3*(2*Pi)^d*s) + 
              2^(1 + d)*Pi^d*((56 - 41*d + 9*d^2)*s - (-52 + 44*d - 12*d^2 + 
                  d^3)*t))) - ((3 - 4*sw^2)^2*(d^2*(2*Pi)^d*s^2 + 
             2^(1 + d)*Pi^d*(-2*(-1 + d)*s^2 + (8 - 5*d + d^2)*s*t + 2*t^2) + 
             mz^2*(-(d^3*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*((64 - 44*d + 9*d^2)*
                  s - (-56 + 46*d - 12*d^2 + d^3)*t))))/4))*
       (1 - GaugeXi[Q]) + 2^(2 + 3*d)*Pi^(3*d)*s*(mz^3 - mz*s)^2*
       (-36*d^2*(3 - 20*sw^2 + 32*sw^4) + d^3*(9 - 60*sw^2 + 96*sw^4) - 
        8*(63 - 420*sw^2 + 698*sw^4 - 80*sw^6 + 64*sw^8) + 
        d*(414 - 2760*sw^2 + 4520*sw^4 - 320*sw^6 + 256*sw^8))*
       ((-2 + d)*s + 2*t)*(-1 + GaugeXi[Q]) + 4^(1 + d)*Pi^(2*d)*s*
       (mz^3 - mz*s)^2*(9*d^3*(2*Pi)^d + 2^(1 + d)*Pi^d*
         (6*d^3*sw^2*(-5 + 8*sw^2) - 18*d^2*(3 - 20*sw^2 + 32*sw^4) - 
          4*(63 - 420*sw^2 + 698*sw^4 - 80*sw^6 + 64*sw^8) + 
          d*(207 - 1380*sw^2 + 2260*sw^4 - 160*sw^6 + 128*sw^8)))*
       ((-2 + d)*s + 2*t)*(-1 + GaugeXi[Q]) - 2^(3 + 2*d)*(-3 + d)*mz^2*
       Pi^(2*d)*(mz^2 - s)*s*(-27*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(-18*d^3*sw^2*(-5 + 8*sw^2) + 63*d^2*(3 - 20*sw^2 + 32*sw^4) + 
            d*(-846 + 5640*sw^2 - 9284*sw^4 + 800*sw^6 - 640*sw^8) + 
            16*(72 - 480*sw^2 + 781*sw^4 - 40*sw^6 + 32*sw^8)) + 
          s*(d^3*(-9 + 60*sw^2 - 96*sw^4) + 36*d^2*(3 - 20*sw^2 + 32*sw^4) + 
            d*(-450 + 3000*sw^2 - 4904*sw^4 + 320*sw^6 - 256*sw^8) - 
            8*(-63 + 420*sw^2 - 542*sw^4 - 400*sw^6 + 320*sw^8))*t - 
          8*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^2) + 
        mz^2*(27*d^3*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
           (s*(18*d^3*sw^2*(-5 + 8*sw^2) - 63*d^2*(3 - 20*sw^2 + 32*sw^4) - 
              24*(45 - 300*sw^2 + 506*sw^4 - 80*sw^6 + 64*sw^8) + 
              10*d*(81 - 540*sw^2 + 890*sw^4 - 80*sw^6 + 64*sw^8)) + 
            (-36*d^2*(3 - 20*sw^2 + 32*sw^4) + d^3*(9 - 60*sw^2 + 96*sw^4) - 
              8*(63 - 420*sw^2 + 698*sw^4 - 80*sw^6 + 64*sw^8) + 
              d*(414 - 2760*sw^2 + 4520*sw^4 - 320*sw^6 + 256*sw^8))*t)))*
       (-1 + GaugeXi[Q]) + 2^(1 + 3*d)*(-4 + d)*Pi^(3*d)*(mz^2 - s)^2*s^2*
       ((-4 + d)*mz^2 + d*s)*(1 - 4*sw^2 + 8*sw^4)*(9 - 24*sw^2 + 32*sw^4)*
       (-1 + GaugeXi[Q])^2 - (-4 + d)*(2*Pi)^(2*d)*(mz^2 - s)^3*s*
       (27*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(-3*s*(9 - 60*sw^2 + 148*sw^4 - 
            160*sw^6 + 128*sw^8 + d*(3 + 10*sw^2 - 16*sw^4)) + 
          (-9 + 60*sw^2 - 200*sw^4 + 320*sw^6 - 256*sw^8)*t) - 
        2^(1 + d)*Pi^d*(d*s*(9 - 60*sw^2 + 96*sw^4) - 
          6*s*(9 - 60*sw^2 + 148*sw^4 - 160*sw^6 + 128*sw^8) - 
          2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t)*GaugeXi[Q] + 
        (27*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(-3*s*(9 - 60*sw^2 + 148*sw^4 - 
              160*sw^6 + 128*sw^8 + d*(3 + 10*sw^2 - 16*sw^4)) + 
            (-9 + 60*sw^2 - 200*sw^4 + 320*sw^6 - 256*sw^8)*t))*
         GaugeXi[Q]^2) - (-4 + d)*(2*Pi)^(2*d)*(mz^2 - s)^2*
       (mz^2*((-6 + d)*s - 2*t) + s*((-2 + d)*s - 2*t))*
       (9*d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(2*s*(9 + 15*(-4 + d)*sw^2 + 
            (122 - 24*d)*sw^4 - 80*sw^6 + 64*sw^8) + 
          (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t) - 
        2^(1 + d)*Pi^d*(d*s*(9 - 60*sw^2 + 96*sw^4) - 
          4*s*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8) - 
          2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t)*GaugeXi[Q] + 
        (9*d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(2*s*(9 + 15*(-4 + d)*sw^2 + 
              (122 - 24*d)*sw^4 - 80*sw^6 + 64*sw^8) + 
            (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t))*
         GaugeXi[Q]^2) - (-4 + d)*(2*Pi)^(2*d)*(mz^2 - s)^3*s*
       (9*d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(3*s*(9 + 10*(-6 + d)*sw^2 - 
            4*(-37 + 4*d)*sw^4 - 160*sw^6 + 128*sw^8) + 
          (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t) - 
        2^(1 + d)*Pi^d*(d*s*(9 - 60*sw^2 + 96*sw^4) - 
          6*s*(9 - 60*sw^2 + 148*sw^4 - 160*sw^6 + 128*sw^8) - 
          2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t)*GaugeXi[Q] + 
        (9*d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(3*s*(9 + 10*(-6 + d)*sw^2 - 
              4*(-37 + 4*d)*sw^4 - 160*sw^6 + 128*sw^8) + 
            (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t))*
         GaugeXi[Q]^2) + 2^(1 + 2*d)*(-4 + d)*Pi^(2*d)*(mz^2 - s)^2*s*
       ((-4 + d)*mz^2 + (-2 + d)*s)*(9*d*(2*Pi)^d*s - 
        2^(1 + d)*Pi^d*(3*s*(9 + 10*(-6 + d)*sw^2 - 4*(-37 + 4*d)*sw^4 - 
            160*sw^6 + 128*sw^8) + (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
            256*sw^8)*t) - 2^(1 + d)*Pi^d*(d*s*(9 - 60*sw^2 + 96*sw^4) - 
          6*s*(9 - 60*sw^2 + 148*sw^4 - 160*sw^6 + 128*sw^8) - 
          2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t)*GaugeXi[Q] + 
        (9*d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(3*s*(9 + 10*(-6 + d)*sw^2 - 
              4*(-37 + 4*d)*sw^4 - 160*sw^6 + 128*sw^8) + 
            (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t))*
         GaugeXi[Q]^2) - 4^(1 + d)*(-4 + d)*Pi^(2*d)*(mz^2 - s)^2*s*
       (s*(-9*d*(2*Pi)^d*(s - t) + 2^(1 + d)*Pi^d*
           (s*(d*(9 - 30*sw^2 + 48*sw^4) - 2*(9 - 60*sw^2 + 122*sw^4 - 
                80*sw^6 + 64*sw^8)) - 2*(9 + 15*(-4 + d)*sw^2 + 
              (122 - 24*d)*sw^4 - 80*sw^6 + 64*sw^8)*t)) + 
        mz^2*(9*d*(2*Pi)^d*t + 2^(1 + d)*Pi^d*
           (s*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8) + 
            (-9 - 30*(-2 + d)*sw^2 + (-44 + 48*d)*sw^4 - 160*sw^6 + 128*sw^8)*
             t)) - 2*(s*(9*d*(2*Pi)^d - 2^(2 + d)*Pi^d*
             (9 + 15*(-4 + d)*sw^2 + (122 - 24*d)*sw^4 - 80*sw^6 + 64*sw^8))*
           (s + t) + mz^2*(9*d*(2*Pi)^d*t + 2^(1 + d)*Pi^d*
             (s*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8) + 
              (-9 - 30*(-2 + d)*sw^2 + (-44 + 48*d)*sw^4 - 160*sw^6 + 
                128*sw^8)*t)))*GaugeXi[Q] + 
        (s*(-9*d*(2*Pi)^d*(s - t) + 2^(1 + d)*Pi^d*
             (s*(d*(9 - 30*sw^2 + 48*sw^4) - 2*(9 - 60*sw^2 + 122*sw^4 - 
                  80*sw^6 + 64*sw^8)) - 2*(9 + 15*(-4 + d)*sw^2 + 
                (122 - 24*d)*sw^4 - 80*sw^6 + 64*sw^8)*t)) + 
          mz^2*(9*d*(2*Pi)^d*t + 2^(1 + d)*Pi^d*(s*(9 - 60*sw^2 + 200*sw^4 - 
                320*sw^6 + 256*sw^8) + (-9 - 30*(-2 + d)*sw^2 + (-44 + 48*d)*
                 sw^4 - 160*sw^6 + 128*sw^8)*t)))*GaugeXi[Q]^2) - 
      2*(-4 + d)*(-3 + d)*s*(mz^2 + s)*(mz^4*(2*Pi)^(3*d)*
         (d*(9 - 60*sw^2 + 96*sw^4) - 4*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 
            64*sw^8))*(s + t) + (2*Pi)^(3*d)*s^2*(d*(9 - 60*sw^2 + 96*sw^4) - 
          4*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8))*(s + t) + 
        2*mz^2*(9*d*(2*Pi)^(3*d)*s*((-5 + d)*s - 11*t) + 2^(1 + 3*d)*Pi^(3*d)*
           (2*s^2*(18 - 15*(8 - 5*d + d^2)*sw^2 + 2*(83 - 47*d + 12*d^2)*sw^
                4 - 80*(-1 + d)*sw^6 + 64*(-1 + d)*sw^8) + 
            s*(-66*d*sw^2*(-5 + 8*sw^2) + d^2*(9 - 60*sw^2 + 96*sw^4) + 
              10*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8))*t + 
            2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^2)) - 
        2*(mz^4*(2*Pi)^(3*d)*(d*(9 - 60*sw^2 + 96*sw^4) - 
            4*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8))*(s + t) + 
          (2*Pi)^(3*d)*s^2*(d*(9 - 60*sw^2 + 96*sw^4) - 
            4*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8))*(s + t) + 
          2*mz^2*(9*d*(2*Pi)^(3*d)*s*((-5 + d)*s - 11*t) + 
            2^(1 + 3*d)*Pi^(3*d)*(2*s^2*(18 - 15*(8 - 5*d + d^2)*sw^2 + 
                2*(83 - 47*d + 12*d^2)*sw^4 - 80*(-1 + d)*sw^6 + 
                64*(-1 + d)*sw^8) + s*(-66*d*sw^2*(-5 + 8*sw^2) + 
                d^2*(9 - 60*sw^2 + 96*sw^4) + 10*(9 - 60*sw^2 + 122*sw^4 - 
                  80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 
                320*sw^6 + 256*sw^8)*t^2)))*GaugeXi[Q] + 
        (mz^4*(2*Pi)^(3*d)*(d*(9 - 60*sw^2 + 96*sw^4) - 
            4*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8))*(s + t) + 
          (2*Pi)^(3*d)*s^2*(d*(9 - 60*sw^2 + 96*sw^4) - 
            4*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8))*(s + t) + 
          2*mz^2*(9*d*(2*Pi)^(3*d)*s*((-5 + d)*s - 11*t) + 
            2^(1 + 3*d)*Pi^(3*d)*(2*s^2*(18 - 15*(8 - 5*d + d^2)*sw^2 + 
                2*(83 - 47*d + 12*d^2)*sw^4 - 80*(-1 + d)*sw^6 + 
                64*(-1 + d)*sw^8) + s*(-66*d*sw^2*(-5 + 8*sw^2) + 
                d^2*(9 - 60*sw^2 + 96*sw^4) + 10*(9 - 60*sw^2 + 122*sw^4 - 
                  80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 
                320*sw^6 + 256*sw^8)*t^2)))*GaugeXi[Q]^2)))/
    ((-4 + d)*Pi^(4*d)*(mz^2 - s)^3*s*sw^4*(mz - mz*sw^2)^2*
     (-1 + GaugeXi[Q])), 0, 0, ((-I/27)*2^(-7 - 2*d)*EL^6*
     (9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
       (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
          3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
            64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
          d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 
            64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*
         t^2))*(-1 + GaugeXi[Q]))/(mz^2*Pi^(2*d)*(mz^2 - s)*s*sw^4*
     (-1 + sw^2)^2), ((I/27)*2^(-7 - 2*d)*EL^6*(9*d^2*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
          3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
            64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
          d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 
            64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*
         t^2))*(3*s + (-mz^2 + s)*GaugeXi[Q] + mz^2*GaugeXi[Q]^2))/
    (mz^2*Pi^(2*d)*(mz^2 - s)*s*sw^4*(-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 0, 0, 
   ((I/27)*2^(-5 - 2*d)*EL^6*(63*d^3*(2*Pi)^d*s + 
      (-3 + d)*mz^2*(9*d^3*(2*Pi)^d + 2^(1 + d)*Pi^d*
         (6*d^3*sw^2*(-5 + 8*sw^2) - 27*d^2*(3 - 20*sw^2 + 32*sw^4) - 
          32*(18 - 120*sw^2 + 205*sw^4 - 40*sw^6 + 32*sw^8) + 
          12*d*(33 - 220*sw^2 + 365*sw^4 - 40*sw^6 + 32*sw^8))) + 
      2^(1 + d)*Pi^d*(s*(-225*d^2*(3 - 20*sw^2 + 32*sw^4) + 
          18*d^3*(2 - 25*sw^2 + 40*sw^4) - 12*d*(-186 + 1240*sw^2 - 
            1971*sw^4 - 40*sw^6 + 32*sw^8) + 16*(-153 + 1020*sw^2 - 
            1606*sw^4 - 80*sw^6 + 64*sw^8)) + 
        (-36*d^3*(3 - 20*sw^2 + 32*sw^4) + d^4*(9 - 60*sw^2 + 96*sw^4) + 
          32*(36 - 240*sw^2 + 449*sw^4 - 200*sw^6 + 160*sw^8) + 
          d^2*(522 - 3480*sw^2 + 5672*sw^4 - 320*sw^6 + 256*sw^8) - 
          8*d*(153 - 1020*sw^2 + 1762*sw^4 - 400*sw^6 + 320*sw^8))*t)))/
    ((-4 + d)*Pi^(2*d)*(mz^2 - s)*sw^4*(-1 + sw^2)^2), 0, 
   ((I/27)*4^(-3 - d)*EL^6*
     (-((s + t)*(9*d^3*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
          (s*(6*d^3*sw^2*(-5 + 8*sw^2) - 33*d^2*(3 - 20*sw^2 + 32*sw^4) - 
             4*d*(-126 + 840*sw^2 - 1331*sw^4 - 40*sw^6 + 32*sw^8) + 
             16*(-45 + 300*sw^2 - 454*sw^4 - 80*sw^6 + 64*sw^8)) - 
           4*(-18*d*(3 - 20*sw^2 + 32*sw^4) + d^2*(9 - 60*sw^2 + 96*sw^4) - 
             8*(-9 + 60*sw^2 - 83*sw^4 - 40*sw^6 + 32*sw^8))*t))) + 
      mz^2*(-9*d^3*(2*Pi)^d*(s - 3*t) + 2^(1 + d)*Pi^d*
         (s*(18*d^3*(1 - 5*sw^2 + 8*sw^4) - 144*(3 - 20*sw^2 + 32*sw^4) - 
            45*d^2*(3 - 20*sw^2 + 32*sw^4) + 4*d*(108 - 720*sw^2 + 
              1165*sw^4 - 40*sw^6 + 32*sw^8)) + (18*d^3*sw^2*(-5 + 8*sw^2) - 
            144*(3 - 20*sw^2 + 32*sw^4) - 45*d^2*(3 - 20*sw^2 + 32*sw^4) + 
            4*d*(108 - 720*sw^2 + 1165*sw^4 - 40*sw^6 + 32*sw^8))*t))))/
    (Pi^(2*d)*(mz^2 - s)*sw^4*(-1 + sw^2)^2), 
   ((I/27)*EL^6*((sw^4*(3 - 4*sw^2)^2*
        (mz^4*(2^(1 + d)*(56 - 41*d + 9*d^2)*Pi^d - d^3*(2*Pi)^d)*(s + t) - 
         d^3*(2*Pi)^d*s^2*(s + 3*t) + 2^(1 + d)*mz^2*Pi^d*
          ((-144 + 98*d - 20*d^2 + d^3)*s^2 + (-184 + 122*d - 24*d^2 + d^3)*s*
            t - 4*(10 - 6*d + d^2)*t^2) + 2^(1 + d)*Pi^d*
          (9*(8 - 5*d + d^2)*s^3 + (96 - 49*d + 9*d^2 + d^3)*s^2*t - 
           4*(-8 + d)*s*t^2 + 8*t^3)))/4 - 
      4*sw^8*(mz^4*(2^(1 + d)*(64 - 44*d + 9*d^2)*Pi^d - d^3*(2*Pi)^d)*
         (s + t) - d^3*(2*Pi)^d*s^2*(s + 3*t) + 2^(1 + d)*(-4 + d)*mz^2*Pi^d*
         (s + t)*((36 - 16*d + d^2)*s - 4*(-2 + d)*t) - 
        2^(1 + d)*Pi^d*((-72 + 48*d - 9*d^2)*s^3 - (72 - 52*d + 9*d^2 + d^3)*
           s^2*t + 4*(2 + d)*s*t^2 + 8*t^3)) + (-1/2 + sw^2)^2*
       (4*sw^4*(mz^4*(2^(1 + d)*(56 - 41*d + 9*d^2)*Pi^d - d^3*(2*Pi)^d)*
           (s + t) - d^3*(2*Pi)^d*s^2*(s + 3*t) + 2^(1 + d)*mz^2*Pi^d*
           ((-144 + 98*d - 20*d^2 + d^3)*s^2 + (-184 + 122*d - 24*d^2 + d^3)*
             s*t - 4*(10 - 6*d + d^2)*t^2) + 2^(1 + d)*Pi^d*
           (9*(8 - 5*d + d^2)*s^3 + (96 - 49*d + 9*d^2 + d^3)*s^2*t - 
            4*(-8 + d)*s*t^2 + 8*t^3)) - 
        ((3 - 4*sw^2)^2*(mz^4*(2^(1 + d)*(64 - 44*d + 9*d^2)*Pi^d - 
             d^3*(2*Pi)^d)*(s + t) - d^3*(2*Pi)^d*s^2*(s + 3*t) + 
           2^(1 + d)*(-4 + d)*mz^2*Pi^d*(s + t)*((36 - 16*d + d^2)*s - 
             4*(-2 + d)*t) - 2^(1 + d)*Pi^d*((-72 + 48*d - 9*d^2)*s^3 - 
             (72 - 52*d + 9*d^2 + d^3)*s^2*t + 4*(2 + d)*s*t^2 + 8*t^3)))/
         4)))/(2^(2*(1 + d))*Pi^(2*d)*(mz^2 - s)*sw^4*(-1 + sw^2)^2), 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, 
 {{0, 0, 0, ((-I/27)*2^(-7 - d)*EL^6*
     (s^2*(d^2*(9 - 60*sw^2 + 96*sw^4) + 4*(9 - 60*sw^2 + 44*sw^4 + 
          160*sw^6 - 128*sw^8) + 4*d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
          64*sw^8)) + 2*s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
        d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 
          64*sw^8))*t + 4*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^2)*
     (-mz^2 + s + mz^2*GaugeXi[Q]))/((-1 + d)*mz^4*Pi^d*s^2*sw^4*
     (-1 + sw^2)^2), 0, 0, 0, ((I/27)*2^(-3 - 2*d)*EL^6*
     ((sw^4*(3 - 4*sw^2)^2*(d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
          ((4 - 3*d)*s^2 + (4 - 5*d + d^2)*s*t - 2*t^2) + 
         mz^2*(-7*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*((4 - 3*d + 4*d^2)*s^2 + 
             (4 - 5*d + d^2)*s*t - 2*t^2))))/4 - 
      4*sw^8*(d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*(-2*(-1 + d)*s^2 + 
          (8 - 5*d + d^2)*s*t + 2*t^2) + mz^2*(-7*d^2*(2*Pi)^d*s^2 + 
          2^(1 + d)*Pi^d*((2 - 2*d + 4*d^2)*s^2 + (8 - 5*d + d^2)*s*t + 
            2*t^2))) + (-1/2 + sw^2)^2*
       (4*sw^4*(d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*((4 - 3*d)*s^2 + 
            (4 - 5*d + d^2)*s*t - 2*t^2) + mz^2*(-7*d^2*(2*Pi)^d*s^2 + 
            2^(1 + d)*Pi^d*((4 - 3*d + 4*d^2)*s^2 + (4 - 5*d + d^2)*s*t - 
              2*t^2))) - ((3 - 4*sw^2)^2*(d^2*(2*Pi)^d*s^3 + 
           2^(1 + d)*Pi^d*s*(-2*(-1 + d)*s^2 + (8 - 5*d + d^2)*s*t + 2*t^2) + 
           mz^2*(-7*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*((2 - 2*d + 4*d^2)*
                s^2 + (8 - 5*d + d^2)*s*t + 2*t^2))))/4) - 
      ((sw^4*(3 - 4*sw^2)^2*(2^(1 + d)*Pi^d*s*((8 - 6*d + d^2)*s^2 + 
             2*(4 - 5*d + d^2)*s*t - 4*t^2) + mz^2*(17*d^2*(2*Pi)^d*s^2 + 
             2^(1 + d)*Pi^d*((12 - 9*d - 7*d^2)*s^2 + 3*(4 - 5*d + d^2)*s*
                t - 6*t^2))))/4 - 4*sw^8*(2^(1 + d)*Pi^d*s*
           ((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 4*t^2) + 
          mz^2*(17*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*((6 - 6*d - 7*d^2)*s^2 + 
              3*(8 - 5*d + d^2)*s*t + 6*t^2))) + (-1/2 + sw^2)^2*
         (4*sw^4*(2^(1 + d)*Pi^d*s*((8 - 6*d + d^2)*s^2 + 2*(4 - 5*d + d^2)*s*
               t - 4*t^2) + mz^2*(17*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*(
                (12 - 9*d - 7*d^2)*s^2 + 3*(4 - 5*d + d^2)*s*t - 6*t^2))) - 
          ((3 - 4*sw^2)^2*(2^(1 + d)*Pi^d*s*((-2 + d)^2*s^2 + 2*(8 - 5*d + 
                 d^2)*s*t + 4*t^2) - mz^2*(-17*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*
                Pi^d*((-6 + 6*d + 7*d^2)*s^2 - 3*(8 - 5*d + d^2)*s*t - 
                 6*t^2))))/4))*GaugeXi[Q] + 
      ((sw^4*(3 - 4*sw^2)^2*(d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
            ((4 - 3*d)*s^2 + (4 - 5*d + d^2)*s*t - 2*t^2) + 
           3*mz^2*(-(d^2*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*((4 - 3*d + d^2)*
                s^2 + (4 - 5*d + d^2)*s*t - 2*t^2))))/4 - 
        4*sw^8*(d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*(-2*(-1 + d)*s^2 + 
            (8 - 5*d + d^2)*s*t + 2*t^2) + 3*mz^2*(-(d^2*(2*Pi)^d*s^2) + 
            2^(1 + d)*Pi^d*((2 - 2*d + d^2)*s^2 + (8 - 5*d + d^2)*s*t + 
              2*t^2))) + (-1/2 + sw^2)^2*(4*sw^4*(d^2*(2*Pi)^d*s^3 + 
            2^(1 + d)*Pi^d*s*((4 - 3*d)*s^2 + (4 - 5*d + d^2)*s*t - 2*t^2) + 
            3*mz^2*(-(d^2*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*((4 - 3*d + d^2)*
                 s^2 + (4 - 5*d + d^2)*s*t - 2*t^2))) - 
          ((3 - 4*sw^2)^2*(d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
              (-2*(-1 + d)*s^2 + (8 - 5*d + d^2)*s*t + 2*t^2) + 
             3*mz^2*(-(d^2*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*((2 - 2*d + d^2)*
                  s^2 + (8 - 5*d + d^2)*s*t + 2*t^2))))/4))*GaugeXi[Q]^2 + 
      (mz^2*(189*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
          (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
             3*d^2*(-15 - 5*sw^2 + 8*sw^4) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*
                sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
             d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*
                sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
             256*sw^8)*t^2))*GaugeXi[Q]^3)/16))/((-1 + d)*mz^4*Pi^(2*d)*s^2*
     sw^4*(-1 + sw^2)^2*(-1 + GaugeXi[Q])^2), 0, 
   ((-I/27)*2^(-7 - 4*d)*EL^6*
     (-((2*Pi)^(3*d)*s*(4*(-1 + d)*mz^4 - 4*d*mz^2*s + d*s^2)*
        (1 - 4*sw^2 + 8*sw^4)*(9 - 24*sw^2 + 32*sw^4)*(-1 + GaugeXi[Q])^2) + 
      2^(2 + 3*d)*(-1 + d)*mz^4*Pi^(3*d)*(-36*d^2*(3 - 20*sw^2 + 32*sw^4) + 
        d^3*(9 - 60*sw^2 + 96*sw^4) - 8*(63 - 420*sw^2 + 698*sw^4 - 80*sw^6 + 
          64*sw^8) + d*(414 - 2760*sw^2 + 4520*sw^4 - 320*sw^6 + 256*sw^8))*
       (s + 2*t)*(-1 + GaugeXi[Q])^2 + 4^(1 + d)*(-1 + d)*mz^4*Pi^(2*d)*
       (9*d^3*(2*Pi)^d + 2^(1 + d)*Pi^d*(6*d^3*sw^2*(-5 + 8*sw^2) - 
          18*d^2*(3 - 20*sw^2 + 32*sw^4) - 4*(63 - 420*sw^2 + 698*sw^4 - 
            80*sw^6 + 64*sw^8) + d*(207 - 1380*sw^2 + 2260*sw^4 - 160*sw^6 + 
            128*sw^8)))*(s + 2*t)*(-1 + GaugeXi[Q])^2 + 
      (-1 + d)*(2*Pi)^(2*d)*(2*mz^2 - s)*
       (-(2^(1 + d)*mz^2*Pi^d*(d*s*(9 - 60*sw^2 + 96*sw^4) - 
           6*s*(9 - 60*sw^2 + 148*sw^4 - 160*sw^6 + 128*sw^8) - 
           2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t)) + 
        s*(9*d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(3*s*(9 + 10*(-6 + d)*sw^2 - 
              4*(-37 + 4*d)*sw^4 - 160*sw^6 + 128*sw^8) + 
            (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t)))*
       (-1 + GaugeXi[Q])^2 + 32*(1 - d)*
       ((sw^4*(3 - 4*sw^2)^2*((-2 + d)*(2*Pi)^(3*d)*s^2*(s + t) - 
           2^(1 + 3*d)*mz^4*Pi^(3*d)*((-112 + 81*d - 18*d^2 + d^3)*s + 
             2*(-53 + 44*d - 12*d^2 + d^3)*t) + 2^(2 + 3*d)*mz^2*Pi^(3*d)*
            ((10 - 7*d + d^2)*s^2 + (10 - 11*d + 2*d^2)*s*t - 4*t^2)))/4 - 
        4*sw^8*((-4 + d)*(2*Pi)^(3*d)*s^2*(s + t) - 2^(1 + 3*d)*mz^4*Pi^(3*d)*
           ((-122 + 87*d - 18*d^2 + d^3)*s + 2*(-55 + 46*d - 12*d^2 + d^3)*
             t) + 2^(2 + 3*d)*mz^2*Pi^(3*d)*((8 - 5*d + d^2)*s^2 + 
            (20 - 11*d + 2*d^2)*s*t + 4*t^2)) + (-1/2 + sw^2)^2*
         (4*sw^4*((-2 + d)*(2*Pi)^(3*d)*s^2*(s + t) - 2^(1 + 3*d)*mz^4*
             Pi^(3*d)*((-112 + 81*d - 18*d^2 + d^3)*s + 2*(-53 + 44*d - 
                12*d^2 + d^3)*t) + 2^(2 + 3*d)*mz^2*Pi^(3*d)*
             ((10 - 7*d + d^2)*s^2 + (10 - 11*d + 2*d^2)*s*t - 4*t^2)) - 
          ((3 - 4*sw^2)^2*((-4 + d)*(2*Pi)^(3*d)*s^2*(s + t) - 
             2^(1 + 3*d)*mz^4*Pi^(3*d)*((-122 + 87*d - 18*d^2 + d^3)*s + 2*
                (-55 + 46*d - 12*d^2 + d^3)*t) + 2^(2 + 3*d)*mz^2*Pi^(3*d)*
              ((8 - 5*d + d^2)*s^2 + (20 - 11*d + 2*d^2)*s*t + 4*t^2)))/4))*
       (-1 + GaugeXi[Q])^2 + (2*Pi)^(2*d)*s*(4*(-1 + d)*mz^4 - 4*d*mz^2*s + 
        d*s^2)*(1 - 4*sw^2 + 8*sw^4)*(9 - 24*sw^2 + 32*sw^4)*
       (-(2*Pi)^d + 2^(1 + d)*Pi^d*GaugeXi[Q] - (2*Pi)^d*GaugeXi[Q]^2) + 
      (2*Pi)^(2*d)*(4*(-1 + d)*mz^4 + s*((-2 + d)*s - 2*t) + 
        mz^2*(-4*(-2 + d)*s + 8*t))*(9*d*(2*Pi)^d*s - 
        2^(1 + d)*Pi^d*(2*s*(9 + 15*(-4 + d)*sw^2 + (122 - 24*d)*sw^4 - 
            80*sw^6 + 64*sw^8) + (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
            256*sw^8)*t) - 2^(1 + d)*Pi^d*(d*s*(9 - 60*sw^2 + 96*sw^4) - 
          4*s*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8) - 
          2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t)*GaugeXi[Q] + 
        (9*d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(2*s*(9 + 15*(-4 + d)*sw^2 + 
              (122 - 24*d)*sw^4 - 80*sw^6 + 64*sw^8) + 
            (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t))*
         GaugeXi[Q]^2) + 2^(5 + 2*d)*(1 - d)*Pi^(2*d)*(mz^2 - s/2)*
       (sw^4*((3*d*s*(2^(1 + d)*mz^2*Pi^d + 2^(1 + d)*Pi^d*s - 3*(2*Pi)^d*s)*
            (-3 + 8*sw^2))/4 - 2^(-1 + d)*Pi^d*(2*mz^2 - s)*
           (48*s*sw^4 + (9 - 24*sw^2 + 32*sw^4)*t)) - 
        (-1/2 + sw^2)^2*(4*sw^4*(d*s*(2^(1 + d)*mz^2*Pi^d + 2^(1 + d)*Pi^
                d*s - 3*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(2*mz^2 - s)*t) - 
          ((3 - 4*sw^2)^2*(2^(1 + d)*mz^2*Pi^d*((-6 + d)*s - 2*t) + 
             s*(-3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*((3 + d)*s + t))))/4) - 
        ((2^(1 + d)*mz^2*Pi^d*(d*s*(9 - 60*sw^2 + 96*sw^4) - 
             6*s*(9 - 60*sw^2 + 148*sw^4 - 160*sw^6 + 128*sw^8) - 
             2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t) + 
           s*(-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(3*s*(9 + 10*(-6 + d)*sw^2 - 
                 4*(-37 + 4*d)*sw^4 - 160*sw^6 + 128*sw^8) + (9 - 60*sw^2 + 
                 200*sw^4 - 320*sw^6 + 256*sw^8)*t)))*GaugeXi[Q])/8 + 
        ((2^(1 + d)*mz^2*Pi^d*(d*s*(9 - 60*sw^2 + 96*sw^4) - 
             6*s*(9 - 60*sw^2 + 148*sw^4 - 160*sw^6 + 128*sw^8) - 
             2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t) - 
           s*(27*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(-3*s*(9 - 60*sw^2 + 
                 148*sw^4 - 160*sw^6 + 128*sw^8 + d*(3 + 10*sw^2 - 
                   16*sw^4)) + (-9 + 60*sw^2 - 200*sw^4 + 320*sw^6 - 
                 256*sw^8)*t)))*GaugeXi[Q]^2)/16)))/
    (mz^4*Pi^(4*d)*(s - d*s)*sw^4*(-1 + sw^2)^2*(-1 + GaugeXi[Q])^2), 
   ((-I/27)*2^(-5 - d)*EL^6*(-2*mz^2*s*(-54*d^2*(3 - 20*sw^2 + 32*sw^4) + 
        d^3*(9 - 60*sw^2 + 96*sw^4) - 64*(18 - 120*sw^2 + 205*sw^4 - 
          40*sw^6 + 32*sw^8) + 24*d*(33 - 220*sw^2 + 365*sw^4 - 40*sw^6 + 
          32*sw^8)) + 3*s^2*(-144*(3 - 20*sw^2 + 32*sw^4) - 
        18*d^2*(3 - 20*sw^2 + 32*sw^4) + d^3*(3 - 20*sw^2 + 32*sw^4) + 
        8*d*(36 - 240*sw^2 + 397*sw^4 - 40*sw^6 + 32*sw^8)) + 
      24*s*(8*sw^4*(13 - 40*sw^2 + 32*sw^4) + d*(3 - 20*sw^2 + 32*sw^4))*t + 
      16*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^2))/
    (Pi^d*s*sw^4*(-1 + sw^2)^2), 0, 
   ((-I/27)*2^(-3 - 2*d)*EL^6*
     (-(s*(27*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
           (s^2*(18 - 120*sw^2 + 88*sw^4 + 320*sw^6 - 256*sw^8 + 
              d^2*(-9 - 30*sw^2 + 48*sw^4) + 2*d*(-9 + 60*sw^2 - 70*sw^4 - 
                80*sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
              d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
                80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 
              320*sw^6 + 256*sw^8)*t^2)))/16 - 
      2*((sw^4*(3 - 4*sw^2)^2*(d^2*(2*Pi)^d*s^3 + 2^(1 + d)*mz^2*Pi^d*
            ((8 - 6*d + d^2)*s^2 + 2*(4 - 5*d + d^2)*s*t - 4*t^2) + 
           2^(1 + d)*Pi^d*s*((4 - 3*d)*s^2 + (4 - 5*d + d^2)*s*t - 2*t^2)))/
         4 - 4*sw^8*(d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*(-2*(-1 + d)*s^2 + 
            (8 - 5*d + d^2)*s*t + 2*t^2) + 2^(1 + d)*mz^2*Pi^d*
           ((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 4*t^2)) + 
        (-1/2 + sw^2)^2*(4*sw^4*(d^2*(2*Pi)^d*s^3 + 2^(1 + d)*mz^2*Pi^d*
             ((8 - 6*d + d^2)*s^2 + 2*(4 - 5*d + d^2)*s*t - 4*t^2) + 
            2^(1 + d)*Pi^d*s*((4 - 3*d)*s^2 + (4 - 5*d + d^2)*s*t - 2*t^2)) - 
          ((3 - 4*sw^2)^2*(d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
              (-2*(-1 + d)*s^2 + (8 - 5*d + d^2)*s*t + 2*t^2) + 
             2^(1 + d)*mz^2*Pi^d*((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 4*
                t^2)))/4))*GaugeXi[Q] + 
      ((sw^4*(3 - 4*sw^2)^2*(3*d^2*(2*Pi)^d*s^3 + 2^(3 + d)*mz^2*Pi^d*
            ((8 - 6*d + d^2)*s^2 + 2*(4 - 5*d + d^2)*s*t - 4*t^2) - 
           2^(1 + d)*Pi^d*s*((-4 + 3*d + d^2)*s^2 - (4 - 5*d + d^2)*s*t + 
             2*t^2)))/4 - 4*sw^8*(3*d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
           (-((-2 + 2*d + d^2)*s^2) + (8 - 5*d + d^2)*s*t + 2*t^2) + 
          2^(3 + d)*mz^2*Pi^d*((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 
            4*t^2)) + (-1/2 + sw^2)^2*(4*sw^4*(3*d^2*(2*Pi)^d*s^3 + 
            2^(3 + d)*mz^2*Pi^d*((8 - 6*d + d^2)*s^2 + 2*(4 - 5*d + d^2)*s*
               t - 4*t^2) - 2^(1 + d)*Pi^d*s*((-4 + 3*d + d^2)*s^2 - 
              (4 - 5*d + d^2)*s*t + 2*t^2)) - 
          ((3 - 4*sw^2)^2*(3*d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
              (-((-2 + 2*d + d^2)*s^2) + (8 - 5*d + d^2)*s*t + 2*t^2) + 
             2^(3 + d)*mz^2*Pi^d*((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 4*
                t^2)))/4))*GaugeXi[Q]^2 + 
      (mz^2*(9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
          (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
             3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
               64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
             d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*
                sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
             256*sw^8)*t^2))*GaugeXi[Q]^3)/4))/((-1 + d)*mz^4*Pi^(2*d)*s*sw^4*
     (-1 + sw^2)^2*(-1 + GaugeXi[Q])^2), 
   ((I/27)*2^(-3 - 2*d)*EL^6*(4*sw^8*(d^2*(2*Pi)^d*s^3 + 
        2^(1 + d)*Pi^d*s*(-2*(-1 + d)*s^2 + (8 - 5*d + d^2)*s*t + 2*t^2) + 
        mz^2*(-3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*((-2 + 2*d + d^2)*s^2 - 
            (8 - 5*d + d^2)*s*t - 2*t^2))) - 
      (sw^4*(3 - 4*sw^2)^2*(d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
          ((4 - 3*d)*s^2 + (4 - 5*d + d^2)*s*t - 2*t^2) + 
         mz^2*(-3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*((-4 + 3*d + d^2)*s^2 - 
             (4 - 5*d + d^2)*s*t + 2*t^2))))/4 + (-1/2 + sw^2)^2*
       (((3 - 4*sw^2)^2*(d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
            (-2*(-1 + d)*s^2 + (8 - 5*d + d^2)*s*t + 2*t^2) + 
           mz^2*(-3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*((-2 + 2*d + d^2)*s^2 - 
               (8 - 5*d + d^2)*s*t - 2*t^2))))/4 - 
        4*sw^4*(d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*((4 - 3*d)*s^2 + 
            (4 - 5*d + d^2)*s*t - 2*t^2) + mz^2*(-3*d^2*(2*Pi)^d*s^2 + 
            2^(1 + d)*Pi^d*((-4 + 3*d + d^2)*s^2 - (4 - 5*d + d^2)*s*t + 
              2*t^2)))) - 
      (4*sw^8*(2^(1 + d)*Pi^d*s*((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 
            4*t^2) + 3*mz^2*(-5*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
             (2*(-1 + d + d^2)*s^2 - (8 - 5*d + d^2)*s*t - 2*t^2))) - 
        (sw^4*(3 - 4*sw^2)^2*(2^(1 + d)*Pi^d*s*((8 - 6*d + d^2)*s^2 + 
             2*(4 - 5*d + d^2)*s*t - 4*t^2) + 3*mz^2*(-5*d^2*(2*Pi)^d*s^2 + 
             2^(1 + d)*Pi^d*((-4 + 3*d + 2*d^2)*s^2 - (4 - 5*d + d^2)*s*t + 2*
                t^2))))/4 + (-1/2 + sw^2)^2*
         (((3 - 4*sw^2)^2*(2^(1 + d)*Pi^d*s*((-2 + d)^2*s^2 + 2*(8 - 5*d + 
                 d^2)*s*t + 4*t^2) + 3*mz^2*(-5*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*
                Pi^d*(2*(-1 + d + d^2)*s^2 - (8 - 5*d + d^2)*s*t - 2*t^2))))/
           4 - 4*sw^4*(2^(1 + d)*Pi^d*s*((8 - 6*d + d^2)*s^2 + 
              2*(4 - 5*d + d^2)*s*t - 4*t^2) + 3*mz^2*(-5*d^2*(2*Pi)^d*s^2 + 
              2^(1 + d)*Pi^d*((-4 + 3*d + 2*d^2)*s^2 - (4 - 5*d + d^2)*s*t + 
                2*t^2)))))*GaugeXi[Q] + 
      (4*sw^8*(d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*(-2*(-1 + d)*s^2 + 
            (8 - 5*d + d^2)*s*t + 2*t^2) + mz^2*(-11*d^2*(2*Pi)^d*s^2 + 
            2^(1 + d)*Pi^d*((-6 + 6*d + 4*d^2)*s^2 - 3*(8 - 5*d + d^2)*s*t - 
              6*t^2))) - (sw^4*(3 - 4*sw^2)^2*(d^2*(2*Pi)^d*s^3 + 
           2^(1 + d)*Pi^d*s*((4 - 3*d)*s^2 + (4 - 5*d + d^2)*s*t - 2*t^2) + 
           mz^2*(-11*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*((-12 + 9*d + 4*d^2)*
                s^2 - 3*(4 - 5*d + d^2)*s*t + 6*t^2))))/4 + 
        (-1/2 + sw^2)^2*(((3 - 4*sw^2)^2*(d^2*(2*Pi)^d*s^3 + 
             2^(1 + d)*Pi^d*s*(-2*(-1 + d)*s^2 + (8 - 5*d + d^2)*s*t + 2*
                t^2) + mz^2*(-11*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
                ((-6 + 6*d + 4*d^2)*s^2 - 3*(8 - 5*d + d^2)*s*t - 6*t^2))))/
           4 - 4*sw^4*(d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*((4 - 3*d)*s^2 + 
              (4 - 5*d + d^2)*s*t - 2*t^2) + mz^2*(-11*d^2*(2*Pi)^d*s^2 + 
              2^(1 + d)*Pi^d*((-12 + 9*d + 4*d^2)*s^2 - 3*(4 - 5*d + d^2)*s*
                 t + 6*t^2)))))*GaugeXi[Q]^2 + 
      (mz^2*(63*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
          (s^2*(18 - 120*sw^2 + 88*sw^4 + 320*sw^6 - 256*sw^8 + 
             3*d^2*(-9 - 10*sw^2 + 16*sw^4) + 2*d*(-9 + 60*sw^2 - 70*sw^4 - 
               80*sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
             d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*
                sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
             256*sw^8)*t^2))*GaugeXi[Q]^3)/16))/((-1 + d)*mz^4*Pi^(2*d)*s^2*
     sw^4*(-1 + sw^2)^2*(-1 + GaugeXi[Q])^2), 
   ((-I/27)*2^(-7 - 4*d)*EL^6*((2*Pi)^(3*d)*s^2*(1 - 4*sw^2 + 8*sw^4)*
       (9 - 24*sw^2 + 32*sw^4)*(-1 + GaugeXi[Q])^2*(d*(mz^2 - s)^2 + 
        2*((-2 + d)*mz^4 - d*mz^2*s)*GaugeXi[Q] + d*mz^4*GaugeXi[Q]^2) + 
      (2*Pi)^(2*d)*s^2*(1 - 4*sw^2 + 8*sw^4)*(9 - 24*sw^2 + 32*sw^4)*
       (d*(mz^2 - s)^2 + 2*((-2 + d)*mz^4 - d*mz^2*s)*GaugeXi[Q] + 
        d*mz^4*GaugeXi[Q]^2)*((2*Pi)^d - 2^(1 + d)*Pi^d*GaugeXi[Q] + 
        (2*Pi)^d*GaugeXi[Q]^2) - (2*Pi)^(2*d)*
       ((mz^2 - s)^2*((-2 + d)*s - 2*t) + 2*mz^2*(d*(mz^2 - s)*s + 
          2*(s^2 + mz^2*t + s*t))*GaugeXi[Q] + mz^4*((-2 + d)*s - 2*t)*
         GaugeXi[Q]^2)*(9*d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*
         (2*s*(9 + 15*(-4 + d)*sw^2 + (122 - 24*d)*sw^4 - 80*sw^6 + 
            64*sw^8) + (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t) - 
        2^(1 + d)*Pi^d*(d*s*(9 - 60*sw^2 + 96*sw^4) - 
          4*s*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8) - 
          2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t)*GaugeXi[Q] + 
        (9*d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(2*s*(9 + 15*(-4 + d)*sw^2 + 
              (122 - 24*d)*sw^4 - 80*sw^6 + 64*sw^8) + 
            (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t))*
         GaugeXi[Q]^2) + (-1 + d)*(2*Pi)^(2*d)*s*(mz^2 - s + mz^2*GaugeXi[Q])^
        2*(9*d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*
         (3*s*(9 + 10*(-6 + d)*sw^2 - 4*(-37 + 4*d)*sw^4 - 160*sw^6 + 
            128*sw^8) + (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t) - 
        2^(1 + d)*Pi^d*(d*s*(9 - 60*sw^2 + 96*sw^4) - 
          6*s*(9 - 60*sw^2 + 148*sw^4 - 160*sw^6 + 128*sw^8) - 
          2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t)*GaugeXi[Q] + 
        (9*d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(3*s*(9 + 10*(-6 + d)*sw^2 - 
              4*(-37 + 4*d)*sw^4 - 160*sw^6 + 128*sw^8) + 
            (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t))*
         GaugeXi[Q]^2) + (-1 + d)*(2*Pi)^(2*d)*s*(-mz^2 + s - 
        mz^2*GaugeXi[Q])*(s*(27*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
           (-3*s*(9 - 60*sw^2 + 148*sw^4 - 160*sw^6 + 128*sw^8 + 
              d*(3 + 10*sw^2 - 16*sw^4)) + (-9 + 60*sw^2 - 200*sw^4 + 
              320*sw^6 - 256*sw^8)*t)) + mz^2*(-9*d*(2*Pi)^d*s + 
          2^(1 + d)*Pi^d*(3*s*(9 + 10*(-6 + d)*sw^2 - 4*(-37 + 4*d)*sw^4 - 
              160*sw^6 + 128*sw^8) + (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
              256*sw^8)*t)) + 
        (-(2^(1 + d)*Pi^d*s*(d*s*(9 - 60*sw^2 + 96*sw^4) - 
             6*s*(9 - 60*sw^2 + 148*sw^4 - 160*sw^6 + 128*sw^8) - 
             2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t)) + 
          mz^2*(-45*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(3*s*(-9 + 60*sw^2 - 
                148*sw^4 + 160*sw^6 - 128*sw^8 + d*(9 - 10*sw^2 + 16*sw^4)) + 
              (-9 + 60*sw^2 - 200*sw^4 + 320*sw^6 - 256*sw^8)*t)))*
         GaugeXi[Q] + (s*(27*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
             (-3*s*(9 - 60*sw^2 + 148*sw^4 - 160*sw^6 + 128*sw^8 + 
                d*(3 + 10*sw^2 - 16*sw^4)) + (-9 + 60*sw^2 - 200*sw^4 + 
                320*sw^6 - 256*sw^8)*t)) + mz^2*(-9*d*(2*Pi)^d*s + 
            2^(1 + d)*Pi^d*(3*s*(-9 + 60*sw^2 - 148*sw^4 + 160*sw^6 - 
                128*sw^8 + d*(3 - 10*sw^2 + 16*sw^4)) + (-9 + 60*sw^2 - 
                200*sw^4 + 320*sw^6 - 256*sw^8)*t)))*GaugeXi[Q]^2 - 
        mz^2*(45*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
           (3*s*(-9 + 60*sw^2 - 148*sw^4 + 160*sw^6 - 128*sw^8 + 
              2*d*(-3 - 5*sw^2 + 8*sw^4)) + (-9 + 60*sw^2 - 200*sw^4 + 
              320*sw^6 - 256*sw^8)*t))*GaugeXi[Q]^3) - 
      2*(1 - d)*s*(2^(4 + 3*d)*Pi^(3*d)*
         ((sw^4*(3 - 4*sw^2)^2*((-2 + d)*mz^4*(s + t) + (-2 + d)*s^2*
              (s + t) + 2*mz^2*((10 - 7*d + d^2)*s^2 + (10 - 11*d + 2*d^2)*s*
                t - 4*t^2)))/4 - 4*sw^8*((-4 + d)*mz^4*(s + t) + 
            (-4 + d)*s^2*(s + t) + 2*mz^2*((8 - 5*d + d^2)*s^2 + 
              (20 - 11*d + 2*d^2)*s*t + 4*t^2)) + (-1/2 + sw^2)^2*
           (4*sw^4*((-2 + d)*mz^4*(s + t) + (-2 + d)*s^2*(s + t) + 
              2*mz^2*((10 - 7*d + d^2)*s^2 + (10 - 11*d + 2*d^2)*s*t - 
                4*t^2)) - ((3 - 4*sw^2)^2*((-4 + d)*mz^4*(s + t) + (-4 + d)*
                s^2*(s + t) + 2*mz^2*((8 - 5*d + d^2)*s^2 + (20 - 11*d + 
                   2*d^2)*s*t + 4*t^2)))/4)) + 2^(1 + 3*d)*Pi^(3*d)*
         (s^2*(d*(9 - 60*sw^2 + 96*sw^4) - 4*(9 - 60*sw^2 + 122*sw^4 - 
              80*sw^6 + 64*sw^8))*(s + t) + 
          mz^4*(d*s*(9 - 60*sw^2 + 96*sw^4) + 2*s*(-9 + 60*sw^2 - 44*sw^4 - 
              160*sw^6 + 128*sw^8) + 6*(-3 + d)*(3 - 20*sw^2 + 32*sw^4)*t) + 
          mz^2*(s^2*(6*d^2*(3 - 20*sw^2 + 32*sw^4) - 12*(-9 + 60*sw^2 - 
                70*sw^4 - 80*sw^6 + 64*sw^8) + d*(-81 + 540*sw^2 - 656*sw^4 - 
                640*sw^6 + 512*sw^8)) + 3*s*(-21*d*(3 - 20*sw^2 + 32*sw^4) + 
              4*d^2*(3 - 20*sw^2 + 32*sw^4) + 12*(9 - 60*sw^2 + 122*sw^4 - 
                80*sw^6 + 64*sw^8))*t + 8*(9 - 60*sw^2 + 200*sw^4 - 
              320*sw^6 + 256*sw^8)*t^2))*GaugeXi[Q] - 
        (2*Pi)^(3*d)*(3*d*s^2*(3 - 20*sw^2 + 32*sw^4)*(s + t) + 
          6*d^2*mz^2*s*(-1 + 4*sw^2)*(-3 + 8*sw^2)*(s + 2*t) + 
          6*d*mz^4*(3 - 20*sw^2 + 32*sw^4)*(s + 3*t) + 
          2*d*mz^2*s*(s*(-27 + 180*sw^2 - 184*sw^4 - 320*sw^6 + 256*sw^8) - 
            27*(3 - 20*sw^2 + 32*sw^4)*t) - 256*sw^8*(s^3 + 4*mz^4*t - 
            6*mz^2*s*t + s^2*t - 2*mz^2*t^2) + 8*sw^4*(3 - 4*sw^2)^2*
           (s^2*(s + t) + 2*mz^4*(3*s + 5*t) + mz^2*(-6*s^2 - 6*s*t + 
              4*t^2)) - 64*(-1/2 + sw^2)^2*
           (((3 - 4*sw^2)^2*(s^3 + 4*mz^4*t - 6*mz^2*s*t + s^2*t - 2*mz^2*
                t^2))/4 - 2*sw^4*(s^2*(s + t) + 2*mz^4*(3*s + 5*t) + 
              mz^2*(-6*s^2 - 6*s*t + 4*t^2))))*GaugeXi[Q]^2 + 
        2^(1 + 3*d)*mz^2*Pi^(3*d)*(s*(d*(9 - 60*sw^2 + 96*sw^4) - 
            4*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8))*(s + t) + 
          mz^2*(d*s*(9 - 60*sw^2 + 96*sw^4) + 2*s*(-9 + 60*sw^2 - 44*sw^4 - 
              160*sw^6 + 128*sw^8) + 6*(-3 + d)*(3 - 20*sw^2 + 32*sw^4)*t))*
         GaugeXi[Q]^3 - mz^4*(2*Pi)^(3*d)*(d*(9 - 60*sw^2 + 96*sw^4) - 
          4*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8))*(s + t)*
         GaugeXi[Q]^4)))/((1 - d)*mz^4*Pi^(4*d)*sw^4*(-1 + sw^2)^2*
     (s - s*GaugeXi[Q])^2), ((I/27)*2^(-3 - 2*d)*EL^6*
     ((sw^4*(3 - 4*sw^2)^2*(-(d^2*(2*Pi)^d*s^3) + 2^(1 + d)*Pi^d*s*
          ((-4 + 3*d)*s^2 - (4 - 5*d + d^2)*s*t + 2*t^2) + 
         mz^2*(-7*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*((-4 + 3*d + 3*d^2)*s^2 - 
             (4 - 5*d + d^2)*s*t + 2*t^2))))/4 + 
      4*sw^8*(d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*(-2*(-1 + d)*s^2 + 
          (8 - 5*d + d^2)*s*t + 2*t^2) + mz^2*(7*d^2*(2*Pi)^d*s^2 + 
          2^(1 + d)*Pi^d*((2 - 2*d - 3*d^2)*s^2 + (8 - 5*d + d^2)*s*t + 
            2*t^2))) - (-1/2 + sw^2)^2*
       (4*sw^4*(d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*((4 - 3*d)*s^2 + 
            (4 - 5*d + d^2)*s*t - 2*t^2) + mz^2*(7*d^2*(2*Pi)^d*s^2 + 
            2^(1 + d)*Pi^d*((4 - 3*d - 3*d^2)*s^2 + (4 - 5*d + d^2)*s*t - 
              2*t^2))) - ((3 - 4*sw^2)^2*(d^2*(2*Pi)^d*s^3 + 
           2^(1 + d)*Pi^d*s*(-2*(-1 + d)*s^2 + (8 - 5*d + d^2)*s*t + 2*t^2) + 
           mz^2*(7*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*((2 - 2*d - 3*d^2)*s^2 + 
               (8 - 5*d + d^2)*s*t + 2*t^2))))/4) + 
      ((sw^4*(3 - 4*sw^2)^2*(2^(1 + d)*Pi^d*s*((8 - 6*d + d^2)*s^2 + 
             2*(4 - 5*d + d^2)*s*t - 4*t^2) + mz^2*(11*d^2*(2*Pi)^d*s^2 + 
             2^(1 + d)*Pi^d*((12 - 9*d - 4*d^2)*s^2 + 3*(4 - 5*d + d^2)*s*
                t - 6*t^2))))/4 - 4*sw^8*(2^(1 + d)*Pi^d*s*
           ((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 4*t^2) + 
          mz^2*(11*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*((6 - 6*d - 4*d^2)*s^2 + 
              3*(8 - 5*d + d^2)*s*t + 6*t^2))) + (-1/2 + sw^2)^2*
         (4*sw^4*(2^(1 + d)*Pi^d*s*((8 - 6*d + d^2)*s^2 + 2*(4 - 5*d + d^2)*s*
               t - 4*t^2) + mz^2*(11*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*(
                (12 - 9*d - 4*d^2)*s^2 + 3*(4 - 5*d + d^2)*s*t - 6*t^2))) - 
          ((3 - 4*sw^2)^2*(2^(1 + d)*Pi^d*s*((-2 + d)^2*s^2 + 2*(8 - 5*d + 
                 d^2)*s*t + 4*t^2) - mz^2*(-11*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*
                Pi^d*((-6 + 6*d + 4*d^2)*s^2 - 3*(8 - 5*d + d^2)*s*t - 
                 6*t^2))))/4))*GaugeXi[Q] + 
      (4*sw^8*(d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*(-2*(-1 + d)*s^2 + 
            (8 - 5*d + d^2)*s*t + 2*t^2) - 3*mz^2*(-5*d^2*(2*Pi)^d*s^2 + 
            2^(1 + d)*Pi^d*(2*(-1 + d + d^2)*s^2 - (8 - 5*d + d^2)*s*t - 
              2*t^2))) + (sw^4*(3 - 4*sw^2)^2*(-(d^2*(2*Pi)^d*s^3) + 
           2^(1 + d)*Pi^d*s*((-4 + 3*d)*s^2 - (4 - 5*d + d^2)*s*t + 2*t^2) + 
           3*mz^2*(-5*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*((-4 + 3*d + 2*d^2)*
                s^2 - (4 - 5*d + d^2)*s*t + 2*t^2))))/4 + 
        (-1/2 + sw^2)^2*(((3 - 4*sw^2)^2*(d^2*(2*Pi)^d*s^3 + 
             2^(1 + d)*Pi^d*s*(-2*(-1 + d)*s^2 + (8 - 5*d + d^2)*s*t + 2*
                t^2) - 3*mz^2*(-5*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
                (2*(-1 + d + d^2)*s^2 - (8 - 5*d + d^2)*s*t - 2*t^2))))/4 - 
          4*sw^4*(d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*((4 - 3*d)*s^2 + 
              (4 - 5*d + d^2)*s*t - 2*t^2) - 3*mz^2*(-5*d^2*(2*Pi)^d*s^2 + 
              2^(1 + d)*Pi^d*((-4 + 3*d + 2*d^2)*s^2 - (4 - 5*d + d^2)*s*t + 
                2*t^2)))))*GaugeXi[Q]^2 - 
      (mz^2*(27*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
          (s^2*(18 - 120*sw^2 + 88*sw^4 + 320*sw^6 - 256*sw^8 + 
             d^2*(-9 - 30*sw^2 + 48*sw^4) + 2*d*(-9 + 60*sw^2 - 70*sw^4 - 80*
                sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
             d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*
                sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
             256*sw^8)*t^2))*GaugeXi[Q]^3)/16))/((-1 + d)*mz^4*Pi^(2*d)*s^2*
     sw^4*(-1 + sw^2)^2*(-1 + GaugeXi[Q])^2), 
   ((-I/27)*2^(-7 - 4*d)*EL^6*((2*Pi)^(3*d)*s^2*(1 - 4*sw^2 + 8*sw^4)*
       (9 - 24*sw^2 + 32*sw^4)*(-1 + GaugeXi[Q])^2*(d*(mz^2 - s)^2 + 
        2*((-2 + d)*mz^4 - d*mz^2*s)*GaugeXi[Q] + d*mz^4*GaugeXi[Q]^2) + 
      (2*Pi)^(2*d)*s^2*(1 - 4*sw^2 + 8*sw^4)*(9 - 24*sw^2 + 32*sw^4)*
       (d*(mz^2 - s)^2 + 2*((-2 + d)*mz^4 - d*mz^2*s)*GaugeXi[Q] + 
        d*mz^4*GaugeXi[Q]^2)*((2*Pi)^d - 2^(1 + d)*Pi^d*GaugeXi[Q] + 
        (2*Pi)^d*GaugeXi[Q]^2) - (2*Pi)^(2*d)*
       ((mz^2 - s)^2*((-2 + d)*s - 2*t) + 2*mz^2*(d*(mz^2 - s)*s + 
          2*(s^2 + mz^2*t + s*t))*GaugeXi[Q] + mz^4*((-2 + d)*s - 2*t)*
         GaugeXi[Q]^2)*(9*d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*
         (2*s*(9 + 15*(-4 + d)*sw^2 + (122 - 24*d)*sw^4 - 80*sw^6 + 
            64*sw^8) + (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t) - 
        2^(1 + d)*Pi^d*(d*s*(9 - 60*sw^2 + 96*sw^4) - 
          4*s*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8) - 
          2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t)*GaugeXi[Q] + 
        (9*d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(2*s*(9 + 15*(-4 + d)*sw^2 + 
              (122 - 24*d)*sw^4 - 80*sw^6 + 64*sw^8) + 
            (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t))*
         GaugeXi[Q]^2) + (-1 + d)*(2*Pi)^(2*d)*s*(mz^2 - s + mz^2*GaugeXi[Q])^
        2*(9*d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*
         (3*s*(9 + 10*(-6 + d)*sw^2 - 4*(-37 + 4*d)*sw^4 - 160*sw^6 + 
            128*sw^8) + (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t) - 
        2^(1 + d)*Pi^d*(d*s*(9 - 60*sw^2 + 96*sw^4) - 
          6*s*(9 - 60*sw^2 + 148*sw^4 - 160*sw^6 + 128*sw^8) - 
          2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t)*GaugeXi[Q] + 
        (9*d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(3*s*(9 + 10*(-6 + d)*sw^2 - 
              4*(-37 + 4*d)*sw^4 - 160*sw^6 + 128*sw^8) + 
            (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t))*
         GaugeXi[Q]^2) + (1 - d)*(2*Pi)^(2*d)*s*(mz^2 - s + mz^2*GaugeXi[Q])*
       (4*sw^4*(-3*d*s*(mz^2*(-(2^(2 + d)*Pi^d) + 5*(2*Pi)^d) + 
            (2^(1 + d)*Pi^d - 3*(2*Pi)^d)*s)*(-3 + 8*sw^2) + 
          2^(1 + d)*Pi^d*(mz^2 - s)*(48*s*sw^4 + (9 - 24*sw^2 + 32*sw^4)*
             t)) + (1 - 2*sw^2)^2*
         (-(s*(-27*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(3*s*((3 - 4*sw^2)^2 + 
                 d*(3 + 4*sw^2)) + (9 - 24*sw^2 + 32*sw^4)*t))) + 
          mz^2*(-45*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(3*s*((3 - 4*sw^2)^2 + 
                d*(6 + 4*sw^2)) + (9 - 24*sw^2 + 32*sw^4)*t))) + 
        (-(2^(1 + d)*Pi^d*s*(d*s*(9 - 60*sw^2 + 96*sw^4) - 
             6*s*(9 - 60*sw^2 + 148*sw^4 - 160*sw^6 + 128*sw^8) - 
             2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t)) + 
          mz^2*(-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(3*s*(-9 + 60*sw^2 - 
                148*sw^4 + 160*sw^6 - 128*sw^8 + d*(3 - 10*sw^2 + 16*sw^4)) + 
              (-9 + 60*sw^2 - 200*sw^4 + 320*sw^6 - 256*sw^8)*t)))*
         GaugeXi[Q] + (s*(27*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
             (-3*s*(9 - 60*sw^2 + 148*sw^4 - 160*sw^6 + 128*sw^8 + 
                d*(3 + 10*sw^2 - 16*sw^4)) + (-9 + 60*sw^2 - 200*sw^4 + 
                320*sw^6 - 256*sw^8)*t)) + mz^2*(-45*d*(2*Pi)^d*s + 
            2^(1 + d)*Pi^d*(3*s*(-9 + 60*sw^2 - 148*sw^4 + 160*sw^6 - 
                128*sw^8 + d*(9 - 10*sw^2 + 16*sw^4)) + (-9 + 60*sw^2 - 
                200*sw^4 + 320*sw^6 - 256*sw^8)*t)))*GaugeXi[Q]^2 + 
        mz^2*(-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
           (3*s*(9 + 10*(-6 + d)*sw^2 - 4*(-37 + 4*d)*sw^4 - 160*sw^6 + 
              128*sw^8) + (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t))*
         GaugeXi[Q]^3) - 2*(1 - d)*s*(2^(4 + 3*d)*Pi^(3*d)*
         ((sw^4*(3 - 4*sw^2)^2*((-2 + d)*mz^4*(s + t) + (-2 + d)*s^2*
              (s + t) + 2*mz^2*((10 - 7*d + d^2)*s^2 + (10 - 11*d + 2*d^2)*s*
                t - 4*t^2)))/4 - 4*sw^8*((-4 + d)*mz^4*(s + t) + 
            (-4 + d)*s^2*(s + t) + 2*mz^2*((8 - 5*d + d^2)*s^2 + 
              (20 - 11*d + 2*d^2)*s*t + 4*t^2)) + (-1/2 + sw^2)^2*
           (4*sw^4*((-2 + d)*mz^4*(s + t) + (-2 + d)*s^2*(s + t) + 
              2*mz^2*((10 - 7*d + d^2)*s^2 + (10 - 11*d + 2*d^2)*s*t - 
                4*t^2)) - ((3 - 4*sw^2)^2*((-4 + d)*mz^4*(s + t) + (-4 + d)*
                s^2*(s + t) + 2*mz^2*((8 - 5*d + d^2)*s^2 + (20 - 11*d + 
                   2*d^2)*s*t + 4*t^2)))/4)) + 2^(1 + 3*d)*Pi^(3*d)*
         (s^2*(d*(9 - 60*sw^2 + 96*sw^4) - 4*(9 - 60*sw^2 + 122*sw^4 - 
              80*sw^6 + 64*sw^8))*(s + t) + 
          mz^4*(d*s*(9 - 60*sw^2 + 96*sw^4) + 2*s*(-9 + 60*sw^2 - 44*sw^4 - 
              160*sw^6 + 128*sw^8) + 6*(-3 + d)*(3 - 20*sw^2 + 32*sw^4)*t) + 
          mz^2*(s^2*(6*d^2*(3 - 20*sw^2 + 32*sw^4) - 12*(-9 + 60*sw^2 - 
                70*sw^4 - 80*sw^6 + 64*sw^8) + d*(-81 + 540*sw^2 - 656*sw^4 - 
                640*sw^6 + 512*sw^8)) + 3*s*(-21*d*(3 - 20*sw^2 + 32*sw^4) + 
              4*d^2*(3 - 20*sw^2 + 32*sw^4) + 12*(9 - 60*sw^2 + 122*sw^4 - 
                80*sw^6 + 64*sw^8))*t + 8*(9 - 60*sw^2 + 200*sw^4 - 
              320*sw^6 + 256*sw^8)*t^2))*GaugeXi[Q] - 
        (2*Pi)^(3*d)*(3*d*s^2*(3 - 20*sw^2 + 32*sw^4)*(s + t) + 
          6*d^2*mz^2*s*(-1 + 4*sw^2)*(-3 + 8*sw^2)*(s + 2*t) + 
          6*d*mz^4*(3 - 20*sw^2 + 32*sw^4)*(s + 3*t) + 
          2*d*mz^2*s*(s*(-27 + 180*sw^2 - 184*sw^4 - 320*sw^6 + 256*sw^8) - 
            27*(3 - 20*sw^2 + 32*sw^4)*t) - 256*sw^8*(s^3 + 4*mz^4*t - 
            6*mz^2*s*t + s^2*t - 2*mz^2*t^2) + 8*sw^4*(3 - 4*sw^2)^2*
           (s^2*(s + t) + 2*mz^4*(3*s + 5*t) + mz^2*(-6*s^2 - 6*s*t + 
              4*t^2)) - 64*(-1/2 + sw^2)^2*
           (((3 - 4*sw^2)^2*(s^3 + 4*mz^4*t - 6*mz^2*s*t + s^2*t - 2*mz^2*
                t^2))/4 - 2*sw^4*(s^2*(s + t) + 2*mz^4*(3*s + 5*t) + 
              mz^2*(-6*s^2 - 6*s*t + 4*t^2))))*GaugeXi[Q]^2 + 
        2^(1 + 3*d)*mz^2*Pi^(3*d)*(s*(d*(9 - 60*sw^2 + 96*sw^4) - 
            4*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8))*(s + t) + 
          mz^2*(d*s*(9 - 60*sw^2 + 96*sw^4) + 2*s*(-9 + 60*sw^2 - 44*sw^4 - 
              160*sw^6 + 128*sw^8) + 6*(-3 + d)*(3 - 20*sw^2 + 32*sw^4)*t))*
         GaugeXi[Q]^3 - mz^4*(2*Pi)^(3*d)*(d*(9 - 60*sw^2 + 96*sw^4) - 
          4*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8))*(s + t)*
         GaugeXi[Q]^4)))/((1 - d)*mz^4*Pi^(4*d)*sw^4*(-1 + sw^2)^2*
     (s - s*GaugeXi[Q])^2), ((-I/27)*2^(-5 - 2*d)*EL^6*
     (-9*d^3*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
       (s*(-9*d^2*(3 - 20*sw^2 + 32*sw^4) + d^3*(9 - 30*sw^2 + 48*sw^4) - 
          2*d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 64*sw^8) + 
          8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8)) + 
        (-36*d^2*(3 - 20*sw^2 + 32*sw^4) + d^3*(9 - 60*sw^2 + 96*sw^4) - 
          8*(63 - 420*sw^2 + 698*sw^4 - 80*sw^6 + 64*sw^8) + 
          d*(414 - 2760*sw^2 + 4520*sw^4 - 320*sw^6 + 256*sw^8))*t)))/
    (Pi^(2*d)*s*sw^4*(-1 + sw^2)^2), 0, 
   ((I/27)*2^(-1 - 2*d)*EL^6*(4*sw^8*(d^3*(2*Pi)^d*s*(s - t) - 
        2^(2 + d)*(-56 + 46*d - 12*d^2 + d^3)*mz^2*Pi^d*(s + t) + 
        2^(1 + d)*Pi^d*((-80 + 56*d - 11*d^2)*s^2 + 
          (-112 + 80*d - 15*d^2 + d^3)*s*t - 4*(8 - 6*d + d^2)*t^2)) - 
      (sw^4*(3 - 4*sw^2)^2*(d^3*(2*Pi)^d*s*(s - t) - 
         2^(2 + d)*(-52 + 44*d - 12*d^2 + d^3)*mz^2*Pi^d*(s + t) + 
         2^(1 + d)*Pi^d*((-88 + 57*d - 11*d^2)*s^2 + 
           (-128 + 81*d - 15*d^2 + d^3)*s*t - 4*(10 - 6*d + d^2)*t^2)))/4 + 
      (-1/2 + sw^2)^2*(((3 - 4*sw^2)^2*(d^3*(2*Pi)^d*s*(s - t) - 
           2^(2 + d)*(-56 + 46*d - 12*d^2 + d^3)*mz^2*Pi^d*(s + t) + 
           2^(1 + d)*Pi^d*((-80 + 56*d - 11*d^2)*s^2 + 
             (-112 + 80*d - 15*d^2 + d^3)*s*t - 4*(8 - 6*d + d^2)*t^2)))/4 - 
        4*sw^4*(d^3*(2*Pi)^d*s*(s - t) - 2^(2 + d)*(-52 + 44*d - 12*d^2 + 
            d^3)*mz^2*Pi^d*(s + t) + 2^(1 + d)*Pi^d*
           ((-88 + 57*d - 11*d^2)*s^2 + (-128 + 81*d - 15*d^2 + d^3)*s*t - 
            4*(10 - 6*d + d^2)*t^2)))))/(Pi^(2*d)*s*sw^4*(-1 + sw^2)^2), 0, 
   ((I/27)*EL^6*((sw^4*(3 - 4*sw^2)^2*(d^3*(2*Pi)^d*s^2*(s + 3*t) + 
         2^(1 + d)*mz^4*Pi^d*((-216 + 170*d - 42*d^2 + 3*d^3)*s + 
           2*(-52 + 44*d - 12*d^2 + d^3)*t) - 2^(2 + d)*mz^2*Pi^d*
          ((-144 + 98*d - 20*d^2 + d^3)*s^2 + (-184 + 122*d - 24*d^2 + d^3)*s*
            t - 4*(10 - 6*d + d^2)*t^2) - 2^(1 + d)*Pi^d*
          (9*(8 - 5*d + d^2)*s^3 + (96 - 49*d + 9*d^2 + d^3)*s^2*t - 
           4*(-8 + d)*s*t^2 + 8*t^3)))/4 - 
      4*sw^8*(d^3*(2*Pi)^d*s^2*(s + 3*t) - 2^(2 + d)*(-4 + d)*mz^2*Pi^d*
         (s + t)*((36 - 16*d + d^2)*s - 4*(-2 + d)*t) + 
        2^(1 + d)*(-4 + d)*mz^4*Pi^d*(3*(20 - 10*d + d^2)*s + 
          2*(14 - 8*d + d^2)*t) + 2^(1 + d)*Pi^d*((-72 + 48*d - 9*d^2)*s^3 - 
          (72 - 52*d + 9*d^2 + d^3)*s^2*t + 4*(2 + d)*s*t^2 + 8*t^3)) + 
      (-1/2 + sw^2)^2*(4*sw^4*(d^3*(2*Pi)^d*s^2*(s + 3*t) + 
          2^(1 + d)*mz^4*Pi^d*((-216 + 170*d - 42*d^2 + 3*d^3)*s + 
            2*(-52 + 44*d - 12*d^2 + d^3)*t) - 2^(2 + d)*mz^2*Pi^d*
           ((-144 + 98*d - 20*d^2 + d^3)*s^2 + (-184 + 122*d - 24*d^2 + d^3)*
             s*t - 4*(10 - 6*d + d^2)*t^2) - 2^(1 + d)*Pi^d*
           (9*(8 - 5*d + d^2)*s^3 + (96 - 49*d + 9*d^2 + d^3)*s^2*t - 
            4*(-8 + d)*s*t^2 + 8*t^3)) - 
        ((3 - 4*sw^2)^2*(d^3*(2*Pi)^d*s^2*(s + 3*t) - 2^(2 + d)*(-4 + d)*mz^2*
            Pi^d*(s + t)*((36 - 16*d + d^2)*s - 4*(-2 + d)*t) + 
           2^(1 + d)*(-4 + d)*mz^4*Pi^d*(3*(20 - 10*d + d^2)*s + 
             2*(14 - 8*d + d^2)*t) + 2^(1 + d)*Pi^d*
            ((-72 + 48*d - 9*d^2)*s^3 - (72 - 52*d + 9*d^2 + d^3)*s^2*t + 
             4*(2 + d)*s*t^2 + 8*t^3)))/4)))/(2^(2*(1 + d))*Pi^(2*d)*s*sw^4*
     (-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
  {0, 0, 0, ((I/27)*2^(-4 - d)*EL^6*
     (-(sw^6*(-3 + 4*sw^2)^3*((8 - 6*d + d^2)*s^2 + 2*(4 - 5*d + d^2)*s*t - 
          4*t^2))/8 + 8*sw^12*((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 
        4*t^2) + (1/2 - sw^2)^3*(8*sw^6*((8 - 6*d + d^2)*s^2 + 
          2*(4 - 5*d + d^2)*s*t - 4*t^2) - 
        ((-3 + 4*sw^2)^3*((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 4*t^2))/
         8))*(-mz^2 + s + mz^2*GaugeXi[Q]))/((-1 + d)*mz^4*Pi^d*(mz^2 - s)*s*
     sw^6*(1 - sw^2)^3), 0, 0, 0, 
   ((-I/27)*4^(-2 - d)*EL^6*((sw^6*(-3 + 4*sw^2)^3*(5*d^2*(2*Pi)^d*s^3 - 
         2^(1 + d)*Pi^d*s*((-4 + 3*d + 2*d^2)*s^2 - (4 - 5*d + d^2)*s*t + 
           2*t^2) + mz^2*(-(d^2*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*
            ((4 - 3*d + d^2)*s^2 + (4 - 5*d + d^2)*s*t - 2*t^2))))/8 - 
      8*sw^12*(5*d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*(-2*(-1 + d + d^2)*s^2 + 
          (8 - 5*d + d^2)*s*t + 2*t^2) + mz^2*(-(d^2*(2*Pi)^d*s^2) + 
          2^(1 + d)*Pi^d*((2 - 2*d + d^2)*s^2 + (8 - 5*d + d^2)*s*t + 
            2*t^2))) - (1/2 - sw^2)^3*
       (8*sw^6*(5*d^2*(2*Pi)^d*s^3 - 2^(1 + d)*Pi^d*s*
           ((-4 + 3*d + 2*d^2)*s^2 - (4 - 5*d + d^2)*s*t + 2*t^2) + 
          mz^2*(-(d^2*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*((4 - 3*d + d^2)*s^2 + 
              (4 - 5*d + d^2)*s*t - 2*t^2))) + 
        ((3 - 4*sw^2)^3*(5*d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
            (-2*(-1 + d + d^2)*s^2 + (8 - 5*d + d^2)*s*t + 2*t^2) + 
           mz^2*(-(d^2*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*((2 - 2*d + d^2)*s^2 + 
               (8 - 5*d + d^2)*s*t + 2*t^2))))/8) + 
      (sw^6*(((3 - 4*sw^2)^3*(2^(1 + d)*Pi^d*s*((8 - 6*d + d^2)*s^2 + 2*
                (4 - 5*d + d^2)*s*t - 4*t^2) + mz^2*(d^2*(2*Pi)^d*s^2 + 
               2^(1 + d)*Pi^d*((12 - 9*d + d^2)*s^2 + 3*(4 - 5*d + d^2)*s*t - 
                 6*t^2))))/8 + 8*sw^6*(2^(1 + d)*Pi^d*s*((-2 + d)^2*s^2 + 
              2*(8 - 5*d + d^2)*s*t + 4*t^2) + mz^2*(d^2*(2*Pi)^d*s^2 + 
              2^(1 + d)*Pi^d*((6 - 6*d + d^2)*s^2 + 3*(8 - 5*d + d^2)*s*t + 
                6*t^2)))) + (1/2 - sw^2)^3*
         (8*sw^6*(2^(1 + d)*Pi^d*s*((8 - 6*d + d^2)*s^2 + 2*(4 - 5*d + d^2)*s*
               t - 4*t^2) + mz^2*(d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*(
                (12 - 9*d + d^2)*s^2 + 3*(4 - 5*d + d^2)*s*t - 6*t^2))) + 
          ((3 - 4*sw^2)^3*(2^(1 + d)*Pi^d*s*((-2 + d)^2*s^2 + 2*(8 - 5*d + 
                 d^2)*s*t + 4*t^2) + mz^2*(d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
                ((6 - 6*d + d^2)*s^2 + 3*(8 - 5*d + d^2)*s*t + 6*t^2))))/8))*
       GaugeXi[Q] - 
      (sw^6*(((-3 + 4*sw^2)^3*(-5*d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
              ((-4 + 3*d + 2*d^2)*s^2 - (4 - 5*d + d^2)*s*t + 2*t^2) + 
             mz^2*(-5*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*((-12 + 9*d + d^2)*
                  s^2 - 3*(4 - 5*d + d^2)*s*t + 6*t^2))))/8 + 
          8*sw^6*(5*d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
             (-2*(-1 + d + d^2)*s^2 + (8 - 5*d + d^2)*s*t + 2*t^2) + 
            mz^2*(5*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*(-((-6 + 6*d + d^2)*
                  s^2) + 3*(8 - 5*d + d^2)*s*t + 6*t^2)))) + 
        (1/2 - sw^2)^3*(8*sw^6*(5*d^2*(2*Pi)^d*s^3 - 2^(1 + d)*Pi^d*s*
             ((-4 + 3*d + 2*d^2)*s^2 - (4 - 5*d + d^2)*s*t + 2*t^2) - 
            mz^2*(-5*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*((-12 + 9*d + d^2)*
                 s^2 - 3*(4 - 5*d + d^2)*s*t + 6*t^2))) + 
          ((3 - 4*sw^2)^3*(5*d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
              (-2*(-1 + d + d^2)*s^2 + (8 - 5*d + d^2)*s*t + 2*t^2) + 
             mz^2*(5*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*(-((-6 + 6*d + d^2)*
                   s^2) + 3*(8 - 5*d + d^2)*s*t + 6*t^2))))/8))*
       GaugeXi[Q]^2 + mz^2*((1/2 - sw^2)^3*
         (8*sw^6*(7*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
             ((4 - 3*d - 3*d^2)*s^2 + (4 - 5*d + d^2)*s*t - 2*t^2)) + 
          ((-3 + 4*sw^2)^3*(-7*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
              ((-2 + 2*d + 3*d^2)*s^2 - (8 - 5*d + d^2)*s*t - 2*t^2)))/8) + 
        sw^6*(((-3 + 4*sw^2)^3*(-7*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
              ((-4 + 3*d + 3*d^2)*s^2 - (4 - 5*d + d^2)*s*t + 2*t^2)))/8 + 
          8*sw^6*(7*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
             ((2 - 2*d - 3*d^2)*s^2 + (8 - 5*d + d^2)*s*t + 2*t^2))))*
       GaugeXi[Q]^3))/((-1 + d)*mz^4*Pi^(2*d)*(mz^2 - s)*s*sw^6*(1 - sw^2)^3*
     (-1 + GaugeXi[Q])^2), 0, ((-I/27)*2^(-4 - 3*d)*EL^6*
     (-(2^(1 + 2*d)*Pi^(2*d)*s*(4*(-1 + d)*mz^4 - 4*d*mz^2*s + d*s^2)*
        (sw^6 + (-1 + 2*sw^2)^3/8)*(8*sw^6 + (-3 + 4*sw^2)^3/8)*
        (-1 + GaugeXi[Q])^2) + 4^(1 + d)*(1 - d)*mz^4*Pi^(2*d)*
       (sw^6*(-8*(-56 + 46*d - 12*d^2 + d^3)*sw^6 + 
          ((-52 + 44*d - 12*d^2 + d^3)*(-3 + 4*sw^2)^3)/8) + 
        (1/2 - sw^2)^3*(-8*(-52 + 44*d - 12*d^2 + d^3)*sw^6 + 
          ((-56 + 46*d - 12*d^2 + d^3)*(-3 + 4*sw^2)^3)/8))*(s + 2*t)*
       (-1 + GaugeXi[Q])^2 + 2^(2 + d)*(1 - d)*mz^4*Pi^d*
       (sw^6*(8*(2^(1 + d)*(28 - 23*d + 6*d^2)*Pi^d - d^3*(2*Pi)^d)*sw^6 - 
          ((2^(2 + d)*(13 - 11*d + 3*d^2)*Pi^d - d^3*(2*Pi)^d)*
            (-3 + 4*sw^2)^3)/8) + (1/2 - sw^2)^3*
         (8*(2^(2 + d)*(13 - 11*d + 3*d^2)*Pi^d - d^3*(2*Pi)^d)*sw^6 - 
          ((2^(1 + d)*(28 - 23*d + 6*d^2)*Pi^d - d^3*(2*Pi)^d)*
            (-3 + 4*sw^2)^3)/8))*(s + 2*t)*(-1 + GaugeXi[Q])^2 - 
      2*(1 - d)*(sw^6*(((3 - 4*sw^2)^3*((-2 + d)*(2*Pi)^(2*d)*s^2*(s + t) - 
             2^(1 + 2*d)*mz^4*Pi^(2*d)*((-112 + 81*d - 18*d^2 + d^3)*s + 2*
                (-53 + 44*d - 12*d^2 + d^3)*t) + 4^(1 + d)*mz^2*Pi^(2*d)*
              ((10 - 7*d + d^2)*s^2 + (10 - 11*d + 2*d^2)*s*t - 4*t^2)))/8 + 
          2^(3 + 2*d)*Pi^(2*d)*sw^6*((-4 + d)*s^2*(s + t) - 
            2*mz^4*((-122 + 87*d - 18*d^2 + d^3)*s + 2*(-55 + 46*d - 12*d^2 + 
                d^3)*t) + 4*mz^2*((8 - 5*d + d^2)*s^2 + (20 - 11*d + 2*d^2)*s*
               t + 4*t^2))) + (1/2 - sw^2)^3*
         (8*sw^6*((-2 + d)*(2*Pi)^(2*d)*s^2*(s + t) - 2^(1 + 2*d)*mz^4*
             Pi^(2*d)*((-112 + 81*d - 18*d^2 + d^3)*s + 2*(-53 + 44*d - 
                12*d^2 + d^3)*t) + 4^(1 + d)*mz^2*Pi^(2*d)*
             ((10 - 7*d + d^2)*s^2 + (10 - 11*d + 2*d^2)*s*t - 4*t^2)) + 
          2^(-3 + 2*d)*Pi^(2*d)*(3 - 4*sw^2)^3*((-4 + d)*s^2*(s + t) - 
            2*mz^4*((-122 + 87*d - 18*d^2 + d^3)*s + 2*(-55 + 46*d - 12*d^2 + 
                d^3)*t) + 4*mz^2*((8 - 5*d + d^2)*s^2 + (20 - 11*d + 2*d^2)*s*
               t + 4*t^2))))*(-1 + GaugeXi[Q])^2 + 2^(1 + d)*(1 - d)*Pi^d*
       (mz^2 - s/2)*(sw^6*((-9*d*s*(-(2^(1 + d)*mz^2*Pi^d) + (2*Pi)^d*s)*
            (3 - 12*sw^2 + 16*sw^4))/8 + 2^(1 + d)*Pi^d*(2*mz^2 - s)*
           (-((-3 + 4*sw^2)^3*t)/8 - 8*sw^6*(3*s + t))) + 
        (1/2 - sw^2)^3*(8*sw^6*(d*s*(2^(1 + d)*mz^2*Pi^d - (2*Pi)^d*s) + 
            2^(1 + d)*Pi^d*(2*mz^2 - s)*t) - ((-3 + 4*sw^2)^3*
            (2^(1 + d)*mz^2*Pi^d*((-6 + d)*s - 2*t) + 
             s*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(3*s + t))))/8))*
       (-1 + GaugeXi[Q])^2 + (2*Pi)^d*(4*(-1 + d)*mz^4 + 
        s*((-2 + d)*s - 2*t) + mz^2*(-4*(-2 + d)*s + 8*t))*
       (sw^6*(((-3 + 4*sw^2)^3*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(s - t)))/
           8 + 8*sw^6*(d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(2*s + t))) + 
        (1/2 - sw^2)^3*(8*sw^6*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(-s + t)) + 
          ((-3 + 4*sw^2)^3*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(2*s + t)))/8) - 
        2^(1 + d)*Pi^d*((1/2 - sw^2)^3*(-((-3 + 4*sw^2)^3*((-4 + d)*s - 2*t))/
             8 + 8*sw^6*((-2 + d)*s + 2*t)) + 
          sw^6*(8*sw^6*((-4 + d)*s - 2*t) - ((-3 + 4*sw^2)^3*((-2 + d)*s + 2*
                t))/8))*GaugeXi[Q] - 
        ((-27*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(54 + 135*(-4 + d)*sw^2 - 558*
                (-4 + d)*sw^4 + 40*(-115 + 27*d)*sw^6 - 96*(-49 + 9*d)*sw^8 - 
               1920*sw^10 + 1024*sw^12) + (27 - 270*sw^2 + 1116*sw^4 - 2720*
                sw^6 + 4224*sw^8 - 3840*sw^10 + 2048*sw^12)*t))*GaugeXi[Q]^2)/
         64) - 2^(1 + d)*(1 - d)*Pi^d*(mz^2 - s/2)*
       ((1/2 - sw^2)^3*(((-3 + 4*sw^2)^3*(-(s*(-3*d*(2*Pi)^d*s + 
                2^(1 + d)*Pi^d*(-3*s + 2*d*s - t))) + 2^(1 + d)*mz^2*Pi^d*
              ((-6 + d)*s - 2*t)))/8 - 8*sw^6*
           (d*s*(2^(1 + d)*mz^2*Pi^d - 2^(2 + d)*Pi^d*s + 3*(2*Pi)^d*s) + 
            2^(1 + d)*Pi^d*(2*mz^2 - s)*t)) - 
        sw^6*((-9*d*s*(-(2^(1 + d)*mz^2*Pi^d) + 2^(2 + d)*Pi^d*s - 
             3*(2*Pi)^d*s)*(3 - 12*sw^2 + 16*sw^4))/8 + 2^(1 + d)*Pi^d*
           (2*mz^2 - s)*(-((-3 + 4*sw^2)^3*t)/8 - 8*sw^6*(3*s + t))) + 
        2*(sw^6*((-9*d*s*(-(2^(1 + d)*mz^2*Pi^d) + (2*Pi)^d*s)*
              (3 - 12*sw^2 + 16*sw^4))/8 + 2^(1 + d)*Pi^d*(2*mz^2 - s)*
             (-((-3 + 4*sw^2)^3*t)/8 - 8*sw^6*(3*s + t))) + 
          (1/2 - sw^2)^3*(8*sw^6*(d*s*(2^(1 + d)*mz^2*Pi^d - (2*Pi)^d*s) + 
              2^(1 + d)*Pi^d*(2*mz^2 - s)*t) - ((-3 + 4*sw^2)^3*
              (2^(1 + d)*mz^2*Pi^d*((-6 + d)*s - 2*t) + s*(-(d*(2*Pi)^d*s) + 
                 2^(1 + d)*Pi^d*(3*s + t))))/8))*GaugeXi[Q] + 
        ((1/2 - sw^2)^3*(((-3 + 4*sw^2)^3*(-(s*(-3*d*(2*Pi)^d*s + 2^(1 + d)*
                   Pi^d*(-3*s + 2*d*s - t))) + 2^(1 + d)*mz^2*Pi^d*
                ((-6 + d)*s - 2*t)))/8 - 8*sw^6*(d*s*(2^(1 + d)*mz^2*Pi^d - 
                2^(2 + d)*Pi^d*s + 3*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(2*mz^2 - 
                s)*t)) - sw^6*((-9*d*s*(-(2^(1 + d)*mz^2*Pi^d) + 2^(2 + d)*
                Pi^d*s - 3*(2*Pi)^d*s)*(3 - 12*sw^2 + 16*sw^4))/8 + 
            2^(1 + d)*Pi^d*(2*mz^2 - s)*(-((-3 + 4*sw^2)^3*t)/8 - 
              8*sw^6*(3*s + t))))*GaugeXi[Q]^2)))/((-1 + d)*mz^4*Pi^(3*d)*
     (mz^2 - s)*sw^6*(1 - sw^2)^3*(-1 + GaugeXi[Q])^2), 
   ((-I/27)*2^(-2 - d)*EL^6*((1/2 - sw^2)^3*
       (-((-3 + 4*sw^2)^3*(2*(-128 + 88*d - 18*d^2 + d^3)*mz^2*s - 
            (-144 + 96*d - 18*d^2 + d^3)*s^2 - 8*d*s*t - 16*t^2))/8 + 
        8*sw^6*(2*(-112 + 82*d - 18*d^2 + d^3)*mz^2*s - 
          (-144 + 90*d - 18*d^2 + d^3)*s^2 - 8*(-6 + d)*s*t + 16*t^2)) + 
      sw^6*(8*sw^6*(2*(-128 + 88*d - 18*d^2 + d^3)*mz^2*s - 
          (-144 + 96*d - 18*d^2 + d^3)*s^2 - 8*d*s*t - 16*t^2) - 
        ((-3 + 4*sw^2)^3*(2*(-112 + 82*d - 18*d^2 + d^3)*mz^2*s - 
           (-144 + 90*d - 18*d^2 + d^3)*s^2 - 8*(-6 + d)*s*t + 16*t^2))/8)))/
    (Pi^d*(mz^2 - s)*sw^6*(1 - sw^2)^3), 0, 
   ((-I/27)*4^(-2 - d)*EL^6*
     (s*((1/2 - sw^2)^3*(8*sw^6*(d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
             ((4 - 3*d)*s^2 + (4 - 5*d + d^2)*s*t - 2*t^2)) + 
          ((-3 + 4*sw^2)^3*(-(d^2*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*
              (2*(-1 + d)*s^2 - (8 - 5*d + d^2)*s*t - 2*t^2)))/8) + 
        sw^6*(((-3 + 4*sw^2)^3*(-(d^2*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*
              ((-4 + 3*d)*s^2 - (4 - 5*d + d^2)*s*t + 2*t^2)))/8 + 
          8*sw^6*(d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*(-2*(-1 + d)*s^2 + 
              (8 - 5*d + d^2)*s*t + 2*t^2)))) - 
      2*(sw^6*(((3 - 4*sw^2)^3*(d^2*(2*Pi)^d*s^3 + 2^(1 + d)*mz^2*Pi^d*
              ((8 - 6*d + d^2)*s^2 + 2*(4 - 5*d + d^2)*s*t - 4*t^2) + 
             2^(1 + d)*Pi^d*s*((4 - 3*d)*s^2 + (4 - 5*d + d^2)*s*t - 2*t^2)))/
           8 + 8*sw^6*(d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*(-2*(-1 + d)*s^2 + 
              (8 - 5*d + d^2)*s*t + 2*t^2) + 2^(1 + d)*mz^2*Pi^d*
             ((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 4*t^2))) + 
        (1/2 - sw^2)^3*(8*sw^6*(d^2*(2*Pi)^d*s^3 + 2^(1 + d)*mz^2*Pi^d*
             ((8 - 6*d + d^2)*s^2 + 2*(4 - 5*d + d^2)*s*t - 4*t^2) + 
            2^(1 + d)*Pi^d*s*((4 - 3*d)*s^2 + (4 - 5*d + d^2)*s*t - 2*t^2)) + 
          ((3 - 4*sw^2)^3*(d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
              (-2*(-1 + d)*s^2 + (8 - 5*d + d^2)*s*t + 2*t^2) + 
             2^(1 + d)*mz^2*Pi^d*((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 4*
                t^2)))/8))*GaugeXi[Q] + 
      (sw^6*(((3 - 4*sw^2)^3*(d^2*(2*Pi)^d*s^3 + 2^(3 + d)*mz^2*Pi^d*
              ((8 - 6*d + d^2)*s^2 + 2*(4 - 5*d + d^2)*s*t - 4*t^2) + 
             2^(1 + d)*Pi^d*s*((4 - 3*d)*s^2 + (4 - 5*d + d^2)*s*t - 2*t^2)))/
           8 + 8*sw^6*(d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*(-2*(-1 + d)*s^2 + 
              (8 - 5*d + d^2)*s*t + 2*t^2) + 2^(3 + d)*mz^2*Pi^d*
             ((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 4*t^2))) + 
        (1/2 - sw^2)^3*(8*sw^6*(d^2*(2*Pi)^d*s^3 + 2^(3 + d)*mz^2*Pi^d*
             ((8 - 6*d + d^2)*s^2 + 2*(4 - 5*d + d^2)*s*t - 4*t^2) + 
            2^(1 + d)*Pi^d*s*((4 - 3*d)*s^2 + (4 - 5*d + d^2)*s*t - 2*t^2)) + 
          ((3 - 4*sw^2)^3*(d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
              (-2*(-1 + d)*s^2 + (8 - 5*d + d^2)*s*t + 2*t^2) + 
             2^(3 + d)*mz^2*Pi^d*((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 4*
                t^2)))/8))*GaugeXi[Q]^2 - 
      4*mz^2*(sw^6*(((-3 + 4*sw^2)^3*(-(d^2*(2*Pi)^d*s^2) + 
             2^(1 + d)*Pi^d*((-4 + 3*d)*s^2 - (4 - 5*d + d^2)*s*t + 2*t^2)))/
           8 + 8*sw^6*(d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*(-2*(-1 + d)*s^2 + 
              (8 - 5*d + d^2)*s*t + 2*t^2))) + (1/2 - sw^2)^3*
         (8*sw^6*(d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*((4 - 3*d)*s^2 + 
              (4 - 5*d + d^2)*s*t - 2*t^2)) + 
          ((3 - 4*sw^2)^3*(d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*(-2*(-1 + d)*
                s^2 + (8 - 5*d + d^2)*s*t + 2*t^2)))/8))*GaugeXi[Q]^3))/
    ((-1 + d)*mz^4*Pi^(2*d)*(mz^2 - s)*sw^6*(1 - sw^2)^3*
     (-1 + GaugeXi[Q])^2), ((-I/27)*4^(-2 - d)*EL^6*
     (sw^6*(((-3 + 4*sw^2)^3*(-5*d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
            ((-4 + 3*d + 2*d^2)*s^2 - (4 - 5*d + d^2)*s*t + 2*t^2) + 
           mz^2*(d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*((4 - 3*d)*s^2 + 
               (4 - 5*d + d^2)*s*t - 2*t^2))))/8 + 
        8*sw^6*(5*d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
           (-2*(-1 + d + d^2)*s^2 + (8 - 5*d + d^2)*s*t + 2*t^2) + 
          mz^2*(-(d^2*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*(2*(-1 + d)*s^2 - 
              (8 - 5*d + d^2)*s*t - 2*t^2)))) + (1/2 - sw^2)^3*
       (8*sw^6*(5*d^2*(2*Pi)^d*s^3 - 2^(1 + d)*Pi^d*s*
           ((-4 + 3*d + 2*d^2)*s^2 - (4 - 5*d + d^2)*s*t + 2*t^2) - 
          mz^2*(d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*((4 - 3*d)*s^2 + 
              (4 - 5*d + d^2)*s*t - 2*t^2))) + 
        ((-3 + 4*sw^2)^3*(-5*d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
            (2*(-1 + d + d^2)*s^2 - (8 - 5*d + d^2)*s*t - 2*t^2) + 
           mz^2*(d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*(-2*(-1 + d)*s^2 + 
               (8 - 5*d + d^2)*s*t + 2*t^2))))/8) - 
      (sw^6*(((3 - 4*sw^2)^3*(2^(1 + d)*Pi^d*s*((8 - 6*d + d^2)*s^2 + 2*
                (4 - 5*d + d^2)*s*t - 4*t^2) + mz^2*(5*d^2*(2*Pi)^d*s^2 + 
               2^(1 + d)*Pi^d*((-12 + 9*d - 4*d^2)*s^2 - 3*(4 - 5*d + d^2)*s*
                  t + 6*t^2))))/8 + 8*sw^6*(2^(1 + d)*Pi^d*s*
             ((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 4*t^2) - 
            mz^2*(-5*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*((6 - 6*d + 4*d^2)*
                 s^2 + 3*(8 - 5*d + d^2)*s*t + 6*t^2)))) + 
        (1/2 - sw^2)^3*(8*sw^6*(2^(1 + d)*Pi^d*s*((8 - 6*d + d^2)*s^2 + 
              2*(4 - 5*d + d^2)*s*t - 4*t^2) + mz^2*(5*d^2*(2*Pi)^d*s^2 + 
              2^(1 + d)*Pi^d*((-12 + 9*d - 4*d^2)*s^2 - 3*(4 - 5*d + d^2)*s*
                 t + 6*t^2))) + ((3 - 4*sw^2)^3*(2^(1 + d)*Pi^d*s*
              ((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 4*t^2) - 
             mz^2*(-5*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*((6 - 6*d + 4*d^2)*
                  s^2 + 3*(8 - 5*d + d^2)*s*t + 6*t^2))))/8))*GaugeXi[Q] + 
      (sw^6*(((-3 + 4*sw^2)^3*(-5*d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
              ((-4 + 3*d + 2*d^2)*s^2 - (4 - 5*d + d^2)*s*t + 2*t^2) + 
             3*mz^2*(d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*((4 - 3*d)*s^2 + 
                 (4 - 5*d + d^2)*s*t - 2*t^2))))/8 + 
          8*sw^6*(5*d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
             (-2*(-1 + d + d^2)*s^2 + (8 - 5*d + d^2)*s*t + 2*t^2) + 
            3*mz^2*(-(d^2*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*(2*(-1 + d)*s^2 - 
                (8 - 5*d + d^2)*s*t - 2*t^2)))) + (1/2 - sw^2)^3*
         (8*sw^6*(5*d^2*(2*Pi)^d*s^3 - 2^(1 + d)*Pi^d*s*
             ((-4 + 3*d + 2*d^2)*s^2 - (4 - 5*d + d^2)*s*t + 2*t^2) - 
            3*mz^2*(d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*((4 - 3*d)*s^2 + 
                (4 - 5*d + d^2)*s*t - 2*t^2))) + 
          ((-3 + 4*sw^2)^3*(-5*d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
              (2*(-1 + d + d^2)*s^2 - (8 - 5*d + d^2)*s*t - 2*t^2) + 
             3*mz^2*(d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*(-2*(-1 + d)*s^2 + 
                 (8 - 5*d + d^2)*s*t + 2*t^2))))/8))*GaugeXi[Q]^2 - 
      mz^2*(sw^6*(((-3 + 4*sw^2)^3*(-3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
              ((4 - 3*d + 2*d^2)*s^2 + (4 - 5*d + d^2)*s*t - 2*t^2)))/8 + 
          8*sw^6*(3*d^2*(2*Pi)^d*s^2 - 2^(1 + d)*Pi^d*(2*(1 - d + d^2)*s^2 + 
              (8 - 5*d + d^2)*s*t + 2*t^2))) + (1/2 - sw^2)^3*
         (8*sw^6*(3*d^2*(2*Pi)^d*s^2 - 2^(1 + d)*Pi^d*
             ((4 - 3*d + 2*d^2)*s^2 + (4 - 5*d + d^2)*s*t - 2*t^2)) + 
          ((-3 + 4*sw^2)^3*(-3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
              (2*(1 - d + d^2)*s^2 + (8 - 5*d + d^2)*s*t + 2*t^2)))/8))*
       GaugeXi[Q]^3))/((-1 + d)*mz^4*Pi^(2*d)*(mz^2 - s)*s*sw^6*(1 - sw^2)^3*
     (-1 + GaugeXi[Q])^2), ((-I/27)*2^(-4 - 3*d)*EL^6*
     (-(2^(1 + 2*d)*Pi^(2*d)*(sw^6 + (-1 + 2*sw^2)^3/8)*
        (8*sw^6 + (-3 + 4*sw^2)^3/8)*(s - s*GaugeXi[Q])^2*
        (d*(mz^2 - s)^2 + 2*((-2 + d)*mz^4 - d*mz^2*s)*GaugeXi[Q] + 
         d*mz^4*GaugeXi[Q]^2)) + (2*Pi)^d*((mz^2 - s)^2*((-2 + d)*s - 2*t) + 
        2*mz^2*(d*(mz^2 - s)*s + 2*(s^2 + mz^2*t + s*t))*GaugeXi[Q] + 
        mz^4*((-2 + d)*s - 2*t)*GaugeXi[Q]^2)*
       (sw^6*(((-3 + 4*sw^2)^3*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(s - t)))/
           8 + 8*sw^6*(d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(2*s + t))) + 
        (1/2 - sw^2)^3*(8*sw^6*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(-s + t)) + 
          ((-3 + 4*sw^2)^3*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(2*s + t)))/8) - 
        2^(1 + d)*Pi^d*((1/2 - sw^2)^3*(-((-3 + 4*sw^2)^3*((-4 + d)*s - 2*t))/
             8 + 8*sw^6*((-2 + d)*s + 2*t)) + 
          sw^6*(8*sw^6*((-4 + d)*s - 2*t) - ((-3 + 4*sw^2)^3*((-2 + d)*s + 2*
                t))/8))*GaugeXi[Q] - 
        ((-27*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(54 + 135*(-4 + d)*sw^2 - 558*
                (-4 + d)*sw^4 + 40*(-115 + 27*d)*sw^6 - 96*(-49 + 9*d)*sw^8 - 
               1920*sw^10 + 1024*sw^12) + (27 - 270*sw^2 + 1116*sw^4 - 2720*
                sw^6 + 4224*sw^8 - 3840*sw^10 + 2048*sw^12)*t))*GaugeXi[Q]^2)/
         64) + (1 - d)*(2*Pi)^d*s*(mz^2 - s + mz^2*GaugeXi[Q])^2*
       (sw^6*(-((-3 + 4*sw^2)^3*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*t))/8 + 
          8*sw^6*(d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(3*s + t))) + 
        (1/2 - sw^2)^3*(8*sw^6*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*t) + 
          ((-3 + 4*sw^2)^3*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(3*s + t)))/8) - 
        2^(1 + d)*Pi^d*(sw^6*((9*d*s*(3 - 12*sw^2 + 16*sw^4))/8 - 
            ((-3 + 4*sw^2)^3*t)/4 - 16*sw^6*(3*s + t)) + 
          (1/2 - sw^2)^3*(-((-3 + 4*sw^2)^3*((-6 + d)*s - 2*t))/8 + 
            8*sw^6*(d*s + 2*t)))*GaugeXi[Q] + 
        (sw^6*(-((-3 + 4*sw^2)^3*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*t))/8 + 
            8*sw^6*(d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(3*s + t))) + 
          (1/2 - sw^2)^3*(8*sw^6*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*t) + 
            ((-3 + 4*sw^2)^3*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(3*s + t)))/
             8))*GaugeXi[Q]^2) + (1 - d)*(2*Pi)^d*s*
       (mz^2 - s + mz^2*GaugeXi[Q])*
       (((mz^2 - s)*sw^6*(9*d*s*(3*(2*Pi)^d + 2^(2 + d)*Pi^d*sw^2*
              (-3 + 4*sw^2)) - 2^(1 + d)*Pi^d*(192*s*sw^6 + 
             (-27 + 108*sw^2 - 144*sw^4 + 128*sw^6)*t)))/8 + 
        (1/2 - sw^2)^3*(8*sw^6*(d*s*(mz^2*(2*Pi)^d - 2^(2 + d)*Pi^d*s + 
              3*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(mz^2 - s)*t) + 
          ((-3 + 4*sw^2)^3*(s*(-3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
                (-3*s + 2*d*s - t)) + mz^2*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*
                (3*s + t))))/8) + 
        (sw^6*((9*d*s*(mz^2*(2^(1 + d)*Pi^d - 3*(2*Pi)^d) + 2^(1 + d)*Pi^d*s)*
              (3 - 12*sw^2 + 16*sw^4))/8 - 2^(1 + d)*Pi^d*(mz^2 - 2*s)*
             (-((-3 + 4*sw^2)^3*t)/8 - 8*sw^6*(3*s + t))) + 
          (1/2 - sw^2)^3*(8*sw^6*(d*s*(mz^2*(2^(1 + d)*Pi^d - 3*(2*Pi)^d) + 
                2^(1 + d)*Pi^d*s) - 2^(1 + d)*Pi^d*(mz^2 - 2*s)*t) - 
            ((-3 + 4*sw^2)^3*(2^(1 + d)*Pi^d*s*((-6 + d)*s - 2*t) + mz^2*
                (-3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*((3 + d)*s + t))))/8))*
         GaugeXi[Q] - (((mz^2 + s)*sw^6*(9*d*s*(3*(2*Pi)^d + 2^(2 + d)*Pi^d*
                sw^2*(-3 + 4*sw^2)) - 2^(1 + d)*Pi^d*(192*s*sw^6 + 
               (-27 + 108*sw^2 - 144*sw^4 + 128*sw^6)*t)))/8 + 
          (1/2 - sw^2)^3*(8*sw^6*(d*s*(mz^2*(2*Pi)^d + 2^(2 + d)*Pi^d*s - 
                3*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(mz^2 + s)*t) + 
            ((-3 + 4*sw^2)^3*(-(s*(-3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
                   (-3*s + 2*d*s - t))) + mz^2*(-(d*(2*Pi)^d*s) + 
                 2^(1 + d)*Pi^d*(3*s + t))))/8))*GaugeXi[Q]^2 + 
        (mz^2*(-27*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (3*s*(-27 + 270*sw^2 - 1116*sw^4 + 2440*sw^6 - 2976*sw^8 + 1920*
                sw^10 - 1024*sw^12 + 3*d*(3 - 15*sw^2 + 62*sw^4 - 120*sw^6 + 
                 96*sw^8)) + (-27 + 270*sw^2 - 1116*sw^4 + 2720*sw^6 - 4224*
                sw^8 + 3840*sw^10 - 2048*sw^12)*t))*GaugeXi[Q]^3)/64) - 
      2*(1 - d)*s*((2*Pi)^(2*d)*
         (sw^6*(-((-3 + 4*sw^2)^3*((-2 + d)*mz^4*(s + t) + (-2 + d)*s^2*
                 (s + t) + 2*mz^2*((10 - 7*d + d^2)*s^2 + (10 - 11*d + 2*d^2)*
                   s*t - 4*t^2)))/8 + 8*sw^6*((-4 + d)*mz^4*(s + t) + 
              (-4 + d)*s^2*(s + t) + 2*mz^2*((8 - 5*d + d^2)*s^2 + 
                (20 - 11*d + 2*d^2)*s*t + 4*t^2))) + (1/2 - sw^2)^3*
           (8*sw^6*((-2 + d)*mz^4*(s + t) + (-2 + d)*s^2*(s + t) + 
              2*mz^2*((10 - 7*d + d^2)*s^2 + (10 - 11*d + 2*d^2)*s*t - 
                4*t^2)) - ((-3 + 4*sw^2)^3*((-4 + d)*mz^4*(s + t) + (-4 + d)*
                s^2*(s + t) + 2*mz^2*((8 - 5*d + d^2)*s^2 + (20 - 11*d + 
                   2*d^2)*s*t + 4*t^2)))/8)) - 2^(1 + 2*d)*Pi^(2*d)*
         (sw^6*(-((-3 + 4*sw^2)^3*((-2 + d)*s^2*(s + t) + mz^4*((-4 + d)*s + 
                  2*(-3 + d)*t) + mz^2*((18 - 13*d + 2*d^2)*s^2 + 
                  (18 - 21*d + 4*d^2)*s*t - 8*t^2)))/8 + 
            8*sw^6*((-4 + d)*s^2*(s + t) + mz^4*((-2 + d)*s + 2*(-3 + d)*t) + 
              mz^2*((12 - 9*d + 2*d^2)*s^2 + (36 - 21*d + 4*d^2)*s*t + 
                8*t^2))) + (1/2 - sw^2)^3*(8*sw^6*((-2 + d)*s^2*(s + t) + 
              mz^4*((-4 + d)*s + 2*(-3 + d)*t) + mz^2*((18 - 13*d + 2*d^2)*
                 s^2 + (18 - 21*d + 4*d^2)*s*t - 8*t^2)) - 
            ((-3 + 4*sw^2)^3*((-4 + d)*s^2*(s + t) + mz^4*((-2 + d)*s + 
                 2*(-3 + d)*t) + mz^2*((12 - 9*d + 2*d^2)*s^2 + 
                 (36 - 21*d + 4*d^2)*s*t + 8*t^2)))/8))*GaugeXi[Q] + 
        (9*2^(-5 + 2*d)*d^2*mz^2*Pi^(2*d)*s*(1 - 6*sw^2 + 12*sw^4)*
           (3 - 12*sw^2 + 16*sw^4)*(s + 2*t) + d*(2*Pi)^(2*d)*
           ((1/2 - sw^2)^3*(-((-3 + 4*sw^2)^3*(s^2*(s + t) + 2*mz^4*
                   (s + 3*t) - 6*mz^2*s*(s + 3*t)))/8 + 8*sw^6*(s^2*(s + t) + 
                2*mz^4*(s + 3*t) - 2*mz^2*s*(5*s + 9*t))) + 
            sw^6*(8*sw^6*(s^2*(s + t) + 2*mz^4*(s + 3*t) - 6*mz^2*s*
                 (s + 3*t)) - ((-3 + 4*sw^2)^3*(s^2*(s + t) + 2*mz^4*
                  (s + 3*t) - 2*mz^2*s*(5*s + 9*t)))/8)) - 
          2^(1 + 2*d)*Pi^(2*d)*(2*(1/2 - sw^2)^3*
             (-((-3 + 4*sw^2)^3*(s^3 + 4*mz^4*t - 6*mz^2*s*t + s^2*t - 
                  2*mz^2*t^2))/8 + 4*sw^6*(s^2*(s + t) + 2*mz^4*(3*s + 5*t) + 
                mz^2*(-6*s^2 - 6*s*t + 4*t^2))) + 
            sw^6*(16*sw^6*(s^3 + 4*mz^4*t - 6*mz^2*s*t + s^2*t - 
                2*mz^2*t^2) - ((-3 + 4*sw^2)^3*(s^2*(s + t) + 2*mz^4*
                  (3*s + 5*t) + mz^2*(-6*s^2 - 6*s*t + 4*t^2)))/8)))*
         GaugeXi[Q]^2 - 2^(1 + 2*d)*mz^2*Pi^(2*d)*
         (sw^6*(-((-3 + 4*sw^2)^3*((-2 + d)*s*(s + t) + mz^2*((-4 + d)*s + 
                  2*(-3 + d)*t)))/8 + 8*sw^6*((-4 + d)*s*(s + t) + 
              mz^2*((-2 + d)*s + 2*(-3 + d)*t))) + (1/2 - sw^2)^3*
           (8*sw^6*((-2 + d)*s*(s + t) + mz^2*((-4 + d)*s + 2*(-3 + d)*t)) - 
            ((-3 + 4*sw^2)^3*((-4 + d)*s*(s + t) + mz^2*((-2 + d)*s + 
                 2*(-3 + d)*t)))/8))*GaugeXi[Q]^3 - mz^4*(2*Pi)^(2*d)*
         ((1/2 - sw^2)^3*(-8*(-2 + d)*sw^6 + ((-4 + d)*(-3 + 4*sw^2)^3)/8) + 
          sw^6*(-8*(-4 + d)*sw^6 + ((-2 + d)*(-3 + 4*sw^2)^3)/8))*(s + t)*
         GaugeXi[Q]^4)))/(mz^4*Pi^(3*d)*(mz^2 - s)*(s - d*s)*sw^6*
     (1 - sw^2)^3*(-1 + GaugeXi[Q])^2), 
   ((I/27)*4^(-2 - d)*EL^6*((sw^6*(-3 + 4*sw^2)^3*(5*d^2*(2*Pi)^d*s^3 - 
         2^(1 + d)*Pi^d*s*((-4 + 3*d + 2*d^2)*s^2 - (4 - 5*d + d^2)*s*t + 
           2*t^2) + mz^2*(-3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
            ((4 - 3*d + 2*d^2)*s^2 + (4 - 5*d + d^2)*s*t - 2*t^2))))/8 - 
      8*sw^12*(5*d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*(-2*(-1 + d + d^2)*s^2 + 
          (8 - 5*d + d^2)*s*t + 2*t^2) + mz^2*(-3*d^2*(2*Pi)^d*s^2 + 
          2^(1 + d)*Pi^d*(2*(1 - d + d^2)*s^2 + (8 - 5*d + d^2)*s*t + 
            2*t^2))) - (1/2 - sw^2)^3*
       (8*sw^6*(5*d^2*(2*Pi)^d*s^3 - 2^(1 + d)*Pi^d*s*
           ((-4 + 3*d + 2*d^2)*s^2 - (4 - 5*d + d^2)*s*t + 2*t^2) + 
          mz^2*(-3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*((4 - 3*d + 2*d^2)*s^2 + 
              (4 - 5*d + d^2)*s*t - 2*t^2))) + 
        ((3 - 4*sw^2)^3*(5*d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
            (-2*(-1 + d + d^2)*s^2 + (8 - 5*d + d^2)*s*t + 2*t^2) + 
           mz^2*(-3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*(2*(1 - d + d^2)*s^2 + 
               (8 - 5*d + d^2)*s*t + 2*t^2))))/8) + 
      (sw^6*(-((-3 + 4*sw^2)^3*(2^(1 + d)*Pi^d*s*((8 - 6*d + d^2)*s^2 + 
                2*(4 - 5*d + d^2)*s*t - 4*t^2) + 3*mz^2*(d^2*(2*Pi)^d*s^2 + 
                2^(1 + d)*Pi^d*((4 - 3*d)*s^2 + (4 - 5*d + d^2)*s*t - 
                  2*t^2))))/8 + 8*sw^6*(2^(1 + d)*Pi^d*s*((-2 + d)^2*s^2 + 
              2*(8 - 5*d + d^2)*s*t + 4*t^2) + 3*mz^2*(d^2*(2*Pi)^d*s^2 + 
              2^(1 + d)*Pi^d*(-2*(-1 + d)*s^2 + (8 - 5*d + d^2)*s*t + 
                2*t^2)))) + (1/2 - sw^2)^3*
         (8*sw^6*(2^(1 + d)*Pi^d*s*((8 - 6*d + d^2)*s^2 + 2*(4 - 5*d + d^2)*s*
               t - 4*t^2) + 3*mz^2*(d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*(
                (4 - 3*d)*s^2 + (4 - 5*d + d^2)*s*t - 2*t^2))) - 
          ((-3 + 4*sw^2)^3*(2^(1 + d)*Pi^d*s*((-2 + d)^2*s^2 + 2*
                (8 - 5*d + d^2)*s*t + 4*t^2) + 3*mz^2*(d^2*(2*Pi)^d*s^2 + 
               2^(1 + d)*Pi^d*(-2*(-1 + d)*s^2 + (8 - 5*d + d^2)*s*t + 
                 2*t^2))))/8))*GaugeXi[Q] - 
      (sw^6*(-((-3 + 4*sw^2)^3*(5*d^2*(2*Pi)^d*s^3 - 2^(1 + d)*Pi^d*s*(
                (-4 + 3*d + 2*d^2)*s^2 - (4 - 5*d + d^2)*s*t + 2*t^2) + 
              mz^2*(-5*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*((12 - 9*d + 4*d^2)*
                   s^2 + 3*(4 - 5*d + d^2)*s*t - 6*t^2))))/8 + 
          8*sw^6*(5*d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
             (-2*(-1 + d + d^2)*s^2 + (8 - 5*d + d^2)*s*t + 2*t^2) + 
            mz^2*(-5*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*((6 - 6*d + 4*d^2)*
                 s^2 + 3*(8 - 5*d + d^2)*s*t + 6*t^2)))) + 
        (1/2 - sw^2)^3*(8*sw^6*(5*d^2*(2*Pi)^d*s^3 - 2^(1 + d)*Pi^d*s*
             ((-4 + 3*d + 2*d^2)*s^2 - (4 - 5*d + d^2)*s*t + 2*t^2) + 
            mz^2*(-5*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*((12 - 9*d + 4*d^2)*
                 s^2 + 3*(4 - 5*d + d^2)*s*t - 6*t^2))) + 
          ((3 - 4*sw^2)^3*(5*d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
              (-2*(-1 + d + d^2)*s^2 + (8 - 5*d + d^2)*s*t + 2*t^2) + 
             mz^2*(-5*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*((6 - 6*d + 4*d^2)*
                  s^2 + 3*(8 - 5*d + d^2)*s*t + 6*t^2))))/8))*GaugeXi[Q]^2 + 
      mz^2*((1/2 - sw^2)^3*(8*sw^6*(d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
             ((4 - 3*d)*s^2 + (4 - 5*d + d^2)*s*t - 2*t^2)) + 
          ((-3 + 4*sw^2)^3*(-(d^2*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*
              (2*(-1 + d)*s^2 - (8 - 5*d + d^2)*s*t - 2*t^2)))/8) + 
        sw^6*(((-3 + 4*sw^2)^3*(-(d^2*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*
              ((-4 + 3*d)*s^2 - (4 - 5*d + d^2)*s*t + 2*t^2)))/8 + 
          8*sw^6*(d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*(-2*(-1 + d)*s^2 + 
              (8 - 5*d + d^2)*s*t + 2*t^2))))*GaugeXi[Q]^3))/
    ((-1 + d)*mz^4*Pi^(2*d)*(mz^2 - s)*s*sw^6*(1 - sw^2)^3*
     (-1 + GaugeXi[Q])^2), ((I/27)*2^(-4 - 3*d)*EL^6*
     (-(2^(1 + 2*d)*Pi^(2*d)*(sw^6 + (-1 + 2*sw^2)^3/8)*
        (8*sw^6 + (-3 + 4*sw^2)^3/8)*(s - s*GaugeXi[Q])^2*
        (d*(mz^2 - s)^2 + 2*((-2 + d)*mz^4 - d*mz^2*s)*GaugeXi[Q] + 
         d*mz^4*GaugeXi[Q]^2)) + (2*Pi)^d*((mz^2 - s)^2*((-2 + d)*s - 2*t) + 
        2*mz^2*(d*(mz^2 - s)*s + 2*(s^2 + mz^2*t + s*t))*GaugeXi[Q] + 
        mz^4*((-2 + d)*s - 2*t)*GaugeXi[Q]^2)*
       (sw^6*(((-3 + 4*sw^2)^3*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(s - t)))/
           8 + 8*sw^6*(d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(2*s + t))) + 
        (1/2 - sw^2)^3*(8*sw^6*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(-s + t)) + 
          ((-3 + 4*sw^2)^3*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(2*s + t)))/8) - 
        2^(1 + d)*Pi^d*((1/2 - sw^2)^3*(-((-3 + 4*sw^2)^3*((-4 + d)*s - 2*t))/
             8 + 8*sw^6*((-2 + d)*s + 2*t)) + 
          sw^6*(8*sw^6*((-4 + d)*s - 2*t) - ((-3 + 4*sw^2)^3*((-2 + d)*s + 2*
                t))/8))*GaugeXi[Q] - 
        ((-27*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(54 + 135*(-4 + d)*sw^2 - 558*
                (-4 + d)*sw^4 + 40*(-115 + 27*d)*sw^6 - 96*(-49 + 9*d)*sw^8 - 
               1920*sw^10 + 1024*sw^12) + (27 - 270*sw^2 + 1116*sw^4 - 2720*
                sw^6 + 4224*sw^8 - 3840*sw^10 + 2048*sw^12)*t))*GaugeXi[Q]^2)/
         64) + (1 - d)*(2*Pi)^d*s*(mz^2 - s + mz^2*GaugeXi[Q])^2*
       (sw^6*(-((-3 + 4*sw^2)^3*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*t))/8 + 
          8*sw^6*(d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(3*s + t))) + 
        (1/2 - sw^2)^3*(8*sw^6*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*t) + 
          ((-3 + 4*sw^2)^3*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(3*s + t)))/8) - 
        2^(1 + d)*Pi^d*(sw^6*((9*d*s*(3 - 12*sw^2 + 16*sw^4))/8 - 
            ((-3 + 4*sw^2)^3*t)/4 - 16*sw^6*(3*s + t)) + 
          (1/2 - sw^2)^3*(-((-3 + 4*sw^2)^3*((-6 + d)*s - 2*t))/8 + 
            8*sw^6*(d*s + 2*t)))*GaugeXi[Q] + 
        (sw^6*(-((-3 + 4*sw^2)^3*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*t))/8 + 
            8*sw^6*(d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(3*s + t))) + 
          (1/2 - sw^2)^3*(8*sw^6*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*t) + 
            ((-3 + 4*sw^2)^3*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(3*s + t)))/
             8))*GaugeXi[Q]^2) + (1 - d)*(2*Pi)^d*s*
       (mz^2 - s + mz^2*GaugeXi[Q])*((1/2 - sw^2)^3*
         (-((-3 + 4*sw^2)^3*(mz^2*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*
                 ((-3 + d)*s - t)) - s*(-3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
                 (-3*s + 2*d*s - t))))/8 + 8*sw^6*
           (d*s*(mz^2*(2^(1 + d)*Pi^d - (2*Pi)^d) - 2^(2 + d)*Pi^d*s + 
              3*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(mz^2 - s)*t)) + 
        (sw^6*(-9*d*s*(mz^2*(-(2^(1 + d)*Pi^d) + (2*Pi)^d) + 
             (2^(2 + d)*Pi^d - 3*(2*Pi)^d)*s)*(3 - 12*sw^2 + 16*sw^4) + 
           2^(4 + d)*Pi^d*(mz^2 - s)*(-((-3 + 4*sw^2)^3*t)/8 - 
             8*sw^6*(3*s + t))))/8 - 
        (sw^6*(((-3 + 4*sw^2)^3*(d*s*(-(mz^2*(2*Pi)^d) + 2^(1 + d)*Pi^d*s) - 
               2^(1 + d)*Pi^d*(mz^2 - 2*s)*t))/8 - 
            8*sw^6*(2^(1 + d)*Pi^d*s*((-6 + d)*s - 2*t) + 
              mz^2*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(3*s + t)))) + 
          (1/2 - sw^2)^3*(8*sw^6*(d*s*(mz^2*(2*Pi)^d - 2^(1 + d)*Pi^d*s) + 
              2^(1 + d)*Pi^d*(mz^2 - 2*s)*t) + ((-3 + 4*sw^2)^3*
              (2^(1 + d)*Pi^d*s*((-6 + d)*s - 2*t) + mz^2*(-(d*(2*Pi)^d*s) + 
                 2^(1 + d)*Pi^d*(3*s + t))))/8))*GaugeXi[Q] - 
        (sw^6*((9*d*s*(mz^2*(-(2^(1 + d)*Pi^d) + 3*(2*Pi)^d) + 
               (2^(2 + d)*Pi^d - 3*(2*Pi)^d)*s)*(3 - 12*sw^2 + 16*sw^4))/8 + 
            2^(1 + d)*Pi^d*(mz^2 + s)*(-((-3 + 4*sw^2)^3*t)/8 - 
              8*sw^6*(3*s + t))) - (1/2 - sw^2)^3*
           (8*sw^6*(d*s*(mz^2*(2^(1 + d)*Pi^d - 3*(2*Pi)^d) - 2^(2 + d)*Pi^d*
                 s + 3*(2*Pi)^d*s) - 2^(1 + d)*Pi^d*(mz^2 + s)*t) - 
            ((-3 + 4*sw^2)^3*(-(s*(-3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
                   (-3*s + 2*d*s - t))) + mz^2*(-3*d*(2*Pi)^d*s + 
                 2^(1 + d)*Pi^d*((3 + d)*s + t))))/8))*GaugeXi[Q]^2 + 
        mz^2*(sw^6*(-((-3 + 4*sw^2)^3*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*t))/8 + 
            8*sw^6*(d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(3*s + t))) + 
          (1/2 - sw^2)^3*(8*sw^6*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*t) + 
            ((-3 + 4*sw^2)^3*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(3*s + t)))/
             8))*GaugeXi[Q]^3) - 2*(1 - d)*s*
       ((2*Pi)^(2*d)*(sw^6*(-((-3 + 4*sw^2)^3*((-2 + d)*mz^4*(s + t) + 
                (-2 + d)*s^2*(s + t) + 2*mz^2*((10 - 7*d + d^2)*s^2 + 
                  (10 - 11*d + 2*d^2)*s*t - 4*t^2)))/8 + 
            8*sw^6*((-4 + d)*mz^4*(s + t) + (-4 + d)*s^2*(s + t) + 
              2*mz^2*((8 - 5*d + d^2)*s^2 + (20 - 11*d + 2*d^2)*s*t + 
                4*t^2))) + (1/2 - sw^2)^3*(8*sw^6*((-2 + d)*mz^4*(s + t) + 
              (-2 + d)*s^2*(s + t) + 2*mz^2*((10 - 7*d + d^2)*s^2 + 
                (10 - 11*d + 2*d^2)*s*t - 4*t^2)) - 
            ((-3 + 4*sw^2)^3*((-4 + d)*mz^4*(s + t) + (-4 + d)*s^2*(s + t) + 
               2*mz^2*((8 - 5*d + d^2)*s^2 + (20 - 11*d + 2*d^2)*s*t + 
                 4*t^2)))/8)) - 2^(1 + 2*d)*Pi^(2*d)*
         (sw^6*(-((-3 + 4*sw^2)^3*((-2 + d)*s^2*(s + t) + mz^4*((-4 + d)*s + 
                  2*(-3 + d)*t) + mz^2*((18 - 13*d + 2*d^2)*s^2 + 
                  (18 - 21*d + 4*d^2)*s*t - 8*t^2)))/8 + 
            8*sw^6*((-4 + d)*s^2*(s + t) + mz^4*((-2 + d)*s + 2*(-3 + d)*t) + 
              mz^2*((12 - 9*d + 2*d^2)*s^2 + (36 - 21*d + 4*d^2)*s*t + 
                8*t^2))) + (1/2 - sw^2)^3*(8*sw^6*((-2 + d)*s^2*(s + t) + 
              mz^4*((-4 + d)*s + 2*(-3 + d)*t) + mz^2*((18 - 13*d + 2*d^2)*
                 s^2 + (18 - 21*d + 4*d^2)*s*t - 8*t^2)) - 
            ((-3 + 4*sw^2)^3*((-4 + d)*s^2*(s + t) + mz^4*((-2 + d)*s + 
                 2*(-3 + d)*t) + mz^2*((12 - 9*d + 2*d^2)*s^2 + 
                 (36 - 21*d + 4*d^2)*s*t + 8*t^2)))/8))*GaugeXi[Q] + 
        (9*2^(-5 + 2*d)*d^2*mz^2*Pi^(2*d)*s*(1 - 6*sw^2 + 12*sw^4)*
           (3 - 12*sw^2 + 16*sw^4)*(s + 2*t) + d*(2*Pi)^(2*d)*
           ((1/2 - sw^2)^3*(-((-3 + 4*sw^2)^3*(s^2*(s + t) + 2*mz^4*
                   (s + 3*t) - 6*mz^2*s*(s + 3*t)))/8 + 8*sw^6*(s^2*(s + t) + 
                2*mz^4*(s + 3*t) - 2*mz^2*s*(5*s + 9*t))) + 
            sw^6*(8*sw^6*(s^2*(s + t) + 2*mz^4*(s + 3*t) - 6*mz^2*s*
                 (s + 3*t)) - ((-3 + 4*sw^2)^3*(s^2*(s + t) + 2*mz^4*
                  (s + 3*t) - 2*mz^2*s*(5*s + 9*t)))/8)) - 
          2^(1 + 2*d)*Pi^(2*d)*(2*(1/2 - sw^2)^3*
             (-((-3 + 4*sw^2)^3*(s^3 + 4*mz^4*t - 6*mz^2*s*t + s^2*t - 
                  2*mz^2*t^2))/8 + 4*sw^6*(s^2*(s + t) + 2*mz^4*(3*s + 5*t) + 
                mz^2*(-6*s^2 - 6*s*t + 4*t^2))) + 
            sw^6*(16*sw^6*(s^3 + 4*mz^4*t - 6*mz^2*s*t + s^2*t - 
                2*mz^2*t^2) - ((-3 + 4*sw^2)^3*(s^2*(s + t) + 2*mz^4*
                  (3*s + 5*t) + mz^2*(-6*s^2 - 6*s*t + 4*t^2)))/8)))*
         GaugeXi[Q]^2 - 2^(1 + 2*d)*mz^2*Pi^(2*d)*
         (sw^6*(-((-3 + 4*sw^2)^3*((-2 + d)*s*(s + t) + mz^2*((-4 + d)*s + 
                  2*(-3 + d)*t)))/8 + 8*sw^6*((-4 + d)*s*(s + t) + 
              mz^2*((-2 + d)*s + 2*(-3 + d)*t))) + (1/2 - sw^2)^3*
           (8*sw^6*((-2 + d)*s*(s + t) + mz^2*((-4 + d)*s + 2*(-3 + d)*t)) - 
            ((-3 + 4*sw^2)^3*((-4 + d)*s*(s + t) + mz^2*((-2 + d)*s + 
                 2*(-3 + d)*t)))/8))*GaugeXi[Q]^3 - mz^4*(2*Pi)^(2*d)*
         ((1/2 - sw^2)^3*(-8*(-2 + d)*sw^6 + ((-4 + d)*(-3 + 4*sw^2)^3)/8) + 
          sw^6*(-8*(-4 + d)*sw^6 + ((-2 + d)*(-3 + 4*sw^2)^3)/8))*(s + t)*
         GaugeXi[Q]^4)))/((-1 + d)*mz^4*Pi^(3*d)*(mz^2 - s)*s*sw^6*
     (1 - sw^2)^3*(-1 + GaugeXi[Q])^2), 
   ((I/27)*EL^6*(sw^6*(((-3 + 4*sw^2)^3*(-(d^3*(2*Pi)^d*s) + 
           2^(1 + d)*Pi^d*((-4 - 3*d + 3*d^2)*s - (-52 + 44*d - 12*d^2 + d^3)*
              t)))/8 + 8*sw^6*(d^3*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
           ((8 + 2*d - 3*d^2)*s + (-56 + 46*d - 12*d^2 + d^3)*t))) + 
      (1/2 - sw^2)^3*(8*sw^6*(d^3*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
           ((4 + 3*d - 3*d^2)*s + (-52 + 44*d - 12*d^2 + d^3)*t)) + 
        ((3 - 4*sw^2)^3*(d^3*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            ((8 + 2*d - 3*d^2)*s + (-56 + 46*d - 12*d^2 + d^3)*t)))/8)))/
    (2^(2*(1 + d))*Pi^(2*d)*(mz^2 - s)*sw^6*(1 - sw^2)^3), 0, 
   ((I/27)*EL^6*(s + t)*(8*sw^12*(2^(2 + d)*(-56 + 46*d - 12*d^2 + d^3)*mz^2*
         Pi^d - d^3*(2*Pi)^d*s + 2^(1 + d)*Pi^d*((80 - 56*d + 11*d^2)*s + 
          4*(8 - 6*d + d^2)*t)) - (sw^6*(-3 + 4*sw^2)^3*
        (2^(2 + d)*(-52 + 44*d - 12*d^2 + d^3)*mz^2*Pi^d - d^3*(2*Pi)^d*s + 
         2^(1 + d)*Pi^d*((88 - 57*d + 11*d^2)*s + 4*(10 - 6*d + d^2)*t)))/8 + 
      (1/2 - sw^2)^3*(-((-3 + 4*sw^2)^3*(2^(2 + d)*(-56 + 46*d - 12*d^2 + 
              d^3)*mz^2*Pi^d - d^3*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
             ((80 - 56*d + 11*d^2)*s + 4*(8 - 6*d + d^2)*t)))/8 + 
        8*sw^6*(2^(2 + d)*(-52 + 44*d - 12*d^2 + d^3)*mz^2*Pi^d - 
          d^3*(2*Pi)^d*s + 2^(1 + d)*Pi^d*((88 - 57*d + 11*d^2)*s + 
            4*(10 - 6*d + d^2)*t)))))/(2^(2*(1 + d))*Pi^(2*d)*(mz^2 - s)*sw^6*
     (1 - sw^2)^3), 0, ((-I/27)*2^(-3 - 2*d)*EL^6*
     (sw^6*(((3 - 4*sw^2)^3*(d^3*(2*Pi)^d*s^2*(s + 3*t) - 2^(1 + d)*mz^4*Pi^d*
            ((-216 + 170*d - 42*d^2 + 3*d^3)*s + 2*(-52 + 44*d - 12*d^2 + d^
                3)*t) + 2^(2 + d)*mz^2*Pi^d*((-144 + 98*d - 20*d^2 + d^3)*
              s^2 + (-184 + 122*d - 24*d^2 + d^3)*s*t - 4*(10 - 6*d + d^2)*
              t^2) + 2^(1 + d)*Pi^d*(-((-72 + 45*d - 9*d^2 + d^3)*s^3) + 
             (96 - 49*d + 9*d^2 - 2*d^3)*s^2*t - 4*(-8 + d)*s*t^2 + 8*t^3)))/
         8 + 8*sw^6*(d^3*(2*Pi)^d*s^2*(s + 3*t) + 2^(2 + d)*(-4 + d)*mz^2*
           Pi^d*(s + t)*((36 - 16*d + d^2)*s - 4*(-2 + d)*t) - 
          2^(1 + d)*(-4 + d)*mz^4*Pi^d*(3*(20 - 10*d + d^2)*s + 
            2*(14 - 8*d + d^2)*t) - 2^(1 + d)*Pi^d*
           ((-72 + 48*d - 9*d^2 + d^3)*s^3 + (-72 + 52*d - 9*d^2 + 2*d^3)*s^2*
             t + 4*(2 + d)*s*t^2 + 8*t^3))) + (1/2 - sw^2)^3*
       (8*sw^6*(d^3*(2*Pi)^d*s^2*(s + 3*t) - 2^(1 + d)*mz^4*Pi^d*
           ((-216 + 170*d - 42*d^2 + 3*d^3)*s + 2*(-52 + 44*d - 12*d^2 + d^3)*
             t) + 2^(2 + d)*mz^2*Pi^d*((-144 + 98*d - 20*d^2 + d^3)*s^2 + 
            (-184 + 122*d - 24*d^2 + d^3)*s*t - 4*(10 - 6*d + d^2)*t^2) + 
          2^(1 + d)*Pi^d*(-((-72 + 45*d - 9*d^2 + d^3)*s^3) + 
            (96 - 49*d + 9*d^2 - 2*d^3)*s^2*t - 4*(-8 + d)*s*t^2 + 8*t^3)) + 
        ((3 - 4*sw^2)^3*(d^3*(2*Pi)^d*s^2*(s + 3*t) + 2^(2 + d)*(-4 + d)*mz^2*
            Pi^d*(s + t)*((36 - 16*d + d^2)*s - 4*(-2 + d)*t) - 
           2^(1 + d)*(-4 + d)*mz^4*Pi^d*(3*(20 - 10*d + d^2)*s + 
             2*(14 - 8*d + d^2)*t) - 2^(1 + d)*Pi^d*
            ((-72 + 48*d - 9*d^2 + d^3)*s^3 + (-72 + 52*d - 9*d^2 + 2*d^3)*
              s^2*t + 4*(2 + d)*s*t^2 + 8*t^3)))/8)))/
    (Pi^(2*d)*(mz^2 - s)*sw^6*(1 - sw^2)^3), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/3)*2^(-3 - d)*(-4 + d)*EL^6*((-4 - 2*d + d^2)*s + 
      2*(14 - 8*d + d^2)*t)*CKM[1, 1]*CKMC[1, 1])/(Pi^d*s*sw^4), 0, 0, 0, 0, 
   ((-I/3)*2^(-5 - d)*EL^6*((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 4*t^2)*
     CKM[1, 1]*CKMC[1, 1]*(s + mz^2*(-1 + sw^2) - mz^2*(-1 + sw^2)*
       GaugeXi[Q]))/((-1 + d)*mz^4*Pi^d*s^2*sw^4*(-1 + sw^2)^2), 
   ((-I/3)*2^(-5 - 4*d)*EL^6*CKM[1, 1]*CKMC[1, 1]*
     ((2^(1 + 3*d)*Pi^(3*d)*(d*s^2 + 4*d*mz^2*s*(-1 + sw^2) + 
         4*(-1 + d)*mz^4*(-1 + sw^2)^2))/((-1 + d)*mz^4*(-1 + sw^2)^2) + 
      ((2*Pi)^(3*d)*(s + 2*mz^2*(-1 + sw^2))^2*((-6 + d)*s - 2*t))/
       (mz^4*s*(-1 + sw^2)^2) - 
      ((2*Pi)^(3*d)*(4*(-1 + d)*mz^4*(-1 + sw^2)^2 + s*((-2 + d)*s - 2*t) + 
         4*mz^2*(-1 + sw^2)*((-2 + d)*s - 2*t))*((-4 + d)*s - 2*t))/
       ((-1 + d)*mz^4*s*(-1 + sw^2)^2) - 
      (8^(1 + d)*(-56 + 46*d - 12*d^2 + d^3)*Pi^(3*d)*(s + 2*t))/s + 
      (2^(1 + 3*d)*Pi^(3*d)*(2*(-122 + 87*d - 18*d^2 + d^3)*s + 
         4*(-55 + 46*d - 12*d^2 + d^3)*t - ((-4 + d)*s^2*(s + t))/
          (mz^4*(-1 + sw^2)^2) + (4*((8 - 5*d + d^2)*s^2 + 
            (20 - 11*d + 2*d^2)*s*t + 4*t^2))/(mz^2*(-1 + sw^2))))/s + 
      ((2*Pi)^(2*d)*(-s - 2*mz^2*(-1 + sw^2))*(2^(1 + d)*mz^2*Pi^d*(1 - sw^2)*
          ((-6 + d)*s - 2*t) + s*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (-((-3 + d)*s) + t)) + 2^(1 + d)*Pi^d*(s + 2*mz^2*(-1 + sw^2))*
          ((-6 + d)*s - 2*t)*GaugeXi[Q] + 
         (2^(1 + d)*mz^2*Pi^d*(1 - sw^2)*((-6 + d)*s - 2*t) + 
           s*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(-((-3 + d)*s) + t)))*
          GaugeXi[Q]^2))/(mz^4*s*(-1 + sw^2)^2*(-1 + GaugeXi[Q])^2)))/
    (Pi^(4*d)*sw^4), ((-I/3)*2^(-3 - 4*d)*EL^6*
     ((-144 + 96*d - 18*d^2 + d^3)*s^2 + 2*(-128 + 88*d - 18*d^2 + d^3)*mz^2*
       s*(-1 + sw^2) + 8*d*s*t + 16*t^2)*CKM[1, 1]*CKMC[1, 1]*
     ((2*Pi)^(3*d) - 2^(1 + 3*d)*Pi^(3*d)*GaugeXi[Q] + 
      (2*Pi)^(3*d)*GaugeXi[Q]^2))/(Pi^(4*d)*s*sw^4*(-1 + GaugeXi[Q])^2), 
   ((-I/3)*2^(-3 - 2*d)*EL^6*(s + t)*(-(d^3*(2*Pi)^d*s) - 
      2^(2 + d)*(-56 + 46*d - 12*d^2 + d^3)*mz^2*Pi^d*(-1 + sw^2) + 
      2^(1 + d)*Pi^d*((80 - 56*d + 11*d^2)*s + 4*(8 - 6*d + d^2)*t))*
     CKM[1, 1]*CKMC[1, 1])/(Pi^(2*d)*s*sw^4), 
   ((-I/3)*EL^6*(2^(2 + d)*(-4 + d)*mz^2*Pi^d*(-1 + sw^2)*(s + t)*
       ((36 - 16*d + d^2)*s - 4*(-2 + d)*t) + 2^(1 + d)*(-4 + d)*mz^4*Pi^d*
       (-1 + sw^2)^2*(3*(20 - 10*d + d^2)*s + 2*(14 - 8*d + d^2)*t) + 
      (s + t)*(-(d^3*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*
         ((-72 + 48*d - 9*d^2 + d^3)*s^2 + 4*d*s*t + 8*t^2)))*CKM[1, 1]*
     CKMC[1, 1])/(2^(2*(2 + d))*Pi^(2*d)*s*sw^4), 
   ((-I/3)*2^(-5 - 2*d)*EL^6*CKM[1, 1]*CKMC[1, 1]*(d^2*(2*Pi)^d*s^3 + 
      2^(1 + d)*Pi^d*s*(-2*(-1 + d)*s^2 + (8 - 5*d + d^2)*s*t + 2*t^2) + 
      mz^2*(1 - sw^2)*(-(d^2*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*
         ((2 - 2*d + d^2)*s^2 + (8 - 5*d + d^2)*s*t + 2*t^2)) - 
      (2^(1 + d)*Pi^d*s*((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 4*t^2) + 
        mz^2*(1 - sw^2)*(-(d^2*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*
           (2*(3 - 3*d + d^2)*s^2 + 3*(8 - 5*d + d^2)*s*t + 6*t^2)))*
       GaugeXi[Q] + (d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
         (-2*(-1 + d)*s^2 + (8 - 5*d + d^2)*s*t + 2*t^2) + 
        mz^2*(1 - sw^2)*(d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
           ((6 - 6*d + d^2)*s^2 + 3*(8 - 5*d + d^2)*s*t + 6*t^2)))*
       GaugeXi[Q]^2 + mz^2*(1 - sw^2)*(-(d^2*(2*Pi)^d*s^2) + 
        2^(1 + d)*Pi^d*(2*(-1 + d)*s^2 - (8 - 5*d + d^2)*s*t - 2*t^2))*
       GaugeXi[Q]^3))/((-1 + d)*mz^4*Pi^(2*d)*s^2*sw^4*(-1 + sw^2)^2*
     (-1 + GaugeXi[Q])^2), ((I/3)*2^(-5 - 2*d)*EL^6*CKM[1, 1]*CKMC[1, 1]*
     (-3*d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*(2*(1 - d + d^2)*s^2 + 
        (8 - 5*d + d^2)*s*t + 2*t^2) - 2^(1 + d)*Pi^d*
       (s - 2*mz^2*(-1 + sw^2))*((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 
        4*t^2)*GaugeXi[Q] + (-3*d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
         (2*(1 - d + d^2)*s^2 + (8 - 5*d + d^2)*s*t + 2*t^2) + 
        2^(3 + d)*mz^2*Pi^d*(1 - sw^2)*((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*
           t + 4*t^2))*GaugeXi[Q]^2 - 2^(2 + d)*mz^2*Pi^d*(1 - sw^2)*
       ((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 4*t^2)*GaugeXi[Q]^3))/
    ((-1 + d)*mz^4*Pi^(2*d)*s*sw^4*(-1 + sw^2)^2*(-1 + GaugeXi[Q])^2), 
   ((-I/3)*2^(-5 - 2*d)*EL^6*CKM[1, 1]*CKMC[1, 1]*(-(d^2*(2*Pi)^d*s^3) + 
      2^(1 + d)*Pi^d*s*(2*(-1 + d)*s^2 - (8 - 5*d + d^2)*s*t - 2*t^2) + 
      mz^2*(1 - sw^2)*(-(d^2*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*
         ((2 - 2*d + d^2)*s^2 + (8 - 5*d + d^2)*s*t + 2*t^2)) + 
      (2^(1 + d)*Pi^d*s*((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 4*t^2) - 
        mz^2*(1 - sw^2)*(-(d^2*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*
           (2*(3 - 3*d + d^2)*s^2 + 3*(8 - 5*d + d^2)*s*t + 6*t^2)))*
       GaugeXi[Q] + (-(d^2*(2*Pi)^d*s^3) + 2^(1 + d)*Pi^d*s*
         (2*(-1 + d)*s^2 - (8 - 5*d + d^2)*s*t - 2*t^2) + 
        mz^2*(1 - sw^2)*(d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
           ((6 - 6*d + d^2)*s^2 + 3*(8 - 5*d + d^2)*s*t + 6*t^2)))*
       GaugeXi[Q]^2 + mz^2*(1 - sw^2)*(-(d^2*(2*Pi)^d*s^2) + 
        2^(1 + d)*Pi^d*(2*(-1 + d)*s^2 - (8 - 5*d + d^2)*s*t - 2*t^2))*
       GaugeXi[Q]^3))/((-1 + d)*mz^4*Pi^(2*d)*s^2*sw^4*(-1 + sw^2)^2*
     (-1 + GaugeXi[Q])^2), ((I/3)*2^(-5 - 4*d)*EL^6*CKM[1, 1]*CKMC[1, 1]*
     (((2*Pi)^(3*d)*((-6 + d)*s - 2*t)*(s + mz^2*(-1 + sw^2) + 
          mz^2*(-1 + sw^2)*GaugeXi[Q])^2)/s + 
      (2^(1 + 3*d)*Pi^(3*d)*(d*(s + mz^2*(-1 + sw^2))^2 + 
         2*mz^2*(-1 + sw^2)*(d*s + (-2 + d)*mz^2*(-1 + sw^2))*GaugeXi[Q] + 
         d*mz^4*(-1 + sw^2)^2*GaugeXi[Q]^2))/(-1 + d) - 
      ((2*Pi)^(3*d)*((-4 + d)*s - 2*t)*((s + mz^2*(-1 + sw^2))^2*
          ((-2 + d)*s - 2*t) + 2*mz^2*(1 - sw^2)*
          (-(d*s*(s + mz^2*(-1 + sw^2))) + 2*(s^2 + s*t - mz^2*(-1 + sw^2)*
              t))*GaugeXi[Q] + mz^4*(-1 + sw^2)^2*((-2 + d)*s - 2*t)*
          GaugeXi[Q]^2))/((-1 + d)*s^2) + 
      ((2*Pi)^(2*d)*(-s - mz^2*(-1 + sw^2) - mz^2*(-1 + sw^2)*GaugeXi[Q])*
        (mz^2*(1 - sw^2)*(d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(3*s + t)) + 
         s*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(-((-3 + d)*s) + t)) + 
         (2^(1 + d)*Pi^d*s*((-6 + d)*s - 2*t) + mz^2*(1 - sw^2)*
            (-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(3*s + t)))*GaugeXi[Q] + 
         (mz^2*(1 - sw^2)*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(3*s + t)) + 
           s*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(-((-3 + d)*s) + t)))*
          GaugeXi[Q]^2 - mz^2*(1 - sw^2)*(-(d*(2*Pi)^d*s) + 
           2^(1 + d)*Pi^d*(3*s + t))*GaugeXi[Q]^3))/(s*(-1 + GaugeXi[Q])^2) + 
      (2*(-((2*Pi)^(3*d)*((-4 + d)*s^2*(s + t) + (-4 + d)*mz^4*(-1 + sw^2)^2*
             (s + t) + 2*mz^2*(1 - sw^2)*((8 - 5*d + d^2)*s^2 + 
              (20 - 11*d + 2*d^2)*s*t + 4*t^2))) + 2^(1 + 3*d)*Pi^(3*d)*
          ((-4 + d)*s^2*(s + t) + mz^4*(-1 + sw^2)^2*((-2 + d)*s + 
             2*(-3 + d)*t) + mz^2*(1 - sw^2)*((12 - 9*d + 2*d^2)*s^2 + 
             (36 - 21*d + 4*d^2)*s*t + 8*t^2))*GaugeXi[Q] - 
         (2*Pi)^(3*d)*(-2*d^2*mz^2*s*(-1 + sw^2)*(s + 2*t) - 
           4*(s^3 + s^2*t + 6*mz^2*s*(-1 + sw^2)*t + 2*mz^2*(-1 + sw^2)*t*
              (2*mz^2*(-1 + sw^2) + t)) + d*(s^2*(s + t) + 
             6*mz^2*s*(-1 + sw^2)*(s + 3*t) + 2*mz^4*(-1 + sw^2)^2*
              (s + 3*t)))*GaugeXi[Q]^2 + 2^(1 + 3*d)*mz^2*Pi^(3*d)*(1 - sw^2)*
          ((-4 + d)*s*(s + t) + mz^2*(1 - sw^2)*((-2 + d)*s + 2*(-3 + d)*t))*
          GaugeXi[Q]^3 - (-4 + d)*mz^4*(2*Pi)^(3*d)*(-1 + sw^2)^2*(s + t)*
          GaugeXi[Q]^4))/(s*(-1 + GaugeXi[Q])^2)))/
    (mz^4*Pi^(4*d)*sw^4*(-1 + sw^2)^2), 
   ((-I/3)*2^(-5 - 2*d)*EL^6*CKM[1, 1]*CKMC[1, 1]*
     ((s - mz^2*(-1 + sw^2))*(-(d^2*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*
         (2*(-1 + d)*s^2 - (8 - 5*d + d^2)*s*t - 2*t^2)) + 
      (2^(1 + d)*Pi^d*s*((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 4*t^2) + 
        mz^2*(1 - sw^2)*(d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
           ((6 - 6*d + d^2)*s^2 + 3*(8 - 5*d + d^2)*s*t + 6*t^2)))*
       GaugeXi[Q] - (d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
         (-2*(-1 + d)*s^2 + (8 - 5*d + d^2)*s*t + 2*t^2) + 
        mz^2*(1 - sw^2)*(-(d^2*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*
           (2*(3 - 3*d + d^2)*s^2 + 3*(8 - 5*d + d^2)*s*t + 6*t^2)))*
       GaugeXi[Q]^2 + mz^2*(1 - sw^2)*(-(d^2*(2*Pi)^d*s^2) + 
        2^(1 + d)*Pi^d*((2 - 2*d + d^2)*s^2 + (8 - 5*d + d^2)*s*t + 2*t^2))*
       GaugeXi[Q]^3))/((-1 + d)*mz^4*Pi^(2*d)*s^2*sw^4*(-1 + sw^2)^2*
     (-1 + GaugeXi[Q])^2), ((I/3)*2^(-5 - 4*d)*EL^6*CKM[1, 1]*CKMC[1, 1]*
     (((2*Pi)^(3*d)*((-6 + d)*s - 2*t)*(s + mz^2*(-1 + sw^2) + 
          mz^2*(-1 + sw^2)*GaugeXi[Q])^2)/s + 
      (2^(1 + 3*d)*Pi^(3*d)*(d*(s + mz^2*(-1 + sw^2))^2 + 
         2*mz^2*(-1 + sw^2)*(d*s + (-2 + d)*mz^2*(-1 + sw^2))*GaugeXi[Q] + 
         d*mz^4*(-1 + sw^2)^2*GaugeXi[Q]^2))/(-1 + d) - 
      ((2*Pi)^(3*d)*((-4 + d)*s - 2*t)*((s + mz^2*(-1 + sw^2))^2*
          ((-2 + d)*s - 2*t) + 2*mz^2*(1 - sw^2)*
          (-(d*s*(s + mz^2*(-1 + sw^2))) + 2*(s^2 + s*t - mz^2*(-1 + sw^2)*
              t))*GaugeXi[Q] + mz^4*(-1 + sw^2)^2*((-2 + d)*s - 2*t)*
          GaugeXi[Q]^2))/((-1 + d)*s^2) + 
      ((2*Pi)^(2*d)*(-s - mz^2*(-1 + sw^2) - mz^2*(-1 + sw^2)*GaugeXi[Q])*
        (mz^2*(1 - sw^2)*(d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(3*s + t)) + 
         s*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(-((-3 + d)*s) + t)) + 
         (2^(1 + d)*Pi^d*s*((-6 + d)*s - 2*t) + mz^2*(1 - sw^2)*
            (-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(3*s + t)))*GaugeXi[Q] + 
         (mz^2*(1 - sw^2)*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(3*s + t)) + 
           s*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(-((-3 + d)*s) + t)))*
          GaugeXi[Q]^2 - mz^2*(1 - sw^2)*(-(d*(2*Pi)^d*s) + 
           2^(1 + d)*Pi^d*(3*s + t))*GaugeXi[Q]^3))/(s*(-1 + GaugeXi[Q])^2) + 
      (2*(-((2*Pi)^(3*d)*((-4 + d)*s^2*(s + t) + (-4 + d)*mz^4*(-1 + sw^2)^2*
             (s + t) + 2*mz^2*(1 - sw^2)*((8 - 5*d + d^2)*s^2 + 
              (20 - 11*d + 2*d^2)*s*t + 4*t^2))) + 2^(1 + 3*d)*Pi^(3*d)*
          ((-4 + d)*s^2*(s + t) + mz^4*(-1 + sw^2)^2*((-2 + d)*s + 
             2*(-3 + d)*t) + mz^2*(1 - sw^2)*((12 - 9*d + 2*d^2)*s^2 + 
             (36 - 21*d + 4*d^2)*s*t + 8*t^2))*GaugeXi[Q] - 
         (2*Pi)^(3*d)*(-2*d^2*mz^2*s*(-1 + sw^2)*(s + 2*t) - 
           4*(s^3 + s^2*t + 6*mz^2*s*(-1 + sw^2)*t + 2*mz^2*(-1 + sw^2)*t*
              (2*mz^2*(-1 + sw^2) + t)) + d*(s^2*(s + t) + 
             6*mz^2*s*(-1 + sw^2)*(s + 3*t) + 2*mz^4*(-1 + sw^2)^2*
              (s + 3*t)))*GaugeXi[Q]^2 + 2^(1 + 3*d)*mz^2*Pi^(3*d)*(1 - sw^2)*
          ((-4 + d)*s*(s + t) + mz^2*(1 - sw^2)*((-2 + d)*s + 2*(-3 + d)*t))*
          GaugeXi[Q]^3 - (-4 + d)*mz^4*(2*Pi)^(3*d)*(-1 + sw^2)^2*(s + t)*
          GaugeXi[Q]^4))/(s*(-1 + GaugeXi[Q])^2)))/
    (mz^4*Pi^(4*d)*sw^4*(-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/3)*4^(-3 - d)*EL^6*(-1 + 2*sw^2)*(-3 + 4*sw^2)*
     (-(d^3*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*((8 + 2*d - 3*d^2 + d^3)*s + 
        (-56 + 46*d - 12*d^2 + d^3)*t))*CKM[1, 1]*CKMC[1, 1])/
    (Pi^(2*d)*(mz^2 - s)*sw^6*(-1 + sw^2)), 0, 0, 0, 0, 
   ((-I/3)*2^(-7 - 2*d)*EL^6*(3 - 4*sw^2)*(-1/2 + sw^2)*CKM[1, 1]*CKMC[1, 1]*
     (d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*(-2*(-1 + d)*s^2 + 
        (8 - 5*d + d^2)*s*t + 2*t^2) + mz^2*(1 - sw^2)*
       (-13*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*(2*(-1 + d + 3*d^2)*s^2 - 
          (8 - 5*d + d^2)*s*t - 2*t^2)) + 
      (-(2^(1 + d)*Pi^d*s*((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 4*t^2)) + 
        mz^2*(1 - sw^2)*(-5*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
           ((6 - 6*d + 4*d^2)*s^2 + 3*(8 - 5*d + d^2)*s*t + 6*t^2)))*
       GaugeXi[Q] + (d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
         (-2*(-1 + d)*s^2 + (8 - 5*d + d^2)*s*t + 2*t^2) + 
        mz^2*(1 - sw^2)*(-13*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
           ((-6 + 6*d + 5*d^2)*s^2 - 3*(8 - 5*d + d^2)*s*t - 6*t^2)))*
       GaugeXi[Q]^2 + mz^2*(1 - sw^2)*(-5*d^2*(2*Pi)^d*s^2 + 
        2^(1 + d)*Pi^d*((2 - 2*d + 3*d^2)*s^2 + (8 - 5*d + d^2)*s*t + 2*t^2))*
       GaugeXi[Q]^3))/((-1 + d)*mz^4*Pi^(2*d)*(mz^2 - s)*s*sw^6*(1 - sw^2)^3*
     (-1 + GaugeXi[Q])^2), ((I/3)*2^(-7 - 4*d)*EL^6*(3 - 4*sw^2)*
     (-1/2 + sw^2)*(2^(2 + 3*d)*(4 - 5*d + d^2)*mz^4*Pi^(3*d)*(-1 + sw^2)^2*
       ((-4 - 2*d + d^2)*s + 2*(14 - 8*d + d^2)*t) + 
      (2*Pi)^(3*d)*s*((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 4*t^2) + 
      2^(2 + 3*d)*(-3 + 2*d)*mz^2*Pi^(3*d)*(1 - sw^2)*
       ((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 4*t^2))*CKM[1, 1]*
     CKMC[1, 1])/((-1 + d)*mz^4*Pi^(4*d)*(mz^2 - s)*sw^6*(1 - sw^2)^3), 
   ((-I/3)*4^(-3 - 2*d)*EL^6*(-1 + 2*sw^2)*(-3 + 4*sw^2)*
     ((-144 + 96*d - 18*d^2 + d^3)*s^2 + 2*(-128 + 88*d - 18*d^2 + d^3)*mz^2*
       s*(-1 + sw^2) + 8*d*s*t + 16*t^2)*CKM[1, 1]*CKMC[1, 1]*
     ((2*Pi)^(3*d) - 2^(1 + 3*d)*Pi^(3*d)*GaugeXi[Q] + 
      (2*Pi)^(3*d)*GaugeXi[Q]^2))/(Pi^(4*d)*(mz^2 - s)*sw^6*(-1 + sw^2)*
     (-1 + GaugeXi[Q])^2), ((I/3)*4^(-3 - d)*EL^6*(-1 + 2*sw^2)*(-3 + 4*sw^2)*
     (s + t)*(d^3*(2*Pi)^d*s + 2^(2 + d)*(-56 + 46*d - 12*d^2 + d^3)*mz^2*
       Pi^d*(-1 + sw^2) - 2^(1 + d)*Pi^d*((80 - 56*d + 11*d^2)*s + 
        4*(8 - 6*d + d^2)*t))*CKM[1, 1]*CKMC[1, 1])/
    (Pi^(2*d)*(mz^2 - s)*sw^6*(-1 + sw^2)), 
   ((I/3)*EL^6*(3 - 4*sw^2)*(-1/2 + sw^2)*(d^3*(2*Pi)^d*s^2*(s + 3*t) + 
      2^(2 + d)*(-4 + d)*mz^2*Pi^d*(-1 + sw^2)*(s + t)*
       ((36 - 16*d + d^2)*s - 4*(-2 + d)*t) + 2^(1 + d)*(-4 + d)*mz^4*Pi^d*
       (-1 + sw^2)^2*(3*(20 - 10*d + d^2)*s + 2*(14 - 8*d + d^2)*t) + 
      2^(1 + d)*Pi^d*((-72 + 48*d - 9*d^2)*s^3 - (72 - 52*d + 9*d^2 + d^3)*
         s^2*t + 4*(2 + d)*s*t^2 + 8*t^3))*CKM[1, 1]*CKMC[1, 1])/
    (2^(2*(3 + d))*Pi^(2*d)*(mz^2 - s)*sw^6*(-1 + sw^2)), 
   ((-I/3)*2^(-7 - 2*d)*EL^6*(3 - 4*sw^2)*(-1/2 + sw^2)*CKM[1, 1]*CKMC[1, 1]*
     (d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*(-2*(-1 + d)*s^2 + 
        (8 - 5*d + d^2)*s*t + 2*t^2) + mz^2*(1 - sw^2)*
       (-5*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*((2 - 2*d + 3*d^2)*s^2 + 
          (8 - 5*d + d^2)*s*t + 2*t^2)) + 
      (-(2^(1 + d)*Pi^d*s*((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 4*t^2)) + 
        mz^2*(1 - sw^2)*(-13*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
           ((-6 + 6*d + 5*d^2)*s^2 - 3*(8 - 5*d + d^2)*s*t - 6*t^2)))*
       GaugeXi[Q] + (d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
         (-2*(-1 + d)*s^2 + (8 - 5*d + d^2)*s*t + 2*t^2) + 
        mz^2*(1 - sw^2)*(-5*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
           ((6 - 6*d + 4*d^2)*s^2 + 3*(8 - 5*d + d^2)*s*t + 6*t^2)))*
       GaugeXi[Q]^2 + mz^2*(1 - sw^2)*(-13*d^2*(2*Pi)^d*s^2 + 
        2^(1 + d)*Pi^d*(2*(-1 + d + 3*d^2)*s^2 - (8 - 5*d + d^2)*s*t - 
          2*t^2))*GaugeXi[Q]^3))/((-1 + d)*mz^4*Pi^(2*d)*(mz^2 - s)*s*sw^6*
     (1 - sw^2)^3*(-1 + GaugeXi[Q])^2), 
   ((-I/3)*2^(-7 - 2*d)*EL^6*(3 - 4*sw^2)*(-1/2 + sw^2)*CKM[1, 1]*CKMC[1, 1]*
     (-(d^2*(2*Pi)^d*s^3) + 2^(1 + d)*Pi^d*s*(2*(-1 + d)*s^2 - 
        (8 - 5*d + d^2)*s*t - 2*t^2) + 2^(1 + d)*Pi^d*
       (s - 2*mz^2*(-1 + sw^2))*((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 
        4*t^2)*GaugeXi[Q] - (d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
         (-2*(-1 + d)*s^2 + (8 - 5*d + d^2)*s*t + 2*t^2) + 
        2^(3 + d)*mz^2*Pi^d*(1 - sw^2)*((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*
           t + 4*t^2))*GaugeXi[Q]^2 + 2^(2 + d)*mz^2*Pi^d*(1 - sw^2)*
       ((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 4*t^2)*GaugeXi[Q]^3))/
    ((-1 + d)*mz^4*Pi^(2*d)*(mz^2 - s)*sw^6*(1 - sw^2)^3*
     (-1 + GaugeXi[Q])^2), ((-I/3)*2^(-7 - 2*d)*EL^6*(3 - 4*sw^2)*
     (-1/2 + sw^2)*CKM[1, 1]*CKMC[1, 1]*
     (-((-s - mz^2*(-1 + sw^2))*(-(d^2*(2*Pi)^d*s^2) + 
         2^(1 + d)*Pi^d*(2*(-1 + d)*s^2 - (8 - 5*d + d^2)*s*t - 2*t^2))) + 
      (2^(1 + d)*Pi^d*s*((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 4*t^2) + 
        3*mz^2*(1 - sw^2)*(-(d^2*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*
           (2*(-1 + d)*s^2 - (8 - 5*d + d^2)*s*t - 2*t^2)))*GaugeXi[Q] + 
      (-(d^2*(2*Pi)^d*s^3) + 2^(1 + d)*Pi^d*s*(2*(-1 + d)*s^2 - 
          (8 - 5*d + d^2)*s*t - 2*t^2) + mz^2*(1 - sw^2)*
         (d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*((6 - 6*d + d^2)*s^2 + 
            3*(8 - 5*d + d^2)*s*t + 6*t^2)))*GaugeXi[Q]^2 + 
      mz^2*(1 - sw^2)*(-3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         ((-2 + 2*d + d^2)*s^2 - (8 - 5*d + d^2)*s*t - 2*t^2))*GaugeXi[Q]^3))/
    ((-1 + d)*mz^4*Pi^(2*d)*(mz^2 - s)*s*sw^6*(1 - sw^2)^3*
     (-1 + GaugeXi[Q])^2), ((-I/3)*2^(-7 - 4*d)*EL^6*(3 - 4*sw^2)*
     (-1/2 + sw^2)*CKM[1, 1]*CKMC[1, 1]*
     (-(2^(1 + 3*d)*Pi^(3*d)*(s - s*GaugeXi[Q])^2*
        (d*(s + mz^2*(-1 + sw^2))^2 + 2*mz^2*(1 - sw^2)*
          (-(d*s) - (-2 + d)*mz^2*(-1 + sw^2))*GaugeXi[Q] + 
         d*mz^4*(-1 + sw^2)^2*GaugeXi[Q]^2)) + (2*Pi)^(2*d)*
       ((s + mz^2*(-1 + sw^2))^2*((-2 + d)*s - 2*t) + 2*mz^2*(1 - sw^2)*
         (-(d*s*(s + mz^2*(-1 + sw^2))) + 2*(s^2 + s*t - mz^2*(-1 + sw^2)*t))*
         GaugeXi[Q] + mz^4*(-1 + sw^2)^2*((-2 + d)*s - 2*t)*GaugeXi[Q]^2)*
       (d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(2*s + t) - 2^(1 + d)*Pi^d*
         ((-4 + d)*s - 2*t)*GaugeXi[Q] - (-(d*(2*Pi)^d*s) + 
          2^(1 + d)*Pi^d*(2*s + t))*GaugeXi[Q]^2) + (1 - d)*(2*Pi)^(2*d)*s*
       (s + mz^2*(-1 + sw^2) + mz^2*(-1 + sw^2)*GaugeXi[Q])^2*
       (d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(3*s + t) - 2^(1 + d)*Pi^d*
         ((-6 + d)*s - 2*t)*GaugeXi[Q] + 
        (d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(3*s + t))*GaugeXi[Q]^2) - 
      (1 - d)*(2*Pi)^(2*d)*s*(-s - mz^2*(-1 + sw^2) - mz^2*(-1 + sw^2)*
         GaugeXi[Q])*((-s - mz^2*(-1 + sw^2))*(-(d*(2*Pi)^d*s) + 
          2^(1 + d)*Pi^d*(3*s + t)) + 
        (mz^2*(1 - sw^2)*(-3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*((-3 + 2*d)*s - 
              t)) - 2^(1 + d)*Pi^d*s*((-6 + d)*s - 2*t))*GaugeXi[Q] + 
        (mz^2*(1 - sw^2)*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*((-3 + d)*s - 
              t)) + s*(d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(3*s + t)))*
         GaugeXi[Q]^2 + mz^2*(1 - sw^2)*(-3*d*(2*Pi)^d*s + 
          2^(1 + d)*Pi^d*((3 + d)*s + t))*GaugeXi[Q]^3) - 
      2*(1 - d)*s*((2*Pi)^(3*d)*((-4 + d)*s^2*(s + t) + 
          (-4 + d)*mz^4*(-1 + sw^2)^2*(s + t) + 2*mz^2*(1 - sw^2)*
           ((8 - 5*d + d^2)*s^2 + (20 - 11*d + 2*d^2)*s*t + 4*t^2)) - 
        2^(1 + 3*d)*Pi^(3*d)*((-4 + d)*s^2*(s + t) + mz^4*(-1 + sw^2)^2*
           ((-2 + d)*s + 2*(-3 + d)*t) + mz^2*(1 - sw^2)*
           ((12 - 9*d + 2*d^2)*s^2 + (36 - 21*d + 4*d^2)*s*t + 8*t^2))*
         GaugeXi[Q] + (2*Pi)^(3*d)*(-2*d^2*mz^2*s*(-1 + sw^2)*(s + 2*t) - 
          4*(s^3 + s^2*t + 6*mz^2*s*(-1 + sw^2)*t + 2*mz^2*(-1 + sw^2)*t*
             (2*mz^2*(-1 + sw^2) + t)) + d*(s^2*(s + t) + 
            6*mz^2*s*(-1 + sw^2)*(s + 3*t) + 2*mz^4*(-1 + sw^2)^2*(s + 3*t)))*
         GaugeXi[Q]^2 - 2^(1 + 3*d)*mz^2*Pi^(3*d)*(1 - sw^2)*
         ((-4 + d)*s*(s + t) + mz^2*(1 - sw^2)*((-2 + d)*s + 2*(-3 + d)*t))*
         GaugeXi[Q]^3 + (-4 + d)*mz^4*(2*Pi)^(3*d)*(-1 + sw^2)^2*(s + t)*
         GaugeXi[Q]^4)))/((-1 + d)*mz^4*Pi^(4*d)*(mz^2 - s)*s*sw^6*
     (1 - sw^2)^3*(-1 + GaugeXi[Q])^2), 
   ((-I/3)*2^(-7 - 2*d)*EL^6*(3 - 4*sw^2)*(-1/2 + sw^2)*CKM[1, 1]*CKMC[1, 1]*
     (-(d^2*(2*Pi)^d*s^3) + 2^(1 + d)*Pi^d*s*(2*(-1 + d)*s^2 - 
        (8 - 5*d + d^2)*s*t - 2*t^2) + mz^2*(1 - sw^2)*
       (-3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*((-2 + 2*d + d^2)*s^2 - 
          (8 - 5*d + d^2)*s*t - 2*t^2)) + 
      (2^(1 + d)*Pi^d*s*((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 4*t^2) + 
        mz^2*(1 - sw^2)*(d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
           ((6 - 6*d + d^2)*s^2 + 3*(8 - 5*d + d^2)*s*t + 6*t^2)))*
       GaugeXi[Q] + (s - 3*mz^2*(-1 + sw^2))*(-(d^2*(2*Pi)^d*s^2) + 
        2^(1 + d)*Pi^d*(2*(-1 + d)*s^2 - (8 - 5*d + d^2)*s*t - 2*t^2))*
       GaugeXi[Q]^2 - mz^2*(1 - sw^2)*(-(d^2*(2*Pi)^d*s^2) + 
        2^(1 + d)*Pi^d*(2*(-1 + d)*s^2 - (8 - 5*d + d^2)*s*t - 2*t^2))*
       GaugeXi[Q]^3))/((-1 + d)*mz^4*Pi^(2*d)*(mz^2 - s)*s*sw^6*(1 - sw^2)^3*
     (-1 + GaugeXi[Q])^2), ((-I/3)*2^(-7 - 4*d)*EL^6*(3 - 4*sw^2)*
     (-1/2 + sw^2)*CKM[1, 1]*CKMC[1, 1]*
     (-(2^(1 + 3*d)*Pi^(3*d)*(s - s*GaugeXi[Q])^2*
        (d*(s + mz^2*(-1 + sw^2))^2 + 2*mz^2*(1 - sw^2)*
          (-(d*s) - (-2 + d)*mz^2*(-1 + sw^2))*GaugeXi[Q] + 
         d*mz^4*(-1 + sw^2)^2*GaugeXi[Q]^2)) + (2*Pi)^(2*d)*
       ((s + mz^2*(-1 + sw^2))^2*((-2 + d)*s - 2*t) + 2*mz^2*(1 - sw^2)*
         (-(d*s*(s + mz^2*(-1 + sw^2))) + 2*(s^2 + s*t - mz^2*(-1 + sw^2)*t))*
         GaugeXi[Q] + mz^4*(-1 + sw^2)^2*((-2 + d)*s - 2*t)*GaugeXi[Q]^2)*
       (d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(2*s + t) - 2^(1 + d)*Pi^d*
         ((-4 + d)*s - 2*t)*GaugeXi[Q] - (-(d*(2*Pi)^d*s) + 
          2^(1 + d)*Pi^d*(2*s + t))*GaugeXi[Q]^2) + (1 - d)*(2*Pi)^(2*d)*s*
       (s + mz^2*(-1 + sw^2) + mz^2*(-1 + sw^2)*GaugeXi[Q])^2*
       (d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(3*s + t) - 2^(1 + d)*Pi^d*
         ((-6 + d)*s - 2*t)*GaugeXi[Q] + 
        (d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(3*s + t))*GaugeXi[Q]^2) - 
      (1 - d)*(2*Pi)^(2*d)*s*(-s - mz^2*(-1 + sw^2) - mz^2*(-1 + sw^2)*
         GaugeXi[Q])*(s*(d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(3*s + t)) + 
        mz^2*(1 - sw^2)*(-3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*((3 + d)*s + t)) + 
        (mz^2*(1 - sw^2)*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*((-3 + d)*s - 
              t)) - 2^(1 + d)*Pi^d*s*((-6 + d)*s - 2*t))*GaugeXi[Q] + 
        (mz^2*(1 - sw^2)*(-3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*((-3 + 2*d)*s - 
              t)) + s*(d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(3*s + t)))*
         GaugeXi[Q]^2 + mz^2*(1 - sw^2)*(-(d*(2*Pi)^d*s) + 
          2^(1 + d)*Pi^d*(3*s + t))*GaugeXi[Q]^3) - 
      2*(1 - d)*s*((2*Pi)^(3*d)*((-4 + d)*s^2*(s + t) + 
          (-4 + d)*mz^4*(-1 + sw^2)^2*(s + t) + 2*mz^2*(1 - sw^2)*
           ((8 - 5*d + d^2)*s^2 + (20 - 11*d + 2*d^2)*s*t + 4*t^2)) - 
        2^(1 + 3*d)*Pi^(3*d)*((-4 + d)*s^2*(s + t) + mz^4*(-1 + sw^2)^2*
           ((-2 + d)*s + 2*(-3 + d)*t) + mz^2*(1 - sw^2)*
           ((12 - 9*d + 2*d^2)*s^2 + (36 - 21*d + 4*d^2)*s*t + 8*t^2))*
         GaugeXi[Q] + (2*Pi)^(3*d)*(-2*d^2*mz^2*s*(-1 + sw^2)*(s + 2*t) - 
          4*(s^3 + s^2*t + 6*mz^2*s*(-1 + sw^2)*t + 2*mz^2*(-1 + sw^2)*t*
             (2*mz^2*(-1 + sw^2) + t)) + d*(s^2*(s + t) + 
            6*mz^2*s*(-1 + sw^2)*(s + 3*t) + 2*mz^4*(-1 + sw^2)^2*(s + 3*t)))*
         GaugeXi[Q]^2 - 2^(1 + 3*d)*mz^2*Pi^(3*d)*(1 - sw^2)*
         ((-4 + d)*s*(s + t) + mz^2*(1 - sw^2)*((-2 + d)*s + 2*(-3 + d)*t))*
         GaugeXi[Q]^3 + (-4 + d)*mz^4*(2*Pi)^(3*d)*(-1 + sw^2)^2*(s + t)*
         GaugeXi[Q]^4)))/((-1 + d)*mz^4*Pi^(4*d)*(mz^2 - s)*s*sw^6*
     (1 - sw^2)^3*(-1 + GaugeXi[Q])^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{((-I/9)*2^(2 - d)*(16 - 7*d + d^2)*EL^6*
     ((-2 + d)*s^2 + 4*s*t + 4*t^2))/((-4 + d)*Pi^d*s^2), 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
  {((-I/9)*2^(-3 - 2*d)*EL^6*(3*(-15 + d)*d^3*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(2*s^2*(48 + 160*sw^2 - 256*sw^4 - 
          9*d^2*(-4 - 5*sw^2 + 8*sw^4) + d^3*(3 - 5*sw^2 + 8*sw^4) + 
          3*d*(-23 - 50*sw^2 + 80*sw^4)) + s*(-36*d^3 + 3*d^4 + 
          128*(3 - 5*sw^2 + 8*sw^4) - 8*d*(51 - 35*sw^2 + 56*sw^4) + 
          d^2*(177 - 40*sw^2 + 64*sw^4))*t + 2*(16 - 7*d + d^2)*
         (3 - 20*sw^2 + 32*sw^4)*t^2)))/((-4 + d)*Pi^(2*d)*(mz^2 - s)*s*sw^2*
     (-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}}, 
 {{((I/9)*2^(-1 - d)*EL^6*(-2*mz^2 + (-7 + d)*s)*(1 - 4*sw^2 + 8*sw^4)*
     ((-2 + d)*s^2 + 4*s*t + 4*t^2))/(Pi^d*s^3*sw^2*(-1 + sw^2)), 0, 0, 
   ((I/9)*2^(-1 - d)*EL^6*(2*mz^2 + 3*s)*(1 - 4*sw^2 + 8*sw^4)*
     ((-2 + d)*s^2 + 4*s*t + 4*t^2))/(mz^2*Pi^d*s^3*sw^2*(-1 + sw^2)), 0, 0, 
   0, ((I/9)*2^(-1 - d)*EL^6*(1 - 4*sw^2 + 8*sw^4)*((-2 + d)*s^2 + 4*s*t + 
      4*t^2))/(mz^2*Pi^d*s^2*sw^2*(-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/9)*2^(-1 - 2*d)*EL^6*(1 - 4*sw^2 + 8*sw^4)*
     (2^(1 + d)*mz^4*Pi^d*((-2 + d)*s^2 + 4*s*t + 4*t^2) + 
      2^(1 + d)*Pi^d*s^2*((-2 + d)*s^2 + 4*s*t + 4*t^2) + 
      mz^2*s*(-(d^2*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*((-8 + 5*d)*s^2 - 
          2*(-8 + d)*s*t - 2*(-8 + d)*t^2))))/(Pi^(2*d)*s^3*sw^2*
     (-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
  {((I/9)*2^(-5 - d)*EL^6*(2*mz^2 - (-7 + d)*s)*
     (s^2*(3*d^2*(1 - 6*sw^2 + 12*sw^4) + 4*(3 - 14*sw^2 + 12*sw^4 + 
          72*sw^6 - 64*sw^8) + 4*d*(-3 + 16*sw^2 - 24*sw^4 - 36*sw^6 + 
          32*sw^8)) + 2*s*(-15*d*(1 - 6*sw^2 + 12*sw^4) + 
        3*d^2*(1 - 6*sw^2 + 12*sw^4) + 8*(3 - 20*sw^2 + 48*sw^4 - 36*sw^6 + 
          32*sw^8))*t + 4*(3 - 26*sw^2 + 84*sw^4 - 144*sw^6 + 128*sw^8)*t^2))/
    (Pi^d*s^2*(-mz^2 + s)*sw^4*(-1 + sw^2)^2), 0, 0, 
   ((I/9)*2^(-5 - d)*EL^6*(2*mz^2 + 3*s)*
     (s^2*(3*d^2*(1 - 6*sw^2 + 12*sw^4) + 4*(3 - 14*sw^2 + 12*sw^4 + 
          72*sw^6 - 64*sw^8) + 4*d*(-3 + 16*sw^2 - 24*sw^4 - 36*sw^6 + 
          32*sw^8)) + 2*s*(-15*d*(1 - 6*sw^2 + 12*sw^4) + 
        3*d^2*(1 - 6*sw^2 + 12*sw^4) + 8*(3 - 20*sw^2 + 48*sw^4 - 36*sw^6 + 
          32*sw^8))*t + 4*(3 - 26*sw^2 + 84*sw^4 - 144*sw^6 + 128*sw^8)*t^2))/
    (mz^2*Pi^d*(mz^2 - s)*s^2*sw^4*(-1 + sw^2)^2), 0, 0, 0, 
   ((I/9)*2^(-5 - d)*EL^6*(s^2*(3*d^2*(1 - 6*sw^2 + 12*sw^4) + 
        4*(3 - 14*sw^2 + 12*sw^4 + 72*sw^6 - 64*sw^8) + 
        4*d*(-3 + 16*sw^2 - 24*sw^4 - 36*sw^6 + 32*sw^8)) + 
      2*s*(-15*d*(1 - 6*sw^2 + 12*sw^4) + 3*d^2*(1 - 6*sw^2 + 12*sw^4) + 
        8*(3 - 20*sw^2 + 48*sw^4 - 36*sw^6 + 32*sw^8))*t + 
      4*(3 - 26*sw^2 + 84*sw^4 - 144*sw^6 + 128*sw^8)*t^2))/
    (mz^2*Pi^d*(mz^2 - s)*s*sw^4*(-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((I/9)*2^(-5 - d)*EL^6*(2*mz^4 - (-8 + d)*mz^2*s + 2*s^2)*
     (s^2*(3*d^2*(1 - 6*sw^2 + 12*sw^4) + 4*(3 - 14*sw^2 + 12*sw^4 + 
          72*sw^6 - 64*sw^8) + 4*d*(-3 + 16*sw^2 - 24*sw^4 - 36*sw^6 + 
          32*sw^8)) + 2*s*(-15*d*(1 - 6*sw^2 + 12*sw^4) + 
        3*d^2*(1 - 6*sw^2 + 12*sw^4) + 8*(3 - 20*sw^2 + 48*sw^4 - 36*sw^6 + 
          32*sw^8))*t + 4*(3 - 26*sw^2 + 84*sw^4 - 144*sw^6 + 128*sw^8)*t^2))/
    (Pi^d*s^2*(-mz^2 + s)*sw^4*(-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}}, 
 {{((-I/9)*2^(-3 - 2*d)*EL^6*(3*(-15 + d)*d^3*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(2*s^2*(48 + 160*sw^2 - 256*sw^4 - 
          9*d^2*(-4 - 5*sw^2 + 8*sw^4) + d^3*(3 - 5*sw^2 + 8*sw^4) + 
          3*d*(-23 - 50*sw^2 + 80*sw^4)) + s*(-36*d^3 + 3*d^4 + 
          128*(3 - 5*sw^2 + 8*sw^4) - 8*d*(51 - 35*sw^2 + 56*sw^4) + 
          d^2*(177 - 40*sw^2 + 64*sw^4))*t + 2*(16 - 7*d + d^2)*
         (3 - 20*sw^2 + 32*sw^4)*t^2)))/((-4 + d)*Pi^(2*d)*(mz^2 - s)*s*sw^2*
     (-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, 
  {((-I/9)*8^(-2 - d)*EL^6*(9*(-15 + d)*d^3*(2*Pi)^(2*d)*s^2 + 
      2^(1 + 2*d)*Pi^(2*d)*(2*s^2*(3*d^4*sw^2*(-5 + 8*sw^2) - 
          18*d^2*(-6 + 40*sw^2 - 51*sw^4 - 40*sw^6 + 32*sw^8) + 
          d^3*(9 + 165*sw^2 - 238*sw^4 - 80*sw^6 + 64*sw^8) - 
          16*(-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 128*sw^8) + 
          3*d*(-69 + 460*sw^2 - 476*sw^4 - 800*sw^6 + 640*sw^8)) + 
        s*(-36*d^3*(3 - 20*sw^2 + 32*sw^4) + d^4*(9 - 60*sw^2 + 96*sw^4) + 
          128*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8) - 
          8*d*(153 - 1020*sw^2 + 1814*sw^4 - 560*sw^6 + 448*sw^8) + 
          d^2*(531 - 3540*sw^2 + 5872*sw^4 - 640*sw^6 + 512*sw^8))*t + 
        2*(16 - 7*d + d^2)*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*
         t^2)))/((-4 + d)*Pi^(3*d)*(mz^2 - s)^2*sw^4*(-1 + sw^2)^2), 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{((-I/9)*2^(-5 - d)*EL^6*(2*mz^2 - (-7 + d)*s)*
     (s^2*(3*d^2*(1 - 6*sw^2 + 12*sw^4) + 4*(3 - 14*sw^2 + 12*sw^4 + 
          72*sw^6 - 64*sw^8) + 4*d*(-3 + 16*sw^2 - 24*sw^4 - 36*sw^6 + 
          32*sw^8)) + 2*s*(-15*d*(1 - 6*sw^2 + 12*sw^4) + 
        3*d^2*(1 - 6*sw^2 + 12*sw^4) + 8*(3 - 20*sw^2 + 48*sw^4 - 36*sw^6 + 
          32*sw^8))*t + 4*(3 - 26*sw^2 + 84*sw^4 - 144*sw^6 + 128*sw^8)*t^2))/
    (Pi^d*(mz^2 - s)*s^2*sw^4*(-1 + sw^2)^2), 0, 0, 
   ((I/9)*2^(-5 - d)*EL^6*(2*mz^2 + 3*s)*
     (s^2*(3*d^2*(1 - 6*sw^2 + 12*sw^4) + 4*(3 - 14*sw^2 + 12*sw^4 + 
          72*sw^6 - 64*sw^8) + 4*d*(-3 + 16*sw^2 - 24*sw^4 - 36*sw^6 + 
          32*sw^8)) + 2*s*(-15*d*(1 - 6*sw^2 + 12*sw^4) + 
        3*d^2*(1 - 6*sw^2 + 12*sw^4) + 8*(3 - 20*sw^2 + 48*sw^4 - 36*sw^6 + 
          32*sw^8))*t + 4*(3 - 26*sw^2 + 84*sw^4 - 144*sw^6 + 128*sw^8)*t^2))/
    (mz^2*Pi^d*(mz^2 - s)*s^2*sw^4*(-1 + sw^2)^2), 0, 0, 0, 
   ((I/9)*2^(-5 - 2*d)*EL^6*(3*d^2*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(s^2*(6 - 28*sw^2 + 24*sw^4 + 144*sw^6 - 128*sw^8 + 
          9*d^2*sw^2*(-1 + 2*sw^2) + d*(-6 + 32*sw^2 - 48*sw^4 - 72*sw^6 + 
            64*sw^8)) + s*(-15*d*(1 - 6*sw^2 + 12*sw^4) + 
          3*d^2*(1 - 6*sw^2 + 12*sw^4) + 8*(3 - 20*sw^2 + 48*sw^4 - 36*sw^6 + 
            32*sw^8))*t + 2*(3 - 26*sw^2 + 84*sw^4 - 144*sw^6 + 128*sw^8)*
         t^2)))/(mz^2*Pi^(2*d)*(mz^2 - s)*s*sw^4*(-1 + sw^2)^2), 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((I/9)*2^(-5 - d)*EL^6*(2*mz^4 - (-8 + d)*mz^2*s + 2*s^2)*
     (s^2*(3*d^2*(1 - 6*sw^2 + 12*sw^4) + 4*(3 - 14*sw^2 + 12*sw^4 + 
          72*sw^6 - 64*sw^8) + 4*d*(-3 + 16*sw^2 - 24*sw^4 - 36*sw^6 + 
          32*sw^8)) + 2*s*(-15*d*(1 - 6*sw^2 + 12*sw^4) + 
        3*d^2*(1 - 6*sw^2 + 12*sw^4) + 8*(3 - 20*sw^2 + 48*sw^4 - 36*sw^6 + 
          32*sw^8))*t + 4*(3 - 26*sw^2 + 84*sw^4 - 144*sw^6 + 128*sw^8)*t^2))/
    (Pi^d*s^2*(-mz^2 + s)*sw^4*(-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, 
  {((-I/9)*4^(-1 - d)*EL^6*((-1/2 + sw^2)^4*
       (((3 - 4*sw^2)^2*((-11 + d)*d^2*(2*Pi)^d*s^3 - 2^(1 + d)*mz^2*Pi^d*
            ((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 4*t^2) + 
           2^(1 + d)*Pi^d*s*(2*(-7 + 8*d)*s^2 + (-56 + 43*d - 12*d^2 + d^3)*s*
              t + 2*(-7 + d)*t^2)))/4 + 
        4*sw^4*(2^(1 + d)*mz^2*Pi^d*((8 - 6*d + d^2)*s^2 + 2*(4 - 5*d + d^2)*
             s*t - 4*t^2) - s*((-13 + d)*d^2*(2*Pi)^d*s^2 + 
            2^(1 + d)*Pi^d*((-28 + 25*d)*s^2 + (-28 + 39*d - 12*d^2 + d^3)*s*
               t - 2*(-7 + d)*t^2)))) + 
      sw^8*(4*sw^4*((-11 + d)*d^2*(2*Pi)^d*s^3 - 2^(1 + d)*mz^2*Pi^d*
           ((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 4*t^2) + 
          2^(1 + d)*Pi^d*s*(2*(-7 + 8*d)*s^2 + (-56 + 43*d - 12*d^2 + d^3)*s*
             t + 2*(-7 + d)*t^2)) + ((3 - 4*sw^2)^2*
          (2^(1 + d)*mz^2*Pi^d*((8 - 6*d + d^2)*s^2 + 2*(4 - 5*d + d^2)*s*t - 
             4*t^2) - s*((-13 + d)*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
              ((-28 + 25*d)*s^2 + (-28 + 39*d - 12*d^2 + d^3)*s*t - 2*
                (-7 + d)*t^2))))/4)))/(Pi^(2*d)*(mz^2 - s)^2*sw^6*
     (-1 + sw^2)^2*(s - s*sw^2)), 0, 0, 
   ((I/9)*2^(-2 - d)*EL^6*(2*mz^2 + 3*s)*
     ((sw^8*(3 - 4*sw^2)^2*((8 - 6*d + d^2)*s^2 + 2*(4 - 5*d + d^2)*s*t - 
         4*t^2))/4 - 4*sw^12*((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 
        4*t^2) + (-1/2 + sw^2)^4*(4*sw^4*((8 - 6*d + d^2)*s^2 + 
          2*(4 - 5*d + d^2)*s*t - 4*t^2) - 
        ((3 - 4*sw^2)^2*((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 4*t^2))/
         4)))/(mz^2*Pi^d*(mz^2 - s)^2*sw^6*(-1 + sw^2)^2*(s - s*sw^2)), 0, 0, 
   0, ((-I/9)*EL^6*((sw^8*(3 - 4*sw^2)^2*(-(d^2*(2*Pi)^d*s^2) + 
         2^(1 + d)*Pi^d*((-4 + 3*d)*s^2 - (4 - 5*d + d^2)*s*t + 2*t^2)))/4 + 
      4*sw^12*(d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*(-2*(-1 + d)*s^2 + 
          (8 - 5*d + d^2)*s*t + 2*t^2)) - (-1/2 + sw^2)^4*
       (4*sw^4*(d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*((4 - 3*d)*s^2 + 
            (4 - 5*d + d^2)*s*t - 2*t^2)) - 
        ((3 - 4*sw^2)^2*(d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*(-2*(-1 + d)*s^2 + 
             (8 - 5*d + d^2)*s*t + 2*t^2)))/4)))/(2^(2*(1 + d))*mz^2*Pi^(2*d)*
     (mz^2 - s)^2*sw^6*(1 - sw^2)*(-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/9)*2^(-2 - d)*EL^6*(2*mz^4 - (-8 + d)*mz^2*s + 2*s^2)*
     ((sw^8*(3 - 4*sw^2)^2*((8 - 6*d + d^2)*s^2 + 2*(4 - 5*d + d^2)*s*t - 
         4*t^2))/4 - 4*sw^12*((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 
        4*t^2) + (-1/2 + sw^2)^4*(4*sw^4*((8 - 6*d + d^2)*s^2 + 
          2*(4 - 5*d + d^2)*s*t - 4*t^2) - 
        ((3 - 4*sw^2)^2*((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 4*t^2))/
         4)))/(Pi^d*(mz^2 - s)^2*sw^6*(-1 + sw^2)^2*(s - s*sw^2)), 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{((I/9)*2^(-4 - d)*EL^6*((-7 + d)*s + 2*mz^2*(-1 + sw^2))*
     (s^2*(3*d^2 - 4*d*(3 + 2*sw^2) + 4*(3 + 4*sw^2)) + 
      2*s*(24 - 15*d + 3*d^2 - 16*sw^2)*t + 4*(3 - 8*sw^2)*t^2))/
    (Pi^d*(mz^2 - s)*s^2*sw^4*(-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/9)*2^(-4 - d)*EL^6*(-3*s + 2*mz^2*(-1 + sw^2))*
     (s^2*(-3*d^2 + 4*d*(3 + 2*sw^2) - 4*(3 + 4*sw^2)) + 
      2*s*(-24 + 15*d - 3*d^2 + 16*sw^2)*t + 4*(-3 + 8*sw^2)*t^2))/
    (mz^2*Pi^d*(mz^2 - s)*s^2*sw^4*(-1 + sw^2)^2), 0, 0, 0, 0, 
   ((I/9)*4^(-2 - d)*EL^6*(-3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
       (s^2*(-6 + 6*d - 8*sw^2 + 4*d*sw^2) + s*(-24 + 15*d - 3*d^2 + 16*sw^2)*
         t + 2*(-3 + 8*sw^2)*t^2)))/(mz^2*Pi^(2*d)*(mz^2 - s)*s*sw^4*
     (-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 
   ((I/9)*2^(-4 - d)*EL^6*(2*s^2 + (-8 + d)*mz^2*s*(-1 + sw^2) + 
      2*mz^4*(-1 + sw^2)^2)*(s^2*(3*d^2 - 4*d*(3 + 2*sw^2) + 
        4*(3 + 4*sw^2)) + 2*s*(24 - 15*d + 3*d^2 - 16*sw^2)*t + 
      4*(3 - 8*sw^2)*t^2))/(Pi^d*s^2*(-mz^2 + s)*sw^4*(-1 + sw^2)), 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
  {((-I/9)*EL^6*(-1/2 + sw^2)*
     (((3 - 4*sw^2)^2*((-11 + d)*d^2*(2*Pi)^d*s^3 - 2^(1 + d)*mz^2*Pi^d*
          (1 - sw^2)*((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 4*t^2) + 
         2^(1 + d)*Pi^d*s*(2*(-7 + 8*d)*s^2 + (-56 + 43*d - 12*d^2 + d^3)*s*
            t + 2*(-7 + d)*t^2)))/4 + 
      4*sw^4*(2^(1 + d)*mz^2*Pi^d*(1 - sw^2)*((8 - 6*d + d^2)*s^2 + 
          2*(4 - 5*d + d^2)*s*t - 4*t^2) - s*((-13 + d)*d^2*(2*Pi)^d*s^2 + 
          2^(1 + d)*Pi^d*((-28 + 25*d)*s^2 + (-28 + 39*d - 12*d^2 + d^3)*s*
             t - 2*(-7 + d)*t^2)))))/(2^(2*(2 + d))*Pi^(2*d)*(mz^2 - s)^2*s*
     sw^6*(-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, ((I/9)*2^(-7 - d)*EL^6*(-1 + 2*sw^2)*
     (3*s - 2*mz^2*(-1 + sw^2))*(s^2*(36 - 96*sw^2 - 64*sw^4 + 
        d^2*(9 - 24*sw^2) + 4*d*(-9 + 24*sw^2 + 8*sw^4)) - 
      2*s*(-15*d*(-3 + 8*sw^2) + 3*d^2*(-3 + 8*sw^2) - 
        8*(9 - 24*sw^2 + 8*sw^4))*t + 4*(9 - 24*sw^2 + 32*sw^4)*t^2))/
    (Pi^d*s*(mz^3 - mz*s)^2*sw^6*(-1 + sw^2)^3), 0, 0, 0, 0, 
   ((I/9)*2^(-7 - 2*d)*EL^6*(-1 + 2*sw^2)*(9*d^2*(2*Pi)^d*s^2 - 
      2^(1 + d)*Pi^d*(2*s^2*(-9 + 24*sw^2 + 6*d^2*sw^2 + 16*sw^4 + 
          d*(9 - 24*sw^2 - 8*sw^4)) + s*(-15*d*(-3 + 8*sw^2) + 
          3*d^2*(-3 + 8*sw^2) - 8*(9 - 24*sw^2 + 8*sw^4))*t - 
        2*(9 - 24*sw^2 + 32*sw^4)*t^2)))/(Pi^(2*d)*(mz^3 - mz*s)^2*sw^6*
     (-1 + sw^2)^3), 0, 0, 0, 0, 0, 0, 
   ((I/9)*2^(-7 - d)*EL^6*(-1 + 2*sw^2)*
     (2*s^2 + (-8 + d)*mz^2*s*(-1 + sw^2) + 2*mz^4*(-1 + sw^2)^2)*
     (s^2*(36 - 96*sw^2 - 64*sw^4 + d^2*(9 - 24*sw^2) + 
        4*d*(-9 + 24*sw^2 + 8*sw^4)) - 2*s*(-15*d*(-3 + 8*sw^2) + 
        3*d^2*(-3 + 8*sw^2) - 8*(9 - 24*sw^2 + 8*sw^4))*t + 
      4*(9 - 24*sw^2 + 32*sw^4)*t^2))/(Pi^d*(mz^2 - s)^2*s*sw^6*
     (-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, ((-I/9)*2^(-1 - d)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
     (s - 4*d*s + 4*(-1 + d)*mz^2*(-1 + sw^2) + s*GaugeXi[Q]))/
    ((-1 + d)*mz^2*Pi^d*s^3*sw^2*(-1 + sw^2)), 
   ((-I/9)*2^(-2 - d)*EL^6*(s + 2*mz^2*(-1 + sw^2))*
     (s^2 - 4*(-3 + 2*d)*mz^2*s*(-1 + sw^2) + 4*(-1 + d)*mz^4*(-1 + sw^2)^2)*
     ((-2 + d)*s^2 + 4*s*t + 4*t^2))/((-1 + d)*mz^4*Pi^d*s^3*sw^2*
     (-1 + sw^2)^2), ((I/9)*2^(1 - 2*d)*EL^6*mz^2*(-1 + sw^2)*
     (2^(1 + d)*Pi^d*s*((-2 + d)*s^2 + 4*s*t + 4*t^2) + 
      mz^2*(-1 + sw^2)*(-(d*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*
         (s^2 - 2*s*t - 2*t^2))))/(Pi^(2*d)*s^3*sw^2), 0, 0, 
   ((I/9)*2^(-1 - 2*d)*EL^6*(2^(1 + d)*(-2 + 3*d)*mz^2*Pi^d*(1 - sw^2)*
       ((-2 + d)*s^2 + 4*s*t + 4*t^2) + 
      d*s*(d*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*(-s^2 + 2*s*t + 2*t^2))))/
    ((-1 + d)*d*mz^4*Pi^(2*d)*s^2*sw^2*(-1 + sw^2)^2), 
   ((I/9)*EL^6*(-(s*(d*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*(-s^2 + 2*s*t + 
           2*t^2) + 2^(1 + d)*mz^2*Pi^d*(1 - sw^2)*((-2 + d)*s^2 + 4*s*t + 
           4*t^2))) + 2^(2 + d)*mz^2*Pi^d*(1 - sw^2)*(s - 2*mz^2*(-1 + sw^2))*
       ((-2 + d)*s^2 + 4*s*t + 4*t^2)*GaugeXi[Q]))/
    (2^(2*(1 + d))*(-1 + d)*mz^4*Pi^(2*d)*s^2*sw^2*(-1 + sw^2)^2), 
   ((-I/9)*2^(-1 - d)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
     (d*s - (-4 - d + 4*d^2)*mz^2*(-1 + sw^2) - d*mz^2*(-1 + sw^2)*
       GaugeXi[Q]))/((-1 + d)*d*mz^4*Pi^d*s^2*sw^2*(-1 + sw^2)^2), 
   ((I/9)*2^(-1 - d)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
     (s^2 - 2*(-3 + 2*d)*mz^2*s*(-1 + sw^2) + mz^4*(-1 + sw^2)^2 - 
      2*mz^2*(-1 + sw^2)*(-s + mz^2*(-1 + sw^2))*GaugeXi[Q] + 
      mz^4*(-1 + sw^2)^2*GaugeXi[Q]^2))/((-1 + d)*mz^4*Pi^d*s^2*sw^2*
     (-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((I/9)*2^(-5 - d)*EL^6*(-1 + 2*sw^2)*
     (s^2*(3*d^2 - 4*d*(3 + 2*sw^2) + 4*(3 + 4*sw^2)) + 
      2*s*(24 - 15*d + 3*d^2 - 16*sw^2)*t + 4*(3 - 8*sw^2)*t^2)*
     (s - 4*d*s + 4*(-1 + d)*mz^2*(-1 + sw^2) + s*GaugeXi[Q]))/
    ((-1 + d)*mz^2*Pi^d*(mz^2 - s)*s^2*sw^4*(-1 + sw^2)^2), 
   ((-I/9)*4^(-3 - 4*d)*EL^6*(-1 + 2*sw^2)*(s + 2*mz^2*(-1 + sw^2))*
     (s^2 - 4*(-3 + 2*d)*mz^2*s*(-1 + sw^2) + 4*(-1 + d)*mz^4*(-1 + sw^2)^2)*
     (s^2*(-3*d^2 + 4*d*(3 + 2*sw^2) - 4*(3 + 4*sw^2)) + 
      2*s*(-24 + 15*d - 3*d^2 + 16*sw^2)*t + 4*(-3 + 8*sw^2)*t^2)*
     ((2*Pi)^(7*d) - 2^(1 + 7*d)*Pi^(7*d)*GaugeXi[Q] + 
      (2*Pi)^(7*d)*GaugeXi[Q]^2))/((-1 + d)*mz^4*Pi^(8*d)*(mz^2 - s)*s^2*sw^4*
     (-1 + sw^2)^3*(-1 + GaugeXi[Q])^2), 
   ((-I/9)*2^(-3 - d)*EL^6*mz^2*(-1 + 2*sw^2)*(-2*s + mz^2*(-1 + sw^2))*
     (s^2*(-3*d^2 + 4*d*(3 + 2*sw^2) - 4*(3 + 4*sw^2)) + 
      2*s*(-24 + 15*d - 3*d^2 + 16*sw^2)*t + 4*(-3 + 8*sw^2)*t^2))/
    (Pi^d*(mz^2 - s)*s^2*sw^4), 0, 0, ((-I/9)*2^(-5 - 6*d)*EL^6*(-1 + 2*sw^2)*
     (-(d*s) + 2*(-2 + 3*d)*mz^2*(-1 + sw^2))*
     (s^2*(-3*d^2 + 4*d*(3 + 2*sw^2) - 4*(3 + 4*sw^2)) + 
      2*s*(-24 + 15*d - 3*d^2 + 16*sw^2)*t + 4*(-3 + 8*sw^2)*t^2)*
     ((2*Pi)^(5*d) - 2^(1 + 5*d)*Pi^(5*d)*GaugeXi[Q] + 
      (2*Pi)^(5*d)*GaugeXi[Q]^2))/((-1 + d)*d*mz^4*Pi^(6*d)*(mz^2 - s)*s*sw^4*
     (-1 + sw^2)^3*(-1 + GaugeXi[Q])^2), 
   ((I/9)*EL^6*(-1/2 + sw^2)*((-1 + d)*(2*Pi)^(4*d)*(-s + 2*mz^2*(-1 + sw^2))*
       (s*(-6 + 3*d - 8*sw^2) + 2*(-3 + 8*sw^2)*t)*(-1 + GaugeXi[Q])^2*
       (s + 2*mz^2*(-1 + sw^2)*GaugeXi[Q])^2 - (2*Pi)^(4*d)*s*(-3 + 8*sw^2)*
       (s - 2*mz^2*(-1 + sw^2))*(-1 + GaugeXi[Q])^2*
       (d*s^2 + 4*d*mz^2*s*(-1 + sw^2)*GaugeXi[Q] + 4*(-1 + d)*mz^4*
         (-1 + sw^2)^2*GaugeXi[Q]^2) + (2*Pi)^(3*d)*
       (-(2^(1 + d)*mz^2*Pi^d*(-1 + sw^2)*(s*(-12 + 3*d + 8*sw^2) + 
           2*(-3 + 8*sw^2)*t)) + s*(3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
           (s*(-6 + 4*sw^2) + (-3 + 8*sw^2)*t)))*(-1 + GaugeXi[Q])^2*
       (s*(d*s + 2*t) + 4*mz^2*(-1 + sw^2)*(d*s + 2*t)*GaugeXi[Q] + 
        4*(-1 + d)*mz^4*(-1 + sw^2)^2*GaugeXi[Q]^2) + 
      (2*Pi)^(3*d)*s*(-3 + 8*sw^2)*(d*s^2 + 4*d*mz^2*s*(-1 + sw^2)*
         GaugeXi[Q] + 4*(-1 + d)*mz^4*(-1 + sw^2)^2*GaugeXi[Q]^2)*
       (-((2*Pi)^d*s) + 2^(1 + d)*mz^2*Pi^d*(-1 + sw^2) + 
        2^(1 + d)*Pi^d*(s - 2*mz^2*(-1 + sw^2))*GaugeXi[Q] + 
        (-((2*Pi)^d*s) + 2^(1 + d)*mz^2*Pi^d*(-1 + sw^2))*GaugeXi[Q]^2) + 
      2^(1 + 3*d)*(1 - d)*Pi^(3*d)*(s + 2*mz^2*(-1 + sw^2)*GaugeXi[Q])*
       (-(s*(2^(1 + d)*mz^2*Pi^d*(-1 + sw^2)*(s*(-6 + 3*d - 8*sw^2) + 
              2*(-3 + 8*sw^2)*t) + s*(-3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(
                s*(3 + 4*sw^2) + (3 - 8*sw^2)*t))))/2 + 
        2*(-3*2^(-1 + d)*d*Pi^d*s^3 + (2*Pi)^d*s^2*(s*(3 + 4*sw^2) + 
            (3 - 8*sw^2)*t) - (3*mz^2*s*(-1 + sw^2)*(-3*d*(2*Pi)^d*s + 
             2^(1 + d)*Pi^d*(s*(3 + 4*sw^2) + (3 - 8*sw^2)*t)))/2 + 
          mz^4*(-3*d*(2*Pi)^d*s*(1 + sw^4) + 2^(1 + d)*Pi^d*
             (s*(3 + (-2 + 3*d)*sw^2 - 5*sw^4 + 4*sw^6) - (-1 + sw^2)^2*(-3 + 
                8*sw^2)*t)))*GaugeXi[Q] + 
        ((3*2^(1 + d)*mz^2*Pi^d*s*(-1 + sw^2)*(s*(6 - 3*d + 8*sw^2) + 
             2*(3 - 8*sw^2)*t) + 2^(3 + d)*mz^4*Pi^d*(-1 + sw^2)^2*
            (s*(-6 + 3*d - 8*sw^2) + 2*(-3 + 8*sw^2)*t) - 
           s^2*(-3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(3 + 4*sw^2) + 
               (3 - 8*sw^2)*t)))*GaugeXi[Q]^2)/2 + mz^2*(2*Pi)^d*(-1 + sw^2)*
         (-s + 2*mz^2*(-1 + sw^2))*(s*(6 - 3*d + 8*sw^2) + 2*(3 - 8*sw^2)*t)*
         GaugeXi[Q]^3) - 4*(1 - d)*(s - 2*mz^2*(-1 + sw^2))*
       (-(2^(-1 + 4*d)*Pi^(4*d)*s^2*(-6 + 3*d - 8*sw^2)*t) + 
        (2*Pi)^(4*d)*s*(-6 + 3*d - 8*sw^2)*(s - 2*mz^2*(-1 + sw^2))*t*
         GaugeXi[Q] + 2^(-1 + 4*d)*Pi^(4*d)*(8*mz^2*s*(-6 + 3*d - 8*sw^2)*
           (-1 + sw^2)*t + s^2*(6 - 3*d + 8*sw^2)*t + 2*mz^4*(-1 + sw^2)^2*
           (s*(-6 + 3*d - 8*sw^2) + 2*(-3 + 8*sw^2)*t))*GaugeXi[Q]^2 + 
        2^(1 + 4*d)*mz^2*Pi^(4*d)*(-1 + sw^2)*(s*(6 - 3*d + 8*sw^2)*t + 
          mz^2*(-1 + sw^2)*(s*(6 - 3*d + 8*sw^2) + 2*(3 - 8*sw^2)*t))*
         GaugeXi[Q]^3 - mz^4*(2*Pi)^(4*d)*(-1 + sw^2)^2*
         (s*(6 - 3*d + 8*sw^2) + 2*(3 - 8*sw^2)*t)*GaugeXi[Q]^4)))/
    (2^(5*(1 + d))*(-1 + d)*mz^4*Pi^(5*d)*(mz^2 - s)*s*sw^4*(1 - sw^2)^3*
     (-1 + GaugeXi[Q])^2), ((I/9)*2^(-5 - d)*EL^6*(-1 + 2*sw^2)*
     (s^2*(-3*d^2 + 4*d*(3 + 2*sw^2) - 4*(3 + 4*sw^2)) + 
      2*s*(-24 + 15*d - 3*d^2 + 16*sw^2)*t + 4*(-3 + 8*sw^2)*t^2)*
     (-(d*s) + (-4 - d + 4*d^2)*mz^2*(-1 + sw^2) + d*mz^2*(-1 + sw^2)*
       GaugeXi[Q]))/((-1 + d)*d*mz^4*Pi^d*(mz^2 - s)*s*sw^4*(-1 + sw^2)^3), 
   ((I/9)*2^(-5 - d)*EL^6*(-1 + 2*sw^2)*
     (s^2*(-3*d^2 + 4*d*(3 + 2*sw^2) - 4*(3 + 4*sw^2)) + 
      2*s*(-24 + 15*d - 3*d^2 + 16*sw^2)*t + 4*(-3 + 8*sw^2)*t^2)*
     (s^2 - 2*(-3 + 2*d)*mz^2*s*(-1 + sw^2) + mz^4*(-1 + sw^2)^2 - 
      2*mz^2*(-1 + sw^2)*(-s + mz^2*(-1 + sw^2))*GaugeXi[Q] + 
      mz^4*(-1 + sw^2)^2*GaugeXi[Q]^2))/((-1 + d)*mz^4*Pi^d*(mz^2 - s)*s*sw^4*
     (-1 + sw^2)^3), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((I/9)*2^(-4 - d)*EL^6*(s^2*(3*d^2 - 4*d*(3 + 2*sw^2) + 4*(3 + 4*sw^2)) + 
      2*s*(24 - 15*d + 3*d^2 - 16*sw^2)*t + 4*(3 - 8*sw^2)*t^2)*
     (s - 4*d*s + 4*(-1 + d)*mz^2*(-1 + sw^2) + s*GaugeXi[Q]))/
    ((-1 + d)*mz^2*Pi^d*(mz^2 - s)*s^2*sw^4*(-1 + sw^2)), 
   ((I/9)*2^(-5 - d)*EL^6*(s + 2*mz^2*(-1 + sw^2))*
     (s^2 - 4*(-3 + 2*d)*mz^2*s*(-1 + sw^2) + 4*(-1 + d)*mz^4*(-1 + sw^2)^2)*
     (s^2*(3*d^2 - 4*d*(3 + 2*sw^2) + 4*(3 + 4*sw^2)) + 
      2*s*(24 - 15*d + 3*d^2 - 16*sw^2)*t + 4*(3 - 8*sw^2)*t^2))/
    ((-1 + d)*mz^4*Pi^d*(mz^2 - s)*s^2*sw^4*(-1 + sw^2)^2), 
   ((-I/9)*2^(-2 - d)*EL^6*mz^2*(-1 + sw^2)*(-2*s + mz^2*(-1 + sw^2))*
     (s^2*(-3*d^2 + 4*d*(3 + 2*sw^2) - 4*(3 + 4*sw^2)) + 
      2*s*(-24 + 15*d - 3*d^2 + 16*sw^2)*t + 4*(-3 + 8*sw^2)*t^2))/
    (Pi^d*(mz^2 - s)*s^2*sw^4), 0, 0, 
   ((I/9)*4^(-2 - 3*d)*EL^6*(-(d*s) + 2*(-2 + 3*d)*mz^2*(-1 + sw^2))*
     (s^2*(3*d^2 - 4*d*(3 + 2*sw^2) + 4*(3 + 4*sw^2)) + 
      2*s*(24 - 15*d + 3*d^2 - 16*sw^2)*t + 4*(3 - 8*sw^2)*t^2)*
     ((2*Pi)^(5*d) - 2^(1 + 5*d)*Pi^(5*d)*GaugeXi[Q] + 
      (2*Pi)^(5*d)*GaugeXi[Q]^2))/((-1 + d)*d*mz^4*Pi^(6*d)*(mz^2 - s)*s*sw^4*
     (-1 + sw^2)^2*(-1 + GaugeXi[Q])^2), 
   ((-I/9)*4^(-2 - 3*d)*EL^6*
     (-((-1 + d)*(2*Pi)^(5*d)*(s - 2*mz^2*(-1 + sw^2))*
        (s*(-6 + 3*d - 8*sw^2) + 2*(-3 + 8*sw^2)*t)*(-1 + GaugeXi[Q])^2*
        (s + 2*mz^2*(-1 + sw^2)*GaugeXi[Q])^2) - 2^(1 + 5*d)*Pi^(5*d)*s*
       (-3/2 + 4*sw^2)*(s - 2*mz^2*(-1 + sw^2))*(-1 + GaugeXi[Q])^2*
       (d*s^2 + 4*d*mz^2*s*(-1 + sw^2)*GaugeXi[Q] + 4*(-1 + d)*mz^4*
         (-1 + sw^2)^2*GaugeXi[Q]^2) + 2^(-1 + 4*d)*Pi^(4*d)*
       (-(2^(1 + d)*mz^2*Pi^d*(-1 + sw^2)*(s*(-12 + 3*d + 8*sw^2) + 
           2*(-3 + 8*sw^2)*t)) + s*(3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
           (s*(-6 + 4*sw^2) + (-3 + 8*sw^2)*t)))*(-1 + GaugeXi[Q])^2*
       (s*(d*s + 2*t) + 4*mz^2*(-1 + sw^2)*(d*s + 2*t)*GaugeXi[Q] + 
        4*(-1 + d)*mz^4*(-1 + sw^2)^2*GaugeXi[Q]^2) - 
      2*(1 - d)*(s - 2*mz^2*(-1 + sw^2))*
       (-(2^(-1 + 5*d)*Pi^(5*d)*s^2*(-6 + 3*d - 8*sw^2)*t) + 
        (2*Pi)^(5*d)*s*(-6 + 3*d - 8*sw^2)*(s - 2*mz^2*(-1 + sw^2))*t*
         GaugeXi[Q] + 2^(-1 + 5*d)*Pi^(5*d)*(8*mz^2*s*(-6 + 3*d - 8*sw^2)*
           (-1 + sw^2)*t + s^2*(6 - 3*d + 8*sw^2)*t + 2*mz^4*(-1 + sw^2)^2*
           (s*(-6 + 3*d - 8*sw^2) + 2*(-3 + 8*sw^2)*t))*GaugeXi[Q]^2 + 
        2^(1 + 5*d)*mz^2*Pi^(5*d)*(-1 + sw^2)*(s*(6 - 3*d + 8*sw^2)*t + 
          mz^2*(-1 + sw^2)*(s*(6 - 3*d + 8*sw^2) + 2*(3 - 8*sw^2)*t))*
         GaugeXi[Q]^3 - mz^4*(2*Pi)^(5*d)*(-1 + sw^2)^2*
         (s*(6 - 3*d + 8*sw^2) + 2*(3 - 8*sw^2)*t)*GaugeXi[Q]^4)))/
    ((-1 + d)*mz^4*Pi^(6*d)*(mz^2 - s)*s*sw^4*(-1 + sw^2)^2*
     (-1 + GaugeXi[Q])^2), ((I/9)*2^(-4 - d)*EL^6*
     (s^2*(3*d^2 - 4*d*(3 + 2*sw^2) + 4*(3 + 4*sw^2)) + 
      2*s*(24 - 15*d + 3*d^2 - 16*sw^2)*t + 4*(3 - 8*sw^2)*t^2)*
     (d*s - (-4 - d + 4*d^2)*mz^2*(-1 + sw^2) - d*mz^2*(-1 + sw^2)*
       GaugeXi[Q]))/((-1 + d)*d*mz^4*Pi^d*(mz^2 - s)*s*sw^4*(-1 + sw^2)^2), 
   ((-I/9)*2^(-4 - d)*EL^6*(s^2*(3*d^2 - 4*d*(3 + 2*sw^2) + 4*(3 + 4*sw^2)) + 
      2*s*(24 - 15*d + 3*d^2 - 16*sw^2)*t + 4*(3 - 8*sw^2)*t^2)*
     (s^2 - 2*(-3 + 2*d)*mz^2*s*(-1 + sw^2) + mz^4*(-1 + sw^2)^2 - 
      2*mz^2*(-1 + sw^2)*(-s + mz^2*(-1 + sw^2))*GaugeXi[Q] + 
      mz^4*(-1 + sw^2)^2*GaugeXi[Q]^2))/((-1 + d)*mz^4*Pi^d*(mz^2 - s)*s*sw^4*
     (-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((I/9)*2^(-4 - d)*EL^6*(-1/2 + sw^2)*
     (-4*sw^4*((8 - 6*d + d^2)*s^2 + 2*(4 - 5*d + d^2)*s*t - 4*t^2) + 
      ((3 - 4*sw^2)^2*((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 4*t^2))/4)*
     ((-1 + 4*d)*s - 4*(-1 + d)*mz^2*(-1 + sw^2) - s*GaugeXi[Q]))/
    ((-1 + d)*Pi^d*s*(mz^3 - mz*s)^2*sw^6*(-1 + sw^2)^2), 
   ((I/9)*2^(-7 - 6*d)*EL^6*(-1/2 + sw^2)*
     ((2*Pi)^(5*d)*s^2*(9 - 24*sw^2 + 32*sw^4)*(s + 2*mz^2*(-1 + sw^2))*
       (d*s^2 + 4*d*mz^2*s*(-1 + sw^2) + 4*(-1 + d)*mz^4*(-1 + sw^2)^2)*
       (-1 + GaugeXi[Q])^2 + 2^(2 + 5*d)*(-1 + d)*mz^4*Pi^(5*d)*(-1 + sw^2)^2*
       (9 - 24*sw^2 + 32*sw^4)*(s + 2*mz^2*(-1 + sw^2))*
       ((-2 + d)*s^2 - 4*s*t - 4*(-1 + d)*t^2)*(-1 + GaugeXi[Q])^2 - 
      (2*Pi)^(5*d)*s*(s + 2*mz^2*(-1 + sw^2))*
       (s*(36 - 9*d - 96*sw^2 + 24*d*sw^2 + 32*sw^4) + 
        2*(9 - 24*sw^2 + 32*sw^4)*t)*(4*(-1 + d)*mz^4*(-1 + sw^2)^2 + 
        s*(d*s + 2*t) + 4*mz^2*(-1 + sw^2)*(d*s + 2*t))*(-1 + GaugeXi[Q])^2 + 
      (-1 + d)*(2*Pi)^(5*d)*s*(s + 2*mz^2*(-1 + sw^2))*
       (8*mz^4*(-1 + sw^2)^2*(16*(-3 + d)*s*sw^4 + (9 - 24*sw^2 + 32*sw^4)*
           t) + s^2*(s*(18 - 48*sw^2 - 32*sw^4 + 3*d*(-3 + 8*sw^2)) + 
          2*(9 - 24*sw^2 + 32*sw^4)*t) + 4*mz^2*s*(-1 + sw^2)*
         (s*(18 - 48*sw^2 - 32*sw^4 + 3*d*(-3 + 8*sw^2)) + 
          2*(9 - 24*sw^2 + 32*sw^4)*t))*(-1 + GaugeXi[Q])^2 + 
      2^(4 + 5*d)*(1 - d)*mz^4*Pi^(5*d)*(-1 + sw^2)^2*(s + 2*t)*
       (((3 - 4*sw^2)^2*(2*(-2 + d)*mz^2*(-1 + sw^2)*((-2 + d)*s - 2*t) + 
           s*((12 - 8*d + d^2)*s - 2*(2 + d)*t)))/4 + 
        4*sw^4*(-2*(-2 + d)*mz^2*(-1 + sw^2)*((-4 + d)*s + 2*t) - 
          s*((24 - 10*d + d^2)*s + 2*(2 + d)*t)))*(-1 + GaugeXi[Q])^2 - 
      8*(1 - d)*s*(4*sw^4*((-4 + d)*(2*Pi)^(5*d)*s^3*t + 2^(2 + 5*d)*(-3 + d)*
           mz^6*Pi^(5*d)*(-1 + sw^2)^3*((-4 + d)*s + 2*t) - 
          2^(1 + 5*d)*mz^4*Pi^(5*d)*s*(-1 + sw^2)^2*(3*(12 - 7*d + d^2)*s + 
            2*(47 - 27*d + 4*d^2)*t) + 2^(1 + 5*d)*mz^2*Pi^(5*d)*s*(1 - sw^2)*
           (2*(8 - 6*d + d^2)*s^2 + (28 - 23*d + 4*d^2)*s*t - 8*t^2)) + 
        ((3 - 4*sw^2)^2*(2^(2 + 5*d)*(-3 + d)*mz^6*Pi^(5*d)*(1 - sw^2)^3*
            ((-2 + d)*s - 2*t) - (-2 + d)*(2*Pi)^(5*d)*s^3*t + 
           2^(1 + 5*d)*mz^4*Pi^(5*d)*s*(-1 + sw^2)^2*(3*(6 - 5*d + d^2)*s + 
             2*(37 - 25*d + 4*d^2)*t) - 2^(1 + 5*d)*mz^2*Pi^(5*d)*s*
            (1 - sw^2)*(2*(-2 + d)^2*s^2 + (38 - 23*d + 4*d^2)*s*t + 8*t^2)))/
         4)*(-1 + GaugeXi[Q])^2 - 8*(1 - d)*s*(s/2 + mz^2*(-1 + sw^2))*
       (((3 - 4*sw^2)^2*(-4*mz^2*s*(-1 + sw^2)*((-2 + d)*s - 2*t) + 
           s^2*(-((-2 + d)*s) + 2*t) + 4*mz^4*(-1 + sw^2)^2*
            ((10 - 7*d + d^2)*s - 2*(-3 + d)*t)))/4 + 
        4*sw^4*(s^2*((-4 + d)*s + 2*t) + 4*mz^2*s*(-1 + sw^2)*
           ((-4 + d)*s + 2*t) - 4*mz^4*(-1 + sw^2)^2*((8 - 5*d + d^2)*s + 
            2*(-3 + d)*t)))*((2*Pi)^(5*d) - 2^(1 + 5*d)*Pi^(5*d)*GaugeXi[Q] + 
        (2*Pi)^(5*d)*GaugeXi[Q]^2) - (2*Pi)^(4*d)*s^2*(9 - 24*sw^2 + 32*sw^4)*
       (d*s^2 + 4*d*mz^2*s*(-1 + sw^2) + 4*(-1 + d)*mz^4*(-1 + sw^2)^2)*
       (-((2*Pi)^d*s) - 2^(1 + d)*mz^2*Pi^d*(-1 + sw^2) + 
        2^(1 + d)*Pi^d*(s + 2*mz^2*(-1 + sw^2))*GaugeXi[Q] - 
        ((2*Pi)^d*s + 2^(1 + d)*mz^2*Pi^d*(-1 + sw^2))*GaugeXi[Q]^2)))/
    ((-1 + d)*mz^4*Pi^(6*d)*(mz^2 - s)^2*s*sw^6*(-1 + sw^2)^3*
     (-1 + GaugeXi[Q])^2), ((-I/9)*2^(-5 - d)*EL^6*mz^2*(-1 + 2*sw^2)*
     (-2*s + mz^2*(-1 + sw^2))*(s^2*(36 - 96*sw^2 - 64*sw^4 + 
        d^2*(9 - 24*sw^2) + 4*d*(-9 + 24*sw^2 + 8*sw^4)) - 
      2*s*(-15*d*(-3 + 8*sw^2) + 3*d^2*(-3 + 8*sw^2) - 
        8*(9 - 24*sw^2 + 8*sw^4))*t + 4*(9 - 24*sw^2 + 32*sw^4)*t^2))/
    (Pi^d*(mz^2 - s)^2*s*sw^6), 0, 0, ((I/9)*4^(-2 - 3*d)*EL^6*(-1/2 + sw^2)*
     (d*s - 2*(-2 + 3*d)*mz^2*(-1 + sw^2))*
     (-4*sw^4*((8 - 6*d + d^2)*s^2 + 2*(4 - 5*d + d^2)*s*t - 4*t^2) + 
      ((3 - 4*sw^2)^2*((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 4*t^2))/4)*
     ((2*Pi)^(5*d) - 2^(1 + 5*d)*Pi^(5*d)*GaugeXi[Q] + 
      (2*Pi)^(5*d)*GaugeXi[Q]^2))/((-1 + d)*d*mz^4*Pi^(6*d)*(mz^2 - s)^2*sw^6*
     (-1 + sw^2)^3*(-1 + GaugeXi[Q])^2), 
   ((I/9)*2^(-5 - 6*d)*EL^6*(-1/2 + sw^2)*
     ((1 - d)*(2*Pi)^(5*d)*(s - 2*mz^2*(-1 + sw^2))*
       (((3 - 4*sw^2)^2*((-2 + d)*s - 2*t))/4 - 4*sw^4*((-4 + d)*s + 2*t))*
       (-1 + GaugeXi[Q])^2*(s + 2*mz^2*(-1 + sw^2)*GaugeXi[Q])^2 + 
      2^(-2 + 5*d)*Pi^(5*d)*s*(9 - 24*sw^2 + 32*sw^4)*
       (s - 2*mz^2*(-1 + sw^2))*(-1 + GaugeXi[Q])^2*
       (d*s^2 + 4*d*mz^2*s*(-1 + sw^2)*GaugeXi[Q] + 4*(-1 + d)*mz^4*
         (-1 + sw^2)^2*GaugeXi[Q]^2) + 4^(-1 + 2*d)*Pi^(4*d)*s*
       (9 - 24*sw^2 + 32*sw^4)*(d*s^2 + 4*d*mz^2*s*(-1 + sw^2)*GaugeXi[Q] + 
        4*(-1 + d)*mz^4*(-1 + sw^2)^2*GaugeXi[Q]^2)*
       ((2*Pi)^d*s - 2^(1 + d)*mz^2*Pi^d*(-1 + sw^2) + 
        2^(1 + d)*Pi^d*(-s + 2*mz^2*(-1 + sw^2))*GaugeXi[Q] + 
        ((2*Pi)^d*s - 2^(1 + d)*mz^2*Pi^d*(-1 + sw^2))*GaugeXi[Q]^2) - 
      (2*Pi)^(4*d)*(s*(d*s + 2*t) + 4*mz^2*(-1 + sw^2)*(d*s + 2*t)*
         GaugeXi[Q] + 4*(-1 + d)*mz^4*(-1 + sw^2)^2*GaugeXi[Q]^2)*
       (4*sw^4*(2^(1 + d)*mz^2*Pi^d*(1 - sw^2)*((-2 + d)*s + 2*t) + 
          s*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(-s + t))) + 
        ((3 - 4*sw^2)^2*(2^(1 + d)*mz^2*Pi^d*(-1 + sw^2)*((-4 + d)*s - 2*t) + 
           s*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(2*s + t))))/4 + 
        2^(1 + d)*Pi^d*(s - 2*mz^2*(-1 + sw^2))*
         (((3 - 4*sw^2)^2*((-4 + d)*s - 2*t))/4 - 4*sw^4*((-2 + d)*s + 2*t))*
         GaugeXi[Q] + (4*sw^4*(2^(1 + d)*mz^2*Pi^d*(1 - sw^2)*
             ((-2 + d)*s + 2*t) + s*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(-s + 
                t))) + ((3 - 4*sw^2)^2*(2^(1 + d)*mz^2*Pi^d*(-1 + sw^2)*
              ((-4 + d)*s - 2*t) + s*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*
                (2*s + t))))/4)*GaugeXi[Q]^2) - 2^(1 + 4*d)*(1 - d)*Pi^(4*d)*
       (s/2 + mz^2*(-1 + sw^2)*GaugeXi[Q])*
       (s*(4*sw^4*(2^(1 + d)*mz^2*Pi^d*(1 - sw^2)*((-4 + d)*s + 2*t) + 
            s*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(-2*s + t))) + 
          ((3 - 4*sw^2)^2*(2^(1 + d)*mz^2*Pi^d*(-1 + sw^2)*((-2 + d)*s - 2*
                t) + s*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(s + t))))/4) + 
        2*(4*sw^4*(3*mz^2*s*(1 - sw^2)*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(
                2*s - t)) - 2^(1 + d)*mz^4*Pi^d*(-1 + sw^2)^2*
             ((-4 + d)*s + 2*t) - s^2*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(-2*s + 
                t))) + ((3 - 4*sw^2)^2*(2^(1 + d)*mz^4*Pi^d*(-1 + sw^2)^2*
              ((-2 + d)*s - 2*t) + s^2*(d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*
                (s + t)) - 3*mz^2*s*(1 - sw^2)*(-(d*(2*Pi)^d*s) + 2^(1 + d)*
                Pi^d*(s + t))))/4)*GaugeXi[Q] + 
        (4*sw^4*(-3*2^(1 + d)*mz^2*Pi^d*s*(-1 + sw^2)*((-4 + d)*s + 2*t) + 
            2^(3 + d)*mz^4*Pi^d*(-1 + sw^2)^2*((-4 + d)*s + 2*t) + 
            s^2*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(-2*s + t))) - 
          ((3 - 4*sw^2)^2*(-3*2^(1 + d)*mz^2*Pi^d*s*(-1 + sw^2)*
              ((-2 + d)*s - 2*t) + 2^(3 + d)*mz^4*Pi^d*(-1 + sw^2)^2*
              ((-2 + d)*s - 2*t) + s^2*(d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*
                (s + t))))/4)*GaugeXi[Q]^2 + 2^(1 + d)*mz^2*Pi^d*(1 - sw^2)*
         (s - 2*mz^2*(-1 + sw^2))*(((3 - 4*sw^2)^2*((-2 + d)*s - 2*t))/4 - 
          4*sw^4*((-4 + d)*s + 2*t))*GaugeXi[Q]^3) + 
      2*(1 - d)*(s - 2*mz^2*(-1 + sw^2))*
       ((2*Pi)^(5*d)*s^2*(-9/2 + 12*sw^2 + 8*sw^4 + d*(9/4 - 6*sw^2))*t + 
        2^(-1 + 5*d)*Pi^(5*d)*s*(s - 2*mz^2*(-1 + sw^2))*
         (18 - 48*sw^2 - 32*sw^4 + 3*d*(-3 + 8*sw^2))*t*GaugeXi[Q] - 
        (2*Pi)^(5*d)*(((3 - 4*sw^2)^2*(2*mz^4*(-1 + sw^2)^2*((-2 + d)*s - 2*
                t) - (-2 + d)*s^2*t + 8*(-2 + d)*mz^2*s*(-1 + sw^2)*t))/4 + 
          4*sw^4*((-4 + d)*s^2*t - 8*(-4 + d)*mz^2*s*(-1 + sw^2)*t - 
            2*mz^4*(-1 + sw^2)^2*((-4 + d)*s + 2*t)))*GaugeXi[Q]^2 + 
        2^(2 + 5*d)*mz^2*Pi^(5*d)*(1 - sw^2)*
         (-((3 - 4*sw^2)^2*(mz^2*(-1 + sw^2)*((-2 + d)*s - 2*t) + 
              (-2 + d)*s*t))/4 + 4*sw^4*((-4 + d)*s*t + mz^2*(-1 + sw^2)*
             ((-4 + d)*s + 2*t)))*GaugeXi[Q]^3 - 2^(1 + 5*d)*mz^4*Pi^(5*d)*
         (-1 + sw^2)^2*(((3 - 4*sw^2)^2*((-2 + d)*s - 2*t))/4 - 
          4*sw^4*((-4 + d)*s + 2*t))*GaugeXi[Q]^4)))/
    ((-1 + d)*mz^4*Pi^(6*d)*(mz^2 - s)^2*sw^4*(-1 + sw^2)^3*
     (sw - sw*GaugeXi[Q])^2), ((I/9)*2^(-7 - d)*EL^6*(-1 + 2*sw^2)*
     (s^2*(36 - 96*sw^2 - 64*sw^4 + d^2*(9 - 24*sw^2) + 
        4*d*(-9 + 24*sw^2 + 8*sw^4)) - 2*s*(-15*d*(-3 + 8*sw^2) + 
        3*d^2*(-3 + 8*sw^2) - 8*(9 - 24*sw^2 + 8*sw^4))*t + 
      4*(9 - 24*sw^2 + 32*sw^4)*t^2)*(-(d*s) + (-4 - d + 4*d^2)*mz^2*
       (-1 + sw^2) + d*mz^2*(-1 + sw^2)*GaugeXi[Q]))/
    ((-1 + d)*d*mz^4*Pi^d*(mz^2 - s)^2*sw^6*(-1 + sw^2)^3), 
   ((I/9)*2^(-7 - d)*EL^6*(-1 + 2*sw^2)*
     (s^2*(36 - 96*sw^2 - 64*sw^4 + d^2*(9 - 24*sw^2) + 
        4*d*(-9 + 24*sw^2 + 8*sw^4)) - 2*s*(-15*d*(-3 + 8*sw^2) + 
        3*d^2*(-3 + 8*sw^2) - 8*(9 - 24*sw^2 + 8*sw^4))*t + 
      4*(9 - 24*sw^2 + 32*sw^4)*t^2)*(s^2 - 2*(-3 + 2*d)*mz^2*s*(-1 + sw^2) + 
      mz^4*(-1 + sw^2)^2 - 2*mz^2*(-1 + sw^2)*(-s + mz^2*(-1 + sw^2))*
       GaugeXi[Q] + mz^4*(-1 + sw^2)^2*GaugeXi[Q]^2))/
    ((-1 + d)*mz^4*Pi^d*(mz^2 - s)^2*sw^6*(-1 + sw^2)^3), 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{((-I/81)*2^(4 - d)*(16 - 7*d + d^2)*EL^6*
     ((-2 + d)*s^2 + 4*s*t + 4*t^2))/((-4 + d)*Pi^d*s^2), 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
  {((I/81)*2^(-1 - d)*(16 - 7*d + d^2)*EL^6*
     (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
      2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
      4*(3 - 20*sw^2 + 32*sw^4)*t^2))/((-4 + d)*Pi^d*s*(-mz^2 + s)*sw^2*
     (-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}}, 
 {{((-I/81)*2^(-1 - 2*d)*EL^6*(9 - 24*sw^2 + 32*sw^4)*
     (-(d*(1 + d)*(2*Pi)^d*s^3) + 2^(1 + d)*mz^2*Pi^d*((-2 + d)*s^2 + 4*s*t + 
        4*t^2) + 2^(1 + d)*Pi^d*s*((-7 + 5*d)*s^2 - 2*(-7 + d)*s*t - 
        2*(-7 + d)*t^2)))/(Pi^(2*d)*s^3*sw^2*(-1 + sw^2)), 0, 0, 
   ((I/81)*2^(-1 - d)*EL^6*(2*mz^2 + 3*s)*(9 - 24*sw^2 + 32*sw^4)*
     ((-2 + d)*s^2 + 4*s*t + 4*t^2))/(mz^2*Pi^d*s^3*sw^2*(-1 + sw^2)), 0, 0, 
   0, ((I/81)*2^(-1 - d)*EL^6*(9 - 24*sw^2 + 32*sw^4)*
     ((-2 + d)*s^2 + 4*s*t + 4*t^2))/(mz^2*Pi^d*s^2*sw^2*(-1 + sw^2)), 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/81)*2^(-1 - 2*d)*EL^6*(9 - 24*sw^2 + 32*sw^4)*
     (2^(1 + d)*mz^4*Pi^d*((-2 + d)*s^2 + 4*s*t + 4*t^2) + 
      2^(1 + d)*Pi^d*s^2*((-2 + d)*s^2 + 4*s*t + 4*t^2) + 
      mz^2*s*(-(d^2*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*((-8 + 5*d)*s^2 - 
          2*(-8 + d)*s*t - 2*(-8 + d)*t^2))))/(Pi^(2*d)*s^3*sw^2*
     (-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
  {((-I/81)*2^(-5 - 3*d)*EL^6*(2*mz^2*(27*d^2*(2*Pi)^(2*d)*s^2 + 
        2^(1 + 2*d)*Pi^(2*d)*(2*s^2*(27 - 54*sw^2 - 72*sw^4 + 352*sw^6 - 
            256*sw^8 + 9*d^2*sw^2*(-3 + 4*sw^2) + d*(-27 + 81*sw^2 - 
              36*sw^4 - 176*sw^6 + 128*sw^8)) + 
          s*(-45*d*(3 - 12*sw^2 + 16*sw^4) + 9*d^2*(3 - 12*sw^2 + 16*sw^4) + 
            8*(27 - 135*sw^2 + 252*sw^4 - 176*sw^6 + 128*sw^8))*t + 
          2*(27 - 216*sw^2 + 576*sw^4 - 704*sw^6 + 512*sw^8)*t^2)) - 
      s*(27*(-11 + d)*d^2*(2*Pi)^(2*d)*s^2 + 2^(1 + 2*d)*Pi^(2*d)*
         (2*s^2*(9*d^3*sw^2*(-3 + 4*sw^2) + 2*d^2*sw^2*(135 - 144*sw^2 - 
              88*sw^4 + 64*sw^6) - 9*d*(-24 + 69*sw^2 - 20*sw^4 - 176*sw^6 + 
              128*sw^8) + 7*(-27 + 54*sw^2 + 72*sw^4 - 352*sw^6 + 
              256*sw^8)) + s*(-108*d^2*(3 - 12*sw^2 + 16*sw^4) + 
            9*d^3*(3 - 12*sw^2 + 16*sw^4) - 56*(27 - 135*sw^2 + 252*sw^4 - 
              176*sw^6 + 128*sw^8) + d*(1161 - 4860*sw^2 + 7056*sw^4 - 
              1408*sw^6 + 1024*sw^8))*t + 2*(-7 + d)*(27 - 216*sw^2 + 
            576*sw^4 - 704*sw^6 + 512*sw^8)*t^2))))/
    (Pi^(3*d)*(mz^2 - s)*s^2*sw^4*(-1 + sw^2)^2), 0, 0, 
   ((I/81)*2^(-5 - d)*EL^6*(2*mz^2 + 3*s)*
     (s^2*(9*d^2*(3 - 12*sw^2 + 16*sw^4) + 4*d*(-27 + 81*sw^2 - 36*sw^4 - 
          176*sw^6 + 128*sw^8) - 4*(-27 + 54*sw^2 + 72*sw^4 - 352*sw^6 + 
          256*sw^8)) + 2*s*(-45*d*(3 - 12*sw^2 + 16*sw^4) + 
        9*d^2*(3 - 12*sw^2 + 16*sw^4) + 8*(27 - 135*sw^2 + 252*sw^4 - 
          176*sw^6 + 128*sw^8))*t + 4*(27 - 216*sw^2 + 576*sw^4 - 704*sw^6 + 
        512*sw^8)*t^2))/(mz^2*Pi^d*(mz^2 - s)*s^2*sw^4*(-1 + sw^2)^2), 0, 0, 
   0, ((I/81)*2^(-5 - d)*EL^6*(s^2*(9*d^2*(3 - 12*sw^2 + 16*sw^4) + 
        4*d*(-27 + 81*sw^2 - 36*sw^4 - 176*sw^6 + 128*sw^8) - 
        4*(-27 + 54*sw^2 + 72*sw^4 - 352*sw^6 + 256*sw^8)) + 
      2*s*(-45*d*(3 - 12*sw^2 + 16*sw^4) + 9*d^2*(3 - 12*sw^2 + 16*sw^4) + 
        8*(27 - 135*sw^2 + 252*sw^4 - 176*sw^6 + 128*sw^8))*t + 
      4*(27 - 216*sw^2 + 576*sw^4 - 704*sw^6 + 512*sw^8)*t^2))/
    (mz^2*Pi^d*(mz^2 - s)*s*sw^4*(-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((I/162)*EL^6*((2^(1 - d)*(1/2 - 2*sw^2)*(8*sw^6 + (-3 + 4*sw^2)^3/8)*
        ((-2 + d)*s^2*t^2 + mz^4*((-2 + d)*s^2 + 4*(-1 + d)*s*t + 
           4*(-1 + d)*t^2) + 2*mz^2*s*t*(-2*t + d*(s + 2*t))))/Pi^d - 
      (8^(-1 - d)*(s*t + mz^2*(s + 2*t))*(2^(1 + 2*d)*Pi^(2*d)*s*
          (9*d*s*(3 - 12*sw^2 + 16*sw^4) + 2*s*(-27 + 54*sw^2 + 72*sw^4 - 
             352*sw^6 + 256*sw^8) - (-4 + d)*(27 - 216*sw^2 + 576*sw^4 - 
             704*sw^6 + 512*sw^8)*t) + mz^2*(27*d^2*(2*Pi)^(2*d)*s + 
           2^(1 + 2*d)*Pi^(2*d)*(s*(18*d^2*sw^2*(-3 + 4*sw^2) + d*
                (-81 + 378*sw^2 - 648*sw^4 + 352*sw^6 - 256*sw^8) + 4*
                (27 - 135*sw^2 + 252*sw^4 - 176*sw^6 + 128*sw^8)) - 
             (-2 + d)*(27 - 216*sw^2 + 576*sw^4 - 704*sw^6 + 512*sw^8)*t))))/
       Pi^(3*d) + (s^2*(8*sw^6*(1/2 - sw^2)*(2*(-2 + d)*mz^4 + 
           mz^2*((-80 + 60*d - 14*d^2 + d^3)*s + 2*(-52 + 44*d - 12*d^2 + d^
                3)*t) - 2*(-2 + d)*((-4 + d)*s^2 + 2*(-4 + d)*s*t - t^2)) - 
         (sw^2*(-3 + 4*sw^2)^3*(2*(-2 + d)*mz^4 + 
            mz^2*((-80 + 60*d - 14*d^2 + d^3)*s + 2*(-52 + 44*d - 12*d^2 + 
                d^3)*t) - 2*(-2 + d)*((-4 + d)*s^2 + 2*(-4 + d)*s*t - t^2)))/
          8 + ((-1 + 2*sw^2)*(-3 + 4*sw^2)^3*(-2*(-2 + d)*mz^4 + 
            mz^2*((-40 + 40*d - 12*d^2 + d^3)*s + 2*(-56 + 46*d - 12*d^2 + 
                d^3)*t) - 2*((-2 + d)^2*s^2 + 2*(10 - 6*d + d^2)*s*t + 
              (-2 + d)*t^2)))/16 - 8*sw^8*(2*(-2 + d)*mz^4 + 
           mz^2*(-((-40 + 40*d - 12*d^2 + d^3)*s) - 2*(-56 + 46*d - 12*d^2 + 
               d^3)*t) + 2*((-2 + d)^2*s^2 + 2*(10 - 6*d + d^2)*s*t + 
             (-2 + d)*t^2))))/(2*Pi)^d))/((mz^2 - s)*s^2*sw^4*(-1 + sw^2)^2), 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{((I/9)*2^(-1 - d)*EL^6*((-7 + d)*s + 2*mz^2*(-1 + sw^2))*
     ((-2 + d)*s^2 + 4*s*t + 4*t^2)*CKM[1, 1]*CKMC[1, 1])/(Pi^d*s^3*sw^2), 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((I/9)*2^(-1 - d)*EL^6*(-3*s + 2*mz^2*(-1 + sw^2))*
     ((-2 + d)*s^2 + 4*s*t + 4*t^2)*CKM[1, 1]*CKMC[1, 1])/
    (mz^2*Pi^d*s^3*sw^2*(-1 + sw^2)), 0, 0, 0, 0, 
   ((-I/9)*2^(-1 - d)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2)*CKM[1, 1]*
     CKMC[1, 1])/(mz^2*Pi^d*s^2*sw^2*(-1 + sw^2)), 0, 0, 0, 0, 0, 0, 
   ((-I/9)*2^(-1 - d)*EL^6*(2*s^2 + (-8 + d)*mz^2*s*(-1 + sw^2) + 
      2*mz^4*(-1 + sw^2)^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2)*CKM[1, 1]*
     CKMC[1, 1])/(Pi^d*s^3*sw^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {((I/9)*2^(-5 - 2*d)*EL^6*(-3 + 4*sw^2)*
     (-((-11 + d)*d^2*(2*Pi)^d*s^3) + 2^(1 + d)*mz^2*Pi^d*(-1 + sw^2)*
       (-(s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2))) - 
        2*s*(8 - 5*d + d^2 - 8*sw^2)*t + 4*(-1 + 4*sw^2)*t^2) + 
      2^(1 + d)*Pi^d*s*(2*s^2*(7 + 14*sw^2 + d^2*sw^2 - d*(8 + 9*sw^2)) - 
        (-7 + d)*s*(8 - 5*d + d^2 - 8*sw^2)*t + 2*(-7 + d)*(-1 + 4*sw^2)*
         t^2))*CKM[1, 1]*CKMC[1, 1])/(Pi^(2*d)*(mz^2 - s)*s^2*sw^4*
     (-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, ((I/9)*2^(-5 - d)*EL^6*(-3 + 4*sw^2)*(-3*s + 2*mz^2*(-1 + sw^2))*
     (-(s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2))) - 
      2*s*(8 - 5*d + d^2 - 8*sw^2)*t + 4*(-1 + 4*sw^2)*t^2)*CKM[1, 1]*
     CKMC[1, 1])/(mz^2*Pi^d*(mz^2 - s)*s^2*sw^4*(-1 + sw^2)^2), 0, 0, 0, 0, 
   ((-I/9)*2^(-5 - d)*EL^6*(-3 + 4*sw^2)*
     (-(s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2))) - 
      2*s*(8 - 5*d + d^2 - 8*sw^2)*t + 4*(-1 + 4*sw^2)*t^2)*CKM[1, 1]*
     CKMC[1, 1])/(mz^2*Pi^d*(mz^2 - s)*s*sw^4*(-1 + sw^2)^2), 0, 0, 0, 0, 0, 
   0, ((I/9)*EL^6*(3 - 4*sw^2)*
     ((-1/2 + sw^2)*(2^(1 + d)*Pi^d*s^2*((-2 + d)^2*s^2 + 
          2*(8 - 5*d + d^2)*s*t + 4*t^2) + 2^(1 + d)*mz^4*Pi^d*(-1 + sw^2)^2*
         ((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 4*t^2) + 
        mz^2*s*(1 - sw^2)*(-(d^3*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*
           (2*(8 - 9*d + 3*d^2)*s^2 - (-64 + 48*d - 13*d^2 + d^3)*s*t - 
            2*(-8 + d)*t^2))) - 
      sw^2*(2^(1 + d)*Pi^d*s^2*((8 - 6*d + d^2)*s^2 + 2*(4 - 5*d + d^2)*s*t - 
          4*t^2) + 2^(1 + d)*mz^4*Pi^d*(-1 + sw^2)^2*((8 - 6*d + d^2)*s^2 + 
          2*(4 - 5*d + d^2)*s*t - 4*t^2) + mz^2*s*(1 - sw^2)*
         (-(d^3*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*((32 - 28*d + 7*d^2)*s^2 - 
            (-32 + 44*d - 13*d^2 + d^3)*s*t + 2*(-8 + d)*t^2))))*CKM[1, 1]*
     CKMC[1, 1])/(2^(2*(2 + d))*Pi^(2*d)*(mz^2 - s)*s^2*sw^4*(-1 + sw^2)), 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{((I/81)*2^(-1 - d)*(16 - 7*d + d^2)*EL^6*
     (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
      2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
      4*(3 - 20*sw^2 + 32*sw^4)*t^2))/((-4 + d)*Pi^d*s*(-mz^2 + s)*sw^2*
     (-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {((-I/81)*2^(-4 - d)*(16 - 7*d + d^2)*EL^6*
     (s^2*(d^2*(9 - 60*sw^2 + 96*sw^4) + 4*(9 - 60*sw^2 + 44*sw^4 + 
          160*sw^6 - 128*sw^8) + 4*d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
          64*sw^8)) + 2*s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
        d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 
          64*sw^8))*t + 4*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*
       t^2))/((-4 + d)*Pi^d*(mz^2 - s)^2*sw^4*(-1 + sw^2)^2), 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{((-I/81)*2^(-1 - 2*d)*EL^6*
     ((sw^2*(3 - 4*sw^2)^3*(-(d^2*(1 + d)*(2*Pi)^d*s^3) + 
         2^(1 + d)*mz^2*Pi^d*((8 - 6*d + d^2)*s^2 + 2*(4 - 5*d + d^2)*s*t - 
           4*t^2) + 2^(1 + d)*Pi^d*s*((28 - 25*d + 7*d^2)*s^2 - 
           (-28 + 39*d - 12*d^2 + d^3)*s*t + 2*(-7 + d)*t^2)))/8 - 
      8*sw^6*(-1/2 + sw^2)*(-(d^2*(1 + d)*(2*Pi)^d*s^3) + 
        2^(1 + d)*mz^2*Pi^d*((8 - 6*d + d^2)*s^2 + 2*(4 - 5*d + d^2)*s*t - 
          4*t^2) + 2^(1 + d)*Pi^d*s*((28 - 25*d + 7*d^2)*s^2 - 
          (-28 + 39*d - 12*d^2 + d^3)*s*t + 2*(-7 + d)*t^2)) - 
      8*sw^8*(d^2*(1 + d)*(2*Pi)^d*s^3 - 2^(1 + d)*mz^2*Pi^d*
         ((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 4*t^2) + 
        2^(1 + d)*Pi^d*s*(-2*(7 - 8*d + 3*d^2)*s^2 + 
          (-56 + 43*d - 12*d^2 + d^3)*s*t + 2*(-7 + d)*t^2)) + 
      ((3 - 4*sw^2)^3*(-1/2 + sw^2)*(d^2*(1 + d)*(2*Pi)^d*s^3 - 
         2^(1 + d)*mz^2*Pi^d*((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 
           4*t^2) + 2^(1 + d)*Pi^d*s*(-2*(7 - 8*d + 3*d^2)*s^2 + 
           (-56 + 43*d - 12*d^2 + d^3)*s*t + 2*(-7 + d)*t^2)))/8))/
    (Pi^(2*d)*(mz^2 - s)*s^2*sw^4*(-1 + sw^2)^2), 0, 0, 
   ((I/81)*2^(-5 - d)*EL^6*(2*mz^2 + 3*s)*
     (s^2*(9*d^2*(3 - 12*sw^2 + 16*sw^4) + 4*d*(-27 + 81*sw^2 - 36*sw^4 - 
          176*sw^6 + 128*sw^8) - 4*(-27 + 54*sw^2 + 72*sw^4 - 352*sw^6 + 
          256*sw^8)) + 2*s*(-45*d*(3 - 12*sw^2 + 16*sw^4) + 
        9*d^2*(3 - 12*sw^2 + 16*sw^4) + 8*(27 - 135*sw^2 + 252*sw^4 - 
          176*sw^6 + 128*sw^8))*t + 4*(27 - 216*sw^2 + 576*sw^4 - 704*sw^6 + 
        512*sw^8)*t^2))/(mz^2*Pi^d*(mz^2 - s)*s^2*sw^4*(-1 + sw^2)^2), 0, 0, 
   0, ((I/81)*2^(-5 - d)*EL^6*(s^2*(9*d^2*(3 - 12*sw^2 + 16*sw^4) + 
        4*d*(-27 + 81*sw^2 - 36*sw^4 - 176*sw^6 + 128*sw^8) - 
        4*(-27 + 54*sw^2 + 72*sw^4 - 352*sw^6 + 256*sw^8)) + 
      2*s*(-45*d*(3 - 12*sw^2 + 16*sw^4) + 9*d^2*(3 - 12*sw^2 + 16*sw^4) + 
        8*(27 - 135*sw^2 + 252*sw^4 - 176*sw^6 + 128*sw^8))*t + 
      4*(27 - 216*sw^2 + 576*sw^4 - 704*sw^6 + 512*sw^8)*t^2))/
    (mz^2*Pi^d*(mz^2 - s)*s*sw^4*(-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/81)*2^(-5 - d)*EL^6*(2*mz^4 - (-8 + d)*mz^2*s + 2*s^2)*
     (s^2*(9*d^2*(3 - 12*sw^2 + 16*sw^4) + 4*d*(-27 + 81*sw^2 - 36*sw^4 - 
          176*sw^6 + 128*sw^8) - 4*(-27 + 54*sw^2 + 72*sw^4 - 352*sw^6 + 
          256*sw^8)) + 2*s*(-45*d*(3 - 12*sw^2 + 16*sw^4) + 
        9*d^2*(3 - 12*sw^2 + 16*sw^4) + 8*(27 - 135*sw^2 + 252*sw^4 - 
          176*sw^6 + 128*sw^8))*t + 4*(27 - 216*sw^2 + 576*sw^4 - 704*sw^6 + 
        512*sw^8)*t^2))/(Pi^d*(mz^2 - s)*s^2*sw^4*(-1 + sw^2)^2), 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
  {((-I/81)*EL^6*((-2 + d)^2*(2*Pi)^d*s^2*(2*mz^2 + s)*(1/4 - sw^2 + 2*sw^4)*
       (16*sw^8 + (3 - 4*sw^2)^4/16) + (2^(1 + d)*Pi^d - d*(2*Pi)^d)*
       (1/4 - sw^2 + 2*sw^4)*(16*sw^8 + (3 - 4*sw^2)^4/16)*
       (s*(-((-2 + d)*s^2) + 4*s*t + 4*(-1 + d)*t^2) + 
        2*mz^2*((-2 + d)*s^2 + 4*(-1 + d)*s*t + 4*(-1 + d)*t^2)) + 
      (2 - d)*(2*Pi)^d*s^2*
       (sw^4*(((3 - 4*sw^2)^4*(4*(-2 + d)*mz^2 + (-80 + 60*d - 14*d^2 + d^3)*
              s + 2*(-52 + 44*d - 12*d^2 + d^3)*t))/16 + 
          16*sw^8*(4*(-2 + d)*mz^2 - (-40 + 40*d - 12*d^2 + d^3)*s - 
            2*(-56 + 46*d - 12*d^2 + d^3)*t)) + (-1/2 + sw^2)^2*
         (16*sw^8*(4*(-2 + d)*mz^2 + (-80 + 60*d - 14*d^2 + d^3)*s + 
            2*(-52 + 44*d - 12*d^2 + d^3)*t) + 
          ((3 - 4*sw^2)^4*(4*(-2 + d)*mz^2 - (-40 + 40*d - 12*d^2 + d^3)*s - 
             2*(-56 + 46*d - 12*d^2 + d^3)*t))/16)) - 
      2^(1 + d)*(2 - d)*Pi^d*(s + 2*t)*
       (sw^4*(((3 - 4*sw^2)^4*(2*(-4 + d)*s*(s + t) + (-2 + d)*mz^2*
              ((-2 + d)*s + 2*t)))/16 - 16*sw^8*
           ((-2 + d)*mz^2*((-4 + d)*s - 2*t) + 2*s*((-2 + d)*s - 
              (-4 + d)*t))) + (-1/2 + sw^2)^2*
         (16*sw^8*(2*(-4 + d)*s*(s + t) + (-2 + d)*mz^2*((-2 + d)*s + 2*t)) - 
          ((3 - 4*sw^2)^4*((-2 + d)*mz^2*((-4 + d)*s - 2*t) + 
             2*s*((-2 + d)*s - (-4 + d)*t)))/16)) + 
      (2 - d)*s^2*(sw^4*(-((3 - 4*sw^2)^4*(-(d^2*(2*Pi)^d*s) + 
              2^(1 + d)*Pi^d*(2*(-1 + d)*s - (-2 + d)*t)))/16 - 
          16*sw^8*(d^2*(2*Pi)^d*s - 2^(1 + d)*Pi^d*((-4 + 3*d)*s + 
              (-2 + d)*t))) + (-1/2 + sw^2)^2*
         (16*sw^8*(d^2*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(-2*(-1 + d)*s + 
              (-2 + d)*t)) + ((3 - 4*sw^2)^4*(-(d^2*(2*Pi)^d*s) + 
             2^(1 + d)*Pi^d*((-4 + 3*d)*s + (-2 + d)*t)))/16))))/
    (2^(2*(1 + d))*(-2 + d)*Pi^(2*d)*(mz^2 - s)^2*s*sw^6*(1 - sw^2)^3), 0, 0, 
   ((I/81)*2^(-2 - d)*EL^6*(2*mz^2 + 3*s)*
     ((sw^4*(3 - 4*sw^2)^4*((8 - 6*d + d^2)*s^2 + 2*(4 - 5*d + d^2)*s*t - 
         4*t^2))/16 - 16*sw^12*((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 
        4*t^2) + (-1/2 + sw^2)^2*(16*sw^8*((8 - 6*d + d^2)*s^2 + 
          2*(4 - 5*d + d^2)*s*t - 4*t^2) - 
        ((3 - 4*sw^2)^4*((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 4*t^2))/
         16)))/(mz^2*Pi^d*(mz^2 - s)^2*sw^6*(-1 + sw^2)^2*(s - s*sw^2)), 0, 
   0, 0, ((-I/81)*EL^6*((sw^4*(3 - 4*sw^2)^4*(-(d^2*(2*Pi)^d*s^2) + 
         2^(1 + d)*Pi^d*((-4 + 3*d)*s^2 - (4 - 5*d + d^2)*s*t + 2*t^2)))/16 + 
      16*sw^12*(d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*(-2*(-1 + d)*s^2 + 
          (8 - 5*d + d^2)*s*t + 2*t^2)) + (-1/2 + sw^2)^2*
       (-16*sw^8*(d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*((4 - 3*d)*s^2 + 
            (4 - 5*d + d^2)*s*t - 2*t^2)) - 
        ((3 - 4*sw^2)^4*(-(d^2*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*
            (2*(-1 + d)*s^2 - (8 - 5*d + d^2)*s*t - 2*t^2)))/16)))/
    (2^(2*(1 + d))*mz^2*Pi^(2*d)*(mz^2 - s)^2*sw^6*(1 - sw^2)*(-1 + sw^2)^2), 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/81)*EL^6*(2*(2^(1 + d)*Pi^d - d*(2*Pi)^d)*(1/4 - sw^2 + 2*sw^4)*
       (16*sw^8 + (3 - 4*sw^2)^4/16)*((-2 + d)*s^2*t^2 + 
        mz^4*((-2 + d)*s^2 + 4*(-1 + d)*s*t + 4*(-1 + d)*t^2) + 
        2*mz^2*s*t*(-2*t + d*(s + 2*t))) - 2^(1 + d)*(2 - d)*Pi^d*
       (s*t + mz^2*(s + 2*t))*
       (sw^4*(((3 - 4*sw^2)^4*(2*(-4 + d)*s*(s + t) + (-2 + d)*mz^2*
              ((-2 + d)*s + 2*t)))/16 - 16*sw^8*
           ((-2 + d)*mz^2*((-4 + d)*s - 2*t) + 2*s*((-2 + d)*s - 
              (-4 + d)*t))) + (-1/2 + sw^2)^2*
         (16*sw^8*(2*(-4 + d)*s*(s + t) + (-2 + d)*mz^2*((-2 + d)*s + 2*t)) - 
          ((3 - 4*sw^2)^4*((-2 + d)*mz^2*((-4 + d)*s - 2*t) + 
             2*s*((-2 + d)*s - (-4 + d)*t)))/16)) + (2 - d)*(2*Pi)^d*s^2*
       (sw^4*(((3 - 4*sw^2)^4*(2*(-2 + d)*mz^4 + mz^2*((-80 + 60*d - 14*d^2 + 
                 d^3)*s + 2*(-52 + 44*d - 12*d^2 + d^3)*t) - 
             2*(-2 + d)*((-4 + d)*s^2 + 2*(-4 + d)*s*t - t^2)))/16 + 
          16*sw^8*(2*(-2 + d)*mz^4 + mz^2*(-((-40 + 40*d - 12*d^2 + d^3)*s) - 
              2*(-56 + 46*d - 12*d^2 + d^3)*t) + 2*((-2 + d)^2*s^2 + 
              2*(10 - 6*d + d^2)*s*t + (-2 + d)*t^2))) + 
        (-1/2 + sw^2)^2*(16*sw^8*(2*(-2 + d)*mz^4 + 
            mz^2*((-80 + 60*d - 14*d^2 + d^3)*s + 2*(-52 + 44*d - 12*d^2 + 
                d^3)*t) - 2*(-2 + d)*((-4 + d)*s^2 + 2*(-4 + d)*s*t - t^2)) + 
          ((3 - 4*sw^2)^4*(2*(-2 + d)*mz^4 + mz^2*(-((-40 + 40*d - 12*d^2 + 
                  d^3)*s) - 2*(-56 + 46*d - 12*d^2 + d^3)*t) + 
             2*((-2 + d)^2*s^2 + 2*(10 - 6*d + d^2)*s*t + (-2 + d)*t^2)))/
           16))))/(2^(2*(1 + d))*(-2 + d)*Pi^(2*d)*(mz^2 - s)^2*s*sw^6*
     (1 - sw^2)^3), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{((I/9)*4^(-2 - d)*EL^6*(-3 + 2*sw^2)*(-((-11 + d)*d^2*(2*Pi)^d*s^3) + 
      2^(1 + d)*mz^2*Pi^d*(-1 + sw^2)*
       (-(s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2))) - 
        2*s*(8 - 5*d + d^2 - 8*sw^2)*t + 4*(-1 + 4*sw^2)*t^2) + 
      2^(1 + d)*Pi^d*s*(2*s^2*(7 + 14*sw^2 + d^2*sw^2 - d*(8 + 9*sw^2)) - 
        (-7 + d)*s*(8 - 5*d + d^2 - 8*sw^2)*t + 2*(-7 + d)*(-1 + 4*sw^2)*
         t^2))*CKM[1, 1]*CKMC[1, 1])/(Pi^(2*d)*(mz^2 - s)*s^2*sw^4*
     (-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, ((I/9)*2^(-4 - d)*EL^6*(-3 + 2*sw^2)*(-3*s + 2*mz^2*(-1 + sw^2))*
     (-(s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2))) - 
      2*s*(8 - 5*d + d^2 - 8*sw^2)*t + 4*(-1 + 4*sw^2)*t^2)*CKM[1, 1]*
     CKMC[1, 1])/(mz^2*Pi^d*(mz^2 - s)*s^2*sw^4*(-1 + sw^2)^2), 0, 0, 0, 0, 
   ((-I/9)*2^(-4 - d)*EL^6*(-3 + 2*sw^2)*
     (-(s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2))) - 
      2*s*(8 - 5*d + d^2 - 8*sw^2)*t + 4*(-1 + 4*sw^2)*t^2)*CKM[1, 1]*
     CKMC[1, 1])/(mz^2*Pi^d*(mz^2 - s)*s*sw^4*(-1 + sw^2)^2), 0, 0, 0, 0, 0, 
   0, ((-I/9)*2^(-3 - 2*d)*EL^6*(-3 + 2*sw^2)*
     ((-1/2 + sw^2)*(2^(1 + d)*Pi^d*s^2*((-2 + d)^2*s^2 + 
          2*(8 - 5*d + d^2)*s*t + 4*t^2) + 2^(1 + d)*mz^4*Pi^d*(-1 + sw^2)^2*
         ((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 4*t^2) + 
        mz^2*s*(1 - sw^2)*(-(d^3*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*
           (2*(8 - 9*d + 3*d^2)*s^2 - (-64 + 48*d - 13*d^2 + d^3)*s*t - 
            2*(-8 + d)*t^2))) - 
      sw^2*(2^(1 + d)*Pi^d*s^2*((8 - 6*d + d^2)*s^2 + 2*(4 - 5*d + d^2)*s*t - 
          4*t^2) + 2^(1 + d)*mz^4*Pi^d*(-1 + sw^2)^2*((8 - 6*d + d^2)*s^2 + 
          2*(4 - 5*d + d^2)*s*t - 4*t^2) + mz^2*s*(1 - sw^2)*
         (-(d^3*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*((32 - 28*d + 7*d^2)*s^2 - 
            (-32 + 44*d - 13*d^2 + d^3)*s*t + 2*(-8 + d)*t^2))))*CKM[1, 1]*
     CKMC[1, 1])/(Pi^(2*d)*(mz^2 - s)*s^2*sw^4*(-1 + sw^2)), 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
  {((I/9)*2^(-5 - 2*d)*EL^6*(3 - 4*sw^2)*(-3 + 2*sw^2)*
     ((-1/2 + sw^2)^2*(-(d^3*(1 + d)*(2*Pi)^d*s^3) + 2^(1 + d)*(-2 + d)*mz^2*
         Pi^d*(1 - sw^2)*((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 4*t^2) + 
        2^(1 + d)*Pi^d*s*((-28 + 46*d - 27*d^2 + 7*d^3)*s^2 - 
          (112 - 142*d + 67*d^2 - 14*d^3 + d^4)*s*t - 2*(14 - 9*d + d^2)*
           t^2)) + sw^4*(d^3*(1 + d)*(2*Pi)^d*s^3 - 2^(1 + d)*(-2 + d)*mz^2*
         Pi^d*(1 - sw^2)*((8 - 6*d + d^2)*s^2 + 2*(4 - 5*d + d^2)*s*t - 
          4*t^2) - 2^(1 + d)*Pi^d*s*((-56 + 78*d - 38*d^2 + 8*d^3)*s^2 - 
          (56 - 106*d + 63*d^2 - 14*d^3 + d^4)*s*t + 2*(14 - 9*d + d^2)*
           t^2)))*CKM[1, 1]*CKMC[1, 1])/((-2 + d)*Pi^(2*d)*(mz^2 - s)^2*s*
     sw^6*(-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, ((I/9)*2^(-7 - d)*EL^6*(-3 + 2*sw^2)*(-3 + 4*sw^2)*
     (-3*s + 2*mz^2*(-1 + sw^2))*
     (s^2*(d^2*(1 - 4*sw^2) + 4*d*(-1 + 4*sw^2 + 2*sw^4) - 
        4*(-1 + 4*sw^2 + 4*sw^4)) + 2*s*(8 - 5*d + d^2 - 32*sw^2 + 
        20*d*sw^2 - 4*d^2*sw^2 + 16*sw^4)*t + 4*(1 - 4*sw^2 + 8*sw^4)*t^2)*
     CKM[1, 1]*CKMC[1, 1])/(Pi^d*s*(mz^3 - mz*s)^2*sw^6*(-1 + sw^2)^3), 0, 0, 
   0, 0, ((-I/9)*2^(-7 - 2*d)*EL^6*(-3 + 2*sw^2)*(-3 + 4*sw^2)*
     (d^2*(2*Pi)^d*s^2 - 2^(1 + d)*Pi^d*
       (2*s^2*(-1 + d + 4*sw^2 - 4*d*sw^2 + d^2*sw^2 + 4*sw^4 - 2*d*sw^4) + 
        s*(d*(5 - 20*sw^2) + d^2*(-1 + 4*sw^2) - 8*(1 - 4*sw^2 + 2*sw^4))*t - 
        2*(1 - 4*sw^2 + 8*sw^4)*t^2))*CKM[1, 1]*CKMC[1, 1])/
    (Pi^(2*d)*(mz^3 - mz*s)^2*sw^6*(-1 + sw^2)^3), 0, 0, 0, 0, 0, 0, 
   ((I/9)*2^(-5 - 2*d)*EL^6*(3 - 4*sw^2)*(-3 + 2*sw^2)*
     (-2*(2^(1 + d)*Pi^d - d*(2*Pi)^d)*(1/4 - sw^2 + 2*sw^4)*
       ((-2 + d)*s^2*t^2 + mz^4*(-1 + sw^2)^2*((-2 + d)*s^2 + 
          4*(-1 + d)*s*t + 4*(-1 + d)*t^2) - 2*mz^2*s*(-1 + sw^2)*t*
         (-2*t + d*(s + 2*t))) + 2^(1 + d)*(2 - d)*Pi^d*
       (s*t - mz^2*(-1 + sw^2)*(s + 2*t))*
       (sw^4*(2*(-4 + d)*s*(s + t) + (-2 + d)*mz^2*(1 - sw^2)*
           ((-2 + d)*s + 2*t)) - (-1/2 + sw^2)^2*
         ((-2 + d)*mz^2*(1 - sw^2)*((-4 + d)*s - 2*t) + 
          2*s*((-2 + d)*s - (-4 + d)*t))) - (2 - d)*(2*Pi)^d*s^2*
       (sw^4*(2*(-2 + d)*mz^4*(-1 + sw^2)^2 + mz^2*(1 - sw^2)*
           ((-80 + 60*d - 14*d^2 + d^3)*s + 2*(-52 + 44*d - 12*d^2 + d^3)*
             t) - 2*(-2 + d)*((-4 + d)*s^2 + 2*(-4 + d)*s*t - t^2)) + 
        (-1/2 + sw^2)^2*(2*(-2 + d)*mz^4*(-1 + sw^2)^2 + 
          mz^2*(1 - sw^2)*(-((-40 + 40*d - 12*d^2 + d^3)*s) - 
            2*(-56 + 46*d - 12*d^2 + d^3)*t) + 2*((-2 + d)^2*s^2 + 
            2*(10 - 6*d + d^2)*s*t + (-2 + d)*t^2))))*CKM[1, 1]*CKMC[1, 1])/
    ((-2 + d)*Pi^(2*d)*(mz^2 - s)^2*s*sw^6*(-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, ((I/3)*2^(-3 - d)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2)*CKM[1, 1]*
     CKMC[1, 1]*(4*(-1 + d)^2*mz^2*s*(-1 + sw^2) + 
      d*(s^2 + (-3 + 8*d)*mz^2*s*(-1 + sw^2) - 8*(-1 + d)*mz^4*(-1 + sw^2)^2)*
       GaugeXi[Q] - d*mz^2*s*(-1 + sw^2)*GaugeXi[Q]^2))/
    ((-1 + d)*d*mz^4*Pi^d*s^3*sw^2*(-1 + sw^2)^2*GaugeXi[Q]), 
   ((I/3)*2^(-3 - 2*d)*EL^6*(d*(2*Pi)^d*s^5 - 2^(1 + d)*Pi^d*s^3*
       ((-1 + d)*s^2 + 2*s*t + 2*t^2) + 2^(3 + d)*(-1 + d)*mz^6*Pi^d*
       (1 - sw^2)^3*((-2 + d)*s^2 + 4*s*t + 4*t^2) + 
      2^(1 + d)*(-7 + 4*d)*mz^2*Pi^d*s^2*(-1 + sw^2)*((-2 + d)*s^2 + 4*s*t + 
        4*t^2) + 2^(2 + d)*(-5 + 3*d)*mz^4*Pi^d*s*(-1 + sw^2)^2*
       ((-2 + d)*s^2 + 4*s*t + 4*t^2))*CKM[1, 1]*CKMC[1, 1])/
    ((-1 + d)*mz^4*Pi^(2*d)*s^3*(sw - sw^3)^2), 
   ((-I/3)*EL^6*mz^2*(-1 + sw^2)*(-2*s + mz^2*(-1 + sw^2))*
     ((-2 + d)*s^2 + 4*s*t + 4*t^2)*CKM[1, 1]*CKMC[1, 1])/
    ((2*Pi)^d*s^3*sw^2), 0, 0, ((I/3)*2^(-3 - d)*EL^6*
     ((-2 + d)*s^2 + 4*s*t + 4*t^2)*CKM[1, 1]*CKMC[1, 1]*
     (d*s + (4 - 13*d + 4*d^2)*mz^2*(-1 + sw^2) + d*mz^2*(-1 + sw^2)*
       GaugeXi[Q]))/((-1 + d)*d*mz^4*Pi^d*s^2*sw^2*(-1 + sw^2)^2), 
   ((I/3)*2^(-3 - 2*d)*EL^6*CKM[1, 1]*CKMC[1, 1]*
     (-(s*(d*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*(-s^2 + 2*s*t + 2*t^2) + 
         2^(1 + d)*mz^2*Pi^d*(1 - sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2))) + 
      2^(2 + d)*mz^2*Pi^d*(1 - sw^2)*(s - 2*mz^2*(-1 + sw^2))*
       ((-2 + d)*s^2 + 4*s*t + 4*t^2)*GaugeXi[Q]))/
    ((-1 + d)*mz^4*Pi^(2*d)*s^2*sw^2*(-1 + sw^2)^2), 
   ((-I/3)*2^(-3 - d)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2)*CKM[1, 1]*
     CKMC[1, 1]*(d*s - (-4 - d + 4*d^2)*mz^2*(-1 + sw^2) - 
      d*mz^2*(-1 + sw^2)*GaugeXi[Q]))/((-1 + d)*d*mz^4*Pi^d*s^2*sw^2*
     (-1 + sw^2)^2), ((-I/3)*2^(-3 - 2*d)*EL^6*CKM[1, 1]*CKMC[1, 1]*
     (-(d*(2*Pi)^d*s^4) + 2^(1 + d)*Pi^d*s^2*(s^2 - 2*s*t - 2*t^2) + 
      2^(1 + d)*(-3 + 2*d)*mz^2*Pi^d*s*(-1 + sw^2)*((-2 + d)*s^2 + 4*s*t + 
        4*t^2) - mz^4*(-1 + sw^2)^2*(-3*d*(2*Pi)^d*s^2 + 
        2^(1 + d)*Pi^d*((-1 + 2*d)*s^2 + 2*s*t + 2*t^2)) + 
      2^(1 + d)*mz^2*Pi^d*(1 - sw^2)*(s - mz^2*(-1 + sw^2))*
       ((-2 + d)*s^2 + 4*s*t + 4*t^2)*GaugeXi[Q] + mz^4*(-1 + sw^2)^2*
       (-(d*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*(s^2 - 2*s*t - 2*t^2))*
       GaugeXi[Q]^2))/((-1 + d)*mz^4*Pi^(2*d)*s^2*sw^2*(-1 + sw^2)^2), 
   ((-I/3)*2^(-3 - d)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2)*CKM[1, 1]*
     CKMC[1, 1]*(4*(-1 + d)^2*mz^2*(-1 + sw^2) + d*(s - mz^2*(-1 + sw^2))*
       GaugeXi[Q] + d*mz^2*(-1 + sw^2)*GaugeXi[Q]^2))/
    ((-1 + d)*d*mz^4*Pi^d*s^2*sw^2*(-1 + sw^2)^2*GaugeXi[Q]), 
   ((I/3)*2^(-3 - 2*d)*EL^6*CKM[1, 1]*CKMC[1, 1]*(d*(2*Pi)^d*s^4 + 
      2^(1 + d)*Pi^d*s^2*(-s^2 + 2*s*t + 2*t^2) + 2^(1 + d)*(-3 + 2*d)*mz^2*
       Pi^d*s*(1 - sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2) + 
      mz^4*(-1 + sw^2)^2*(d*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (-s^2 + 2*s*t + 2*t^2)) - 2^(1 + d)*mz^2*Pi^d*(1 - sw^2)*
       (s - mz^2*(-1 + sw^2))*((-2 + d)*s^2 + 4*s*t + 4*t^2)*GaugeXi[Q] + 
      mz^4*(-1 + sw^2)^2*(-3*d*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         ((-1 + 2*d)*s^2 + 2*s*t + 2*t^2))*GaugeXi[Q]^2))/
    ((-1 + d)*mz^4*Pi^(2*d)*s^2*sw^2*(-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, ((I/3)*2^(-7 - 6*d)*EL^6*(3 - 4*sw^2)*CKM[1, 1]*
     CKMC[1, 1]*(2^(2 + 5*d)*(-1 + d)^2*mz^2*Pi^(5*d)*s*(-1 + sw^2)*
       (s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2)) + 
        2*s*(8 - 5*d + d^2 - 8*sw^2)*t + 4*(1 - 4*sw^2)*t^2) - 
      (2*Pi)^(5*d)*(8*mz^2*s*(-1 + sw^2) + 8*d^2*mz^4*(-1 + sw^2)^2 - 
        d*(s^2 + 13*mz^2*s*(-1 + sw^2) + 8*mz^4*(-1 + sw^2)^2))*
       (s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2)) + 
        2*s*(8 - 5*d + d^2 - 8*sw^2)*t + 4*(1 - 4*sw^2)*t^2)*GaugeXi[Q] + 
      (2*Pi)^(5*d)*(4*mz^2*s*(-1 + sw^2) + 4*d^2*mz^2*(-1 + sw^2)*
         (-3*s + 4*mz^2*(-1 + sw^2)) - d*(2*s^2 + 3*mz^2*s*(-1 + sw^2) + 
          16*mz^4*(-1 + sw^2)^2))*(s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2)) + 
        2*s*(8 - 5*d + d^2 - 8*sw^2)*t + 4*(1 - 4*sw^2)*t^2)*GaugeXi[Q]^2 + 
      2^(1 + 5*d)*d*Pi^(5*d)*(sw^2*(s^2 + (-1 + 8*d)*mz^2*s*(-1 + sw^2) - 
          8*(-1 + d)*mz^4*(-1 + sw^2)^2)*((8 - 6*d + d^2)*s^2 + 
          2*(4 - 5*d + d^2)*s*t - 4*t^2) + 
        ((-1 + 2*sw^2)*(-s^2 - (-1 + 8*d)*mz^2*s*(-1 + sw^2) + 
           8*(-1 + d)*mz^4*(-1 + sw^2)^2)*((-2 + d)^2*s^2 + 
           2*(8 - 5*d + d^2)*s*t + 4*t^2))/2)*GaugeXi[Q]^3 - 
      d*mz^2*(2*Pi)^(5*d)*s*(-1 + sw^2)*
       (s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2)) + 
        2*s*(8 - 5*d + d^2 - 8*sw^2)*t + 4*(1 - 4*sw^2)*t^2)*GaugeXi[Q]^4))/
    ((-1 + d)*d*mz^4*Pi^(6*d)*s^2*(-mz^2 + s)*sw^4*(1 - sw^2)^3*
     (-1 + GaugeXi[Q])^2*GaugeXi[Q]), ((-I/3)*2^(-7 - 4*d)*EL^6*(3 - 4*sw^2)*
     CKM[1, 1]*CKMC[1, 1]*(-((2*Pi)^(3*d)*s^2*(-1 + 4*sw^2)*
        (s + 2*mz^2*(-1 + sw^2))*(d*s^2 + 4*d*mz^2*s*(-1 + sw^2) + 
         4*(-1 + d)*mz^4*(-1 + sw^2)^2)*(-1 + GaugeXi[Q])^2) - 
      2^(2 + 3*d)*(-1 + d)*mz^4*Pi^(3*d)*(-1 + sw^2)^2*(-1 + 4*sw^2)*
       (s + 2*mz^2*(-1 + sw^2))*((-2 + d)*s^2 - 4*s*t - 4*(-1 + d)*t^2)*
       (-1 + GaugeXi[Q])^2 + (-1 + d)*(2*Pi)^(3*d)*s*(s + 2*mz^2*(-1 + sw^2))*
       (s^2*(s*(2 - d + 4*sw^2) + (2 - 8*sw^2)*t) + 4*mz^2*s*(-1 + sw^2)*
         (s*(2 - d + 4*sw^2) + (2 - 8*sw^2)*t) + 4*mz^4*(-1 + sw^2)^2*
         (s*(10 + d^2 - 4*sw^2 + d*(-7 + 4*sw^2)) + 2*(-3 + d)*(-1 + 4*sw^2)*
           t))*(-1 + GaugeXi[Q])^2 - 2^(2 + d)*(-1 + d)*mz^4*Pi^d*
       (-1 + sw^2)^2*(s + 2*t)*(2^(1 + 2*d)*(-2 + d)*mz^2*Pi^(2*d)*
         (-1 + sw^2)*(s*(-2 + d - 4*sw^2) + 2*(-1 + 4*sw^2)*t) + 
        (2*Pi)^(2*d)*s*(s*(12 + d^2 + 24*sw^2 - 4*d*(2 + sw^2)) + 
          2*(2 + d)*(-1 + 4*sw^2)*t))*(-1 + GaugeXi[Q])^2 + 
      2^(2 + d)*(1 - d)*Pi^d*s*((2*Pi)^(2*d)*sw^2*((-4 + d)*s^3*t + 
          4*(-3 + d)*mz^6*(-1 + sw^2)^3*((-4 + d)*s + 2*t) - 
          2*mz^4*s*(-1 + sw^2)^2*(3*(12 - 7*d + d^2)*s + 
            2*(47 - 27*d + 4*d^2)*t) + 2*mz^2*s*(1 - sw^2)*
           (2*(8 - 6*d + d^2)*s^2 + (28 - 23*d + 4*d^2)*s*t - 8*t^2)) - 
        (1/2 - sw^2)*(4^(1 + d)*(-3 + d)*mz^6*Pi^(2*d)*(1 - sw^2)^3*
           ((-2 + d)*s - 2*t) - (-2 + d)*(2*Pi)^(2*d)*s^3*t + 
          2^(1 + 2*d)*mz^4*Pi^(2*d)*s*(-1 + sw^2)^2*(3*(6 - 5*d + d^2)*s + 
            2*(37 - 25*d + 4*d^2)*t) - 2^(1 + 2*d)*mz^2*Pi^(2*d)*s*(1 - sw^2)*
           (2*(-2 + d)^2*s^2 + (38 - 23*d + 4*d^2)*s*t + 8*t^2)))*
       (-1 + GaugeXi[Q])^2 - (-1 + d)*s*(s + 2*mz^2*(-1 + sw^2))*
       (8*mz^4*(-1 + sw^2)^2*(2*(-3 + d)*s*sw^2 + (-1 + 4*sw^2)*t) + 
        s^2*(s*(-2 + d - 4*sw^2) + 2*(-1 + 4*sw^2)*t) + 
        4*mz^2*s*(-1 + sw^2)*(s*(-2 + d - 4*sw^2) + 2*(-1 + 4*sw^2)*t))*
       ((2*Pi)^(3*d) - 2^(1 + 3*d)*Pi^(3*d)*GaugeXi[Q] + 
        (2*Pi)^(3*d)*GaugeXi[Q]^2) - (2*Pi)^(2*d)*s^2*(-1 + 4*sw^2)*
       (d*s^2 + 4*d*mz^2*s*(-1 + sw^2) + 4*(-1 + d)*mz^4*(-1 + sw^2)^2)*
       ((2*Pi)^d*s + 2^(1 + d)*mz^2*Pi^d*(-1 + sw^2) - 
        2^(1 + d)*Pi^d*(s + 2*mz^2*(-1 + sw^2))*GaugeXi[Q] + 
        ((2*Pi)^d*s + 2^(1 + d)*mz^2*Pi^d*(-1 + sw^2))*GaugeXi[Q]^2) + 
      (2*Pi)^(2*d)*s*(4*(-1 + d)*mz^4*(-1 + sw^2)^2 + s*(d*s + 2*t) + 
        4*mz^2*(-1 + sw^2)*(d*s + 2*t))*(2^(1 + d)*mz^2*Pi^d*(-1 + sw^2)*
         (s*(-4 + d + 4*sw^2) + 2*(-1 + 4*sw^2)*t) - 
        s*(-3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(2 + d - 2*sw^2) + t - 
            4*sw^2*t)) - 2^(1 + d)*Pi^d*(s + 2*mz^2*(-1 + sw^2))*
         (s*(-4 + d + 4*sw^2) + 2*(-1 + 4*sw^2)*t)*GaugeXi[Q] + 
        (2^(1 + d)*mz^2*Pi^d*(-1 + sw^2)*(s*(-4 + d + 4*sw^2) + 
            2*(-1 + 4*sw^2)*t) + s*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
             (2*s*(-1 + sw^2) + (-1 + 4*sw^2)*t)))*GaugeXi[Q]^2)))/
    ((-1 + d)*mz^4*Pi^(4*d)*(mz^2 - s)*sw^4*(1 - sw^2)^3*
     (s - s*GaugeXi[Q])^2), ((-I/3)*2^(-4 - d)*EL^6*mz^2*(-3 + 4*sw^2)*
     (-2*s + mz^2*(-1 + sw^2))*(-(s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2))) - 
      2*s*(8 - 5*d + d^2 - 8*sw^2)*t + 4*(-1 + 4*sw^2)*t^2)*CKM[1, 1]*
     CKMC[1, 1])/(Pi^d*(mz^2 - s)*s^2*sw^4), 0, 0, 
   ((-I/3)*2^(-7 - d)*EL^6*(-3 + 4*sw^2)*
     (s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2)) + 2*s*(8 - 5*d + d^2 - 8*sw^2)*
       t + 4*(1 - 4*sw^2)*t^2)*CKM[1, 1]*CKMC[1, 1]*
     (d*s + (4 - 13*d + 4*d^2)*mz^2*(-1 + sw^2) + d*mz^2*(-1 + sw^2)*
       GaugeXi[Q]))/((-1 + d)*d*mz^4*Pi^d*(mz^2 - s)*s*sw^4*(-1 + sw^2)^3), 
   ((-I/3)*2^(-7 - d)*EL^6*(-3 + 4*sw^2)*(-s + 2*mz^2*(-1 + sw^2))*
     (s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2)) + 2*s*(8 - 5*d + d^2 - 8*sw^2)*
       t + 4*(1 - 4*sw^2)*t^2)*CKM[1, 1]*CKMC[1, 1]*
     (s + 4*mz^2*(-1 + sw^2)*GaugeXi[Q]))/((-1 + d)*mz^4*Pi^d*(mz^2 - s)*s*
     sw^4*(-1 + sw^2)^3), ((-I/3)*2^(-7 - d)*EL^6*(-3 + 4*sw^2)*
     (s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2)) + 2*s*(8 - 5*d + d^2 - 8*sw^2)*
       t + 4*(1 - 4*sw^2)*t^2)*CKM[1, 1]*CKMC[1, 1]*
     (-(d*s) + (-4 - d + 4*d^2)*mz^2*(-1 + sw^2) + d*mz^2*(-1 + sw^2)*
       GaugeXi[Q]))/((-1 + d)*d*mz^4*Pi^d*(mz^2 - s)*s*sw^4*(-1 + sw^2)^3), 
   ((I/3)*2^(-7 - 2*d)*EL^6*(3 - 4*sw^2)*CKM[1, 1]*CKMC[1, 1]*
     (-((2*Pi)^d*s^2*(-1 + 4*sw^2)*(-1 + GaugeXi[Q])^2*
        (d*(s + mz^2*(-1 + sw^2))^2 + 2*mz^2*(-1 + sw^2)*
          (d*s + (-2 + d)*mz^2*(-1 + sw^2))*GaugeXi[Q] + 
         d*mz^4*(-1 + sw^2)^2*GaugeXi[Q]^2)) - s^2*(-1 + 4*sw^2)*
       ((2*Pi)^d - 2^(1 + d)*Pi^d*GaugeXi[Q] + (2*Pi)^d*GaugeXi[Q]^2)*
       (d*(s + mz^2*(-1 + sw^2))^2 + 2*mz^2*(-1 + sw^2)*
         (d*s + (-2 + d)*mz^2*(-1 + sw^2))*GaugeXi[Q] + 
        d*mz^4*(-1 + sw^2)^2*GaugeXi[Q]^2) - (-1 + d)*s*(-1 + GaugeXi[Q])*
       (s + mz^2*(-1 + sw^2) + mz^2*(-1 + sw^2)*GaugeXi[Q])*
       (mz^2*(-1 + sw^2)*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*
           (s + 2*s*sw^2 + t - 4*sw^2*t)) + 
        s*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s - d*s + 2*s*sw^2 + t - 
            4*sw^2*t)) - s*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*
           (s + 2*s*sw^2 + t - 4*sw^2*t))*GaugeXi[Q] - 
        mz^2*(-1 + sw^2)*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*
           (s + 2*s*sw^2 + t - 4*sw^2*t))*GaugeXi[Q]^2) + 
      ((s + mz^2*(-1 + sw^2))^2*(d*s + 2*t) + 2*mz^2*(-1 + sw^2)*
         (mz^2*(-1 + sw^2)*((-2 + d)*s - 2*t) + s*(d*s + 2*t))*GaugeXi[Q] + 
        mz^4*(-1 + sw^2)^2*(d*s + 2*t)*GaugeXi[Q]^2)*(3*d*(2*Pi)^d*s - 
        2^(1 + d)*Pi^d*(s*(2 + d - 2*sw^2) + t - 4*sw^2*t) - 
        2^(1 + d)*Pi^d*(s*(-4 + d + 4*sw^2) + 2*(-1 + 4*sw^2)*t)*GaugeXi[Q] + 
        (d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(2*s*(-1 + sw^2) + (-1 + 4*sw^2)*t))*
         GaugeXi[Q]^2) - (-1 + d)*s*(s + mz^2*(-1 + sw^2) + 
        mz^2*(-1 + sw^2)*GaugeXi[Q])*
       (s*(d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(s + 2*s*sw^2 + t - 4*sw^2*t)) + 
        mz^2*(-(d*(2*Pi)^d*s*(5 + 3*sw^2)) + 2^(1 + d)*Pi^d*
           (s*(1 + sw^2 - 2*sw^4 + 2*d*(1 + sw^2)) + (1 - 5*sw^2 + 4*sw^4)*
             t)) - (2^(1 + d)*Pi^d*s*(s*(-2 + d - 4*sw^2) + 
            2*(-1 + 4*sw^2)*t) + mz^2*(-(d*(2*Pi)^d*s*(-3 + 11*sw^2)) + 
            2^(1 + d)*Pi^d*(s*(1 - 2*d + sw^2 + 6*d*sw^2 - 2*sw^4) + 
              (1 - 5*sw^2 + 4*sw^4)*t)))*GaugeXi[Q] + 
        (s*(d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(s + 2*s*sw^2 + t - 4*sw^2*t)) + 
          mz^2*(-(d*(2*Pi)^d*s*(-5 + 13*sw^2)) + 2^(1 + d)*Pi^d*
             (s*(-1 - 2*d - sw^2 + 6*d*sw^2 + 2*sw^4) + (-1 + 5*sw^2 - 
                4*sw^4)*t)))*GaugeXi[Q]^2 - mz^2*(-1 + sw^2)*
         (-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(s + 2*s*sw^2 + t - 4*sw^2*t))*
         GaugeXi[Q]^3) + 4*(1 - d)*s*
       (sw^2*((2^(1 + d)*(-2 + d)*Pi^d - d*(2*Pi)^d)*s^2*t + 
          mz^4*(2^(1 + d)*(-2 + 9*d)*Pi^d - 17*d*(2*Pi)^d)*(-1 + sw^2)^2*t + 
          2^(1 + d)*mz^2*Pi^d*(1 - sw^2)*((8 - 6*d + d^2)*s^2 + 
            (12 - 11*d + 2*d^2)*s*t - 4*t^2)) + (1/2 - sw^2)*
         ((2^(1 + d)*(-1 + d)*Pi^d - d*(2*Pi)^d)*s^2*t + 
          mz^4*(2^(1 + d)*(-1 + 9*d)*Pi^d - 17*d*(2*Pi)^d)*(-1 + sw^2)^2*t + 
          2^(1 + d)*mz^2*Pi^d*(1 - sw^2)*((-2 + d)^2*s^2 + 
            (18 - 11*d + 2*d^2)*s*t + 4*t^2)) + 
        2*(sw^2*((2^(2 + d)*Pi^d - d*(2*Pi)^d)*s^2*t + mz^4*(-1 + sw^2)^2*
             (-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(2*s - (-3 + d)*t)) - 
            mz^2*(1 - sw^2)*(-21*d*(2*Pi)^d*s*t + 2^(1 + d)*Pi^d*(
                (8 - 6*d + d^2)*s^2 + 2*(5 + d^2)*s*t - 4*t^2))) + 
          (1/2 - sw^2)*((2^(1 + d)*Pi^d - d*(2*Pi)^d)*s^2*t - 
            mz^4*(-1 + sw^2)^2*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(-s + 
                (-3 + d)*t)) - mz^2*(1 - sw^2)*(-21*d*(2*Pi)^d*s*t + 
              2^(1 + d)*Pi^d*((-2 + d)^2*s^2 + (17 + 2*d^2)*s*t + 4*t^2))))*
         GaugeXi[Q] - (sw^2*((2^(2 + d)*Pi^d - d*(2*Pi)^d)*s^2*t - 
            2^(1 + d)*mz^4*Pi^d*(-1 + sw^2)^2*(2*(-4 + d)*s + (-8 + 3*d)*t) - 
            2^(1 + d)*mz^2*Pi^d*(1 - sw^2)*((8 - 6*d + d^2)*s^2 + 
              (4 - 9*d + 2*d^2)*s*t - 4*t^2)) + (1/2 - sw^2)*
           ((2^(1 + d)*Pi^d - d*(2*Pi)^d)*s^2*t - 2^(1 + d)*mz^4*Pi^d*
             (-1 + sw^2)^2*(2*(-2 + d)*s + (-10 + 3*d)*t) - 
            2^(1 + d)*mz^2*Pi^d*(1 - sw^2)*((-2 + d)^2*s^2 + 
              (14 - 9*d + 2*d^2)*s*t + 4*t^2)))*GaugeXi[Q]^2 - 
        mz^2*(2*Pi)^d*(1 - sw^2)*(s*(-2 + d - 4*sw^2)*t - 
          mz^2*(-1 + sw^2)*(s*(-2 + d - 4*sw^2) + 2*(-3 + d)*t))*
         GaugeXi[Q]^3 - (mz^4*(-1 + sw^2)^2*(-(d*(2*Pi)^d) + 
           2^(1 + d)*Pi^d*(1 + 2*sw^2))*t*GaugeXi[Q]^4)/2)))/
    ((-1 + d)*mz^4*Pi^(2*d)*(mz^2 - s)*s*sw^4*(1 - sw^2)^3*
     (-1 + GaugeXi[Q])^2), ((I/3)*2^(-7 - d)*EL^6*(-3 + 4*sw^2)*
     (s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2)) + 2*s*(8 - 5*d + d^2 - 8*sw^2)*
       t + 4*(1 - 4*sw^2)*t^2)*CKM[1, 1]*CKMC[1, 1]*
     (4*(-1 + d)^2*mz^2*(-1 + sw^2) + d*(s - mz^2*(-1 + sw^2))*GaugeXi[Q] + 
      d*mz^2*(-1 + sw^2)*GaugeXi[Q]^2))/((-1 + d)*d*mz^4*Pi^d*(mz^2 - s)*s*
     sw^4*(-1 + sw^2)^3*GaugeXi[Q]), ((I/3)*2^(-7 - 2*d)*EL^6*(3 - 4*sw^2)*
     CKM[1, 1]*CKMC[1, 1]*(-((2*Pi)^d*s^2*(-1 + 4*sw^2)*(-1 + GaugeXi[Q])^2*
        (d*(s + mz^2*(-1 + sw^2))^2 + 2*mz^2*(-1 + sw^2)*
          (d*s + (-2 + d)*mz^2*(-1 + sw^2))*GaugeXi[Q] + 
         d*mz^4*(-1 + sw^2)^2*GaugeXi[Q]^2)) - s^2*(-1 + 4*sw^2)*
       ((2*Pi)^d - 2^(1 + d)*Pi^d*GaugeXi[Q] + (2*Pi)^d*GaugeXi[Q]^2)*
       (d*(s + mz^2*(-1 + sw^2))^2 + 2*mz^2*(-1 + sw^2)*
         (d*s + (-2 + d)*mz^2*(-1 + sw^2))*GaugeXi[Q] + 
        d*mz^4*(-1 + sw^2)^2*GaugeXi[Q]^2) - (-1 + d)*s*(-1 + GaugeXi[Q])*
       (s + mz^2*(-1 + sw^2) + mz^2*(-1 + sw^2)*GaugeXi[Q])*
       (mz^2*(-1 + sw^2)*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*
           (s + 2*s*sw^2 + t - 4*sw^2*t)) + 
        s*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s - d*s + 2*s*sw^2 + t - 
            4*sw^2*t)) - s*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*
           (s + 2*s*sw^2 + t - 4*sw^2*t))*GaugeXi[Q] - 
        mz^2*(-1 + sw^2)*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*
           (s + 2*s*sw^2 + t - 4*sw^2*t))*GaugeXi[Q]^2) + 
      ((s + mz^2*(-1 + sw^2))^2*(d*s + 2*t) + 2*mz^2*(-1 + sw^2)*
         (mz^2*(-1 + sw^2)*((-2 + d)*s - 2*t) + s*(d*s + 2*t))*GaugeXi[Q] + 
        mz^4*(-1 + sw^2)^2*(d*s + 2*t)*GaugeXi[Q]^2)*(3*d*(2*Pi)^d*s - 
        2^(1 + d)*Pi^d*(s*(2 + d - 2*sw^2) + t - 4*sw^2*t) - 
        2^(1 + d)*Pi^d*(s*(-4 + d + 4*sw^2) + 2*(-1 + 4*sw^2)*t)*GaugeXi[Q] + 
        (d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(2*s*(-1 + sw^2) + (-1 + 4*sw^2)*t))*
         GaugeXi[Q]^2) - (-1 + d)*s*(s + mz^2*(-1 + sw^2) + 
        mz^2*(-1 + sw^2)*GaugeXi[Q])*
       (s*(d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(s + 2*s*sw^2 + t - 4*sw^2*t)) + 
        mz^2*(-(d*(2*Pi)^d*s*(-5 + 9*sw^2)) + 2^(1 + d)*Pi^d*
           (s*(1 - 3*d + sw^2 + 5*d*sw^2 - 2*sw^4) + (1 - 5*sw^2 + 4*sw^4)*
             t)) + (-(2^(1 + d)*Pi^d*s*(s*(-2 + d - 4*sw^2) + 
             2*(-1 + 4*sw^2)*t)) + mz^2*(-(d*(2*Pi)^d*s*(-9 + 5*sw^2)) + 
            2^(1 + d)*Pi^d*(s*(-1 - sw^2 + 2*sw^4 + 2*d*(-2 + sw^2)) + 
              (-1 + 5*sw^2 - 4*sw^4)*t)))*GaugeXi[Q] - 
        (s*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(s + 2*s*sw^2 + t - 4*sw^2*t)) + 
          mz^2*(-(d*(2*Pi)^d*s*(-7 + 3*sw^2)) + 2^(1 + d)*Pi^d*
             (s*(1 + sw^2 - 2*sw^4 + 2*d*(-2 + sw^2)) + (1 - 5*sw^2 + 4*sw^4)*
               t)))*GaugeXi[Q]^2 - mz^2*(-1 + sw^2)*(-(d*(2*Pi)^d*s) + 
          2^(1 + d)*Pi^d*(s + 2*s*sw^2 + t - 4*sw^2*t))*GaugeXi[Q]^3) + 
      4*(1 - d)*s*(sw^2*((2^(1 + d)*(-2 + d)*Pi^d - d*(2*Pi)^d)*s^2*t + 
          mz^4*(2^(2 + d)*(-1 + 7*d)*Pi^d - 27*d*(2*Pi)^d)*(-1 + sw^2)^2*t + 
          2^(1 + d)*mz^2*Pi^d*(1 - sw^2)*((8 - 6*d + d^2)*s^2 + 
            (12 - 11*d + 2*d^2)*s*t - 4*t^2)) + (1/2 - sw^2)*
         ((2^(1 + d)*(-1 + d)*Pi^d - d*(2*Pi)^d)*s^2*t + 
          mz^4*(2^(1 + d)*(-1 + 12*d)*Pi^d - 23*d*(2*Pi)^d)*(-1 + sw^2)^2*t + 
          2^(1 + d)*mz^2*Pi^d*(1 - sw^2)*((-2 + d)^2*s^2 + 
            (18 - 11*d + 2*d^2)*s*t + 4*t^2)) + 
        2*(sw^2*((2^(2 + d)*Pi^d - d*(2*Pi)^d)*s^2*t + mz^4*(-1 + sw^2)^2*
             (-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(2*s - (-3 + d)*t)) - 
            mz^2*(1 - sw^2)*(-21*d*(2*Pi)^d*s*t + 2^(1 + d)*Pi^d*(
                (8 - 6*d + d^2)*s^2 + 2*(5 + d^2)*s*t - 4*t^2))) + 
          (1/2 - sw^2)*((2^(1 + d)*Pi^d - d*(2*Pi)^d)*s^2*t - 
            mz^4*(-1 + sw^2)^2*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(-s + 
                (-3 + d)*t)) - mz^2*(1 - sw^2)*(-21*d*(2*Pi)^d*s*t + 
              2^(1 + d)*Pi^d*((-2 + d)^2*s^2 + (17 + 2*d^2)*s*t + 4*t^2))))*
         GaugeXi[Q] - (sw^2*((2^(2 + d)*Pi^d - d*(2*Pi)^d)*s^2*t - 
            2^(1 + d)*mz^4*Pi^d*(-1 + sw^2)^2*(2*(-4 + d)*s + (-8 + 3*d)*t) - 
            2^(1 + d)*mz^2*Pi^d*(1 - sw^2)*((8 - 6*d + d^2)*s^2 + 
              (4 - 9*d + 2*d^2)*s*t - 4*t^2)) + (1/2 - sw^2)*
           ((2^(1 + d)*Pi^d - d*(2*Pi)^d)*s^2*t - 2^(1 + d)*mz^4*Pi^d*
             (-1 + sw^2)^2*(2*(-2 + d)*s + (-10 + 3*d)*t) - 
            2^(1 + d)*mz^2*Pi^d*(1 - sw^2)*((-2 + d)^2*s^2 + 
              (14 - 9*d + 2*d^2)*s*t + 4*t^2)))*GaugeXi[Q]^2 - 
        mz^2*(2*Pi)^d*(1 - sw^2)*(s*(-2 + d - 4*sw^2)*t - 
          mz^2*(-1 + sw^2)*(s*(-2 + d - 4*sw^2) + 2*(-3 + d)*t))*
         GaugeXi[Q]^3 - (mz^4*(-1 + sw^2)^2*(-(d*(2*Pi)^d) + 
           2^(1 + d)*Pi^d*(1 + 2*sw^2))*t*GaugeXi[Q]^4)/2)))/
    ((-1 + d)*mz^4*Pi^(2*d)*(mz^2 - s)*s*sw^4*(1 - sw^2)^3*
     (-1 + GaugeXi[Q])^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((I/3)*2^(-5 - 6*d)*EL^6*CKM[1, 1]*CKMC[1, 1]*
     (2^(2 + 5*d)*(-1 + d)^2*mz^2*Pi^(5*d)*s*(-1 + sw^2)*
       (s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2)) + 
        2*s*(8 - 5*d + d^2 - 8*sw^2)*t + 4*(1 - 4*sw^2)*t^2) - 
      (2*Pi)^(5*d)*(8*mz^2*s*(-1 + sw^2) + 8*d^2*mz^4*(-1 + sw^2)^2 - 
        d*(s^2 + 13*mz^2*s*(-1 + sw^2) + 8*mz^4*(-1 + sw^2)^2))*
       (s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2)) + 
        2*s*(8 - 5*d + d^2 - 8*sw^2)*t + 4*(1 - 4*sw^2)*t^2)*GaugeXi[Q] + 
      (2*Pi)^(5*d)*(4*mz^2*s*(-1 + sw^2) + 4*d^2*mz^2*(-1 + sw^2)*
         (-3*s + 4*mz^2*(-1 + sw^2)) - d*(2*s^2 + 3*mz^2*s*(-1 + sw^2) + 
          16*mz^4*(-1 + sw^2)^2))*(s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2)) + 
        2*s*(8 - 5*d + d^2 - 8*sw^2)*t + 4*(1 - 4*sw^2)*t^2)*GaugeXi[Q]^2 + 
      2^(1 + 5*d)*d*Pi^(5*d)*(sw^2*(s^2 + (-1 + 8*d)*mz^2*s*(-1 + sw^2) - 
          8*(-1 + d)*mz^4*(-1 + sw^2)^2)*((8 - 6*d + d^2)*s^2 + 
          2*(4 - 5*d + d^2)*s*t - 4*t^2) + 
        ((-1 + 2*sw^2)*(-s^2 - (-1 + 8*d)*mz^2*s*(-1 + sw^2) + 
           8*(-1 + d)*mz^4*(-1 + sw^2)^2)*((-2 + d)^2*s^2 + 
           2*(8 - 5*d + d^2)*s*t + 4*t^2))/2)*GaugeXi[Q]^3 - 
      d*mz^2*(2*Pi)^(5*d)*s*(-1 + sw^2)*
       (s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2)) + 
        2*s*(8 - 5*d + d^2 - 8*sw^2)*t + 4*(1 - 4*sw^2)*t^2)*GaugeXi[Q]^4))/
    ((-1 + d)*d*mz^4*Pi^(6*d)*s^2*(-mz^2 + s)*sw^4*(-1 + sw^2)^2*
     (-1 + GaugeXi[Q])^2*GaugeXi[Q]), 
   ((-I/96)*EL^6*CKM[1, 1]*CKMC[1, 1]*
     (-((2^(1 - d)*s^2*(-1 + 4*sw^2)*(s + 2*mz^2*(-1 + sw^2))*
         (d*s^2 + 4*d*mz^2*s*(-1 + sw^2) + 4*(-1 + d)*mz^4*(-1 + sw^2)^2)*
         (-1 + GaugeXi[Q])^2)/Pi^d) - (2^(2 - d)*(-1 + d)*mz^4*(-1 + sw^2)^2*
        (-1 + 4*sw^2)*(s + 2*mz^2*(-1 + sw^2))*((-2 + d)*s^2 - 4*s*t - 
         4*(-1 + d)*t^2)*(-1 + GaugeXi[Q])^2)/Pi^d + 
      (s*(s + 2*mz^2*(-1 + sw^2))*(s*(-4 + d + 4*sw^2) + 2*(-1 + 4*sw^2)*t)*
        (4*(-1 + d)*mz^4*(-1 + sw^2)^2 + s*(d*s + 2*t) + 
         4*mz^2*(-1 + sw^2)*(d*s + 2*t))*(-1 + GaugeXi[Q])^2)/(2*Pi)^d - 
      (4^(1 - d)*(-1 + d)*mz^4*(-1 + sw^2)^2*(s + 2*t)*
        (2^(1 + d)*(-2 + d)*mz^2*Pi^d*(-1 + sw^2)*(s*(-2 + d - 4*sw^2) + 
           2*(-1 + 4*sw^2)*t) + s*(d^2*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (-2*s*(-3 - 6*sw^2 + d*(2 + sw^2)) + (2 + d)*(-1 + 4*sw^2)*t)))*
        (-1 + GaugeXi[Q])^2)/Pi^(2*d) + (4^(1 - 2*d)*(1 - d)*s*
        (sw^2*((-4 + d)*(2*Pi)^(3*d)*s^3*t + 2^(2 + 3*d)*(-3 + d)*mz^6*
            Pi^(3*d)*(-1 + sw^2)^3*((-4 + d)*s + 2*t) - 2^(1 + 3*d)*mz^4*
            Pi^(3*d)*s*(-1 + sw^2)^2*(3*(12 - 7*d + d^2)*s + 
             2*(47 - 27*d + 4*d^2)*t) + 2^(1 + 3*d)*mz^2*Pi^(3*d)*s*
            (1 - sw^2)*(2*(8 - 6*d + d^2)*s^2 + (28 - 23*d + 4*d^2)*s*t - 
             8*t^2)) - (1/2 - sw^2)*(2^(2 + 3*d)*(-3 + d)*mz^6*Pi^(3*d)*
            (1 - sw^2)^3*((-2 + d)*s - 2*t) - (-2 + d)*(2*Pi)^(3*d)*s^3*t + 
           2^(1 + 3*d)*mz^4*Pi^(3*d)*s*(-1 + sw^2)^2*(3*(6 - 5*d + d^2)*s + 
             2*(37 - 25*d + 4*d^2)*t) - 2^(1 + 3*d)*mz^2*Pi^(3*d)*s*
            (1 - sw^2)*(2*(-2 + d)^2*s^2 + (38 - 23*d + 4*d^2)*s*t + 8*t^2)))*
        (-1 + GaugeXi[Q])^2)/Pi^(4*d) - ((-1 + d)*s*(s + 2*mz^2*(-1 + sw^2))*
        (8*mz^4*(-1 + sw^2)^2*(2*(-3 + d)*s*sw^2 + (-1 + 4*sw^2)*t) + 
         s^2*(s*(-2 + d - 4*sw^2) + 2*(-1 + 4*sw^2)*t) + 
         4*mz^2*s*(-1 + sw^2)*(s*(-2 + d - 4*sw^2) + 2*(-1 + 4*sw^2)*t))*
        ((2*Pi)^(3*d) - 2^(1 + 3*d)*Pi^(3*d)*GaugeXi[Q] + 
         (2*Pi)^(3*d)*GaugeXi[Q]^2))/(2*Pi)^(4*d) + 
      ((-1 + d)*s*(s + 2*mz^2*(-1 + sw^2))*
        (s^2*(s*(2 - d + 4*sw^2) + (2 - 8*sw^2)*t) + 4*mz^2*s*(-1 + sw^2)*
          (s*(2 - d + 4*sw^2) + (2 - 8*sw^2)*t) + 4*mz^4*(-1 + sw^2)^2*
          (s*(10 + d^2 - 4*sw^2 + d*(-7 + 4*sw^2)) + 2*(-3 + d)*(-1 + 4*sw^2)*
            t))*((2*Pi)^(3*d) - 2^(1 + 3*d)*Pi^(3*d)*GaugeXi[Q] + 
         (2*Pi)^(3*d)*GaugeXi[Q]^2))/(2*Pi)^(4*d)))/
    ((-1 + d)*mz^4*(mz^2 - s)*s^2*sw^4*(-1 + sw^2)^2*(-1 + GaugeXi[Q])^2), 
   ((-I/3)*4^(-1 - d)*EL^6*mz^2*(-1 + sw^2)*
     (2^(1 + d)*Pi^d*s*(s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2)) + 
        2*s*(8 - 5*d + d^2 - 8*sw^2)*t + 4*(1 - 4*sw^2)*t^2) + 
      mz^2*(-1 + sw^2)*(-(d^2*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*
         (2*s^2*(-1 + d - 2*sw^2 + d*sw^2) - s*(8 - 5*d + d^2 - 8*sw^2)*t + 
          2*(-1 + 4*sw^2)*t^2)))*CKM[1, 1]*CKMC[1, 1])/
    (Pi^(2*d)*(mz^2 - s)*s^2*sw^4), 0, 0, 
   ((-I/3)*2^(-5 - d)*EL^6*(s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2)) + 
      2*s*(8 - 5*d + d^2 - 8*sw^2)*t + 4*(1 - 4*sw^2)*t^2)*CKM[1, 1]*
     CKMC[1, 1]*(d*s + (4 - 13*d + 4*d^2)*mz^2*(-1 + sw^2) + 
      d*mz^2*(-1 + sw^2)*GaugeXi[Q]))/((-1 + d)*d*mz^4*Pi^d*(mz^2 - s)*s*sw^4*
     (-1 + sw^2)^2), ((-I/3)*32^(-1 - d)*EL^6*CKM[1, 1]*CKMC[1, 1]*
     ((2*Pi)^(4*d)*s*(-s + 2*mz^2*(-1 + sw^2))*
       (s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2)) + 
        2*s*(8 - 5*d + d^2 - 8*sw^2)*t + 4*(1 - 4*sw^2)*t^2) + 
      2*((2*Pi)^(4*d)*s^2*(s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2)) + 
          2*s*(8 - 5*d + d^2 - 8*sw^2)*t + 4*(1 - 4*sw^2)*t^2) + 
        4^(1 + 2*d)*mz^2*Pi^(4*d)*s*(-1 + sw^2)*
         (-(s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2))) - 
          2*s*(8 - 5*d + d^2 - 8*sw^2)*t + 4*(-1 + 4*sw^2)*t^2) + 
        4*mz^4*(d^2*(2*Pi)^(4*d)*s^2*(1 + sw^4) + 2^(1 + 4*d)*Pi^(4*d)*
           (s^2*(2 - d^2*sw^2 - 6*sw^4 + 4*sw^6 - 2*d*(-1 + sw^2)^2*(1 + 
                sw^2)) + s*(8 - 5*d + d^2 - 8*sw^2)*(-1 + sw^2)^2*t - 
            2*(-1 + sw^2)^2*(-1 + 4*sw^2)*t^2)))*GaugeXi[Q] - 
      ((2*Pi)^(4*d)*s^2*(s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2)) + 
          2*s*(8 - 5*d + d^2 - 8*sw^2)*t + 4*(1 - 4*sw^2)*t^2) + 
        5*2^(1 + 4*d)*mz^2*Pi^(4*d)*s*(-1 + sw^2)*
         (-(s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2))) - 
          2*s*(8 - 5*d + d^2 - 8*sw^2)*t + 4*(-1 + 4*sw^2)*t^2) + 
        16*mz^4*(d^2*(2*Pi)^(4*d)*s^2*(1 + sw^4) + 2^(1 + 4*d)*Pi^(4*d)*
           (s^2*(2 - d^2*sw^2 - 6*sw^4 + 4*sw^6 - 2*d*(-1 + sw^2)^2*(1 + 
                sw^2)) + s*(8 - 5*d + d^2 - 8*sw^2)*(-1 + sw^2)^2*t - 
            2*(-1 + sw^2)^2*(-1 + 4*sw^2)*t^2)))*GaugeXi[Q]^2 - 
      4^(1 + 2*d)*mz^2*Pi^(4*d)*(-1 + sw^2)*(s - 2*mz^2*(-1 + sw^2))*
       (s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2)) + 
        2*s*(8 - 5*d + d^2 - 8*sw^2)*t + 4*(1 - 4*sw^2)*t^2)*GaugeXi[Q]^3))/
    ((-1 + d)*mz^4*Pi^(5*d)*(mz^2 - s)*s*sw^4*(-1 + sw^2)^2*
     (-1 + GaugeXi[Q])^2), ((I/3)*2^(-5 - d)*EL^6*
     (s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2)) + 2*s*(8 - 5*d + d^2 - 8*sw^2)*
       t + 4*(1 - 4*sw^2)*t^2)*CKM[1, 1]*CKMC[1, 1]*
     (d*s - (-4 - d + 4*d^2)*mz^2*(-1 + sw^2) - d*mz^2*(-1 + sw^2)*
       GaugeXi[Q]))/((-1 + d)*d*mz^4*Pi^d*(mz^2 - s)*s*sw^4*(-1 + sw^2)^2), 
   ((I/3)*EL^6*CKM[1, 1]*CKMC[1, 1]*(2^(1 + d)*Pi^d*(1/2 - 2*sw^2)*
       (s - s*GaugeXi[Q])^2*(d*(s + mz^2*(-1 + sw^2))^2 + 
        2*mz^2*(1 - sw^2)*(-(d*s) - (-2 + d)*mz^2*(-1 + sw^2))*GaugeXi[Q] + 
        d*mz^4*(-1 + sw^2)^2*GaugeXi[Q]^2) - 
      (2*Pi)^d*(-(s*(-4 + d + 4*sw^2))/2 + t - 4*sw^2*t)*(-1 + GaugeXi[Q])^2*
       ((s + mz^2*(-1 + sw^2))^2*(d*s + 2*t) + 2*mz^2*(1 - sw^2)*
         (-(mz^2*(-1 + sw^2)*((-2 + d)*s - 2*t)) - s*(d*s + 2*t))*
         GaugeXi[Q] + mz^4*(-1 + sw^2)^2*(d*s + 2*t)*GaugeXi[Q]^2) - 
      ((-1 + d)*s*(s + mz^2*(-1 + sw^2) + mz^2*(-1 + sw^2)*GaugeXi[Q])*
        (s*(d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(s + 2*s*sw^2 + t - 4*sw^2*t)) - 
         mz^2*(-1 + sw^2)*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (s - d*s + 2*s*sw^2 + t - 4*sw^2*t)) + 
         (-(2^(1 + d)*Pi^d*s*(s*(-2 + d - 4*sw^2) + 2*(-1 + 4*sw^2)*t)) + 
           mz^2*(-1 + sw^2)*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*
              (s + 2*s*sw^2 + t - 4*sw^2*t)))*GaugeXi[Q] - 
         (s*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(s + 2*s*sw^2 + t - 4*sw^2*
                t)) - mz^2*(-1 + sw^2)*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
              (s - d*s + 2*s*sw^2 + t - 4*sw^2*t)))*GaugeXi[Q]^2 - 
         mz^2*(-1 + sw^2)*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*
            (s + 2*s*sw^2 + t - 4*sw^2*t))*GaugeXi[Q]^3))/2 - 
      ((-1 + d)*s*(s + mz^2*(-1 + sw^2) + mz^2*(-1 + sw^2)*GaugeXi[Q])*
        (s*(d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(s + 2*s*sw^2 + t - 4*sw^2*t)) + 
         mz^2*(-(d*(2*Pi)^d*s*(-1 + 9*sw^2)) + 2^(1 + d)*Pi^d*
            (s*(1 - d + sw^2 + 5*d*sw^2 - 2*sw^4) + (1 - 5*sw^2 + 4*sw^4)*
              t)) + (-(2^(1 + d)*Pi^d*s*(s*(-2 + d - 4*sw^2) + 
              2*(-1 + 4*sw^2)*t)) + mz^2*(-1 + sw^2)*(11*d*(2*Pi)^d*s + 
             2^(1 + d)*Pi^d*(s - 6*d*s + 2*s*sw^2 + t - 4*sw^2*t)))*
          GaugeXi[Q] + (s*(d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(s + 2*s*sw^2 + t - 
               4*sw^2*t)) + mz^2*(-1 + sw^2)*(-11*d*(2*Pi)^d*s + 
             2^(1 + d)*Pi^d*(s + 5*d*s + 2*s*sw^2 + t - 4*sw^2*t)))*
          GaugeXi[Q]^2 - mz^2*(-1 + sw^2)*(-(d*(2*Pi)^d*s) + 
           2^(1 + d)*Pi^d*(s + 2*s*sw^2 + t - 4*sw^2*t))*GaugeXi[Q]^3))/2 - 
      2*(1 - d)*s*(sw^2*((2^(2 + d)*Pi^d - d*(2*Pi)^d)*s^2*t + 
          mz^4*(2^(2 + d)*Pi^d - d*(2*Pi)^d)*(-1 + sw^2)^2*t - 
          2^(1 + d)*mz^2*Pi^d*(1 - sw^2)*((8 - 6*d + d^2)*s^2 + 
            (12 - 11*d + 2*d^2)*s*t - 4*t^2)) + (1/2 - sw^2)*
         ((2^(1 + d)*Pi^d - d*(2*Pi)^d)*s^2*t + mz^4*(2^(1 + d)*Pi^d - 
            d*(2*Pi)^d)*(-1 + sw^2)^2*t - 2^(1 + d)*mz^2*Pi^d*(1 - sw^2)*
           ((-2 + d)^2*s^2 + (18 - 11*d + 2*d^2)*s*t + 4*t^2)) - 
        2*(sw^2*((2^(2 + d)*Pi^d - d*(2*Pi)^d)*s^2*t + mz^4*(-1 + sw^2)^2*
             (-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(2*s - (-3 + d)*t)) - 
            mz^2*(1 - sw^2)*(-21*d*(2*Pi)^d*s*t + 2^(1 + d)*Pi^d*(
                (8 - 6*d + d^2)*s^2 + 2*(5 + d^2)*s*t - 4*t^2))) + 
          (1/2 - sw^2)*((2^(1 + d)*Pi^d - d*(2*Pi)^d)*s^2*t - 
            mz^4*(-1 + sw^2)^2*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(-s + 
                (-3 + d)*t)) - mz^2*(1 - sw^2)*(-21*d*(2*Pi)^d*s*t + 
              2^(1 + d)*Pi^d*((-2 + d)^2*s^2 + (17 + 2*d^2)*s*t + 4*t^2))))*
         GaugeXi[Q] + (sw^2*((2^(2 + d)*Pi^d - d*(2*Pi)^d)*s^2*t - 
            2^(1 + d)*mz^4*Pi^d*(-1 + sw^2)^2*(2*(-4 + d)*s + (-8 + 3*d)*t) - 
            2^(1 + d)*mz^2*Pi^d*(1 - sw^2)*((8 - 6*d + d^2)*s^2 + 
              (4 - 9*d + 2*d^2)*s*t - 4*t^2)) + (1/2 - sw^2)*
           ((2^(1 + d)*Pi^d - d*(2*Pi)^d)*s^2*t - 2^(1 + d)*mz^4*Pi^d*
             (-1 + sw^2)^2*(2*(-2 + d)*s + (-10 + 3*d)*t) - 
            2^(1 + d)*mz^2*Pi^d*(1 - sw^2)*((-2 + d)^2*s^2 + 
              (14 - 9*d + 2*d^2)*s*t + 4*t^2)))*GaugeXi[Q]^2 + 
        mz^2*(2*Pi)^d*(1 - sw^2)*(s*(-2 + d - 4*sw^2)*t - 
          mz^2*(-1 + sw^2)*(s*(-2 + d - 4*sw^2) + 2*(-3 + d)*t))*
         GaugeXi[Q]^3 + (mz^4*(-1 + sw^2)^2*(-(d*(2*Pi)^d) + 
           2^(1 + d)*Pi^d*(1 + 2*sw^2))*t*GaugeXi[Q]^4)/2)))/
    (2^(2*(2 + d))*(-1 + d)*mz^4*Pi^(2*d)*(mz^2 - s)*s*sw^4*(-1 + sw^2)^2*
     (-1 + GaugeXi[Q])^2), ((I/3)*2^(-5 - d)*EL^6*
     (s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2)) + 2*s*(8 - 5*d + d^2 - 8*sw^2)*
       t + 4*(1 - 4*sw^2)*t^2)*CKM[1, 1]*CKMC[1, 1]*
     (4*(-1 + d)^2*mz^2*(-1 + sw^2) + d*(s - mz^2*(-1 + sw^2))*GaugeXi[Q] + 
      d*mz^2*(-1 + sw^2)*GaugeXi[Q]^2))/((-1 + d)*d*mz^4*Pi^d*(mz^2 - s)*s*
     sw^4*(-1 + sw^2)^2*GaugeXi[Q]), ((I/3)*EL^6*CKM[1, 1]*CKMC[1, 1]*
     (2^(1 + d)*Pi^d*(1/2 - 2*sw^2)*(s - s*GaugeXi[Q])^2*
       (d*(s + mz^2*(-1 + sw^2))^2 + 2*mz^2*(1 - sw^2)*
         (-(d*s) - (-2 + d)*mz^2*(-1 + sw^2))*GaugeXi[Q] + 
        d*mz^4*(-1 + sw^2)^2*GaugeXi[Q]^2) - 
      (2*Pi)^d*(-(s*(-4 + d + 4*sw^2))/2 + t - 4*sw^2*t)*(-1 + GaugeXi[Q])^2*
       ((s + mz^2*(-1 + sw^2))^2*(d*s + 2*t) + 2*mz^2*(1 - sw^2)*
         (-(mz^2*(-1 + sw^2)*((-2 + d)*s - 2*t)) - s*(d*s + 2*t))*
         GaugeXi[Q] + mz^4*(-1 + sw^2)^2*(d*s + 2*t)*GaugeXi[Q]^2) - 
      ((-1 + d)*s*(s + mz^2*(-1 + sw^2) + mz^2*(-1 + sw^2)*GaugeXi[Q])*
        (s*(d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(s + 2*s*sw^2 + t - 4*sw^2*t)) - 
         mz^2*(-1 + sw^2)*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (s - d*s + 2*s*sw^2 + t - 4*sw^2*t)) + 
         (-(2^(1 + d)*Pi^d*s*(s*(-2 + d - 4*sw^2) + 2*(-1 + 4*sw^2)*t)) + 
           mz^2*(-1 + sw^2)*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*
              (s + 2*s*sw^2 + t - 4*sw^2*t)))*GaugeXi[Q] - 
         (s*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(s + 2*s*sw^2 + t - 4*sw^2*
                t)) - mz^2*(-1 + sw^2)*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
              (s - d*s + 2*s*sw^2 + t - 4*sw^2*t)))*GaugeXi[Q]^2 - 
         mz^2*(-1 + sw^2)*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*
            (s + 2*s*sw^2 + t - 4*sw^2*t))*GaugeXi[Q]^3))/2 - 
      ((-1 + d)*s*(s + mz^2*(-1 + sw^2) + mz^2*(-1 + sw^2)*GaugeXi[Q])*
        (s*(d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(s + 2*s*sw^2 + t - 4*sw^2*t)) + 
         mz^2*(-(d*(2*Pi)^d*s*(-15 + 19*sw^2)) + 2^(1 + d)*Pi^d*
            (s*(1 - 8*d + sw^2 + 10*d*sw^2 - 2*sw^4) + (1 - 5*sw^2 + 4*sw^4)*
              t)) - (2^(1 + d)*Pi^d*s*(s*(-2 + d - 4*sw^2) + 
             2*(-1 + 4*sw^2)*t) + mz^2*(-3*d*(2*Pi)^d*s*(-3 + 7*sw^2) + 
             2^(1 + d)*Pi^d*(s*(1 - 5*d + sw^2 + 11*d*sw^2 - 2*sw^4) + 
               (1 - 5*sw^2 + 4*sw^4)*t)))*GaugeXi[Q] + 
         (s*(d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(s + 2*s*sw^2 + t - 4*sw^2*t)) + 
           mz^2*(-3*d*(2*Pi)^d*s*(-3 + 7*sw^2) + 2^(1 + d)*Pi^d*
              (s*(-1 - 4*d - sw^2 + 10*d*sw^2 + 2*sw^4) + (-1 + 5*sw^2 - 
                 4*sw^4)*t)))*GaugeXi[Q]^2 - mz^2*(-1 + sw^2)*
          (-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(s + 2*s*sw^2 + t - 4*sw^2*t))*
          GaugeXi[Q]^3))/2 - 2*(1 - d)*s*
       (sw^2*((2^(2 + d)*Pi^d - d*(2*Pi)^d)*s^2*t + 
          mz^4*(2^(1 + d)*(2 + 3*d)*Pi^d - 7*d*(2*Pi)^d)*(-1 + sw^2)^2*t - 
          2^(1 + d)*mz^2*Pi^d*(1 - sw^2)*((8 - 6*d + d^2)*s^2 + 
            (12 - 11*d + 2*d^2)*s*t - 4*t^2)) + (1/2 - sw^2)*
         ((2^(1 + d)*Pi^d - d*(2*Pi)^d)*s^2*t + 
          mz^4*(2^(1 + d)*(1 + 3*d)*Pi^d - 7*d*(2*Pi)^d)*(-1 + sw^2)^2*t - 
          2^(1 + d)*mz^2*Pi^d*(1 - sw^2)*((-2 + d)^2*s^2 + 
            (18 - 11*d + 2*d^2)*s*t + 4*t^2)) - 
        2*(sw^2*((2^(2 + d)*Pi^d - d*(2*Pi)^d)*s^2*t + mz^4*(-1 + sw^2)^2*
             (-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(2*s - (-3 + d)*t)) - 
            mz^2*(1 - sw^2)*(-21*d*(2*Pi)^d*s*t + 2^(1 + d)*Pi^d*(
                (8 - 6*d + d^2)*s^2 + 2*(5 + d^2)*s*t - 4*t^2))) + 
          (1/2 - sw^2)*((2^(1 + d)*Pi^d - d*(2*Pi)^d)*s^2*t - 
            mz^4*(-1 + sw^2)^2*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(-s + 
                (-3 + d)*t)) - mz^2*(1 - sw^2)*(-21*d*(2*Pi)^d*s*t + 
              2^(1 + d)*Pi^d*((-2 + d)^2*s^2 + (17 + 2*d^2)*s*t + 4*t^2))))*
         GaugeXi[Q] + (sw^2*((2^(2 + d)*Pi^d - d*(2*Pi)^d)*s^2*t - 
            2^(1 + d)*mz^4*Pi^d*(-1 + sw^2)^2*(2*(-4 + d)*s + (-8 + 3*d)*t) - 
            2^(1 + d)*mz^2*Pi^d*(1 - sw^2)*((8 - 6*d + d^2)*s^2 + 
              (4 - 9*d + 2*d^2)*s*t - 4*t^2)) + (1/2 - sw^2)*
           ((2^(1 + d)*Pi^d - d*(2*Pi)^d)*s^2*t - 2^(1 + d)*mz^4*Pi^d*
             (-1 + sw^2)^2*(2*(-2 + d)*s + (-10 + 3*d)*t) - 
            2^(1 + d)*mz^2*Pi^d*(1 - sw^2)*((-2 + d)^2*s^2 + 
              (14 - 9*d + 2*d^2)*s*t + 4*t^2)))*GaugeXi[Q]^2 + 
        mz^2*(2*Pi)^d*(1 - sw^2)*(s*(-2 + d - 4*sw^2)*t - 
          mz^2*(-1 + sw^2)*(s*(-2 + d - 4*sw^2) + 2*(-3 + d)*t))*
         GaugeXi[Q]^3 + (mz^4*(-1 + sw^2)^2*(-(d*(2*Pi)^d) + 
           2^(1 + d)*Pi^d*(1 + 2*sw^2))*t*GaugeXi[Q]^4)/2)))/
    (2^(2*(2 + d))*(-1 + d)*mz^4*Pi^(2*d)*(mz^2 - s)*s*sw^4*(-1 + sw^2)^2*
     (-1 + GaugeXi[Q])^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((I/3)*4^(-3 - 2*d)*EL^6*(3 - 4*sw^2)*CKM[1, 1]*CKMC[1, 1]*
     (-(2^(2 + 3*d)*(mz - d*mz)^2*Pi^(3*d)*s*(1 - sw^2)*
        (sw^4*((8 - 6*d + d^2)*s^2 + 2*(4 - 5*d + d^2)*s*t - 4*t^2) - 
         (-1/2 + sw^2)^2*((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 4*t^2))) - 
      2^(-2 + 3*d)*Pi^(3*d)*(8*mz^2*s*(-1 + sw^2) + 
        8*d^2*mz^4*(-1 + sw^2)^2 - d*(s^2 + 13*mz^2*s*(-1 + sw^2) + 
          8*mz^4*(-1 + sw^2)^2))*(s^2*(d^2*(-1 + 4*sw^2) - 
          4*d*(-1 + 4*sw^2 + 2*sw^4) + 4*(-1 + 4*sw^2 + 4*sw^4)) + 
        2*s*(d*(5 - 20*sw^2) + d^2*(-1 + 4*sw^2) - 8*(1 - 4*sw^2 + 2*sw^4))*
         t - 4*(1 - 4*sw^2 + 8*sw^4)*t^2)*GaugeXi[Q] + 
      (d^4*mz^2*(2*Pi)^(3*d)*s*(-1 + sw^2)*(-1 + 4*sw^2)*
         (-3*s + 4*mz^2*(-1 + sw^2))*(s + 2*t) - 2^(-2 + 3*d)*d^3*Pi^(3*d)*s*
         (2*s^2*(-1 + 4*sw^2)*(s + 2*t) + 16*mz^4*(-1 + sw^2)^2*
           (s*(-5 + 20*sw^2 + 8*sw^4) + 12*(-1 + 4*sw^2)*t) - 
          3*mz^2*s*(-1 + sw^2)*(s*(-15 + 60*sw^2 + 32*sw^4) + 
            38*(-1 + 4*sw^2)*t)) - 2^(4 + 3*d)*mz^2*Pi^(3*d)*s*(1 - sw^2)*
         (sw^4*(2*s^2 + 2*s*t - t^2) - ((1 - 2*sw^2)^2*(s^2 + 4*s*t + t^2))/
           4) + 2^(2 + 3*d)*d*Pi^(3*d)*
         (sw^4*(-(mz^2*s*(-1 + sw^2)*(12*s^2 + 16*s*t - 3*t^2)) - 
            16*mz^4*(-1 + sw^2)^2*(2*s^2 + 2*s*t - t^2) + 
            2*s^2*(-2*s^2 - 2*s*t + t^2)) + (-1/2 + sw^2)^2*
           (2*s^2*(s^2 + 4*s*t + t^2) + 16*mz^4*(-1 + sw^2)^2*
             (s^2 + 4*s*t + t^2) + mz^2*s*(-1 + sw^2)*(7*s^2 + 22*s*t + 
              3*t^2))) + 2^(1 + 3*d)*d^2*Pi^(3*d)*
         (sw^4*(2*s^3*(3*s + 5*t) - mz^2*s*(-1 + sw^2)*(37*s^2 + 29*s*t - 
              24*t^2) + 16*mz^4*(-1 + sw^2)^2*(7*s^2 + 9*s*t - 2*t^2)) - 
          (-1/2 + sw^2)^2*(2*s^3*(2*s + 5*t) + 16*mz^4*(-1 + sw^2)^2*
             (4*s^2 + 13*s*t + 2*t^2) - mz^2*s*(-1 + sw^2)*(16*s^2 + 77*s*t + 
              24*t^2))))*GaugeXi[Q]^2 + 8^d*d*Pi^(3*d)*
       (sw^4*(s^2 + (-1 + 8*d)*mz^2*s*(-1 + sw^2) - 8*(-1 + d)*mz^4*
           (-1 + sw^2)^2)*((8 - 6*d + d^2)*s^2 + 2*(4 - 5*d + d^2)*s*t - 
          4*t^2) + ((1 - 2*sw^2)^2*(-s^2 - (-1 + 8*d)*mz^2*s*(-1 + sw^2) + 
           8*(-1 + d)*mz^4*(-1 + sw^2)^2)*((-2 + d)^2*s^2 + 
           2*(8 - 5*d + d^2)*s*t + 4*t^2))/4)*GaugeXi[Q]^3 + 
      d*mz^2*(2*Pi)^(3*d)*s*(1 - sw^2)*
       (sw^4*((8 - 6*d + d^2)*s^2 + 2*(4 - 5*d + d^2)*s*t - 4*t^2) - 
        (-1/2 + sw^2)^2*((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 4*t^2))*
       GaugeXi[Q]^4))/((-1 + d)*d*mz^4*Pi^(4*d)*(mz^2 - s)^2*s*sw^6*
     (-1 + sw^2)^3*(-1 + GaugeXi[Q])^2*GaugeXi[Q]), 
   ((I/3)*4^(-3 - 2*d)*EL^6*(3 - 4*sw^2)*CKM[1, 1]*CKMC[1, 1]*
     (-((-1 + d)*mz^4*(2*Pi)^(3*d)*(-1 + sw^2)^2*(1 - 4*sw^2 + 8*sw^4)*
        (s + 2*mz^2*(-1 + sw^2))*((-2 + d)*s^2 - 4*s*t - 4*(-1 + d)*t^2)*
        (-1 + GaugeXi[Q])^2) + 2^(1 + 3*d)*(1 - d)*Pi^(3*d)*s*
       (s/2 + mz^2*(-1 + sw^2))*((-1/2 + sw^2)^2*
         (-4*mz^2*s*(-1 + sw^2)*((-2 + d)*s - 2*t) + 
          s^2*(-((-2 + d)*s) + 2*t) + 4*mz^4*(-1 + sw^2)^2*
           ((10 - 7*d + d^2)*s - 2*(-3 + d)*t)) + 
        sw^4*(s^2*((-4 + d)*s + 2*t) + 4*mz^2*s*(-1 + sw^2)*
           ((-4 + d)*s + 2*t) - 4*mz^4*(-1 + sw^2)^2*((8 - 5*d + d^2)*s + 
            2*(-3 + d)*t)))*(-1 + GaugeXi[Q])^2 - 2^(2 + 3*d)*(1 - d)*mz^4*
       Pi^(3*d)*(-1 + sw^2)^2*(s + 2*t)*
       (sw^4*(-2*(-2 + d)*mz^2*(-1 + sw^2)*((-4 + d)*s + 2*t) - 
          s*((24 - 10*d + d^2)*s + 2*(2 + d)*t)) - (-1/2 + sw^2)^2*
         (-2*(-2 + d)*mz^2*(-1 + sw^2)*((-2 + d)*s - 2*t) + 
          s*(-((12 - 8*d + d^2)*s) + 2*(2 + d)*t)))*(-1 + GaugeXi[Q])^2 + 
      2^(1 + d)*(1 - d)*Pi^d*s*((2*Pi)^(2*d)*sw^4*((-4 + d)*s^3*t + 
          4*(-3 + d)*mz^6*(-1 + sw^2)^3*((-4 + d)*s + 2*t) - 
          2*mz^4*s*(-1 + sw^2)^2*(3*(12 - 7*d + d^2)*s + 
            2*(47 - 27*d + 4*d^2)*t) + 2*mz^2*s*(1 - sw^2)*
           (2*(8 - 6*d + d^2)*s^2 + (28 - 23*d + 4*d^2)*s*t - 8*t^2)) + 
        (-1/2 + sw^2)^2*(4^(1 + d)*(-3 + d)*mz^6*Pi^(2*d)*(1 - sw^2)^3*
           ((-2 + d)*s - 2*t) - (-2 + d)*(2*Pi)^(2*d)*s^3*t + 
          2^(1 + 2*d)*mz^4*Pi^(2*d)*s*(-1 + sw^2)^2*(3*(6 - 5*d + d^2)*s + 
            2*(37 - 25*d + 4*d^2)*t) - 2^(1 + 2*d)*mz^2*Pi^(2*d)*s*(1 - sw^2)*
           (2*(-2 + d)^2*s^2 + (38 - 23*d + 4*d^2)*s*t + 8*t^2)))*
       (-1 + GaugeXi[Q])^2 - ((-1 + d)*s*(s + 2*mz^2*(-1 + sw^2))*
        (8*mz^4*(-1 + sw^2)^2*(4*(-3 + d)*s*sw^4 + (1 - 4*sw^2 + 8*sw^4)*t) + 
         s^2*(-(s*(-2 + d + 8*sw^2 - 4*d*sw^2 + 8*sw^4)) + 
           2*(1 - 4*sw^2 + 8*sw^4)*t) + 4*mz^2*s*(-1 + sw^2)*
          (-(s*(-2 + d + 8*sw^2 - 4*d*sw^2 + 8*sw^4)) + 
           2*(1 - 4*sw^2 + 8*sw^4)*t))*((2*Pi)^(3*d) - 2^(1 + 3*d)*Pi^(3*d)*
          GaugeXi[Q] + (2*Pi)^(3*d)*GaugeXi[Q]^2))/4 + 
      4^(-1 + d)*Pi^(2*d)*s^2*(1 - 4*sw^2 + 8*sw^4)*
       (d*s^2 + 4*d*mz^2*s*(-1 + sw^2) + 4*(-1 + d)*mz^4*(-1 + sw^2)^2)*
       (-((2*Pi)^d*s) - 2^(1 + d)*mz^2*Pi^d*(-1 + sw^2) + 
        2^(1 + d)*Pi^d*(s + 2*mz^2*(-1 + sw^2))*GaugeXi[Q] - 
        ((2*Pi)^d*s + 2^(1 + d)*mz^2*Pi^d*(-1 + sw^2))*GaugeXi[Q]^2) + 
      4^(-1 + d)*Pi^(2*d)*s^2*(1 - 4*sw^2 + 8*sw^4)*
       (d*s^2 + 4*d*mz^2*s*(-1 + sw^2) + 4*(-1 + d)*mz^4*(-1 + sw^2)^2)*
       ((2^(1 + d)*Pi^d - 3*(2*Pi)^d)*s - 2^(1 + d)*mz^2*Pi^d*(-1 + sw^2) + 
        2^(1 + d)*Pi^d*(s + 2*mz^2*(-1 + sw^2))*GaugeXi[Q] - 
        ((2*Pi)^d*s + 2^(1 + d)*mz^2*Pi^d*(-1 + sw^2))*GaugeXi[Q]^2) - 
      (2*Pi)^(2*d)*s*(4*(-1 + d)*mz^4*(-1 + sw^2)^2 + s*(d*s + 2*t) + 
        4*mz^2*(-1 + sw^2)*(d*s + 2*t))*
       (sw^4*(s*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(s - t)) + 
          2^(1 + d)*mz^2*Pi^d*(1 - sw^2)*((-2 + d)*s + 2*t)) + 
        ((1 - 2*sw^2)^2*(2^(1 + d)*mz^2*Pi^d*(-1 + sw^2)*((-4 + d)*s - 2*t) + 
           s*(d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(2*s + t))))/4 + 
        2^(-1 + d)*Pi^d*(s + 2*mz^2*(-1 + sw^2))*
         (s*(4 - 16*sw^2 + 8*sw^4 + d*(-1 + 4*sw^2)) + 
          2*(1 - 4*sw^2 + 8*sw^4)*t)*GaugeXi[Q] + 
        (sw^4*(s*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(s - t)) + 
            2^(1 + d)*mz^2*Pi^d*(1 - sw^2)*((-2 + d)*s + 2*t)) + 
          ((1 - 2*sw^2)^2*(2^(1 + d)*mz^2*Pi^d*(-1 + sw^2)*((-4 + d)*s - 2*
                t) + s*(d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(2*s + t))))/4)*
         GaugeXi[Q]^2)))/((-1 + d)*mz^4*Pi^(4*d)*(mz^2 - s)^2*s*sw^6*
     (-1 + sw^2)^3*(-1 + GaugeXi[Q])^2), 
   ((-I/3)*2^(-5 - d)*EL^6*mz^2*(-3 + 4*sw^2)*(-2*s + mz^2*(-1 + sw^2))*
     (s^2*(d^2*(1 - 4*sw^2) + 4*d*(-1 + 4*sw^2 + 2*sw^4) - 
        4*(-1 + 4*sw^2 + 4*sw^4)) + 2*s*(8 - 5*d + d^2 - 32*sw^2 + 
        20*d*sw^2 - 4*d^2*sw^2 + 16*sw^4)*t + 4*(1 - 4*sw^2 + 8*sw^4)*t^2)*
     CKM[1, 1]*CKMC[1, 1])/(Pi^d*(mz^2 - s)^2*s*sw^6), 0, 0, 
   ((I/3)*2^(-8 - d)*EL^6*(-3 + 4*sw^2)*
     (s^2*(d^2*(1 - 4*sw^2) + 4*d*(-1 + 4*sw^2 + 2*sw^4) - 
        4*(-1 + 4*sw^2 + 4*sw^4)) + 2*s*(8 - 5*d + d^2 - 32*sw^2 + 
        20*d*sw^2 - 4*d^2*sw^2 + 16*sw^4)*t + 4*(1 - 4*sw^2 + 8*sw^4)*t^2)*
     CKM[1, 1]*CKMC[1, 1]*(d*s + (4 - 13*d + 4*d^2)*mz^2*(-1 + sw^2) + 
      d*mz^2*(-1 + sw^2)*GaugeXi[Q]))/((-1 + d)*d*mz^4*Pi^d*(mz^2 - s)^2*sw^6*
     (-1 + sw^2)^3), ((-I/3)*2^(-8 - 3*d)*EL^6*(3 - 4*sw^2)*CKM[1, 1]*
     CKMC[1, 1]*((-1 + d)*(2*Pi)^(2*d)*(s - 2*mz^2*(-1 + sw^2))*
       (-(s*(-2 + d + 8*sw^2 - 4*d*sw^2 + 8*sw^4)) + 2*(1 - 4*sw^2 + 8*sw^4)*
         t)*(-1 + GaugeXi[Q])^2*(s + 2*mz^2*(-1 + sw^2)*GaugeXi[Q])^2 + 
      (2*Pi)^d*s*(1 - 4*sw^2 + 8*sw^4)*(d*s^2 + 4*d*mz^2*s*(-1 + sw^2)*
         GaugeXi[Q] + 4*(-1 + d)*mz^4*(-1 + sw^2)^2*GaugeXi[Q]^2)*
       ((2*Pi)^d*s - 2^(1 + d)*mz^2*Pi^d*(-1 + sw^2) + 
        2^(1 + d)*Pi^d*(-s + 2*mz^2*(-1 + sw^2))*GaugeXi[Q] + 
        ((2*Pi)^d*s - 2^(1 + d)*mz^2*Pi^d*(-1 + sw^2))*GaugeXi[Q]^2) - 
      (2*Pi)^d*s*(1 - 4*sw^2 + 8*sw^4)*(d*s^2 + 4*d*mz^2*s*(-1 + sw^2)*
         GaugeXi[Q] + 4*(-1 + d)*mz^4*(-1 + sw^2)^2*GaugeXi[Q]^2)*
       ((2^(1 + d)*Pi^d - 3*(2*Pi)^d)*s + 2^(1 + d)*mz^2*Pi^d*(-1 + sw^2) + 
        2^(1 + d)*Pi^d*(s - 2*mz^2*(-1 + sw^2))*GaugeXi[Q] + 
        (-((2*Pi)^d*s) + 2^(1 + d)*mz^2*Pi^d*(-1 + sw^2))*GaugeXi[Q]^2) + 
      2^(1 + 2*d)*(1 - d)*Pi^(2*d)*(s - 2*mz^2*(-1 + sw^2))*
       (-1 + GaugeXi[Q])^2*(s^2*(-2 + d + 8*sw^2 - 4*d*sw^2 + 8*sw^4)*t + 
        4*mz^2*s*(-1 + sw^2)*(-2 + d + 8*sw^2 - 4*d*sw^2 + 8*sw^4)*t*
         GaugeXi[Q] - 2*mz^4*(-1 + sw^2)^2*
         (s*(-2 + d + 8*sw^2 - 4*d*sw^2 + 8*sw^4) - 2*(1 - 4*sw^2 + 8*sw^4)*
           t)*GaugeXi[Q]^2) - 2^(2 + d)*Pi^d*(s*(d*s + 2*t) + 
        4*mz^2*(-1 + sw^2)*(d*s + 2*t)*GaugeXi[Q] + 4*(-1 + d)*mz^4*
         (-1 + sw^2)^2*GaugeXi[Q]^2)*
       (sw^4*(2^(1 + d)*mz^2*Pi^d*(1 - sw^2)*((-2 + d)*s + 2*t) + 
          s*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(-s + t))) + 
        ((1 - 2*sw^2)^2*(2^(1 + d)*mz^2*Pi^d*(-1 + sw^2)*((-4 + d)*s - 2*t) + 
           s*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(2*s + t))))/4 + 
        2^(1 + d)*Pi^d*(s - 2*mz^2*(-1 + sw^2))*
         ((-1/2 + sw^2)^2*((-4 + d)*s - 2*t) - sw^4*((-2 + d)*s + 2*t))*
         GaugeXi[Q] + (sw^4*(2^(1 + d)*mz^2*Pi^d*(1 - sw^2)*
             ((-2 + d)*s + 2*t) + s*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(-s + 
                t))) + ((1 - 2*sw^2)^2*(2^(1 + d)*mz^2*Pi^d*(-1 + sw^2)*
              ((-4 + d)*s - 2*t) + s*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*
                (2*s + t))))/4)*GaugeXi[Q]^2) + 2^(2 + d)*(1 - d)*Pi^d*
       (s + 2*mz^2*(-1 + sw^2)*GaugeXi[Q])*
       (s*((-1/2 + sw^2)^2*(2^(1 + d)*mz^2*Pi^d*(1 - sw^2)*((-2 + d)*s - 
              2*t) - s*(5*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s - 3*d*s + t))) - 
          sw^4*(2^(1 + d)*mz^2*Pi^d*(1 - sw^2)*((-4 + d)*s + 2*t) + 
            s*(-5*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*((-2 + 3*d)*s + t)))) - 
        2*(sw^4*(3*mz^2*s*(1 - sw^2)*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(2*s - 
                t)) - 2^(1 + d)*mz^4*Pi^d*(-1 + sw^2)^2*((-4 + d)*s + 2*t) - 
            s^2*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(-2*s + t))) + 
          (-1/2 + sw^2)^2*(2^(1 + d)*mz^4*Pi^d*(-1 + sw^2)^2*
             ((-2 + d)*s - 2*t) + s^2*(d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(s + 
                t)) - 3*mz^2*s*(1 - sw^2)*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(
                s + t))))*GaugeXi[Q] - 
        (sw^4*(-3*2^(1 + d)*mz^2*Pi^d*s*(-1 + sw^2)*((-4 + d)*s + 2*t) + 
            2^(3 + d)*mz^4*Pi^d*(-1 + sw^2)^2*((-4 + d)*s + 2*t) + 
            s^2*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(-2*s + t))) - 
          (-1/2 + sw^2)^2*(-3*2^(1 + d)*mz^2*Pi^d*s*(-1 + sw^2)*
             ((-2 + d)*s - 2*t) + 2^(3 + d)*mz^4*Pi^d*(-1 + sw^2)^2*
             ((-2 + d)*s - 2*t) + s^2*(d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(s + 
                t))))*GaugeXi[Q]^2 - 2^(1 + d)*mz^2*Pi^d*(1 - sw^2)*
         (s - 2*mz^2*(-1 + sw^2))*((-1/2 + sw^2)^2*((-2 + d)*s - 2*t) - 
          sw^4*((-4 + d)*s + 2*t))*GaugeXi[Q]^3)))/
    ((-1 + d)*mz^4*Pi^(3*d)*(mz^2 - s)^2*sw^6*(-1 + sw^2)^3*
     (-1 + GaugeXi[Q])^2), ((I/3)*2^(-8 - d)*EL^6*(-3 + 4*sw^2)*
     (s^2*(d^2*(1 - 4*sw^2) + 4*d*(-1 + 4*sw^2 + 2*sw^4) - 
        4*(-1 + 4*sw^2 + 4*sw^4)) + 2*s*(8 - 5*d + d^2 - 32*sw^2 + 
        20*d*sw^2 - 4*d^2*sw^2 + 16*sw^4)*t + 4*(1 - 4*sw^2 + 8*sw^4)*t^2)*
     CKM[1, 1]*CKMC[1, 1]*(-(d*s) + (-4 - d + 4*d^2)*mz^2*(-1 + sw^2) + 
      d*mz^2*(-1 + sw^2)*GaugeXi[Q]))/((-1 + d)*d*mz^4*Pi^d*(mz^2 - s)^2*sw^6*
     (-1 + sw^2)^3), ((-I/3)*EL^6*(3 - 4*sw^2)*CKM[1, 1]*CKMC[1, 1]*
     (s^2*(1 - 4*sw^2 + 8*sw^4)*(2^(1 + d)*Pi^d - 3*(2*Pi)^d + 
        2^(1 + d)*Pi^d*GaugeXi[Q] - (2*Pi)^d*GaugeXi[Q]^2)*
       (d*(s + mz^2*(-1 + sw^2))^2 + 2*mz^2*(-1 + sw^2)*
         (d*s + (-2 + d)*mz^2*(-1 + sw^2))*GaugeXi[Q] + 
        d*mz^4*(-1 + sw^2)^2*GaugeXi[Q]^2) - s^2*(1 - 4*sw^2 + 8*sw^4)*
       ((2*Pi)^d - 2^(1 + d)*Pi^d*GaugeXi[Q] + (2*Pi)^d*GaugeXi[Q]^2)*
       (d*(s + mz^2*(-1 + sw^2))^2 + 2*mz^2*(-1 + sw^2)*
         (d*s + (-2 + d)*mz^2*(-1 + sw^2))*GaugeXi[Q] + 
        d*mz^4*(-1 + sw^2)^2*GaugeXi[Q]^2) + (1 - d)*s*(1 - GaugeXi[Q])*
       (s + mz^2*(-1 + sw^2) + mz^2*(-1 + sw^2)*GaugeXi[Q])*
       (-((s + mz^2*(-1 + sw^2))*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*
            (s*(-1 + d + 4*sw^2 - 2*d*sw^2 + 4*sw^4) + (-1 + 4*sw^2 - 8*sw^4)*
              t))) + s*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
           (s*(-1 - 2*(-2 + d)*sw^2 + 4*sw^4) + (-1 + 4*sw^2 - 8*sw^4)*t))*
         GaugeXi[Q] + mz^2*(-1 + sw^2)*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
           (s*(-1 - 2*(-2 + d)*sw^2 + 4*sw^4) + (-1 + 4*sw^2 - 8*sw^4)*t))*
         GaugeXi[Q]^2) + ((s + mz^2*(-1 + sw^2))^2*(d*s + 2*t) + 
        2*mz^2*(1 - sw^2)*(-(mz^2*(-1 + sw^2)*((-2 + d)*s - 2*t)) - 
          s*(d*s + 2*t))*GaugeXi[Q] + mz^4*(-1 + sw^2)^2*(d*s + 2*t)*
         GaugeXi[Q]^2)*(4*sw^4*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(-s + t)) + 
        (1 - 2*sw^2)^2*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(2*s + t)) + 
        2^(3 + d)*Pi^d*((-1/2 + sw^2)^2*((-4 + d)*s - 2*t) - 
          sw^4*((-2 + d)*s + 2*t))*GaugeXi[Q] + 
        (-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(2*s*(1 + (-4 + d)*sw^2 + 2*sw^4) + 
            (1 - 4*sw^2 + 8*sw^4)*t))*GaugeXi[Q]^2) - 
      4*(1 - d)*s*(s + mz^2*(-1 + sw^2) + mz^2*(-1 + sw^2)*GaugeXi[Q])*
       (-((1 - 2*sw^2)^2*(mz^2*(-1 + sw^2)*(-(d*(2*Pi)^d*s) + 
              2^(1 + d)*Pi^d*(s + t)) + s*(5*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(
                s - 3*d*s + t))))/4 - 
        sw^4*(mz^2*(1 - sw^2)*(-5*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
             (2*(1 + d)*s - t)) + s*(-5*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
             ((-2 + 3*d)*s + t))) + 
        (sw^4*(mz^2*(1 - sw^2)*(-3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*((2 + d)*s - 
                t)) + 2^(1 + d)*Pi^d*s*((-4 + d)*s + 2*t)) - 
          (-1/2 + sw^2)^2*(2^(1 + d)*Pi^d*s*((-2 + d)*s - 2*t) + 
            mz^2*(1 - sw^2)*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s - d*s + t))))*
         GaugeXi[Q] - (sw^4*(s*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(-2*s + t)) + 
            mz^2*(1 - sw^2)*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*((-2 + d)*s + 
                t))) + (-1/2 + sw^2)^2*(s*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(
                s + t)) + mz^2*(1 - sw^2)*(-3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(
                s + d*s + t))))*GaugeXi[Q]^2 + 
        (mz^2*(-1 + sw^2)*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (s*(-1 - 2*(-2 + d)*sw^2 + 4*sw^4) + (-1 + 4*sw^2 - 8*sw^4)*t))*
          GaugeXi[Q]^3)/4) + 8*(1 - d)*s*
       (sw^4*((2^(1 + d)*(-2 + d)*Pi^d - d*(2*Pi)^d)*s^2*t - 
          mz^4*(2^(2 + d)*(1 - 6*d)*Pi^d + 23*d*(2*Pi)^d)*(-1 + sw^2)^2*t + 
          2^(1 + d)*mz^2*Pi^d*(1 - sw^2)*((8 - 6*d + d^2)*s^2 + 
            (12 - 11*d + 2*d^2)*s*t - 4*t^2)) - (-1/2 + sw^2)^2*
         ((2^(1 + d)*(-1 + d)*Pi^d - d*(2*Pi)^d)*s^2*t + 
          mz^4*(2^(1 + d)*(-1 + 12*d)*Pi^d - 23*d*(2*Pi)^d)*(-1 + sw^2)^2*t + 
          2^(1 + d)*mz^2*Pi^d*(1 - sw^2)*((-2 + d)^2*s^2 + 
            (18 - 11*d + 2*d^2)*s*t + 4*t^2)) + 
        2*(sw^4*((2^(2 + d)*Pi^d - d*(2*Pi)^d)*s^2*t + mz^4*(-1 + sw^2)^2*
             (-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(2*s - (-3 + d)*t)) - 
            mz^2*(1 - sw^2)*(-21*d*(2*Pi)^d*s*t + 2^(1 + d)*Pi^d*(
                (8 - 6*d + d^2)*s^2 + 2*(5 + d^2)*s*t - 4*t^2))) - 
          (-1/2 + sw^2)^2*((2^(1 + d)*Pi^d - d*(2*Pi)^d)*s^2*t + 
            mz^4*(-1 + sw^2)^2*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(s - 
                (-3 + d)*t)) - mz^2*(1 - sw^2)*(-21*d*(2*Pi)^d*s*t + 
              2^(1 + d)*Pi^d*((-2 + d)^2*s^2 + (17 + 2*d^2)*s*t + 4*t^2))))*
         GaugeXi[Q] - (sw^4*((2^(2 + d)*Pi^d - d*(2*Pi)^d)*s^2*t - 
            2^(1 + d)*mz^4*Pi^d*(-1 + sw^2)^2*(2*(-4 + d)*s + (-8 + 3*d)*t) - 
            2^(1 + d)*mz^2*Pi^d*(1 - sw^2)*((8 - 6*d + d^2)*s^2 + 
              (4 - 9*d + 2*d^2)*s*t - 4*t^2)) - (-1/2 + sw^2)^2*
           ((2^(1 + d)*Pi^d - d*(2*Pi)^d)*s^2*t - 2^(1 + d)*mz^4*Pi^d*
             (-1 + sw^2)^2*(2*(-2 + d)*s + (-10 + 3*d)*t) - 
            2^(1 + d)*mz^2*Pi^d*(1 - sw^2)*((-2 + d)^2*s^2 + 
              (14 - 9*d + 2*d^2)*s*t + 4*t^2)))*GaugeXi[Q]^2 + 
        2^(-1 + d)*mz^2*Pi^d*(-1 + sw^2)*
         (-(s*(-2 + d + 8*sw^2 - 4*d*sw^2 + 8*sw^4)*t) + 
          mz^2*(-1 + sw^2)*(s*(-2 + d + 8*sw^2 - 4*d*sw^2 + 8*sw^4) - 
            2*(-3 + d)*(-1 + 4*sw^2)*t))*GaugeXi[Q]^3 - 
        (mz^4*(-1 + sw^2)^2*(d*(2*Pi)^d + 2^(1 + d)*Pi^d*
            (-1 - 2*(-2 + d)*sw^2 + 4*sw^4))*t*GaugeXi[Q]^4)/4)))/
    (2^(2*(4 + d))*(-1 + d)*mz^4*Pi^(2*d)*(mz^2 - s)^2*sw^6*(-1 + sw^2)^3*
     (-1 + GaugeXi[Q])^2), ((-I/3)*2^(-8 - d)*EL^6*(-3 + 4*sw^2)*
     (s^2*(d^2*(1 - 4*sw^2) + 4*d*(-1 + 4*sw^2 + 2*sw^4) - 
        4*(-1 + 4*sw^2 + 4*sw^4)) + 2*s*(8 - 5*d + d^2 - 32*sw^2 + 
        20*d*sw^2 - 4*d^2*sw^2 + 16*sw^4)*t + 4*(1 - 4*sw^2 + 8*sw^4)*t^2)*
     CKM[1, 1]*CKMC[1, 1]*(4*(-1 + d)^2*mz^2*(-1 + sw^2) + 
      d*(s - mz^2*(-1 + sw^2))*GaugeXi[Q] + d*mz^2*(-1 + sw^2)*GaugeXi[Q]^2))/
    ((-1 + d)*d*mz^4*Pi^d*(mz^2 - s)^2*sw^6*(-1 + sw^2)^3*GaugeXi[Q]), 
   ((-I/3)*EL^6*(3 - 4*sw^2)*CKM[1, 1]*CKMC[1, 1]*
     (s^2*(1 - 4*sw^2 + 8*sw^4)*(2^(1 + d)*Pi^d - 3*(2*Pi)^d + 
        2^(1 + d)*Pi^d*GaugeXi[Q] - (2*Pi)^d*GaugeXi[Q]^2)*
       (d*(s + mz^2*(-1 + sw^2))^2 + 2*mz^2*(-1 + sw^2)*
         (d*s + (-2 + d)*mz^2*(-1 + sw^2))*GaugeXi[Q] + 
        d*mz^4*(-1 + sw^2)^2*GaugeXi[Q]^2) - s^2*(1 - 4*sw^2 + 8*sw^4)*
       ((2*Pi)^d - 2^(1 + d)*Pi^d*GaugeXi[Q] + (2*Pi)^d*GaugeXi[Q]^2)*
       (d*(s + mz^2*(-1 + sw^2))^2 + 2*mz^2*(-1 + sw^2)*
         (d*s + (-2 + d)*mz^2*(-1 + sw^2))*GaugeXi[Q] + 
        d*mz^4*(-1 + sw^2)^2*GaugeXi[Q]^2) + 
      ((s + mz^2*(-1 + sw^2))^2*(d*s + 2*t) + 2*mz^2*(1 - sw^2)*
         (-(mz^2*(-1 + sw^2)*((-2 + d)*s - 2*t)) - s*(d*s + 2*t))*
         GaugeXi[Q] + mz^4*(-1 + sw^2)^2*(d*s + 2*t)*GaugeXi[Q]^2)*
       (4*sw^4*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(-s + t)) + 
        (1 - 2*sw^2)^2*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(2*s + t)) + 
        2^(3 + d)*Pi^d*((-1/2 + sw^2)^2*((-4 + d)*s - 2*t) - 
          sw^4*((-2 + d)*s + 2*t))*GaugeXi[Q] + 
        (-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(2*s*(1 + (-4 + d)*sw^2 + 2*sw^4) + 
            (1 - 4*sw^2 + 8*sw^4)*t))*GaugeXi[Q]^2) + 
      4*(1 - d)*s*(s + mz^2*(-1 + sw^2) + mz^2*(-1 + sw^2)*GaugeXi[Q])*
       ((-1/2 + sw^2)^2*(mz^2*(1 - sw^2)*(-13*d*(2*Pi)^d*s + 
            2^(1 + d)*Pi^d*((-1 + 7*d)*s - t)) + 
          s*(5*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s - 3*d*s + t))) + 
        sw^4*(s*(-5*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*((-2 + 3*d)*s + t)) + 
          mz^2*(1 - sw^2)*(9*d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*((-2 + 5*d)*s + 
              t))) + (-(sw^4*(2^(1 + d)*Pi^d*s*((-4 + d)*s + 2*t) - 
             mz^2*(1 - sw^2)*(-3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
                (2*(-1 + d)*s + t)))) + (-1/2 + sw^2)^2*
           (2^(1 + d)*Pi^d*s*((-2 + d)*s - 2*t) + mz^2*(1 - sw^2)*
             (7*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s - 4*d*s + t))))*GaugeXi[Q] + 
        (sw^4*(s - mz^2*(-1 + sw^2))*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
             (-2*s + t)) + (-1/2 + sw^2)^2*
           (s*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(s + t)) + 
            mz^2*(1 - sw^2)*(-5*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s + 2*d*s + 
                t))))*GaugeXi[Q]^2 - (mz^2*(-1 + sw^2)*(d*(2*Pi)^d*s + 
           2^(1 + d)*Pi^d*(s*(-1 - 2*(-2 + d)*sw^2 + 4*sw^4) + 
             (-1 + 4*sw^2 - 8*sw^4)*t))*GaugeXi[Q]^3)/4) + 
      4*(1 - d)*s*(s + mz^2*(-1 + sw^2) + mz^2*(-1 + sw^2)*GaugeXi[Q])*
       ((-1/2 + sw^2)^2*(mz^2*(1 - sw^2)*(-7*d*(2*Pi)^d*s + 
            2^(1 + d)*Pi^d*((-1 + 4*d)*s - t)) + 
          s*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s - d*s + t))) - 
        sw^4*(s*(d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*((-2 + d)*s + t)) + 
          mz^2*(1 - sw^2)*(-7*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
             ((-2 + 4*d)*s + t))) + 
        ((-1/2 + sw^2)^2*(2^(1 + d)*Pi^d*s*((-2 + d)*s - 2*t) + 
            mz^2*(1 - sw^2)*(7*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s - 4*d*s + 
                t))) - sw^4*(2^(1 + d)*Pi^d*s*((-4 + d)*s + 2*t) - 
            mz^2*(1 - sw^2)*(-7*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*((-2 + 4*d)*s + 
                t))))*GaugeXi[Q] - 
        (sw^4*(s*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(2*s - t)) + 
            mz^2*(1 - sw^2)*(-7*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*((2 + 3*d)*s - 
                t))) - (-1/2 + sw^2)^2*(s*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(
                s + t)) + mz^2*(1 - sw^2)*(-7*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(
                s + 3*d*s + t))))*GaugeXi[Q]^2 - 
        (mz^2*(-1 + sw^2)*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (s*(-1 - 2*(-2 + d)*sw^2 + 4*sw^4) + (-1 + 4*sw^2 - 8*sw^4)*t))*
          GaugeXi[Q]^3)/4) + 8*(1 - d)*s*
       (sw^4*((2^(1 + d)*(-2 + d)*Pi^d - d*(2*Pi)^d)*s^2*t - 
          mz^4*(2^(2 + d)*(1 - 8*d)*Pi^d + 31*d*(2*Pi)^d)*(-1 + sw^2)^2*t + 
          2^(1 + d)*mz^2*Pi^d*(1 - sw^2)*((8 - 6*d + d^2)*s^2 + 
            (12 - 11*d + 2*d^2)*s*t - 4*t^2)) - (-1/2 + sw^2)^2*
         ((2^(1 + d)*(-1 + d)*Pi^d - d*(2*Pi)^d)*s^2*t + 
          mz^4*(2^(1 + d)*(-1 + 16*d)*Pi^d - 31*d*(2*Pi)^d)*(-1 + sw^2)^2*t + 
          2^(1 + d)*mz^2*Pi^d*(1 - sw^2)*((-2 + d)^2*s^2 + 
            (18 - 11*d + 2*d^2)*s*t + 4*t^2)) + 
        2*(sw^4*((2^(2 + d)*Pi^d - d*(2*Pi)^d)*s^2*t + mz^4*(-1 + sw^2)^2*
             (-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(2*s - (-3 + d)*t)) - 
            mz^2*(1 - sw^2)*(-21*d*(2*Pi)^d*s*t + 2^(1 + d)*Pi^d*(
                (8 - 6*d + d^2)*s^2 + 2*(5 + d^2)*s*t - 4*t^2))) - 
          (-1/2 + sw^2)^2*((2^(1 + d)*Pi^d - d*(2*Pi)^d)*s^2*t + 
            mz^4*(-1 + sw^2)^2*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(s - 
                (-3 + d)*t)) - mz^2*(1 - sw^2)*(-21*d*(2*Pi)^d*s*t + 
              2^(1 + d)*Pi^d*((-2 + d)^2*s^2 + (17 + 2*d^2)*s*t + 4*t^2))))*
         GaugeXi[Q] - (sw^4*((2^(2 + d)*Pi^d - d*(2*Pi)^d)*s^2*t - 
            2^(1 + d)*mz^4*Pi^d*(-1 + sw^2)^2*(2*(-4 + d)*s + (-8 + 3*d)*t) - 
            2^(1 + d)*mz^2*Pi^d*(1 - sw^2)*((8 - 6*d + d^2)*s^2 + 
              (4 - 9*d + 2*d^2)*s*t - 4*t^2)) - (-1/2 + sw^2)^2*
           ((2^(1 + d)*Pi^d - d*(2*Pi)^d)*s^2*t - 2^(1 + d)*mz^4*Pi^d*
             (-1 + sw^2)^2*(2*(-2 + d)*s + (-10 + 3*d)*t) - 
            2^(1 + d)*mz^2*Pi^d*(1 - sw^2)*((-2 + d)^2*s^2 + 
              (14 - 9*d + 2*d^2)*s*t + 4*t^2)))*GaugeXi[Q]^2 + 
        2^(-1 + d)*mz^2*Pi^d*(-1 + sw^2)*
         (-(s*(-2 + d + 8*sw^2 - 4*d*sw^2 + 8*sw^4)*t) + 
          mz^2*(-1 + sw^2)*(s*(-2 + d + 8*sw^2 - 4*d*sw^2 + 8*sw^4) - 
            2*(-3 + d)*(-1 + 4*sw^2)*t))*GaugeXi[Q]^3 - 
        (mz^4*(-1 + sw^2)^2*(d*(2*Pi)^d + 2^(1 + d)*Pi^d*
            (-1 - 2*(-2 + d)*sw^2 + 4*sw^4))*t*GaugeXi[Q]^4)/4)))/
    (2^(2*(4 + d))*(-1 + d)*mz^4*Pi^(2*d)*(mz^2 - s)^2*sw^6*(-1 + sw^2)^3*
     (-1 + GaugeXi[Q])^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((I/9)*2^(3 - d)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2))/(Pi^d*s^3), 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, ((I/9)*4^(-1 - d)*EL^6*(3*d^2*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(2*s^2*(3 + 10*sw^2 - 16*sw^4 + 
          d*(-3 - 5*sw^2 + 8*sw^4)) + s*(-15*d + 3*d^2 + 
          8*(3 - 5*sw^2 + 8*sw^4))*t + 2*(3 - 20*sw^2 + 32*sw^4)*t^2)))/
    (Pi^(2*d)*(mz^2 - s)*s^2*sw^2*(-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, ((I/9)*EL^6*(-1 + 2*sw^2)*(-1 + 4*sw^2)*((-2 + d)*s^2 + 4*s*t + 
      4*t^2))/((2*Pi)^d*(mz^2 - s)*s^2*sw^2*(-1 + sw^2)), 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, ((I/9)*4^(-2 - d)*EL^6*(-1 + 2*sw^2)*(-3*d^2*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(2*s^2*(-3 + 8*sw^2 + 3*d^2*sw^2 + 28*sw^4 - 32*sw^6 + 
          d*(3 - 10*sw^2 - 14*sw^4 + 16*sw^6)) + 
        s*(d*(15 - 60*sw^2) + 3*d^2*(-1 + 4*sw^2) + 
          8*(-3 + 14*sw^2 - 14*sw^4 + 16*sw^6))*t + 
        2*(-3 + 20*sw^2 - 56*sw^4 + 64*sw^6)*t^2)))/
    (Pi^(2*d)*(mz^2 - s)^2*s*sw^4*(-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, ((I/9)*2^(-1 - d)*EL^6*(-1 + 2*sw^2)*(-3 + 8*sw^2)*
     ((-2 + d)*s^2 + 4*s*t + 4*t^2))/(Pi^d*(mz^2 - s)*s^2*sw^2*(-1 + sw^2)), 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, ((I/9)*2^(-5 - 2*d)*EL^6*(-1 + 2*sw^2)*(-9*d^2*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(2*s^2*(-9 + 6*sw^2 + 6*d^2*sw^2 + 64*sw^4 - 64*sw^6 + 
          d*(9 - 15*sw^2 - 32*sw^4 + 32*sw^6)) + 
        s*(-15*d*(-3 + 8*sw^2) + 3*d^2*(-3 + 8*sw^2) + 
          8*(-9 + 33*sw^2 - 32*sw^4 + 32*sw^6))*t + 
        2*(-9 + 60*sw^2 - 128*sw^4 + 128*sw^6)*t^2)))/
    (Pi^(2*d)*(mz^2 - s)^2*s*sw^4*(-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((I/9)*2^(-5 - 2*d)*EL^6*(3*d^2*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(2*s^2*(3 + 10*sw^2 - 16*sw^4 + 
          d*(-3 - 5*sw^2 + 8*sw^4)) + s*(-15*d + 3*d^2 + 
          8*(3 - 5*sw^2 + 8*sw^4))*t + 2*(3 - 20*sw^2 + 32*sw^4)*t^2)))/
    (Pi^(2*d)*(mz^2 - s)^2*s*sw^4*(-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((I/9)*4^(-4 - d)*EL^6*(9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
       (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
          3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
            64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
          d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 
            64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*
         t^2)))/(Pi^(2*d)*(mz^2 - s)^3*sw^6*(-1 + sw^2)^3), 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, ((I/9)*2^(-5 - 2*d)*EL^6*(3*d^2*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(2*s^2*(3 + 10*sw^2 - 16*sw^4 + 
          d*(-3 - 5*sw^2 + 8*sw^4)) + s*(-15*d + 3*d^2 + 
          8*(3 - 5*sw^2 + 8*sw^4))*t + 2*(3 - 20*sw^2 + 32*sw^4)*t^2)))/
    (Pi^(2*d)*(mz^2 - s)^2*s*sw^4*(-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 
   ((I/9)*4^(-4 - d)*EL^6*(9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
       (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
          3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
            64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
          d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 
            64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*
         t^2)))/(Pi^(2*d)*(mz^2 - s)^3*sw^6*(-1 + sw^2)^3), 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, ((I/9)*4^(-2 - d)*EL^6*(1 - 2*sw^2)^2*(3*d^2*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(2*s^2*(3 + 10*sw^2 - 16*sw^4 + 
          d*(-3 - 5*sw^2 + 8*sw^4)) + s*(-15*d + 3*d^2 + 
          8*(3 - 5*sw^2 + 8*sw^4))*t + 2*(3 - 20*sw^2 + 32*sw^4)*t^2)))/
    (Pi^(2*d)*(mz^2 - s)^2*s*sw^4*(-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((I/9)*2^(-7 - 2*d)*EL^6*(1 - 2*sw^2)^2*(9*d^2*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
          3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
            64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
          d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 
            64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*
         t^2)))/(Pi^(2*d)*(mz^2 - s)^3*sw^6*(-1 + sw^2)^3), 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, ((-I/9)*2^(3 - d)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2))/(Pi^d*s^3), 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, ((-I/9)*2^(-2 - d)*EL^6*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
        4*d*(-3 - 5*sw^2 + 8*sw^4)) + 2*s*(-15*d + 3*d^2 + 
        8*(3 - 5*sw^2 + 8*sw^4))*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2))/
    (Pi^d*(mz^2 - s)*s^2*sw^2*(-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, ((-I/9)*2^(3 - d)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2))/(Pi^d*s^3), 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, ((-I/9)*2^(-2 - d)*EL^6*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
        4*d*(-3 - 5*sw^2 + 8*sw^4)) + 2*s*(-15*d + 3*d^2 + 
        8*(3 - 5*sw^2 + 8*sw^4))*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2))/
    (Pi^d*(mz^2 - s)*s^2*sw^2*(-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, ((-I/9)*2^(1 - d)*EL^6*(-1 + 4*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
    (Pi^d*(mz^2 - s)*s^2*sw^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/9)*2^(-3 - 2*d)*EL^6*(-3*d^2*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(2*s^2*(-3 + 8*sw^2 + 3*d^2*sw^2 + 28*sw^4 - 32*sw^6 + 
          d*(3 - 10*sw^2 - 14*sw^4 + 16*sw^6)) + 
        s*(d*(15 - 60*sw^2) + 3*d^2*(-1 + 4*sw^2) + 
          8*(-3 + 14*sw^2 - 14*sw^4 + 16*sw^6))*t + 
        2*(-3 + 20*sw^2 - 56*sw^4 + 64*sw^6)*t^2)))/
    (Pi^(2*d)*(mz^2 - s)^2*s*sw^4*(-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, ((-I/9)*EL^6*(-3 + 8*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
    ((2*Pi)^d*(mz^2 - s)*s^2*sw^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/9)*4^(-2 - d)*EL^6*(-9*d^2*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(2*s^2*(-9 + 6*sw^2 + 6*d^2*sw^2 + 64*sw^4 - 64*sw^6 + 
          d*(9 - 15*sw^2 - 32*sw^4 + 32*sw^6)) + 
        s*(-15*d*(-3 + 8*sw^2) + 3*d^2*(-3 + 8*sw^2) + 
          8*(-9 + 33*sw^2 - 32*sw^4 + 32*sw^6))*t + 
        2*(-9 + 60*sw^2 - 128*sw^4 + 128*sw^6)*t^2)))/
    (Pi^(2*d)*(mz^2 - s)^2*s*sw^4*(-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, ((-I/9)*2^(1 - d)*EL^6*(-1 + 4*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
    (Pi^d*(mz^2 - s)*s^2*sw^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/9)*2^(-3 - 2*d)*EL^6*(-3*d^2*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(2*s^2*(-3 + 8*sw^2 + 3*d^2*sw^2 + 28*sw^4 - 32*sw^6 + 
          d*(3 - 10*sw^2 - 14*sw^4 + 16*sw^6)) + 
        s*(d*(15 - 60*sw^2) + 3*d^2*(-1 + 4*sw^2) + 
          8*(-3 + 14*sw^2 - 14*sw^4 + 16*sw^6))*t + 
        2*(-3 + 20*sw^2 - 56*sw^4 + 64*sw^6)*t^2)))/
    (Pi^(2*d)*(mz^2 - s)^2*s*sw^4*(-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, ((-I/9)*EL^6*(-3 + 8*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
    ((2*Pi)^d*(mz^2 - s)*s^2*sw^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/9)*4^(-2 - d)*EL^6*(-9*d^2*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(2*s^2*(-9 + 6*sw^2 + 6*d^2*sw^2 + 64*sw^4 - 64*sw^6 + 
          d*(9 - 15*sw^2 - 32*sw^4 + 32*sw^6)) + 
        s*(-15*d*(-3 + 8*sw^2) + 3*d^2*(-3 + 8*sw^2) + 
          8*(-9 + 33*sw^2 - 32*sw^4 + 32*sw^6))*t + 
        2*(-9 + 60*sw^2 - 128*sw^4 + 128*sw^6)*t^2)))/
    (Pi^(2*d)*(mz^2 - s)^2*s*sw^4*(-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, ((-I/9)*2^(-2 - d)*EL^6*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
        4*d*(-3 - 5*sw^2 + 8*sw^4)) + 2*s*(-15*d + 3*d^2 + 
        8*(3 - 5*sw^2 + 8*sw^4))*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2))/
    (Pi^d*(mz^2 - s)^2*s*sw^4), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/9)*2^(-5 - 2*d)*EL^6*(9*d^2*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
          3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
            64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
          d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 
            64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*
         t^2)))/(Pi^(2*d)*(mz^2 - s)^3*sw^6*(-1 + sw^2)), 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, ((-I/9)*2^(-2 - d)*EL^6*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
        4*d*(-3 - 5*sw^2 + 8*sw^4)) + 2*s*(-15*d + 3*d^2 + 
        8*(3 - 5*sw^2 + 8*sw^4))*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2))/
    (Pi^d*(mz^2 - s)^2*s*sw^4), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/9)*2^(-5 - 2*d)*EL^6*(9*d^2*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
          3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
            64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
          d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 
            64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*
         t^2)))/(Pi^(2*d)*(mz^2 - s)^3*sw^6*(-1 + sw^2)), 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((I/9)*2^(3 - d)*(-1 + d)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
     (1 + (-1 + d)*GaugeXi[Q]))/(d*Pi^d*s^3*GaugeXi[Q]), 0, 0, 0, 0, 
   ((I/9)*2^(3 - d)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
     (1 + (-1 + d)*GaugeXi[Q]))/(d*Pi^d*s^3), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ((-I/9)*2^(-2 - d)*(-1 + d)*EL^6*
     (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
      2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
      4*(3 - 20*sw^2 + 32*sw^4)*t^2)*(1 + (-1 + d)*GaugeXi[Q]))/
    (d*Pi^d*s^2*(-mz^2 + s)*sw^2*(-1 + sw^2)*GaugeXi[Q]), 0, 0, 0, 0, 
   ((-I/9)*2^(-2 - d)*EL^6*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
        4*d*(-3 - 5*sw^2 + 8*sw^4)) + 2*s*(-15*d + 3*d^2 + 
        8*(3 - 5*sw^2 + 8*sw^4))*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2)*
     (1 + (-1 + d)*GaugeXi[Q]))/(d*Pi^d*s^2*(-mz^2 + s)*sw^2*(-1 + sw^2)), 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/9)*2^(1 - d)*(-1 + d)*EL^6*(-1 + 4*sw^2)*((-2 + d)*s^2 + 4*s*t + 
      4*t^2)*(1 + (-1 + d)*GaugeXi[Q]))/(d*Pi^d*s^2*(-mz^2 + s)*sw^2*
     GaugeXi[Q]), 0, 0, 0, 0, ((-I/9)*2^(1 - d)*EL^6*(-1 + 4*sw^2)*
     ((-2 + d)*s^2 + 4*s*t + 4*t^2)*(1 + (-1 + d)*GaugeXi[Q]))/
    (d*Pi^d*s^2*(-mz^2 + s)*sw^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, ((I/9)*2^(-3 - d)*(-1 + d)*EL^6*
     (s^2*(3*d^2*(-1 + 4*sw^2) + 4*d*(3 - 10*sw^2 - 14*sw^4 + 16*sw^6) - 
        4*(3 - 8*sw^2 - 28*sw^4 + 32*sw^6)) + 
      2*s*(d*(15 - 60*sw^2) + 3*d^2*(-1 + 4*sw^2) + 
        8*(-3 + 14*sw^2 - 14*sw^4 + 16*sw^6))*t + 
      4*(-3 + 20*sw^2 - 56*sw^4 + 64*sw^6)*t^2)*(1 + (-1 + d)*GaugeXi[Q]))/
    (d*Pi^d*(mz^2 - s)^2*s*sw^4*(-1 + sw^2)*GaugeXi[Q]), 0, 0, 0, 0, 
   ((I/9)*2^(-3 - 2*d)*EL^6*(-3*d^2*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(2*s^2*(-3 + 8*sw^2 + 3*d^2*sw^2 + 28*sw^4 - 32*sw^6 + 
          d*(3 - 10*sw^2 - 14*sw^4 + 16*sw^6)) + 
        s*(d*(15 - 60*sw^2) + 3*d^2*(-1 + 4*sw^2) + 
          8*(-3 + 14*sw^2 - 14*sw^4 + 16*sw^6))*t + 
        2*(-3 + 20*sw^2 - 56*sw^4 + 64*sw^6)*t^2) + 
      (-3*(-5 + d)*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (2*s^2*(3 - 8*sw^2 + 3*d^3*sw^2 - 28*sw^4 + 32*sw^6 + 
            d^2*sw^2*(-13 - 14*sw^2 + 16*sw^4) - 6*d*(1 - 3*sw^2 - 7*sw^4 + 
              8*sw^6)) + s*(d^2*(18 - 72*sw^2) + 3*d^3*(-1 + 4*sw^2) - 
            8*(-3 + 14*sw^2 - 14*sw^4 + 16*sw^6) + d*(-39 + 172*sw^2 - 
              112*sw^4 + 128*sw^6))*t + 2*(-1 + d)*(-3 + 20*sw^2 - 56*sw^4 + 
            64*sw^6)*t^2))*GaugeXi[Q]))/(d*Pi^(2*d)*(mz^2 - s)^2*s*sw^4*
     (-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, ((-I/9)*(-1 + d)*EL^6*(-3 + 8*sw^2)*((-2 + d)*s^2 + 4*s*t + 
      4*t^2)*(1 + (-1 + d)*GaugeXi[Q]))/(d*(2*Pi)^d*s^2*(-mz^2 + s)*sw^2*
     GaugeXi[Q]), 0, 0, 0, 0, ((-I/9)*EL^6*(-3 + 8*sw^2)*
     ((-2 + d)*s^2 + 4*s*t + 4*t^2)*(1 + (-1 + d)*GaugeXi[Q]))/
    (d*(2*Pi)^d*s^2*(-mz^2 + s)*sw^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, ((-I/9)*2^(-1 - 2*d)*EL^6*
     (((-1 + d)*(-9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
          (2*s^2*(-9 + 6*sw^2 + 6*d^2*sw^2 + 64*sw^4 - 64*sw^6 + 
             d*(9 - 15*sw^2 - 32*sw^4 + 32*sw^6)) + 
           s*(-15*d*(-3 + 8*sw^2) + 3*d^2*(-3 + 8*sw^2) + 
             8*(-9 + 33*sw^2 - 32*sw^4 + 32*sw^6))*t + 
           2*(-9 + 60*sw^2 - 128*sw^4 + 128*sw^6)*t^2)))/8 - 
      (4*(1 - d)*sw^6*(d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
           ((-4 + 6*d - 3*d^2)*s^2 + (-16 + 18*d - 7*d^2 + d^3)*s*t + 
            2*(-2 + d)*t^2)) - ((-1 + d)*(3 - 4*sw^2)^2*(-1 + 2*sw^2)*
          (d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*((-4 + 6*d - 3*d^2)*s^2 + 
             (-16 + 18*d - 7*d^2 + d^3)*s*t + 2*(-2 + d)*t^2)))/8 + 
        (sw^2*(3 - 4*sw^2)^2*((-3 + d)*d^3*(2*Pi)^d*s^2 + 
           2^(1 + d)*Pi^d*((8 - 18*d + 14*d^2 - 3*d^3)*s^2 + 
             (-1 + d)^2*(8 - 6*d + d^2)*s*t - 2*(2 - 3*d + d^2)*t^2)))/4 - 
        4*sw^4*(1/2 - sw^2)*((-3 + d)*d^3*(2*Pi)^d*s^2 + 
          2^(1 + d)*Pi^d*((8 - 18*d + 14*d^2 - 3*d^3)*s^2 + 
            (-1 + d)^2*(8 - 6*d + d^2)*s*t - 2*(2 - 3*d + d^2)*t^2)))*
       GaugeXi[Q] + (4*(1 - d)*sw^6*(d^2*(1 + d)*(2*Pi)^d*s^2 + 
          2^(1 + d)*Pi^d*((-2 + 4*d - 3*d^2)*s^2 + (-8 + 13*d - 6*d^2 + d^3)*
             s*t + 2*(-1 + d)*t^2)) - ((-1 + d)*(3 - 4*sw^2)^2*(-1 + 2*sw^2)*
          (d^2*(1 + d)*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
            ((-2 + 4*d - 3*d^2)*s^2 + (-8 + 13*d - 6*d^2 + d^3)*s*t + 
             2*(-1 + d)*t^2)))/8 + (sw^2*(3 - 4*sw^2)^2*
          (d^2*(1 + d^2)*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
            ((4 - 11*d + 10*d^2 - 4*d^3)*s^2 + (-4 + d)*(-1 + d)^3*s*t - 
             2*(-1 + d)^2*t^2)))/4 - 4*sw^4*(1/2 - sw^2)*
         (d^2*(1 + d^2)*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
           ((4 - 11*d + 10*d^2 - 4*d^3)*s^2 + (-4 + d)*(-1 + d)^3*s*t - 
            2*(-1 + d)^2*t^2)))*GaugeXi[Q]^2))/(d*Pi^(2*d)*(mz^2 - s)^2*s*
     sw^4*(-1 + sw^2)*(-1 + GaugeXi[Q])*GaugeXi[Q]), 0, 0, 0, 0, 
   ((I/9)*4^(-2 - d)*EL^6*(-9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
       (2*s^2*(-9 + 6*sw^2 + 6*d^2*sw^2 + 64*sw^4 - 64*sw^6 + 
          d*(9 - 15*sw^2 - 32*sw^4 + 32*sw^6)) + 
        s*(-15*d*(-3 + 8*sw^2) + 3*d^2*(-3 + 8*sw^2) + 
          8*(-9 + 33*sw^2 - 32*sw^4 + 32*sw^6))*t + 
        2*(-9 + 60*sw^2 - 128*sw^4 + 128*sw^6)*t^2) + 
      (-9*(-5 + d)*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (2*s^2*(9 - 6*sw^2 + 6*d^3*sw^2 - 64*sw^4 + 64*sw^6 + 
            d^2*sw^2*(-21 - 32*sw^2 + 32*sw^4) - 3*d*(6 - 7*sw^2 - 32*sw^4 + 
              32*sw^6)) + s*(-18*d^2*(-3 + 8*sw^2) + 3*d^3*(-3 + 8*sw^2) - 
            8*(-9 + 33*sw^2 - 32*sw^4 + 32*sw^6) + d*(-117 + 384*sw^2 - 
              256*sw^4 + 256*sw^6))*t + 2*(-1 + d)*(-9 + 60*sw^2 - 128*sw^4 + 
            128*sw^6)*t^2))*GaugeXi[Q]))/(d*Pi^(2*d)*(mz^2 - s)^2*s*sw^4*
     (-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, ((I/9)*2^(-2 - d)*(-1 + d)*EL^6*
     (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
      2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
      4*(3 - 20*sw^2 + 32*sw^4)*t^2)*(1 + (-1 + d)*GaugeXi[Q]))/
    (d*Pi^d*(mz^2 - s)^2*s*sw^4*GaugeXi[Q]), 0, 0, 0, 0, 
   ((I/9)*2^(-2 - d)*EL^6*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
        4*d*(-3 - 5*sw^2 + 8*sw^4)) + 2*s*(-15*d + 3*d^2 + 
        8*(3 - 5*sw^2 + 8*sw^4))*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2)*
     (1 + (-1 + d)*GaugeXi[Q]))/(d*Pi^d*(mz^2 - s)^2*s*sw^4), 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((I/9)*2^(-1 - 2*d)*EL^6*(1 - sw^2)*
     ((sw^4*(3 - 4*sw^2)^2*((-7 + d)*d^2*(2*Pi)^d*s^2 + 
         2^(1 + d)*Pi^d*((-4 + 7*d)*s^2 + (-4 + d)*(-1 + d)^2*s*t - 
           2*(-1 + d)*t^2)))/4 - 4*sw^8*((-5 + d)*d^2*(2*Pi)^d*s^2 + 
        2^(1 + d)*Pi^d*((-2 + 4*d)*s^2 + (-8 + 13*d - 6*d^2 + d^3)*s*t + 
          2*(-1 + d)*t^2)) + (-1/2 + sw^2)^2*
       (4*sw^4*((-7 + d)*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
           ((-4 + 7*d)*s^2 + (-4 + d)*(-1 + d)^2*s*t - 2*(-1 + d)*t^2)) - 
        ((3 - 4*sw^2)^2*((-5 + d)*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
            ((-2 + 4*d)*s^2 + (-8 + 13*d - 6*d^2 + d^3)*s*t + 
             2*(-1 + d)*t^2)))/4) + 
      ((sw^4*(3 - 4*sw^2)^2*((-9 + d)*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
            (2*(4 - 9*d + 7*d^2)*s^2 + (-1 + d)^2*(8 - 6*d + d^2)*s*t - 
             2*(2 - 3*d + d^2)*t^2)))/4 - 4*sw^8*((-7 + d)*d^3*(2*Pi)^d*s^2 + 
          2^(1 + d)*Pi^d*((4 - 10*d + 9*d^2)*s^2 + (16 - 34*d + 25*d^2 - 
              8*d^3 + d^4)*s*t + 2*(2 - 3*d + d^2)*t^2)) + 
        (-1/2 + sw^2)^2*(4*sw^4*((-9 + d)*d^3*(2*Pi)^d*s^2 + 
            2^(1 + d)*Pi^d*(2*(4 - 9*d + 7*d^2)*s^2 + (-1 + d)^2*(8 - 6*d + 
                d^2)*s*t - 2*(2 - 3*d + d^2)*t^2)) - 
          ((3 - 4*sw^2)^2*((-7 + d)*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
              ((4 - 10*d + 9*d^2)*s^2 + (16 - 34*d + 25*d^2 - 8*d^3 + d^4)*s*
                t + 2*(2 - 3*d + d^2)*t^2)))/4))*GaugeXi[Q] - 
      ((sw^4*(3 - 4*sw^2)^2*(d^2*(21 + d^2)*(2*Pi)^d*s^2 + 
           2^(1 + d)*Pi^d*((4 - 11*d - 4*d^3)*s^2 + (-4 + d)*(-1 + d)^3*s*t - 
             2*(-1 + d)^2*t^2)))/4 - 4*sw^8*(d^2*(13 + d^2)*(2*Pi)^d*s^2 + 
          2^(1 + d)*Pi^d*((2 - 6*d - 3*d^3)*s^2 + (-1 + d)^2*(8 - 5*d + d^2)*
             s*t + 2*(-1 + d)^2*t^2)) + (-1/2 + sw^2)^2*
         (4*sw^4*(d^2*(21 + d^2)*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
             ((4 - 11*d - 4*d^3)*s^2 + (-4 + d)*(-1 + d)^3*s*t - 
              2*(-1 + d)^2*t^2)) - ((3 - 4*sw^2)^2*(d^2*(13 + d^2)*(2*Pi)^d*
              s^2 + 2^(1 + d)*Pi^d*((2 - 6*d - 3*d^3)*s^2 + (-1 + d)^2*
                (8 - 5*d + d^2)*s*t + 2*(-1 + d)^2*t^2)))/4))*GaugeXi[Q]^2))/
    (d*Pi^(2*d)*(mz^2 - s)^2*(-mz^2 + s)*sw^6*(-1 + sw^2)^2*(-1 + GaugeXi[Q])*
     GaugeXi[Q]), 0, 0, 0, 0, ((I/9)*2^(-5 - d)*EL^6*
     (s^2*(d^2*(9 - 60*sw^2 + 96*sw^4) + 4*(9 - 60*sw^2 + 44*sw^4 + 
          160*sw^6 - 128*sw^8) + 4*d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
          64*sw^8)) + 2*s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
        d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 
          64*sw^8))*t + 4*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^2)*
     (1 + (-1 + d)*GaugeXi[Q]))/(d*Pi^d*(mz^2 - s)^3*sw^6*(-1 + sw^2)), 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{((I/9)*2^(3 - d)*(-2 + d)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
    ((-1 + d)*Pi^d*s^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, 
  {((-I/9)*4^(-1 - d)*EL^6*(3*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
       (s^2*(-12 - 40*sw^2 + 64*sw^4 + d*(18 + 40*sw^2 - 64*sw^4) + 
          d^2*(-9 - 10*sw^2 + 16*sw^4)) + s*(-21*d^2 + 3*d^3 - 
          16*(3 - 5*sw^2 + 8*sw^4) + d*(54 - 40*sw^2 + 64*sw^4))*t + 
        2*(-2 + d)*(3 - 20*sw^2 + 32*sw^4)*t^2)))/
    ((-1 + d)*Pi^(2*d)*s*(-mz^2 + s)*sw^2*(-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{((I/9)*2^(3 - d)*(-2 + d)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
    ((-1 + d)*Pi^d*s^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, 
  {((-I/9)*4^(-1 - d)*EL^6*(3*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
       (s^2*(-12 - 40*sw^2 + 64*sw^4 + d*(18 + 40*sw^2 - 64*sw^4) + 
          d^2*(-9 - 10*sw^2 + 16*sw^4)) + s*(-21*d^2 + 3*d^3 - 
          16*(3 - 5*sw^2 + 8*sw^4) + d*(54 - 40*sw^2 + 64*sw^4))*t + 
        2*(-2 + d)*(3 - 20*sw^2 + 32*sw^4)*t^2)))/
    ((-1 + d)*Pi^(2*d)*s*(-mz^2 + s)*sw^2*(-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/9)*2^(4 - d)*(-2 + d)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
    ((-1 + d)*Pi^d*s^3), ((I/9)*2^(3 - d)*EL^6*(4*ml^2 + (-2 + d)*s)*
     ((-2 + d)*s^2 + 4*s*t + 4*t^2))/((-1 + d)*Pi^d*s^3), 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((I/9)*2^(-1 - d)*(-2 + d)*EL^6*
     (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
      2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
      4*(3 - 20*sw^2 + 32*sw^4)*t^2))/((-1 + d)*Pi^d*s^2*(-mz^2 + s)*sw^2*
     (-1 + sw^2)), ((-I/9)*2^(-2 - d)*EL^6*(4*ml^2 + (-2 + d)*s)*
     (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
      2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
      4*(3 - 20*sw^2 + 32*sw^4)*t^2))/((-1 + d)*Pi^d*s^2*(-mz^2 + s)*sw^2*
     (-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{((I/27)*2^(5 - d)*(-2 + d)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
    ((-1 + d)*Pi^d*s^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, 
  {((-I/27)*EL^6*(3*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
       (s^2*(-12 - 40*sw^2 + 64*sw^4 + d*(18 + 40*sw^2 - 64*sw^4) + 
          d^2*(-9 - 10*sw^2 + 16*sw^4)) + s*(-21*d^2 + 3*d^3 - 
          16*(3 - 5*sw^2 + 8*sw^4) + d*(54 - 40*sw^2 + 64*sw^4))*t + 
        2*(-2 + d)*(3 - 20*sw^2 + 32*sw^4)*t^2)))/((-1 + d)*(2*Pi)^(2*d)*s*
     (-mz^2 + s)*sw^2*(-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/27)*2^(6 - d)*(-2 + d)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
    ((-1 + d)*Pi^d*s^3), ((I/27)*2^(5 - d)*EL^6*(4*mc^2 + (-2 + d)*s)*
     ((-2 + d)*s^2 + 4*s*t + 4*t^2))/((-1 + d)*Pi^d*s^3), 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((I/27)*2^(1 - d)*(-2 + d)*EL^6*
     (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
      2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
      4*(3 - 20*sw^2 + 32*sw^4)*t^2))/((-1 + d)*Pi^d*s^2*(-mz^2 + s)*sw^2*
     (-1 + sw^2)), ((-I/27)*EL^6*(4*mc^2 + (-2 + d)*s)*
     (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
      2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
      4*(3 - 20*sw^2 + 32*sw^4)*t^2))/((-1 + d)*(2*Pi)^d*s^2*(-mz^2 + s)*sw^2*
     (-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/27)*2^(6 - d)*(-2 + d)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
    ((-1 + d)*Pi^d*s^3), ((I/27)*2^(5 - d)*EL^6*(4*mt^2 + (-2 + d)*s)*
     ((-2 + d)*s^2 + 4*s*t + 4*t^2))/((-1 + d)*Pi^d*s^3), 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((I/27)*2^(1 - d)*(-2 + d)*EL^6*
     (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
      2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
      4*(3 - 20*sw^2 + 32*sw^4)*t^2))/((-1 + d)*Pi^d*s^2*(-mz^2 + s)*sw^2*
     (-1 + sw^2)), ((-I/27)*EL^6*(4*mt^2 + (-2 + d)*s)*
     (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
      2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
      4*(3 - 20*sw^2 + 32*sw^4)*t^2))/((-1 + d)*(2*Pi)^d*s^2*(-mz^2 + s)*sw^2*
     (-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{((I/27)*2^(3 - d)*(-2 + d)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
    ((-1 + d)*Pi^d*s^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, 
  {((-I/27)*4^(-1 - d)*EL^6*(3*d^3*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(s^2*(-12 - 40*sw^2 + 64*sw^4 + 
          d*(18 + 40*sw^2 - 64*sw^4) + d^2*(-9 - 10*sw^2 + 16*sw^4)) + 
        s*(-21*d^2 + 3*d^3 - 16*(3 - 5*sw^2 + 8*sw^4) + 
          d*(54 - 40*sw^2 + 64*sw^4))*t + 2*(-2 + d)*(3 - 20*sw^2 + 32*sw^4)*
         t^2)))/((-1 + d)*Pi^(2*d)*s*(-mz^2 + s)*sw^2*(-1 + sw^2)), 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/27)*2^(4 - d)*(-2 + d)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
    ((-1 + d)*Pi^d*s^3), ((I/27)*2^(3 - d)*EL^6*(4*ms^2 + (-2 + d)*s)*
     ((-2 + d)*s^2 + 4*s*t + 4*t^2))/((-1 + d)*Pi^d*s^3), 0, 0, 0, 0, 0, 0}, 
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((I/27)*2^(-1 - d)*(-2 + d)*EL^6*
     (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
      2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
      4*(3 - 20*sw^2 + 32*sw^4)*t^2))/((-1 + d)*Pi^d*s^2*(-mz^2 + s)*sw^2*
     (-1 + sw^2)), ((-I/27)*2^(-2 - d)*EL^6*(4*ms^2 + (-2 + d)*s)*
     (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
      2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
      4*(3 - 20*sw^2 + 32*sw^4)*t^2))/((-1 + d)*Pi^d*s^2*(-mz^2 + s)*sw^2*
     (-1 + sw^2)), 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/27)*2^(4 - d)*(-2 + d)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
    ((-1 + d)*Pi^d*s^3), ((I/27)*2^(3 - d)*EL^6*(4*mb^2 + (-2 + d)*s)*
     ((-2 + d)*s^2 + 4*s*t + 4*t^2))/((-1 + d)*Pi^d*s^3), 0, 0, 0, 0}, 
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((I/27)*2^(-1 - d)*(-2 + d)*EL^6*
     (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
      2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
      4*(3 - 20*sw^2 + 32*sw^4)*t^2))/((-1 + d)*Pi^d*s^2*(-mz^2 + s)*sw^2*
     (-1 + sw^2)), ((-I/27)*2^(-2 - d)*EL^6*(4*mb^2 + (-2 + d)*s)*
     (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
      2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
      4*(3 - 20*sw^2 + 32*sw^4)*t^2))/((-1 + d)*Pi^d*s^2*(-mz^2 + s)*sw^2*
     (-1 + sw^2)), 0, 0, 0, 0}}, 
 {{((I/9)*2^(-1 - 2*d)*EL^6*(-7*d^2*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(s^2*(-2*(1 - 4*sw^2)^2 + 2*d*(1 - 4*sw^2)^2 + 
          d^2*(3 + 4*sw^2 - 8*sw^4)) - 2*(-2 + d)*s*(1 - 4*sw^2)^2*t - 
        2*(-2 + d)*(1 - 4*sw^2)^2*t^2)))/((-1 + d)*Pi^(2*d)*s*(-mz^2 + s)*
     sw^2*(-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, 
  {((I/9)*2^(-5 - 3*d)*EL^6*(3*d^3*(2*Pi)^(2*d)*s^2 + 
      2^(1 + 2*d)*Pi^(2*d)*(s^2*(12*d^3*sw^2*(-1 + 2*sw^2) + 
          d^2*(-9 + 68*sw^2 - 100*sw^4 - 144*sw^6 + 128*sw^8) + 
          4*(-3 + 20*sw^2 - 4*sw^4 - 144*sw^6 + 128*sw^8) - 
          2*d*(-9 + 64*sw^2 - 56*sw^4 - 288*sw^6 + 256*sw^8)) + 
        s*(-1 + 4*sw^2)*(d^2*(21 - 84*sw^2) + 3*d^3*(-1 + 4*sw^2) + 
          16*(3 - 14*sw^2 + 14*sw^4 - 16*sw^6) + 
          2*d*(-27 + 116*sw^2 - 56*sw^4 + 64*sw^6))*t + 
        2*(-2 + d)*(3 - 32*sw^2 + 136*sw^4 - 288*sw^6 + 256*sw^8)*t^2)))/
    ((-1 + d)*Pi^(3*d)*(mz^2 - s)^2*sw^4*(-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{((I/9)*2^(-1 - 2*d)*EL^6*(-7*d^2*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(s^2*(-2*(1 - 4*sw^2)^2 + 2*d*(1 - 4*sw^2)^2 + 
          d^2*(3 + 4*sw^2 - 8*sw^4)) - 2*(-2 + d)*s*(1 - 4*sw^2)^2*t - 
        2*(-2 + d)*(1 - 4*sw^2)^2*t^2)))/((-1 + d)*Pi^(2*d)*s*(-mz^2 + s)*
     sw^2*(-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, 
  {((I/9)*2^(-5 - 3*d)*EL^6*(3*d^3*(2*Pi)^(2*d)*s^2 + 
      2^(1 + 2*d)*Pi^(2*d)*(s^2*(12*d^3*sw^2*(-1 + 2*sw^2) + 
          d^2*(-9 + 68*sw^2 - 100*sw^4 - 144*sw^6 + 128*sw^8) + 
          4*(-3 + 20*sw^2 - 4*sw^4 - 144*sw^6 + 128*sw^8) - 
          2*d*(-9 + 64*sw^2 - 56*sw^4 - 288*sw^6 + 256*sw^8)) + 
        s*(-1 + 4*sw^2)*(d^2*(21 - 84*sw^2) + 3*d^3*(-1 + 4*sw^2) + 
          16*(3 - 14*sw^2 + 14*sw^4 - 16*sw^6) + 
          2*d*(-27 + 116*sw^2 - 56*sw^4 + 64*sw^6))*t + 
        2*(-2 + d)*(3 - 32*sw^2 + 136*sw^4 - 288*sw^6 + 256*sw^8)*t^2)))/
    ((-1 + d)*Pi^(3*d)*(mz^2 - s)^2*sw^4*(-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((I/9)*(-2 + d)*EL^6*(1 - 4*sw^2)^2*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
    ((-1 + d)*(2*Pi)^d*s^2*(-mz^2 + s)*sw^2*(-1 + sw^2)), 
   ((-I/9)*2^(-1 - d)*EL^6*(4*ml^2 + (-2 + d)*s)*(1 - 4*sw^2)^2*
     ((-2 + d)*s^2 + 4*s*t + 4*t^2))/((-1 + d)*Pi^d*s^2*(-mz^2 + s)*sw^2*
     (-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/9)*2^(-4 - d)*(-2 + d)*EL^6*(-1 + 4*sw^2)*
     (s^2*(3*d^2*(-1 + 4*sw^2) + 4*d*(3 - 10*sw^2 - 14*sw^4 + 16*sw^6) - 
        4*(3 - 8*sw^2 - 28*sw^4 + 32*sw^6)) + 
      2*s*(d*(15 - 60*sw^2) + 3*d^2*(-1 + 4*sw^2) + 
        8*(-3 + 14*sw^2 - 14*sw^4 + 16*sw^6))*t + 
      4*(-3 + 20*sw^2 - 56*sw^4 + 64*sw^6)*t^2))/((-1 + d)*Pi^d*(mz^2 - s)^2*
     s*sw^4*(-1 + sw^2)^2), ((I/9)*2^(-5 - d)*EL^6*(4*ml^2 + (-2 + d)*s)*
     (-1 + 4*sw^2)*(s^2*(3*d^2*(-1 + 4*sw^2) + 
        4*d*(3 - 10*sw^2 - 14*sw^4 + 16*sw^6) - 
        4*(3 - 8*sw^2 - 28*sw^4 + 32*sw^6)) + 
      2*s*(d*(15 - 60*sw^2) + 3*d^2*(-1 + 4*sw^2) + 
        8*(-3 + 14*sw^2 - 14*sw^4 + 16*sw^6))*t + 
      4*(-3 + 20*sw^2 - 56*sw^4 + 64*sw^6)*t^2))/((-1 + d)*Pi^d*(mz^2 - s)^2*
     s*sw^4*(-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{((-I/9)*4^(-1 - d)*EL^6*(21*d^2*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(s^2*(6 - 40*sw^2 + 64*sw^4 + 
          d*(-6 + 40*sw^2 - 64*sw^4) + d^2*(-9 - 10*sw^2 + 16*sw^4)) + 
        2*(-2 + d)*s*(3 - 20*sw^2 + 32*sw^4)*t + 2*(-2 + d)*
         (3 - 20*sw^2 + 32*sw^4)*t^2)))/((-1 + d)*Pi^(2*d)*s*(-mz^2 + s)*sw^2*
     (-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, 
  {((I/9)*8^(-2 - d)*EL^6*(9*d^3*(2*Pi)^(2*d)*s^2 + 2^(1 + 2*d)*Pi^(2*d)*
       (s^2*(6*d^3*sw^2*(-5 + 8*sw^2) + d*(54 - 288*sw^2 + 32*sw^4 + 
            1280*sw^6 - 1024*sw^8) + d^2*(-27 + 162*sw^2 - 152*sw^4 - 
            320*sw^6 + 256*sw^8) + 4*(-9 + 42*sw^2 + 40*sw^4 - 320*sw^6 + 
            256*sw^8)) + s*(-1 + 4*sw^2)*(-21*d^2*(-3 + 8*sw^2) + 
          3*d^3*(-3 + 8*sw^2) - 16*(-9 + 33*sw^2 - 32*sw^4 + 32*sw^6) + 
          2*d*(-81 + 252*sw^2 - 128*sw^4 + 128*sw^6))*t + 
        2*(-2 + d)*(1 - 4*sw^2)^2*(9 - 24*sw^2 + 32*sw^4)*t^2)))/
    ((-1 + d)*Pi^(3*d)*(mz^2 - s)^2*sw^4*(-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{((-I/9)*4^(-1 - d)*EL^6*(21*d^2*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(s^2*(6 - 40*sw^2 + 64*sw^4 + 
          d*(-6 + 40*sw^2 - 64*sw^4) + d^2*(-9 - 10*sw^2 + 16*sw^4)) + 
        2*(-2 + d)*s*(3 - 20*sw^2 + 32*sw^4)*t + 2*(-2 + d)*
         (3 - 20*sw^2 + 32*sw^4)*t^2)))/((-1 + d)*Pi^(2*d)*s*(-mz^2 + s)*sw^2*
     (-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, 
  {((I/9)*8^(-2 - d)*EL^6*(9*d^3*(2*Pi)^(2*d)*s^2 + 2^(1 + 2*d)*Pi^(2*d)*
       (s^2*(6*d^3*sw^2*(-5 + 8*sw^2) + d*(54 - 288*sw^2 + 32*sw^4 + 
            1280*sw^6 - 1024*sw^8) + d^2*(-27 + 162*sw^2 - 152*sw^4 - 
            320*sw^6 + 256*sw^8) + 4*(-9 + 42*sw^2 + 40*sw^4 - 320*sw^6 + 
            256*sw^8)) + s*(-1 + 4*sw^2)*(-21*d^2*(-3 + 8*sw^2) + 
          3*d^3*(-3 + 8*sw^2) - 16*(-9 + 33*sw^2 - 32*sw^4 + 32*sw^6) + 
          2*d*(-81 + 252*sw^2 - 128*sw^4 + 128*sw^6))*t + 
        2*(-2 + d)*(1 - 4*sw^2)^2*(9 - 24*sw^2 + 32*sw^4)*t^2)))/
    ((-1 + d)*Pi^(3*d)*(mz^2 - s)^2*sw^4*(-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((I/9)*2^(-1 - d)*(-2 + d)*EL^6*(-1 + 4*sw^2)*(-3 + 8*sw^2)*
     ((-2 + d)*s^2 + 4*s*t + 4*t^2))/((-1 + d)*Pi^d*s^2*(-mz^2 + s)*sw^2*
     (-1 + sw^2)), ((-I/9)*2^(-2 - d)*EL^6*(4*ml^2 + (-2 + d)*s)*
     (-1 + 4*sw^2)*(-3 + 8*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
    ((-1 + d)*Pi^d*s^2*(-mz^2 + s)*sw^2*(-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/9)*2^(-5 - d)*(-2 + d)*EL^6*(-1 + 4*sw^2)*
     (s^2*(3*d^2*(-3 + 8*sw^2) + 4*d*(9 - 15*sw^2 - 32*sw^4 + 32*sw^6) - 
        4*(9 - 6*sw^2 - 64*sw^4 + 64*sw^6)) + 
      2*s*(-15*d*(-3 + 8*sw^2) + 3*d^2*(-3 + 8*sw^2) + 
        8*(-9 + 33*sw^2 - 32*sw^4 + 32*sw^6))*t + 
      4*(-9 + 60*sw^2 - 128*sw^4 + 128*sw^6)*t^2))/
    ((-1 + d)*Pi^d*(mz^2 - s)^2*s*sw^4*(-1 + sw^2)^2), 
   ((I/9)*2^(-6 - d)*EL^6*(4*ml^2 + (-2 + d)*s)*(-1 + 4*sw^2)*
     (s^2*(3*d^2*(-3 + 8*sw^2) + 4*d*(9 - 15*sw^2 - 32*sw^4 + 32*sw^6) - 
        4*(9 - 6*sw^2 - 64*sw^4 + 64*sw^6)) + 
      2*s*(-15*d*(-3 + 8*sw^2) + 3*d^2*(-3 + 8*sw^2) + 
        8*(-9 + 33*sw^2 - 32*sw^4 + 32*sw^6))*t + 
      4*(-9 + 60*sw^2 - 128*sw^4 + 128*sw^6)*t^2))/
    ((-1 + d)*Pi^d*(mz^2 - s)^2*s*sw^4*(-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0}}, 
 {{((-I/27)*EL^6*(-1 + 4*sw^2)*(-3 + 8*sw^2)*(d^2*(2*Pi)^d*s^2 + 
      2^(2 + d)*Pi^d*(-((-1 + d)*s^2) + (-2 + d)*s*t + (-2 + d)*t^2)))/
    ((-1 + d)*(2*Pi)^(2*d)*s*(-mz^2 + s)*sw^2*(-1 + sw^2)), 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
  {((I/27)*2^(-4 - 3*d)*EL^6*(15*d^3*(2*Pi)^(2*d)*s^2 + 
      2^(1 + 2*d)*Pi^(2*d)*(s^2*(d^3*(-3 - 30*sw^2 + 48*sw^4) + 
          d^2*(-27 + 168*sw^2 - 172*sw^4 - 320*sw^6 + 256*sw^8) + 
          4*(-9 + 48*sw^2 + 20*sw^4 - 320*sw^6 + 256*sw^8) - 
          2*d*(-27 + 156*sw^2 - 56*sw^4 - 640*sw^6 + 512*sw^8)) + 
        s*(-3 + 8*sw^2)*(d^2*(21 - 84*sw^2) + 3*d^3*(-1 + 4*sw^2) + 
          16*(3 - 14*sw^2 + 14*sw^4 - 16*sw^6) + 
          2*d*(-27 + 116*sw^2 - 56*sw^4 + 64*sw^6))*t + 
        2*(-2 + d)*(3 - 8*sw^2)^2*(1 - 4*sw^2 + 8*sw^4)*t^2)))/
    ((-1 + d)*Pi^(3*d)*(mz^2 - s)^2*sw^4*(-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((I/27)*2^(1 - d)*(-2 + d)*EL^6*(-1 + 4*sw^2)*(-3 + 8*sw^2)*
     ((-2 + d)*s^2 + 4*s*t + 4*t^2))/((-1 + d)*Pi^d*s^2*(-mz^2 + s)*sw^2*
     (-1 + sw^2)), ((-I/27)*EL^6*(4*mc^2 + (-2 + d)*s)*(-1 + 4*sw^2)*
     (-3 + 8*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
    ((-1 + d)*(2*Pi)^d*s^2*(-mz^2 + s)*sw^2*(-1 + sw^2)), 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/27)*2^(-3 - d)*(-2 + d)*EL^6*(-3 + 8*sw^2)*
     (s^2*(3*d^2*(-1 + 4*sw^2) + 4*d*(3 - 10*sw^2 - 14*sw^4 + 16*sw^6) - 
        4*(3 - 8*sw^2 - 28*sw^4 + 32*sw^6)) + 
      2*s*(d*(15 - 60*sw^2) + 3*d^2*(-1 + 4*sw^2) + 
        8*(-3 + 14*sw^2 - 14*sw^4 + 16*sw^6))*t + 
      4*(-3 + 20*sw^2 - 56*sw^4 + 64*sw^6)*t^2))/((-1 + d)*Pi^d*(mz^2 - s)^2*
     s*sw^4*(-1 + sw^2)^2), ((I/27)*2^(-4 - d)*EL^6*(4*mc^2 + (-2 + d)*s)*
     (-3 + 8*sw^2)*(s^2*(3*d^2*(-1 + 4*sw^2) + 
        4*d*(3 - 10*sw^2 - 14*sw^4 + 16*sw^6) - 
        4*(3 - 8*sw^2 - 28*sw^4 + 32*sw^6)) + 
      2*s*(d*(15 - 60*sw^2) + 3*d^2*(-1 + 4*sw^2) + 
        8*(-3 + 14*sw^2 - 14*sw^4 + 16*sw^6))*t + 
      4*(-3 + 20*sw^2 - 56*sw^4 + 64*sw^6)*t^2))/((-1 + d)*Pi^d*(mz^2 - s)^2*
     s*sw^4*(-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((I/27)*2^(1 - d)*(-2 + d)*EL^6*(-1 + 4*sw^2)*(-3 + 8*sw^2)*
     ((-2 + d)*s^2 + 4*s*t + 4*t^2))/((-1 + d)*Pi^d*s^2*(-mz^2 + s)*sw^2*
     (-1 + sw^2)), ((-I/27)*EL^6*(4*mt^2 + (-2 + d)*s)*(-1 + 4*sw^2)*
     (-3 + 8*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
    ((-1 + d)*(2*Pi)^d*s^2*(-mz^2 + s)*sw^2*(-1 + sw^2)), 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/27)*2^(-3 - d)*(-2 + d)*EL^6*(-3 + 8*sw^2)*
     (s^2*(3*d^2*(-1 + 4*sw^2) + 4*d*(3 - 10*sw^2 - 14*sw^4 + 16*sw^6) - 
        4*(3 - 8*sw^2 - 28*sw^4 + 32*sw^6)) + 
      2*s*(d*(15 - 60*sw^2) + 3*d^2*(-1 + 4*sw^2) + 
        8*(-3 + 14*sw^2 - 14*sw^4 + 16*sw^6))*t + 
      4*(-3 + 20*sw^2 - 56*sw^4 + 64*sw^6)*t^2))/((-1 + d)*Pi^d*(mz^2 - s)^2*
     s*sw^4*(-1 + sw^2)^2), ((I/27)*2^(-4 - d)*EL^6*(4*mt^2 + (-2 + d)*s)*
     (-3 + 8*sw^2)*(s^2*(3*d^2*(-1 + 4*sw^2) + 
        4*d*(3 - 10*sw^2 - 14*sw^4 + 16*sw^6) - 
        4*(3 - 8*sw^2 - 28*sw^4 + 32*sw^6)) + 
      2*s*(d*(15 - 60*sw^2) + 3*d^2*(-1 + 4*sw^2) + 
        8*(-3 + 14*sw^2 - 14*sw^4 + 16*sw^6))*t + 
      4*(-3 + 20*sw^2 - 56*sw^4 + 64*sw^6)*t^2))/((-1 + d)*Pi^d*(mz^2 - s)^2*
     s*sw^4*(-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{((-I/27)*2^(-1 - 2*d)*EL^6*(63*d^2*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(s^2*(2*(3 - 8*sw^2)^2 - 2*d*(3 - 8*sw^2)^2 + 
          d^2*(-27 - 24*sw^2 + 32*sw^4)) + 2*(-2 + d)*s*(3 - 8*sw^2)^2*t + 
        2*(-2 + d)*(3 - 8*sw^2)^2*t^2)))/((-1 + d)*Pi^(2*d)*s*(-mz^2 + s)*
     sw^2*(-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, 
  {((I/27)*2^(-5 - 3*d)*EL^6*(45*d^3*(2*Pi)^(2*d)*s^2 + 
      2^(1 + 2*d)*Pi^(2*d)*(s^2*(d^3*(-9 - 72*sw^2 + 96*sw^4) + 
          d^2*(-81 + 378*sw^2 - 240*sw^4 - 704*sw^6 + 512*sw^8) + 
          4*(-27 + 90*sw^2 + 144*sw^4 - 704*sw^6 + 512*sw^8) - 
          2*d*(-81 + 324*sw^2 + 96*sw^4 - 1408*sw^6 + 1024*sw^8)) + 
        s*(-3 + 8*sw^2)*(-21*d^2*(-3 + 8*sw^2) + 3*d^3*(-3 + 8*sw^2) - 
          16*(-9 + 33*sw^2 - 32*sw^4 + 32*sw^6) + 
          2*d*(-81 + 252*sw^2 - 128*sw^4 + 128*sw^6))*t + 
        2*(-2 + d)*(27 - 252*sw^2 + 864*sw^4 - 1408*sw^6 + 1024*sw^8)*t^2)))/
    ((-1 + d)*Pi^(3*d)*(mz^2 - s)^2*sw^4*(-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((I/27)*(-2 + d)*EL^6*(3 - 8*sw^2)^2*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
    ((-1 + d)*(2*Pi)^d*s^2*(-mz^2 + s)*sw^2*(-1 + sw^2)), 
   ((-I/27)*2^(-1 - d)*EL^6*(4*mc^2 + (-2 + d)*s)*(3 - 8*sw^2)^2*
     ((-2 + d)*s^2 + 4*s*t + 4*t^2))/((-1 + d)*Pi^d*s^2*(-mz^2 + s)*sw^2*
     (-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/27)*2^(-4 - d)*(-2 + d)*EL^6*(-3 + 8*sw^2)*
     (s^2*(3*d^2*(-3 + 8*sw^2) + 4*d*(9 - 15*sw^2 - 32*sw^4 + 32*sw^6) - 
        4*(9 - 6*sw^2 - 64*sw^4 + 64*sw^6)) + 
      2*s*(-15*d*(-3 + 8*sw^2) + 3*d^2*(-3 + 8*sw^2) + 
        8*(-9 + 33*sw^2 - 32*sw^4 + 32*sw^6))*t + 
      4*(-9 + 60*sw^2 - 128*sw^4 + 128*sw^6)*t^2))/
    ((-1 + d)*Pi^d*(mz^2 - s)^2*s*sw^4*(-1 + sw^2)^2), 
   ((I/27)*2^(-5 - d)*EL^6*(4*mc^2 + (-2 + d)*s)*(-3 + 8*sw^2)*
     (s^2*(3*d^2*(-3 + 8*sw^2) + 4*d*(9 - 15*sw^2 - 32*sw^4 + 32*sw^6) - 
        4*(9 - 6*sw^2 - 64*sw^4 + 64*sw^6)) + 
      2*s*(-15*d*(-3 + 8*sw^2) + 3*d^2*(-3 + 8*sw^2) + 
        8*(-9 + 33*sw^2 - 32*sw^4 + 32*sw^6))*t + 
      4*(-9 + 60*sw^2 - 128*sw^4 + 128*sw^6)*t^2))/
    ((-1 + d)*Pi^d*(mz^2 - s)^2*s*sw^4*(-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((I/27)*(-2 + d)*EL^6*(3 - 8*sw^2)^2*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
    ((-1 + d)*(2*Pi)^d*s^2*(-mz^2 + s)*sw^2*(-1 + sw^2)), 
   ((-I/27)*2^(-1 - d)*EL^6*(4*mt^2 + (-2 + d)*s)*(3 - 8*sw^2)^2*
     ((-2 + d)*s^2 + 4*s*t + 4*t^2))/((-1 + d)*Pi^d*s^2*(-mz^2 + s)*sw^2*
     (-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, ((-I/27)*2^(-4 - d)*(-2 + d)*EL^6*(-3 + 8*sw^2)*
     (s^2*(3*d^2*(-3 + 8*sw^2) + 4*d*(9 - 15*sw^2 - 32*sw^4 + 32*sw^6) - 
        4*(9 - 6*sw^2 - 64*sw^4 + 64*sw^6)) + 
      2*s*(-15*d*(-3 + 8*sw^2) + 3*d^2*(-3 + 8*sw^2) + 
        8*(-9 + 33*sw^2 - 32*sw^4 + 32*sw^6))*t + 
      4*(-9 + 60*sw^2 - 128*sw^4 + 128*sw^6)*t^2))/
    ((-1 + d)*Pi^d*(mz^2 - s)^2*s*sw^4*(-1 + sw^2)^2), 
   ((I/27)*2^(-5 - d)*EL^6*(4*mt^2 + (-2 + d)*s)*(-3 + 8*sw^2)*
     (s^2*(3*d^2*(-3 + 8*sw^2) + 4*d*(9 - 15*sw^2 - 32*sw^4 + 32*sw^6) - 
        4*(9 - 6*sw^2 - 64*sw^4 + 64*sw^6)) + 
      2*s*(-15*d*(-3 + 8*sw^2) + 3*d^2*(-3 + 8*sw^2) + 
        8*(-9 + 33*sw^2 - 32*sw^4 + 32*sw^6))*t + 
      4*(-9 + 60*sw^2 - 128*sw^4 + 128*sw^6)*t^2))/
    ((-1 + d)*Pi^d*(mz^2 - s)^2*s*sw^4*(-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 0, 
   0}}, {{((I/27)*2^(-1 - 2*d)*EL^6*(-3 + 4*sw^2)*(-1 + 4*sw^2)*
     (-(d^2*(2*Pi)^d*s^2) + 2^(2 + d)*Pi^d*((-1 + d)*s^2 - (-2 + d)*s*t - 
        (-2 + d)*t^2)))/((-1 + d)*Pi^(2*d)*s*(-mz^2 + s)*sw^2*(-1 + sw^2)), 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {((I/27)*2^(-5 - 3*d)*EL^6*(15*d^3*(2*Pi)^(2*d)*s^2 + 
      2^(1 + 2*d)*Pi^(2*d)*(s^2*(3*d^3*(-1 - 8*sw^2 + 8*sw^4) + 
          d^2*(-27 + 132*sw^2 - 44*sw^4 - 208*sw^6 + 128*sw^8) + 
          4*(-9 + 36*sw^2 + 52*sw^4 - 208*sw^6 + 128*sw^8) - 
          2*d*(-27 + 120*sw^2 + 56*sw^4 - 416*sw^6 + 256*sw^8)) + 
        s*(-3 + 4*sw^2)*(d^2*(21 - 84*sw^2) + 3*d^3*(-1 + 4*sw^2) + 
          16*(3 - 14*sw^2 + 14*sw^4 - 16*sw^6) + 
          2*d*(-27 + 116*sw^2 - 56*sw^4 + 64*sw^6))*t + 
        2*(-2 + d)*(9 - 72*sw^2 + 248*sw^4 - 416*sw^6 + 256*sw^8)*t^2)))/
    ((-1 + d)*Pi^(3*d)*(mz^2 - s)^2*sw^4*(-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((I/27)*(-2 + d)*EL^6*(-3 + 4*sw^2)*(-1 + 4*sw^2)*
     ((-2 + d)*s^2 + 4*s*t + 4*t^2))/((-1 + d)*(2*Pi)^d*s^2*(-mz^2 + s)*sw^2*
     (-1 + sw^2)), ((-I/27)*2^(-1 - d)*EL^6*(4*ms^2 + (-2 + d)*s)*
     (-3 + 4*sw^2)*(-1 + 4*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
    ((-1 + d)*Pi^d*s^2*(-mz^2 + s)*sw^2*(-1 + sw^2)), 0, 0, 0, 0, 0, 0}, 
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/27)*2^(-4 - d)*(-2 + d)*EL^6*(-3 + 4*sw^2)*
     (s^2*(3*d^2*(-1 + 4*sw^2) + 4*d*(3 - 10*sw^2 - 14*sw^4 + 16*sw^6) - 
        4*(3 - 8*sw^2 - 28*sw^4 + 32*sw^6)) + 
      2*s*(d*(15 - 60*sw^2) + 3*d^2*(-1 + 4*sw^2) + 
        8*(-3 + 14*sw^2 - 14*sw^4 + 16*sw^6))*t + 
      4*(-3 + 20*sw^2 - 56*sw^4 + 64*sw^6)*t^2))/((-1 + d)*Pi^d*(mz^2 - s)^2*
     s*sw^4*(-1 + sw^2)^2), ((I/27)*2^(-5 - d)*EL^6*(4*ms^2 + (-2 + d)*s)*
     (-3 + 4*sw^2)*(s^2*(3*d^2*(-1 + 4*sw^2) + 
        4*d*(3 - 10*sw^2 - 14*sw^4 + 16*sw^6) - 
        4*(3 - 8*sw^2 - 28*sw^4 + 32*sw^6)) + 
      2*s*(d*(15 - 60*sw^2) + 3*d^2*(-1 + 4*sw^2) + 
        8*(-3 + 14*sw^2 - 14*sw^4 + 16*sw^6))*t + 
      4*(-3 + 20*sw^2 - 56*sw^4 + 64*sw^6)*t^2))/((-1 + d)*Pi^d*(mz^2 - s)^2*
     s*sw^4*(-1 + sw^2)^2), 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((I/27)*(-2 + d)*EL^6*(-3 + 4*sw^2)*(-1 + 4*sw^2)*
     ((-2 + d)*s^2 + 4*s*t + 4*t^2))/((-1 + d)*(2*Pi)^d*s^2*(-mz^2 + s)*sw^2*
     (-1 + sw^2)), ((-I/27)*2^(-1 - d)*EL^6*(4*mb^2 + (-2 + d)*s)*
     (-3 + 4*sw^2)*(-1 + 4*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
    ((-1 + d)*Pi^d*s^2*(-mz^2 + s)*sw^2*(-1 + sw^2)), 0, 0, 0, 0}, 
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/27)*2^(-4 - d)*(-2 + d)*EL^6*(-3 + 4*sw^2)*
     (s^2*(3*d^2*(-1 + 4*sw^2) + 4*d*(3 - 10*sw^2 - 14*sw^4 + 16*sw^6) - 
        4*(3 - 8*sw^2 - 28*sw^4 + 32*sw^6)) + 
      2*s*(d*(15 - 60*sw^2) + 3*d^2*(-1 + 4*sw^2) + 
        8*(-3 + 14*sw^2 - 14*sw^4 + 16*sw^6))*t + 
      4*(-3 + 20*sw^2 - 56*sw^4 + 64*sw^6)*t^2))/((-1 + d)*Pi^d*(mz^2 - s)^2*
     s*sw^4*(-1 + sw^2)^2), ((I/27)*2^(-5 - d)*EL^6*(4*mb^2 + (-2 + d)*s)*
     (-3 + 4*sw^2)*(s^2*(3*d^2*(-1 + 4*sw^2) + 
        4*d*(3 - 10*sw^2 - 14*sw^4 + 16*sw^6) - 
        4*(3 - 8*sw^2 - 28*sw^4 + 32*sw^6)) + 
      2*s*(d*(15 - 60*sw^2) + 3*d^2*(-1 + 4*sw^2) + 
        8*(-3 + 14*sw^2 - 14*sw^4 + 16*sw^6))*t + 
      4*(-3 + 20*sw^2 - 56*sw^4 + 64*sw^6)*t^2))/((-1 + d)*Pi^d*(mz^2 - s)^2*
     s*sw^4*(-1 + sw^2)^2), 0, 0, 0, 0}}, 
 {{((-I/27)*4^(-1 - d)*EL^6*(63*d^2*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(s^2*(18 - 72*sw^2 + 64*sw^4 + 
          d^2*(-27 - 18*sw^2 + 16*sw^4) - 2*d*(9 - 36*sw^2 + 32*sw^4)) + 
        2*(-2 + d)*s*(9 - 36*sw^2 + 32*sw^4)*t + 2*(-2 + d)*
         (9 - 36*sw^2 + 32*sw^4)*t^2)))/((-1 + d)*Pi^(2*d)*s*(-mz^2 + s)*sw^2*
     (-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, 
  {((I/27)*8^(-2 - d)*EL^6*(45*d^3*(2*Pi)^(2*d)*s^2 + 
      2^(1 + 2*d)*Pi^(2*d)*(s^2*(d^3*(-9 - 54*sw^2 + 48*sw^4) + 
          d^2*(-81 + 270*sw^2 - 24*sw^4 - 448*sw^6 + 256*sw^8) + 
          4*(-27 + 54*sw^2 + 168*sw^4 - 448*sw^6 + 256*sw^8) - 
          2*d*(-81 + 216*sw^2 + 240*sw^4 - 896*sw^6 + 512*sw^8)) + 
        s*(-3 + 4*sw^2)*(-21*d^2*(-3 + 8*sw^2) + 3*d^3*(-3 + 8*sw^2) - 
          16*(-9 + 33*sw^2 - 32*sw^4 + 32*sw^6) + 
          2*d*(-81 + 252*sw^2 - 128*sw^4 + 128*sw^6))*t + 
        2*(-2 + d)*(27 - 216*sw^2 + 624*sw^4 - 896*sw^6 + 512*sw^8)*t^2)))/
    ((-1 + d)*Pi^(3*d)*(mz^2 - s)^2*sw^4*(-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((I/27)*2^(-1 - d)*(-2 + d)*EL^6*(-3 + 4*sw^2)*(-3 + 8*sw^2)*
     ((-2 + d)*s^2 + 4*s*t + 4*t^2))/((-1 + d)*Pi^d*s^2*(-mz^2 + s)*sw^2*
     (-1 + sw^2)), ((-I/27)*2^(-2 - d)*EL^6*(4*ms^2 + (-2 + d)*s)*
     (-3 + 4*sw^2)*(-3 + 8*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
    ((-1 + d)*Pi^d*s^2*(-mz^2 + s)*sw^2*(-1 + sw^2)), 0, 0, 0, 0, 0, 0}, 
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/27)*2^(-5 - d)*(-2 + d)*EL^6*(-3 + 4*sw^2)*
     (s^2*(3*d^2*(-3 + 8*sw^2) + 4*d*(9 - 15*sw^2 - 32*sw^4 + 32*sw^6) - 
        4*(9 - 6*sw^2 - 64*sw^4 + 64*sw^6)) + 
      2*s*(-15*d*(-3 + 8*sw^2) + 3*d^2*(-3 + 8*sw^2) + 
        8*(-9 + 33*sw^2 - 32*sw^4 + 32*sw^6))*t + 
      4*(-9 + 60*sw^2 - 128*sw^4 + 128*sw^6)*t^2))/
    ((-1 + d)*Pi^d*(mz^2 - s)^2*s*sw^4*(-1 + sw^2)^2), 
   ((I/27)*2^(-6 - d)*EL^6*(4*ms^2 + (-2 + d)*s)*(-3 + 4*sw^2)*
     (s^2*(3*d^2*(-3 + 8*sw^2) + 4*d*(9 - 15*sw^2 - 32*sw^4 + 32*sw^6) - 
        4*(9 - 6*sw^2 - 64*sw^4 + 64*sw^6)) + 
      2*s*(-15*d*(-3 + 8*sw^2) + 3*d^2*(-3 + 8*sw^2) + 
        8*(-9 + 33*sw^2 - 32*sw^4 + 32*sw^6))*t + 
      4*(-9 + 60*sw^2 - 128*sw^4 + 128*sw^6)*t^2))/
    ((-1 + d)*Pi^d*(mz^2 - s)^2*s*sw^4*(-1 + sw^2)^2), 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((I/27)*2^(-1 - d)*(-2 + d)*EL^6*(-3 + 4*sw^2)*(-3 + 8*sw^2)*
     ((-2 + d)*s^2 + 4*s*t + 4*t^2))/((-1 + d)*Pi^d*s^2*(-mz^2 + s)*sw^2*
     (-1 + sw^2)), ((-I/27)*2^(-2 - d)*EL^6*(4*mb^2 + (-2 + d)*s)*
     (-3 + 4*sw^2)*(-3 + 8*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
    ((-1 + d)*Pi^d*s^2*(-mz^2 + s)*sw^2*(-1 + sw^2)), 0, 0, 0, 0}, 
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/27)*2^(-5 - d)*(-2 + d)*EL^6*(-3 + 4*sw^2)*
     (s^2*(3*d^2*(-3 + 8*sw^2) + 4*d*(9 - 15*sw^2 - 32*sw^4 + 32*sw^6) - 
        4*(9 - 6*sw^2 - 64*sw^4 + 64*sw^6)) + 
      2*s*(-15*d*(-3 + 8*sw^2) + 3*d^2*(-3 + 8*sw^2) + 
        8*(-9 + 33*sw^2 - 32*sw^4 + 32*sw^6))*t + 
      4*(-9 + 60*sw^2 - 128*sw^4 + 128*sw^6)*t^2))/
    ((-1 + d)*Pi^d*(mz^2 - s)^2*s*sw^4*(-1 + sw^2)^2), 
   ((I/27)*2^(-6 - d)*EL^6*(4*mb^2 + (-2 + d)*s)*(-3 + 4*sw^2)*
     (s^2*(3*d^2*(-3 + 8*sw^2) + 4*d*(9 - 15*sw^2 - 32*sw^4 + 32*sw^6) - 
        4*(9 - 6*sw^2 - 64*sw^4 + 64*sw^6)) + 
      2*s*(-15*d*(-3 + 8*sw^2) + 3*d^2*(-3 + 8*sw^2) + 
        8*(-9 + 33*sw^2 - 32*sw^4 + 32*sw^6))*t + 
      4*(-9 + 60*sw^2 - 128*sw^4 + 128*sw^6)*t^2))/
    ((-1 + d)*Pi^d*(mz^2 - s)^2*s*sw^4*(-1 + sw^2)^2), 0, 0, 0, 0}}, 
 {{((I/9)*2^(-5 - d)*(-2 + d)*EL^6*
     (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
      2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
      4*(3 - 20*sw^2 + 32*sw^4)*t^2))/((-1 + d)*Pi^d*(mz^2 - s)^2*sw^4*
     (-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, 
  {((I/9)*4^(-4 - d)*EL^6*s*(9*d^3*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(s^2*(6*d^3*sw^2*(-5 + 8*sw^2) + 
          d*(54 - 360*sw^2 + 368*sw^4 + 640*sw^6 - 512*sw^8) + 
          d^2*(-27 + 180*sw^2 - 236*sw^4 - 160*sw^6 + 128*sw^8) + 
          4*(-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 128*sw^8)) + 
        s*(-21*d^2*(3 - 20*sw^2 + 32*sw^4) + d^3*(9 - 60*sw^2 + 96*sw^4) - 
          16*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8) + 
          2*d*(81 - 540*sw^2 + 968*sw^4 - 320*sw^6 + 256*sw^8))*t + 
        2*(-2 + d)*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^2)))/
    ((-1 + d)*Pi^(2*d)*(mz^2 - s)^3*sw^6*(-1 + sw^2)^3), 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{((I/9)*2^(-5 - d)*(-2 + d)*EL^6*
     (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
      2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
      4*(3 - 20*sw^2 + 32*sw^4)*t^2))/((-1 + d)*Pi^d*(mz^2 - s)^2*sw^4*
     (-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, 
  {((I/9)*4^(-4 - d)*EL^6*s*(9*d^3*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(s^2*(6*d^3*sw^2*(-5 + 8*sw^2) + 
          d*(54 - 360*sw^2 + 368*sw^4 + 640*sw^6 - 512*sw^8) + 
          d^2*(-27 + 180*sw^2 - 236*sw^4 - 160*sw^6 + 128*sw^8) + 
          4*(-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 128*sw^8)) + 
        s*(-21*d^2*(3 - 20*sw^2 + 32*sw^4) + d^3*(9 - 60*sw^2 + 96*sw^4) - 
          16*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8) + 
          2*d*(81 - 540*sw^2 + 968*sw^4 - 320*sw^6 + 256*sw^8))*t + 
        2*(-2 + d)*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^2)))/
    ((-1 + d)*Pi^(2*d)*(mz^2 - s)^3*sw^6*(-1 + sw^2)^3), 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{((I/9)*2^(-5 - d)*(-2 + d)*EL^6*
     (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
      2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
      4*(3 - 20*sw^2 + 32*sw^4)*t^2))/((-1 + d)*Pi^d*(mz^2 - s)^2*sw^4*
     (-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, 
  {((I/9)*4^(-4 - d)*EL^6*s*(9*d^3*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(s^2*(6*d^3*sw^2*(-5 + 8*sw^2) + 
          d*(54 - 360*sw^2 + 368*sw^4 + 640*sw^6 - 512*sw^8) + 
          d^2*(-27 + 180*sw^2 - 236*sw^4 - 160*sw^6 + 128*sw^8) + 
          4*(-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 128*sw^8)) + 
        s*(-21*d^2*(3 - 20*sw^2 + 32*sw^4) + d^3*(9 - 60*sw^2 + 96*sw^4) - 
          16*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8) + 
          2*d*(81 - 540*sw^2 + 968*sw^4 - 320*sw^6 + 256*sw^8))*t + 
        2*(-2 + d)*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^2)))/
    ((-1 + d)*Pi^(2*d)*(mz^2 - s)^3*sw^6*(-1 + sw^2)^3), 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{((I/9)*2^(-5 - d)*(-2 + d)*EL^6*(1 - 4*sw^2 + 8*sw^4)*
     (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
      2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
      4*(3 - 20*sw^2 + 32*sw^4)*t^2))/((-1 + d)*Pi^d*(mz^2 - s)^2*sw^4*
     (-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, 
  {((I/9)*4^(-4 - d)*EL^6*s*(9*d^3*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(s^2*(12*d^3*sw^2*(-4 + 17*sw^2 - 36*sw^4 + 32*sw^6) + 
          d^2*(-27 + 288*sw^2 - 1172*sw^4 + 2224*sw^6 - 1120*sw^8 - 
            1792*sw^10 + 1024*sw^12) + 4*(-9 + 96*sw^2 - 356*sw^4 + 
            496*sw^6 + 416*sw^8 - 1792*sw^10 + 1024*sw^12) - 
          2*d*(-27 + 288*sw^2 - 1120*sw^4 + 1856*sw^6 + 64*sw^8 - 
            3584*sw^10 + 2048*sw^12)) + s*(1 - 4*sw^2 + 8*sw^4)*
         (-21*d^2*(3 - 20*sw^2 + 32*sw^4) + d^3*(9 - 60*sw^2 + 96*sw^4) - 
          16*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8) + 
          2*d*(81 - 540*sw^2 + 968*sw^4 - 320*sw^6 + 256*sw^8))*t + 
        2*(-2 + d)*(1 - 4*sw^2 + 8*sw^4)^2*(9 - 24*sw^2 + 32*sw^4)*t^2)))/
    ((-1 + d)*Pi^(2*d)*(mz^2 - s)^3*sw^6*(-1 + sw^2)^3), 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{((I/9)*2^(-5 - d)*(-2 + d)*EL^6*(1 - 4*sw^2 + 8*sw^4)*
     (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
      2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
      4*(3 - 20*sw^2 + 32*sw^4)*t^2))/((-1 + d)*Pi^d*(mz^2 - s)^2*sw^4*
     (-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, 
  {((I/9)*4^(-4 - d)*EL^6*s*(9*d^3*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(s^2*(12*d^3*sw^2*(-4 + 17*sw^2 - 36*sw^4 + 32*sw^6) + 
          d^2*(-27 + 288*sw^2 - 1172*sw^4 + 2224*sw^6 - 1120*sw^8 - 
            1792*sw^10 + 1024*sw^12) + 4*(-9 + 96*sw^2 - 356*sw^4 + 
            496*sw^6 + 416*sw^8 - 1792*sw^10 + 1024*sw^12) - 
          2*d*(-27 + 288*sw^2 - 1120*sw^4 + 1856*sw^6 + 64*sw^8 - 
            3584*sw^10 + 2048*sw^12)) + s*(1 - 4*sw^2 + 8*sw^4)*
         (-21*d^2*(3 - 20*sw^2 + 32*sw^4) + d^3*(9 - 60*sw^2 + 96*sw^4) - 
          16*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8) + 
          2*d*(81 - 540*sw^2 + 968*sw^4 - 320*sw^6 + 256*sw^8))*t + 
        2*(-2 + d)*(1 - 4*sw^2 + 8*sw^4)^2*(9 - 24*sw^2 + 32*sw^4)*t^2)))/
    ((-1 + d)*Pi^(2*d)*(mz^2 - s)^3*sw^6*(-1 + sw^2)^3), 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/9)*2^(-4 - d)*(-2 + d)*EL^6*(1 - 4*sw^2 + 8*sw^4)*
     (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
      2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
      4*(3 - 20*sw^2 + 32*sw^4)*t^2))/((-1 + d)*Pi^d*(mz^2 - s)^2*s*sw^4*
     (-1 + sw^2)^2), ((-I/9)*2^(-5 - 2*d)*EL^6*(-3*d^3*(2*Pi)^d*s^3 + 
      2^(1 + d)*Pi^d*s*(s^2*(d^3*(6*sw^2 - 12*sw^4) + 
          d^2*(9 - 26*sw^2 + 16*sw^4 + 144*sw^6 - 128*sw^8) - 
          4*(-3 + 2*sw^2 + 32*sw^4 - 144*sw^6 + 128*sw^8) + 
          2*d*(-9 + 16*sw^2 + 40*sw^4 - 288*sw^6 + 256*sw^8)) - 
        s*(1 - 4*sw^2 + 8*sw^4)*(-21*d^2 + 3*d^3 - 16*(3 - 5*sw^2 + 8*sw^4) + 
          d*(54 - 40*sw^2 + 64*sw^4))*t - 2*(-2 + d)*(3 - 32*sw^2 + 
          136*sw^4 - 288*sw^6 + 256*sw^8)*t^2) - 
      2*ml^2*(-3*(-7 + d)*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (2*s^2*(9 + 6*sw^2 - 80*sw^4 + 288*sw^6 - 256*sw^8 + 
            d^2*sw^2*(-1 + 4*sw^2) + d*(-12 - sw^2 + 32*sw^4 - 144*sw^6 + 
              128*sw^8)) + s*(-3*d^3 + d*(-69 + 160*sw^2 - 304*sw^4) + 
            24*d^2*(1 - sw^2 + 2*sw^4) + 8*(9 - 39*sw^2 + 112*sw^4 - 
              144*sw^6 + 128*sw^8))*t - 2*(-3 + d + 8*sw^2 - 16*sw^4)*
           (3 - 20*sw^2 + 32*sw^4)*t^2))))/((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s*
     sw^4*(-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/9)*2^(-7 - d)*(-2 + d)*EL^6*(1 - 4*sw^2 + 8*sw^4)*
     (s^2*(d^2*(9 - 60*sw^2 + 96*sw^4) + 4*(9 - 60*sw^2 + 44*sw^4 + 
          160*sw^6 - 128*sw^8) + 4*d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
          64*sw^8)) + 2*s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
        d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 
          64*sw^8))*t + 4*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*
       t^2))/((-1 + d)*Pi^d*(mz^2 - s)^3*sw^6*(-1 + sw^2)^3), 
   ((-I/9)*16^(-2 - d)*EL^6*(-9*d^3*(2*Pi)^(3*d)*s^3 + 
      2^(1 + 3*d)*Pi^(3*d)*s*(s^2*(-12*d^3*sw^2*(-4 + 17*sw^2 - 36*sw^4 + 
            32*sw^6) + d^2*(27 - 288*sw^2 + 1172*sw^4 - 2224*sw^6 + 
            1120*sw^8 + 1792*sw^10 - 1024*sw^12) - 
          4*(-9 + 96*sw^2 - 356*sw^4 + 496*sw^6 + 416*sw^8 - 1792*sw^10 + 
            1024*sw^12) + 2*d*(-27 + 288*sw^2 - 1120*sw^4 + 1856*sw^6 + 
            64*sw^8 - 3584*sw^10 + 2048*sw^12)) - s*(1 - 4*sw^2 + 8*sw^4)*
         (-21*d^2*(3 - 20*sw^2 + 32*sw^4) + d^3*(9 - 60*sw^2 + 96*sw^4) - 
          16*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8) + 
          2*d*(81 - 540*sw^2 + 968*sw^4 - 320*sw^6 + 256*sw^8))*t - 
        2*(-2 + d)*(1 - 4*sw^2 + 8*sw^4)^2*(9 - 24*sw^2 + 32*sw^4)*t^2) + 
      2*ml^2*(9*(-7 + d)*d^2*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
         (2*s^2*(-27 + 252*sw^2 - 756*sw^4 + 832*sw^6 + 960*sw^8 - 
            3584*sw^10 + 2048*sw^12 + 3*d^3*sw^2*(-5 + 8*sw^2) + 
            d^2*(123*sw^2 - 298*sw^4 + 352*sw^6 - 320*sw^8) - 
            2*d*(-18 + 156*sw^2 - 439*sw^4 + 560*sw^6 - 80*sw^8 - 896*sw^10 + 
              512*sw^12)) + s*(d^3*(9 - 60*sw^2 + 96*sw^4) - 
            24*d^2*(3 - 23*sw^2 + 58*sw^4 - 72*sw^6 + 64*sw^8) + 
            d*(207 - 1740*sw^2 + 5536*sw^4 - 9280*sw^6 + 8192*sw^8) - 
            8*(27 - 252*sw^2 + 990*sw^4 - 2176*sw^6 + 2784*sw^8 - 
              1792*sw^10 + 1024*sw^12))*t + 2*(-3 + d + 8*sw^2 - 16*sw^4)*
           (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^2))))/
    ((-1 + d)*Pi^(4*d)*(mz^2 - s)^3*sw^6*(-1 + sw^2)^3), 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0}}, 
 {{((I/27)*2^(-5 - d)*(-2 + d)*EL^6*(9 - 24*sw^2 + 32*sw^4)*
     (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
      2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
      4*(3 - 20*sw^2 + 32*sw^4)*t^2))/((-1 + d)*Pi^d*(mz^2 - s)^2*sw^4*
     (-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, 
  {((I/27)*4^(-4 - d)*EL^6*s*(135*d^3*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(s^2*(3*d^3*(-9 - 126*sw^2 + 432*sw^4 - 704*sw^6 + 
            512*sw^8) + d^2*(-243 + 2268*sw^2 - 7308*sw^4 + 9984*sw^6 - 
            2560*sw^8 - 8192*sw^10 + 4096*sw^12) + 
          4*(-81 + 756*sw^2 - 2124*sw^4 + 1536*sw^6 + 3584*sw^8 - 
            8192*sw^10 + 4096*sw^12) - 2*d*(-243 + 2268*sw^2 - 6840*sw^4 + 
            7296*sw^6 + 4096*sw^8 - 16384*sw^10 + 8192*sw^12)) + 
        s*(9 - 24*sw^2 + 32*sw^4)*(-21*d^2*(3 - 20*sw^2 + 32*sw^4) + 
          d^3*(9 - 60*sw^2 + 96*sw^4) - 16*(9 - 60*sw^2 + 122*sw^4 - 
            80*sw^6 + 64*sw^8) + 2*d*(81 - 540*sw^2 + 968*sw^4 - 320*sw^6 + 
            256*sw^8))*t + 2*(-2 + d)*(1 - 4*sw^2 + 8*sw^4)*
         (9 - 24*sw^2 + 32*sw^4)^2*t^2)))/((-1 + d)*Pi^(2*d)*(mz^2 - s)^3*
     sw^6*(-1 + sw^2)^3), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/27)*2^(-4 - d)*(-2 + d)*EL^6*(9 - 24*sw^2 + 32*sw^4)*
     (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
      2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
      4*(3 - 20*sw^2 + 32*sw^4)*t^2))/((-1 + d)*Pi^d*(mz^2 - s)^2*s*sw^4*
     (-1 + sw^2)^2), ((-I/27)*2^(-5 - 2*d)*EL^6*(-27*d^3*(2*Pi)^d*s^3 + 
      2^(1 + d)*Pi^d*s*(s^2*(d^3*(36*sw^2 - 48*sw^4) + 
          4*(27 + 18*sw^2 - 288*sw^4 + 704*sw^6 - 512*sw^8) + 
          d^2*(81 - 126*sw^2 - 96*sw^4 + 704*sw^6 - 512*sw^8) + 
          2*d*(-81 + 36*sw^2 + 480*sw^4 - 1408*sw^6 + 1024*sw^8)) - 
        s*(9 - 24*sw^2 + 32*sw^4)*(-21*d^2 + 3*d^3 - 
          16*(3 - 5*sw^2 + 8*sw^4) + d*(54 - 40*sw^2 + 64*sw^4))*t - 
        2*(-2 + d)*(27 - 252*sw^2 + 864*sw^4 - 1408*sw^6 + 1024*sw^8)*t^2) + 
      2*mc^2*(27*(-7 + d)*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (2*s^2*(-81 - 126*sw^2 + 720*sw^4 - 1408*sw^6 + 1024*sw^8 + 
            3*d^2*sw^2*(-3 + 8*sw^2) + d*(108 + 81*sw^2 - 408*sw^4 + 
              704*sw^6 - 512*sw^8)) + s*(27*d^3 - 24*d^2*(9 - 6*sw^2 + 
              8*sw^4) + 3*d*(207 - 360*sw^2 + 512*sw^4) - 
            8*(81 - 279*sw^2 + 648*sw^4 - 704*sw^6 + 512*sw^8))*t + 
          2*(-27 + 9*d + 48*sw^2 - 64*sw^4)*(3 - 20*sw^2 + 32*sw^4)*t^2))))/
    ((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s*sw^4*(-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/27)*2^(-7 - d)*(-2 + d)*EL^6*(9 - 24*sw^2 + 32*sw^4)*
     (s^2*(d^2*(9 - 60*sw^2 + 96*sw^4) + 4*(9 - 60*sw^2 + 44*sw^4 + 
          160*sw^6 - 128*sw^8) + 4*d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
          64*sw^8)) + 2*s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
        d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 
          64*sw^8))*t + 4*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*
       t^2))/((-1 + d)*Pi^d*(mz^2 - s)^3*sw^6*(-1 + sw^2)^3), 
   ((-I/27)*16^(-2 - d)*EL^6*(-81*d^3*(2*Pi)^(3*d)*s^3 + 
      2^(1 + 3*d)*Pi^(3*d)*s*(s^2*(-6*d^3*sw^2*(-63 + 216*sw^2 - 352*sw^4 + 
            256*sw^6) + d^2*(243 - 2268*sw^2 + 7308*sw^4 - 9984*sw^6 + 
            2560*sw^8 + 8192*sw^10 - 4096*sw^12) - 
          4*(-81 + 756*sw^2 - 2124*sw^4 + 1536*sw^6 + 3584*sw^8 - 
            8192*sw^10 + 4096*sw^12) + 2*d*(-243 + 2268*sw^2 - 6840*sw^4 + 
            7296*sw^6 + 4096*sw^8 - 16384*sw^10 + 8192*sw^12)) - 
        s*(9 - 24*sw^2 + 32*sw^4)*(-21*d^2*(3 - 20*sw^2 + 32*sw^4) + 
          d^3*(9 - 60*sw^2 + 96*sw^4) - 16*(9 - 60*sw^2 + 122*sw^4 - 
            80*sw^6 + 64*sw^8) + 2*d*(81 - 540*sw^2 + 968*sw^4 - 320*sw^6 + 
            256*sw^8))*t - 2*(-2 + d)*(1 - 4*sw^2 + 8*sw^4)*
         (9 - 24*sw^2 + 32*sw^4)^2*t^2) + 
      2*mc^2*(81*(-7 + d)*d^2*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
         (2*s^2*(-243 + 2052*sw^2 - 4644*sw^4 + 1632*sw^6 + 8320*sw^8 - 
            16384*sw^10 + 8192*sw^12 + 27*d^3*sw^2*(-5 + 8*sw^2) - 
            3*d^2*sw^2*(-351 + 714*sw^2 - 464*sw^4 + 320*sw^6) + 
            d*(324 - 2592*sw^2 + 5742*sw^4 - 3600*sw^6 - 2240*sw^8 + 
              8192*sw^10 - 4096*sw^12)) + s*(27*d^3*(3 - 20*sw^2 + 32*sw^4) - 
            24*d^2*(27 - 198*sw^2 + 432*sw^4 - 352*sw^6 + 256*sw^8) + 
            3*d*(621 - 4860*sw^2 + 13008*sw^4 - 16000*sw^6 + 11776*sw^8) - 
            8*(243 - 2052*sw^2 + 6750*sw^4 - 11856*sw^6 + 13376*sw^8 - 
              8192*sw^10 + 4096*sw^12))*t + 2*(-27 + 9*d + 48*sw^2 - 64*sw^4)*
           (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^2))))/
    ((-1 + d)*Pi^(4*d)*(mz^2 - s)^3*sw^6*(-1 + sw^2)^3), 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/27)*2^(-4 - d)*(-2 + d)*EL^6*(9 - 24*sw^2 + 32*sw^4)*
     (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
      2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
      4*(3 - 20*sw^2 + 32*sw^4)*t^2))/((-1 + d)*Pi^d*(mz^2 - s)^2*s*sw^4*
     (-1 + sw^2)^2), ((-I/27)*2^(-5 - 2*d)*EL^6*(-27*d^3*(2*Pi)^d*s^3 + 
      2^(1 + d)*Pi^d*s*(s^2*(d^3*(36*sw^2 - 48*sw^4) + 
          4*(27 + 18*sw^2 - 288*sw^4 + 704*sw^6 - 512*sw^8) + 
          d^2*(81 - 126*sw^2 - 96*sw^4 + 704*sw^6 - 512*sw^8) + 
          2*d*(-81 + 36*sw^2 + 480*sw^4 - 1408*sw^6 + 1024*sw^8)) - 
        s*(9 - 24*sw^2 + 32*sw^4)*(-21*d^2 + 3*d^3 - 
          16*(3 - 5*sw^2 + 8*sw^4) + d*(54 - 40*sw^2 + 64*sw^4))*t - 
        2*(-2 + d)*(27 - 252*sw^2 + 864*sw^4 - 1408*sw^6 + 1024*sw^8)*t^2) + 
      2*mt^2*(27*(-7 + d)*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (2*s^2*(-81 - 126*sw^2 + 720*sw^4 - 1408*sw^6 + 1024*sw^8 + 
            3*d^2*sw^2*(-3 + 8*sw^2) + d*(108 + 81*sw^2 - 408*sw^4 + 
              704*sw^6 - 512*sw^8)) + s*(27*d^3 - 24*d^2*(9 - 6*sw^2 + 
              8*sw^4) + 3*d*(207 - 360*sw^2 + 512*sw^4) - 
            8*(81 - 279*sw^2 + 648*sw^4 - 704*sw^6 + 512*sw^8))*t + 
          2*(-27 + 9*d + 48*sw^2 - 64*sw^4)*(3 - 20*sw^2 + 32*sw^4)*t^2))))/
    ((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s*sw^4*(-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/27)*2^(-7 - d)*(-2 + d)*EL^6*(9 - 24*sw^2 + 32*sw^4)*
     (s^2*(d^2*(9 - 60*sw^2 + 96*sw^4) + 4*(9 - 60*sw^2 + 44*sw^4 + 
          160*sw^6 - 128*sw^8) + 4*d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
          64*sw^8)) + 2*s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
        d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 
          64*sw^8))*t + 4*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*
       t^2))/((-1 + d)*Pi^d*(mz^2 - s)^3*sw^6*(-1 + sw^2)^3), 
   ((-I/27)*16^(-2 - d)*EL^6*(-81*d^3*(2*Pi)^(3*d)*s^3 + 
      2^(1 + 3*d)*Pi^(3*d)*s*(s^2*(-6*d^3*sw^2*(-63 + 216*sw^2 - 352*sw^4 + 
            256*sw^6) + d^2*(243 - 2268*sw^2 + 7308*sw^4 - 9984*sw^6 + 
            2560*sw^8 + 8192*sw^10 - 4096*sw^12) - 
          4*(-81 + 756*sw^2 - 2124*sw^4 + 1536*sw^6 + 3584*sw^8 - 
            8192*sw^10 + 4096*sw^12) + 2*d*(-243 + 2268*sw^2 - 6840*sw^4 + 
            7296*sw^6 + 4096*sw^8 - 16384*sw^10 + 8192*sw^12)) - 
        s*(9 - 24*sw^2 + 32*sw^4)*(-21*d^2*(3 - 20*sw^2 + 32*sw^4) + 
          d^3*(9 - 60*sw^2 + 96*sw^4) - 16*(9 - 60*sw^2 + 122*sw^4 - 
            80*sw^6 + 64*sw^8) + 2*d*(81 - 540*sw^2 + 968*sw^4 - 320*sw^6 + 
            256*sw^8))*t - 2*(-2 + d)*(1 - 4*sw^2 + 8*sw^4)*
         (9 - 24*sw^2 + 32*sw^4)^2*t^2) + 
      2*mt^2*(81*(-7 + d)*d^2*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
         (2*s^2*(-243 + 2052*sw^2 - 4644*sw^4 + 1632*sw^6 + 8320*sw^8 - 
            16384*sw^10 + 8192*sw^12 + 27*d^3*sw^2*(-5 + 8*sw^2) - 
            3*d^2*sw^2*(-351 + 714*sw^2 - 464*sw^4 + 320*sw^6) + 
            d*(324 - 2592*sw^2 + 5742*sw^4 - 3600*sw^6 - 2240*sw^8 + 
              8192*sw^10 - 4096*sw^12)) + s*(27*d^3*(3 - 20*sw^2 + 32*sw^4) - 
            24*d^2*(27 - 198*sw^2 + 432*sw^4 - 352*sw^6 + 256*sw^8) + 
            3*d*(621 - 4860*sw^2 + 13008*sw^4 - 16000*sw^6 + 11776*sw^8) - 
            8*(243 - 2052*sw^2 + 6750*sw^4 - 11856*sw^6 + 13376*sw^8 - 
              8192*sw^10 + 4096*sw^12))*t + 2*(-27 + 9*d + 48*sw^2 - 64*sw^4)*
           (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^2))))/
    ((-1 + d)*Pi^(4*d)*(mz^2 - s)^3*sw^6*(-1 + sw^2)^3), 0, 0, 0, 0, 0, 0, 0, 
   0}}, {{((I/27)*2^(-5 - d)*(-2 + d)*EL^6*(9 - 12*sw^2 + 8*sw^4)*
     (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
      2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
      4*(3 - 20*sw^2 + 32*sw^4)*t^2))/((-1 + d)*Pi^d*(mz^2 - s)^2*sw^4*
     (-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, 
  {((I/27)*4^(-4 - d)*EL^6*s*(135*d^3*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(s^2*(3*d^3*(-9 - 108*sw^2 + 276*sw^4 - 272*sw^6 + 
            128*sw^8) + d^2*(-243 + 1944*sw^2 - 4500*sw^4 + 2832*sw^6 + 
            1184*sw^8 - 2816*sw^10 + 1024*sw^12) + 
          4*(-81 + 648*sw^2 - 1188*sw^4 - 432*sw^6 + 2720*sw^8 - 2816*sw^10 + 
            1024*sw^12) - 2*d*(-243 + 1944*sw^2 - 4032*sw^4 + 768*sw^6 + 
            4672*sw^8 - 5632*sw^10 + 2048*sw^12)) + s*(9 - 12*sw^2 + 8*sw^4)*
         (-21*d^2*(3 - 20*sw^2 + 32*sw^4) + d^3*(9 - 60*sw^2 + 96*sw^4) - 
          16*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8) + 
          2*d*(81 - 540*sw^2 + 968*sw^4 - 320*sw^6 + 256*sw^8))*t + 
        2*(-2 + d)*(81 - 648*sw^2 + 2592*sw^4 - 5760*sw^6 + 7744*sw^8 - 
          5632*sw^10 + 2048*sw^12)*t^2)))/((-1 + d)*Pi^(2*d)*(mz^2 - s)^3*
     sw^6*(-1 + sw^2)^3), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, ((-I/27)*2^(-4 - d)*(-2 + d)*EL^6*(9 - 12*sw^2 + 8*sw^4)*
     (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
      2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
      4*(3 - 20*sw^2 + 32*sw^4)*t^2))/((-1 + d)*Pi^d*(mz^2 - s)^2*s*sw^4*
     (-1 + sw^2)^2), ((I/27)*2^(-5 - 2*d)*EL^6*(27*d^3*(2*Pi)^d*s^3 + 
      2^(1 + d)*Pi^d*s*(s^2*(6*d^3*sw^2*(-3 + 2*sw^2) + 
          d^2*(-81 + 18*sw^2 + 192*sw^4 - 272*sw^6 + 128*sw^8) + 
          4*(-27 - 54*sw^2 + 240*sw^4 - 272*sw^6 + 128*sw^8) - 
          2*d*(-81 - 72*sw^2 + 456*sw^4 - 544*sw^6 + 256*sw^8)) + 
        s*(9 - 12*sw^2 + 8*sw^4)*(-21*d^2 + 3*d^3 - 
          16*(3 - 5*sw^2 + 8*sw^4) + d*(54 - 40*sw^2 + 64*sw^4))*t + 
        2*(-2 + d)*(27 - 216*sw^2 + 552*sw^4 - 544*sw^6 + 256*sw^8)*t^2) - 
      2*ms^2*(27*(-7 + d)*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (2*s^2*(-81 - 198*sw^2 + 624*sw^4 - 544*sw^6 + 256*sw^8 + 
            3*d^2*sw^2*(-9 + 20*sw^2) + d*(108 + 153*sw^2 - 432*sw^4 + 
              272*sw^6 - 128*sw^8)) + s*(27*d^3 - 24*d^2*(9 - 3*sw^2 + 
              2*sw^4) + d*(621 - 720*sw^2 + 816*sw^4) - 
            8*(81 - 207*sw^2 + 384*sw^4 - 272*sw^6 + 128*sw^8))*t + 
          2*(-27 + 9*d + 24*sw^2 - 16*sw^4)*(3 - 20*sw^2 + 32*sw^4)*t^2))))/
    ((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s*sw^4*(-1 + sw^2)^2), 0, 0, 0, 0, 0, 0}, 
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/27)*2^(-7 - d)*(-2 + d)*EL^6*(9 - 12*sw^2 + 8*sw^4)*
     (s^2*(d^2*(9 - 60*sw^2 + 96*sw^4) + 4*(9 - 60*sw^2 + 44*sw^4 + 
          160*sw^6 - 128*sw^8) + 4*d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
          64*sw^8)) + 2*s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
        d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 
          64*sw^8))*t + 4*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*
       t^2))/((-1 + d)*Pi^d*(mz^2 - s)^3*sw^6*(-1 + sw^2)^3), 
   ((-I/27)*16^(-2 - d)*EL^6*(-81*d^3*(2*Pi)^(3*d)*s^3 + 
      2^(1 + 3*d)*Pi^(3*d)*s*(s^2*(-12*d^3*sw^2*(-27 + 69*sw^2 - 68*sw^4 + 
            32*sw^6) + d^2*(243 - 1944*sw^2 + 4500*sw^4 - 2832*sw^6 - 
            1184*sw^8 + 2816*sw^10 - 1024*sw^12) - 
          4*(-81 + 648*sw^2 - 1188*sw^4 - 432*sw^6 + 2720*sw^8 - 2816*sw^10 + 
            1024*sw^12) + 2*d*(-243 + 1944*sw^2 - 4032*sw^4 + 768*sw^6 + 
            4672*sw^8 - 5632*sw^10 + 2048*sw^12)) - s*(9 - 12*sw^2 + 8*sw^4)*
         (-21*d^2*(3 - 20*sw^2 + 32*sw^4) + d^3*(9 - 60*sw^2 + 96*sw^4) - 
          16*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8) + 
          2*d*(81 - 540*sw^2 + 968*sw^4 - 320*sw^6 + 256*sw^8))*t - 
        2*(-2 + d)*(81 - 648*sw^2 + 2592*sw^4 - 5760*sw^6 + 7744*sw^8 - 
          5632*sw^10 + 2048*sw^12)*t^2) + 
      2*ms^2*(81*(-7 + d)*d^2*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
         (2*s^2*(-243 + 1836*sw^2 - 2772*sw^4 - 2304*sw^6 + 6592*sw^8 - 
            5632*sw^10 + 2048*sw^12 + 27*d^3*sw^2*(-5 + 8*sw^2) + 
            3*d^2*sw^2*(333 - 558*sw^2 + 32*sw^4 + 64*sw^6) + 
            d*(324 - 2376*sw^2 + 3870*sw^4 + 960*sw^6 - 3680*sw^8 + 
              2816*sw^10 - 1024*sw^12)) + s*(27*d^3*(3 - 20*sw^2 + 32*sw^4) - 
            24*d^2*(27 - 189*sw^2 + 354*sw^4 - 136*sw^6 + 64*sw^8) + 
            3*d*(621 - 4500*sw^2 + 9888*sw^4 - 7360*sw^6 + 4096*sw^8) - 
            8*(243 - 1836*sw^2 + 4878*sw^4 - 6048*sw^6 + 5600*sw^8 - 
              2816*sw^10 + 1024*sw^12))*t + 2*(-27 + 9*d + 24*sw^2 - 16*sw^4)*
           (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^2))))/
    ((-1 + d)*Pi^(4*d)*(mz^2 - s)^3*sw^6*(-1 + sw^2)^3), 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/27)*2^(-4 - d)*(-2 + d)*EL^6*(9 - 12*sw^2 + 8*sw^4)*
     (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
      2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
      4*(3 - 20*sw^2 + 32*sw^4)*t^2))/((-1 + d)*Pi^d*(mz^2 - s)^2*s*sw^4*
     (-1 + sw^2)^2), ((I/27)*2^(-5 - 2*d)*EL^6*(27*d^3*(2*Pi)^d*s^3 + 
      2^(1 + d)*Pi^d*s*(s^2*(6*d^3*sw^2*(-3 + 2*sw^2) + 
          d^2*(-81 + 18*sw^2 + 192*sw^4 - 272*sw^6 + 128*sw^8) + 
          4*(-27 - 54*sw^2 + 240*sw^4 - 272*sw^6 + 128*sw^8) - 
          2*d*(-81 - 72*sw^2 + 456*sw^4 - 544*sw^6 + 256*sw^8)) + 
        s*(9 - 12*sw^2 + 8*sw^4)*(-21*d^2 + 3*d^3 - 
          16*(3 - 5*sw^2 + 8*sw^4) + d*(54 - 40*sw^2 + 64*sw^4))*t + 
        2*(-2 + d)*(27 - 216*sw^2 + 552*sw^4 - 544*sw^6 + 256*sw^8)*t^2) - 
      2*mb^2*(27*(-7 + d)*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (2*s^2*(-81 - 198*sw^2 + 624*sw^4 - 544*sw^6 + 256*sw^8 + 
            3*d^2*sw^2*(-9 + 20*sw^2) + d*(108 + 153*sw^2 - 432*sw^4 + 
              272*sw^6 - 128*sw^8)) + s*(27*d^3 - 24*d^2*(9 - 3*sw^2 + 
              2*sw^4) + d*(621 - 720*sw^2 + 816*sw^4) - 
            8*(81 - 207*sw^2 + 384*sw^4 - 272*sw^6 + 128*sw^8))*t + 
          2*(-27 + 9*d + 24*sw^2 - 16*sw^4)*(3 - 20*sw^2 + 32*sw^4)*t^2))))/
    ((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s*sw^4*(-1 + sw^2)^2), 0, 0, 0, 0}, 
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/27)*2^(-7 - d)*(-2 + d)*EL^6*(9 - 12*sw^2 + 8*sw^4)*
     (s^2*(d^2*(9 - 60*sw^2 + 96*sw^4) + 4*(9 - 60*sw^2 + 44*sw^4 + 
          160*sw^6 - 128*sw^8) + 4*d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
          64*sw^8)) + 2*s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
        d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 
          64*sw^8))*t + 4*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*
       t^2))/((-1 + d)*Pi^d*(mz^2 - s)^3*sw^6*(-1 + sw^2)^3), 
   ((-I/27)*16^(-2 - d)*EL^6*(-81*d^3*(2*Pi)^(3*d)*s^3 + 
      2^(1 + 3*d)*Pi^(3*d)*s*(s^2*(-12*d^3*sw^2*(-27 + 69*sw^2 - 68*sw^4 + 
            32*sw^6) + d^2*(243 - 1944*sw^2 + 4500*sw^4 - 2832*sw^6 - 
            1184*sw^8 + 2816*sw^10 - 1024*sw^12) - 
          4*(-81 + 648*sw^2 - 1188*sw^4 - 432*sw^6 + 2720*sw^8 - 2816*sw^10 + 
            1024*sw^12) + 2*d*(-243 + 1944*sw^2 - 4032*sw^4 + 768*sw^6 + 
            4672*sw^8 - 5632*sw^10 + 2048*sw^12)) - s*(9 - 12*sw^2 + 8*sw^4)*
         (-21*d^2*(3 - 20*sw^2 + 32*sw^4) + d^3*(9 - 60*sw^2 + 96*sw^4) - 
          16*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8) + 
          2*d*(81 - 540*sw^2 + 968*sw^4 - 320*sw^6 + 256*sw^8))*t - 
        2*(-2 + d)*(81 - 648*sw^2 + 2592*sw^4 - 5760*sw^6 + 7744*sw^8 - 
          5632*sw^10 + 2048*sw^12)*t^2) + 
      2*mb^2*(81*(-7 + d)*d^2*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
         (2*s^2*(-243 + 1836*sw^2 - 2772*sw^4 - 2304*sw^6 + 6592*sw^8 - 
            5632*sw^10 + 2048*sw^12 + 27*d^3*sw^2*(-5 + 8*sw^2) + 
            3*d^2*sw^2*(333 - 558*sw^2 + 32*sw^4 + 64*sw^6) + 
            d*(324 - 2376*sw^2 + 3870*sw^4 + 960*sw^6 - 3680*sw^8 + 
              2816*sw^10 - 1024*sw^12)) + s*(27*d^3*(3 - 20*sw^2 + 32*sw^4) - 
            24*d^2*(27 - 189*sw^2 + 354*sw^4 - 136*sw^6 + 64*sw^8) + 
            3*d*(621 - 4500*sw^2 + 9888*sw^4 - 7360*sw^6 + 4096*sw^8) - 
            8*(243 - 1836*sw^2 + 4878*sw^4 - 6048*sw^6 + 5600*sw^8 - 
              2816*sw^10 + 1024*sw^12))*t + 2*(-27 + 9*d + 24*sw^2 - 16*sw^4)*
           (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^2))))/
    ((-1 + d)*Pi^(4*d)*(mz^2 - s)^3*sw^6*(-1 + sw^2)^3), 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, ((-I/9)*2^(3 - d)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
    ((-1 + d)*Pi^d*s^3), ((I/9)*4^(1 - d)*EL^6*(d*(2*Pi)^d*s^3 + 
      2^(1 + d)*Pi^d*s*(-s^2 + 2*s*t + 2*t^2) + 2^(2 + d)*mz^2*Pi^d*
       (-1 + sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2)*GaugeXi[Q]))/
    ((-1 + d)*Pi^(2*d)*s^3), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, ((I/9)*2^(-2 - d)*EL^6*
     (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
      2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
      4*(3 - 20*sw^2 + 32*sw^4)*t^2))/((-1 + d)*Pi^d*s^2*(-mz^2 + s)*sw^2*
     (-1 + sw^2)), ((-I/9)*2^(-3 - 2*d)*EL^6*(3*d^2*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(2*s^2*(3 + 10*sw^2 - 16*sw^4 + 
          d*(-3 - 5*sw^2 + 8*sw^4)) + s*(-15*d + 3*d^2 + 
          8*(3 - 5*sw^2 + 8*sw^4))*t + 2*(3 - 20*sw^2 + 32*sw^4)*t^2))*
     (s + 4*mz^2*(-1 + sw^2)*GaugeXi[Q]))/((-1 + d)*Pi^(2*d)*s^2*(-mz^2 + s)*
     sw^2*(-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, ((I/9)*EL^6*(-1 + 2*sw^2)*(-1 + 4*sw^2)*
     ((-2 + d)*s^2 + 4*s*t + 4*t^2))/((-1 + d)*(2*Pi)^d*s^2*(-mz^2 + s)*sw^2*
     (-1 + sw^2)), ((-I/9)*2^(-1 - d)*EL^6*(-1 + 2*sw^2)*(-1 + 4*sw^2)*
     ((-2 + d)*s^2 + 4*s*t + 4*t^2)*(s + 4*mz^2*(-1 + sw^2)*GaugeXi[Q]))/
    ((-1 + d)*Pi^d*s^2*(-mz^2 + s)*sw^2*(-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/9)*2^(-4 - d)*EL^6*(-1 + 2*sw^2)*
     (s^2*(3*d^2*(-1 + 4*sw^2) + 4*d*(3 - 10*sw^2 - 14*sw^4 + 16*sw^6) - 
        4*(3 - 8*sw^2 - 28*sw^4 + 32*sw^6)) + 
      2*s*(d*(15 - 60*sw^2) + 3*d^2*(-1 + 4*sw^2) + 
        8*(-3 + 14*sw^2 - 14*sw^4 + 16*sw^6))*t + 
      4*(-3 + 20*sw^2 - 56*sw^4 + 64*sw^6)*t^2))/((-1 + d)*Pi^d*(mz^2 - s)^2*
     s*sw^4*(-1 + sw^2)^2), ((I/9)*2^(-5 - 2*d)*EL^6*(-1 + 2*sw^2)*
     (-3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
       (2*s^2*(-3 + 8*sw^2 + 3*d^2*sw^2 + 28*sw^4 - 32*sw^6 + 
          d*(3 - 10*sw^2 - 14*sw^4 + 16*sw^6)) + 
        s*(d*(15 - 60*sw^2) + 3*d^2*(-1 + 4*sw^2) + 
          8*(-3 + 14*sw^2 - 14*sw^4 + 16*sw^6))*t + 
        2*(-3 + 20*sw^2 - 56*sw^4 + 64*sw^6)*t^2))*
     (s + 4*mz^2*(-1 + sw^2)*GaugeXi[Q]))/((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s*
     sw^4*(-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, ((I/9)*2^(-1 - d)*EL^6*(-1 + 2*sw^2)*
     (-3 + 8*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
    ((-1 + d)*Pi^d*s^2*(-mz^2 + s)*sw^2*(-1 + sw^2)), 
   ((-I/9)*2^(-2 - d)*EL^6*(-1 + 2*sw^2)*(-3 + 8*sw^2)*
     ((-2 + d)*s^2 + 4*s*t + 4*t^2)*(s + 4*mz^2*(-1 + sw^2)*GaugeXi[Q]))/
    ((-1 + d)*Pi^d*s^2*(-mz^2 + s)*sw^2*(-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/9)*2^(-5 - d)*EL^6*(-1 + 2*sw^2)*
     (s^2*(3*d^2*(-3 + 8*sw^2) + 4*d*(9 - 15*sw^2 - 32*sw^4 + 32*sw^6) - 
        4*(9 - 6*sw^2 - 64*sw^4 + 64*sw^6)) + 
      2*s*(-15*d*(-3 + 8*sw^2) + 3*d^2*(-3 + 8*sw^2) + 
        8*(-9 + 33*sw^2 - 32*sw^4 + 32*sw^6))*t + 
      4*(-9 + 60*sw^2 - 128*sw^4 + 128*sw^6)*t^2))/
    ((-1 + d)*Pi^d*(mz^2 - s)^2*s*sw^4*(-1 + sw^2)^2), 
   ((I/9)*4^(-3 - d)*EL^6*(-1 + 2*sw^2)*(-9*d^2*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(2*s^2*(-9 + 6*sw^2 + 6*d^2*sw^2 + 64*sw^4 - 64*sw^6 + 
          d*(9 - 15*sw^2 - 32*sw^4 + 32*sw^6)) + 
        s*(-15*d*(-3 + 8*sw^2) + 3*d^2*(-3 + 8*sw^2) + 
          8*(-9 + 33*sw^2 - 32*sw^4 + 32*sw^6))*t + 
        2*(-9 + 60*sw^2 - 128*sw^4 + 128*sw^6)*t^2))*
     (s + 4*mz^2*(-1 + sw^2)*GaugeXi[Q]))/((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s*
     sw^4*(-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/9)*2^(-5 - d)*EL^6*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
        4*d*(-3 - 5*sw^2 + 8*sw^4)) + 2*s*(-15*d + 3*d^2 + 
        8*(3 - 5*sw^2 + 8*sw^4))*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2)*
     (mh^2 + s - mz^2*GaugeXi[Q]))/((-1 + d)*Pi^d*(mz^2 - s)^2*s^2*sw^4*
     (-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/9)*2^(-5 - d)*EL^6*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
        4*d*(-3 - 5*sw^2 + 8*sw^4)) + 2*s*(-15*d + 3*d^2 + 
        8*(3 - 5*sw^2 + 8*sw^4))*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2)*
     (-mh^2 + s + mz^2*GaugeXi[Q]))/((-1 + d)*Pi^d*(mz^2 - s)^2*s^2*sw^4*
     (-1 + sw^2)^2), ((-I/9)*2^(-5 - 2*d)*EL^6*
     (2^(1 + d)*mh^2*Pi^d*s*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
          4*d*(-3 - 5*sw^2 + 8*sw^4)) + 2*s*(-15*d + 3*d^2 + 
          8*(3 - 5*sw^2 + 8*sw^4))*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2) + 
      mh^4*(-9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(-6 + 3*d^2 - 20*sw^2 + 32*sw^4 + d*(6 + 10*sw^2 - 16*sw^4)) + 
          s*(15*d - 3*d^2 - 8*(3 - 5*sw^2 + 8*sw^4))*t - 
          2*(3 - 20*sw^2 + 32*sw^4)*t^2)) - 
      s^2*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
          s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          2*(3 - 20*sw^2 + 32*sw^4)*t^2)) + 2*mz^2*(mh^2 + s)*
       (3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
          s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[Q] - 
      mz^4*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
          s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[Q]^2))/
    ((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s^2*sw^4*(-1 + sw^2)^2), 0, 0}, 
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/9)*16^(-2 - d)*EL^6*(9*d^2*(2*Pi)^(3*d)*s^2 + 
      2^(1 + 3*d)*Pi^(3*d)*(2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 
          128*sw^8 + 3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 
            80*sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
          d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 
            64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*
         t^2))*(mh^2 + s - mz^2*GaugeXi[Q]))/((-1 + d)*Pi^(4*d)*(mz^2 - s)^3*
     s*sw^6*(-1 + sw^2)^3), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((I/9)*16^(-2 - d)*EL^6*(9*d^2*(2*Pi)^(3*d)*s^2 + 
      2^(1 + 3*d)*Pi^(3*d)*(2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 
          128*sw^8 + 3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 
            80*sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
          d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 
            64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*
         t^2))*(mh^2 - s - mz^2*GaugeXi[Q]))/((-1 + d)*Pi^(4*d)*(mz^2 - s)^3*
     s*sw^6*(-1 + sw^2)^3), 
   ((I/9)*EL^6*(-((-1 + d)*(2*Pi)^d*s*(d*s*(9 - 60*sw^2 + 96*sw^4) + 
         2*s*(-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 128*sw^8) - 
         2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t)*
        (mh^2 - s + mz^2*GaugeXi[Q])^2) - (-1 + d)*s*
       (-mh^2 + s - mz^2*GaugeXi[Q])*
       (s*(9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-9 - 30*(-2 + d)*sw^2 + 
              (-44 + 48*d)*sw^4 - 160*sw^6 + 128*sw^8) + 
            (-9 + 60*sw^2 - 200*sw^4 + 320*sw^6 - 256*sw^8)*t)) + 
        mh^2*(-27*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
           (s*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + d*(9 + 30*sw^2 - 
                48*sw^4)) + (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*
             t)) - mz^2*(9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
           (s*(-9 - 30*(-2 + d)*sw^2 + (-44 + 48*d)*sw^4 - 160*sw^6 + 
              128*sw^8) + (-9 + 60*sw^2 - 200*sw^4 + 320*sw^6 - 256*sw^8)*t))*
         GaugeXi[Q]) + 2^(1 + d)*Pi^d*s^2*(1 - 4*sw^2 + 8*sw^4)*
       (9 - 24*sw^2 + 32*sw^4)*(d*(mh^2 - s)^2 + 2*mz^2*((-2 + d)*mh^2 - d*s)*
         GaugeXi[Q] + d*mz^4*GaugeXi[Q]^2) + 2^(1 + d)*(1 - d)*Pi^d*s*
       ((mh^2 - s)^2*(d*(9 - 60*sw^2 + 96*sw^4) + 
          2*(-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 128*sw^8))*t - 
        32*mz^2*(4*sw^8*((-2 + d)*s*t + mh^2*((-2 + d)*s + (-4 + d)*t)) - 
          (sw^4*(3 - 4*sw^2)^2*((-4 + d)*s*t + mh^2*((-4 + d)*s + (-2 + d)*
                t)))/4 + (-1/2 + sw^2)^2*(((3 - 4*sw^2)^2*((-2 + d)*s*t + 
               mh^2*((-2 + d)*s + (-4 + d)*t)))/4 - 
            4*sw^4*((-4 + d)*s*t + mh^2*((-4 + d)*s + (-2 + d)*t))))*
         GaugeXi[Q] + mz^4*(d*(9 - 60*sw^2 + 96*sw^4) + 
          2*(-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 128*sw^8))*t*GaugeXi[Q]^2) + 
      (2*Pi)^d*(d*s*(9 - 60*sw^2 + 96*sw^4) - 4*s*(9 - 60*sw^2 + 122*sw^4 - 
          80*sw^6 + 64*sw^8) - 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
          256*sw^8)*t)*((mh^2 - s)^2*(d*s + 2*t) + 
        2*mz^2*(mh^2*((-2 + d)*s - 2*t) - s*(d*s + 2*t))*GaugeXi[Q] + 
        mz^4*(d*s + 2*t)*GaugeXi[Q]^2)))/(2^(2*(4 + d))*Pi^(2*d)*(mz^2 - s)^3*
     (s - d*s)*sw^6*(-1 + sw^2)^3), 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, ((-I/9)*2^(-4 - d)*EL^6*(1 - 2*sw^2)^2*
     (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
      2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
      4*(3 - 20*sw^2 + 32*sw^4)*t^2))/((-1 + d)*Pi^d*(mz^2 - s)^2*s*sw^4*
     (-1 + sw^2)^2), ((I/9)*2^(-5 - 2*d)*EL^6*(1 - 2*sw^2)^2*
     (3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
       (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
        s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
        2*(3 - 20*sw^2 + 32*sw^4)*t^2))*(s + 4*mz^2*(-1 + sw^2)*GaugeXi[Q]))/
    ((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s*sw^4*(-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, ((-I/9)*2^(-7 - d)*EL^6*(1 - 2*sw^2)^2*
     (s^2*(d^2*(9 - 60*sw^2 + 96*sw^4) + 4*(9 - 60*sw^2 + 44*sw^4 + 
          160*sw^6 - 128*sw^8) + 4*d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
          64*sw^8)) + 2*s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
        d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 
          64*sw^8))*t + 4*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*
       t^2))/((-1 + d)*Pi^d*(mz^2 - s)^3*sw^6*(-1 + sw^2)^3), 
   ((I/9)*2^(-8 - d)*EL^6*(1 - 2*sw^2)^2*
     (s^2*(d^2*(9 - 60*sw^2 + 96*sw^4) + 4*(9 - 60*sw^2 + 44*sw^4 + 
          160*sw^6 - 128*sw^8) + 4*d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
          64*sw^8)) + 2*s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
        d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 
          64*sw^8))*t + 4*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^2)*
     (s + 4*mz^2*(-1 + sw^2)*GaugeXi[Q]))/((-1 + d)*Pi^d*(mz^2 - s)^3*sw^6*
     (-1 + sw^2)^3), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, ((I/9)*2^(3 - d)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
    ((-1 + d)*Pi^d*s^3), ((I/9)*4^(1 - d)*EL^6*(-(d*(2*Pi)^d*s^3) + 
      2^(1 + d)*Pi^d*s*(s^2 - 2*s*t - 2*t^2) + 2^(2 + d)*mz^2*Pi^d*(1 - sw^2)*
       ((-2 + d)*s^2 + 4*s*t + 4*t^2)*GaugeXi[Q]))/((-1 + d)*Pi^(2*d)*s^3), 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, ((-I/9)*2^(-2 - d)*EL^6*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
        4*d*(-3 - 5*sw^2 + 8*sw^4)) + 2*s*(-15*d + 3*d^2 + 
        8*(3 - 5*sw^2 + 8*sw^4))*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2))/
    ((-1 + d)*Pi^d*s^2*(-mz^2 + s)*sw^2*(-1 + sw^2)), 
   ((I/9)*2^(-3 - 2*d)*EL^6*(3*d^2*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(2*s^2*(3 + 10*sw^2 - 16*sw^4 + 
          d*(-3 - 5*sw^2 + 8*sw^4)) + s*(-15*d + 3*d^2 + 
          8*(3 - 5*sw^2 + 8*sw^4))*t + 2*(3 - 20*sw^2 + 32*sw^4)*t^2))*
     (s + 4*mz^2*(-1 + sw^2)*GaugeXi[Q]))/((-1 + d)*Pi^(2*d)*s^2*(-mz^2 + s)*
     sw^2*(-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, ((I/9)*2^(3 - d)*EL^6*((-2 + d)*s^2 + 4*s*t + 
      4*t^2))/((-1 + d)*Pi^d*s^3), 
   ((I/9)*4^(1 - d)*EL^6*(-(d*(2*Pi)^d*s^3) + 2^(1 + d)*Pi^d*s*
       (s^2 - 2*s*t - 2*t^2) + 2^(2 + d)*mz^2*Pi^d*(1 - sw^2)*
       ((-2 + d)*s^2 + 4*s*t + 4*t^2)*GaugeXi[Q]))/((-1 + d)*Pi^(2*d)*s^3), 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, ((-I/9)*2^(-2 - d)*EL^6*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
        4*d*(-3 - 5*sw^2 + 8*sw^4)) + 2*s*(-15*d + 3*d^2 + 
        8*(3 - 5*sw^2 + 8*sw^4))*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2))/
    ((-1 + d)*Pi^d*s^2*(-mz^2 + s)*sw^2*(-1 + sw^2)), 
   ((I/9)*2^(-3 - 2*d)*EL^6*(3*d^2*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(2*s^2*(3 + 10*sw^2 - 16*sw^4 + 
          d*(-3 - 5*sw^2 + 8*sw^4)) + s*(-15*d + 3*d^2 + 
          8*(3 - 5*sw^2 + 8*sw^4))*t + 2*(3 - 20*sw^2 + 32*sw^4)*t^2))*
     (s + 4*mz^2*(-1 + sw^2)*GaugeXi[Q]))/((-1 + d)*Pi^(2*d)*s^2*(-mz^2 + s)*
     sw^2*(-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, ((-I/9)*2^(1 - d)*EL^6*(-1 + 4*sw^2)*
     ((-2 + d)*s^2 + 4*s*t + 4*t^2))/((-1 + d)*Pi^d*s^2*(-mz^2 + s)*sw^2), 
   ((I/9)*EL^6*(-1 + 4*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
     (s + 4*mz^2*(-1 + sw^2)*GaugeXi[Q]))/((-1 + d)*(2*Pi)^d*s^2*(-mz^2 + s)*
     sw^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, ((I/9)*2^(-3 - d)*EL^6*
     (s^2*(3*d^2*(-1 + 4*sw^2) + 4*d*(3 - 10*sw^2 - 14*sw^4 + 16*sw^6) - 
        4*(3 - 8*sw^2 - 28*sw^4 + 32*sw^6)) + 
      2*s*(d*(15 - 60*sw^2) + 3*d^2*(-1 + 4*sw^2) + 
        8*(-3 + 14*sw^2 - 14*sw^4 + 16*sw^6))*t + 
      4*(-3 + 20*sw^2 - 56*sw^4 + 64*sw^6)*t^2))/((-1 + d)*Pi^d*(mz^2 - s)^2*
     s*sw^4*(-1 + sw^2)), ((-I/9)*4^(-2 - d)*EL^6*(-3*d^2*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(2*s^2*(-3 + 8*sw^2 + 3*d^2*sw^2 + 28*sw^4 - 32*sw^6 + 
          d*(3 - 10*sw^2 - 14*sw^4 + 16*sw^6)) + 
        s*(d*(15 - 60*sw^2) + 3*d^2*(-1 + 4*sw^2) + 
          8*(-3 + 14*sw^2 - 14*sw^4 + 16*sw^6))*t + 
        2*(-3 + 20*sw^2 - 56*sw^4 + 64*sw^6)*t^2))*
     (s + 4*mz^2*(-1 + sw^2)*GaugeXi[Q]))/((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s*
     sw^4*(-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, ((-I/9)*EL^6*(-3 + 8*sw^2)*
     ((-2 + d)*s^2 + 4*s*t + 4*t^2))/((-1 + d)*(2*Pi)^d*s^2*(-mz^2 + s)*
     sw^2), ((I/9)*2^(-1 - d)*EL^6*(-3 + 8*sw^2)*((-2 + d)*s^2 + 4*s*t + 
      4*t^2)*(s + 4*mz^2*(-1 + sw^2)*GaugeXi[Q]))/
    ((-1 + d)*Pi^d*s^2*(-mz^2 + s)*sw^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((I/9)*2^(-4 - d)*EL^6*(s^2*(3*d^2*(-3 + 8*sw^2) + 
        4*d*(9 - 15*sw^2 - 32*sw^4 + 32*sw^6) - 
        4*(9 - 6*sw^2 - 64*sw^4 + 64*sw^6)) + 
      2*s*(-15*d*(-3 + 8*sw^2) + 3*d^2*(-3 + 8*sw^2) + 
        8*(-9 + 33*sw^2 - 32*sw^4 + 32*sw^6))*t + 
      4*(-9 + 60*sw^2 - 128*sw^4 + 128*sw^6)*t^2))/
    ((-1 + d)*Pi^d*(mz^2 - s)^2*s*sw^4*(-1 + sw^2)), 
   ((-I/9)*2^(-5 - 2*d)*EL^6*(-9*d^2*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(2*s^2*(-9 + 6*sw^2 + 6*d^2*sw^2 + 64*sw^4 - 64*sw^6 + 
          d*(9 - 15*sw^2 - 32*sw^4 + 32*sw^6)) + 
        s*(-15*d*(-3 + 8*sw^2) + 3*d^2*(-3 + 8*sw^2) + 
          8*(-9 + 33*sw^2 - 32*sw^4 + 32*sw^6))*t + 
        2*(-9 + 60*sw^2 - 128*sw^4 + 128*sw^6)*t^2))*
     (s + 4*mz^2*(-1 + sw^2)*GaugeXi[Q]))/((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s*
     sw^4*(-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, ((-I/9)*2^(1 - d)*EL^6*(-1 + 4*sw^2)*
     ((-2 + d)*s^2 + 4*s*t + 4*t^2))/((-1 + d)*Pi^d*s^2*(-mz^2 + s)*sw^2), 
   ((I/9)*EL^6*(-1 + 4*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
     (s + 4*mz^2*(-1 + sw^2)*GaugeXi[Q]))/((-1 + d)*(2*Pi)^d*s^2*(-mz^2 + s)*
     sw^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, ((I/9)*2^(-3 - d)*EL^6*
     (s^2*(3*d^2*(-1 + 4*sw^2) + 4*d*(3 - 10*sw^2 - 14*sw^4 + 16*sw^6) - 
        4*(3 - 8*sw^2 - 28*sw^4 + 32*sw^6)) + 
      2*s*(d*(15 - 60*sw^2) + 3*d^2*(-1 + 4*sw^2) + 
        8*(-3 + 14*sw^2 - 14*sw^4 + 16*sw^6))*t + 
      4*(-3 + 20*sw^2 - 56*sw^4 + 64*sw^6)*t^2))/((-1 + d)*Pi^d*(mz^2 - s)^2*
     s*sw^4*(-1 + sw^2)), ((-I/9)*4^(-2 - d)*EL^6*(-3*d^2*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(2*s^2*(-3 + 8*sw^2 + 3*d^2*sw^2 + 28*sw^4 - 32*sw^6 + 
          d*(3 - 10*sw^2 - 14*sw^4 + 16*sw^6)) + 
        s*(d*(15 - 60*sw^2) + 3*d^2*(-1 + 4*sw^2) + 
          8*(-3 + 14*sw^2 - 14*sw^4 + 16*sw^6))*t + 
        2*(-3 + 20*sw^2 - 56*sw^4 + 64*sw^6)*t^2))*
     (s + 4*mz^2*(-1 + sw^2)*GaugeXi[Q]))/((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s*
     sw^4*(-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, ((-I/9)*EL^6*(-3 + 8*sw^2)*
     ((-2 + d)*s^2 + 4*s*t + 4*t^2))/((-1 + d)*(2*Pi)^d*s^2*(-mz^2 + s)*
     sw^2), ((I/9)*2^(-1 - d)*EL^6*(-3 + 8*sw^2)*((-2 + d)*s^2 + 4*s*t + 
      4*t^2)*(s + 4*mz^2*(-1 + sw^2)*GaugeXi[Q]))/
    ((-1 + d)*Pi^d*s^2*(-mz^2 + s)*sw^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((I/9)*2^(-4 - d)*EL^6*(s^2*(3*d^2*(-3 + 8*sw^2) + 
        4*d*(9 - 15*sw^2 - 32*sw^4 + 32*sw^6) - 
        4*(9 - 6*sw^2 - 64*sw^4 + 64*sw^6)) + 
      2*s*(-15*d*(-3 + 8*sw^2) + 3*d^2*(-3 + 8*sw^2) + 
        8*(-9 + 33*sw^2 - 32*sw^4 + 32*sw^6))*t + 
      4*(-9 + 60*sw^2 - 128*sw^4 + 128*sw^6)*t^2))/
    ((-1 + d)*Pi^d*(mz^2 - s)^2*s*sw^4*(-1 + sw^2)), 
   ((-I/9)*2^(-5 - 2*d)*EL^6*(-9*d^2*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(2*s^2*(-9 + 6*sw^2 + 6*d^2*sw^2 + 64*sw^4 - 64*sw^6 + 
          d*(9 - 15*sw^2 - 32*sw^4 + 32*sw^6)) + 
        s*(-15*d*(-3 + 8*sw^2) + 3*d^2*(-3 + 8*sw^2) + 
          8*(-9 + 33*sw^2 - 32*sw^4 + 32*sw^6))*t + 
        2*(-9 + 60*sw^2 - 128*sw^4 + 128*sw^6)*t^2))*
     (s + 4*mz^2*(-1 + sw^2)*GaugeXi[Q]))/((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s*
     sw^4*(-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, ((I/9)*2^(-2 - d)*EL^6*
     (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
      2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
      4*(3 - 20*sw^2 + 32*sw^4)*t^2))/((-1 + d)*Pi^d*(mz^2 - s)^2*s*sw^4), 
   ((-I/9)*2^(-3 - 2*d)*EL^6*(3*d^2*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(2*s^2*(3 + 10*sw^2 - 16*sw^4 + 
          d*(-3 - 5*sw^2 + 8*sw^4)) + s*(-15*d + 3*d^2 + 
          8*(3 - 5*sw^2 + 8*sw^4))*t + 2*(3 - 20*sw^2 + 32*sw^4)*t^2))*
     (s + 4*mz^2*(-1 + sw^2)*GaugeXi[Q]))/((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s*
     sw^4), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, ((I/9)*2^(-5 - d)*EL^6*
     (s^2*(d^2*(9 - 60*sw^2 + 96*sw^4) + 4*(9 - 60*sw^2 + 44*sw^4 + 
          160*sw^6 - 128*sw^8) + 4*d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
          64*sw^8)) + 2*s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
        d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 
          64*sw^8))*t + 4*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*
       t^2))/((-1 + d)*Pi^d*(mz^2 - s)^3*sw^6*(-1 + sw^2)), 
   ((-I/9)*2^(-6 - d)*EL^6*(s^2*(d^2*(9 - 60*sw^2 + 96*sw^4) + 
        4*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8) + 
        4*d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 64*sw^8)) + 
      2*s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + d^2*(9 - 60*sw^2 + 96*sw^4) + 
        8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8))*t + 
      4*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^2)*
     (s + 4*mz^2*(-1 + sw^2)*GaugeXi[Q]))/((-1 + d)*Pi^d*(mz^2 - s)^3*sw^6*
     (-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, ((I/9)*2^(-2 - d)*EL^6*
     (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
      2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
      4*(3 - 20*sw^2 + 32*sw^4)*t^2))/((-1 + d)*Pi^d*(mz^2 - s)^2*s*sw^4), 
   ((-I/9)*2^(-3 - 2*d)*EL^6*(3*d^2*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(2*s^2*(3 + 10*sw^2 - 16*sw^4 + 
          d*(-3 - 5*sw^2 + 8*sw^4)) + s*(-15*d + 3*d^2 + 
          8*(3 - 5*sw^2 + 8*sw^4))*t + 2*(3 - 20*sw^2 + 32*sw^4)*t^2))*
     (s + 4*mz^2*(-1 + sw^2)*GaugeXi[Q]))/((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s*
     sw^4), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, ((I/9)*2^(-5 - d)*EL^6*
     (s^2*(d^2*(9 - 60*sw^2 + 96*sw^4) + 4*(9 - 60*sw^2 + 44*sw^4 + 
          160*sw^6 - 128*sw^8) + 4*d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
          64*sw^8)) + 2*s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
        d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 
          64*sw^8))*t + 4*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*
       t^2))/((-1 + d)*Pi^d*(mz^2 - s)^3*sw^6*(-1 + sw^2)), 
   ((-I/9)*2^(-6 - d)*EL^6*(s^2*(d^2*(9 - 60*sw^2 + 96*sw^4) + 
        4*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8) + 
        4*d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 64*sw^8)) + 
      2*s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + d^2*(9 - 60*sw^2 + 96*sw^4) + 
        8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8))*t + 
      4*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^2)*
     (s + 4*mz^2*(-1 + sw^2)*GaugeXi[Q]))/((-1 + d)*Pi^d*(mz^2 - s)^3*sw^6*
     (-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/9)*2^(-5 - 2*d)*EL^6*mz^2*(3*d^2*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(2*s^2*(3 + 10*sw^2 - 16*sw^4 + 
          d*(-3 - 5*sw^2 + 8*sw^4)) + s*(-15*d + 3*d^2 + 
          8*(3 - 5*sw^2 + 8*sw^4))*t + 2*(3 - 20*sw^2 + 32*sw^4)*t^2))*
     (-1 + GaugeXi[Q]))/((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s^2*sw^4*
     (-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/9)*2^(-5 - 2*d)*EL^6*
     (-(s*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
          (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
           s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
           2*(3 - 20*sw^2 + 32*sw^4)*t^2))) + 
      mh^2*(-3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(6 + 3*d^2 + 20*sw^2 - 32*sw^4 + 2*d*(-3 - 5*sw^2 + 8*sw^4)) + 
          s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          2*(3 - 20*sw^2 + 32*sw^4)*t^2)) + 
      mz^2*(-9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(-6 + 3*d^2 - 20*sw^2 + 32*sw^4 + d*(6 + 10*sw^2 - 16*sw^4)) + 
          s*(15*d - 3*d^2 - 8*(3 - 5*sw^2 + 8*sw^4))*t - 
          2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[Q]))/
    ((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s^2*sw^4*(-1 + sw^2)^2), 
   ((-I/9)*2^(-5 - 2*d)*EL^6*
     ((mh^2 - s)*(-(s*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
            (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
             s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
             2*(3 - 20*sw^2 + 32*sw^4)*t^2))) + 
        mh^2*(-3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
           (s^2*(6 + 3*d^2 + 20*sw^2 - 32*sw^4 + 2*d*(-3 - 5*sw^2 + 
                8*sw^4)) + s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
            2*(3 - 20*sw^2 + 32*sw^4)*t^2))) - 2*mz^2*(mh^2 + s)*
       (3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
          s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[Q] + 
      mz^4*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
          s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[Q]^2))/
    ((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s^2*sw^4*(-1 + sw^2)^2), 
   ((I/9)*2^(-5 - 2*d)*EL^6*(mz^2*(-9*d^2*(2*Pi)^d*s^2 + 
        2^(1 + d)*Pi^d*(s^2*(-6 + 3*d^2 - 20*sw^2 + 32*sw^4 + 
            d*(6 + 10*sw^2 - 16*sw^4)) + s*(15*d - 3*d^2 - 
            8*(3 - 5*sw^2 + 8*sw^4))*t - 2*(3 - 20*sw^2 + 32*sw^4)*t^2)) - 
      s*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
          s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          2*(3 - 20*sw^2 + 32*sw^4)*t^2)) + 
      mh^2*(-3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(6 + 3*d^2 + 20*sw^2 - 32*sw^4 + 2*d*(-3 - 5*sw^2 + 8*sw^4)) + 
          s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          2*(3 - 20*sw^2 + 32*sw^4)*t^2))))/((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*
     s^2*sw^4*(-1 + sw^2)^2), ((I/9)*2^(-5 - 2*d)*EL^6*
     (3*d^2*(2*Pi)^d*s^4 + 2^(1 + d)*Pi^d*s^2*
       (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
        s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
        2*(3 - 20*sw^2 + 32*sw^4)*t^2) + mz^4*(3*d^2*(2*Pi)^d*s^2 + 
        2^(1 + d)*Pi^d*(2*s^2*(3 + 10*sw^2 - 16*sw^4 + 
            d*(-3 - 5*sw^2 + 8*sw^4)) + s*(-15*d + 3*d^2 + 
            8*(3 - 5*sw^2 + 8*sw^4))*t + 2*(3 - 20*sw^2 + 32*sw^4)*t^2)) - 
      2*mh^2*(mz^2 + s)*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
          s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          2*(3 - 20*sw^2 + 32*sw^4)*t^2)) + 
      mh^4*(-3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(6 + 3*d^2 + 20*sw^2 - 32*sw^4 + 2*d*(-3 - 5*sw^2 + 8*sw^4)) + 
          s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          2*(3 - 20*sw^2 + 32*sw^4)*t^2)) + 
      2*mz^2*s*(-33*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(-18 + 3*d^3 - 60*sw^2 + 96*sw^4 + 4*d^2*sw^2*(-5 + 8*sw^2) + 
            d*(30 + 70*sw^2 - 112*sw^4)) + s*(-39*d^2 + 6*d^3 - 
            24*(3 - 5*sw^2 + 8*sw^4) + d*(93 - 80*sw^2 + 128*sw^4))*t + 
          2*(-3 + 2*d)*(3 - 20*sw^2 + 32*sw^4)*t^2))))/
    ((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s^2*sw^4*(-1 + sw^2)^2)}, 
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ((-I/9)*4^(-4 - d)*EL^6*mz^2*
     (9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
       (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
          3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
            64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
          d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 
            64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*
         t^2))*(-1 + GaugeXi[Q]))/((-1 + d)*Pi^(2*d)*(mz^2 - s)^3*s*sw^6*
     (-1 + sw^2)^3), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((I/9)*4^(-4 - d)*EL^6*(9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
       (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
          3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
            64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
          d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 
            64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*
         t^2))*(-mh^2 + s + mz^2*GaugeXi[Q]))/((-1 + d)*Pi^(2*d)*(mz^2 - s)^3*
     s*sw^6*(-1 + sw^2)^3), 
   ((-I/9)*EL^6*mz^2*(2*(-1 + d)*s*(9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
         (s*(-9 - 30*(-2 + d)*sw^2 + (-44 + 48*d)*sw^4 - 160*sw^6 + 
            128*sw^8) + (-9 + 60*sw^2 - 200*sw^4 + 320*sw^6 - 256*sw^8)*t))*
       (mh^2 - s + mz^2*GaugeXi[Q])^2 - 2^(1 + d)*Pi^d*s^2*
       (1 - 4*sw^2 + 8*sw^4)*(9 - 24*sw^2 + 32*sw^4)*(d*(mh^2 - s)^2 + 
        2*mz^2*((-2 + d)*mh^2 - d*s)*GaugeXi[Q] + d*mz^4*GaugeXi[Q]^2) + 
      2*(-1 + d)*s*((-(2^(1 + d)*mh^2*Pi^d*s*(d*(9 - 60*sw^2 + 96*sw^4) + 
             2*(-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 128*sw^8))) + 
          mh^4*(9*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(-9 - 30*(-2 + d)*sw^2 + 
              (-44 + 48*d)*sw^4 - 160*sw^6 + 128*sw^8)) + 
          s^2*(9*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(-9 - 30*(-2 + d)*sw^2 + 
              (-44 + 48*d)*sw^4 - 160*sw^6 + 128*sw^8)))*t - 
        2*mz^2*(s*(9*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(-9 - 30*(-2 + d)*sw^2 + 
              (-44 + 48*d)*sw^4 - 160*sw^6 + 128*sw^8))*t + 
          mh^2*(9*d*(2*Pi)^d*(s + t) + 2^(1 + d)*Pi^d*
             (s*(-9 - 30*(-2 + d)*sw^2 + (-44 + 48*d)*sw^4 - 160*sw^6 + 
                128*sw^8) - 2*(9 + 15*(-4 + d)*sw^2 + (122 - 24*d)*sw^4 - 
                80*sw^6 + 64*sw^8)*t)))*GaugeXi[Q] + 
        mz^4*(9*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(-9 - 30*(-2 + d)*sw^2 + 
            (-44 + 48*d)*sw^4 - 160*sw^6 + 128*sw^8))*t*GaugeXi[Q]^2) + 
      (-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(2*s*(9 + 15*(-4 + d)*sw^2 + 
            (122 - 24*d)*sw^4 - 80*sw^6 + 64*sw^8) + 
          (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t))*
       ((mh^2 - s)^2*(d*s + 2*t) + 2*mz^2*(mh^2*((-2 + d)*s - 2*t) - 
          s*(d*s + 2*t))*GaugeXi[Q] + mz^4*(d*s + 2*t)*GaugeXi[Q]^2)))/
    (2^(2*(4 + d))*(-1 + d)*Pi^(2*d)*(mz^2 - s)*s*(mz^3 - mz*s)^2*sw^6*
     (-1 + sw^2)^3), ((-I/9)*4^(-4 - d)*EL^6*(-mh^2 + mz^2 + s)*
     (9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
       (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
          3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
            64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
          d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 
            64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*
         t^2)))/((-1 + d)*Pi^(2*d)*(mz^2 - s)^3*s*sw^6*(-1 + sw^2)^3), 
   ((-I/9)*EL^6*mz^2*(-(2^(-3 + d)*Pi^d*(-4*mh^2*mz^2 + 
         d*(mh^2 + mz^2 - s)^2)*s^2*(1 - 4*sw^2 + 8*sw^4)*
        (9 - 24*sw^2 + 32*sw^4)) + ((-1 + d)*(mh^2 + mz^2 - s)^2*s*
        (9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-9 - 30*(-2 + d)*sw^2 + 
             (-44 + 48*d)*sw^4 - 160*sw^6 + 128*sw^8) + 
           (-9 + 60*sw^2 - 200*sw^4 + 320*sw^6 - 256*sw^8)*t)))/8 - 
      ((9*d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(2*s*(9 + 15*(-4 + d)*sw^2 + 
             (122 - 24*d)*sw^4 - 80*sw^6 + 64*sw^8) + 
           (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t))*
        (d*(mh^2 + mz^2 - s)^2*s + 2*mh^4*t + 2*(mz^2 - s)^2*t - 
         4*mh^2*(s*t + mz^2*(s + t))))/16 + 2*(1 - d)*s*(-1/2 + sw^2)^2*
       (((3 - 4*sw^2)^2*(mh^4*(2^(1 + d)*Pi^d - d*(2*Pi)^d)*t + 
           mz^4*(2^(1 + d)*Pi^d - d*(2*Pi)^d)*t + 
           (2^(1 + d)*Pi^d - d*(2*Pi)^d)*s^2*t - 2^(1 + d)*mz^2*Pi^d*
            ((-2 + d)^2*s^2 + (18 - 11*d + 2*d^2)*s*t + 4*t^2) + 
           2^(1 + d)*mh^2*Pi^d*((-2 + d)*s*t + mz^2*((-2 + d)*s + (-4 + d)*
                t))))/4 - 4*sw^4*(mh^4*(2^(2 + d)*Pi^d - d*(2*Pi)^d)*t + 
          mz^4*(2^(2 + d)*Pi^d - d*(2*Pi)^d)*t + 
          (2^(2 + d)*Pi^d - d*(2*Pi)^d)*s^2*t - 2^(1 + d)*mz^2*Pi^d*
           ((8 - 6*d + d^2)*s^2 + (12 - 11*d + 2*d^2)*s*t - 4*t^2) + 
          2^(1 + d)*mh^2*Pi^d*((-4 + d)*s*t + mz^2*((-4 + d)*s + 
              (-2 + d)*t)))) + 2*(1 - d)*s*sw^4*
       (4*sw^4*(mh^4*(2^(1 + d)*Pi^d - d*(2*Pi)^d)*t + 
          mz^4*(2^(1 + d)*Pi^d - d*(2*Pi)^d)*t + 
          (2^(1 + d)*Pi^d - d*(2*Pi)^d)*s^2*t - 2^(1 + d)*mz^2*Pi^d*
           ((-2 + d)^2*s^2 + (18 - 11*d + 2*d^2)*s*t + 4*t^2) + 
          2^(1 + d)*mh^2*Pi^d*((-2 + d)*s*t + mz^2*((-2 + d)*s + 
              (-4 + d)*t))) - ((3 - 4*sw^2)^2*
          (mh^4*(2^(2 + d)*Pi^d - d*(2*Pi)^d)*t + mz^4*(2^(2 + d)*Pi^d - 
             d*(2*Pi)^d)*t + (2^(2 + d)*Pi^d - d*(2*Pi)^d)*s^2*t - 
           2^(1 + d)*mz^2*Pi^d*((8 - 6*d + d^2)*s^2 + (12 - 11*d + 2*d^2)*s*
              t - 4*t^2) + 2^(1 + d)*mh^2*Pi^d*((-4 + d)*s*t + 
             mz^2*((-4 + d)*s + (-2 + d)*t))))/4)))/
    (2^(2*(2 + d))*Pi^(2*d)*(mz^2 - s)*(s - d*s)*(mz^3 - mz*s)^2*sw^6*
     (-1 + sw^2)^3)}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, ((-I/9)*2^(-5 - d)*EL^6*
     (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
      2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
      4*(3 - 20*sw^2 + 32*sw^4)*t^2)*(s - mz^2*(-1 + sw^2) + 
      mz^2*(-1 + sw^2)*GaugeXi[Q]))/((-1 + d)*Pi^d*(mz^2 - s)^2*s^2*sw^4*
     (-1 + sw^2)^2), 0, 0, 0, 0, 
   ((I/9)*4^(-2 - d)*EL^6*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
       (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
        s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
        2*(3 - 20*sw^2 + 32*sw^4)*t^2)))/((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s*
     sw^4*(-1 + sw^2)^2), ((-I/9)*2^(-5 - 2*d)*EL^6*
     (3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
       (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
        s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
        2*(3 - 20*sw^2 + 32*sw^4)*t^2))*(s + 4*mz^2*(-1 + sw^2)*GaugeXi[Q]))/
    ((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s*sw^4*(-1 + sw^2)^2), 
   ((-I/9)*2^(-5 - d)*EL^6*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
        4*d*(-3 - 5*sw^2 + 8*sw^4)) + 2*s*(-15*d + 3*d^2 + 
        8*(3 - 5*sw^2 + 8*sw^4))*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2)*
     (s + mz^2*(-1 + sw^2) - mz^2*(-1 + sw^2)*GaugeXi[Q]))/
    ((-1 + d)*Pi^d*(mz^2 - s)^2*s^2*sw^4*(-1 + sw^2)^2), 
   ((-I/9)*2^(-5 - 2*d)*EL^6*
     (-((-1 + d)*s*(3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
          (s*(-3 - 10*sw^2 + 16*sw^4) + (-3 + 20*sw^2 - 32*sw^4)*t))*
        (s + mz^2*(-1 + sw^2) + mz^2*(-1 + sw^2)*GaugeXi[Q])^2) - 
      (-1 + d)*s*(s + mz^2*(-1 + sw^2) + mz^2*(-1 + sw^2)*GaugeXi[Q])*
       (s*(-3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-3 + 3*d - 10*sw^2 + 
              16*sw^4) + (-3 + 20*sw^2 - 32*sw^4)*t)) + 
        mz^2*(-(d*(2*Pi)^d*s*(-3 + 7*sw^2)) + 2^(1 + d)*Pi^d*
           (s*(3 - 3*d + 7*sw^2 + 5*d*sw^2 - 26*sw^4 + 16*sw^6) + 
            (3 - 23*sw^2 + 52*sw^4 - 32*sw^6)*t)) - 
        mz^2*(-(d*(2*Pi)^d*s*(-3 + 7*sw^2)) + 2^(1 + d)*Pi^d*
           (s*(-3 + (-7 + 2*d)*sw^2 + 26*sw^4 - 16*sw^6) + 
            (-3 + 23*sw^2 - 52*sw^4 + 32*sw^6)*t))*GaugeXi[Q]) + 
      2^(1 + d)*Pi^d*s^2*(-1 + 4*sw^2)*(-3 + 8*sw^2)*
       (d*(s + mz^2*(-1 + sw^2))^2 + 2*mz^2*(-1 + sw^2)*
         (d*s + (-2 + d)*mz^2*(-1 + sw^2))*GaugeXi[Q] + 
        d*mz^4*(-1 + sw^2)^2*GaugeXi[Q]^2) + 2^(1 + d)*(1 - d)*Pi^d*s*
       (s^2*(-6 + 3*d - 20*sw^2 + 32*sw^4)*t + mz^4*(-1 + sw^2)^2*
         (-6 + 3*d - 20*sw^2 + 32*sw^4)*t - 2*mz^2*(-1 + sw^2)*
         (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
          3*s*(18 - 11*d + 2*d^2 - 20*sw^2 + 32*sw^4)*t + 
          4*(3 - 20*sw^2 + 32*sw^4)*t^2) - 2*mz^2*(-1 + sw^2)*
         (s*(6 - 3*d + 20*sw^2 - 32*sw^4)*t + mz^2*(-1 + sw^2)*
           (s*(-6 + 3*d - 20*sw^2 + 32*sw^4) + 3*d*t - 
            4*(3 - 5*sw^2 + 8*sw^4)*t))*GaugeXi[Q] + mz^4*(-1 + sw^2)^2*
         (-6 + 3*d - 20*sw^2 + 32*sw^4)*t*GaugeXi[Q]^2) + 
      (2*Pi)^d*(3*d*s - 4*s*(3 - 5*sw^2 + 8*sw^4) - 2*(3 - 20*sw^2 + 32*sw^4)*
         t)*((s + mz^2*(-1 + sw^2))^2*(d*s + 2*t) + 2*mz^2*(-1 + sw^2)*
         (mz^2*(-1 + sw^2)*((-2 + d)*s - 2*t) + s*(d*s + 2*t))*GaugeXi[Q] + 
        mz^4*(-1 + sw^2)^2*(d*s + 2*t)*GaugeXi[Q]^2)))/
    ((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s^2*sw^4*(-1 + sw^2)^2), 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((I/9)*4^(-2 - d)*EL^6*
     (-(sw^4*(3 - 4*sw^2)^2*(d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
           ((4 - 3*d)*s^2 + (4 - 5*d + d^2)*s*t - 2*t^2) + 
          mz^2*(1 - sw^2)*(-(d^2*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*
             ((4 - 3*d + d^2)*s^2 + (4 - 5*d + d^2)*s*t - 2*t^2))))/4 + 
      4*sw^8*(d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*(-2*(-1 + d)*s^2 + 
          (8 - 5*d + d^2)*s*t + 2*t^2) + mz^2*(1 - sw^2)*
         (-(d^2*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*((2 - 2*d + d^2)*s^2 + 
            (8 - 5*d + d^2)*s*t + 2*t^2))) - (-1/2 + sw^2)^2*
       (4*sw^4*(d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*((4 - 3*d)*s^2 + 
            (4 - 5*d + d^2)*s*t - 2*t^2) + mz^2*(1 - sw^2)*
           (-(d^2*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*((4 - 3*d + d^2)*s^2 + 
              (4 - 5*d + d^2)*s*t - 2*t^2))) - 
        ((3 - 4*sw^2)^2*(d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
            (-2*(-1 + d)*s^2 + (8 - 5*d + d^2)*s*t + 2*t^2) + 
           mz^2*(1 - sw^2)*(-(d^2*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*
              ((2 - 2*d + d^2)*s^2 + (8 - 5*d + d^2)*s*t + 2*t^2))))/4) + 
      (mz^2*(-1 + sw^2)*(9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
          (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
             3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
               64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
             d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*
                sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
             256*sw^8)*t^2))*GaugeXi[Q])/16))/((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*
     s*(-mz^2 + s)*sw^6*(-1 + sw^2)^3), 0, 0, 0, 0, 
   ((I/9)*2^(-7 - 2*d)*EL^6*(9*d^2*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
          3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
            64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
          d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 
            64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*
         t^2)))/((-1 + d)*Pi^(2*d)*(mz^2 - s)^3*sw^6*(-1 + sw^2)^3), 
   ((-I/9)*4^(-4 - d)*EL^6*(9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
       (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
          3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
            64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
          d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 
            64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*
         t^2))*(s + 4*mz^2*(-1 + sw^2)*GaugeXi[Q]))/
    ((-1 + d)*Pi^(2*d)*(mz^2 - s)^3*sw^6*(-1 + sw^2)^3), 
   ((-I/9)*4^(-4 - d)*EL^6*(-((s + mz^2*(-1 + sw^2))*(9*d^2*(2*Pi)^d*s^2 + 
         2^(1 + d)*Pi^d*(2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
             3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
               64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
             d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*
                sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
             256*sw^8)*t^2))) + mz^2*(-1 + sw^2)*(27*d^2*(2*Pi)^d*s^2 + 
        2^(1 + d)*Pi^d*(s^2*(18 - 120*sw^2 + 88*sw^4 + 320*sw^6 - 256*sw^8 + 
            d^2*(-9 - 30*sw^2 + 48*sw^4) + 2*d*(-9 + 60*sw^2 - 70*sw^4 - 
              80*sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
            d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
              80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
            256*sw^8)*t^2))*GaugeXi[Q]))/((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s*
     (-mz^2 + s)*sw^6*(-1 + sw^2)^3), 
   ((-I/9)*EL^6*((-1 + d)*(2*Pi)^d*s*(d*s*(9 - 60*sw^2 + 96*sw^4) + 
        2*s*(-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 128*sw^8) - 
        2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t)*
       (s + mz^2*(-1 + sw^2) + mz^2*(-1 + sw^2)*GaugeXi[Q])^2 + 
      (-1 + d)*s*(9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
         (s*(-9 - 30*(-2 + d)*sw^2 + (-44 + 48*d)*sw^4 - 160*sw^6 + 
            128*sw^8) + (-9 + 60*sw^2 - 200*sw^4 + 320*sw^6 - 256*sw^8)*t))*
       (s + mz^2*(-1 + sw^2) + mz^2*(-1 + sw^2)*GaugeXi[Q])^2 - 
      2^(1 + d)*Pi^d*s^2*(1 - 4*sw^2 + 8*sw^4)*(9 - 24*sw^2 + 32*sw^4)*
       (d*(s + mz^2*(-1 + sw^2))^2 + 2*mz^2*(-1 + sw^2)*
         (d*s + (-2 + d)*mz^2*(-1 + sw^2))*GaugeXi[Q] + 
        d*mz^4*(-1 + sw^2)^2*GaugeXi[Q]^2) + 2^(1 + d)*(1 - d)*Pi^d*s*
       (-(s^2*(d*(9 - 60*sw^2 + 96*sw^4) + 2*(-9 + 60*sw^2 - 44*sw^4 - 
             160*sw^6 + 128*sw^8))*t) - mz^4*(-1 + sw^2)^2*
         (d*(9 - 60*sw^2 + 96*sw^4) + 2*(-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 
            128*sw^8))*t + 2*mz^2*(-1 + sw^2)*
         (s^2*(d^2*(9 - 60*sw^2 + 96*sw^4) + 4*(9 - 60*sw^2 + 44*sw^4 + 
              160*sw^6 - 128*sw^8) + 4*d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
              64*sw^8)) + 3*s*(54 - 360*sw^2 + 680*sw^4 - 320*sw^6 + 
            256*sw^8 - 11*d*(3 - 20*sw^2 + 32*sw^4) + 
            d^2*(6 - 40*sw^2 + 64*sw^4))*t + 4*(9 - 60*sw^2 + 200*sw^4 - 
            320*sw^6 + 256*sw^8)*t^2) + 2*mz^2*(-1 + sw^2)*
         (s*(18 - 120*sw^2 + 88*sw^4 + 320*sw^6 - 256*sw^8 + 
            d*(-9 + 60*sw^2 - 96*sw^4))*t + mz^2*(-1 + sw^2)*
           (d*s*(9 - 60*sw^2 + 96*sw^4) + 2*s*(-9 + 60*sw^2 - 44*sw^4 - 
              160*sw^6 + 128*sw^8) + d*(9 - 60*sw^2 + 96*sw^4)*t - 
            4*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8)*t))*GaugeXi[Q] - 
        mz^4*(-1 + sw^2)^2*(d*(9 - 60*sw^2 + 96*sw^4) + 
          2*(-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 128*sw^8))*t*GaugeXi[Q]^2) - 
      (9*d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(2*s*(9 + 15*(-4 + d)*sw^2 + 
            (122 - 24*d)*sw^4 - 80*sw^6 + 64*sw^8) + 
          (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t))*
       ((s + mz^2*(-1 + sw^2))^2*(d*s + 2*t) + 2*mz^2*(-1 + sw^2)*
         (mz^2*(-1 + sw^2)*((-2 + d)*s - 2*t) + s*(d*s + 2*t))*GaugeXi[Q] + 
        mz^4*(-1 + sw^2)^2*(d*s + 2*t)*GaugeXi[Q]^2)))/
    (2^(2*(4 + d))*Pi^(2*d)*(mz^2 - s)^3*(s - d*s)*sw^6*(-1 + sw^2)^3), 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/9)*2^(-5 - d)*EL^6*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
        4*d*(-3 - 5*sw^2 + 8*sw^4)) + 2*s*(-15*d + 3*d^2 + 
        8*(3 - 5*sw^2 + 8*sw^4))*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2)*
     (s - mz^2*(-1 + sw^2) + mz^2*(-1 + sw^2)*GaugeXi[Q]))/
    ((-1 + d)*Pi^d*(mz^2 - s)^2*s^2*sw^4*(-1 + sw^2)^2), 0, 0, 0, 0, 
   ((I/9)*4^(-2 - d)*EL^6*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
       (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
        s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
        2*(3 - 20*sw^2 + 32*sw^4)*t^2)))/((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s*
     sw^4*(-1 + sw^2)^2), ((-I/9)*2^(-5 - 2*d)*EL^6*
     (3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
       (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
        s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
        2*(3 - 20*sw^2 + 32*sw^4)*t^2))*(s + 4*mz^2*(-1 + sw^2)*GaugeXi[Q]))/
    ((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s*sw^4*(-1 + sw^2)^2), 
   ((-I/9)*2^(-5 - d)*EL^6*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
        4*d*(-3 - 5*sw^2 + 8*sw^4)) + 2*s*(-15*d + 3*d^2 + 
        8*(3 - 5*sw^2 + 8*sw^4))*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2)*
     (s + mz^2*(-1 + sw^2) - mz^2*(-1 + sw^2)*GaugeXi[Q]))/
    ((-1 + d)*Pi^d*(mz^2 - s)^2*s^2*sw^4*(-1 + sw^2)^2), 
   ((-I/9)*2^(-5 - 2*d)*EL^6*
     (-((-1 + d)*s*(3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
          (s*(-3 - 10*sw^2 + 16*sw^4) + (-3 + 20*sw^2 - 32*sw^4)*t))*
        (s + mz^2*(-1 + sw^2) + mz^2*(-1 + sw^2)*GaugeXi[Q])^2) - 
      (-1 + d)*s*(s + mz^2*(-1 + sw^2) + mz^2*(-1 + sw^2)*GaugeXi[Q])*
       (s*(-3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-3 + 3*d - 10*sw^2 + 
              16*sw^4) + (-3 + 20*sw^2 - 32*sw^4)*t)) + 
        mz^2*(-(d*(2*Pi)^d*s*(-3 + 7*sw^2)) + 2^(1 + d)*Pi^d*
           (s*(3 - 3*d + 7*sw^2 + 5*d*sw^2 - 26*sw^4 + 16*sw^6) + 
            (3 - 23*sw^2 + 52*sw^4 - 32*sw^6)*t)) - 
        mz^2*(-(d*(2*Pi)^d*s*(-3 + 7*sw^2)) + 2^(1 + d)*Pi^d*
           (s*(-3 + (-7 + 2*d)*sw^2 + 26*sw^4 - 16*sw^6) + 
            (-3 + 23*sw^2 - 52*sw^4 + 32*sw^6)*t))*GaugeXi[Q]) + 
      2^(1 + d)*Pi^d*s^2*(-1 + 4*sw^2)*(-3 + 8*sw^2)*
       (d*(s + mz^2*(-1 + sw^2))^2 + 2*mz^2*(-1 + sw^2)*
         (d*s + (-2 + d)*mz^2*(-1 + sw^2))*GaugeXi[Q] + 
        d*mz^4*(-1 + sw^2)^2*GaugeXi[Q]^2) + 2^(1 + d)*(1 - d)*Pi^d*s*
       (s^2*(-6 + 3*d - 20*sw^2 + 32*sw^4)*t + mz^4*(-1 + sw^2)^2*
         (-6 + 3*d - 20*sw^2 + 32*sw^4)*t - 2*mz^2*(-1 + sw^2)*
         (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
          3*s*(18 - 11*d + 2*d^2 - 20*sw^2 + 32*sw^4)*t + 
          4*(3 - 20*sw^2 + 32*sw^4)*t^2) - 2*mz^2*(-1 + sw^2)*
         (s*(6 - 3*d + 20*sw^2 - 32*sw^4)*t + mz^2*(-1 + sw^2)*
           (s*(-6 + 3*d - 20*sw^2 + 32*sw^4) + 3*d*t - 
            4*(3 - 5*sw^2 + 8*sw^4)*t))*GaugeXi[Q] + mz^4*(-1 + sw^2)^2*
         (-6 + 3*d - 20*sw^2 + 32*sw^4)*t*GaugeXi[Q]^2) + 
      (2*Pi)^d*(3*d*s - 4*s*(3 - 5*sw^2 + 8*sw^4) - 2*(3 - 20*sw^2 + 32*sw^4)*
         t)*((s + mz^2*(-1 + sw^2))^2*(d*s + 2*t) + 2*mz^2*(-1 + sw^2)*
         (mz^2*(-1 + sw^2)*((-2 + d)*s - 2*t) + s*(d*s + 2*t))*GaugeXi[Q] + 
        mz^4*(-1 + sw^2)^2*(d*s + 2*t)*GaugeXi[Q]^2)))/
    ((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s^2*sw^4*(-1 + sw^2)^2), 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((I/9)*4^(-2 - d)*EL^6*
     (-(sw^4*(3 - 4*sw^2)^2*(d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
           ((4 - 3*d)*s^2 + (4 - 5*d + d^2)*s*t - 2*t^2) + 
          mz^2*(1 - sw^2)*(-(d^2*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*
             ((4 - 3*d + d^2)*s^2 + (4 - 5*d + d^2)*s*t - 2*t^2))))/4 + 
      4*sw^8*(d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*(-2*(-1 + d)*s^2 + 
          (8 - 5*d + d^2)*s*t + 2*t^2) + mz^2*(1 - sw^2)*
         (-(d^2*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*((2 - 2*d + d^2)*s^2 + 
            (8 - 5*d + d^2)*s*t + 2*t^2))) - (-1/2 + sw^2)^2*
       (4*sw^4*(d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*((4 - 3*d)*s^2 + 
            (4 - 5*d + d^2)*s*t - 2*t^2) + mz^2*(1 - sw^2)*
           (-(d^2*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*((4 - 3*d + d^2)*s^2 + 
              (4 - 5*d + d^2)*s*t - 2*t^2))) - 
        ((3 - 4*sw^2)^2*(d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
            (-2*(-1 + d)*s^2 + (8 - 5*d + d^2)*s*t + 2*t^2) + 
           mz^2*(1 - sw^2)*(-(d^2*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*
              ((2 - 2*d + d^2)*s^2 + (8 - 5*d + d^2)*s*t + 2*t^2))))/4) + 
      (mz^2*(-1 + sw^2)*(9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
          (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
             3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
               64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
             d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*
                sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
             256*sw^8)*t^2))*GaugeXi[Q])/16))/((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*
     s*(-mz^2 + s)*sw^6*(-1 + sw^2)^3), 0, 0, 0, 0, 
   ((I/9)*2^(-7 - 2*d)*EL^6*(9*d^2*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
          3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
            64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
          d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 
            64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*
         t^2)))/((-1 + d)*Pi^(2*d)*(mz^2 - s)^3*sw^6*(-1 + sw^2)^3), 
   ((-I/9)*4^(-4 - d)*EL^6*(9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
       (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
          3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
            64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
          d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 
            64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*
         t^2))*(s + 4*mz^2*(-1 + sw^2)*GaugeXi[Q]))/
    ((-1 + d)*Pi^(2*d)*(mz^2 - s)^3*sw^6*(-1 + sw^2)^3), 
   ((-I/9)*4^(-4 - d)*EL^6*(-((s + mz^2*(-1 + sw^2))*(9*d^2*(2*Pi)^d*s^2 + 
         2^(1 + d)*Pi^d*(2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
             3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
               64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
             d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*
                sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
             256*sw^8)*t^2))) + mz^2*(-1 + sw^2)*(27*d^2*(2*Pi)^d*s^2 + 
        2^(1 + d)*Pi^d*(s^2*(18 - 120*sw^2 + 88*sw^4 + 320*sw^6 - 256*sw^8 + 
            d^2*(-9 - 30*sw^2 + 48*sw^4) + 2*d*(-9 + 60*sw^2 - 70*sw^4 - 
              80*sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
            d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
              80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
            256*sw^8)*t^2))*GaugeXi[Q]))/((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s*
     (-mz^2 + s)*sw^6*(-1 + sw^2)^3), 
   ((-I/9)*EL^6*((-1 + d)*(2*Pi)^d*s*(d*s*(9 - 60*sw^2 + 96*sw^4) + 
        2*s*(-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 128*sw^8) - 
        2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t)*
       (s + mz^2*(-1 + sw^2) + mz^2*(-1 + sw^2)*GaugeXi[Q])^2 + 
      (-1 + d)*s*(9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
         (s*(-9 - 30*(-2 + d)*sw^2 + (-44 + 48*d)*sw^4 - 160*sw^6 + 
            128*sw^8) + (-9 + 60*sw^2 - 200*sw^4 + 320*sw^6 - 256*sw^8)*t))*
       (s + mz^2*(-1 + sw^2) + mz^2*(-1 + sw^2)*GaugeXi[Q])^2 - 
      2^(1 + d)*Pi^d*s^2*(1 - 4*sw^2 + 8*sw^4)*(9 - 24*sw^2 + 32*sw^4)*
       (d*(s + mz^2*(-1 + sw^2))^2 + 2*mz^2*(-1 + sw^2)*
         (d*s + (-2 + d)*mz^2*(-1 + sw^2))*GaugeXi[Q] + 
        d*mz^4*(-1 + sw^2)^2*GaugeXi[Q]^2) + 2^(1 + d)*(1 - d)*Pi^d*s*
       (-(s^2*(d*(9 - 60*sw^2 + 96*sw^4) + 2*(-9 + 60*sw^2 - 44*sw^4 - 
             160*sw^6 + 128*sw^8))*t) - mz^4*(-1 + sw^2)^2*
         (d*(9 - 60*sw^2 + 96*sw^4) + 2*(-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 
            128*sw^8))*t + 2*mz^2*(-1 + sw^2)*
         (s^2*(d^2*(9 - 60*sw^2 + 96*sw^4) + 4*(9 - 60*sw^2 + 44*sw^4 + 
              160*sw^6 - 128*sw^8) + 4*d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
              64*sw^8)) + 3*s*(54 - 360*sw^2 + 680*sw^4 - 320*sw^6 + 
            256*sw^8 - 11*d*(3 - 20*sw^2 + 32*sw^4) + 
            d^2*(6 - 40*sw^2 + 64*sw^4))*t + 4*(9 - 60*sw^2 + 200*sw^4 - 
            320*sw^6 + 256*sw^8)*t^2) + 2*mz^2*(-1 + sw^2)*
         (s*(18 - 120*sw^2 + 88*sw^4 + 320*sw^6 - 256*sw^8 + 
            d*(-9 + 60*sw^2 - 96*sw^4))*t + mz^2*(-1 + sw^2)*
           (d*s*(9 - 60*sw^2 + 96*sw^4) + 2*s*(-9 + 60*sw^2 - 44*sw^4 - 
              160*sw^6 + 128*sw^8) + d*(9 - 60*sw^2 + 96*sw^4)*t - 
            4*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8)*t))*GaugeXi[Q] - 
        mz^4*(-1 + sw^2)^2*(d*(9 - 60*sw^2 + 96*sw^4) + 
          2*(-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 128*sw^8))*t*GaugeXi[Q]^2) - 
      (9*d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(2*s*(9 + 15*(-4 + d)*sw^2 + 
            (122 - 24*d)*sw^4 - 80*sw^6 + 64*sw^8) + 
          (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t))*
       ((s + mz^2*(-1 + sw^2))^2*(d*s + 2*t) + 2*mz^2*(-1 + sw^2)*
         (mz^2*(-1 + sw^2)*((-2 + d)*s - 2*t) + s*(d*s + 2*t))*GaugeXi[Q] + 
        mz^4*(-1 + sw^2)^2*(d*s + 2*t)*GaugeXi[Q]^2)))/
    (2^(2*(4 + d))*Pi^(2*d)*(mz^2 - s)^3*(s - d*s)*sw^6*(-1 + sw^2)^3), 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((I/9)*2^(1 - d)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
     (-4*(-1 + d)^2*mz^2*(-1 + sw^2) + 
      (d*(-9 + 4*d)*s - 4*(-1 + d)*mz^2*(-1 + sw^2))*GaugeXi[Q] + 
      d*s*GaugeXi[Q]^2))/((-1 + d)*d*mz^2*Pi^d*s^3*(-1 + sw^2)*GaugeXi[Q]), 
   ((I/9)*EL^6*(s + 4*mz^2*(-1 + sw^2))*(s^2 - 4*(-3 + 2*d)*mz^2*s*
       (-1 + sw^2) + 4*(-1 + d)*mz^4*(-1 + sw^2)^2)*
     ((-2 + d)*s^2 + 4*s*t + 4*t^2))/((-1 + d)*mz^4*(2*Pi)^d*s^3*
     (-1 + sw^2)^2), 0, 0, 0, ((-I/9)*2^(1 - d)*EL^6*
     ((-2 + d)*s^2 + 4*s*t + 4*t^2)*(-4*(-1 + d)*mz^2*s*(-1 + sw^2) + 
      (-s + 2*mz^2*(-1 + sw^2))*(-(d*s) + 2*(-4 + 5*d)*mz^2*(-1 + sw^2))*
       GaugeXi[Q]))/((-1 + d)*d*mz^4*Pi^d*s^3*(-1 + sw^2)^2*GaugeXi[Q]), 
   ((I/9)*EL^6*(s - 2*mz^2*(-1 + sw^2))^2*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
     (s + 4*mz^2*(-1 + sw^2)*GaugeXi[Q]))/((-1 + d)*mz^4*(2*Pi)^d*s^3*
     (-1 + sw^2)^2), ((I/9)*2^(1 - d)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
     (-4*(-1 + d)*mz^2*s*(-1 + sw^2) + 
      (d*s^2 - (-8 + 3*d + 4*d^2)*mz^2*s*(-1 + sw^2) + 
        4*(-3 + 2*d + d^2)*mz^4*(-1 + sw^2)^2)*GaugeXi[Q] + 
      mz^2*(1 - sw^2)*(d*s + 4*(-1 + d)^2*mz^2*(-1 + sw^2))*GaugeXi[Q]^2))/
    ((-1 + d)*d*mz^4*Pi^d*s^3*(-1 + sw^2)^2*GaugeXi[Q]), 
   ((-I/9)*2^(1 - d)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
     (s^2 - 2*(-3 + 2*d)*mz^2*s*(-1 + sw^2) + mz^4*(-1 + sw^2)^2 - 
      2*mz^2*(-1 + sw^2)*(-s + mz^2*(-1 + sw^2))*GaugeXi[Q] + 
      mz^4*(-1 + sw^2)^2*GaugeXi[Q]^2))/((-1 + d)*mz^4*Pi^d*s^2*
     (-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((I/9)*2^(-4 - d)*EL^6*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
        4*d*(-3 - 5*sw^2 + 8*sw^4)) + 2*s*(-15*d + 3*d^2 + 
        8*(3 - 5*sw^2 + 8*sw^4))*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2)*
     (-4*(-1 + d)^2*mz^2*(-1 + sw^2) + 
      (d*(-9 + 4*d)*s - 4*(-1 + d)*mz^2*(-1 + sw^2))*GaugeXi[Q] + 
      d*s*GaugeXi[Q]^2))/((-1 + d)*d*mz^2*Pi^d*(mz^2 - s)*s^2*sw^2*
     (-1 + sw^2)^2*GaugeXi[Q]), ((-I/9)*2^(-5 - 4*d)*EL^6*
     ((2*Pi)^(3*d)*s*(-1 + 4*sw^2)*(-3 + 8*sw^2)*
       (s^2 + 4*mz^2*s*(-1 + sw^2) + 4*(-1 + d)*mz^4*(-1 + sw^2)^2)*
       (d*s^2 + 4*d*mz^2*s*(-1 + sw^2) + 4*(-1 + d)*mz^4*(-1 + sw^2)^2)*
       (-1 + GaugeXi[Q])^2 + (2*Pi)^(2*d)*s*(-1 + 4*sw^2)*(-3 + 8*sw^2)*
       (d*s^2 + 4*d*mz^2*s*(-1 + sw^2) + 4*(-1 + d)*mz^4*(-1 + sw^2)^2)*
       ((2*Pi)^d*s^2 + 2^(2 + d)*mz^2*Pi^d*s*(-1 + sw^2) + 
        2^(2 + d)*(-1 + d)*mz^4*Pi^d*(-1 + sw^2)^2)*(-1 + GaugeXi[Q])^2 - 
      (-1 + d)*(2*Pi)^(3*d)*(s + 2*mz^2*(-1 + sw^2))^2*
       (s^2 + 4*mz^2*s*(-1 + sw^2) + 4*(-1 + d)*mz^4*(-1 + sw^2)^2)*
       (s*(-6 + 3*d - 20*sw^2 + 32*sw^4) - 2*(3 - 20*sw^2 + 32*sw^4)*t)*
       (-1 + GaugeXi[Q])^2 + (2*Pi)^(3*d)*(s^2 + 4*mz^2*s*(-1 + sw^2) + 
        4*(-1 + d)*mz^4*(-1 + sw^2)^2)*(3*d*s - 4*s*(3 - 5*sw^2 + 8*sw^4) - 
        2*(3 - 20*sw^2 + 32*sw^4)*t)*(4*(-1 + d)*mz^4*(-1 + sw^2)^2 + 
        s*(d*s + 2*t) + 4*mz^2*(-1 + sw^2)*(d*s + 2*t))*(-1 + GaugeXi[Q])^2 - 
      8*(1 - d)*(sw^2*(2^(-1 + 3*d)*(-4 + d)*Pi^(3*d)*s^4*(-3 + 4*sw^2)*t - 
          2^(2 + 3*d)*(-1 + d)*mz^8*Pi^(3*d)*(-1 + sw^2)^4*(-3 + 4*sw^2)*
           ((-4 + d)*s + 2*t) - 2^(2 + 3*d)*mz^6*Pi^(3*d)*s*(-1 + sw^2)^3*
           (-3 + 4*sw^2)*((-4 + d)*s - 2*(3 - 5*d + d^2)*t) - 
          mz^4*(2*Pi)^(3*d)*s*(-1 + sw^2)^2*(-3 + 4*sw^2)*
           ((60 - 47*d + 8*d^2)*s^2 + 2*(45 - 39*d + 7*d^2)*s*t - 32*t^2) - 
          2^(1 + 3*d)*mz^2*Pi^(3*d)*s^2*(3 - 4*sw^2)*(1 - sw^2)*
           ((8 - 6*d + d^2)*s^2 + 2*(8 - 6*d + d^2)*s*t - 4*t^2) + 
          2*sw^2*(8^(1 + d)*(-1 + d)*mz^8*Pi^(3*d)*(-1 + sw^2)^4*
             ((-2 + d)*s - 2*t) - (-2 + d)*(2*Pi)^(3*d)*s^4*t + 
            8^(1 + d)*mz^6*Pi^(3*d)*s*(-1 + sw^2)^3*((-2 + d)*s - 
              2*(3 - 3*d + d^2)*t) - 2^(2 + 3*d)*mz^2*Pi^(3*d)*s^2*(1 - sw^2)*
             ((-2 + d)^2*s^2 + 2*(10 - 6*d + d^2)*s*t + 4*t^2) + 
            2^(1 + 3*d)*mz^4*Pi^(3*d)*s*(-1 + sw^2)^2*
             ((30 - 31*d + 8*d^2)*s^2 + 2*(69 - 41*d + 7*d^2)*s*t + 
              32*t^2))) + (1/2 - sw^2)*(-(2^(1 + 3*d)*(-4 + d)*Pi^(3*d)*s^4*
            sw^2*t) + 2^(4 + 3*d)*(-1 + d)*mz^8*Pi^(3*d)*sw^2*(-1 + sw^2)^4*
           ((-4 + d)*s + 2*t) + 2^(4 + 3*d)*mz^6*Pi^(3*d)*s*sw^2*
           (-1 + sw^2)^3*((-4 + d)*s - 2*(3 - 5*d + d^2)*t) + 
          2^(2 + 3*d)*mz^4*Pi^(3*d)*s*(sw - sw^3)^2*
           ((60 - 47*d + 8*d^2)*s^2 + 2*(45 - 39*d + 7*d^2)*s*t - 32*t^2) - 
          8^(1 + d)*mz^2*Pi^(3*d)*s^2*sw^2*(1 - sw^2)*((8 - 6*d + d^2)*s^2 + 
            2*(8 - 6*d + d^2)*s*t - 4*t^2) + 
          ((3 - 4*sw^2)*(8^(1 + d)*(-1 + d)*mz^8*Pi^(3*d)*(-1 + sw^2)^4*
              ((-2 + d)*s - 2*t) - (-2 + d)*(2*Pi)^(3*d)*s^4*t + 
             8^(1 + d)*mz^6*Pi^(3*d)*s*(-1 + sw^2)^3*((-2 + d)*s - 2*
                (3 - 3*d + d^2)*t) - 2^(2 + 3*d)*mz^2*Pi^(3*d)*s^2*(1 - sw^2)*
              ((-2 + d)^2*s^2 + 2*(10 - 6*d + d^2)*s*t + 4*t^2) + 
             2^(1 + 3*d)*mz^4*Pi^(3*d)*s*(-1 + sw^2)^2*((30 - 31*d + 8*d^2)*
                s^2 + 2*(69 - 41*d + 7*d^2)*s*t + 32*t^2)))/2))*
       (-1 + GaugeXi[Q])^2 - (-1 + d)*(s + 2*mz^2*(-1 + sw^2))^2*
       (s^2 + 4*mz^2*s*(-1 + sw^2) + 4*(-1 + d)*mz^4*(-1 + sw^2)^2)*
       (s*(-6 + 3*d - 20*sw^2 + 32*sw^4) - 2*(3 - 20*sw^2 + 32*sw^4)*t)*
       ((2*Pi)^(3*d) - 2^(1 + 3*d)*Pi^(3*d)*GaugeXi[Q] + 
        (2*Pi)^(3*d)*GaugeXi[Q]^2)))/((-1 + d)*mz^4*Pi^(4*d)*(mz^2 - s)*
     (-1 + sw^2)*(s - s*sw^2)^2*(sw - sw*GaugeXi[Q])^2), 0, 0, 0, 
   ((-I/9)*2^(-4 - 5*d)*EL^6*
     (-4*mz^2*s*(d^2*(2*Pi)^(4*d)*s^2*(3*d*(-1 + sw^2) + 5*(3 + sw^2)) + 
        2^(1 + 4*d)*Pi^(4*d)*(2*s^2*(3 + 7*sw^2 - 26*sw^4 + 16*sw^6 + 
            d^2*sw^4*(-13 + 8*sw^2) - 3*d*(2 + 3*sw^2 - 13*sw^4 + 8*sw^6)) + 
          s*(-1 + sw^2)*(-18*d^2 + 3*d^3 - 8*(3 - 5*sw^2 + 8*sw^4) + 
            d*(39 - 40*sw^2 + 64*sw^4))*t + 2*(-1 + d)*(-3 + 23*sw^2 - 
            52*sw^4 + 32*sw^6)*t^2)) + 
      (d*(2*Pi)^(4*d)*s^2*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
            4*d*(-3 - 5*sw^2 + 8*sw^4)) + 2*s*(-15*d + 3*d^2 + 
            8*(3 - 5*sw^2 + 8*sw^4))*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2) - 
        4^(1 + 2*d)*d*mz^2*Pi^(4*d)*s*(-1 + sw^2)*
         (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
          2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          4*(3 - 20*sw^2 + 32*sw^4)*t^2) + 
        4*mz^4*(15*d^3*(2*Pi)^(4*d)*s^2*(1 + sw^4) + 2^(1 + 4*d)*Pi^(4*d)*
           (s^2*(-15*d^3*sw^2 + 8*(-1 + sw^2)^2*(-3 - 10*sw^2 + 16*sw^4) + 
              2*d^2*(-1 + sw^2)^2*(-18 - 25*sw^2 + 40*sw^4) - 
              2*d*(-1 + sw^2)^2*(-27 - 70*sw^2 + 112*sw^4)) + 
            s*(-1 + sw^2)^2*(-87*d^2 + 15*d^3 - 32*(3 - 5*sw^2 + 8*sw^4) + 
              20*d*(9 - 10*sw^2 + 16*sw^4))*t + 2*(-4 + 5*d)*(-1 + sw^2)^2*
             (3 - 20*sw^2 + 32*sw^4)*t^2)))*GaugeXi[Q] - 
      2*(d*(2*Pi)^(4*d)*s^2*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
            4*d*(-3 - 5*sw^2 + 8*sw^4)) + 2*s*(-15*d + 3*d^2 + 
            8*(3 - 5*sw^2 + 8*sw^4))*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2) + 
        4*mz^4*(15*d^3*(2*Pi)^(4*d)*s^2*(1 + sw^4) + 2^(1 + 4*d)*Pi^(4*d)*
           (s^2*(-15*d^3*sw^2 + 8*(-1 + sw^2)^2*(-3 - 10*sw^2 + 16*sw^4) + 
              2*d^2*(-1 + sw^2)^2*(-18 - 25*sw^2 + 40*sw^4) - 
              2*d*(-1 + sw^2)^2*(-27 - 70*sw^2 + 112*sw^4)) + 
            s*(-1 + sw^2)^2*(-87*d^2 + 15*d^3 - 32*(3 - 5*sw^2 + 8*sw^4) + 
              20*d*(9 - 10*sw^2 + 16*sw^4))*t + 2*(-4 + 5*d)*(-1 + sw^2)^2*
             (3 - 20*sw^2 + 32*sw^4)*t^2)) - 
        2*mz^2*s*(d^2*(2*Pi)^(4*d)*s^2*(69 + 31*sw^2 + 15*d*(-1 + sw^2)) + 
          2^(1 + 4*d)*Pi^(4*d)*(2*s^2*(9 + 21*sw^2 - 78*sw^4 + 48*sw^6 + 
              5*d^2*sw^4*(-13 + 8*sw^2) - d*(24 + 41*sw^2 - 169*sw^4 + 
                104*sw^6)) + s*(-1 + sw^2)*(-84*d^2 + 15*d^3 - 
              24*(3 - 5*sw^2 + 8*sw^4) + 5*d*(33 - 40*sw^2 + 64*sw^4))*t + 
            2*(-3 + 5*d)*(-3 + 23*sw^2 - 52*sw^4 + 32*sw^6)*t^2)))*
       GaugeXi[Q]^2 + (d*(2*Pi)^(4*d)*s^2*
         (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
          2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          4*(3 - 20*sw^2 + 32*sw^4)*t^2) - 4*mz^2*s*(-1 + sw^2)*
         (9*d^3*(2*Pi)^(4*d)*s^2 + 2^(1 + 4*d)*Pi^(4*d)*
           (s^2*(-12 - 40*sw^2 + 64*sw^4 + d*(30 + 80*sw^2 - 128*sw^4) + 
              3*d^2*(-7 - 10*sw^2 + 16*sw^4)) + s*(-51*d^2 + 9*d^3 - 
              16*(3 - 5*sw^2 + 8*sw^4) + 6*d*(17 - 20*sw^2 + 32*sw^4))*t + 
            2*(-2 + 3*d)*(3 - 20*sw^2 + 32*sw^4)*t^2)) + 
        4*mz^4*(15*d^3*(2*Pi)^(4*d)*s^2*(1 + sw^4) + 2^(1 + 4*d)*Pi^(4*d)*
           (s^2*(-15*d^3*sw^2 + 8*(-1 + sw^2)^2*(-3 - 10*sw^2 + 16*sw^4) + 
              2*d^2*(-1 + sw^2)^2*(-18 - 25*sw^2 + 40*sw^4) - 
              2*d*(-1 + sw^2)^2*(-27 - 70*sw^2 + 112*sw^4)) + 
            s*(-1 + sw^2)^2*(-87*d^2 + 15*d^3 - 32*(3 - 5*sw^2 + 8*sw^4) + 
              20*d*(9 - 10*sw^2 + 16*sw^4))*t + 2*(-4 + 5*d)*(-1 + sw^2)^2*
             (3 - 20*sw^2 + 32*sw^4)*t^2)))*GaugeXi[Q]^3))/
    ((-1 + d)*d*mz^4*Pi^(5*d)*(mz^2 - s)*s^2*sw^2*(-1 + sw^2)^3*
     (-1 + GaugeXi[Q])^2*GaugeXi[Q]), 
   ((I/9)*2^(-5 - 3*d)*EL^6*((-1 + d)*(2*Pi)^(2*d)*(s - 2*mz^2*(-1 + sw^2))^2*
       (s*(-6 + 3*d - 20*sw^2 + 32*sw^4) - 2*(3 - 20*sw^2 + 32*sw^4)*t)*
       (-1 + GaugeXi[Q])^2*(s + 2*mz^2*(-1 + sw^2)*GaugeXi[Q])^2 + 
      (-1 + d)*(2*Pi)^d*(-(2^(2 + d)*mz^2*Pi^d*s*(-1 + sw^2)*
          (s*(-6 + 3*d - 20*sw^2 + 32*sw^4) - 2*(3 - 20*sw^2 + 32*sw^4)*t)) + 
        2^(2 + d)*mz^4*Pi^d*(-1 + sw^2)^2*(s*(-6 + 3*d - 20*sw^2 + 32*sw^4) - 
          2*(3 - 20*sw^2 + 32*sw^4)*t) + s^2*(3*d*(2*Pi)^d*s + 
          2^(1 + d)*Pi^d*(s*(-3 - 10*sw^2 + 16*sw^4) + 
            (-3 + 20*sw^2 - 32*sw^4)*t)))*(-1 + GaugeXi[Q])^2*
       (s + 2*mz^2*(-1 + sw^2)*GaugeXi[Q])^2 - (2*Pi)^(2*d)*s*(-1 + 4*sw^2)*
       (-3 + 8*sw^2)*(s - 2*mz^2*(-1 + sw^2))^2*(-1 + GaugeXi[Q])^2*
       (d*s^2 + 4*d*mz^2*s*(-1 + sw^2)*GaugeXi[Q] + 4*(-1 + d)*mz^4*
         (-1 + sw^2)^2*GaugeXi[Q]^2) - (2*Pi)^d*s*(-1 + 4*sw^2)*(-3 + 8*sw^2)*
       ((2*Pi)^d*s^2 - 2^(2 + d)*mz^2*Pi^d*s*(-1 + sw^2) + 
        2^(2 + d)*mz^4*Pi^d*(-1 + sw^2)^2)*(-1 + GaugeXi[Q])^2*
       (d*s^2 + 4*d*mz^2*s*(-1 + sw^2)*GaugeXi[Q] + 4*(-1 + d)*mz^4*
         (-1 + sw^2)^2*GaugeXi[Q]^2) - 
      (2*Pi)^d*(2^(2 + d)*mz^4*Pi^d*(-1 + sw^2)^2*
         (3*d*s - 4*s*(3 - 5*sw^2 + 8*sw^4) - 2*(3 - 20*sw^2 + 32*sw^4)*t) + 
        2^(2 + d)*mz^2*Pi^d*s*(-1 + sw^2)*(-3*d*s + 
          4*s*(3 - 5*sw^2 + 8*sw^4) + 2*(3 - 20*sw^2 + 32*sw^4)*t) - 
        s^2*(-3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(2*s*(3 - 5*sw^2 + 8*sw^4) + 
            (3 - 20*sw^2 + 32*sw^4)*t)))*(-1 + GaugeXi[Q])^2*
       (s*(d*s + 2*t) + 4*mz^2*(-1 + sw^2)*(d*s + 2*t)*GaugeXi[Q] + 
        4*(-1 + d)*mz^4*(-1 + sw^2)^2*GaugeXi[Q]^2) + 
      2*(-1 + d)*(s - 2*mz^2*(-1 + sw^2))^2*
       ((2*Pi)^(2*d)*s^2*(-6 + 3*d - 20*sw^2 + 32*sw^4)*t - 
        2^(1 + 2*d)*Pi^(2*d)*s*(-6 + 3*d - 20*sw^2 + 32*sw^4)*
         (s - 2*mz^2*(-1 + sw^2))*t*GaugeXi[Q] + 
        ((2*Pi)^(2*d)*s^2*(-6 + 3*d - 20*sw^2 + 32*sw^4)*t - 
          2^(3 + 2*d)*mz^2*Pi^(2*d)*s*(-1 + sw^2)*(-6 + 3*d - 20*sw^2 + 
            32*sw^4)*t - 2^(1 + 2*d)*mz^4*Pi^(2*d)*(-1 + sw^2)^2*
           (s*(-6 + 3*d - 20*sw^2 + 32*sw^4) - 2*(3 - 20*sw^2 + 32*sw^4)*t))*
         GaugeXi[Q]^2 + 4^(1 + d)*mz^2*Pi^(2*d)*(-1 + sw^2)*
         (s*(-6 + 3*d - 20*sw^2 + 32*sw^4)*t + mz^2*(-1 + sw^2)*
           (s*(-6 + 3*d - 20*sw^2 + 32*sw^4) - 2*(3 - 20*sw^2 + 32*sw^4)*t))*
         GaugeXi[Q]^3 - 2^(1 + 2*d)*mz^4*Pi^(2*d)*(-1 + sw^2)^2*
         (s*(-6 + 3*d - 20*sw^2 + 32*sw^4) - 2*(3 - 20*sw^2 + 32*sw^4)*t)*
         GaugeXi[Q]^4)))/((-1 + d)*mz^4*Pi^(3*d)*(mz^2 - s)*(-1 + sw^2)*
     (s - s*sw^2)^2*(sw - sw*GaugeXi[Q])^2), 
   ((I/9)*2^(-4 - d)*EL^6*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
        4*d*(-3 - 5*sw^2 + 8*sw^4)) + 2*s*(-15*d + 3*d^2 + 
        8*(3 - 5*sw^2 + 8*sw^4))*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2)*
     (-4*(-1 + d)*mz^2*s*(-1 + sw^2) + 
      (d*s^2 - (-8 + 3*d + 4*d^2)*mz^2*s*(-1 + sw^2) + 
        4*(-3 + 2*d + d^2)*mz^4*(-1 + sw^2)^2)*GaugeXi[Q] - 
      mz^2*(-1 + sw^2)*(d*s + 4*(-1 + d)^2*mz^2*(-1 + sw^2))*GaugeXi[Q]^2))/
    ((-1 + d)*d*mz^4*Pi^d*(mz^2 - s)*s^2*sw^2*(-1 + sw^2)^3*GaugeXi[Q]), 
   ((I/9)*2^(-5 - 4*d)*EL^6*(-3*(-1 + d)*(2*Pi)^(3*d)*s*
       (s*(-6 + 3*d - 20*sw^2 + 32*sw^4) - 2*(3 - 20*sw^2 + 32*sw^4)*t)*
       (-1 + GaugeXi[Q])^2*(s + mz^2*(-1 + sw^2) + mz^2*(-1 + sw^2)*
          GaugeXi[Q])^2 + (-1 + d)*(2*Pi)^(2*d)*s*(-1 + GaugeXi[Q])^2*
       (s + mz^2*(-1 + sw^2) + mz^2*(-1 + sw^2)*GaugeXi[Q])*
       (-(s*(3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-3 - 10*sw^2 + 16*sw^4) + 
             (-3 + 20*sw^2 - 32*sw^4)*t))) + mz^2*(-1 + sw^2)*
         (-15*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
           (s*(3 + 6*d + 10*sw^2 - 16*sw^4) + (3 - 20*sw^2 + 32*sw^4)*t)) + 
        mz^2*(-(d*(2*Pi)^d*s*(-3 + 7*sw^2)) + 2^(1 + d)*Pi^d*
           (s*(-3 + (-7 + 2*d)*sw^2 + 26*sw^4 - 16*sw^6) + 
            (-3 + 23*sw^2 - 52*sw^4 + 32*sw^6)*t))*GaugeXi[Q]) - 
      2^(4 + 3*d)*Pi^(3*d)*(1/2 - 2*sw^2)*(-3/2 + 4*sw^2)*
       (s - s*GaugeXi[Q])^2*(d*(s + mz^2*(-1 + sw^2))^2 + 
        2*mz^2*(1 - sw^2)*(-(d*s) - (-2 + d)*mz^2*(-1 + sw^2))*GaugeXi[Q] + 
        d*mz^4*(-1 + sw^2)^2*GaugeXi[Q]^2) + 2^(1 + 3*d)*Pi^(3*d)*
       (3*d*s - 4*s*(3 - 5*sw^2 + 8*sw^4) - 2*(3 - 20*sw^2 + 32*sw^4)*t)*
       (-1 + GaugeXi[Q])^2*((s + mz^2*(-1 + sw^2))^2*(d*s + 2*t) + 
        2*mz^2*(-1 + sw^2)*(mz^2*(-1 + sw^2)*((-2 + d)*s - 2*t) + 
          s*(d*s + 2*t))*GaugeXi[Q] + mz^4*(-1 + sw^2)^2*(d*s + 2*t)*
         GaugeXi[Q]^2) + 2^(2 + 3*d)*(1 - d)*Pi^(3*d)*s*
       (s^2*(-6 + 3*d - 20*sw^2 + 32*sw^4)*t + mz^4*(-1 + sw^2)^2*
         (-6 + 3*d - 20*sw^2 + 32*sw^4)*t - 2*mz^2*(-1 + sw^2)*
         (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
          3*s*(18 - 11*d + 2*d^2 - 20*sw^2 + 32*sw^4)*t + 
          4*(3 - 20*sw^2 + 32*sw^4)*t^2) - 
        2*(s^2*(-6 + 3*d - 20*sw^2 + 32*sw^4)*t + mz^4*(-1 + sw^2)^2*
           (s*(-6 + 3*d - 20*sw^2 + 32*sw^4) + 6*(-3 + d)*t) - 
          mz^2*(-1 + sw^2)*(2*s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
              4*d*(-3 - 5*sw^2 + 8*sw^4)) + s*(102 - 63*d + 12*d^2 - 
              140*sw^2 + 224*sw^4)*t + 8*(3 - 20*sw^2 + 32*sw^4)*t^2))*
         GaugeXi[Q] + (s^2*(-6 + 3*d - 20*sw^2 + 32*sw^4)*t + 
          2*mz^4*(-1 + sw^2)^2*(2*s*(-6 + 3*d - 20*sw^2 + 32*sw^4) + 
            (-30 + 9*d + 20*sw^2 - 32*sw^4)*t) - 2*mz^2*(-1 + sw^2)*
           (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 
                8*sw^4)) + s*(42 - 27*d + 6*d^2 - 100*sw^2 + 160*sw^4)*t + 
            4*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[Q]^2 - 
        2*mz^2*(-1 + sw^2)*(s*(6 - 3*d + 20*sw^2 - 32*sw^4)*t + 
          mz^2*(-1 + sw^2)*(s*(-6 + 3*d - 20*sw^2 + 32*sw^4) + 6*(-3 + d)*t))*
         GaugeXi[Q]^3 + mz^4*(-1 + sw^2)^2*(-6 + 3*d - 20*sw^2 + 32*sw^4)*t*
         GaugeXi[Q]^4)))/((-1 + d)*mz^4*Pi^(4*d)*(mz^2 - s)*s*(-1 + sw^2)^3*
     (sw - sw*GaugeXi[Q])^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, ((-I/9)*2^(-1 - d)*EL^6*(-1 + 4*sw^2)*((-2 + d)*s^2 + 4*s*t + 
      4*t^2)*(4*(-1 + d)^2*mz^2*(-1 + sw^2) + 
      ((9 - 4*d)*d*s + 4*(-1 + d)*mz^2*(-1 + sw^2))*GaugeXi[Q] - 
      d*s*GaugeXi[Q]^2))/((-1 + d)*d*mz^2*Pi^d*(mz^2 - s)*s^2*sw^2*
     (-1 + sw^2)*GaugeXi[Q]), ((I/9)*2^(-2 - d)*EL^6*(-1 + 4*sw^2)*
     (s + 4*mz^2*(-1 + sw^2))*(s^2 - 4*(-3 + 2*d)*mz^2*s*(-1 + sw^2) + 
      4*(-1 + d)*mz^4*(-1 + sw^2)^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
    ((-1 + d)*mz^4*Pi^d*(mz^2 - s)*s^2*sw^2*(-1 + sw^2)^2), 0, 0, 0, 
   ((-I/9)*2^(-1 - d)*EL^6*(-1 + 4*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
     (-4*(-1 + d)*mz^2*s*(-1 + sw^2) + (-s + 2*mz^2*(-1 + sw^2))*
       (-(d*s) + 2*(-4 + 5*d)*mz^2*(-1 + sw^2))*GaugeXi[Q]))/
    ((-1 + d)*d*mz^4*Pi^d*(mz^2 - s)*s^2*sw^2*(-1 + sw^2)^2*GaugeXi[Q]), 
   ((-I/9)*EL^6*(-1 + 4*sw^2)*
     (-(s*(d*(2*Pi)^d*s^4 + 2^(1 + d)*Pi^d*s^2*(-s^2 + 2*s*t + 2*t^2) + 
         2^(2 + d)*mz^2*Pi^d*s*(1 - sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2) + 
         2^(2 + d)*mz^4*Pi^d*(-1 + sw^2)^2*((-2 + d)*s^2 + 4*s*t + 4*t^2))) + 
      2^(2 + d)*mz^2*Pi^d*(1 - sw^2)*(s - 2*mz^2*(-1 + sw^2))^2*
       ((-2 + d)*s^2 + 4*s*t + 4*t^2)*GaugeXi[Q]))/
    (2^(2*(1 + d))*(-1 + d)*mz^4*Pi^(2*d)*(mz^2 - s)*s^2*sw^2*(-1 + sw^2)^2), 
   ((-I/9)*2^(-1 - d)*EL^6*(-1 + 4*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
     (4*(-1 + d)*mz^2*s*(-1 + sw^2) - 
      (d*s^2 - (-8 + 3*d + 4*d^2)*mz^2*s*(-1 + sw^2) + 
        4*(-3 + 2*d + d^2)*mz^4*(-1 + sw^2)^2)*GaugeXi[Q] + 
      mz^2*(-1 + sw^2)*(d*s + 4*(-1 + d)^2*mz^2*(-1 + sw^2))*GaugeXi[Q]^2))/
    ((-1 + d)*d*mz^4*Pi^d*(mz^2 - s)*s^2*sw^2*(-1 + sw^2)^2*GaugeXi[Q]), 
   ((-I/9)*2^(-1 - 2*d)*EL^6*(-1 + 4*sw^2)*(-(d*(2*Pi)^d*s^4) + 
      2^(1 + d)*Pi^d*s^2*((-1 + d)*s^2 + 2*s*t + 2*t^2) + 
      2^(1 + d)*(-3 + 2*d)*mz^2*Pi^d*s*(1 - sw^2)*((-2 + d)*s^2 + 4*s*t + 
        4*t^2) + mz^4*(-1 + sw^2)^2*(d*(2*Pi)^d*s^2 + 
        2^(1 + d)*Pi^d*(-s^2 + 2*s*t + 2*t^2)) - 2^(1 + d)*mz^2*Pi^d*
       (1 - sw^2)*(s - mz^2*(-1 + sw^2))*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
       GaugeXi[Q] + mz^4*(-1 + sw^2)^2*(-(d*(2*Pi)^d*s^2) + 
        2^(1 + d)*Pi^d*((-1 + d)*s^2 + 2*s*t + 2*t^2))*GaugeXi[Q]^2))/
    ((-1 + d)*mz^4*Pi^(2*d)*(mz^2 - s)*s*(sw - sw^3)^2), 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((I/9)*2^(-5 - d)*EL^6*(s^2*(3*d^2*(-1 + 4*sw^2) + 
        4*d*(3 - 10*sw^2 - 14*sw^4 + 16*sw^6) - 
        4*(3 - 8*sw^2 - 28*sw^4 + 32*sw^6)) + 
      2*s*(d*(15 - 60*sw^2) + 3*d^2*(-1 + 4*sw^2) + 
        8*(-3 + 14*sw^2 - 14*sw^4 + 16*sw^6))*t + 
      4*(-3 + 20*sw^2 - 56*sw^4 + 64*sw^6)*t^2)*
     (-4*(-1 + d)^2*mz^2*(-1 + sw^2) + 
      (d*(-9 + 4*d)*s - 4*(-1 + d)*mz^2*(-1 + sw^2))*GaugeXi[Q] + 
      d*s*GaugeXi[Q]^2))/((-1 + d)*d*mz^2*Pi^d*(mz^2 - s)^2*s*sw^4*
     (-1 + sw^2)^2*GaugeXi[Q]), ((I/9)*4^(-3 - 2*d)*EL^6*
     ((2*Pi)^(3*d)*s*(-3 + 8*sw^2)*(1 - 4*sw^2 + 8*sw^4)*
       (s^2 + 4*mz^2*s*(-1 + sw^2) + 4*(-1 + d)*mz^4*(-1 + sw^2)^2)*
       (d*s^2 + 4*d*mz^2*s*(-1 + sw^2) + 4*(-1 + d)*mz^4*(-1 + sw^2)^2)*
       (-1 + GaugeXi[Q])^2 + (2*Pi)^(2*d)*s*(-3 + 8*sw^2)*
       (1 - 4*sw^2 + 8*sw^4)*(d*s^2 + 4*d*mz^2*s*(-1 + sw^2) + 
        4*(-1 + d)*mz^4*(-1 + sw^2)^2)*((2*Pi)^d*s^2 + 2^(2 + d)*mz^2*Pi^d*s*
         (-1 + sw^2) + 2^(2 + d)*(-1 + d)*mz^4*Pi^d*(-1 + sw^2)^2)*
       (-1 + GaugeXi[Q])^2 - (-1 + d)*(2*Pi)^(3*d)*(s + 2*mz^2*(-1 + sw^2))^2*
       (s^2 + 4*mz^2*s*(-1 + sw^2) + 4*(-1 + d)*mz^4*(-1 + sw^2)^2)*
       (s*(6 - 16*sw^2 - 56*sw^4 + 64*sw^6 + 3*d*(-1 + 4*sw^2)) + 
        2*(3 - 20*sw^2 + 56*sw^4 - 64*sw^6)*t)*(-1 + GaugeXi[Q])^2 + 
      (2*Pi)^(3*d)*(s^2 + 4*mz^2*s*(-1 + sw^2) + 4*(-1 + d)*mz^4*
         (-1 + sw^2)^2)*(s*(12 - 56*sw^2 + 56*sw^4 - 64*sw^6 + 
          3*d*(-1 + 4*sw^2)) + 2*(3 - 20*sw^2 + 56*sw^4 - 64*sw^6)*t)*
       (4*(-1 + d)*mz^4*(-1 + sw^2)^2 + s*(d*s + 2*t) + 
        4*mz^2*(-1 + sw^2)*(d*s + 2*t))*(-1 + GaugeXi[Q])^2 - 
      16*(1 - d)*(sw^4*(2^(-1 + 3*d)*(-4 + d)*Pi^(3*d)*s^4*(-3 + 4*sw^2)*t - 
          2^(2 + 3*d)*(-1 + d)*mz^8*Pi^(3*d)*(-1 + sw^2)^4*(-3 + 4*sw^2)*
           ((-4 + d)*s + 2*t) - 2^(2 + 3*d)*mz^6*Pi^(3*d)*s*(-1 + sw^2)^3*
           (-3 + 4*sw^2)*((-4 + d)*s - 2*(3 - 5*d + d^2)*t) - 
          mz^4*(2*Pi)^(3*d)*s*(-1 + sw^2)^2*(-3 + 4*sw^2)*
           ((60 - 47*d + 8*d^2)*s^2 + 2*(45 - 39*d + 7*d^2)*s*t - 32*t^2) - 
          2^(1 + 3*d)*mz^2*Pi^(3*d)*s^2*(3 - 4*sw^2)*(1 - sw^2)*
           ((8 - 6*d + d^2)*s^2 + 2*(8 - 6*d + d^2)*s*t - 4*t^2) + 
          2*sw^2*(8^(1 + d)*(-1 + d)*mz^8*Pi^(3*d)*(-1 + sw^2)^4*
             ((-2 + d)*s - 2*t) - (-2 + d)*(2*Pi)^(3*d)*s^4*t + 
            8^(1 + d)*mz^6*Pi^(3*d)*s*(-1 + sw^2)^3*((-2 + d)*s - 
              2*(3 - 3*d + d^2)*t) - 2^(2 + 3*d)*mz^2*Pi^(3*d)*s^2*(1 - sw^2)*
             ((-2 + d)^2*s^2 + 2*(10 - 6*d + d^2)*s*t + 4*t^2) + 
            2^(1 + 3*d)*mz^4*Pi^(3*d)*s*(-1 + sw^2)^2*
             ((30 - 31*d + 8*d^2)*s^2 + 2*(69 - 41*d + 7*d^2)*s*t + 
              32*t^2))) - (-1/2 + sw^2)^2*(-(2^(1 + 3*d)*(-4 + d)*Pi^(3*d)*
            s^4*sw^2*t) + 2^(4 + 3*d)*(-1 + d)*mz^8*Pi^(3*d)*sw^2*
           (-1 + sw^2)^4*((-4 + d)*s + 2*t) + 2^(4 + 3*d)*mz^6*Pi^(3*d)*s*
           sw^2*(-1 + sw^2)^3*((-4 + d)*s - 2*(3 - 5*d + d^2)*t) + 
          2^(2 + 3*d)*mz^4*Pi^(3*d)*s*(sw - sw^3)^2*
           ((60 - 47*d + 8*d^2)*s^2 + 2*(45 - 39*d + 7*d^2)*s*t - 32*t^2) - 
          8^(1 + d)*mz^2*Pi^(3*d)*s^2*sw^2*(1 - sw^2)*((8 - 6*d + d^2)*s^2 + 
            2*(8 - 6*d + d^2)*s*t - 4*t^2) + 
          ((3 - 4*sw^2)*(8^(1 + d)*(-1 + d)*mz^8*Pi^(3*d)*(-1 + sw^2)^4*
              ((-2 + d)*s - 2*t) - (-2 + d)*(2*Pi)^(3*d)*s^4*t + 
             8^(1 + d)*mz^6*Pi^(3*d)*s*(-1 + sw^2)^3*((-2 + d)*s - 2*
                (3 - 3*d + d^2)*t) - 2^(2 + 3*d)*mz^2*Pi^(3*d)*s^2*(1 - sw^2)*
              ((-2 + d)^2*s^2 + 2*(10 - 6*d + d^2)*s*t + 4*t^2) + 
             2^(1 + 3*d)*mz^4*Pi^(3*d)*s*(-1 + sw^2)^2*((30 - 31*d + 8*d^2)*
                s^2 + 2*(69 - 41*d + 7*d^2)*s*t + 32*t^2)))/2))*
       (-1 + GaugeXi[Q])^2 - (-1 + d)*(s + 2*mz^2*(-1 + sw^2))^2*
       (s^2 + 4*mz^2*s*(-1 + sw^2) + 4*(-1 + d)*mz^4*(-1 + sw^2)^2)*
       (s*(6 - 16*sw^2 - 56*sw^4 + 64*sw^6 + 3*d*(-1 + 4*sw^2)) + 
        2*(3 - 20*sw^2 + 56*sw^4 - 64*sw^6)*t)*((2*Pi)^(3*d) - 
        2^(1 + 3*d)*Pi^(3*d)*GaugeXi[Q] + (2*Pi)^(3*d)*GaugeXi[Q]^2)))/
    ((-1 + d)*mz^4*Pi^(4*d)*(mz^2 - s)^2*s*sw^4*(1 - sw^2)^3*
     (-1 + GaugeXi[Q])^2), 0, 0, 0, 
   ((-I/9)*32^(-1 - d)*EL^6*
     (-4*mz^2*s*(-(d^2*(2*Pi)^(4*d)*s^2*(15 - 67*sw^2 + 3*d*(-1 + 5*sw^2))) + 
        2^(1 + 4*d)*Pi^(4*d)*(2*s^2*(-3 + 11*sw^2 + 20*sw^4 + 3*d^3*sw^4 - 
            60*sw^6 + 32*sw^8 - 6*d*(-1 + 4*sw^2 + 4*sw^4 - 15*sw^6 + 
              8*sw^8) + d^2*(sw^4 - 30*sw^6 + 16*sw^8)) + 
          s*(-1 + sw^2)*(d^2*(18 - 72*sw^2) + 3*d^3*(-1 + 4*sw^2) - 
            8*(-3 + 14*sw^2 - 14*sw^4 + 16*sw^6) + d*(-39 + 172*sw^2 - 
              112*sw^4 + 128*sw^6))*t + 2*(-1 + d)*(3 - 23*sw^2 + 76*sw^4 - 
            120*sw^6 + 64*sw^8)*t^2)) + (-3*d^3*(2*Pi)^(4*d)*s^4 + 
        2^(1 + 4*d)*d*Pi^(4*d)*s^2*(2*s^2*(-3 + 8*sw^2 + 3*d^2*sw^2 + 
            28*sw^4 - 32*sw^6 + d*(3 - 10*sw^2 - 14*sw^4 + 16*sw^6)) + 
          s*(d*(15 - 60*sw^2) + 3*d^2*(-1 + 4*sw^2) + 
            8*(-3 + 14*sw^2 - 14*sw^4 + 16*sw^6))*t + 
          2*(-3 + 20*sw^2 - 56*sw^4 + 64*sw^6)*t^2) + 
        4*mz^4*(-15*d^3*(2*Pi)^(4*d)*s^2*(1 + 9*sw^4) + 2^(1 + 4*d)*Pi^(4*d)*
           (s^2*(15*d^3*sw^2*(3 + 2*sw^4) + 8*(-1 + sw^2)^2*(3 - 8*sw^2 - 
                28*sw^4 + 32*sw^6) + 4*d^2*(-1 + sw^2)^2*(9 - 31*sw^2 - 
                35*sw^4 + 40*sw^6) - 2*d*(-1 + sw^2)^2*(27 - 80*sw^2 - 
                196*sw^4 + 224*sw^6)) + s*(-1 + sw^2)^2*
             (-87*d^2*(-1 + 4*sw^2) + 15*d^3*(-1 + 4*sw^2) + 
              32*(3 - 14*sw^2 + 14*sw^4 - 16*sw^6) + 20*d*(-9 + 40*sw^2 - 
                28*sw^4 + 32*sw^6))*t + 2*(-4 + 5*d)*(-1 + sw^2)^2*
             (-3 + 20*sw^2 - 56*sw^4 + 64*sw^6)*t^2)) - 
        4*d*mz^2*s*(-3*d^2*(2*Pi)^(4*d)*s^2*(-1 + 5*sw^2) + 
          2^(1 + 4*d)*Pi^(4*d)*(2*s^2*(3 - 11*sw^2 - 20*sw^4 + 3*d^2*sw^4 + 
              60*sw^6 - 32*sw^8 + d*(-3 + 13*sw^2 + 4*sw^4 - 30*sw^6 + 
                16*sw^8)) + s*(-1 + sw^2)*(d*(15 - 60*sw^2) + 
              3*d^2*(-1 + 4*sw^2) + 8*(-3 + 14*sw^2 - 14*sw^4 + 16*sw^6))*t + 
            2*(3 - 23*sw^2 + 76*sw^4 - 120*sw^6 + 64*sw^8)*t^2)))*
       GaugeXi[Q] - 2*(-3*d^3*(2*Pi)^(4*d)*s^4 + 2^(1 + 4*d)*d*Pi^(4*d)*s^2*
         (2*s^2*(-3 + 8*sw^2 + 3*d^2*sw^2 + 28*sw^4 - 32*sw^6 + 
            d*(3 - 10*sw^2 - 14*sw^4 + 16*sw^6)) + 
          s*(d*(15 - 60*sw^2) + 3*d^2*(-1 + 4*sw^2) + 
            8*(-3 + 14*sw^2 - 14*sw^4 + 16*sw^6))*t + 
          2*(-3 + 20*sw^2 - 56*sw^4 + 64*sw^6)*t^2) + 
        4*mz^4*(-15*d^3*(2*Pi)^(4*d)*s^2*(1 + 9*sw^4) + 2^(1 + 4*d)*Pi^(4*d)*
           (s^2*(15*d^3*sw^2*(3 + 2*sw^4) + 8*(-1 + sw^2)^2*(3 - 8*sw^2 - 
                28*sw^4 + 32*sw^6) + 4*d^2*(-1 + sw^2)^2*(9 - 31*sw^2 - 
                35*sw^4 + 40*sw^6) - 2*d*(-1 + sw^2)^2*(27 - 80*sw^2 - 
                196*sw^4 + 224*sw^6)) + s*(-1 + sw^2)^2*
             (-87*d^2*(-1 + 4*sw^2) + 15*d^3*(-1 + 4*sw^2) + 
              32*(3 - 14*sw^2 + 14*sw^4 - 16*sw^6) + 20*d*(-9 + 40*sw^2 - 
                28*sw^4 + 32*sw^6))*t + 2*(-4 + 5*d)*(-1 + sw^2)^2*
             (-3 + 20*sw^2 - 56*sw^4 + 64*sw^6)*t^2)) - 
        2*mz^2*s*(-(d^2*(2*Pi)^(4*d)*s^2*(69 - 305*sw^2 + 
             15*d*(-1 + 5*sw^2))) + 2^(1 + 4*d)*Pi^(4*d)*
           (2*s^2*(-9 + 33*sw^2 + 60*sw^4 + 15*d^3*sw^4 - 180*sw^6 + 
              96*sw^8 + d^2*sw^4*(11 - 150*sw^2 + 80*sw^4) - 
              2*d*(-12 + 47*sw^2 + 56*sw^4 - 195*sw^6 + 104*sw^8)) + 
            s*(-1 + sw^2)*(-84*d^2*(-1 + 4*sw^2) + 15*d^3*(-1 + 4*sw^2) + 
              24*(3 - 14*sw^2 + 14*sw^4 - 16*sw^6) + 5*d*(-33 + 148*sw^2 - 
                112*sw^4 + 128*sw^6))*t + 2*(-3 + 5*d)*(3 - 23*sw^2 + 
              76*sw^4 - 120*sw^6 + 64*sw^8)*t^2)))*GaugeXi[Q]^2 + 
      (-3*d^3*(2*Pi)^(4*d)*s^4 + 2^(1 + 4*d)*d*Pi^(4*d)*s^2*
         (2*s^2*(-3 + 8*sw^2 + 3*d^2*sw^2 + 28*sw^4 - 32*sw^6 + 
            d*(3 - 10*sw^2 - 14*sw^4 + 16*sw^6)) + 
          s*(d*(15 - 60*sw^2) + 3*d^2*(-1 + 4*sw^2) + 
            8*(-3 + 14*sw^2 - 14*sw^4 + 16*sw^6))*t + 
          2*(-3 + 20*sw^2 - 56*sw^4 + 64*sw^6)*t^2) + 
        4*mz^4*(-15*d^3*(2*Pi)^(4*d)*s^2*(1 + 9*sw^4) + 2^(1 + 4*d)*Pi^(4*d)*
           (s^2*(15*d^3*sw^2*(3 + 2*sw^4) + 8*(-1 + sw^2)^2*(3 - 8*sw^2 - 
                28*sw^4 + 32*sw^6) + 4*d^2*(-1 + sw^2)^2*(9 - 31*sw^2 - 
                35*sw^4 + 40*sw^6) - 2*d*(-1 + sw^2)^2*(27 - 80*sw^2 - 
                196*sw^4 + 224*sw^6)) + s*(-1 + sw^2)^2*
             (-87*d^2*(-1 + 4*sw^2) + 15*d^3*(-1 + 4*sw^2) + 
              32*(3 - 14*sw^2 + 14*sw^4 - 16*sw^6) + 20*d*(-9 + 40*sw^2 - 
                28*sw^4 + 32*sw^6))*t + 2*(-4 + 5*d)*(-1 + sw^2)^2*
             (-3 + 20*sw^2 - 56*sw^4 + 64*sw^6)*t^2)) - 
        4*mz^2*s*(-9*d^3*(2*Pi)^(4*d)*s^2*(-1 + 5*sw^2) + 
          2^(1 + 4*d)*Pi^(4*d)*(s^2*(18*d^3*sw^4 + 3*d^2*(-7 + 31*sw^2 + 
                4*sw^4 - 60*sw^6 + 32*sw^8) + 4*(-3 + 11*sw^2 + 20*sw^4 - 
                60*sw^6 + 32*sw^8) - 2*d*(-15 + 59*sw^2 + 68*sw^4 - 
                240*sw^6 + 128*sw^8)) + s*(-1 + sw^2)*
             (-51*d^2*(-1 + 4*sw^2) + 9*d^3*(-1 + 4*sw^2) + 16*(3 - 14*sw^2 + 
                14*sw^4 - 16*sw^6) + 6*d*(-17 + 76*sw^2 - 56*sw^4 + 64*sw^6))*
             t + 2*(-2 + 3*d)*(3 - 23*sw^2 + 76*sw^4 - 120*sw^6 + 64*sw^8)*
             t^2)))*GaugeXi[Q]^3))/((-1 + d)*d*mz^4*Pi^(5*d)*(mz^2 - s)^2*s*
     sw^4*(-1 + sw^2)^3*(-1 + GaugeXi[Q])^2*GaugeXi[Q]), 
   ((-I/9)*EL^6*(-(2^(1 + 2*d)*(-1 + d)*Pi^(2*d)*(s - 2*mz^2*(-1 + sw^2))^2*
        (s*(6 - 16*sw^2 - 56*sw^4 + 64*sw^6 + 3*d*(-1 + 4*sw^2)) + 
         2*(3 - 20*sw^2 + 56*sw^4 - 64*sw^6)*t)*(-1 + GaugeXi[Q])^2*
        (s + 2*mz^2*(-1 + sw^2)*GaugeXi[Q])^2) + (2*Pi)^(2*d)*s*(-3 + 8*sw^2)*
       (1 - 4*sw^2 + 8*sw^4)*(s - 2*mz^2*(-1 + sw^2))^2*(-1 + GaugeXi[Q])^2*
       (d*s^2 + 4*d*mz^2*s*(-1 + sw^2)*GaugeXi[Q] + 4*(-1 + d)*mz^4*
         (-1 + sw^2)^2*GaugeXi[Q]^2) + (2*Pi)^d*s*(-3 + 8*sw^2)*
       (1 - 4*sw^2 + 8*sw^4)*((2*Pi)^d*s^2 - 2^(2 + d)*mz^2*Pi^d*s*
         (-1 + sw^2) + 2^(2 + d)*mz^4*Pi^d*(-1 + sw^2)^2)*(-1 + GaugeXi[Q])^2*
       (d*s^2 + 4*d*mz^2*s*(-1 + sw^2)*GaugeXi[Q] + 4*(-1 + d)*mz^4*
         (-1 + sw^2)^2*GaugeXi[Q]^2) - (s - 2*mz^2*(-1 + sw^2))^2*
       (s*(-12 + 56*sw^2 - 56*sw^4 + 64*sw^6 + d*(3 - 12*sw^2)) + 
        2*(-3 + 20*sw^2 - 56*sw^4 + 64*sw^6)*t)*((2*Pi)^(2*d) - 
        2^(1 + 2*d)*Pi^(2*d)*GaugeXi[Q] + (2*Pi)^(2*d)*GaugeXi[Q]^2)*
       (s*(d*s + 2*t) + 4*mz^2*(-1 + sw^2)*(d*s + 2*t)*GaugeXi[Q] + 
        4*(-1 + d)*mz^4*(-1 + sw^2)^2*GaugeXi[Q]^2) + 
      2^(1 + 2*d)*(1 - d)*Pi^(2*d)*(s - 2*mz^2*(-1 + sw^2))^2*
       (-1 + GaugeXi[Q])^2*(s^2*(6 - 16*sw^2 - 56*sw^4 + 64*sw^6 + 
          3*d*(-1 + 4*sw^2))*t + 4*mz^2*s*(-1 + sw^2)*(6 - 16*sw^2 - 
          56*sw^4 + 64*sw^6 + 3*d*(-1 + 4*sw^2))*t*GaugeXi[Q] - 
        2*mz^4*(-1 + sw^2)^2*(s*(6 - 16*sw^2 - 56*sw^4 + 64*sw^6 + 
            3*d*(-1 + 4*sw^2)) + 2*(3 - 20*sw^2 + 56*sw^4 - 64*sw^6)*t)*
         GaugeXi[Q]^2)))/(2^(3*(2 + d))*mz^4*Pi^(3*d)*(mz^2 - s)^2*(s - d*s)*
     sw^4*(1 - sw^2)^3*(-1 + GaugeXi[Q])^2), 
   ((-I/9)*2^(-5 - 7*d)*EL^6*
     (4*mz^2*s*(-(d^2*(2*Pi)^(6*d)*s^2*(15 - 67*sw^2 + 3*d*(-1 + 5*sw^2))) + 
        2^(1 + 6*d)*Pi^(6*d)*(2*s^2*(-3 + 11*sw^2 + 20*sw^4 + 3*d^3*sw^4 - 
            60*sw^6 + 32*sw^8 - 6*d*(-1 + 4*sw^2 + 4*sw^4 - 15*sw^6 + 
              8*sw^8) + d^2*(sw^4 - 30*sw^6 + 16*sw^8)) + 
          s*(-1 + sw^2)*(d^2*(18 - 72*sw^2) + 3*d^3*(-1 + 4*sw^2) - 
            8*(-3 + 14*sw^2 - 14*sw^4 + 16*sw^6) + d*(-39 + 172*sw^2 - 
              112*sw^4 + 128*sw^6))*t + 2*(-1 + d)*(3 - 23*sw^2 + 76*sw^4 - 
            120*sw^6 + 64*sw^8)*t^2)) + (3*d^3*(2*Pi)^(6*d)*s^4 - 
        2^(1 + 6*d)*d*Pi^(6*d)*s^2*(2*s^2*(-3 + 8*sw^2 + 3*d^2*sw^2 + 
            28*sw^4 - 32*sw^6 + d*(3 - 10*sw^2 - 14*sw^4 + 16*sw^6)) + 
          s*(d*(15 - 60*sw^2) + 3*d^2*(-1 + 4*sw^2) + 
            8*(-3 + 14*sw^2 - 14*sw^4 + 16*sw^6))*t + 
          2*(-3 + 20*sw^2 - 56*sw^4 + 64*sw^6)*t^2) - 
        4*mz^4*(-3*d^2*(-7 + d^2)*(2*Pi)^(6*d)*s^2*(1 + 9*sw^4) + 
          2^(1 + 6*d)*Pi^(6*d)*(s^2*(-21*d^2*sw^2*(3 + 2*sw^4) + 
              d^4*(9*sw^2 + 6*sw^6) + 6*(-1 + sw^2)^2*(3 - 8*sw^2 - 28*sw^4 + 
                32*sw^6) + d^3*(-1 + sw^2)^2*(3 - 8*sw^2 - 28*sw^4 + 
                32*sw^6) - 2*d*(-1 + sw^2)^2*(15 - 46*sw^2 - 98*sw^4 + 
                112*sw^6)) + s*(-1 + sw^2)^2*(d^3*(9 - 36*sw^2) + 
              3*d^4*(-1 + 4*sw^2) + 24*(3 - 14*sw^2 + 14*sw^4 - 16*sw^6) + 
              d^2*(15 - 44*sw^2 - 112*sw^4 + 128*sw^6) + d*(-93 + 404*sw^2 - 
                224*sw^4 + 256*sw^6))*t + 2*(-3 + 2*d + d^2)*(-1 + sw^2)^2*
             (-3 + 20*sw^2 - 56*sw^4 + 64*sw^6)*t^2)) + 
        d*mz^2*s*(d^2*(2*Pi)^(6*d)*s^2*(-63 + 283*sw^2) + 
          2^(1 + 6*d)*Pi^(6*d)*(2*s^2*(3*d^3*(1 - 5*sw^2 + 4*sw^4) + 
              d*(27 - 109*sw^2 - 100*sw^4 + 390*sw^6 - 208*sw^8) + 
              5*(-3 + 11*sw^2 + 20*sw^4 - 60*sw^6 + 32*sw^8) + 
              d^2*(sw^4 - 120*sw^6 + 64*sw^8)) + s*(-1 + sw^2)*
             (-75*d^2*(-1 + 4*sw^2) + 12*d^3*(-1 + 4*sw^2) - 
              40*(-3 + 14*sw^2 - 14*sw^4 + 16*sw^6) + d*(-171 + 748*sw^2 - 
                448*sw^4 + 512*sw^6))*t + 2*(-5 + 4*d)*(3 - 23*sw^2 + 
              76*sw^4 - 120*sw^6 + 64*sw^8)*t^2)))*GaugeXi[Q] + 
      (2*d*s^2*(-3*d^2*(2*Pi)^(6*d)*s^2 + 2^(1 + 6*d)*Pi^(6*d)*
           (2*s^2*(-3 + 8*sw^2 + 3*d^2*sw^2 + 28*sw^4 - 32*sw^6 + 
              d*(3 - 10*sw^2 - 14*sw^4 + 16*sw^6)) + 
            s*(d*(15 - 60*sw^2) + 3*d^2*(-1 + 4*sw^2) + 8*(-3 + 14*sw^2 - 
                14*sw^4 + 16*sw^6))*t + 2*(-3 + 20*sw^2 - 56*sw^4 + 64*sw^6)*
             t^2)) + 4*mz^4*(-3*d^2*(2*Pi)^(6*d)*s^2*(-1 - 105*sw^4 + 
            3*d^2*(1 + 9*sw^4)) + 2^(1 + 6*d)*Pi^(6*d)*
           (s^2*(9*d^4*sw^2*(3 + 2*sw^4) + 3*d^3*(-1 + sw^2)^2*(5 - 16*sw^2 - 
                28*sw^4 + 32*sw^6) + 10*(-1 + sw^2)^2*(3 - 8*sw^2 - 28*sw^4 + 
                32*sw^6) - 6*d*(-1 + sw^2)^2*(7 - 22*sw^2 - 42*sw^4 + 
                48*sw^6) - d^2*sw^2*(25 + 374*sw^4 - 368*sw^6 + 128*sw^8)) + 
            s*(-1 + sw^2)^2*(-39*d^3*(-1 + 4*sw^2) + 9*d^4*(-1 + 4*sw^2) - 
              40*(-3 + 14*sw^2 - 14*sw^4 + 16*sw^6) + 3*d^2*(-9 + 52*sw^2 - 
                112*sw^4 + 128*sw^6) + d*(-123 + 524*sw^2 - 224*sw^4 + 
                256*sw^6))*t + 2*(-5 + 2*d + 3*d^2)*(-1 + sw^2)^2*
             (-3 + 20*sw^2 - 56*sw^4 + 64*sw^6)*t^2)) - 
        mz^2*s*(d^3*(2*Pi)^(6*d)*s^2*(-93 + 401*sw^2) + 2^(1 + 6*d)*Pi^(6*d)*
           (2*s^2*(6*d^4*(1 - 5*sw^2 + 4*sw^4) + d^3*sw^4*(35 - 240*sw^2 + 
                128*sw^4) + d*(39 - 167*sw^2 - 68*sw^4 + 420*sw^6 - 
                224*sw^8) + 12*(-3 + 11*sw^2 + 20*sw^4 - 60*sw^6 + 32*sw^8) - 
              6*d^2*(-2 + 5*sw^2 + 32*sw^4 - 75*sw^6 + 40*sw^8)) + 
            s*(-1 + sw^2)*(-117*d^3*(-1 + 4*sw^2) + 24*d^4*(-1 + 4*sw^2) - 
              96*(-3 + 14*sw^2 - 14*sw^4 + 16*sw^6) + 4*d*(-51 + 208*sw^2 - 
                28*sw^4 + 32*sw^6) + d^2*(-141 + 692*sw^2 - 896*sw^4 + 
                1024*sw^6))*t + 2*(-12 + d + 8*d^2)*(3 - 23*sw^2 + 76*sw^4 - 
              120*sw^6 + 64*sw^8)*t^2)))*GaugeXi[Q]^2 + 
      (3*d^3*(2*Pi)^(6*d)*s^4 - 2^(1 + 6*d)*d*Pi^(6*d)*s^2*
         (2*s^2*(-3 + 8*sw^2 + 3*d^2*sw^2 + 28*sw^4 - 32*sw^6 + 
            d*(3 - 10*sw^2 - 14*sw^4 + 16*sw^6)) + 
          s*(d*(15 - 60*sw^2) + 3*d^2*(-1 + 4*sw^2) + 
            8*(-3 + 14*sw^2 - 14*sw^4 + 16*sw^6))*t + 
          2*(-3 + 20*sw^2 - 56*sw^4 + 64*sw^6)*t^2) - 
        4*mz^4*(-3*d^2*(2*Pi)^(6*d)*s^2*(19 - 21*sw^4 + 3*d^2*(1 + 9*sw^4)) + 
          2^(1 + 6*d)*Pi^(6*d)*(s^2*(9*d^4*sw^2*(3 + 2*sw^4) + 
              6*d*(-1 + sw^2)^2*(1 - 2*sw^2 - 14*sw^4 + 16*sw^6) + 
              3*d^3*(-1 + sw^2)^2*(7 - 24*sw^2 - 28*sw^4 + 32*sw^6) + 
              2*(-1 + sw^2)^2*(3 - 8*sw^2 - 28*sw^4 + 32*sw^6) + 
              d^2*sw^2*(139 - 622*sw^4 + 736*sw^6 - 256*sw^8)) + 
            s*(-1 + sw^2)^2*(-51*d^3*(-1 + 4*sw^2) + 9*d^4*(-1 + 4*sw^2) + 
              d*(33 - 164*sw^2 + 224*sw^4 - 256*sw^6) - 8*(-3 + 14*sw^2 - 
                14*sw^4 + 16*sw^6) + d^2*(-99 + 444*sw^2 - 336*sw^4 + 
                384*sw^6))*t + 2*(-1 - 2*d + 3*d^2)*(-1 + sw^2)^2*
             (-3 + 20*sw^2 - 56*sw^4 + 64*sw^6)*t^2)) + 
        mz^2*s*(d^3*(2*Pi)^(6*d)*s^2*(-45 + 193*sw^2) + 2^(1 + 6*d)*Pi^(6*d)*
           (2*s^2*(3*d^4*(1 - 5*sw^2 + 4*sw^4) + d^3*sw^4*(19 - 120*sw^2 + 
                64*sw^4) + d*(27 - 115*sw^2 - 52*sw^4 + 300*sw^6 - 
                160*sw^8) + 8*(-3 + 11*sw^2 + 20*sw^4 - 60*sw^6 + 32*sw^8) - 
              d^2*(-3 + sw^2 + 100*sw^4 - 210*sw^6 + 112*sw^8)) + 
            s*(-1 + sw^2)*(-57*d^3*(-1 + 4*sw^2) + 12*d^4*(-1 + 4*sw^2) + 
              16*d*(-9 + 37*sw^2 - 7*sw^4 + 8*sw^6) - 64*(-3 + 14*sw^2 - 
                14*sw^4 + 16*sw^6) + d^2*(-57 + 292*sw^2 - 448*sw^4 + 
                512*sw^6))*t + 2*(-8 + d + 4*d^2)*(3 - 23*sw^2 + 76*sw^4 - 
              120*sw^6 + 64*sw^8)*t^2)))*GaugeXi[Q]^3 + 
      mz^2*(-3*d^3*(2*Pi)^(6*d)*s^3*(-1 + 5*sw^2) + 2^(1 + 6*d)*d*Pi^(6*d)*s*
         (2*s^2*(3 - 11*sw^2 - 20*sw^4 + 3*d^2*sw^4 + 60*sw^6 - 32*sw^8 + 
            d*(-3 + 13*sw^2 + 4*sw^4 - 30*sw^6 + 16*sw^8)) + 
          s*(-1 + sw^2)*(d*(15 - 60*sw^2) + 3*d^2*(-1 + 4*sw^2) + 
            8*(-3 + 14*sw^2 - 14*sw^4 + 16*sw^6))*t + 
          2*(3 - 23*sw^2 + 76*sw^4 - 120*sw^6 + 64*sw^8)*t^2) + 
        4*mz^2*(-3*d^2*(2*Pi)^(6*d)*s^2*(13 + 21*sw^4 + d^2*(1 + 9*sw^4)) + 
          2^(1 + 6*d)*Pi^(6*d)*(s^2*(d^4*(9*sw^2 + 6*sw^6) + d^3*(-1 + sw^2)^
                2*(9 - 32*sw^2 - 28*sw^4 + 32*sw^6) - 2*(-1 + sw^2)^2*(3 - 
                8*sw^2 - 28*sw^4 + 32*sw^6) + 2*d*(-1 + sw^2)^2*(9 - 
                26*sw^2 - 70*sw^4 + 80*sw^6) + d^2*sw^2*(101 - 290*sw^4 + 
                368*sw^6 - 128*sw^8)) + (-1 + d)^2*s*(-1 + sw^2)^2*
             (d*(15 - 60*sw^2) + 3*d^2*(-1 + 4*sw^2) + 8*(-3 + 14*sw^2 - 
                14*sw^4 + 16*sw^6))*t + 2*(-1 + d)^2*(-1 + sw^2)^2*
             (-3 + 20*sw^2 - 56*sw^4 + 64*sw^6)*t^2)))*GaugeXi[Q]^4))/
    ((-1 + d)*d*mz^4*Pi^(7*d)*(mz^2 - s)^2*s*sw^4*(-1 + sw^2)^3*
     (-1 + GaugeXi[Q])^2*GaugeXi[Q]), 
   ((-I/9)*2^(-5 - d)*EL^6*(s^2*(3*d^2*(-1 + 4*sw^2) + 
        4*d*(3 - 10*sw^2 - 14*sw^4 + 16*sw^6) - 
        4*(3 - 8*sw^2 - 28*sw^4 + 32*sw^6)) + 
      2*s*(d*(15 - 60*sw^2) + 3*d^2*(-1 + 4*sw^2) + 
        8*(-3 + 14*sw^2 - 14*sw^4 + 16*sw^6))*t + 
      4*(-3 + 20*sw^2 - 56*sw^4 + 64*sw^6)*t^2)*
     (s^2 - 2*(-3 + 2*d)*mz^2*s*(-1 + sw^2) + mz^4*(-1 + sw^2)^2 - 
      2*mz^2*(-1 + sw^2)*(-s + mz^2*(-1 + sw^2))*GaugeXi[Q] + 
      mz^4*(-1 + sw^2)^2*GaugeXi[Q]^2))/((-1 + d)*mz^4*Pi^d*(mz^2 - s)^2*sw^4*
     (-1 + sw^2)^3), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/9)*2^(-2 - d)*EL^6*(-3 + 8*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
     (4*(-1 + d)^2*mz^2*(-1 + sw^2) + 
      ((9 - 4*d)*d*s + 4*(-1 + d)*mz^2*(-1 + sw^2))*GaugeXi[Q] - 
      d*s*GaugeXi[Q]^2))/((-1 + d)*d*mz^2*Pi^d*(mz^2 - s)*s^2*sw^2*
     (-1 + sw^2)*GaugeXi[Q]), ((I/9)*2^(-3 - d)*EL^6*(-3 + 8*sw^2)*
     (s + 4*mz^2*(-1 + sw^2))*(s^2 - 4*(-3 + 2*d)*mz^2*s*(-1 + sw^2) + 
      4*(-1 + d)*mz^4*(-1 + sw^2)^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
    ((-1 + d)*mz^4*Pi^d*(mz^2 - s)*s^2*sw^2*(-1 + sw^2)^2), 0, 0, 0, 
   ((-I/9)*2^(-2 - d)*EL^6*(-3 + 8*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
     (-4*(-1 + d)*mz^2*s*(-1 + sw^2) + (-s + 2*mz^2*(-1 + sw^2))*
       (-(d*s) + 2*(-4 + 5*d)*mz^2*(-1 + sw^2))*GaugeXi[Q]))/
    ((-1 + d)*d*mz^4*Pi^d*(mz^2 - s)*s^2*sw^2*(-1 + sw^2)^2*GaugeXi[Q]), 
   ((I/9)*2^(-3 - 2*d)*EL^6*(3 - 8*sw^2)*
     (-(s*(d*(2*Pi)^d*s^4 + 2^(1 + d)*Pi^d*s^2*(-s^2 + 2*s*t + 2*t^2) + 
         2^(2 + d)*mz^2*Pi^d*s*(1 - sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2) + 
         2^(2 + d)*mz^4*Pi^d*(-1 + sw^2)^2*((-2 + d)*s^2 + 4*s*t + 4*t^2))) + 
      2^(2 + d)*mz^2*Pi^d*(1 - sw^2)*(s - 2*mz^2*(-1 + sw^2))^2*
       ((-2 + d)*s^2 + 4*s*t + 4*t^2)*GaugeXi[Q]))/
    ((-1 + d)*mz^4*Pi^(2*d)*(mz^2 - s)*s^2*sw^2*(-1 + sw^2)^2), 
   ((-I/9)*2^(-2 - d)*EL^6*(-3 + 8*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
     (4*(-1 + d)*mz^2*s*(-1 + sw^2) - 
      (d*s^2 - (-8 + 3*d + 4*d^2)*mz^2*s*(-1 + sw^2) + 
        4*(-3 + 2*d + d^2)*mz^4*(-1 + sw^2)^2)*GaugeXi[Q] + 
      mz^2*(-1 + sw^2)*(d*s + 4*(-1 + d)^2*mz^2*(-1 + sw^2))*GaugeXi[Q]^2))/
    ((-1 + d)*d*mz^4*Pi^d*(mz^2 - s)*s^2*sw^2*(-1 + sw^2)^2*GaugeXi[Q]), 
   ((I/9)*EL^6*(3 - 8*sw^2)*(-(d*(2*Pi)^d*s^4) + 2^(1 + d)*Pi^d*s^2*
       ((-1 + d)*s^2 + 2*s*t + 2*t^2) + 2^(1 + d)*(-3 + 2*d)*mz^2*Pi^d*s*
       (1 - sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2) + mz^4*(-1 + sw^2)^2*
       (d*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*(-s^2 + 2*s*t + 2*t^2)) - 
      2^(1 + d)*mz^2*Pi^d*(1 - sw^2)*(s - mz^2*(-1 + sw^2))*
       ((-2 + d)*s^2 + 4*s*t + 4*t^2)*GaugeXi[Q] + mz^4*(-1 + sw^2)^2*
       (-(d*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*((-1 + d)*s^2 + 2*s*t + 2*t^2))*
       GaugeXi[Q]^2))/(2^(2*(1 + d))*(-1 + d)*mz^4*Pi^(2*d)*(mz^2 - s)*s*
     (sw - sw^3)^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((I/9)*2^(-6 - d)*EL^6*(s^2*(3*d^2*(-3 + 8*sw^2) + 
        4*d*(9 - 15*sw^2 - 32*sw^4 + 32*sw^6) - 
        4*(9 - 6*sw^2 - 64*sw^4 + 64*sw^6)) + 
      2*s*(-15*d*(-3 + 8*sw^2) + 3*d^2*(-3 + 8*sw^2) + 
        8*(-9 + 33*sw^2 - 32*sw^4 + 32*sw^6))*t + 
      4*(-9 + 60*sw^2 - 128*sw^4 + 128*sw^6)*t^2)*
     (-4*(-1 + d)^2*mz^2*(-1 + sw^2) + 
      (d*(-9 + 4*d)*s - 4*(-1 + d)*mz^2*(-1 + sw^2))*GaugeXi[Q] + 
      d*s*GaugeXi[Q]^2))/((-1 + d)*d*mz^2*Pi^d*(mz^2 - s)^2*s*sw^4*
     (-1 + sw^2)^2*GaugeXi[Q]), 
   ((I/9)*EL^6*(-(8^(-1 + d)*Pi^(3*d)*s*(-1 + 4*sw^2)*(9 - 24*sw^2 + 32*sw^4)*
        (s^2 + 4*mz^2*s*(-1 + sw^2) + 4*(-1 + d)*mz^4*(-1 + sw^2)^2)*
        (d*s^2 + 4*d*mz^2*s*(-1 + sw^2) + 4*(-1 + d)*mz^4*(-1 + sw^2)^2)*
        (-1 + GaugeXi[Q])^2) - 2^(-3 + 2*d)*Pi^(2*d)*s*(-1 + 4*sw^2)*
       (9 - 24*sw^2 + 32*sw^4)*(d*s^2 + 4*d*mz^2*s*(-1 + sw^2) + 
        4*(-1 + d)*mz^4*(-1 + sw^2)^2)*((2*Pi)^d*s^2 + 2^(2 + d)*mz^2*Pi^d*s*
         (-1 + sw^2) + 2^(2 + d)*(-1 + d)*mz^4*Pi^d*(-1 + sw^2)^2)*
       (-1 + GaugeXi[Q])^2 + 8^(-1 + d)*(-1 + d)*Pi^(3*d)*
       (s + 2*mz^2*(-1 + sw^2))^2*(s^2 + 4*mz^2*s*(-1 + sw^2) + 
        4*(-1 + d)*mz^4*(-1 + sw^2)^2)*(3*d*s*(-3 + 8*sw^2) + 
        2*s*(9 - 6*sw^2 - 64*sw^4 + 64*sw^6) + 
        2*(9 - 60*sw^2 + 128*sw^4 - 128*sw^6)*t)*(-1 + GaugeXi[Q])^2 + 
      8^(-1 + d)*Pi^(3*d)*(s^2 + 4*mz^2*s*(-1 + sw^2) + 
        4*(-1 + d)*mz^4*(-1 + sw^2)^2)*(d*s*(9 - 24*sw^2) + 
        4*s*(-9 + 33*sw^2 - 32*sw^4 + 32*sw^6) + 
        2*(-9 + 60*sw^2 - 128*sw^4 + 128*sw^6)*t)*
       (4*(-1 + d)*mz^4*(-1 + sw^2)^2 + s*(d*s + 2*t) + 
        4*mz^2*(-1 + sw^2)*(d*s + 2*t))*(-1 + GaugeXi[Q])^2 - 
      2*(1 - d)*(-(sw^2*(3 - 4*sw^2)^2*((-4 + d)*(2*Pi)^(3*d)*s^4*t - 
            8^(1 + d)*(-1 + d)*mz^8*Pi^(3*d)*(-1 + sw^2)^4*((-4 + d)*s + 
              2*t) + 8^(1 + d)*mz^6*Pi^(3*d)*s*(1 - sw^2)^3*
             ((-4 + d)*s - 2*(3 - 5*d + d^2)*t) - 2^(1 + 3*d)*mz^4*Pi^(3*d)*s*
             (-1 + sw^2)^2*((60 - 47*d + 8*d^2)*s^2 + 2*(45 - 39*d + 7*d^2)*s*
               t - 32*t^2) + 2^(2 + 3*d)*mz^2*Pi^(3*d)*s^2*(1 - sw^2)*
             ((8 - 6*d + d^2)*s^2 + 2*(8 - 6*d + d^2)*s*t - 4*t^2)))/4 + 
        4*sw^4*(1/2 - sw^2)*((-4 + d)*(2*Pi)^(3*d)*s^4*t - 
          8^(1 + d)*(-1 + d)*mz^8*Pi^(3*d)*(-1 + sw^2)^4*((-4 + d)*s + 2*t) + 
          8^(1 + d)*mz^6*Pi^(3*d)*s*(1 - sw^2)^3*((-4 + d)*s - 
            2*(3 - 5*d + d^2)*t) - 2^(1 + 3*d)*mz^4*Pi^(3*d)*s*(-1 + sw^2)^2*
           ((60 - 47*d + 8*d^2)*s^2 + 2*(45 - 39*d + 7*d^2)*s*t - 32*t^2) + 
          2^(2 + 3*d)*mz^2*Pi^(3*d)*s^2*(1 - sw^2)*((8 - 6*d + d^2)*s^2 + 
            2*(8 - 6*d + d^2)*s*t - 4*t^2)) - 
        4*sw^6*(8^(1 + d)*(-1 + d)*mz^8*Pi^(3*d)*(-1 + sw^2)^4*
           ((-2 + d)*s - 2*t) - (-2 + d)*(2*Pi)^(3*d)*s^4*t + 
          8^(1 + d)*mz^6*Pi^(3*d)*s*(-1 + sw^2)^3*((-2 + d)*s - 
            2*(3 - 3*d + d^2)*t) - 2^(2 + 3*d)*mz^2*Pi^(3*d)*s^2*(1 - sw^2)*
           ((-2 + d)^2*s^2 + 2*(10 - 6*d + d^2)*s*t + 4*t^2) + 
          2^(1 + 3*d)*mz^4*Pi^(3*d)*s*(-1 + sw^2)^2*
           ((30 - 31*d + 8*d^2)*s^2 + 2*(69 - 41*d + 7*d^2)*s*t + 32*t^2)) + 
        ((3 - 4*sw^2)^2*(1/2 - sw^2)*(8^(1 + d)*(-1 + d)*mz^8*Pi^(3*d)*
            (-1 + sw^2)^4*((-2 + d)*s - 2*t) - (-2 + d)*(2*Pi)^(3*d)*s^4*t + 
           8^(1 + d)*mz^6*Pi^(3*d)*s*(-1 + sw^2)^3*((-2 + d)*s - 
             2*(3 - 3*d + d^2)*t) - 2^(2 + 3*d)*mz^2*Pi^(3*d)*s^2*(1 - sw^2)*
            ((-2 + d)^2*s^2 + 2*(10 - 6*d + d^2)*s*t + 4*t^2) + 
           2^(1 + 3*d)*mz^4*Pi^(3*d)*s*(-1 + sw^2)^2*
            ((30 - 31*d + 8*d^2)*s^2 + 2*(69 - 41*d + 7*d^2)*s*t + 32*t^2)))/
         4)*(-1 + GaugeXi[Q])^2 + ((-1 + d)*(s + 2*mz^2*(-1 + sw^2))^2*
        (s^2 + 4*mz^2*s*(-1 + sw^2) + 4*(-1 + d)*mz^4*(-1 + sw^2)^2)*
        (3*d*s*(-3 + 8*sw^2) + 2*s*(9 - 6*sw^2 - 64*sw^4 + 64*sw^6) + 
         2*(9 - 60*sw^2 + 128*sw^4 - 128*sw^6)*t)*((2*Pi)^(3*d) - 
         2^(1 + 3*d)*Pi^(3*d)*GaugeXi[Q] + (2*Pi)^(3*d)*GaugeXi[Q]^2))/8))/
    (2^(4*(1 + d))*mz^4*Pi^(4*d)*(mz^2 - s)^2*(s - d*s)*sw^4*(1 - sw^2)^3*
     (-1 + GaugeXi[Q])^2), 0, 0, 0, 
   ((-I/9)*2^(-6 - 5*d)*EL^6*
     (-4*mz^2*s*(-3*d^2*(2*Pi)^(4*d)*s^2*(15 - 43*sw^2 + d*(-3 + 11*sw^2)) + 
        2^(1 + 4*d)*Pi^(4*d)*(2*s^2*(-9 + 15*sw^2 + 58*sw^4 + 6*d^3*sw^4 - 
            128*sw^6 + 64*sw^8 + d^2*sw^4*(11 - 64*sw^2 + 32*sw^4) - 
            3*d*(-6 + 13*sw^2 + 25*sw^4 - 64*sw^6 + 32*sw^8)) + 
          s*(-1 + sw^2)*(-18*d^2*(-3 + 8*sw^2) + 3*d^3*(-3 + 8*sw^2) - 
            8*(-9 + 33*sw^2 - 32*sw^4 + 32*sw^6) + d*(-117 + 384*sw^2 - 
              256*sw^4 + 256*sw^6))*t + 2*(-1 + d)*(9 - 69*sw^2 + 188*sw^4 - 
            256*sw^6 + 128*sw^8)*t^2)) + (-9*d^3*(2*Pi)^(4*d)*s^4 + 
        2^(1 + 4*d)*d*Pi^(4*d)*s^2*(2*s^2*(-9 + 6*sw^2 + 6*d^2*sw^2 + 
            64*sw^4 - 64*sw^6 + d*(9 - 15*sw^2 - 32*sw^4 + 32*sw^6)) + 
          s*(-15*d*(-3 + 8*sw^2) + 3*d^2*(-3 + 8*sw^2) + 
            8*(-9 + 33*sw^2 - 32*sw^4 + 32*sw^6))*t + 
          2*(-9 + 60*sw^2 - 128*sw^4 + 128*sw^6)*t^2) + 
        4*mz^4*(-15*d^3*(2*Pi)^(4*d)*s^2*(3 + 19*sw^4) + 2^(1 + 4*d)*Pi^(4*d)*
           (s^2*(15*d^3*sw^2*(7 + 4*sw^4) + 8*(-1 + sw^2)^2*(9 - 6*sw^2 - 
                64*sw^4 + 64*sw^6) + 2*d^2*(-1 + sw^2)^2*(54 - 99*sw^2 - 
                160*sw^4 + 160*sw^6) - 2*d*(-1 + sw^2)^2*(81 - 90*sw^2 - 
                448*sw^4 + 448*sw^6)) + s*(-1 + sw^2)^2*
             (-87*d^2*(-3 + 8*sw^2) + 15*d^3*(-3 + 8*sw^2) - 
              32*(-9 + 33*sw^2 - 32*sw^4 + 32*sw^6) + 20*d*(-27 + 90*sw^2 - 
                64*sw^4 + 64*sw^6))*t + 2*(-4 + 5*d)*(-1 + sw^2)^2*
             (-9 + 60*sw^2 - 128*sw^4 + 128*sw^6)*t^2)) - 
        4*d*mz^2*s*(-3*d^2*(2*Pi)^(4*d)*s^2*(-3 + 11*sw^2) + 
          2^(1 + 4*d)*Pi^(4*d)*(2*s^2*(9 - 15*sw^2 - 58*sw^4 + 6*d^2*sw^4 + 
              128*sw^6 - 64*sw^8 + d*(-9 + 24*sw^2 + 17*sw^4 - 64*sw^6 + 
                32*sw^8)) + s*(-1 + sw^2)*(-15*d*(-3 + 8*sw^2) + 
              3*d^2*(-3 + 8*sw^2) + 8*(-9 + 33*sw^2 - 32*sw^4 + 32*sw^6))*t + 
            2*(9 - 69*sw^2 + 188*sw^4 - 256*sw^6 + 128*sw^8)*t^2)))*
       GaugeXi[Q] - 2*(-9*d^3*(2*Pi)^(4*d)*s^4 + 2^(1 + 4*d)*d*Pi^(4*d)*s^2*
         (2*s^2*(-9 + 6*sw^2 + 6*d^2*sw^2 + 64*sw^4 - 64*sw^6 + 
            d*(9 - 15*sw^2 - 32*sw^4 + 32*sw^6)) + 
          s*(-15*d*(-3 + 8*sw^2) + 3*d^2*(-3 + 8*sw^2) + 
            8*(-9 + 33*sw^2 - 32*sw^4 + 32*sw^6))*t + 
          2*(-9 + 60*sw^2 - 128*sw^4 + 128*sw^6)*t^2) + 
        4*mz^4*(-15*d^3*(2*Pi)^(4*d)*s^2*(3 + 19*sw^4) + 2^(1 + 4*d)*Pi^(4*d)*
           (s^2*(15*d^3*sw^2*(7 + 4*sw^4) + 8*(-1 + sw^2)^2*(9 - 6*sw^2 - 
                64*sw^4 + 64*sw^6) + 2*d^2*(-1 + sw^2)^2*(54 - 99*sw^2 - 
                160*sw^4 + 160*sw^6) - 2*d*(-1 + sw^2)^2*(81 - 90*sw^2 - 
                448*sw^4 + 448*sw^6)) + s*(-1 + sw^2)^2*
             (-87*d^2*(-3 + 8*sw^2) + 15*d^3*(-3 + 8*sw^2) - 
              32*(-9 + 33*sw^2 - 32*sw^4 + 32*sw^6) + 20*d*(-27 + 90*sw^2 - 
                64*sw^4 + 64*sw^6))*t + 2*(-4 + 5*d)*(-1 + sw^2)^2*
             (-9 + 60*sw^2 - 128*sw^4 + 128*sw^6)*t^2)) - 
        2*mz^2*s*(-3*d^2*(2*Pi)^(4*d)*s^2*(69 - 193*sw^2 + 
            5*d*(-3 + 11*sw^2)) + 2^(1 + 4*d)*Pi^(4*d)*
           (2*s^2*(30*d^3*sw^4 + d^2*sw^4*(67 - 320*sw^2 + 160*sw^4) + 
              d*(72 - 147*sw^2 - 341*sw^4 + 832*sw^6 - 416*sw^8) + 
              3*(-9 + 15*sw^2 + 58*sw^4 - 128*sw^6 + 64*sw^8)) + 
            s*(-1 + sw^2)*(-84*d^2*(-3 + 8*sw^2) + 15*d^3*(-3 + 8*sw^2) - 
              24*(-9 + 33*sw^2 - 32*sw^4 + 32*sw^6) + 5*d*(-99 + 336*sw^2 - 
                256*sw^4 + 256*sw^6))*t + 2*(-3 + 5*d)*(9 - 69*sw^2 + 
              188*sw^4 - 256*sw^6 + 128*sw^8)*t^2)))*GaugeXi[Q]^2 + 
      (-9*d^3*(2*Pi)^(4*d)*s^4 + 2^(1 + 4*d)*d*Pi^(4*d)*s^2*
         (2*s^2*(-9 + 6*sw^2 + 6*d^2*sw^2 + 64*sw^4 - 64*sw^6 + 
            d*(9 - 15*sw^2 - 32*sw^4 + 32*sw^6)) + 
          s*(-15*d*(-3 + 8*sw^2) + 3*d^2*(-3 + 8*sw^2) + 
            8*(-9 + 33*sw^2 - 32*sw^4 + 32*sw^6))*t + 
          2*(-9 + 60*sw^2 - 128*sw^4 + 128*sw^6)*t^2) + 
        4*mz^4*(-15*d^3*(2*Pi)^(4*d)*s^2*(3 + 19*sw^4) + 2^(1 + 4*d)*Pi^(4*d)*
           (s^2*(15*d^3*sw^2*(7 + 4*sw^4) + 8*(-1 + sw^2)^2*(9 - 6*sw^2 - 
                64*sw^4 + 64*sw^6) + 2*d^2*(-1 + sw^2)^2*(54 - 99*sw^2 - 
                160*sw^4 + 160*sw^6) - 2*d*(-1 + sw^2)^2*(81 - 90*sw^2 - 
                448*sw^4 + 448*sw^6)) + s*(-1 + sw^2)^2*
             (-87*d^2*(-3 + 8*sw^2) + 15*d^3*(-3 + 8*sw^2) - 
              32*(-9 + 33*sw^2 - 32*sw^4 + 32*sw^6) + 20*d*(-27 + 90*sw^2 - 
                64*sw^4 + 64*sw^6))*t + 2*(-4 + 5*d)*(-1 + sw^2)^2*
             (-9 + 60*sw^2 - 128*sw^4 + 128*sw^6)*t^2)) - 
        4*mz^2*s*(-9*d^3*(2*Pi)^(4*d)*s^2*(-3 + 11*sw^2) + 
          2^(1 + 4*d)*Pi^(4*d)*(s^2*(36*d^3*sw^4 + 3*d^2*(-21 + 59*sw^2 + 
                26*sw^4 - 128*sw^6 + 64*sw^8) + 4*(-9 + 15*sw^2 + 58*sw^4 - 
                128*sw^6 + 64*sw^8) - 2*d*(-45 + 93*sw^2 + 208*sw^4 - 
                512*sw^6 + 256*sw^8)) + s*(-1 + sw^2)*
             (-51*d^2*(-3 + 8*sw^2) + 9*d^3*(-3 + 8*sw^2) - 
              16*(-9 + 33*sw^2 - 32*sw^4 + 32*sw^6) + 6*d*(-51 + 172*sw^2 - 
                128*sw^4 + 128*sw^6))*t + 2*(-2 + 3*d)*(9 - 69*sw^2 + 
              188*sw^4 - 256*sw^6 + 128*sw^8)*t^2)))*GaugeXi[Q]^3))/
    ((-1 + d)*d*mz^4*Pi^(5*d)*(mz^2 - s)^2*s*sw^4*(-1 + sw^2)^3*
     (-1 + GaugeXi[Q])^2*GaugeXi[Q]), 
   ((I/9)*2^(-7 - 3*d)*EL^6*(2^(1 + 2*d)*(-1 + d)*Pi^(2*d)*
       (s - 2*mz^2*(-1 + sw^2))^2*(3*d*s*(-3 + 8*sw^2) + 
        2*s*(9 - 6*sw^2 - 64*sw^4 + 64*sw^6) + 
        2*(9 - 60*sw^2 + 128*sw^4 - 128*sw^6)*t)*(-1 + GaugeXi[Q])^2*
       (s + 2*mz^2*(-1 + sw^2)*GaugeXi[Q])^2 - (2*Pi)^(2*d)*s*(-1 + 4*sw^2)*
       (9 - 24*sw^2 + 32*sw^4)*(s - 2*mz^2*(-1 + sw^2))^2*(-1 + GaugeXi[Q])^2*
       (d*s^2 + 4*d*mz^2*s*(-1 + sw^2)*GaugeXi[Q] + 4*(-1 + d)*mz^4*
         (-1 + sw^2)^2*GaugeXi[Q]^2) - (2*Pi)^d*s*(-1 + 4*sw^2)*
       (9 - 24*sw^2 + 32*sw^4)*((2*Pi)^d*s^2 - 2^(2 + d)*mz^2*Pi^d*s*
         (-1 + sw^2) + 2^(2 + d)*mz^4*Pi^d*(-1 + sw^2)^2)*(-1 + GaugeXi[Q])^2*
       (d*s^2 + 4*d*mz^2*s*(-1 + sw^2)*GaugeXi[Q] + 4*(-1 + d)*mz^4*
         (-1 + sw^2)^2*GaugeXi[Q]^2) + (s - 2*mz^2*(-1 + sw^2))^2*
       (d*s*(9 - 24*sw^2) + 4*s*(-9 + 33*sw^2 - 32*sw^4 + 32*sw^6) + 
        2*(-9 + 60*sw^2 - 128*sw^4 + 128*sw^6)*t)*((2*Pi)^(2*d) - 
        2^(1 + 2*d)*Pi^(2*d)*GaugeXi[Q] + (2*Pi)^(2*d)*GaugeXi[Q]^2)*
       (s*(d*s + 2*t) + 4*mz^2*(-1 + sw^2)*(d*s + 2*t)*GaugeXi[Q] + 
        4*(-1 + d)*mz^4*(-1 + sw^2)^2*GaugeXi[Q]^2) + 
      2^(1 + 2*d)*(1 - d)*Pi^(2*d)*(s - 2*mz^2*(-1 + sw^2))^2*
       (-1 + GaugeXi[Q])^2*(s^2*(d*(9 - 24*sw^2) - 
          2*(9 - 6*sw^2 - 64*sw^4 + 64*sw^6))*t - 4*mz^2*s*(-1 + sw^2)*
         (3*d*(-3 + 8*sw^2) + 2*(9 - 6*sw^2 - 64*sw^4 + 64*sw^6))*t*
         GaugeXi[Q] + 2*mz^4*(-1 + sw^2)^2*(3*d*s*(-3 + 8*sw^2) + 
          2*s*(9 - 6*sw^2 - 64*sw^4 + 64*sw^6) + 2*(9 - 60*sw^2 + 128*sw^4 - 
            128*sw^6)*t)*GaugeXi[Q]^2)))/(mz^4*Pi^(3*d)*(mz^2 - s)^2*
     (s - d*s)*sw^4*(1 - sw^2)^3*(-1 + GaugeXi[Q])^2), 
   ((-I/9)*2^(-6 - 7*d)*EL^6*
     (4*mz^2*s*(-3*d^2*(2*Pi)^(6*d)*s^2*(15 - 43*sw^2 + d*(-3 + 11*sw^2)) + 
        2^(1 + 6*d)*Pi^(6*d)*(2*s^2*(-9 + 15*sw^2 + 58*sw^4 + 6*d^3*sw^4 - 
            128*sw^6 + 64*sw^8 + d^2*sw^4*(11 - 64*sw^2 + 32*sw^4) - 
            3*d*(-6 + 13*sw^2 + 25*sw^4 - 64*sw^6 + 32*sw^8)) + 
          s*(-1 + sw^2)*(-18*d^2*(-3 + 8*sw^2) + 3*d^3*(-3 + 8*sw^2) - 
            8*(-9 + 33*sw^2 - 32*sw^4 + 32*sw^6) + d*(-117 + 384*sw^2 - 
              256*sw^4 + 256*sw^6))*t + 2*(-1 + d)*(9 - 69*sw^2 + 188*sw^4 - 
            256*sw^6 + 128*sw^8)*t^2)) - (-9*d^3*(2*Pi)^(6*d)*s^4 + 
        2^(1 + 6*d)*d*Pi^(6*d)*s^2*(2*s^2*(-9 + 6*sw^2 + 6*d^2*sw^2 + 
            64*sw^4 - 64*sw^6 + d*(9 - 15*sw^2 - 32*sw^4 + 32*sw^6)) + 
          s*(-15*d*(-3 + 8*sw^2) + 3*d^2*(-3 + 8*sw^2) + 
            8*(-9 + 33*sw^2 - 32*sw^4 + 32*sw^6))*t + 
          2*(-9 + 60*sw^2 - 128*sw^4 + 128*sw^6)*t^2) + 
        4*mz^4*(-3*d^2*(-7 + d^2)*(2*Pi)^(6*d)*s^2*(3 + 19*sw^4) + 
          2^(1 + 6*d)*Pi^(6*d)*(s^2*(-21*d^2*sw^2*(7 + 4*sw^4) + 
              3*d^4*sw^2*(7 + 4*sw^4) + 6*(-1 + sw^2)^2*(9 - 6*sw^2 - 
                64*sw^4 + 64*sw^6) + d^3*(-1 + sw^2)^2*(9 - 6*sw^2 - 
                64*sw^4 + 64*sw^6) - 2*d*(-1 + sw^2)^2*(45 - 57*sw^2 - 
                224*sw^4 + 224*sw^6)) + s*(-1 + sw^2)^2*
             (-9*d^3*(-3 + 8*sw^2) + 3*d^4*(-3 + 8*sw^2) - 24*(-9 + 33*sw^2 - 
                32*sw^4 + 32*sw^6) + d^2*(45 - 48*sw^2 - 256*sw^4 + 
                256*sw^6) + d*(-279 + 888*sw^2 - 512*sw^4 + 512*sw^6))*t + 
            2*(-3 + 2*d + d^2)*(-1 + sw^2)^2*(-9 + 60*sw^2 - 128*sw^4 + 
              128*sw^6)*t^2)) - d*mz^2*s*(9*d^2*(2*Pi)^(6*d)*s^2*
           (-21 + 61*sw^2) + 2^(1 + 6*d)*Pi^(6*d)*
           (2*s^2*(3*d^3*(3 - 11*sw^2 + 8*sw^4) + 2*d^2*sw^4*(19 - 128*sw^2 + 
                64*sw^4) + d*(81 - 180*sw^2 - 317*sw^4 + 832*sw^6 - 
                416*sw^8) + 5*(-9 + 15*sw^2 + 58*sw^4 - 128*sw^6 + 
                64*sw^8)) + s*(-1 + sw^2)*(-75*d^2*(-3 + 8*sw^2) + 
              12*d^3*(-3 + 8*sw^2) - 40*(-9 + 33*sw^2 - 32*sw^4 + 32*sw^6) + 
              d*(-513 + 1656*sw^2 - 1024*sw^4 + 1024*sw^6))*t + 
            2*(-5 + 4*d)*(9 - 69*sw^2 + 188*sw^4 - 256*sw^6 + 128*sw^8)*
             t^2)))*GaugeXi[Q] + 
      (2*d*s^2*(-9*d^2*(2*Pi)^(6*d)*s^2 + 2^(1 + 6*d)*Pi^(6*d)*
           (2*s^2*(-9 + 6*sw^2 + 6*d^2*sw^2 + 64*sw^4 - 64*sw^6 + 
              d*(9 - 15*sw^2 - 32*sw^4 + 32*sw^6)) + 
            s*(-15*d*(-3 + 8*sw^2) + 3*d^2*(-3 + 8*sw^2) + 8*(-9 + 33*sw^2 - 
                32*sw^4 + 32*sw^6))*t + 2*(-9 + 60*sw^2 - 128*sw^4 + 
              128*sw^6)*t^2)) + 4*mz^4*(-(d^2*(2*Pi)^(6*d)*s^2*
            (-9 - 857*sw^4 + 9*d^2*(3 + 19*sw^4))) + 2^(1 + 6*d)*Pi^(6*d)*
           (s^2*(9*d^4*sw^2*(7 + 4*sw^4) + 3*d^3*(-1 + sw^2)^2*(15 - 
                22*sw^2 - 64*sw^4 + 64*sw^6) + 10*(-1 + sw^2)^2*(9 - 6*sw^2 - 
                64*sw^4 + 64*sw^6) - 6*d*(-1 + sw^2)^2*(21 - 29*sw^2 - 
                96*sw^4 + 96*sw^6) - d^2*sw^2*(93 + 852*sw^4 - 768*sw^6 + 
                256*sw^8)) + s*(-1 + sw^2)^2*(-39*d^3*(-3 + 8*sw^2) + 
              9*d^4*(-3 + 8*sw^2) - 40*(-9 + 33*sw^2 - 32*sw^4 + 32*sw^6) + 
              d*(-369 + 1128*sw^2 - 512*sw^4 + 512*sw^6) + d^2*(-81 + 
                432*sw^2 - 768*sw^4 + 768*sw^6))*t + 2*(-5 + 2*d + 3*d^2)*
             (-1 + sw^2)^2*(-9 + 60*sw^2 - 128*sw^4 + 128*sw^6)*t^2)) - 
        mz^2*s*(3*d^3*(2*Pi)^(6*d)*s^2*(-93 + 245*sw^2) + 
          2^(1 + 6*d)*Pi^(6*d)*(2*s^2*(6*d^4*(3 - 11*sw^2 + 8*sw^4) + 
              2*d^3*sw^4*(71 - 256*sw^2 + 128*sw^4) + d^2*(36 + 3*sw^2 - 
                519*sw^4 + 960*sw^6 - 480*sw^8) + d*(117 - 303*sw^2 - 
                262*sw^4 + 896*sw^6 - 448*sw^8) + 12*(-9 + 15*sw^2 + 
                58*sw^4 - 128*sw^6 + 64*sw^8)) + s*(-1 + sw^2)*
             (-117*d^3*(-3 + 8*sw^2) + 24*d^4*(-3 + 8*sw^2) - 
              96*(-9 + 33*sw^2 - 32*sw^4 + 32*sw^6) + 4*d*(-153 + 426*sw^2 - 
                64*sw^4 + 64*sw^6) + d^2*(-423 + 1704*sw^2 - 2048*sw^4 + 
                2048*sw^6))*t + 2*(-12 + d + 8*d^2)*(9 - 69*sw^2 + 188*sw^4 - 
              256*sw^6 + 128*sw^8)*t^2)))*GaugeXi[Q]^2 + 
      (9*d^3*(2*Pi)^(6*d)*s^4 + 2^(1 + 6*d)*d*Pi^(6*d)*s^2*
         (-2*s^2*(-9 + 6*sw^2 + 6*d^2*sw^2 + 64*sw^4 - 64*sw^6 + 
            d*(9 - 15*sw^2 - 32*sw^4 + 32*sw^6)) + 
          s*(d^2*(9 - 24*sw^2) + 15*d*(-3 + 8*sw^2) - 
            8*(-9 + 33*sw^2 - 32*sw^4 + 32*sw^6))*t + 
          2*(9 - 60*sw^2 + 128*sw^4 - 128*sw^6)*t^2) - 
        4*mz^4*(-(d^2*(2*Pi)^(6*d)*s^2*(171 - 517*sw^4 + 
             9*d^2*(3 + 19*sw^4))) + 2^(1 + 6*d)*Pi^(6*d)*
           (s^2*(9*d^4*sw^2*(7 + 4*sw^4) + 6*d*(-1 + sw^2)^2*(3 + sw^2 - 
                32*sw^4 + 32*sw^6) + 3*d^3*(-1 + sw^2)^2*(21 - 38*sw^2 - 
                64*sw^4 + 64*sw^6) + 2*(-1 + sw^2)^2*(9 - 6*sw^2 - 64*sw^4 + 
                64*sw^6) + d^2*sw^2*(255 - 1452*sw^4 + 1536*sw^6 - 
                512*sw^8)) + s*(-1 + sw^2)^2*(-51*d^3*(-3 + 8*sw^2) + 
              9*d^4*(-3 + 8*sw^2) + d*(99 - 408*sw^2 + 512*sw^4 - 512*sw^6) - 
              8*(-9 + 33*sw^2 - 32*sw^4 + 32*sw^6) + 3*d^2*(-99 + 336*sw^2 - 
                256*sw^4 + 256*sw^6))*t + 2*(-1 - 2*d + 3*d^2)*(-1 + sw^2)^2*
             (-9 + 60*sw^2 - 128*sw^4 + 128*sw^6)*t^2)) + 
        mz^2*s*(27*d^3*(2*Pi)^(6*d)*s^2*(-5 + 13*sw^2) + 2^(1 + 6*d)*Pi^(6*d)*
           (2*s^2*(3*d^4*(3 - 11*sw^2 + 8*sw^4) + 2*d^3*sw^4*(37 - 128*sw^2 + 
                64*sw^4) + d*(81 - 207*sw^2 - 194*sw^4 + 640*sw^6 - 
                320*sw^8) + d^2*(9 + 30*sw^2 - 263*sw^4 + 448*sw^6 - 
                224*sw^8) + 8*(-9 + 15*sw^2 + 58*sw^4 - 128*sw^6 + 
                64*sw^8)) + s*(-1 + sw^2)*(-57*d^3*(-3 + 8*sw^2) + 
              12*d^4*(-3 + 8*sw^2) - 64*(-9 + 33*sw^2 - 32*sw^4 + 32*sw^6) + 
              8*d*(-54 + 153*sw^2 - 32*sw^4 + 32*sw^6) + d^2*(-171 + 
                744*sw^2 - 1024*sw^4 + 1024*sw^6))*t + 2*(-8 + d + 4*d^2)*
             (9 - 69*sw^2 + 188*sw^4 - 256*sw^6 + 128*sw^8)*t^2)))*
       GaugeXi[Q]^3 + mz^2*(-3*d^3*(2*Pi)^(6*d)*s^3*(-3 + 11*sw^2) + 
        2^(1 + 6*d)*d*Pi^(6*d)*s*(2*s^2*(9 - 15*sw^2 - 58*sw^4 + 6*d^2*sw^4 + 
            128*sw^6 - 64*sw^8 + d*(-9 + 24*sw^2 + 17*sw^4 - 64*sw^6 + 
              32*sw^8)) + s*(-1 + sw^2)*(-15*d*(-3 + 8*sw^2) + 
            3*d^2*(-3 + 8*sw^2) + 8*(-9 + 33*sw^2 - 32*sw^4 + 32*sw^6))*t + 
          2*(9 - 69*sw^2 + 188*sw^4 - 256*sw^6 + 128*sw^8)*t^2) + 
        4*mz^2*(-(d^2*(2*Pi)^(6*d)*s^2*(117 - 59*sw^4 + d^2*(9 + 57*sw^4))) + 
          2^(1 + 6*d)*Pi^(6*d)*(s^2*(3*d^4*sw^2*(7 + 4*sw^4) + 
              2*d*(-1 + sw^2)^3*(-27 + 160*sw^4) + d^3*(-1 + sw^2)^2*(27 - 
                54*sw^2 - 64*sw^4 + 64*sw^6) - 2*(-1 + sw^2)^2*(9 - 6*sw^2 - 
                64*sw^4 + 64*sw^6) + d^2*sw^2*(201 - 684*sw^4 + 768*sw^6 - 
                256*sw^8)) + (-1 + d)^2*s*(-1 + sw^2)^2*
             (-15*d*(-3 + 8*sw^2) + 3*d^2*(-3 + 8*sw^2) + 8*(-9 + 33*sw^2 - 
                32*sw^4 + 32*sw^6))*t + 2*(-1 + d)^2*(-1 + sw^2)^2*
             (-9 + 60*sw^2 - 128*sw^4 + 128*sw^6)*t^2)))*GaugeXi[Q]^4))/
    ((-1 + d)*d*mz^4*Pi^(7*d)*(mz^2 - s)^2*s*sw^4*(-1 + sw^2)^3*
     (-1 + GaugeXi[Q])^2*GaugeXi[Q]), 
   ((-I/9)*2^(-6 - d)*EL^6*(s^2*(3*d^2*(-3 + 8*sw^2) + 
        4*d*(9 - 15*sw^2 - 32*sw^4 + 32*sw^6) - 
        4*(9 - 6*sw^2 - 64*sw^4 + 64*sw^6)) + 
      2*s*(-15*d*(-3 + 8*sw^2) + 3*d^2*(-3 + 8*sw^2) + 
        8*(-9 + 33*sw^2 - 32*sw^4 + 32*sw^6))*t + 
      4*(-9 + 60*sw^2 - 128*sw^4 + 128*sw^6)*t^2)*
     (s^2 - 2*(-3 + 2*d)*mz^2*s*(-1 + sw^2) + mz^4*(-1 + sw^2)^2 - 
      2*mz^2*(-1 + sw^2)*(-s + mz^2*(-1 + sw^2))*GaugeXi[Q] + 
      mz^4*(-1 + sw^2)^2*GaugeXi[Q]^2))/((-1 + d)*mz^4*Pi^d*(mz^2 - s)^2*sw^4*
     (-1 + sw^2)^3), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((I/9)*2^(-4 - d)*EL^6*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
        4*d*(-3 - 5*sw^2 + 8*sw^4)) + 2*s*(-15*d + 3*d^2 + 
        8*(3 - 5*sw^2 + 8*sw^4))*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2)*
     (-4*(-1 + d)^2*mz^2*(-1 + sw^2) + 
      (d*(-9 + 4*d)*s - 4*(-1 + d)*mz^2*(-1 + sw^2))*GaugeXi[Q] + 
      d*s*GaugeXi[Q]^2))/((-1 + d)*d*Pi^d*s*(mz^3 - mz*s)^2*sw^4*(-1 + sw^2)*
     GaugeXi[Q]), ((-I/9)*2^(-5 - 4*d)*EL^6*
     ((2*Pi)^(3*d)*s*(-1 + 4*sw^2)*(-3 + 8*sw^2)*
       (s^2 + 4*mz^2*s*(-1 + sw^2) + 4*(-1 + d)*mz^4*(-1 + sw^2)^2)*
       (d*s^2 + 4*d*mz^2*s*(-1 + sw^2) + 4*(-1 + d)*mz^4*(-1 + sw^2)^2)*
       (-1 + GaugeXi[Q])^2 + (2*Pi)^(2*d)*s*(-1 + 4*sw^2)*(-3 + 8*sw^2)*
       (d*s^2 + 4*d*mz^2*s*(-1 + sw^2) + 4*(-1 + d)*mz^4*(-1 + sw^2)^2)*
       ((2*Pi)^d*s^2 + 2^(2 + d)*mz^2*Pi^d*s*(-1 + sw^2) + 
        2^(2 + d)*(-1 + d)*mz^4*Pi^d*(-1 + sw^2)^2)*(-1 + GaugeXi[Q])^2 + 
      (2*Pi)^(2*d)*(4*(-1 + d)*mz^4*(-1 + sw^2)^2 + s*(d*s + 2*t) + 
        4*mz^2*(-1 + sw^2)*(d*s + 2*t))*(2^(2 + d)*mz^2*Pi^d*s*(-1 + sw^2)*
         (3*d*s - 4*s*(3 - 5*sw^2 + 8*sw^4) - 2*(3 - 20*sw^2 + 32*sw^4)*t) - 
        s^2*(-3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(2*s*(3 - 5*sw^2 + 8*sw^4) + 
            (3 - 20*sw^2 + 32*sw^4)*t)) + 
        4*mz^4*(3*d*(2*Pi)^d*s*(-5 + d - 29*sw^4 + d*sw^4) + 
          2^(1 + d)*Pi^d*(s*(6 + (-22 + 25*d - 3*d^2)*sw^2 + 42*sw^4 + 
              42*(-1 + d)*sw^6 - 16*(-1 + d)*sw^8) - (-1 + d)*(-1 + sw^2)^2*
             (3 - 20*sw^2 + 32*sw^4)*t)))*(-1 + GaugeXi[Q])^2 - 
      (-1 + d)*(2*Pi)^(2*d)*(s + 2*mz^2*(-1 + sw^2))*
       (3*2^(1 + d)*mz^2*Pi^d*s^2*(-1 + sw^2)*
         (s*(-6 + 3*d - 20*sw^2 + 32*sw^4) - 2*(3 - 20*sw^2 + 32*sw^4)*t) + 
        s^3*(3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-3 - 10*sw^2 + 16*sw^4) + 
            (-3 + 20*sw^2 - 32*sw^4)*t)) - 4*mz^4*s*
         (-3*d*(2*Pi)^d*s*(-1 + d + 23*sw^4 + d*sw^4) + 2^(1 + d)*Pi^d*
           (s*(3 + (4 + 7*d + 3*d^2)*sw^2 - 33*sw^4 + 42*(1 + d)*sw^6 - 
              16*(1 + d)*sw^8) + (1 + d)*(-1 + sw^2)^2*(3 - 20*sw^2 + 
              32*sw^4)*t)) + 8*mz^6*(d*(2*Pi)^d*s*(9 - 7*sw^2 - 65*sw^4 + 
            147*sw^6 + 3*d*(-1 + sw^2)^3) + 2^(1 + d)*Pi^d*
           (s*(-3 - sw^2 + 37*sw^4 - 75*sw^6 - 58*(-1 + d)*sw^8 + 
              16*(-1 + d)*sw^10) - (-1 + d)*(-1 + sw^2)^3*(3 - 20*sw^2 + 
              32*sw^4)*t)))*(-1 + GaugeXi[Q])^2 - 
      8*(1 - d)*(sw^2*(2^(-1 + 3*d)*(-4 + d)*Pi^(3*d)*s^4*(-3 + 4*sw^2)*t - 
          2^(2 + 3*d)*(-1 + d)*mz^8*Pi^(3*d)*(-1 + sw^2)^4*(-3 + 4*sw^2)*
           ((-4 + d)*s + 2*t) - 2^(2 + 3*d)*mz^6*Pi^(3*d)*s*(-1 + sw^2)^3*
           (-3 + 4*sw^2)*((-4 + d)*s - 2*(3 - 5*d + d^2)*t) - 
          mz^4*(2*Pi)^(3*d)*s*(-1 + sw^2)^2*(-3 + 4*sw^2)*
           ((60 - 47*d + 8*d^2)*s^2 + 2*(45 - 39*d + 7*d^2)*s*t - 32*t^2) - 
          2^(1 + 3*d)*mz^2*Pi^(3*d)*s^2*(3 - 4*sw^2)*(1 - sw^2)*
           ((8 - 6*d + d^2)*s^2 + 2*(8 - 6*d + d^2)*s*t - 4*t^2) + 
          2*sw^2*(8^(1 + d)*(-1 + d)*mz^8*Pi^(3*d)*(-1 + sw^2)^4*
             ((-2 + d)*s - 2*t) - (-2 + d)*(2*Pi)^(3*d)*s^4*t + 
            8^(1 + d)*mz^6*Pi^(3*d)*s*(-1 + sw^2)^3*((-2 + d)*s - 
              2*(3 - 3*d + d^2)*t) - 2^(2 + 3*d)*mz^2*Pi^(3*d)*s^2*(1 - sw^2)*
             ((-2 + d)^2*s^2 + 2*(10 - 6*d + d^2)*s*t + 4*t^2) + 
            2^(1 + 3*d)*mz^4*Pi^(3*d)*s*(-1 + sw^2)^2*
             ((30 - 31*d + 8*d^2)*s^2 + 2*(69 - 41*d + 7*d^2)*s*t + 
              32*t^2))) + (1/2 - sw^2)*(-(2^(1 + 3*d)*(-4 + d)*Pi^(3*d)*s^4*
            sw^2*t) + 2^(4 + 3*d)*(-1 + d)*mz^8*Pi^(3*d)*sw^2*(-1 + sw^2)^4*
           ((-4 + d)*s + 2*t) + 2^(4 + 3*d)*mz^6*Pi^(3*d)*s*sw^2*
           (-1 + sw^2)^3*((-4 + d)*s - 2*(3 - 5*d + d^2)*t) + 
          2^(2 + 3*d)*mz^4*Pi^(3*d)*s*(sw - sw^3)^2*
           ((60 - 47*d + 8*d^2)*s^2 + 2*(45 - 39*d + 7*d^2)*s*t - 32*t^2) - 
          8^(1 + d)*mz^2*Pi^(3*d)*s^2*sw^2*(1 - sw^2)*((8 - 6*d + d^2)*s^2 + 
            2*(8 - 6*d + d^2)*s*t - 4*t^2) + 
          ((3 - 4*sw^2)*(8^(1 + d)*(-1 + d)*mz^8*Pi^(3*d)*(-1 + sw^2)^4*
              ((-2 + d)*s - 2*t) - (-2 + d)*(2*Pi)^(3*d)*s^4*t + 
             8^(1 + d)*mz^6*Pi^(3*d)*s*(-1 + sw^2)^3*((-2 + d)*s - 2*
                (3 - 3*d + d^2)*t) - 2^(2 + 3*d)*mz^2*Pi^(3*d)*s^2*(1 - sw^2)*
              ((-2 + d)^2*s^2 + 2*(10 - 6*d + d^2)*s*t + 4*t^2) + 
             2^(1 + 3*d)*mz^4*Pi^(3*d)*s*(-1 + sw^2)^2*((30 - 31*d + 8*d^2)*
                s^2 + 2*(69 - 41*d + 7*d^2)*s*t + 32*t^2)))/2))*
       (-1 + GaugeXi[Q])^2 - (-1 + d)*(s + 2*mz^2*(-1 + sw^2))^2*
       (s^2 + 4*mz^2*s*(-1 + sw^2) + 4*(-1 + d)*mz^4*(-1 + sw^2)^2)*
       (s*(-6 + 3*d - 20*sw^2 + 32*sw^4) - 2*(3 - 20*sw^2 + 32*sw^4)*t)*
       ((2*Pi)^(3*d) - 2^(1 + 3*d)*Pi^(3*d)*GaugeXi[Q] + 
        (2*Pi)^(3*d)*GaugeXi[Q]^2)))/((-1 + d)*mz^4*Pi^(4*d)*(mz^2 - s)^2*s*
     sw^2*(-1 + sw^2)^2*(sw - sw*GaugeXi[Q])^2), 0, 0, 0, 
   ((-I/9)*2^(-4 - 5*d)*EL^6*
     (-4*mz^2*s*(d^2*(2*Pi)^(4*d)*s^2*(3*d*(-1 + sw^2) + 5*(3 + sw^2)) + 
        2^(1 + 4*d)*Pi^(4*d)*(2*s^2*(3 + 7*sw^2 - 26*sw^4 + 16*sw^6 + 
            d^2*sw^4*(-13 + 8*sw^2) - 3*d*(2 + 3*sw^2 - 13*sw^4 + 8*sw^6)) + 
          s*(-1 + sw^2)*(-18*d^2 + 3*d^3 - 8*(3 - 5*sw^2 + 8*sw^4) + 
            d*(39 - 40*sw^2 + 64*sw^4))*t + 2*(-1 + d)*(-3 + 23*sw^2 - 
            52*sw^4 + 32*sw^6)*t^2)) + 
      (d*(2*Pi)^(4*d)*s^2*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
            4*d*(-3 - 5*sw^2 + 8*sw^4)) + 2*s*(-15*d + 3*d^2 + 
            8*(3 - 5*sw^2 + 8*sw^4))*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2) - 
        4^(1 + 2*d)*d*mz^2*Pi^(4*d)*s*(-1 + sw^2)*
         (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
          2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          4*(3 - 20*sw^2 + 32*sw^4)*t^2) + 
        4*mz^4*(15*d^3*(2*Pi)^(4*d)*s^2*(1 + sw^4) + 2^(1 + 4*d)*Pi^(4*d)*
           (s^2*(-15*d^3*sw^2 + 8*(-1 + sw^2)^2*(-3 - 10*sw^2 + 16*sw^4) + 
              2*d^2*(-1 + sw^2)^2*(-18 - 25*sw^2 + 40*sw^4) - 
              2*d*(-1 + sw^2)^2*(-27 - 70*sw^2 + 112*sw^4)) + 
            s*(-1 + sw^2)^2*(-87*d^2 + 15*d^3 - 32*(3 - 5*sw^2 + 8*sw^4) + 
              20*d*(9 - 10*sw^2 + 16*sw^4))*t + 2*(-4 + 5*d)*(-1 + sw^2)^2*
             (3 - 20*sw^2 + 32*sw^4)*t^2)))*GaugeXi[Q] - 
      2*(d*(2*Pi)^(4*d)*s^2*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
            4*d*(-3 - 5*sw^2 + 8*sw^4)) + 2*s*(-15*d + 3*d^2 + 
            8*(3 - 5*sw^2 + 8*sw^4))*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2) + 
        4*mz^4*(15*d^3*(2*Pi)^(4*d)*s^2*(1 + sw^4) + 2^(1 + 4*d)*Pi^(4*d)*
           (s^2*(-15*d^3*sw^2 + 8*(-1 + sw^2)^2*(-3 - 10*sw^2 + 16*sw^4) + 
              2*d^2*(-1 + sw^2)^2*(-18 - 25*sw^2 + 40*sw^4) - 
              2*d*(-1 + sw^2)^2*(-27 - 70*sw^2 + 112*sw^4)) + 
            s*(-1 + sw^2)^2*(-87*d^2 + 15*d^3 - 32*(3 - 5*sw^2 + 8*sw^4) + 
              20*d*(9 - 10*sw^2 + 16*sw^4))*t + 2*(-4 + 5*d)*(-1 + sw^2)^2*
             (3 - 20*sw^2 + 32*sw^4)*t^2)) - 
        2*mz^2*s*(d^2*(2*Pi)^(4*d)*s^2*(69 + 31*sw^2 + 15*d*(-1 + sw^2)) + 
          2^(1 + 4*d)*Pi^(4*d)*(2*s^2*(9 + 21*sw^2 - 78*sw^4 + 48*sw^6 + 
              5*d^2*sw^4*(-13 + 8*sw^2) - d*(24 + 41*sw^2 - 169*sw^4 + 
                104*sw^6)) + s*(-1 + sw^2)*(-84*d^2 + 15*d^3 - 
              24*(3 - 5*sw^2 + 8*sw^4) + 5*d*(33 - 40*sw^2 + 64*sw^4))*t + 
            2*(-3 + 5*d)*(-3 + 23*sw^2 - 52*sw^4 + 32*sw^6)*t^2)))*
       GaugeXi[Q]^2 + (d*(2*Pi)^(4*d)*s^2*
         (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
          2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          4*(3 - 20*sw^2 + 32*sw^4)*t^2) - 4*mz^2*s*(-1 + sw^2)*
         (9*d^3*(2*Pi)^(4*d)*s^2 + 2^(1 + 4*d)*Pi^(4*d)*
           (s^2*(-12 - 40*sw^2 + 64*sw^4 + d*(30 + 80*sw^2 - 128*sw^4) + 
              3*d^2*(-7 - 10*sw^2 + 16*sw^4)) + s*(-51*d^2 + 9*d^3 - 
              16*(3 - 5*sw^2 + 8*sw^4) + 6*d*(17 - 20*sw^2 + 32*sw^4))*t + 
            2*(-2 + 3*d)*(3 - 20*sw^2 + 32*sw^4)*t^2)) + 
        4*mz^4*(15*d^3*(2*Pi)^(4*d)*s^2*(1 + sw^4) + 2^(1 + 4*d)*Pi^(4*d)*
           (s^2*(-15*d^3*sw^2 + 8*(-1 + sw^2)^2*(-3 - 10*sw^2 + 16*sw^4) + 
              2*d^2*(-1 + sw^2)^2*(-18 - 25*sw^2 + 40*sw^4) - 
              2*d*(-1 + sw^2)^2*(-27 - 70*sw^2 + 112*sw^4)) + 
            s*(-1 + sw^2)^2*(-87*d^2 + 15*d^3 - 32*(3 - 5*sw^2 + 8*sw^4) + 
              20*d*(9 - 10*sw^2 + 16*sw^4))*t + 2*(-4 + 5*d)*(-1 + sw^2)^2*
             (3 - 20*sw^2 + 32*sw^4)*t^2)))*GaugeXi[Q]^3))/
    ((-1 + d)*d*mz^4*Pi^(5*d)*(mz^2 - s)^2*s*sw^4*(-1 + sw^2)^2*
     (-1 + GaugeXi[Q])^2*GaugeXi[Q]), 
   ((-I/9)*2^(-5 - 3*d)*EL^6*
     (-((-1 + d)*(2*Pi)^(2*d)*(s - 2*mz^2*(-1 + sw^2))^2*
        (s*(-6 + 3*d - 20*sw^2 + 32*sw^4) - 2*(3 - 20*sw^2 + 32*sw^4)*t)*
        (-1 + GaugeXi[Q])^2*(s + 2*mz^2*(-1 + sw^2)*GaugeXi[Q])^2) - 
      (-1 + d)*(2*Pi)^d*(-(2^(2 + d)*mz^2*Pi^d*s*(-1 + sw^2)*
          (s*(-6 + 3*d - 20*sw^2 + 32*sw^4) - 2*(3 - 20*sw^2 + 32*sw^4)*t)) + 
        2^(2 + d)*mz^4*Pi^d*(-1 + sw^2)^2*(s*(-6 + 3*d - 20*sw^2 + 32*sw^4) - 
          2*(3 - 20*sw^2 + 32*sw^4)*t) + s^2*(3*d*(2*Pi)^d*s + 
          2^(1 + d)*Pi^d*(s*(-3 - 10*sw^2 + 16*sw^4) + 
            (-3 + 20*sw^2 - 32*sw^4)*t)))*(-1 + GaugeXi[Q])^2*
       (s + 2*mz^2*(-1 + sw^2)*GaugeXi[Q])^2 + (2*Pi)^(2*d)*s*(-1 + 4*sw^2)*
       (-3 + 8*sw^2)*(s - 2*mz^2*(-1 + sw^2))^2*(-1 + GaugeXi[Q])^2*
       (d*s^2 + 4*d*mz^2*s*(-1 + sw^2)*GaugeXi[Q] + 4*(-1 + d)*mz^4*
         (-1 + sw^2)^2*GaugeXi[Q]^2) + (2*Pi)^d*s*(-1 + 4*sw^2)*(-3 + 8*sw^2)*
       ((2*Pi)^d*s^2 - 2^(2 + d)*mz^2*Pi^d*s*(-1 + sw^2) + 
        2^(2 + d)*mz^4*Pi^d*(-1 + sw^2)^2)*(-1 + GaugeXi[Q])^2*
       (d*s^2 + 4*d*mz^2*s*(-1 + sw^2)*GaugeXi[Q] + 4*(-1 + d)*mz^4*
         (-1 + sw^2)^2*GaugeXi[Q]^2) + 
      (2*Pi)^d*(2^(2 + d)*mz^4*Pi^d*(-1 + sw^2)^2*
         (3*d*s - 4*s*(3 - 5*sw^2 + 8*sw^4) - 2*(3 - 20*sw^2 + 32*sw^4)*t) + 
        2^(2 + d)*mz^2*Pi^d*s*(-1 + sw^2)*(-3*d*s + 
          4*s*(3 - 5*sw^2 + 8*sw^4) + 2*(3 - 20*sw^2 + 32*sw^4)*t) - 
        s^2*(-3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(2*s*(3 - 5*sw^2 + 8*sw^4) + 
            (3 - 20*sw^2 + 32*sw^4)*t)))*(-1 + GaugeXi[Q])^2*
       (s*(d*s + 2*t) + 4*mz^2*(-1 + sw^2)*(d*s + 2*t)*GaugeXi[Q] + 
        4*(-1 + d)*mz^4*(-1 + sw^2)^2*GaugeXi[Q]^2) - 
      2*(-1 + d)*(s - 2*mz^2*(-1 + sw^2))^2*
       ((2*Pi)^(2*d)*s^2*(-6 + 3*d - 20*sw^2 + 32*sw^4)*t - 
        2^(1 + 2*d)*Pi^(2*d)*s*(-6 + 3*d - 20*sw^2 + 32*sw^4)*
         (s - 2*mz^2*(-1 + sw^2))*t*GaugeXi[Q] + 
        ((2*Pi)^(2*d)*s^2*(-6 + 3*d - 20*sw^2 + 32*sw^4)*t - 
          2^(3 + 2*d)*mz^2*Pi^(2*d)*s*(-1 + sw^2)*(-6 + 3*d - 20*sw^2 + 
            32*sw^4)*t - 2^(1 + 2*d)*mz^4*Pi^(2*d)*(-1 + sw^2)^2*
           (s*(-6 + 3*d - 20*sw^2 + 32*sw^4) - 2*(3 - 20*sw^2 + 32*sw^4)*t))*
         GaugeXi[Q]^2 + 4^(1 + d)*mz^2*Pi^(2*d)*(-1 + sw^2)*
         (s*(-6 + 3*d - 20*sw^2 + 32*sw^4)*t + mz^2*(-1 + sw^2)*
           (s*(-6 + 3*d - 20*sw^2 + 32*sw^4) - 2*(3 - 20*sw^2 + 32*sw^4)*t))*
         GaugeXi[Q]^3 - 2^(1 + 2*d)*mz^4*Pi^(2*d)*(-1 + sw^2)^2*
         (s*(-6 + 3*d - 20*sw^2 + 32*sw^4) - 2*(3 - 20*sw^2 + 32*sw^4)*t)*
         GaugeXi[Q]^4)))/((-1 + d)*mz^4*Pi^(3*d)*(mz^2 - s)^2*s*sw^2*
     (-1 + sw^2)^2*(sw - sw*GaugeXi[Q])^2), 
   ((I/9)*EL^6*(mz^2*s*(-3*(-5 + d)*d^2*(2*Pi)^d*s^2 - 
        2^(1 + d)*Pi^d*(2*s^2*(-3 - 10*sw^2 + 16*sw^4 + 
            d^2*sw^2*(-5 + 8*sw^2) + d*(6 + 15*sw^2 - 24*sw^4)) + 
          s*(-18*d^2 + 3*d^3 - 8*(3 - 5*sw^2 + 8*sw^4) + 
            d*(39 - 40*sw^2 + 64*sw^4))*t + 2*(-1 + d)*(3 - 20*sw^2 + 
            32*sw^4)*t^2)) - 
      ((sw^2*(3 - 4*sw^2)*(d^3*(2*Pi)^d*s^4 + 2^(2 + d)*(-3 + 2*d + d^2)*mz^4*
            Pi^d*(-1 + sw^2)^2*((8 - 6*d + d^2)*s^2 + 2*(4 - 5*d + d^2)*s*t - 
             4*t^2) + 2^(1 + d)*d*Pi^d*s^2*((4 - 3*d)*s^2 + (4 - 5*d + d^2)*s*
              t - 2*t^2) + mz^2*s*(1 - sw^2)*(-3*d^3*(2*Pi)^d*s^2 + 
             2^(1 + d)*Pi^d*((-32 + 36*d + 3*d^2 - 9*d^3 + 2*d^4)*s^2 + 
               (-32 + 52*d - 7*d^2 - 17*d^3 + 4*d^4)*s*t - 2*(-8 + 3*d + 
                 4*d^2)*t^2))) + 4*sw^2*(1/2 - sw^2)*(d^3*(2*Pi)^d*s^4 + 
           2^(2 + d)*(-3 + 2*d + d^2)*mz^4*Pi^d*(-1 + sw^2)^2*
            ((8 - 6*d + d^2)*s^2 + 2*(4 - 5*d + d^2)*s*t - 4*t^2) + 
           2^(1 + d)*d*Pi^d*s^2*((4 - 3*d)*s^2 + (4 - 5*d + d^2)*s*t - 
             2*t^2) + mz^2*s*(1 - sw^2)*(-3*d^3*(2*Pi)^d*s^2 + 
             2^(1 + d)*Pi^d*((-32 + 36*d + 3*d^2 - 9*d^3 + 2*d^4)*s^2 + 
               (-32 + 52*d - 7*d^2 - 17*d^3 + 4*d^4)*s*t - 2*(-8 + 3*d + 
                 4*d^2)*t^2))) + 4*sw^4*(d^3*(2*Pi)^d*s^4 + 
           2^(1 + d)*d*Pi^d*s^2*(-2*(-1 + d)*s^2 + (8 - 5*d + d^2)*s*t + 
             2*t^2) + 2^(2 + d)*(-3 + 2*d + d^2)*mz^4*Pi^d*(-1 + sw^2)^2*
            ((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 4*t^2) + 
           mz^2*s*(1 - sw^2)*(-3*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
              ((-16 + 22*d - 2*d^2 - 5*d^3 + 2*d^4)*s^2 + (-64 + 64*d + 
                 9*d^2 - 17*d^3 + 4*d^4)*s*t + 2*(-8 + 3*d + 4*d^2)*t^2))) + 
         (3 - 4*sw^2)*(1/2 - sw^2)*(d^3*(2*Pi)^d*s^4 + 2^(1 + d)*d*Pi^d*s^2*
            (-2*(-1 + d)*s^2 + (8 - 5*d + d^2)*s*t + 2*t^2) + 
           2^(2 + d)*(-3 + 2*d + d^2)*mz^4*Pi^d*(-1 + sw^2)^2*
            ((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 4*t^2) + 
           mz^2*s*(1 - sw^2)*(-3*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
              ((-16 + 22*d - 2*d^2 - 5*d^3 + 2*d^4)*s^2 + (-64 + 64*d + 
                 9*d^2 - 17*d^3 + 4*d^4)*s*t + 2*(-8 + 3*d + 4*d^2)*t^2))))*
        GaugeXi[Q])/(2*(1 - sw^2)) + 
      (mz^2*(sw^2*(3 - 4*sw^2)*(d^3*(2*Pi)^d*s^3 + 2^(2 + d)*(-1 + d)^2*mz^2*
            Pi^d*(1 - sw^2)*((8 - 6*d + d^2)*s^2 + 2*(4 - 5*d + d^2)*s*t - 
             4*t^2) - 2^(1 + d)*d*Pi^d*s*((4 - 3*d + d^2)*s^2 + 
             (4 - 5*d + d^2)*s*t - 2*t^2)) + 4*sw^2*(1/2 - sw^2)*
          (d^3*(2*Pi)^d*s^3 + 2^(2 + d)*(-1 + d)^2*mz^2*Pi^d*(1 - sw^2)*
            ((8 - 6*d + d^2)*s^2 + 2*(4 - 5*d + d^2)*s*t - 4*t^2) - 
           2^(1 + d)*d*Pi^d*s*((4 - 3*d + d^2)*s^2 + (4 - 5*d + d^2)*s*t - 
             2*t^2)) + 4*sw^4*(d^3*(2*Pi)^d*s^3 - 2^(1 + d)*d*Pi^d*s*
            ((2 - 2*d + d^2)*s^2 + (8 - 5*d + d^2)*s*t + 2*t^2) + 
           2^(2 + d)*(-1 + d)^2*mz^2*Pi^d*(1 - sw^2)*((-2 + d)^2*s^2 + 
             2*(8 - 5*d + d^2)*s*t + 4*t^2)) + (3 - 4*sw^2)*(1/2 - sw^2)*
          (d^3*(2*Pi)^d*s^3 - 2^(1 + d)*d*Pi^d*s*((2 - 2*d + d^2)*s^2 + 
             (8 - 5*d + d^2)*s*t + 2*t^2) + 2^(2 + d)*(-1 + d)^2*mz^2*Pi^d*
            (1 - sw^2)*((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 4*t^2)))*
        GaugeXi[Q]^2)/2))/(2^(2*(1 + d))*(-1 + d)*d*mz^4*Pi^(2*d)*
     (mz^2 - s)^2*s*sw^4*(-1 + sw^2)*GaugeXi[Q]), 
   ((I/9)*2^(-5 - 4*d)*EL^6*(-3*(-1 + d)*(2*Pi)^(3*d)*s*
       (s*(-6 + 3*d - 20*sw^2 + 32*sw^4) - 2*(3 - 20*sw^2 + 32*sw^4)*t)*
       (-1 + GaugeXi[Q])^2*(s + mz^2*(-1 + sw^2) + mz^2*(-1 + sw^2)*
          GaugeXi[Q])^2 + (-1 + d)*(2*Pi)^(2*d)*s*(-1 + GaugeXi[Q])^2*
       (s + mz^2*(-1 + sw^2) + mz^2*(-1 + sw^2)*GaugeXi[Q])*
       (-(s*(3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-3 - 10*sw^2 + 16*sw^4) + 
             (-3 + 20*sw^2 - 32*sw^4)*t))) + mz^2*(-1 + sw^2)*
         (-15*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
           (s*(3 + 6*d + 10*sw^2 - 16*sw^4) + (3 - 20*sw^2 + 32*sw^4)*t)) + 
        mz^2*(-(d*(2*Pi)^d*s*(-3 + 7*sw^2)) + 2^(1 + d)*Pi^d*
           (s*(-3 + (-7 + 2*d)*sw^2 + 26*sw^4 - 16*sw^6) + 
            (-3 + 23*sw^2 - 52*sw^4 + 32*sw^6)*t))*GaugeXi[Q]) - 
      2^(4 + 3*d)*Pi^(3*d)*(1/2 - 2*sw^2)*(-3/2 + 4*sw^2)*
       (s - s*GaugeXi[Q])^2*(d*(s + mz^2*(-1 + sw^2))^2 + 
        2*mz^2*(1 - sw^2)*(-(d*s) - (-2 + d)*mz^2*(-1 + sw^2))*GaugeXi[Q] + 
        d*mz^4*(-1 + sw^2)^2*GaugeXi[Q]^2) + 2^(1 + 3*d)*Pi^(3*d)*
       (3*d*s - 4*s*(3 - 5*sw^2 + 8*sw^4) - 2*(3 - 20*sw^2 + 32*sw^4)*t)*
       (-1 + GaugeXi[Q])^2*((s + mz^2*(-1 + sw^2))^2*(d*s + 2*t) + 
        2*mz^2*(-1 + sw^2)*(mz^2*(-1 + sw^2)*((-2 + d)*s - 2*t) + 
          s*(d*s + 2*t))*GaugeXi[Q] + mz^4*(-1 + sw^2)^2*(d*s + 2*t)*
         GaugeXi[Q]^2) + 2^(2 + 3*d)*(1 - d)*Pi^(3*d)*s*
       (s^2*(-6 + 3*d - 20*sw^2 + 32*sw^4)*t + mz^4*(-1 + sw^2)^2*
         (-6 + 3*d - 20*sw^2 + 32*sw^4)*t - 2*mz^2*(-1 + sw^2)*
         (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
          3*s*(18 - 11*d + 2*d^2 - 20*sw^2 + 32*sw^4)*t + 
          4*(3 - 20*sw^2 + 32*sw^4)*t^2) - 
        2*(s^2*(-6 + 3*d - 20*sw^2 + 32*sw^4)*t + mz^4*(-1 + sw^2)^2*
           (s*(-6 + 3*d - 20*sw^2 + 32*sw^4) + 6*(-3 + d)*t) - 
          mz^2*(-1 + sw^2)*(2*s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
              4*d*(-3 - 5*sw^2 + 8*sw^4)) + s*(102 - 63*d + 12*d^2 - 
              140*sw^2 + 224*sw^4)*t + 8*(3 - 20*sw^2 + 32*sw^4)*t^2))*
         GaugeXi[Q] + (s^2*(-6 + 3*d - 20*sw^2 + 32*sw^4)*t + 
          2*mz^4*(-1 + sw^2)^2*(2*s*(-6 + 3*d - 20*sw^2 + 32*sw^4) + 
            (-30 + 9*d + 20*sw^2 - 32*sw^4)*t) - 2*mz^2*(-1 + sw^2)*
           (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 
                8*sw^4)) + s*(42 - 27*d + 6*d^2 - 100*sw^2 + 160*sw^4)*t + 
            4*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[Q]^2 - 
        2*mz^2*(-1 + sw^2)*(s*(6 - 3*d + 20*sw^2 - 32*sw^4)*t + 
          mz^2*(-1 + sw^2)*(s*(-6 + 3*d - 20*sw^2 + 32*sw^4) + 6*(-3 + d)*t))*
         GaugeXi[Q]^3 + mz^4*(-1 + sw^2)^2*(-6 + 3*d - 20*sw^2 + 32*sw^4)*t*
         GaugeXi[Q]^4)))/((-1 + d)*mz^4*Pi^(4*d)*(mz^2 - s)^2*sw^2*
     (-1 + sw^2)^2*(sw - sw*GaugeXi[Q])^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, ((I/9)*2^(-7 - d)*EL^6*
     (s^2*(d^2*(9 - 60*sw^2 + 96*sw^4) + 4*(9 - 60*sw^2 + 44*sw^4 + 
          160*sw^6 - 128*sw^8) + 4*d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
          64*sw^8)) + 2*s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
        d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 
          64*sw^8))*t + 4*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^2)*
     (-4*(-1 + d)^2*mz^2*(-1 + sw^2) + 
      (d*(-9 + 4*d)*s - 4*(-1 + d)*mz^2*(-1 + sw^2))*GaugeXi[Q] + 
      d*s*GaugeXi[Q]^2))/((-1 + d)*d*mz^2*Pi^d*(mz^2 - s)^3*sw^6*
     (-1 + sw^2)^2*GaugeXi[Q]), 
   ((-I/9)*EL^6*(-(8^(-1 + d)*Pi^(3*d)*s*(1 - 4*sw^2 + 8*sw^4)*
        (9 - 24*sw^2 + 32*sw^4)*(s^2 + 4*mz^2*s*(-1 + sw^2) + 
         4*(-1 + d)*mz^4*(-1 + sw^2)^2)*(d*s^2 + 4*d*mz^2*s*(-1 + sw^2) + 
         4*(-1 + d)*mz^4*(-1 + sw^2)^2)*(-1 + GaugeXi[Q])^2) + 
      2*(1 - d)*((sw^4*(3 - 4*sw^2)^2*((-4 + d)*(2*Pi)^(3*d)*s^4*t - 
           8^(1 + d)*(-1 + d)*mz^8*Pi^(3*d)*(-1 + sw^2)^4*((-4 + d)*s + 
             2*t) + 8^(1 + d)*mz^6*Pi^(3*d)*s*(1 - sw^2)^3*
            ((-4 + d)*s - 2*(3 - 5*d + d^2)*t) - 2^(1 + 3*d)*mz^4*Pi^(3*d)*s*
            (-1 + sw^2)^2*((60 - 47*d + 8*d^2)*s^2 + 2*(45 - 39*d + 7*d^2)*s*
              t - 32*t^2) + 2^(2 + 3*d)*mz^2*Pi^(3*d)*s^2*(1 - sw^2)*
            ((8 - 6*d + d^2)*s^2 + 2*(8 - 6*d + d^2)*s*t - 4*t^2)))/4 + 
        4*sw^8*(8^(1 + d)*(-1 + d)*mz^8*Pi^(3*d)*(-1 + sw^2)^4*
           ((-2 + d)*s - 2*t) - (-2 + d)*(2*Pi)^(3*d)*s^4*t + 
          8^(1 + d)*mz^6*Pi^(3*d)*s*(-1 + sw^2)^3*((-2 + d)*s - 
            2*(3 - 3*d + d^2)*t) - 2^(2 + 3*d)*mz^2*Pi^(3*d)*s^2*(1 - sw^2)*
           ((-2 + d)^2*s^2 + 2*(10 - 6*d + d^2)*s*t + 4*t^2) + 
          2^(1 + 3*d)*mz^4*Pi^(3*d)*s*(-1 + sw^2)^2*
           ((30 - 31*d + 8*d^2)*s^2 + 2*(69 - 41*d + 7*d^2)*s*t + 32*t^2)) + 
        (-1/2 + sw^2)^2*(4*sw^4*((-4 + d)*(2*Pi)^(3*d)*s^4*t - 
            8^(1 + d)*(-1 + d)*mz^8*Pi^(3*d)*(-1 + sw^2)^4*((-4 + d)*s + 
              2*t) + 8^(1 + d)*mz^6*Pi^(3*d)*s*(1 - sw^2)^3*
             ((-4 + d)*s - 2*(3 - 5*d + d^2)*t) - 2^(1 + 3*d)*mz^4*Pi^(3*d)*s*
             (-1 + sw^2)^2*((60 - 47*d + 8*d^2)*s^2 + 2*(45 - 39*d + 7*d^2)*s*
               t - 32*t^2) + 2^(2 + 3*d)*mz^2*Pi^(3*d)*s^2*(1 - sw^2)*
             ((8 - 6*d + d^2)*s^2 + 2*(8 - 6*d + d^2)*s*t - 4*t^2)) + 
          ((3 - 4*sw^2)^2*(8^(1 + d)*(-1 + d)*mz^8*Pi^(3*d)*(-1 + sw^2)^4*
              ((-2 + d)*s - 2*t) - (-2 + d)*(2*Pi)^(3*d)*s^4*t + 
             8^(1 + d)*mz^6*Pi^(3*d)*s*(-1 + sw^2)^3*((-2 + d)*s - 2*
                (3 - 3*d + d^2)*t) - 2^(2 + 3*d)*mz^2*Pi^(3*d)*s^2*(1 - sw^2)*
              ((-2 + d)^2*s^2 + 2*(10 - 6*d + d^2)*s*t + 4*t^2) + 
             2^(1 + 3*d)*mz^4*Pi^(3*d)*s*(-1 + sw^2)^2*((30 - 31*d + 8*d^2)*
                s^2 + 2*(69 - 41*d + 7*d^2)*s*t + 32*t^2)))/4))*
       (-1 + GaugeXi[Q])^2 - 2^(1 + 2*d)*(1 - d)*Pi^(2*d)*
       (s/2 + mz^2*(-1 + sw^2))*
       ((sw^4*(3 - 4*sw^2)^2*(2^(3 + d)*(-1 + d)*mz^6*Pi^d*(1 - sw^2)^3*
            ((-4 + d)*s + 2*t) - 3*2^(1 + d)*mz^2*Pi^d*s^2*(-1 + sw^2)*
            ((-4 + d)*s + 2*t) - 2^(2 + d)*(1 + d)*mz^4*Pi^d*s*(-1 + sw^2)^2*
            ((-4 + d)*s + 2*t) - s^3*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
              (-2*s + t))))/4 - 4*sw^8*(2^(3 + d)*(-1 + d)*mz^6*Pi^d*
           (1 - sw^2)^3*((-2 + d)*s - 2*t) - 3*2^(1 + d)*mz^2*Pi^d*s^2*
           (-1 + sw^2)*((-2 + d)*s - 2*t) - 2^(2 + d)*(1 + d)*mz^4*Pi^d*s*
           (-1 + sw^2)^2*((-2 + d)*s - 2*t) + s^3*(-(d*(2*Pi)^d*s) + 
            2^(1 + d)*Pi^d*(s + t))) + (-1/2 + sw^2)^2*
         (4*sw^4*(2^(3 + d)*(-1 + d)*mz^6*Pi^d*(1 - sw^2)^3*
             ((-4 + d)*s + 2*t) - 3*2^(1 + d)*mz^2*Pi^d*s^2*(-1 + sw^2)*
             ((-4 + d)*s + 2*t) - 2^(2 + d)*(1 + d)*mz^4*Pi^d*s*(-1 + sw^2)^2*
             ((-4 + d)*s + 2*t) - s^3*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(-2*s + 
                t))) - ((3 - 4*sw^2)^2*(2^(3 + d)*(-1 + d)*mz^6*Pi^d*
              (1 - sw^2)^3*((-2 + d)*s - 2*t) - 3*2^(1 + d)*mz^2*Pi^d*s^2*
              (-1 + sw^2)*((-2 + d)*s - 2*t) - 2^(2 + d)*(1 + d)*mz^4*Pi^d*s*
              (-1 + sw^2)^2*((-2 + d)*s - 2*t) + s^3*(-(d*(2*Pi)^d*s) + 
               2^(1 + d)*Pi^d*(s + t))))/4))*(-1 + GaugeXi[Q])^2 + 
      ((-1 + d)*(s + 2*mz^2*(-1 + sw^2))^2*(s^2 + 4*mz^2*s*(-1 + sw^2) + 
         4*(-1 + d)*mz^4*(-1 + sw^2)^2)*(d*s*(9 - 60*sw^2 + 96*sw^4) + 
         2*s*(-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 128*sw^8) - 
         2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t)*
        ((2*Pi)^(3*d) - 2^(1 + 3*d)*Pi^(3*d)*GaugeXi[Q] + 
         (2*Pi)^(3*d)*GaugeXi[Q]^2))/16 + 
      ((s^2 + 4*mz^2*s*(-1 + sw^2) + 4*(-1 + d)*mz^4*(-1 + sw^2)^2)*
        (d*s*(-9 + 60*sw^2 - 96*sw^4) + 4*s*(9 - 60*sw^2 + 122*sw^4 - 
           80*sw^6 + 64*sw^8) + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
           256*sw^8)*t)*(4*(-1 + d)*mz^4*(-1 + sw^2)^2 + s*(d*s + 2*t) + 
         4*mz^2*(-1 + sw^2)*(d*s + 2*t))*((2*Pi)^(3*d) - 
         2^(1 + 3*d)*Pi^(3*d)*GaugeXi[Q] + (2*Pi)^(3*d)*GaugeXi[Q]^2))/16))/
    (2^(4*(1 + d))*(1 - d)*mz^4*Pi^(4*d)*(mz^2 - s)^3*sw^6*(-1 + sw^2)^3*
     (-1 + GaugeXi[Q])^2), 0, 0, 0, 
   ((-I/9)*2^(-7 - 5*d)*EL^6*
     (-4*mz^2*s*(3*(-5 + d)*d^2*(2*Pi)^(4*d)*s^2*(-3 + 23*sw^2) + 
        2^(1 + 4*d)*Pi^(4*d)*(2*s^2*(9 - 69*sw^2 + 104*sw^4 + 116*sw^6 - 
            288*sw^8 + 128*sw^10 + 3*d^3*sw^4*(-13 + 8*sw^2) + 
            d^2*sw^4*(169 - 14*sw^2 - 144*sw^4 + 64*sw^6) - 
            6*d*(3 - 23*sw^2 + 39*sw^4 + 21*sw^6 - 72*sw^8 + 32*sw^10)) + 
          s*(-1 + sw^2)*(-18*d^2*(3 - 20*sw^2 + 32*sw^4) + 
            d^3*(9 - 60*sw^2 + 96*sw^4) - 8*(9 - 60*sw^2 + 122*sw^4 - 
              80*sw^6 + 64*sw^8) + d*(117 - 780*sw^2 + 1456*sw^4 - 640*sw^6 + 
              512*sw^8))*t + 2*(-1 + d)*(-9 + 69*sw^2 - 260*sw^4 + 520*sw^6 - 
            576*sw^8 + 256*sw^10)*t^2)) + (9*d^3*(2*Pi)^(4*d)*s^4 + 
        2^(1 + 4*d)*d*Pi^(4*d)*s^2*(2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 
            128*sw^8 + 3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 
              80*sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
            d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
              80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
            256*sw^8)*t^2) + 4*mz^4*(45*d^3*(2*Pi)^(4*d)*s^2*(1 + 25*sw^4) + 
          2^(1 + 4*d)*Pi^(4*d)*(s^2*(15*d^3*sw^2*(-13 - 42*sw^4 + 16*sw^6) + 
              8*(-1 + sw^2)^2*(-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 
                128*sw^8) + 4*d^2*(-1 + sw^2)^2*(-27 + 180*sw^2 - 223*sw^4 - 
                200*sw^6 + 160*sw^8) - 2*d*(-1 + sw^2)^2*(-81 + 540*sw^2 - 
                500*sw^4 - 1120*sw^6 + 896*sw^8)) + s*(-1 + sw^2)^2*
             (-87*d^2*(3 - 20*sw^2 + 32*sw^4) + 15*d^3*(3 - 20*sw^2 + 
                32*sw^4) - 32*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8) + 
              20*d*(27 - 180*sw^2 + 340*sw^4 - 160*sw^6 + 128*sw^8))*t + 
            2*(-4 + 5*d)*(-1 + sw^2)^2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
              256*sw^8)*t^2)) - 4*d*mz^2*s*(3*d^2*(2*Pi)^(4*d)*s^2*
           (-3 + 23*sw^2) + 2^(1 + 4*d)*Pi^(4*d)*
           (2*s^2*(-9 + 69*sw^2 - 104*sw^4 - 116*sw^6 + 288*sw^8 - 
              128*sw^10 + 3*d^2*sw^4*(-13 + 8*sw^2) + d*(9 - 69*sw^2 + 
                130*sw^4 + 10*sw^6 - 144*sw^8 + 64*sw^10)) + 
            s*(-1 + sw^2)*(-15*d*(3 - 20*sw^2 + 32*sw^4) + d^2*(9 - 60*sw^2 + 
                96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8))*
             t + 2*(-9 + 69*sw^2 - 260*sw^4 + 520*sw^6 - 576*sw^8 + 
              256*sw^10)*t^2)))*GaugeXi[Q] - 
      2*(9*d^3*(2*Pi)^(4*d)*s^4 + 2^(1 + 4*d)*d*Pi^(4*d)*s^2*
         (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
            3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
              64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
            d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
              80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
            256*sw^8)*t^2) + 4*mz^4*(45*d^3*(2*Pi)^(4*d)*s^2*(1 + 25*sw^4) + 
          2^(1 + 4*d)*Pi^(4*d)*(s^2*(15*d^3*sw^2*(-13 - 42*sw^4 + 16*sw^6) + 
              8*(-1 + sw^2)^2*(-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 
                128*sw^8) + 4*d^2*(-1 + sw^2)^2*(-27 + 180*sw^2 - 223*sw^4 - 
                200*sw^6 + 160*sw^8) - 2*d*(-1 + sw^2)^2*(-81 + 540*sw^2 - 
                500*sw^4 - 1120*sw^6 + 896*sw^8)) + s*(-1 + sw^2)^2*
             (-87*d^2*(3 - 20*sw^2 + 32*sw^4) + 15*d^3*(3 - 20*sw^2 + 
                32*sw^4) - 32*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8) + 
              20*d*(27 - 180*sw^2 + 340*sw^4 - 160*sw^6 + 128*sw^8))*t + 
            2*(-4 + 5*d)*(-1 + sw^2)^2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
              256*sw^8)*t^2)) - 2*mz^2*s*(3*d^2*(-23 + 5*d)*(2*Pi)^(4*d)*s^2*
           (-3 + 23*sw^2) + 2^(1 + 4*d)*Pi^(4*d)*
           (2*s^2*(15*d^3*sw^4*(-13 + 8*sw^2) + d^2*sw^4*(767 - 22*sw^2 - 
                720*sw^4 + 320*sw^6) + 3*(9 - 69*sw^2 + 104*sw^4 + 116*sw^6 - 
                288*sw^8 + 128*sw^10) - 2*d*(36 - 276*sw^2 + 455*sw^4 + 
                305*sw^6 - 936*sw^8 + 416*sw^10)) + s*(-1 + sw^2)*
             (-84*d^2*(3 - 20*sw^2 + 32*sw^4) + 15*d^3*(3 - 20*sw^2 + 
                32*sw^4) - 24*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8) + 
              5*d*(99 - 660*sw^2 + 1264*sw^4 - 640*sw^6 + 512*sw^8))*t + 
            2*(-3 + 5*d)*(-9 + 69*sw^2 - 260*sw^4 + 520*sw^6 - 576*sw^8 + 
              256*sw^10)*t^2)))*GaugeXi[Q]^2 + 
      (9*d^3*(2*Pi)^(4*d)*s^4 + 2^(1 + 4*d)*d*Pi^(4*d)*s^2*
         (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
            3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
              64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
            d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
              80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
            256*sw^8)*t^2) + 4*mz^4*(45*d^3*(2*Pi)^(4*d)*s^2*(1 + 25*sw^4) + 
          2^(1 + 4*d)*Pi^(4*d)*(s^2*(15*d^3*sw^2*(-13 - 42*sw^4 + 16*sw^6) + 
              8*(-1 + sw^2)^2*(-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 
                128*sw^8) + 4*d^2*(-1 + sw^2)^2*(-27 + 180*sw^2 - 223*sw^4 - 
                200*sw^6 + 160*sw^8) - 2*d*(-1 + sw^2)^2*(-81 + 540*sw^2 - 
                500*sw^4 - 1120*sw^6 + 896*sw^8)) + s*(-1 + sw^2)^2*
             (-87*d^2*(3 - 20*sw^2 + 32*sw^4) + 15*d^3*(3 - 20*sw^2 + 
                32*sw^4) - 32*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8) + 
              20*d*(27 - 180*sw^2 + 340*sw^4 - 160*sw^6 + 128*sw^8))*t + 
            2*(-4 + 5*d)*(-1 + sw^2)^2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
              256*sw^8)*t^2)) - 4*mz^2*s*(9*d^3*(2*Pi)^(4*d)*s^2*
           (-3 + 23*sw^2) + 2^(1 + 4*d)*Pi^(4*d)*
           (s^2*(18*d^3*sw^4*(-13 + 8*sw^2) + 4*(9 - 69*sw^2 + 104*sw^4 + 
                116*sw^6 - 288*sw^8 + 128*sw^10) + d^2*(63 - 483*sw^2 + 
                936*sw^4 - 36*sw^6 - 864*sw^8 + 384*sw^10) - 
              2*d*(45 - 345*sw^2 + 572*sw^4 + 368*sw^6 - 1152*sw^8 + 
                512*sw^10)) + s*(-1 + sw^2)*(-51*d^2*(3 - 20*sw^2 + 
                32*sw^4) + 9*d^3*(3 - 20*sw^2 + 32*sw^4) - 16*(9 - 60*sw^2 + 
                122*sw^4 - 80*sw^6 + 64*sw^8) + 6*d*(51 - 340*sw^2 + 
                648*sw^4 - 320*sw^6 + 256*sw^8))*t + 2*(-2 + 3*d)*
             (-9 + 69*sw^2 - 260*sw^4 + 520*sw^6 - 576*sw^8 + 256*sw^10)*
             t^2)))*GaugeXi[Q]^3))/((-1 + d)*d*mz^4*Pi^(5*d)*(mz^2 - s)^3*
     sw^6*(-1 + sw^2)^3*(-1 + GaugeXi[Q])^2*GaugeXi[Q]), 
   ((-I/9)*2^(-8 - 3*d)*EL^6*(s - 2*mz^2*(-1 + sw^2))^2*
     (2^(1 + 2*d)*(-1 + d)*Pi^(2*d)*(d*s*(9 - 60*sw^2 + 96*sw^4) + 
        2*s*(-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 128*sw^8) - 
        2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t)*
       (-1 + GaugeXi[Q])^2*(s + 2*mz^2*(-1 + sw^2)*GaugeXi[Q])^2 - 
      2^(1 + 2*d)*Pi^(2*d)*s*(1 - 4*sw^2 + 8*sw^4)*(9 - 24*sw^2 + 32*sw^4)*
       (-1 + GaugeXi[Q])^2*(d*s^2 + 4*d*mz^2*s*(-1 + sw^2)*GaugeXi[Q] + 
        4*(-1 + d)*mz^4*(-1 + sw^2)^2*GaugeXi[Q]^2) + 
      (d*s*(-9 + 60*sw^2 - 96*sw^4) + 4*s*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 
          64*sw^8) + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t)*
       ((2*Pi)^(2*d) - 2^(1 + 2*d)*Pi^(2*d)*GaugeXi[Q] + 
        (2*Pi)^(2*d)*GaugeXi[Q]^2)*(s*(d*s + 2*t) + 4*mz^2*(-1 + sw^2)*
         (d*s + 2*t)*GaugeXi[Q] + 4*(-1 + d)*mz^4*(-1 + sw^2)^2*
         GaugeXi[Q]^2) - 2^(1 + 2*d)*(1 - d)*Pi^(2*d)*(-1 + GaugeXi[Q])^2*
       (s^2*(d*(9 - 60*sw^2 + 96*sw^4) + 2*(-9 + 60*sw^2 - 44*sw^4 - 
            160*sw^6 + 128*sw^8))*t + 4*mz^2*s*(-1 + sw^2)*
         (d*(9 - 60*sw^2 + 96*sw^4) + 2*(-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 
            128*sw^8))*t*GaugeXi[Q] - 2*mz^4*(-1 + sw^2)^2*
         (d*s*(9 - 60*sw^2 + 96*sw^4) + 2*s*(-9 + 60*sw^2 - 44*sw^4 - 
            160*sw^6 + 128*sw^8) - 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
            256*sw^8)*t)*GaugeXi[Q]^2)))/((1 - d)*mz^4*Pi^(3*d)*(mz^2 - s)^3*
     sw^6*(-1 + sw^2)^3*(-1 + GaugeXi[Q])^2), 
   ((-I/9)*2^(-7 - 8*d)*EL^6*
     (4*mz^2*s*(3*(-5 + d)*d^2*(2*Pi)^(7*d)*s^2*(-3 + 23*sw^2) + 
        2^(1 + 7*d)*Pi^(7*d)*(2*s^2*(9 - 69*sw^2 + 104*sw^4 + 116*sw^6 - 
            288*sw^8 + 128*sw^10 + 3*d^3*sw^4*(-13 + 8*sw^2) + 
            d^2*sw^4*(169 - 14*sw^2 - 144*sw^4 + 64*sw^6) - 
            6*d*(3 - 23*sw^2 + 39*sw^4 + 21*sw^6 - 72*sw^8 + 32*sw^10)) + 
          s*(-1 + sw^2)*(-18*d^2*(3 - 20*sw^2 + 32*sw^4) + 
            d^3*(9 - 60*sw^2 + 96*sw^4) - 8*(9 - 60*sw^2 + 122*sw^4 - 
              80*sw^6 + 64*sw^8) + d*(117 - 780*sw^2 + 1456*sw^4 - 640*sw^6 + 
              512*sw^8))*t + 2*(-1 + d)*(-9 + 69*sw^2 - 260*sw^4 + 520*sw^6 - 
            576*sw^8 + 256*sw^10)*t^2)) - (9*d^3*(2*Pi)^(7*d)*s^4 + 
        2^(1 + 7*d)*d*Pi^(7*d)*s^2*(2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 
            128*sw^8 + 3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 
              80*sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
            d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
              80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
            256*sw^8)*t^2) + 4*mz^4*(9*d^2*(-7 + d^2)*(2*Pi)^(7*d)*s^2*
           (1 + 25*sw^4) + 2^(1 + 7*d)*Pi^(7*d)*
           (s^2*(21*d^2*sw^2*(13 + 42*sw^4 - 16*sw^6) + 3*d^4*sw^2*(-13 - 
                42*sw^4 + 16*sw^6) + 6*(-1 + sw^2)^2*(-9 + 60*sw^2 - 
                44*sw^4 - 160*sw^6 + 128*sw^8) + d^3*(-1 + sw^2)^2*(-9 + 
                60*sw^2 - 44*sw^4 - 160*sw^6 + 128*sw^8) - 2*d*(-1 + sw^2)^2*(
                -45 + 300*sw^2 - 298*sw^4 - 560*sw^6 + 448*sw^8)) + 
            s*(-1 + sw^2)^2*(-9*d^3*(3 - 20*sw^2 + 32*sw^4) + 
              d^4*(9 - 60*sw^2 + 96*sw^4) - 24*(9 - 60*sw^2 + 122*sw^4 - 
                80*sw^6 + 64*sw^8) + d^2*(-45 + 300*sw^2 - 272*sw^4 - 
                640*sw^6 + 512*sw^8) + d*(279 - 1860*sw^2 + 3392*sw^4 - 
                1280*sw^6 + 1024*sw^8))*t + 2*(-3 + 2*d + d^2)*(-1 + sw^2)^2*
             (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^2)) - 
        d*mz^2*s*(-63*d^2*(2*Pi)^(7*d)*s^2*(-3 + 23*sw^2) + 
          2^(1 + 7*d)*Pi^(7*d)*(2*s^2*(3*d^3*(-3 + 23*sw^2 - 52*sw^4 + 
                32*sw^6) + d^2*sw^4*(715 - 80*sw^2 - 576*sw^4 + 256*sw^6) + 
              5*(9 - 69*sw^2 + 104*sw^4 + 116*sw^6 - 288*sw^8 + 128*sw^10) - 
              d*(81 - 621*sw^2 + 1066*sw^4 + 514*sw^6 - 1872*sw^8 + 
                832*sw^10)) + s*(-1 + sw^2)*(-75*d^2*(3 - 20*sw^2 + 
                32*sw^4) + 12*d^3*(3 - 20*sw^2 + 32*sw^4) - 40*(9 - 60*sw^2 + 
                122*sw^4 - 80*sw^6 + 64*sw^8) + d*(513 - 3420*sw^2 + 
                6304*sw^4 - 2560*sw^6 + 2048*sw^8))*t + 2*(-5 + 4*d)*
             (-9 + 69*sw^2 - 260*sw^4 + 520*sw^6 - 576*sw^8 + 256*sw^10)*
             t^2)))*GaugeXi[Q] + 
      (2*d*s^2*(9*d^2*(2*Pi)^(7*d)*s^2 + 2^(1 + 7*d)*Pi^(7*d)*
           (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
              3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 
                80*sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
              d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
                80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 
              320*sw^6 + 256*sw^8)*t^2)) + 
        4*mz^4*(d^2*(2*Pi)^(7*d)*s^2*(-9 - 641*sw^4 + 27*d^2*(1 + 25*sw^4)) + 
          2^(1 + 7*d)*Pi^(7*d)*(s^2*(9*d^4*sw^2*(-13 - 42*sw^4 + 16*sw^6) + 
              3*d^3*(-1 + sw^2)^2*(-15 + 100*sw^2 - 108*sw^4 - 160*sw^6 + 
                128*sw^8) + 10*(-1 + sw^2)^2*(-9 + 60*sw^2 - 44*sw^4 - 
                160*sw^6 + 128*sw^8) - 6*d*(-1 + sw^2)^2*(-21 + 140*sw^2 - 
                146*sw^4 - 240*sw^6 + 192*sw^8) + d^2*sw^2*(39 + 1182*sw^4 - 
                2048*sw^6 + 1664*sw^8 - 512*sw^10)) + s*(-1 + sw^2)^2*
             (-39*d^3*(3 - 20*sw^2 + 32*sw^4) + 9*d^4*(3 - 20*sw^2 + 
                32*sw^4) - 40*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8) + 
              3*d^2*(27 - 180*sw^2 + 496*sw^4 - 640*sw^6 + 512*sw^8) + 
              d*(369 - 2460*sw^2 + 4352*sw^4 - 1280*sw^6 + 1024*sw^8))*t + 
            2*(-5 + 2*d + 3*d^2)*(-1 + sw^2)^2*(9 - 60*sw^2 + 200*sw^4 - 
              320*sw^6 + 256*sw^8)*t^2)) - 
        mz^2*s*(-93*d^3*(2*Pi)^(7*d)*s^2*(-3 + 23*sw^2) + 
          2^(1 + 7*d)*Pi^(7*d)*(2*s^2*(6*d^4*(-3 + 23*sw^2 - 52*sw^4 + 
                32*sw^6) + d^3*sw^4*(1001 + 104*sw^2 - 1152*sw^4 + 
                512*sw^6) + 12*(9 - 69*sw^2 + 104*sw^4 + 116*sw^6 - 
                288*sw^8 + 128*sw^10) - 6*d^2*(6 - 46*sw^2 + 39*sw^4 + 
                201*sw^6 - 360*sw^8 + 160*sw^10) - d*(117 - 897*sw^2 + 
                1664*sw^4 + 236*sw^6 - 2016*sw^8 + 896*sw^10)) + 
            s*(-1 + sw^2)*(-117*d^3*(3 - 20*sw^2 + 32*sw^4) + 
              24*d^4*(3 - 20*sw^2 + 32*sw^4) - 96*(9 - 60*sw^2 + 122*sw^4 - 
                80*sw^6 + 64*sw^8) + d*(612 - 4080*sw^2 + 6736*sw^4 - 
                640*sw^6 + 512*sw^8) + d^2*(423 - 2820*sw^2 + 6176*sw^4 - 
                5120*sw^6 + 4096*sw^8))*t + 2*(-12 + d + 8*d^2)*
             (-9 + 69*sw^2 - 260*sw^4 + 520*sw^6 - 576*sw^8 + 256*sw^10)*
             t^2)))*GaugeXi[Q]^2 + 
      (-(d*s^2*(9*d^2*(2*Pi)^(7*d)*s^2 + 2^(1 + 7*d)*Pi^(7*d)*
            (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 3*d^2*sw^2*
                (-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
                 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + d^2*
                (9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
                 80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*
                sw^6 + 256*sw^8)*t^2))) - 
        4*mz^4*(d^2*(2*Pi)^(7*d)*s^2*(171 + 3443*sw^4 + 
            27*d^2*(1 + 25*sw^4)) + 2^(1 + 7*d)*Pi^(7*d)*
           (s^2*(9*d^4*sw^2*(-13 - 42*sw^4 + 16*sw^6) + 6*d*(-1 + sw^2)^2*(
                -3 + 20*sw^2 - 6*sw^4 - 80*sw^6 + 64*sw^8) + 
              3*d^3*(-1 + sw^2)^2*(-21 + 140*sw^2 - 172*sw^4 - 160*sw^6 + 
                128*sw^8) + 2*(-1 + sw^2)^2*(-9 + 60*sw^2 - 44*sw^4 - 
                160*sw^6 + 128*sw^8) - d^2*sw^2*(741 + 282*sw^4 + 3088*sw^6 - 
                3328*sw^8 + 1024*sw^10)) + s*(-1 + sw^2)^2*
             (-51*d^3*(3 - 20*sw^2 + 32*sw^4) + 9*d^4*(3 - 20*sw^2 + 
                32*sw^4) + d*(-99 + 660*sw^2 - 1472*sw^4 + 1280*sw^6 - 
                1024*sw^8) - 8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8) + 
              3*d^2*(99 - 660*sw^2 + 1264*sw^4 - 640*sw^6 + 512*sw^8))*t + 
            2*(-1 - 2*d + 3*d^2)*(-1 + sw^2)^2*(9 - 60*sw^2 + 200*sw^4 - 
              320*sw^6 + 256*sw^8)*t^2)) + 
        mz^2*s*(-45*d^3*(2*Pi)^(7*d)*s^2*(-3 + 23*sw^2) + 
          2^(1 + 7*d)*Pi^(7*d)*(2*s^2*(3*d^4*(-3 + 23*sw^2 - 52*sw^4 + 
                32*sw^6) + d^3*sw^4*(481 + 64*sw^2 - 576*sw^4 + 256*sw^6) + 
              d^2*(-9 + 69*sw^2 + 26*sw^4 - 646*sw^6 + 1008*sw^8 - 
                448*sw^10) + 8*(9 - 69*sw^2 + 104*sw^4 + 116*sw^6 - 
                288*sw^8 + 128*sw^10) - d*(81 - 621*sw^2 + 1144*sw^4 + 
                196*sw^6 - 1440*sw^8 + 640*sw^10)) + s*(-1 + sw^2)*
             (-57*d^3*(3 - 20*sw^2 + 32*sw^4) + 12*d^4*(3 - 20*sw^2 + 
                32*sw^4) + 16*d*(27 - 180*sw^2 + 301*sw^4 - 40*sw^6 + 
                32*sw^8) - 64*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8) + 
              d^2*(171 - 1140*sw^2 + 2656*sw^4 - 2560*sw^6 + 2048*sw^8))*t + 
            2*(-8 + d + 4*d^2)*(-9 + 69*sw^2 - 260*sw^4 + 520*sw^6 - 
              576*sw^8 + 256*sw^10)*t^2)))*GaugeXi[Q]^3 + 
      mz^2*(3*d^3*(2*Pi)^(7*d)*s^3*(-3 + 23*sw^2) + 2^(1 + 7*d)*d*Pi^(7*d)*s*
         (2*s^2*(-9 + 69*sw^2 - 104*sw^4 - 116*sw^6 + 288*sw^8 - 128*sw^10 + 
            3*d^2*sw^4*(-13 + 8*sw^2) + d*(9 - 69*sw^2 + 130*sw^4 + 10*sw^6 - 
              144*sw^8 + 64*sw^10)) + s*(-1 + sw^2)*
           (-15*d*(3 - 20*sw^2 + 32*sw^4) + d^2*(9 - 60*sw^2 + 96*sw^4) + 
            8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8))*t + 
          2*(-9 + 69*sw^2 - 260*sw^4 + 520*sw^6 - 576*sw^8 + 256*sw^10)*
           t^2) + 4*mz^2*(d^2*(2*Pi)^(7*d)*s^2*(9*d^2*(1 + 25*sw^4) + 
            13*(9 + 193*sw^4)) + 2^(1 + 7*d)*Pi^(7*d)*
           (s^2*(3*d^4*sw^2*(-13 - 42*sw^4 + 16*sw^6) + d^3*(-1 + sw^2)^2*(
                -27 + 180*sw^2 - 236*sw^4 - 160*sw^6 + 128*sw^8) - 
              2*(-1 + sw^2)^2*(-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 
                128*sw^8) + 2*d*(-1 + sw^2)^2*(-27 + 180*sw^2 - 158*sw^4 - 
                400*sw^6 + 320*sw^8) - d^2*sw^2*(507 + 582*sw^4 + 1376*sw^6 - 
                1664*sw^8 + 512*sw^10)) + (-1 + d)^2*s*(-1 + sw^2)^2*
             (-15*d*(3 - 20*sw^2 + 32*sw^4) + d^2*(9 - 60*sw^2 + 96*sw^4) + 
              8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8))*t + 
            2*(-1 + d)^2*(-1 + sw^2)^2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
              256*sw^8)*t^2)))*GaugeXi[Q]^4))/((-1 + d)*d*mz^4*Pi^(8*d)*
     (mz^2 - s)^3*sw^6*(-1 + sw^2)^3*(-1 + GaugeXi[Q])^2*GaugeXi[Q]), 
   ((-I/9)*2^(-7 - 4*d)*EL^6*s*(-(2^(1 + 3*d)*(-1 + d)*Pi^(3*d)*s*
        (d*s*(9 - 60*sw^2 + 96*sw^4) + 2*s*(-9 + 60*sw^2 - 44*sw^4 - 
           160*sw^6 + 128*sw^8) - 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
           256*sw^8)*t)*(-1 + GaugeXi[Q])^2*(s + mz^2*(-1 + sw^2) + 
          mz^2*(-1 + sw^2)*GaugeXi[Q])^2) + 2^(1 + 3*d)*Pi^(3*d)*s^2*
       (1 - 4*sw^2 + 8*sw^4)*(9 - 24*sw^2 + 32*sw^4)*(-1 + GaugeXi[Q])^2*
       (d*(s + mz^2*(-1 + sw^2))^2 + 2*mz^2*(-1 + sw^2)*
         (d*s + (-2 + d)*mz^2*(-1 + sw^2))*GaugeXi[Q] + 
        d*mz^4*(-1 + sw^2)^2*GaugeXi[Q]^2) + (2*Pi)^(3*d)*
       (d*s*(9 - 60*sw^2 + 96*sw^4) - 4*s*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 
          64*sw^8) - 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t)*
       (-1 + GaugeXi[Q])^2*((s + mz^2*(-1 + sw^2))^2*(d*s + 2*t) + 
        2*mz^2*(-1 + sw^2)*(mz^2*(-1 + sw^2)*((-2 + d)*s - 2*t) + 
          s*(d*s + 2*t))*GaugeXi[Q] + mz^4*(-1 + sw^2)^2*(d*s + 2*t)*
         GaugeXi[Q]^2) - 2*(1 - d)*s*
       (-((2*Pi)^(3*d)*(s^2*(d*(9 - 60*sw^2 + 96*sw^4) + 
             2*(-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 128*sw^8))*t + 
           mz^4*(-1 + sw^2)^2*(d*(9 - 60*sw^2 + 96*sw^4) + 
             2*(-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 128*sw^8))*t - 
           2*mz^2*(-1 + sw^2)*(s^2*(d^2*(9 - 60*sw^2 + 96*sw^4) + 4*
                (9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8) + 4*d*
                (-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 64*sw^8)) + 
             3*s*(54 - 360*sw^2 + 680*sw^4 - 320*sw^6 + 256*sw^8 - 11*d*
                (3 - 20*sw^2 + 32*sw^4) + d^2*(6 - 40*sw^2 + 64*sw^4))*t + 
             4*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^2))) - 
        2^(5 + 3*d)*Pi^(3*d)*((sw^4*(3 - 4*sw^2)^2*((-4 + d)*s^2*t + 
             mz^4*(-1 + sw^2)^2*((-4 + d)*s + 2*(-3 + d)*t) + 
             mz^2*(1 - sw^2)*(2*(8 - 6*d + d^2)*s^2 + (20 - 21*d + 4*d^2)*s*
                t - 8*t^2)))/4 - 4*sw^8*((-2 + d)*s^2*t + mz^4*(-1 + sw^2)^2*
             ((-2 + d)*s + 2*(-3 + d)*t) + mz^2*(1 - sw^2)*
             (2*(-2 + d)^2*s^2 + (34 - 21*d + 4*d^2)*s*t + 8*t^2)) + 
          (-1/2 + sw^2)^2*(4*sw^4*((-4 + d)*s^2*t + mz^4*(-1 + sw^2)^2*(
                (-4 + d)*s + 2*(-3 + d)*t) + mz^2*(1 - sw^2)*(
                2*(8 - 6*d + d^2)*s^2 + (20 - 21*d + 4*d^2)*s*t - 8*t^2)) - 
            ((3 - 4*sw^2)^2*((-2 + d)*s^2*t + mz^4*(-1 + sw^2)^2*
                ((-2 + d)*s + 2*(-3 + d)*t) + mz^2*(1 - sw^2)*
                (2*(-2 + d)^2*s^2 + (34 - 21*d + 4*d^2)*s*t + 8*t^2)))/4))*
         GaugeXi[Q] + 2^(4 + 3*d)*Pi^(3*d)*
         ((sw^4*(3 - 4*sw^2)^2*((-4 + d)*s^2*t + 2*mz^4*(-1 + sw^2)^2*
              (2*(-4 + d)*s + (-8 + 3*d)*t) + 2*mz^2*(1 - sw^2)*
              ((8 - 6*d + d^2)*s^2 + (4 - 9*d + 2*d^2)*s*t - 4*t^2)))/4 - 
          4*sw^8*((-2 + d)*s^2*t + 2*mz^4*(-1 + sw^2)^2*(2*(-2 + d)*s + 
              (-10 + 3*d)*t) + 2*mz^2*(1 - sw^2)*((-2 + d)^2*s^2 + 
              (14 - 9*d + 2*d^2)*s*t + 4*t^2)) + (-1/2 + sw^2)^2*
           (4*sw^4*((-4 + d)*s^2*t + 2*mz^4*(-1 + sw^2)^2*(2*(-4 + d)*s + 
                (-8 + 3*d)*t) + 2*mz^2*(1 - sw^2)*((8 - 6*d + d^2)*s^2 + 
                (4 - 9*d + 2*d^2)*s*t - 4*t^2)) - 
            ((3 - 4*sw^2)^2*((-2 + d)*s^2*t + 2*mz^4*(-1 + sw^2)^2*
                (2*(-2 + d)*s + (-10 + 3*d)*t) + 2*mz^2*(1 - sw^2)*
                ((-2 + d)^2*s^2 + (14 - 9*d + 2*d^2)*s*t + 4*t^2)))/4))*
         GaugeXi[Q]^2 + 2^(1 + 3*d)*mz^2*Pi^(3*d)*(-1 + sw^2)*
         (s*(18 - 120*sw^2 + 88*sw^4 + 320*sw^6 - 256*sw^8 + 
            d*(-9 + 60*sw^2 - 96*sw^4))*t + mz^2*(-1 + sw^2)*
           (d*s*(9 - 60*sw^2 + 96*sw^4) + 2*s*(-9 + 60*sw^2 - 44*sw^4 - 
              160*sw^6 + 128*sw^8) + 6*(-3 + d)*(3 - 20*sw^2 + 32*sw^4)*t))*
         GaugeXi[Q]^3 - mz^4*(2*Pi)^(3*d)*(-1 + sw^2)^2*
         (d*(9 - 60*sw^2 + 96*sw^4) + 2*(-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 
            128*sw^8))*t*GaugeXi[Q]^4)))/((1 - d)*mz^4*Pi^(4*d)*(mz^2 - s)^3*
     sw^6*(-1 + sw^2)^3*(-1 + GaugeXi[Q])^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}}
