{{{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {((-I/27)*2^(1 - d)*EL^6*((224 - 232*d + 74*d^2 - 7*d^3)*s^2 - 
      4*(144 - 76*d + 9*d^2)*s*t - 4*(176 - 80*d + 7*d^2)*t^2 + 
      2*(32 - 20*d + 3*d^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2)*GaugeXi[A] + 
      (-4 + d)^2*((-2 + d)*s^2 + 4*s*t + 4*t^2)*GaugeXi[A]^2))/
    ((-4 + d)*Pi^d*s^2), ((-I/27)*2^(3 - d)*(32 - 14*d + d^2)*EL^6*(s + 2*t))/
    ((-4 + d)*Pi^d*s), ((-I/27)*2^(2 - d)*EL^6*t*((-8 + 3*d)*s^2 + 8*s*t + 
      16*t^2))/(Pi^d*s), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0}, {((-I/27)*4^(-2 - d)*EL^6*(39*d^4*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(s^2*(-3*d^4 + d^2*(618 + 740*swC^2 - 1184*swC^4) + 
          2*d^3*(-87 - 35*swC^2 + 56*swC^4) - 64*(-6 - 35*swC^2 + 56*swC^4) + 
          16*d*(-54 - 145*swC^2 + 232*swC^4)) + 
        s*(-57*d^3 + 9*d^4 + 1152*(-1 - 5*swC^2 + 8*swC^4) + 
          72*d^2*(-1 - 5*swC^2 + 8*swC^4) - 32*d*(-27 - 95*swC^2 + 
            152*swC^4))*t + 2*(176 - 80*d + 7*d^2)*(3 - 20*swC^2 + 32*swC^4)*
         t^2) - 2*(9*d^4*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (2*s^2*(96 + 320*swC^2 - 512*swC^4 + d^2*(93 + 130*swC^2 - 
              208*swC^4) + 3*d^3*(-8 - 5*swC^2 + 8*swC^4) + 
            12*d*(-13 - 30*swC^2 + 48*swC^4)) + s*(-105*d^3 + 9*d^4 + 
            256*(3 - 5*swC^2 + 8*swC^4) - 160*d*(6 - 5*swC^2 + 8*swC^4) + 
            12*d^2*(39 - 10*swC^2 + 16*swC^4))*t + 2*(32 - 20*d + 3*d^2)*
           (3 - 20*swC^2 + 32*swC^4)*t^2))*GaugeXi[A] + 
      (-9*d^4*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(3*d^4 - 2*d^3*(-9 - 5*swC^2 + 8*swC^4) + 
            32*(-3 - 10*swC^2 + 16*swC^4) - 16*d*(-9 - 20*swC^2 + 32*swC^4) + 
            2*d^2*(-39 - 50*swC^2 + 80*swC^4)) - (-4 + d)^2*s*
           (-15*d + 3*d^2 + 8*(3 - 5*swC^2 + 8*swC^4))*t - 
          2*(-4 + d)^2*(3 - 20*swC^2 + 32*swC^4)*t^2))*GaugeXi[A]^2))/
    (cwC^2*(-4 + d)*Pi^(2*d)*(mz^2 - s)*s*swC^2), 
   ((-I/27)*4^(-1 - d)*EL^6*(-3*d^4*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
       (s*(-39*d^3 + 6*d^4 + d^2*(90 + 10*swC^2 - 16*swC^4) + 
          4*d*(12 - 35*swC^2 + 56*swC^4) - 8*(33 - 40*swC^2 + 64*swC^4)) + 
        (-24*d^3 + 3*d^4 + d^2*(60 + 20*swC^2 - 32*swC^4) - 
          32*(3 - 20*swC^2 + 32*swC^4) + 4*d*(-3 - 70*swC^2 + 112*swC^4))*
         t)))/(cwC^2*(-4 + d)*Pi^(2*d)*(mz^2 - s)*swC^2), 
   ((I/27)*2^(-3 - 2*d)*EL^6*t*(-3*d^3*(2*Pi)^d*s^2 + 
      2^(2 + d)*Pi^d*(s^2*(-6 + 6*d^2 + 40*swC^2 - 64*swC^4 + 
          3*d*(-3 - 5*swC^2 + 8*swC^4)) + 2*s*(-6 + 3*d - 20*swC^2 + 
          32*swC^4)*t + 4*(3 - 20*swC^2 + 32*swC^4)*t^2)))/
    (cwC^2*Pi^(2*d)*(mz^2 - s)*swC^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
  {0, ((-I/27)*2^(-2 - d)*EL^6*
     (mz^2*(33*d^3 - 3*d^4 + d*(84 + 340*sw^2 - 544*sw^4) + 
        12*d^2*(-9 - 5*sw^2 + 8*sw^4) + 24*(3 - 20*sw^2 + 32*sw^4)) + 
      s*(-57*d^3 + 6*d^4 + d^2*(156 + 40*sw^2 - 64*sw^4) - 
        8*(39 - 80*sw^2 + 128*sw^4) + 4*d*(-3 - 85*sw^2 + 136*sw^4)) + 
      2*(-36*d^3 + 3*d^4 + 8*(33 + 50*sw^2 - 80*sw^4) - 
        4*d^2*(-42 - 5*sw^2 + 8*sw^4) + 4*d*(-87 - 50*sw^2 + 80*sw^4))*t))/
    ((-4 + d)*Pi^d*s*sw^2*(-1 + sw^2)), 0, 
   ((-I/432)*EL^6*((2^(2 - d)*(-24*d^2 + 3*d^3 + d*(36 + 60*sw^2 - 96*sw^4) + 
         8*(3 - 20*sw^2 + 32*sw^4)))/Pi^d - 
      (2^(4 - d)*(156 + 36*d^2 - 3*d^3 + 40*sw^2 - 64*sw^4 + 
         4*d*(-33 - 5*sw^2 + 8*sw^4))*t)/((-4 + d)*Pi^d*s) - 
      (2^(2 - d)*(s*(-24*d^2 + 3*d^3 + d*(36 + 60*sw^2 - 96*sw^4) + 
           8*(3 - 20*sw^2 + 32*sw^4)) + 2*(156 + 36*d^2 - 3*d^3 + 40*sw^2 - 
           64*sw^4 + 4*d*(-33 - 5*sw^2 + 8*sw^4))*t))/(Pi^d*s) - 
      (4^(1 - d)*(2 - d)*(-3*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
          (2*s^2*(-6 + 6*d^2 + 40*sw^2 - 64*sw^4 + 3*d*(-3 - 5*sw^2 + 8*
                sw^4)) + s*(-36*d^2 + 3*d^3 - 4*d*(-36 - 5*sw^2 + 8*sw^4) + 
             12*(-15 - 10*sw^2 + 16*sw^4))*t + 8*(3 - 20*sw^2 + 32*sw^4)*
            t^2) + mz^2*(3*d^3*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (-2*s*(-6 + 6*d^2 + 40*sw^2 - 64*sw^4 + 3*d*(-3 - 5*sw^2 + 
                 8*sw^4)) + (156 + 36*d^2 - 3*d^3 + 40*sw^2 - 64*sw^4 + 4*d*
                (-33 - 5*sw^2 + 8*sw^4))*t))))/((-4 + d)*Pi^(2*d)*(mz^2 - s)*
        s) + (d*(-1 + 4*sw^2)*(-3 + 8*sw^2)*(-1 + GaugeXi[A]))/(2*Pi)^d + 
      (d*(3 - 20*sw^2 + 32*sw^4)*(-1 + GaugeXi[A]))/(2*Pi)^d - 
      (2^(1 - d)*(-6 + 3*d - 20*sw^2 + 32*sw^4)*t*(-1 + GaugeXi[A]))/
       (Pi^d*s) + ((d*s + 2*t)*(3*d*s - 4*s*(3 - 5*sw^2 + 8*sw^4) - 
         2*(3 - 20*sw^2 + 32*sw^4)*t)*(-1 + GaugeXi[A]))/((2*Pi)^d*s^2) - 
      (2^(1 - d)*(s*(-6 + 3*d - 20*sw^2 + 32*sw^4) - 
         2*(3 - 20*sw^2 + 32*sw^4)*t)*(-1 + GaugeXi[A]))/(Pi^d*s) - 
      ((-2 + d)*(s*(-6 + 3*d - 20*sw^2 + 32*sw^4) - 2*(3 - 20*sw^2 + 32*sw^4)*
          t)*(-1 + GaugeXi[A]))/((2*Pi)^d*s) - 
      (2^(1 - 4*d)*(-2 + d)*(mz^4*(2*Pi)^(3*d)*(-6 + 3*d - 20*sw^2 + 32*sw^4)*
          t + (2*Pi)^(3*d)*s^2*(-6 + 3*d - 20*sw^2 + 32*sw^4)*t + 
         2^(1 + 3*d)*mz^2*Pi^(3*d)*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
             4*d*(-3 - 5*sw^2 + 8*sw^4)) + 3*s*(18 - 11*d + 2*d^2 - 20*sw^2 + 
             32*sw^4)*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2))*(-1 + GaugeXi[A]))/
       (Pi^(4*d)*(mz^2 - s)^2*s) - 
      ((-2 + d)*(mz^2*(3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (s*(-3 - 10*sw^2 + 16*sw^4) + (-3 + 20*sw^2 - 32*sw^4)*t)) + 
         s*(-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(3 + 3*d + 10*sw^2 - 16*
                sw^4) + (3 - 20*sw^2 + 32*sw^4)*t)))*(-1 + GaugeXi[A]))/
       ((2*Pi)^(2*d)*(mz^2 - s)*s)))/(mz^2*sw^2*(1 - sw^2)), 
   ((I/27)*EL^6*(8^(1 + d)*Pi^(3*d)*(156 + 36*d^2 - 3*d^3 + 40*sw^2 - 
        64*sw^4 + 4*d*(-33 - 5*sw^2 + 8*sw^4))*(1 - (2*t)/((-4 + d)*s)) + 
      (2^(3 + 2*d)*(-3 + d)*Pi^(2*d)*(-3*d^3*(2*Pi)^d*s^2 + 
         2^(1 + d)*Pi^d*(2*s^2*(-6 + 6*d^2 + 40*sw^2 - 64*sw^4 + 
             3*d*(-3 - 5*sw^2 + 8*sw^4)) + s*(-36*d^2 + 3*d^3 - 
             4*d*(-36 - 5*sw^2 + 8*sw^4) + 12*(-15 - 10*sw^2 + 16*sw^4))*t + 
           8*(3 - 20*sw^2 + 32*sw^4)*t^2) + mz^2*(3*d^3*(2*Pi)^d*s + 
           2^(1 + d)*Pi^d*(-2*s*(-6 + 6*d^2 + 40*sw^2 - 64*sw^4 + 3*d*
                (-3 - 5*sw^2 + 8*sw^4)) + (156 + 36*d^2 - 3*d^3 + 40*sw^2 - 
               64*sw^4 + 4*d*(-33 - 5*sw^2 + 8*sw^4))*t))))/
       ((-4 + d)*(mz^2 - s)*s) - (4^(1 + d)*Pi^(2*d)*(3*d^2*(2*Pi)^d*s^2 + 
         2^(1 + d)*Pi^d*(2*s^2*(3 + 10*sw^2 - 16*sw^4 + 
             d*(-3 - 5*sw^2 + 8*sw^4)) + s*(-15*d + 3*d^2 + 
             8*(3 - 5*sw^2 + 8*sw^4))*t + 2*(3 - 20*sw^2 + 32*sw^4)*t^2) + 
         mz^2*(-3*d^3*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (2*s*(12*d^2 + d*(-57 + 5*sw^2 - 8*sw^4) + 4*(21 - 5*sw^2 + 
                 8*sw^4)) + (156 + 36*d^2 - 3*d^3 + 40*sw^2 - 64*sw^4 + 4*d*
                (-33 - 5*sw^2 + 8*sw^4))*t))))/(mz^2*s) + 
      ((2*Pi)^(3*d)*((-4 + d)*mz^2 + d*s)*(-1 + 4*sw^2)*(-3 + 8*sw^2)*
        (-1 + GaugeXi[A]))/mz^2 + ((2*Pi)^(3*d)*((-4 + d)*mz^2 + d*s)*
        (3 - 20*sw^2 + 32*sw^4)*(-1 + GaugeXi[A]))/mz^2 + 
      (2^(1 + 3*d)*Pi^(3*d)*(mz^2 - s)*(s*(-6 + 3*d - 20*sw^2 + 32*sw^4) - 
         2*(3 - 20*sw^2 + 32*sw^4)*t)*(-1 + GaugeXi[A]))/(mz^2*s) - 
      ((2*Pi)^(3*d)*((-4 + d)*mz^2 + (-2 + d)*s)*
        (s*(-6 + 3*d - 20*sw^2 + 32*sw^4) - 2*(3 - 20*sw^2 + 32*sw^4)*t)*
        (-1 + GaugeXi[A]))/(mz^2*s) + 
      ((2*Pi)^(3*d)*(3*d*s - 4*s*(3 - 5*sw^2 + 8*sw^4) - 
         2*(3 - 20*sw^2 + 32*sw^4)*t)*(mz^2*((-4 + d)*s + 2*t) + 
         s*(d*s + 2*t))*(-1 + GaugeXi[A]))/(mz^2*s^2) - 
      (2^(2 + 3*d)*Pi^(3*d)*(s*(-6 + 3*d - 20*sw^2 + 32*sw^4)*t + 
         mz^2*(s*(-6 + 3*d - 20*sw^2 + 32*sw^4) + 3*d*t - 
           4*(3 - 5*sw^2 + 8*sw^4)*t))*(-1 + GaugeXi[A]))/(mz^2*s) - 
      (2*(-3 + d)*(mz^2 + s)*(mz^4*(2*Pi)^(3*d)*(-6 + 3*d - 20*sw^2 + 
           32*sw^4)*t + (2*Pi)^(3*d)*s^2*(-6 + 3*d - 20*sw^2 + 32*sw^4)*t + 
         2^(1 + 3*d)*mz^2*Pi^(3*d)*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
             4*d*(-3 - 5*sw^2 + 8*sw^4)) + 3*s*(18 - 11*d + 2*d^2 - 20*sw^2 + 
             32*sw^4)*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2))*(-1 + GaugeXi[A]))/
       (s*(mz^3 - mz*s)^2) - ((2*Pi)^(2*d)*((-4 + d)*mz^2 + (-2 + d)*s)*
        (mz^2*(3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-3 - 10*sw^2 + 16*sw^4) + 
             (-3 + 20*sw^2 - 32*sw^4)*t)) + s*(-9*d*(2*Pi)^d*s + 
           2^(1 + d)*Pi^d*(s*(3 + 3*d + 10*sw^2 - 16*sw^4) + 
             (3 - 20*sw^2 + 32*sw^4)*t)))*(-1 + GaugeXi[A]))/
       (mz^2*(mz^2 - s)*s)))/(2^(4*(1 + d))*Pi^(4*d)*sw^2*(1 - sw^2)), 
   ((I/27)*2^(-3 - d)*EL^6*t*(mz^2*(648 + 120*d^2 - 9*d^3 + 
        4*d*(-123 - 5*sw^2 + 8*sw^4)) + s*(72 - 12*d^2 + 3*d^3 + 
        4*d*(-3 - 5*sw^2 + 8*sw^4)) + 8*(30 - 18*d + 3*d^2 - 20*sw^2 + 
        32*sw^4)*t))/(Pi^d*s*sw^2*(-1 + sw^2)), 
   ((I/27)*2^(-3 - 2*d)*EL^6*t*(-3*d^3*(2*Pi)^d*s^2 + 
      mz^4*(-3*d^3*(2*Pi)^d + 2^(2 + d)*Pi^d*(-6 + 6*d^2 + 40*sw^2 - 
          64*sw^4 + 3*d*(-3 - 5*sw^2 + 8*sw^4))) + 2^(1 + d)*mz^2*Pi^d*
       (s*(-18*d^2 + 3*d^3 - 4*d*(-3 - 5*sw^2 + 8*sw^4) + 
          16*(3 - 5*sw^2 + 8*sw^4)) + 4*(30 - 18*d + 3*d^2 - 20*sw^2 + 
          32*sw^4)*t) + 2^(2 + d)*Pi^d*
       (s^2*(-6 + 6*d^2 + 40*sw^2 - 64*sw^4 + 3*d*(-3 - 5*sw^2 + 8*sw^4)) + 
        2*s*(-6 + 3*d - 20*sw^2 + 32*sw^4)*t + 4*(3 - 20*sw^2 + 32*sw^4)*
         t^2)))/(Pi^(2*d)*s*sw^2*(-1 + sw^2)), 
   ((I/27)*4^(-2 - d)*EL^6*(-3*s^2*(d^2*(2*Pi)^d*s^2 + 
        2^(1 + d)*Pi^d*(s^2*(6 + d^2 + 20*sw^2 - 32*sw^4 + 
            2*d*(-3 - 5*sw^2 + 8*sw^4)) + s*(-15*d + 3*d^2 + 
            8*(3 - 5*sw^2 + 8*sw^4))*t + 2*(3 - 20*sw^2 + 32*sw^4)*t^2)) + 
      4*mz^2*s*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
          s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[Z] - 
      mz^4*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
          s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[Z]^2 + 
      GaugeXi[A]*(-9*d^2*(2*Pi)^d*s^4 + 2^(1 + d)*Pi^d*s^2*
         (s^2*(-6 + 3*d^2 - 20*sw^2 + 32*sw^4 + d*(6 + 10*sw^2 - 16*sw^4)) + 
          s*(15*d - 3*d^2 - 8*(3 - 5*sw^2 + 8*sw^4))*t - 
          2*(3 - 20*sw^2 + 32*sw^4)*t^2) + mz^4*(3*d^2*(2*Pi)^d*s^2 + 
          2^(1 + d)*Pi^d*(2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 
                8*sw^4)) + s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
            2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[Z]^2)))/
    (mz^2*Pi^(2*d)*s^2*sw^2*(-1 + sw^2)*(s - mz^2*GaugeXi[Z])), 
   ((-I/27)*4^(-2 - d)*EL^6*(-1 + GaugeXi[A])*(-9*d^2*(2*Pi)^d*s^3 + 
      2^(1 + d)*Pi^d*s*(s^2*(-6 + 3*d^2 - 20*sw^2 + 32*sw^4 + 
          d*(6 + 10*sw^2 - 16*sw^4)) + s*(15*d - 3*d^2 - 
          8*(3 - 5*sw^2 + 8*sw^4))*t - 2*(3 - 20*sw^2 + 32*sw^4)*t^2) + 
      mz^2*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
          s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[Z]))/
    (mz^2*Pi^(2*d)*s^2*sw^2*(-1 + sw^2)*(s - mz^2*GaugeXi[Z])), 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
  {0, ((-I/27)*2^(-5 - d)*EL^6*
     (mz^2*(-33*d^3*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2)) + 3*d^4*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2)) - 12*d^2*(-9*(3 - 10*swC^2 + 8*swC^4) + 
          8*sw^4*(-9 - 5*swC^2 + 8*swC^4) - 2*sw^2*(-45 + 59*swC^2 + 
            20*swC^4)) - 24*(9 - 30*swC^2 + 24*swC^4 + 
          8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
            80*swC^4)) + 4*d*(sw^2*(210 + 106*swC^2 - 680*swC^4) - 
          21*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(-21 - 85*swC^2 + 
            136*swC^4))) + s*(57*d^3*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2)) - 6*d^4*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2)) + 4*d^2*(sw^2*(390 - 572*swC^2 - 80*swC^4) - 
          39*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(-39 - 10*swC^2 + 16*swC^4)) + 
        8*(39*(3 - 10*swC^2 + 8*swC^4) - 10*sw^2*(39 - 104*swC^2 + 
            64*swC^4) + 8*sw^4*(39 - 80*swC^2 + 128*swC^4)) - 
        4*d*(-9 + 30*swC^2 - 24*swC^4 + sw^2*(30 + 394*swC^2 - 680*swC^4) + 
          8*sw^4*(-3 - 85*swC^2 + 136*swC^4))) - 
      2*(-36*d^3*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
        3*d^4*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) - 
        8*d^2*(sw^2*(210 - 323*swC^2 - 20*swC^4) - 
          21*(3 - 10*swC^2 + 8*swC^4) + 4*sw^4*(-42 - 5*swC^2 + 8*swC^4)) - 
        8*(sw^2*(330 - 268*swC^2 - 400*swC^4) - 33*(3 - 10*swC^2 + 8*swC^4) + 
          8*sw^4*(-33 - 50*swC^2 + 80*swC^4)) + 
        4*d*(-87*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(-87 - 50*swC^2 + 
            80*swC^4) - 2*sw^2*(-435 + 566*swC^2 + 200*swC^4)))*t))/
    (cwC^2*(-4 + d)*Pi^d*(mz^2 - s)*sw^2*(-1 + sw^2)*swC^2), 0, 
   ((I/27)*2^(-7 - 2*d)*EL^6*
     ((2^(2 + d)*Pi^d*s*(-24*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
           2*sw^2*(-5 + 8*swC^2)) + 3*d^3*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
           2*sw^2*(-5 + 8*swC^2)) - 12*d*(-9 + 30*swC^2 - 24*swC^4 + 
           sw^2*(30 - 22*swC^2 - 40*swC^4) + 8*sw^4*(-3 - 5*swC^2 + 
             8*swC^4)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
           8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
             80*swC^4))))/(mz^2 - s) + 
      (2^(4 + d)*Pi^d*(-36*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
           2*sw^2*(-5 + 8*swC^2)) + 3*d^3*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
           2*sw^2*(-5 + 8*swC^2)) - 4*d*(sw^2*(330 - 502*swC^2 - 40*swC^4) - 
           33*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(-33 - 5*swC^2 + 8*swC^4)) + 
         4*(sw^2*(390 - 572*swC^2 - 80*swC^4) - 39*(3 - 10*swC^2 + 8*swC^4) + 
           8*sw^4*(-39 - 10*swC^2 + 16*swC^4)))*t)/((-4 + d)*(mz^2 - s)) - 
      (2^(2 + d)*Pi^d*(s*(-24*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
             2*sw^2*(-5 + 8*swC^2)) + 3*d^3*(3 + 8*sw^4 - 10*swC^2 + 
             8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) - 12*d*(-9 + 30*swC^2 - 
             24*swC^4 + sw^2*(30 - 22*swC^2 - 40*swC^4) + 
             8*sw^4*(-3 - 5*swC^2 + 8*swC^4)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
             8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 80*
                swC^4))) + 2*(36*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
             2*sw^2*(-5 + 8*swC^2)) - 3*d^3*(3 + 8*sw^4 - 10*swC^2 + 
             8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
           4*d*(sw^2*(330 - 502*swC^2 - 40*swC^4) - 33*(3 - 10*swC^2 + 8*
                swC^4) + 8*sw^4*(-33 - 5*swC^2 + 8*swC^4)) - 
           4*(sw^2*(390 - 572*swC^2 - 80*swC^4) - 39*(3 - 10*swC^2 + 8*
                swC^4) + 8*sw^4*(-39 - 10*swC^2 + 16*swC^4)))*t))/
       (mz^2 - s) + (2^(1 + d)*(-2 + d)*Pi^d*
        (-(s^2*(-24*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 
                8*swC^2)) + 3*d^3*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
              2*sw^2*(-5 + 8*swC^2)) - 12*d*(-9 + 30*swC^2 - 24*swC^4 + 
              sw^2*(30 - 22*swC^2 - 40*swC^4) + 8*sw^4*(-3 - 5*swC^2 + 
                8*swC^4)) + 8*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 
                20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 80*swC^4)))) + 
         2*s*(-36*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
             2*sw^2*(-5 + 8*swC^2)) + 3*d^3*(3 + 8*sw^4 - 10*swC^2 + 
             8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) - 
           8*d*(-5*sw^2*(-36 + 55*swC^2 + 4*swC^4) - 18*(3 - 10*swC^2 + 8*
                swC^4) + 4*sw^4*(-36 - 5*swC^2 + 8*swC^4)) + 
           12*(-15*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(-15 - 10*swC^2 + 16*
                swC^4) - 2*sw^2*(-75 + 94*swC^2 + 40*swC^4)))*t + 
         16*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 
           2*sw^2*(15 - 76*swC^2 + 80*swC^4))*t^2 + 
         mz^2*(s*(-24*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*
                (-5 + 8*swC^2)) + 3*d^3*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*
                sw^2*(-5 + 8*swC^2)) - 12*d*(-9 + 30*swC^2 - 24*swC^4 + sw^2*
                (30 - 22*swC^2 - 40*swC^4) + 8*sw^4*(-3 - 5*swC^2 + 
                 8*swC^4)) + 8*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*
                (3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
                 80*swC^4))) + 2*(36*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*
                sw^2*(-5 + 8*swC^2)) - 3*d^3*(3 + 8*sw^4 - 10*swC^2 + 8*
                swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 4*d*(sw^2*(330 - 502*swC^2 - 
                 40*swC^4) - 33*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*
                (-33 - 5*swC^2 + 8*swC^4)) - 4*(sw^2*(390 - 572*swC^2 - 
                 80*swC^4) - 39*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*
                (-39 - 10*swC^2 + 16*swC^4)))*t)))/((-4 + d)*(mz^2 - s)^2) - 
      (2*(2 - d)*(9*d^3*(2*Pi)^d*s^2 - 2^(1 + d)*Pi^d*
          (s^2*(3*d^3*(3 + 4*sw^4 - 5*swC^2 + 4*swC^4 + sw^2*
                (-5 + 8*swC^2)) - 12*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*
                sw^2*(-5 + 8*swC^2)) - 6*d*(-9 + 30*swC^2 - 24*swC^4 + sw^2*
                (30 - 22*swC^2 - 40*swC^4) + 8*sw^4*(-3 - 5*swC^2 + 
                 8*swC^4)) + 4*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*
                (3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
                 80*swC^4))) + s*(180*(3 - 10*swC^2 + 8*swC^4) - 
             96*sw^4*(-15 - 10*swC^2 + 16*swC^4) + 24*sw^2*(-75 + 94*swC^2 + 
               40*swC^4) + 36*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*
                (-5 + 8*swC^2)) - 3*d^3*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*
                sw^2*(-5 + 8*swC^2)) + 8*d*(-5*sw^2*(-36 + 55*swC^2 + 
                 4*swC^4) - 18*(3 - 10*swC^2 + 8*swC^4) + 4*sw^4*
                (-36 - 5*swC^2 + 8*swC^4)))*t - 8*(9 - 30*swC^2 + 24*swC^4 + 
             8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 80*
                swC^4))*t^2) + mz^2*(9*d^3*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (s*(3*d^3*(4*sw^4 + swC^2*(-5 + 4*swC^2) + sw^2*(-5 + 8*swC^2)) - 
               12*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*
                  (-5 + 8*swC^2)) - 6*d*(-9 + 30*swC^2 - 24*swC^4 + 
                 sw^2*(30 - 22*swC^2 - 40*swC^4) + 8*sw^4*(-3 - 5*swC^2 + 
                   8*swC^4)) + 4*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*
                  (3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
                   80*swC^4))) + (36*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
                 2*sw^2*(-5 + 8*swC^2)) - 3*d^3*(3 + 8*sw^4 - 10*swC^2 + 
                 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 4*d*
                (sw^2*(330 - 502*swC^2 - 40*swC^4) - 33*(3 - 10*swC^2 + 
                   8*swC^4) + 8*sw^4*(-33 - 5*swC^2 + 8*swC^4)) - 4*
                (sw^2*(390 - 572*swC^2 - 80*swC^4) - 39*(3 - 10*swC^2 + 
                   8*swC^4) + 8*sw^4*(-39 - 10*swC^2 + 16*swC^4)))*t))))/
       ((-4 + d)*(mz^2 - s)^2) + (2^(1 + d)*d*Pi^d*s*(9 - 30*swC^2 + 
         24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 
         2*sw^2*(15 - 76*swC^2 + 80*swC^4))*(-1 + GaugeXi[A]))/(mz^2 - s) - 
      (2^(1 + d)*Pi^d*(3*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
           2*sw^2*(-5 + 8*swC^2)) + 2*(-9 + 30*swC^2 - 24*swC^4 + 
           sw^2*(30 + 4*swC^2 - 80*swC^4) + 8*sw^4*(-3 - 10*swC^2 + 
             16*swC^4)))*t*(-1 + GaugeXi[A]))/(mz^2 - s) + 
      ((2*Pi)^d*(d*s + 2*t)*(s*(3*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
             2*sw^2*(-5 + 8*swC^2)) - 4*(9 - 30*swC^2 + 24*swC^4 + 
             sw^2*(-30 + 74*swC^2 - 40*swC^4) + 8*sw^4*(3 - 5*swC^2 + 8*
                swC^4))) - 2*(9 - 30*swC^2 + 24*swC^4 + 
           8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
             80*swC^4))*t)*(-1 + GaugeXi[A]))/((mz^2 - s)*s) - 
      (2^(1 + d)*Pi^d*(s*(3*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
             2*sw^2*(-5 + 8*swC^2)) + 2*(-9 + 30*swC^2 - 24*swC^4 + 
             sw^2*(30 + 4*swC^2 - 80*swC^4) + 8*sw^4*(-3 - 10*swC^2 + 16*
                swC^4))) - 2*(9 - 30*swC^2 + 24*swC^4 + 
           8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
             80*swC^4))*t)*(-1 + GaugeXi[A]))/(mz^2 - s) + 
      ((-2 + d)*(2*Pi)^d*(s*(3*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
             2*sw^2*(-5 + 8*swC^2)) + 2*(-9 + 30*swC^2 - 24*swC^4 + 
             sw^2*(30 + 4*swC^2 - 80*swC^4) + 8*sw^4*(-3 - 10*swC^2 + 16*
                swC^4))) - 2*(9 - 30*swC^2 + 24*swC^4 + 
           8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
             80*swC^4))*t)*(-1 + GaugeXi[A]))/(-mz^2 + s) - 
      (2^(1 + d)*(-2 + d)*Pi^d*(mz^4*(3*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
             2*sw^2*(-5 + 8*swC^2)) + 2*(-9 + 30*swC^2 - 24*swC^4 + 
             sw^2*(30 + 4*swC^2 - 80*swC^4) + 8*sw^4*(-3 - 10*swC^2 + 16*
                swC^4)))*t + s^2*(3*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
             2*sw^2*(-5 + 8*swC^2)) + 2*(-9 + 30*swC^2 - 24*swC^4 + 
             sw^2*(30 + 4*swC^2 - 80*swC^4) + 8*sw^4*(-3 - 10*swC^2 + 16*
                swC^4)))*t + 2*mz^2*(s^2*(3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*
                swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 4*d*(-9 + 30*swC^2 - 24*
                swC^4 + sw^2*(30 - 22*swC^2 - 40*swC^4) + 8*sw^4*
                (-3 - 5*swC^2 + 8*swC^4)) - 4*(-9 + 30*swC^2 - 24*swC^4 + 
               sw^2*(30 + 4*swC^2 - 80*swC^4) + 8*sw^4*(-3 - 10*swC^2 + 
                 16*swC^4))) + 3*s*(-11*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
               2*sw^2*(-5 + 8*swC^2)) + 2*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*
                swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 2*(9*(3 - 10*swC^2 + 
                 8*swC^4) + 8*sw^4*(9 - 10*swC^2 + 16*swC^4) - 2*sw^2*
                (45 - 98*swC^2 + 40*swC^4)))*t + 4*(9 - 30*swC^2 + 24*swC^4 + 
             8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 80*
                swC^4))*t^2))*(-1 + GaugeXi[A]))/(mz^2 - s)^3 - 
      ((-2 + d)*(s*(-27*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (s*(9 - 30*swC^2 + 24*swC^4 + sw^4*(24 + 80*swC^2 - 128*swC^4) + 
               sw^2*(-30 - 4*swC^2 + 80*swC^4) - 3*d*(-3 + 4*sw^4 - 5*swC^2 + 
                 4*swC^4 + sw^2*(-5 + 8*swC^2))) + (9 - 30*swC^2 + 24*swC^4 + 
               8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
                 80*swC^4))*t)) + mz^2*(9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (s*(4*sw^4*(-6 + 3*d - 20*swC^2 + 32*swC^4) + 3*(-3 - 
                 5*(-2 + d)*swC^2 + 4*(-2 + d)*swC^4) + sw^2*(30 + 4*swC^2 - 
                 80*swC^4 + 3*d*(-5 + 8*swC^2))) + (-9 + 30*swC^2 - 24*
                swC^4 - 8*sw^4*(3 - 20*swC^2 + 32*swC^4) + 2*sw^2*
                (15 - 76*swC^2 + 80*swC^4))*t)))*(-1 + GaugeXi[A]))/
       (mz^2 - s)^2))/(cwC^2*mz^2*Pi^(2*d)*sw^2*(1 - sw^2)*swC^2), 
   ((I/27)*2^(-7 - 2*d)*EL^6*
     ((2^(3 + d)*Pi^d*s*(-36*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
           2*sw^2*(-5 + 8*swC^2)) + 3*d^3*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
           2*sw^2*(-5 + 8*swC^2)) - 4*d*(sw^2*(330 - 502*swC^2 - 40*swC^4) - 
           33*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(-33 - 5*swC^2 + 8*swC^4)) + 
         4*(sw^2*(390 - 572*swC^2 - 80*swC^4) - 39*(3 - 10*swC^2 + 8*swC^4) + 
           8*sw^4*(-39 - 10*swC^2 + 16*swC^4)))*(1 - (2*t)/((-4 + d)*s)))/
       (mz^2 - s) + (2^(2 + d)*Pi^d*
        (s^2*(3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
             2*sw^2*(-5 + 8*swC^2)) + 4*d*(-9 + 30*swC^2 - 24*swC^4 + 
             sw^2*(30 - 22*swC^2 - 40*swC^4) + 8*sw^4*(-3 - 5*swC^2 + 8*
                swC^4)) - 4*(-9 + 30*swC^2 - 24*swC^4 + 
             sw^2*(30 + 4*swC^2 - 80*swC^4) + 8*sw^4*(-3 - 10*swC^2 + 16*
                swC^4))) + 2*s*(-15*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
             2*sw^2*(-5 + 8*swC^2)) + 3*d^2*(3 + 8*sw^4 - 10*swC^2 + 
             8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
             sw^2*(-30 + 74*swC^2 - 40*swC^4) + 8*sw^4*(3 - 5*swC^2 + 8*
                swC^4)))*t + 4*(9 - 30*swC^2 + 24*swC^4 + 
           8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
             80*swC^4))*t^2 + mz^2*(s*(48*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*
                swC^4 + 2*sw^2*(-5 + 8*swC^2)) - 3*d^3*(3 + 8*sw^4 - 10*
                swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
             16*(sw^2*(-210 + 362*swC^2 - 40*swC^4) + 21*(3 - 10*swC^2 + 
                 8*swC^4) + 8*sw^4*(21 - 5*swC^2 + 8*swC^4)) - 
             4*d*(sw^2*(-570 + 938*swC^2 - 40*swC^4) + 57*(3 - 10*swC^2 + 
                 8*swC^4) + 8*sw^4*(57 - 5*swC^2 + 8*swC^4))) + 
           2*(36*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*
                (-5 + 8*swC^2)) - 3*d^3*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*
                sw^2*(-5 + 8*swC^2)) + 4*d*(sw^2*(330 - 502*swC^2 - 
                 40*swC^4) - 33*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*
                (-33 - 5*swC^2 + 8*swC^4)) - 4*(sw^2*(390 - 572*swC^2 - 
                 80*swC^4) - 39*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*
                (-39 - 10*swC^2 + 16*swC^4)))*t)))/(mz^2*(mz^2 - s)) - 
      (2^(2 + d)*(-3 + d)*Pi^d*
        (-(s^2*(-24*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 
                8*swC^2)) + 3*d^3*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
              2*sw^2*(-5 + 8*swC^2)) - 12*d*(-9 + 30*swC^2 - 24*swC^4 + 
              sw^2*(30 - 22*swC^2 - 40*swC^4) + 8*sw^4*(-3 - 5*swC^2 + 
                8*swC^4)) + 8*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 
                20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 80*swC^4)))) + 
         2*s*(-36*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
             2*sw^2*(-5 + 8*swC^2)) + 3*d^3*(3 + 8*sw^4 - 10*swC^2 + 
             8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) - 
           8*d*(-5*sw^2*(-36 + 55*swC^2 + 4*swC^4) - 18*(3 - 10*swC^2 + 8*
                swC^4) + 4*sw^4*(-36 - 5*swC^2 + 8*swC^4)) + 
           12*(-15*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(-15 - 10*swC^2 + 16*
                swC^4) - 2*sw^2*(-75 + 94*swC^2 + 40*swC^4)))*t + 
         16*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 
           2*sw^2*(15 - 76*swC^2 + 80*swC^4))*t^2 + 
         mz^2*(s*(-24*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*
                (-5 + 8*swC^2)) + 3*d^3*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*
                sw^2*(-5 + 8*swC^2)) - 12*d*(-9 + 30*swC^2 - 24*swC^4 + sw^2*
                (30 - 22*swC^2 - 40*swC^4) + 8*sw^4*(-3 - 5*swC^2 + 
                 8*swC^4)) + 8*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*
                (3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
                 80*swC^4))) + 2*(36*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*
                sw^2*(-5 + 8*swC^2)) - 3*d^3*(3 + 8*sw^4 - 10*swC^2 + 8*
                swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 4*d*(sw^2*(330 - 502*swC^2 - 
                 40*swC^4) - 33*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*
                (-33 - 5*swC^2 + 8*swC^4)) - 4*(sw^2*(390 - 572*swC^2 - 
                 80*swC^4) - 39*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*
                (-39 - 10*swC^2 + 16*swC^4)))*t)))/((-4 + d)*(mz^2 - s)^2) - 
      (4*(-3 + d)*(9*d^3*(2*Pi)^d*s^2 - 2^(1 + d)*Pi^d*
          (s^2*(3*d^3*(3 + 4*sw^4 - 5*swC^2 + 4*swC^4 + sw^2*
                (-5 + 8*swC^2)) - 12*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*
                sw^2*(-5 + 8*swC^2)) - 6*d*(-9 + 30*swC^2 - 24*swC^4 + sw^2*
                (30 - 22*swC^2 - 40*swC^4) + 8*sw^4*(-3 - 5*swC^2 + 
                 8*swC^4)) + 4*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*
                (3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
                 80*swC^4))) + s*(180*(3 - 10*swC^2 + 8*swC^4) - 
             96*sw^4*(-15 - 10*swC^2 + 16*swC^4) + 24*sw^2*(-75 + 94*swC^2 + 
               40*swC^4) + 36*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*
                (-5 + 8*swC^2)) - 3*d^3*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*
                sw^2*(-5 + 8*swC^2)) + 8*d*(-5*sw^2*(-36 + 55*swC^2 + 
                 4*swC^4) - 18*(3 - 10*swC^2 + 8*swC^4) + 4*sw^4*
                (-36 - 5*swC^2 + 8*swC^4)))*t - 8*(9 - 30*swC^2 + 24*swC^4 + 
             8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 80*
                swC^4))*t^2) + mz^2*(9*d^3*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (s*(3*d^3*(4*sw^4 + swC^2*(-5 + 4*swC^2) + sw^2*(-5 + 8*swC^2)) - 
               12*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*
                  (-5 + 8*swC^2)) - 6*d*(-9 + 30*swC^2 - 24*swC^4 + 
                 sw^2*(30 - 22*swC^2 - 40*swC^4) + 8*sw^4*(-3 - 5*swC^2 + 
                   8*swC^4)) + 4*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*
                  (3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
                   80*swC^4))) + (36*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
                 2*sw^2*(-5 + 8*swC^2)) - 3*d^3*(3 + 8*sw^4 - 10*swC^2 + 
                 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 4*d*
                (sw^2*(330 - 502*swC^2 - 40*swC^4) - 33*(3 - 10*swC^2 + 
                   8*swC^4) + 8*sw^4*(-33 - 5*swC^2 + 8*swC^4)) - 4*
                (sw^2*(390 - 572*swC^2 - 80*swC^4) - 39*(3 - 10*swC^2 + 
                   8*swC^4) + 8*sw^4*(-39 - 10*swC^2 + 16*swC^4)))*t))))/
       ((-4 + d)*(mz^2 - s)^2) + (2^(1 + d)*Pi^d*s*((-4 + d)*mz^2 + d*s)*
        (9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 
         2*sw^2*(15 - 76*swC^2 + 80*swC^4))*(-1 + GaugeXi[A]))/
       (mz^2*(-mz^2 + s)) - (2^(1 + d)*Pi^d*
        (s*(3*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
           2*(-9 + 30*swC^2 - 24*swC^4 + sw^2*(30 + 4*swC^2 - 80*swC^4) + 
             8*sw^4*(-3 - 10*swC^2 + 16*swC^4))) - 
         2*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 
           2*sw^2*(15 - 76*swC^2 + 80*swC^4))*t)*(-1 + GaugeXi[A]))/mz^2 + 
      ((2*Pi)^d*((-4 + d)*mz^2 + (-2 + d)*s)*
        (s*(3*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
           2*(-9 + 30*swC^2 - 24*swC^4 + sw^2*(30 + 4*swC^2 - 80*swC^4) + 
             8*sw^4*(-3 - 10*swC^2 + 16*swC^4))) - 
         2*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 
           2*sw^2*(15 - 76*swC^2 + 80*swC^4))*t)*(-1 + GaugeXi[A]))/
       (mz^4 - mz^2*s) - 
      ((2*Pi)^d*(s*(3*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
             2*sw^2*(-5 + 8*swC^2)) - 4*(9 - 30*swC^2 + 24*swC^4 + 
             sw^2*(-30 + 74*swC^2 - 40*swC^4) + 8*sw^4*(3 - 5*swC^2 + 8*
                swC^4))) - 2*(9 - 30*swC^2 + 24*swC^4 + 
           8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
             80*swC^4))*t)*(mz^2*((-4 + d)*s + 2*t) + s*(d*s + 2*t))*
        (-1 + GaugeXi[A]))/(mz^2*(mz^2 - s)*s) + 
      (2^(1 + d)*(-3 + d)*Pi^d*(mz^2 + s)*
        (mz^4*(3*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
             2*sw^2*(-5 + 8*swC^2)) + 2*(-9 + 30*swC^2 - 24*swC^4 + 
             sw^2*(30 + 4*swC^2 - 80*swC^4) + 8*sw^4*(-3 - 10*swC^2 + 16*
                swC^4)))*t + s^2*(3*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
             2*sw^2*(-5 + 8*swC^2)) + 2*(-9 + 30*swC^2 - 24*swC^4 + 
             sw^2*(30 + 4*swC^2 - 80*swC^4) + 8*sw^4*(-3 - 10*swC^2 + 16*
                swC^4)))*t + 2*mz^2*(s^2*(3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*
                swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 4*d*(-9 + 30*swC^2 - 24*
                swC^4 + sw^2*(30 - 22*swC^2 - 40*swC^4) + 8*sw^4*
                (-3 - 5*swC^2 + 8*swC^4)) - 4*(-9 + 30*swC^2 - 24*swC^4 + 
               sw^2*(30 + 4*swC^2 - 80*swC^4) + 8*sw^4*(-3 - 10*swC^2 + 
                 16*swC^4))) + 3*s*(-11*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
               2*sw^2*(-5 + 8*swC^2)) + 2*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*
                swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 2*(9*(3 - 10*swC^2 + 
                 8*swC^4) + 8*sw^4*(9 - 10*swC^2 + 16*swC^4) - 2*sw^2*
                (45 - 98*swC^2 + 40*swC^4)))*t + 4*(9 - 30*swC^2 + 24*swC^4 + 
             8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 80*
                swC^4))*t^2))*(-1 + GaugeXi[A]))/(mz^2*(mz^2 - s)^3) - 
      ((-((-4 + d)*mz^2) - (-2 + d)*s)*
        (s*(-27*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(9 - 30*swC^2 + 24*swC^4 + 
               sw^4*(24 + 80*swC^2 - 128*swC^4) + sw^2*(-30 - 4*swC^2 + 
                 80*swC^4) - 3*d*(-3 + 4*sw^4 - 5*swC^2 + 4*swC^4 + 
                 sw^2*(-5 + 8*swC^2))) + (9 - 30*swC^2 + 24*swC^4 + 8*sw^4*
                (3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
                 80*swC^4))*t)) + mz^2*(9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (s*(4*sw^4*(-6 + 3*d - 20*swC^2 + 32*swC^4) + 3*(-3 - 
                 5*(-2 + d)*swC^2 + 4*(-2 + d)*swC^4) + sw^2*(30 + 4*swC^2 - 
                 80*swC^4 + 3*d*(-5 + 8*swC^2))) + (-9 + 30*swC^2 - 24*
                swC^4 - 8*sw^4*(3 - 20*swC^2 + 32*swC^4) + 2*sw^2*
                (15 - 76*swC^2 + 80*swC^4))*t)))*(-1 + GaugeXi[A]))/
       (mz^3 - mz*s)^2 + 
      (4*(s*(9*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(4*sw^4*(-6 + 3*d - 20*swC^2 + 32*
                swC^4) + 3*(-3 - 5*(-2 + d)*swC^2 + 4*(-2 + d)*swC^4) + 
             sw^2*(30 + 4*swC^2 - 80*swC^4 + 3*d*(-5 + 8*swC^2))))*t + 
         mz^2*(9*d*(2*Pi)^d*(s + t) + 2^(1 + d)*Pi^d*
            (s*(4*sw^4*(-6 + 3*d - 20*swC^2 + 32*swC^4) + 3*(-3 - 
                 5*(-2 + d)*swC^2 + 4*(-2 + d)*swC^4) + sw^2*(30 + 4*swC^2 - 
                 80*swC^4 + 3*d*(-5 + 8*swC^2))) + 
             (3*(-6 - 5*(-4 + d)*swC^2 + 4*(-4 + d)*swC^4) + sw^2*
                (60 - 148*swC^2 + 80*swC^4 + 3*d*(-5 + 8*swC^2)) + 4*sw^4*
                (3*d - 4*(3 - 5*swC^2 + 8*swC^4)))*t)))*(-1 + GaugeXi[A]))/
       (mz^2*(mz^2 - s))))/(cwC^2*Pi^(2*d)*sw^2*(1 - sw^2)*swC^2), 
   ((-I/27)*2^(-6 - d)*EL^6*t*
     (s*(72*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) - 
        12*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
        3*d^3*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
        4*d*(-9 + 30*swC^2 - 24*swC^4 + sw^2*(30 - 22*swC^2 - 40*swC^4) + 
          8*sw^4*(-3 - 5*swC^2 + 8*swC^4))) + 
      mz^2*(648*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
        120*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) - 
        9*d^3*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
        4*d*(-123*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(-123 - 5*swC^2 + 
            8*swC^4) - 2*sw^2*(-615 + 971*swC^2 + 20*swC^4))) + 
      8*(30*(3 - 10*swC^2 + 8*swC^4) + 16*sw^4*(15 - 10*swC^2 + 16*swC^4) - 
        4*sw^2*(75 - 146*swC^2 + 40*swC^4) - 18*d*(3 + 8*sw^4 - 10*swC^2 + 
          8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 3*d^2*(3 + 8*sw^4 - 10*swC^2 + 
          8*swC^4 + 2*sw^2*(-5 + 8*swC^2)))*t))/(cwC^2*Pi^d*(mz^2 - s)*sw^2*
     (-1 + sw^2)*swC^2), ((-I/27)*2^(-6 - d)*EL^6*t*
     (-(mz^4*(-24*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
           2*sw^2*(-5 + 8*swC^2)) + 3*d^3*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
           2*sw^2*(-5 + 8*swC^2)) - 12*d*(-9 + 30*swC^2 - 24*swC^4 + 
           sw^2*(30 - 22*swC^2 - 40*swC^4) + 8*sw^4*(-3 - 5*swC^2 + 
             8*swC^4)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
           8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
             80*swC^4)))) - s^2*(-24*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2)) + 3*d^3*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2)) - 12*d*(-9 + 30*swC^2 - 24*swC^4 + 
          sw^2*(30 - 22*swC^2 - 40*swC^4) + 8*sw^4*(-3 - 5*swC^2 + 
            8*swC^4)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
          8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
            80*swC^4))) + 8*s*(3*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2)) + 2*(-9 + 30*swC^2 - 24*swC^4 + 
          sw^2*(30 + 4*swC^2 - 80*swC^4) + 8*sw^4*(-3 - 10*swC^2 + 
            16*swC^4)))*t + 16*(9 - 30*swC^2 + 24*swC^4 + 
        8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 80*swC^4))*
       t^2 + 2*mz^2*(s*(-18*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
            2*sw^2*(-5 + 8*swC^2)) + 3*d^3*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
            2*sw^2*(-5 + 8*swC^2)) - 4*d*(-9 + 30*swC^2 - 24*swC^4 + 
            sw^2*(30 - 22*swC^2 - 40*swC^4) + 8*sw^4*(-3 - 5*swC^2 + 
              8*swC^4)) + 16*(9 - 30*swC^2 + 24*swC^4 + 
            sw^2*(-30 + 74*swC^2 - 40*swC^4) + 8*sw^4*(3 - 5*swC^2 + 
              8*swC^4))) + 4*(30*(3 - 10*swC^2 + 8*swC^4) + 
          16*sw^4*(15 - 10*swC^2 + 16*swC^4) - 4*sw^2*(75 - 146*swC^2 + 
            40*swC^4) - 18*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
            2*sw^2*(-5 + 8*swC^2)) + 3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
            2*sw^2*(-5 + 8*swC^2)))*t)))/(cwC^2*Pi^d*(mz^2 - s)*sw^2*
     (-1 + sw^2)*swC^2), ((I/27)*2^(-7 - 2*d)*EL^6*
     (2^(2 + d)*Pi^d*(s^2*(3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
            2*sw^2*(-5 + 8*swC^2)) + 4*d*(-9 + 30*swC^2 - 24*swC^4 + 
            sw^2*(30 - 22*swC^2 - 40*swC^4) + 8*sw^4*(-3 - 5*swC^2 + 
              8*swC^4)) - 4*(-9 + 30*swC^2 - 24*swC^4 + 
            sw^2*(30 + 4*swC^2 - 80*swC^4) + 8*sw^4*(-3 - 10*swC^2 + 
              16*swC^4))) + 2*s*(-15*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
            2*sw^2*(-5 + 8*swC^2)) + 3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
            2*sw^2*(-5 + 8*swC^2)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
            sw^2*(-30 + 74*swC^2 - 40*swC^4) + 8*sw^4*(3 - 5*swC^2 + 
              8*swC^4)))*t + 4*(9 - 30*swC^2 + 24*swC^4 + 
          8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
            80*swC^4))*t^2) - 2^(1 + d)*Pi^d*
       (s*(3*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
          2*(-9 + 30*swC^2 - 24*swC^4 + sw^2*(30 + 4*swC^2 - 80*swC^4) + 
            8*sw^4*(-3 - 10*swC^2 + 16*swC^4))) - 
        2*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 
          2*sw^2*(15 - 76*swC^2 + 80*swC^4))*t)*(-1 + GaugeXi[A])*
       (-s + mz^2*GaugeXi[Z]) + 2^(1 + d)*(-3 + d)*Pi^d*
       (3*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
        2*(-9 + 30*swC^2 - 24*swC^4 + sw^2*(30 + 4*swC^2 - 80*swC^4) + 
          8*sw^4*(-3 - 10*swC^2 + 16*swC^4)))*t*(-1 + GaugeXi[A])*
       (s + mz^2*GaugeXi[Z]) + 2^(1 + d)*Pi^d*s*(9 - 30*swC^2 + 24*swC^4 + 
        8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 80*swC^4))*
       (-1 + GaugeXi[A])*(-(d*s) - (-4 + d)*mz^2*GaugeXi[Z]) + 
      (2*Pi)^d*(s*(3*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
            2*sw^2*(-5 + 8*swC^2)) + 2*(-9 + 30*swC^2 - 24*swC^4 + 
            sw^2*(30 + 4*swC^2 - 80*swC^4) + 8*sw^4*(-3 - 10*swC^2 + 
              16*swC^4))) - 2*(9 - 30*swC^2 + 24*swC^4 + 
          8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
            80*swC^4))*t)*(-1 + GaugeXi[A])*((-2 + d)*s + 
        (-4 + d)*mz^2*GaugeXi[Z]) + 
      ((2*Pi)^d*(s*(-3*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
             2*sw^2*(-5 + 8*swC^2)) + 4*(9 - 30*swC^2 + 24*swC^4 + 
             sw^2*(-30 + 74*swC^2 - 40*swC^4) + 8*sw^4*(3 - 5*swC^2 + 8*
                swC^4))) + 2*(9 - 30*swC^2 + 24*swC^4 + 
           8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
             80*swC^4))*t)*(-1 + GaugeXi[A])*(s*(d*s + 2*t) + 
         mz^2*((-4 + d)*s + 2*t)*GaugeXi[Z]))/s + 
      ((-1 + GaugeXi[A])*((-2 + d)*s + (-4 + d)*mz^2*GaugeXi[Z])*
        (s*(27*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-9 + 30*swC^2 - 24*swC^4 + 
               sw^2*(30 + 4*swC^2 - 80*swC^4) + 8*sw^4*(-3 - 10*swC^2 + 
                 16*swC^4) + 3*d*(-3 + 4*sw^4 - 5*swC^2 + 4*swC^4 + 
                 sw^2*(-5 + 8*swC^2))) + (-9 + 30*swC^2 - 24*swC^4 - 8*sw^4*
                (3 - 20*swC^2 + 32*swC^4) + 2*sw^2*(15 - 76*swC^2 + 
                 80*swC^4))*t)) + mz^2*(-9*d*(2*Pi)^d*s + 
           2^(1 + d)*Pi^d*(s*(-4*sw^4*(-6 + 3*d - 20*swC^2 + 32*swC^4) + 3*
                (3 + 5*(-2 + d)*swC^2 - 4*(-2 + d)*swC^4) + sw^2*
                (-30 - 4*swC^2 + 80*swC^4 - 3*d*(-5 + 8*swC^2))) + 
             (9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*
                sw^2*(15 - 76*swC^2 + 80*swC^4))*t))*GaugeXi[Z]))/
       (s - mz^2*GaugeXi[Z]) + 4*(-1 + GaugeXi[A])*
       (s*(9*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(4*sw^4*(-6 + 3*d - 20*swC^2 + 
              32*swC^4) + 3*(-3 - 5*(-2 + d)*swC^2 + 4*(-2 + d)*swC^4) + 
            sw^2*(30 + 4*swC^2 - 80*swC^4 + 3*d*(-5 + 8*swC^2))))*t + 
        mz^2*(9*d*(2*Pi)^d*(s + t) + 2^(1 + d)*Pi^d*
           (s*(4*sw^4*(-6 + 3*d - 20*swC^2 + 32*swC^4) + 3*(-3 - 
                5*(-2 + d)*swC^2 + 4*(-2 + d)*swC^4) + sw^2*(30 + 4*swC^2 - 
                80*swC^4 + 3*d*(-5 + 8*swC^2))) + 
            (3*(-6 - 5*(-4 + d)*swC^2 + 4*(-4 + d)*swC^4) + sw^2*(60 - 
                148*swC^2 + 80*swC^4 + 3*d*(-5 + 8*swC^2)) + 4*sw^4*(3*d - 
                4*(3 - 5*swC^2 + 8*swC^4)))*t))*GaugeXi[Z])))/
    (cwC^2*mz^2*Pi^(2*d)*(mz^2 - s)*sw^2*(-1 + sw^2)*swC^2), 
   ((I/27)*2^(-7 - 2*d)*EL^6*(-1 + GaugeXi[A])*
     (2^(1 + d)*d*Pi^d*s*(9 - 30*swC^2 + 24*swC^4 + 
        8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
          80*swC^4)) - 2^(1 + d)*Pi^d*(3*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2)) + 2*(-9 + 30*swC^2 - 24*swC^4 + 
          sw^2*(30 + 4*swC^2 - 80*swC^4) + 8*sw^4*(-3 - 10*swC^2 + 
            16*swC^4)))*t - 2^(1 + d)*(-2 + d)*Pi^d*
       (3*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
        2*(-9 + 30*swC^2 - 24*swC^4 + sw^2*(30 + 4*swC^2 - 80*swC^4) + 
          8*sw^4*(-3 - 10*swC^2 + 16*swC^4)))*t + 
      ((2*Pi)^d*(d*s + 2*t)*(s*(3*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
             2*sw^2*(-5 + 8*swC^2)) - 4*(9 - 30*swC^2 + 24*swC^4 + 
             sw^2*(-30 + 74*swC^2 - 40*swC^4) + 8*sw^4*(3 - 5*swC^2 + 8*
                swC^4))) - 2*(9 - 30*swC^2 + 24*swC^4 + 
           8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
             80*swC^4))*t))/s + 2^(1 + d)*Pi^d*
       (s*(-3*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
          2*(9 - 30*swC^2 + 24*swC^4 + sw^4*(24 + 80*swC^2 - 128*swC^4) + 
            sw^2*(-30 - 4*swC^2 + 80*swC^4))) + 
        2*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 
          2*sw^2*(15 - 76*swC^2 + 80*swC^4))*t) + 
      (2^(1 + d)*(-2 + d)*Pi^d*(s*(3*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
             2*sw^2*(-5 + 8*swC^2)) + 2*(-9 + 30*swC^2 - 24*swC^4 + 
             sw^2*(30 + 4*swC^2 - 80*swC^4) + 8*sw^4*(-3 - 10*swC^2 + 16*
                swC^4))) - 2*(9 - 30*swC^2 + 24*swC^4 + 
           8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
             80*swC^4))*t)*(s - mz^2*GaugeXi[Z]))/
       (-2*s + 2*mz^2*GaugeXi[Z]) + 
      (2*(-2 + d)*(s*(27*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (s*(-9 + 30*swC^2 - 24*swC^4 + sw^2*(30 + 4*swC^2 - 80*swC^4) + 8*
                sw^4*(-3 - 10*swC^2 + 16*swC^4) + 3*d*(-3 + 4*sw^4 - 
                 5*swC^2 + 4*swC^4 + sw^2*(-5 + 8*swC^2))) + 
             (-9 + 30*swC^2 - 24*swC^4 - 8*sw^4*(3 - 20*swC^2 + 32*swC^4) + 2*
                sw^2*(15 - 76*swC^2 + 80*swC^4))*t)) + 
         mz^2*(-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (s*(-4*sw^4*(-6 + 3*d - 20*swC^2 + 32*swC^4) + 3*
                (3 + 5*(-2 + d)*swC^2 - 4*(-2 + d)*swC^4) + sw^2*
                (-30 - 4*swC^2 + 80*swC^4 - 3*d*(-5 + 8*swC^2))) + 
             (9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*
                sw^2*(15 - 76*swC^2 + 80*swC^4))*t))*GaugeXi[Z]))/
       (-2*s + 2*mz^2*GaugeXi[Z])))/(cwC^2*mz^2*Pi^(2*d)*(mz^2 - s)*sw^2*
     (-1 + sw^2)*swC^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, ((-I/27)*2^(-2 - d)*EL^6*
     (mz^2*(33*d^3 - 3*d^4 + d*(84 + 340*sw^2 - 544*sw^4) + 
        12*d^2*(-9 - 5*sw^2 + 8*sw^4) + 24*(3 - 20*sw^2 + 32*sw^4)) + 
      s*(-57*d^3 + 6*d^4 + d^2*(156 + 40*sw^2 - 64*sw^4) - 
        8*(39 - 80*sw^2 + 128*sw^4) + 4*d*(-3 - 85*sw^2 + 136*sw^4)) + 
      2*(-36*d^3 + 3*d^4 + 8*(33 + 50*sw^2 - 80*sw^4) - 
        4*d^2*(-42 - 5*sw^2 + 8*sw^4) + 4*d*(-87 - 50*sw^2 + 80*sw^4))*t))/
    ((-4 + d)*Pi^d*s*sw^2*(-1 + sw^2)), 0, 
   ((-I/432)*EL^6*((2^(2 - d)*(-24*d^2 + 3*d^3 + d*(36 + 60*sw^2 - 96*sw^4) + 
         8*(3 - 20*sw^2 + 32*sw^4)))/Pi^d - 
      (2^(4 - d)*(156 + 36*d^2 - 3*d^3 + 40*sw^2 - 64*sw^4 + 
         4*d*(-33 - 5*sw^2 + 8*sw^4))*t)/((-4 + d)*Pi^d*s) - 
      (2^(2 - d)*(s*(-24*d^2 + 3*d^3 + d*(36 + 60*sw^2 - 96*sw^4) + 
           8*(3 - 20*sw^2 + 32*sw^4)) + 2*(156 + 36*d^2 - 3*d^3 + 40*sw^2 - 
           64*sw^4 + 4*d*(-33 - 5*sw^2 + 8*sw^4))*t))/(Pi^d*s) - 
      (4^(1 - d)*(2 - d)*(-3*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
          (2*s^2*(-6 + 6*d^2 + 40*sw^2 - 64*sw^4 + 3*d*(-3 - 5*sw^2 + 8*
                sw^4)) + s*(-36*d^2 + 3*d^3 - 4*d*(-36 - 5*sw^2 + 8*sw^4) + 
             12*(-15 - 10*sw^2 + 16*sw^4))*t + 8*(3 - 20*sw^2 + 32*sw^4)*
            t^2) + mz^2*(3*d^3*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (-2*s*(-6 + 6*d^2 + 40*sw^2 - 64*sw^4 + 3*d*(-3 - 5*sw^2 + 
                 8*sw^4)) + (156 + 36*d^2 - 3*d^3 + 40*sw^2 - 64*sw^4 + 4*d*
                (-33 - 5*sw^2 + 8*sw^4))*t))))/((-4 + d)*Pi^(2*d)*(mz^2 - s)*
        s) + (d*(-1 + 4*sw^2)*(-3 + 8*sw^2)*(-1 + GaugeXi[A]))/(2*Pi)^d + 
      (d*(3 - 20*sw^2 + 32*sw^4)*(-1 + GaugeXi[A]))/(2*Pi)^d - 
      (2^(1 - d)*(-6 + 3*d - 20*sw^2 + 32*sw^4)*t*(-1 + GaugeXi[A]))/
       (Pi^d*s) + ((d*s + 2*t)*(3*d*s - 4*s*(3 - 5*sw^2 + 8*sw^4) - 
         2*(3 - 20*sw^2 + 32*sw^4)*t)*(-1 + GaugeXi[A]))/((2*Pi)^d*s^2) - 
      (2^(1 - d)*(s*(-6 + 3*d - 20*sw^2 + 32*sw^4) - 
         2*(3 - 20*sw^2 + 32*sw^4)*t)*(-1 + GaugeXi[A]))/(Pi^d*s) - 
      ((-2 + d)*(s*(-6 + 3*d - 20*sw^2 + 32*sw^4) - 2*(3 - 20*sw^2 + 32*sw^4)*
          t)*(-1 + GaugeXi[A]))/((2*Pi)^d*s) - 
      (2^(1 - 4*d)*(-2 + d)*(mz^4*(2*Pi)^(3*d)*(-6 + 3*d - 20*sw^2 + 32*sw^4)*
          t + (2*Pi)^(3*d)*s^2*(-6 + 3*d - 20*sw^2 + 32*sw^4)*t + 
         2^(1 + 3*d)*mz^2*Pi^(3*d)*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
             4*d*(-3 - 5*sw^2 + 8*sw^4)) + 3*s*(18 - 11*d + 2*d^2 - 20*sw^2 + 
             32*sw^4)*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2))*(-1 + GaugeXi[A]))/
       (Pi^(4*d)*(mz^2 - s)^2*s) - 
      ((-2 + d)*(mz^2*(3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (s*(-3 - 10*sw^2 + 16*sw^4) + (-3 + 20*sw^2 - 32*sw^4)*t)) + 
         s*(-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(3 + 3*d + 10*sw^2 - 16*
                sw^4) + (3 - 20*sw^2 + 32*sw^4)*t)))*(-1 + GaugeXi[A]))/
       ((2*Pi)^(2*d)*(mz^2 - s)*s)))/(mz^2*sw^2*(1 - sw^2)), 
   ((I/27)*EL^6*(8^(1 + d)*Pi^(3*d)*(156 + 36*d^2 - 3*d^3 + 40*sw^2 - 
        64*sw^4 + 4*d*(-33 - 5*sw^2 + 8*sw^4))*(1 - (2*t)/((-4 + d)*s)) + 
      (2^(3 + 2*d)*(-3 + d)*Pi^(2*d)*(-3*d^3*(2*Pi)^d*s^2 + 
         2^(1 + d)*Pi^d*(2*s^2*(-6 + 6*d^2 + 40*sw^2 - 64*sw^4 + 
             3*d*(-3 - 5*sw^2 + 8*sw^4)) + s*(-36*d^2 + 3*d^3 - 
             4*d*(-36 - 5*sw^2 + 8*sw^4) + 12*(-15 - 10*sw^2 + 16*sw^4))*t + 
           8*(3 - 20*sw^2 + 32*sw^4)*t^2) + mz^2*(3*d^3*(2*Pi)^d*s + 
           2^(1 + d)*Pi^d*(-2*s*(-6 + 6*d^2 + 40*sw^2 - 64*sw^4 + 3*d*
                (-3 - 5*sw^2 + 8*sw^4)) + (156 + 36*d^2 - 3*d^3 + 40*sw^2 - 
               64*sw^4 + 4*d*(-33 - 5*sw^2 + 8*sw^4))*t))))/
       ((-4 + d)*(mz^2 - s)*s) - (4^(1 + d)*Pi^(2*d)*(3*d^2*(2*Pi)^d*s^2 + 
         2^(1 + d)*Pi^d*(2*s^2*(3 + 10*sw^2 - 16*sw^4 + 
             d*(-3 - 5*sw^2 + 8*sw^4)) + s*(-15*d + 3*d^2 + 
             8*(3 - 5*sw^2 + 8*sw^4))*t + 2*(3 - 20*sw^2 + 32*sw^4)*t^2) + 
         mz^2*(-3*d^3*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (2*s*(12*d^2 + d*(-57 + 5*sw^2 - 8*sw^4) + 4*(21 - 5*sw^2 + 
                 8*sw^4)) + (156 + 36*d^2 - 3*d^3 + 40*sw^2 - 64*sw^4 + 4*d*
                (-33 - 5*sw^2 + 8*sw^4))*t))))/(mz^2*s) + 
      ((2*Pi)^(3*d)*((-4 + d)*mz^2 + d*s)*(-1 + 4*sw^2)*(-3 + 8*sw^2)*
        (-1 + GaugeXi[A]))/mz^2 + ((2*Pi)^(3*d)*((-4 + d)*mz^2 + d*s)*
        (3 - 20*sw^2 + 32*sw^4)*(-1 + GaugeXi[A]))/mz^2 + 
      (2^(1 + 3*d)*Pi^(3*d)*(mz^2 - s)*(s*(-6 + 3*d - 20*sw^2 + 32*sw^4) - 
         2*(3 - 20*sw^2 + 32*sw^4)*t)*(-1 + GaugeXi[A]))/(mz^2*s) - 
      ((2*Pi)^(3*d)*((-4 + d)*mz^2 + (-2 + d)*s)*
        (s*(-6 + 3*d - 20*sw^2 + 32*sw^4) - 2*(3 - 20*sw^2 + 32*sw^4)*t)*
        (-1 + GaugeXi[A]))/(mz^2*s) + 
      ((2*Pi)^(3*d)*(3*d*s - 4*s*(3 - 5*sw^2 + 8*sw^4) - 
         2*(3 - 20*sw^2 + 32*sw^4)*t)*(mz^2*((-4 + d)*s + 2*t) + 
         s*(d*s + 2*t))*(-1 + GaugeXi[A]))/(mz^2*s^2) - 
      (2^(2 + 3*d)*Pi^(3*d)*(s*(-6 + 3*d - 20*sw^2 + 32*sw^4)*t + 
         mz^2*(s*(-6 + 3*d - 20*sw^2 + 32*sw^4) + 3*d*t - 
           4*(3 - 5*sw^2 + 8*sw^4)*t))*(-1 + GaugeXi[A]))/(mz^2*s) - 
      (2*(-3 + d)*(mz^2 + s)*(mz^4*(2*Pi)^(3*d)*(-6 + 3*d - 20*sw^2 + 
           32*sw^4)*t + (2*Pi)^(3*d)*s^2*(-6 + 3*d - 20*sw^2 + 32*sw^4)*t + 
         2^(1 + 3*d)*mz^2*Pi^(3*d)*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
             4*d*(-3 - 5*sw^2 + 8*sw^4)) + 3*s*(18 - 11*d + 2*d^2 - 20*sw^2 + 
             32*sw^4)*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2))*(-1 + GaugeXi[A]))/
       (s*(mz^3 - mz*s)^2) - ((2*Pi)^(2*d)*((-4 + d)*mz^2 + (-2 + d)*s)*
        (mz^2*(3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-3 - 10*sw^2 + 16*sw^4) + 
             (-3 + 20*sw^2 - 32*sw^4)*t)) + s*(-9*d*(2*Pi)^d*s + 
           2^(1 + d)*Pi^d*(s*(3 + 3*d + 10*sw^2 - 16*sw^4) + 
             (3 - 20*sw^2 + 32*sw^4)*t)))*(-1 + GaugeXi[A]))/
       (mz^2*(mz^2 - s)*s)))/(2^(4*(1 + d))*Pi^(4*d)*sw^2*(1 - sw^2)), 
   ((I/27)*2^(-3 - 2*d)*EL^6*t*(-3*d^3*(2*Pi)^d*s + 
      mz^2*(-3*d^3*(2*Pi)^d + 2^(1 + d)*Pi^d*(324 + 60*d^2 - 3*d^3 + 
          2*d*(-123 - 5*sw^2 + 8*sw^4))) + 2^(1 + d)*Pi^d*
       (s*(36 - 6*d^2 + 3*d^3 + 2*d*(-3 - 5*sw^2 + 8*sw^4)) + 
        4*(30 - 18*d + 3*d^2 - 20*sw^2 + 32*sw^4)*t)))/
    (Pi^(2*d)*s*sw^2*(-1 + sw^2)), ((I/27)*2^(-3 - 2*d)*EL^6*t*
     (-3*d^3*(2*Pi)^d*s^2 + mz^4*(-3*d^3*(2*Pi)^d + 2^(2 + d)*Pi^d*
         (-6 + 6*d^2 + 40*sw^2 - 64*sw^4 + 3*d*(-3 - 5*sw^2 + 8*sw^4))) + 
      2^(1 + d)*mz^2*Pi^d*(s*(-18*d^2 + 3*d^3 - 4*d*(-3 - 5*sw^2 + 8*sw^4) + 
          16*(3 - 5*sw^2 + 8*sw^4)) + 4*(30 - 18*d + 3*d^2 - 20*sw^2 + 
          32*sw^4)*t) + 2^(2 + d)*Pi^d*
       (s^2*(-6 + 6*d^2 + 40*sw^2 - 64*sw^4 + 3*d*(-3 - 5*sw^2 + 8*sw^4)) + 
        2*s*(-6 + 3*d - 20*sw^2 + 32*sw^4)*t + 4*(3 - 20*sw^2 + 32*sw^4)*
         t^2)))/(Pi^(2*d)*s*sw^2*(-1 + sw^2)), 
   ((I/27)*4^(-2 - d)*EL^6*(-3*s^2*(d^2*(2*Pi)^d*s^2 + 
        2^(1 + d)*Pi^d*(s^2*(6 + d^2 + 20*sw^2 - 32*sw^4 + 
            2*d*(-3 - 5*sw^2 + 8*sw^4)) + s*(-15*d + 3*d^2 + 
            8*(3 - 5*sw^2 + 8*sw^4))*t + 2*(3 - 20*sw^2 + 32*sw^4)*t^2)) + 
      4*mz^2*s*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
          s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[Z] - 
      mz^4*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
          s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[Z]^2 + 
      GaugeXi[A]*(-9*d^2*(2*Pi)^d*s^4 + 2^(1 + d)*Pi^d*s^2*
         (s^2*(-6 + 3*d^2 - 20*sw^2 + 32*sw^4 + d*(6 + 10*sw^2 - 16*sw^4)) + 
          s*(15*d - 3*d^2 - 8*(3 - 5*sw^2 + 8*sw^4))*t - 
          2*(3 - 20*sw^2 + 32*sw^4)*t^2) + mz^4*(3*d^2*(2*Pi)^d*s^2 + 
          2^(1 + d)*Pi^d*(2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 
                8*sw^4)) + s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
            2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[Z]^2)))/
    (mz^2*Pi^(2*d)*s^2*sw^2*(-1 + sw^2)*(s - mz^2*GaugeXi[Z])), 
   ((-I/27)*4^(-2 - d)*EL^6*(-1 + GaugeXi[A])*(-9*d^2*(2*Pi)^d*s^3 + 
      2^(1 + d)*Pi^d*s*(s^2*(-6 + 3*d^2 - 20*sw^2 + 32*sw^4 + 
          d*(6 + 10*sw^2 - 16*sw^4)) + s*(15*d - 3*d^2 - 
          8*(3 - 5*sw^2 + 8*sw^4))*t - 2*(3 - 20*sw^2 + 32*sw^4)*t^2) + 
      mz^2*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
          s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[Z]))/
    (mz^2*Pi^(2*d)*s^2*sw^2*(-1 + sw^2)*(s - mz^2*GaugeXi[Z])), 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
  {0, ((-I/27)*2^(-5 - d)*EL^6*
     (mz^2*(-33*d^3*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2)) + 3*d^4*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2)) - 12*d^2*(-9*(3 - 10*swC^2 + 8*swC^4) + 
          8*sw^4*(-9 - 5*swC^2 + 8*swC^4) - 2*sw^2*(-45 + 59*swC^2 + 
            20*swC^4)) - 24*(9 - 30*swC^2 + 24*swC^4 + 
          8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
            80*swC^4)) + 4*d*(sw^2*(210 + 106*swC^2 - 680*swC^4) - 
          21*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(-21 - 85*swC^2 + 
            136*swC^4))) + s*(57*d^3*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2)) - 6*d^4*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2)) + 4*d^2*(sw^2*(390 - 572*swC^2 - 80*swC^4) - 
          39*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(-39 - 10*swC^2 + 16*swC^4)) + 
        8*(39*(3 - 10*swC^2 + 8*swC^4) - 10*sw^2*(39 - 104*swC^2 + 
            64*swC^4) + 8*sw^4*(39 - 80*swC^2 + 128*swC^4)) - 
        4*d*(-9 + 30*swC^2 - 24*swC^4 + sw^2*(30 + 394*swC^2 - 680*swC^4) + 
          8*sw^4*(-3 - 85*swC^2 + 136*swC^4))) - 
      2*(-36*d^3*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
        3*d^4*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) - 
        8*d^2*(sw^2*(210 - 323*swC^2 - 20*swC^4) - 
          21*(3 - 10*swC^2 + 8*swC^4) + 4*sw^4*(-42 - 5*swC^2 + 8*swC^4)) - 
        8*(sw^2*(330 - 268*swC^2 - 400*swC^4) - 33*(3 - 10*swC^2 + 8*swC^4) + 
          8*sw^4*(-33 - 50*swC^2 + 80*swC^4)) + 
        4*d*(-87*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(-87 - 50*swC^2 + 
            80*swC^4) - 2*sw^2*(-435 + 566*swC^2 + 200*swC^4)))*t))/
    (cwC^2*(-4 + d)*Pi^d*(mz^2 - s)*sw^2*(-1 + sw^2)*swC^2), 0, 
   ((I/27)*2^(-7 - 2*d)*EL^6*
     ((2^(2 + d)*Pi^d*s*(-24*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
           2*sw^2*(-5 + 8*swC^2)) + 3*d^3*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
           2*sw^2*(-5 + 8*swC^2)) - 12*d*(-9 + 30*swC^2 - 24*swC^4 + 
           sw^2*(30 - 22*swC^2 - 40*swC^4) + 8*sw^4*(-3 - 5*swC^2 + 
             8*swC^4)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
           8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
             80*swC^4))))/(mz^2 - s) + 
      (2^(3 + d)*Pi^d*(-36*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
           2*sw^2*(-5 + 8*swC^2)) + 3*d^3*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
           2*sw^2*(-5 + 8*swC^2)) - 4*d*(sw^2*(330 - 502*swC^2 - 40*swC^4) - 
           33*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(-33 - 5*swC^2 + 8*swC^4)) + 
         4*(sw^2*(390 - 572*swC^2 - 80*swC^4) - 39*(3 - 10*swC^2 + 8*swC^4) + 
           8*sw^4*(-39 - 10*swC^2 + 16*swC^4)))*t)/((-4 + d)*(mz^2 - s)) + 
      (8*(9*d^3*(2*Pi)^d + 2^(1 + d)*Pi^d*
          (3*d^3*(4*sw^4 + swC^2*(-5 + 4*swC^2) + sw^2*(-5 + 8*swC^2)) - 
           18*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
           2*(sw^2*(390 - 572*swC^2 - 80*swC^4) - 39*(3 - 10*swC^2 + 8*
                swC^4) + 8*sw^4*(-39 - 10*swC^2 + 16*swC^4)) + 
           2*d*(33*(3 - 10*swC^2 + 8*swC^4) - 8*sw^4*(-33 - 5*swC^2 + 8*
                swC^4) + sw^2*(-330 + 502*swC^2 + 40*swC^4))))*t)/
       ((-4 + d)*(mz^2 - s)) - (2^(2 + d)*Pi^d*
        (s*(-24*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
             2*sw^2*(-5 + 8*swC^2)) + 3*d^3*(3 + 8*sw^4 - 10*swC^2 + 
             8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) - 12*d*(-9 + 30*swC^2 - 
             24*swC^4 + sw^2*(30 - 22*swC^2 - 40*swC^4) + 
             8*sw^4*(-3 - 5*swC^2 + 8*swC^4)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
             8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 80*
                swC^4))) + 2*(36*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
             2*sw^2*(-5 + 8*swC^2)) - 3*d^3*(3 + 8*sw^4 - 10*swC^2 + 
             8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
           4*d*(sw^2*(330 - 502*swC^2 - 40*swC^4) - 33*(3 - 10*swC^2 + 8*
                swC^4) + 8*sw^4*(-33 - 5*swC^2 + 8*swC^4)) - 
           4*(sw^2*(390 - 572*swC^2 - 80*swC^4) - 39*(3 - 10*swC^2 + 8*
                swC^4) + 8*sw^4*(-39 - 10*swC^2 + 16*swC^4)))*t))/
       (mz^2 - s) + (2^(1 + d)*(-2 + d)*Pi^d*
        (-(s^2*(-24*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 
                8*swC^2)) + 3*d^3*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
              2*sw^2*(-5 + 8*swC^2)) - 12*d*(-9 + 30*swC^2 - 24*swC^4 + 
              sw^2*(30 - 22*swC^2 - 40*swC^4) + 8*sw^4*(-3 - 5*swC^2 + 
                8*swC^4)) + 8*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 
                20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 80*swC^4)))) + 
         2*s*(-36*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
             2*sw^2*(-5 + 8*swC^2)) + 3*d^3*(3 + 8*sw^4 - 10*swC^2 + 
             8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) - 
           8*d*(-5*sw^2*(-36 + 55*swC^2 + 4*swC^4) - 18*(3 - 10*swC^2 + 8*
                swC^4) + 4*sw^4*(-36 - 5*swC^2 + 8*swC^4)) + 
           12*(-15*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(-15 - 10*swC^2 + 16*
                swC^4) - 2*sw^2*(-75 + 94*swC^2 + 40*swC^4)))*t + 
         16*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 
           2*sw^2*(15 - 76*swC^2 + 80*swC^4))*t^2 + 
         mz^2*(s*(-24*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*
                (-5 + 8*swC^2)) + 3*d^3*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*
                sw^2*(-5 + 8*swC^2)) - 12*d*(-9 + 30*swC^2 - 24*swC^4 + sw^2*
                (30 - 22*swC^2 - 40*swC^4) + 8*sw^4*(-3 - 5*swC^2 + 
                 8*swC^4)) + 8*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*
                (3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
                 80*swC^4))) + 2*(36*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*
                sw^2*(-5 + 8*swC^2)) - 3*d^3*(3 + 8*sw^4 - 10*swC^2 + 8*
                swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 4*d*(sw^2*(330 - 502*swC^2 - 
                 40*swC^4) - 33*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*
                (-33 - 5*swC^2 + 8*swC^4)) - 4*(sw^2*(390 - 572*swC^2 - 
                 80*swC^4) - 39*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*
                (-39 - 10*swC^2 + 16*swC^4)))*t)))/((-4 + d)*(mz^2 - s)^2) - 
      (2*(2 - d)*(9*d^3*(2*Pi)^d*s^2 - 2^(1 + d)*Pi^d*
          (s^2*(3*d^3*(3 + 4*sw^4 - 5*swC^2 + 4*swC^4 + sw^2*
                (-5 + 8*swC^2)) - 12*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*
                sw^2*(-5 + 8*swC^2)) - 6*d*(-9 + 30*swC^2 - 24*swC^4 + sw^2*
                (30 - 22*swC^2 - 40*swC^4) + 8*sw^4*(-3 - 5*swC^2 + 
                 8*swC^4)) + 4*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*
                (3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
                 80*swC^4))) + s*(180*(3 - 10*swC^2 + 8*swC^4) - 
             96*sw^4*(-15 - 10*swC^2 + 16*swC^4) + 24*sw^2*(-75 + 94*swC^2 + 
               40*swC^4) + 36*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*
                (-5 + 8*swC^2)) - 3*d^3*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*
                sw^2*(-5 + 8*swC^2)) + 8*d*(-5*sw^2*(-36 + 55*swC^2 + 
                 4*swC^4) - 18*(3 - 10*swC^2 + 8*swC^4) + 4*sw^4*
                (-36 - 5*swC^2 + 8*swC^4)))*t - 8*(9 - 30*swC^2 + 24*swC^4 + 
             8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 80*
                swC^4))*t^2) + mz^2*(9*d^3*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (s*(3*d^3*(4*sw^4 + swC^2*(-5 + 4*swC^2) + sw^2*(-5 + 8*swC^2)) - 
               12*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*
                  (-5 + 8*swC^2)) - 6*d*(-9 + 30*swC^2 - 24*swC^4 + 
                 sw^2*(30 - 22*swC^2 - 40*swC^4) + 8*sw^4*(-3 - 5*swC^2 + 
                   8*swC^4)) + 4*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*
                  (3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
                   80*swC^4))) + (36*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
                 2*sw^2*(-5 + 8*swC^2)) - 3*d^3*(3 + 8*sw^4 - 10*swC^2 + 
                 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 4*d*
                (sw^2*(330 - 502*swC^2 - 40*swC^4) - 33*(3 - 10*swC^2 + 
                   8*swC^4) + 8*sw^4*(-33 - 5*swC^2 + 8*swC^4)) - 4*
                (sw^2*(390 - 572*swC^2 - 80*swC^4) - 39*(3 - 10*swC^2 + 
                   8*swC^4) + 8*sw^4*(-39 - 10*swC^2 + 16*swC^4)))*t))))/
       ((-4 + d)*(mz^2 - s)^2) + (2^(1 + d)*d*Pi^d*s*(9 - 30*swC^2 + 
         24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 
         2*sw^2*(15 - 76*swC^2 + 80*swC^4))*(-1 + GaugeXi[A]))/(mz^2 - s) - 
      (2^(1 + d)*Pi^d*(3*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
           2*sw^2*(-5 + 8*swC^2)) + 2*(-9 + 30*swC^2 - 24*swC^4 + 
           sw^2*(30 + 4*swC^2 - 80*swC^4) + 8*sw^4*(-3 - 10*swC^2 + 
             16*swC^4)))*t*(-1 + GaugeXi[A]))/(mz^2 - s) + 
      ((2*Pi)^d*(d*s + 2*t)*(s*(3*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
             2*sw^2*(-5 + 8*swC^2)) - 4*(9 - 30*swC^2 + 24*swC^4 + 
             sw^2*(-30 + 74*swC^2 - 40*swC^4) + 8*sw^4*(3 - 5*swC^2 + 8*
                swC^4))) - 2*(9 - 30*swC^2 + 24*swC^4 + 
           8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
             80*swC^4))*t)*(-1 + GaugeXi[A]))/((mz^2 - s)*s) - 
      (2^(1 + d)*Pi^d*(s*(3*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
             2*sw^2*(-5 + 8*swC^2)) + 2*(-9 + 30*swC^2 - 24*swC^4 + 
             sw^2*(30 + 4*swC^2 - 80*swC^4) + 8*sw^4*(-3 - 10*swC^2 + 16*
                swC^4))) - 2*(9 - 30*swC^2 + 24*swC^4 + 
           8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
             80*swC^4))*t)*(-1 + GaugeXi[A]))/(mz^2 - s) + 
      ((-2 + d)*(2*Pi)^d*(s*(3*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
             2*sw^2*(-5 + 8*swC^2)) + 2*(-9 + 30*swC^2 - 24*swC^4 + 
             sw^2*(30 + 4*swC^2 - 80*swC^4) + 8*sw^4*(-3 - 10*swC^2 + 16*
                swC^4))) - 2*(9 - 30*swC^2 + 24*swC^4 + 
           8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
             80*swC^4))*t)*(-1 + GaugeXi[A]))/(-mz^2 + s) - 
      ((-2 + d)*(s*(-27*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (s*(9 - 30*swC^2 + 24*swC^4 + sw^4*(24 + 80*swC^2 - 128*swC^4) + 
               sw^2*(-30 - 4*swC^2 + 80*swC^4) - 3*d*(-3 + 4*sw^4 - 5*swC^2 + 
                 4*swC^4 + sw^2*(-5 + 8*swC^2))) + (9 - 30*swC^2 + 24*swC^4 + 
               8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
                 80*swC^4))*t)) + mz^2*(9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (s*(4*sw^4*(-6 + 3*d - 20*swC^2 + 32*swC^4) + 3*(-3 - 
                 5*(-2 + d)*swC^2 + 4*(-2 + d)*swC^4) + sw^2*(30 + 4*swC^2 - 
                 80*swC^4 + 3*d*(-5 + 8*swC^2))) + (-9 + 30*swC^2 - 24*
                swC^4 - 8*sw^4*(3 - 20*swC^2 + 32*swC^4) + 2*sw^2*
                (15 - 76*swC^2 + 80*swC^4))*t)))*(-1 + GaugeXi[A]))/
       (mz^2 - s)^2 - (2*(-2 + d)*(mz^4*(9*d*(2*Pi)^d + 2^(1 + d)*Pi^d*
            (4*sw^4*(-6 + 3*d - 20*swC^2 + 32*swC^4) + 
             3*(-3 - 5*(-2 + d)*swC^2 + 4*(-2 + d)*swC^4) + 
             sw^2*(30 + 4*swC^2 - 80*swC^4 + 3*d*(-5 + 8*swC^2))))*t + 
         s^2*(9*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(4*sw^4*(-6 + 3*d - 20*swC^2 + 32*
                swC^4) + 3*(-3 - 5*(-2 + d)*swC^2 + 4*(-2 + d)*swC^4) + 
             sw^2*(30 + 4*swC^2 - 80*swC^4 + 3*d*(-5 + 8*swC^2))))*t + 
         2*mz^2*(9*d*(2*Pi)^d*s*(d*s - 11*t) + 2^(1 + d)*Pi^d*
            (s^2*(3*d^2*(4*sw^4 + swC^2*(-5 + 4*swC^2) + sw^2*(-5 + 
                   8*swC^2)) + 2*d*(-9 + 30*swC^2 - 24*swC^4 + 
                 sw^2*(30 - 22*swC^2 - 40*swC^4) + 8*sw^4*(-3 - 5*swC^2 + 
                   8*swC^4)) + 2*(9 - 30*swC^2 + 24*swC^4 + sw^4*
                  (24 + 80*swC^2 - 128*swC^4) + sw^2*(-30 - 4*swC^2 + 
                   80*swC^4))) + 3*s*(9*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*
                (9 - 10*swC^2 + 16*swC^4) - 2*sw^2*(45 - 98*swC^2 + 
                 40*swC^4) - 11*d*(4*sw^4 + swC^2*(-5 + 4*swC^2) + 
                 sw^2*(-5 + 8*swC^2)) + d^2*(3 + 8*sw^4 - 10*swC^2 + 
                 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)))*t + 
             2*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 
               2*sw^2*(15 - 76*swC^2 + 80*swC^4))*t^2)))*(-1 + GaugeXi[A]))/
       (mz^2 - s)^3))/(cwC^2*mz^2*Pi^(2*d)*sw^2*(1 - sw^2)*swC^2), 
   ((I/27)*2^(-7 - 2*d)*EL^6*(2^(2 + d)*Pi^d*(mz^2 - s)*s*
       (-36*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
        3*d^3*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) - 
        4*d*(sw^2*(330 - 502*swC^2 - 40*swC^4) - 
          33*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(-33 - 5*swC^2 + 8*swC^4)) + 
        4*(sw^2*(390 - 572*swC^2 - 80*swC^4) - 39*(3 - 10*swC^2 + 8*swC^4) + 
          8*sw^4*(-39 - 10*swC^2 + 16*swC^4)))*(1 - (2*t)/((-4 + d)*s)) + 
      4*(mz^2 - s)*s*(9*d^3*(2*Pi)^d + 2^(1 + d)*Pi^d*
         (3*d^3*(4*sw^4 + swC^2*(-5 + 4*swC^2) + sw^2*(-5 + 8*swC^2)) - 
          18*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
          2*(sw^2*(390 - 572*swC^2 - 80*swC^4) - 39*(3 - 10*swC^2 + 
              8*swC^4) + 8*sw^4*(-39 - 10*swC^2 + 16*swC^4)) + 
          2*d*(33*(3 - 10*swC^2 + 8*swC^4) - 8*sw^4*(-33 - 5*swC^2 + 
              8*swC^4) + sw^2*(-330 + 502*swC^2 + 40*swC^4))))*
       (1 - (2*t)/((-4 + d)*s)) + (2^(2 + d)*Pi^d*(mz^2 - s)*
        (s^2*(3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
             2*sw^2*(-5 + 8*swC^2)) + 4*d*(-9 + 30*swC^2 - 24*swC^4 + 
             sw^2*(30 - 22*swC^2 - 40*swC^4) + 8*sw^4*(-3 - 5*swC^2 + 8*
                swC^4)) - 4*(-9 + 30*swC^2 - 24*swC^4 + 
             sw^2*(30 + 4*swC^2 - 80*swC^4) + 8*sw^4*(-3 - 10*swC^2 + 16*
                swC^4))) + 2*s*(-15*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
             2*sw^2*(-5 + 8*swC^2)) + 3*d^2*(3 + 8*sw^4 - 10*swC^2 + 
             8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
             sw^2*(-30 + 74*swC^2 - 40*swC^4) + 8*sw^4*(3 - 5*swC^2 + 8*
                swC^4)))*t + 4*(9 - 30*swC^2 + 24*swC^4 + 
           8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
             80*swC^4))*t^2 + mz^2*(s*(48*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*
                swC^4 + 2*sw^2*(-5 + 8*swC^2)) - 3*d^3*(3 + 8*sw^4 - 10*
                swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
             16*(sw^2*(-210 + 362*swC^2 - 40*swC^4) + 21*(3 - 10*swC^2 + 
                 8*swC^4) + 8*sw^4*(21 - 5*swC^2 + 8*swC^4)) - 
             4*d*(sw^2*(-570 + 938*swC^2 - 40*swC^4) + 57*(3 - 10*swC^2 + 
                 8*swC^4) + 8*sw^4*(57 - 5*swC^2 + 8*swC^4))) + 
           2*(36*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*
                (-5 + 8*swC^2)) - 3*d^3*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*
                sw^2*(-5 + 8*swC^2)) + 4*d*(sw^2*(330 - 502*swC^2 - 
                 40*swC^4) - 33*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*
                (-33 - 5*swC^2 + 8*swC^4)) - 4*(sw^2*(390 - 572*swC^2 - 
                 80*swC^4) - 39*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*
                (-39 - 10*swC^2 + 16*swC^4)))*t)))/mz^2 - 
      (2^(2 + d)*(-3 + d)*Pi^d*
        (-(s^2*(-24*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 
                8*swC^2)) + 3*d^3*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
              2*sw^2*(-5 + 8*swC^2)) - 12*d*(-9 + 30*swC^2 - 24*swC^4 + 
              sw^2*(30 - 22*swC^2 - 40*swC^4) + 8*sw^4*(-3 - 5*swC^2 + 
                8*swC^4)) + 8*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 
                20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 80*swC^4)))) + 
         2*s*(-36*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
             2*sw^2*(-5 + 8*swC^2)) + 3*d^3*(3 + 8*sw^4 - 10*swC^2 + 
             8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) - 
           8*d*(-5*sw^2*(-36 + 55*swC^2 + 4*swC^4) - 18*(3 - 10*swC^2 + 8*
                swC^4) + 4*sw^4*(-36 - 5*swC^2 + 8*swC^4)) + 
           12*(-15*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(-15 - 10*swC^2 + 16*
                swC^4) - 2*sw^2*(-75 + 94*swC^2 + 40*swC^4)))*t + 
         16*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 
           2*sw^2*(15 - 76*swC^2 + 80*swC^4))*t^2 + 
         mz^2*(s*(-24*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*
                (-5 + 8*swC^2)) + 3*d^3*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*
                sw^2*(-5 + 8*swC^2)) - 12*d*(-9 + 30*swC^2 - 24*swC^4 + sw^2*
                (30 - 22*swC^2 - 40*swC^4) + 8*sw^4*(-3 - 5*swC^2 + 
                 8*swC^4)) + 8*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*
                (3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
                 80*swC^4))) + 2*(36*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*
                sw^2*(-5 + 8*swC^2)) - 3*d^3*(3 + 8*sw^4 - 10*swC^2 + 8*
                swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 4*d*(sw^2*(330 - 502*swC^2 - 
                 40*swC^4) - 33*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*
                (-33 - 5*swC^2 + 8*swC^4)) - 4*(sw^2*(390 - 572*swC^2 - 
                 80*swC^4) - 39*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*
                (-39 - 10*swC^2 + 16*swC^4)))*t)))/(-4 + d) - 
      (4*(-3 + d)*(9*d^3*(2*Pi)^d*s^2 - 2^(1 + d)*Pi^d*
          (s^2*(3*d^3*(3 + 4*sw^4 - 5*swC^2 + 4*swC^4 + sw^2*
                (-5 + 8*swC^2)) - 12*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*
                sw^2*(-5 + 8*swC^2)) - 6*d*(-9 + 30*swC^2 - 24*swC^4 + sw^2*
                (30 - 22*swC^2 - 40*swC^4) + 8*sw^4*(-3 - 5*swC^2 + 
                 8*swC^4)) + 4*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*
                (3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
                 80*swC^4))) + s*(180*(3 - 10*swC^2 + 8*swC^4) - 
             96*sw^4*(-15 - 10*swC^2 + 16*swC^4) + 24*sw^2*(-75 + 94*swC^2 + 
               40*swC^4) + 36*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*
                (-5 + 8*swC^2)) - 3*d^3*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*
                sw^2*(-5 + 8*swC^2)) + 8*d*(-5*sw^2*(-36 + 55*swC^2 + 
                 4*swC^4) - 18*(3 - 10*swC^2 + 8*swC^4) + 4*sw^4*
                (-36 - 5*swC^2 + 8*swC^4)))*t - 8*(9 - 30*swC^2 + 24*swC^4 + 
             8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 80*
                swC^4))*t^2) + mz^2*(9*d^3*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (s*(3*d^3*(4*sw^4 + swC^2*(-5 + 4*swC^2) + sw^2*(-5 + 8*swC^2)) - 
               12*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*
                  (-5 + 8*swC^2)) - 6*d*(-9 + 30*swC^2 - 24*swC^4 + 
                 sw^2*(30 - 22*swC^2 - 40*swC^4) + 8*sw^4*(-3 - 5*swC^2 + 
                   8*swC^4)) + 4*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*
                  (3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
                   80*swC^4))) + (36*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
                 2*sw^2*(-5 + 8*swC^2)) - 3*d^3*(3 + 8*sw^4 - 10*swC^2 + 
                 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 4*d*
                (sw^2*(330 - 502*swC^2 - 40*swC^4) - 33*(3 - 10*swC^2 + 
                   8*swC^4) + 8*sw^4*(-33 - 5*swC^2 + 8*swC^4)) - 4*
                (sw^2*(390 - 572*swC^2 - 80*swC^4) - 39*(3 - 10*swC^2 + 
                   8*swC^4) + 8*sw^4*(-39 - 10*swC^2 + 16*swC^4)))*t))))/
       (-4 + d) - (2^(1 + d)*Pi^d*(mz^2 - s)*s*((-4 + d)*mz^2 + d*s)*
        (9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 
         2*sw^2*(15 - 76*swC^2 + 80*swC^4))*(-1 + GaugeXi[A]))/mz^2 - 
      (2^(1 + d)*Pi^d*(mz^2 - s)^2*
        (s*(3*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
           2*(-9 + 30*swC^2 - 24*swC^4 + sw^2*(30 + 4*swC^2 - 80*swC^4) + 
             8*sw^4*(-3 - 10*swC^2 + 16*swC^4))) - 
         2*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 
           2*sw^2*(15 - 76*swC^2 + 80*swC^4))*t)*(-1 + GaugeXi[A]))/mz^2 + 
      ((2*Pi)^d*(mz^2 - s)*((-4 + d)*mz^2 + (-2 + d)*s)*
        (s*(3*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
           2*(-9 + 30*swC^2 - 24*swC^4 + sw^2*(30 + 4*swC^2 - 80*swC^4) + 
             8*sw^4*(-3 - 10*swC^2 + 16*swC^4))) - 
         2*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 
           2*sw^2*(15 - 76*swC^2 + 80*swC^4))*t)*(-1 + GaugeXi[A]))/mz^2 - 
      ((2*Pi)^d*(mz^2 - s)*(s*(3*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
             2*sw^2*(-5 + 8*swC^2)) - 4*(9 - 30*swC^2 + 24*swC^4 + 
             sw^2*(-30 + 74*swC^2 - 40*swC^4) + 8*sw^4*(3 - 5*swC^2 + 8*
                swC^4))) - 2*(9 - 30*swC^2 + 24*swC^4 + 
           8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
             80*swC^4))*t)*(mz^2*((-4 + d)*s + 2*t) + s*(d*s + 2*t))*
        (-1 + GaugeXi[A]))/(mz^2*s) + (2^(2 + d)*Pi^d*(mz^2 - s)*
        (s*(3*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
           2*(-9 + 30*swC^2 - 24*swC^4 + sw^2*(30 + 4*swC^2 - 80*swC^4) + 
             8*sw^4*(-3 - 10*swC^2 + 16*swC^4)))*t + 
         mz^2*(3*d*s*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
             2*sw^2*(-5 + 8*swC^2)) + 2*s*(-9 + 30*swC^2 - 24*swC^4 + 
             sw^2*(30 + 4*swC^2 - 80*swC^4) + 8*sw^4*(-3 - 10*swC^2 + 16*
                swC^4)) + 3*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
             2*sw^2*(-5 + 8*swC^2))*t - 4*(9 - 30*swC^2 + 24*swC^4 + 
             sw^2*(-30 + 74*swC^2 - 40*swC^4) + 8*sw^4*(3 - 5*swC^2 + 8*
                swC^4))*t))*(-1 + GaugeXi[A]))/mz^2 + 
      ((mz^2 - s)*(-((-4 + d)*mz^2) - (-2 + d)*s)*
        (s*(-27*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(9 - 30*swC^2 + 24*swC^4 + 
               sw^4*(24 + 80*swC^2 - 128*swC^4) + sw^2*(-30 - 4*swC^2 + 
                 80*swC^4) - 3*d*(-3 + 4*sw^4 - 5*swC^2 + 4*swC^4 + 
                 sw^2*(-5 + 8*swC^2))) + (9 - 30*swC^2 + 24*swC^4 + 8*sw^4*
                (3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
                 80*swC^4))*t)) + mz^2*(9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (s*(4*sw^4*(-6 + 3*d - 20*swC^2 + 32*swC^4) + 3*(-3 - 
                 5*(-2 + d)*swC^2 + 4*(-2 + d)*swC^4) + sw^2*(30 + 4*swC^2 - 
                 80*swC^4 + 3*d*(-5 + 8*swC^2))) + (-9 + 30*swC^2 - 24*
                swC^4 - 8*sw^4*(3 - 20*swC^2 + 32*swC^4) + 2*sw^2*
                (15 - 76*swC^2 + 80*swC^4))*t)))*(-1 + GaugeXi[A]))/
       (mz^2*(-mz^2 + s)) + (2*(-3 + d)*(mz^2 - s)*(mz^2 + s)*
        (mz^4*(9*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(4*sw^4*(-6 + 3*d - 20*swC^2 + 
               32*swC^4) + 3*(-3 - 5*(-2 + d)*swC^2 + 4*(-2 + d)*swC^4) + 
             sw^2*(30 + 4*swC^2 - 80*swC^4 + 3*d*(-5 + 8*swC^2))))*t + 
         s^2*(9*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(4*sw^4*(-6 + 3*d - 20*swC^2 + 32*
                swC^4) + 3*(-3 - 5*(-2 + d)*swC^2 + 4*(-2 + d)*swC^4) + 
             sw^2*(30 + 4*swC^2 - 80*swC^4 + 3*d*(-5 + 8*swC^2))))*t + 
         2*mz^2*(9*d*(2*Pi)^d*s*(d*s - 11*t) + 2^(1 + d)*Pi^d*
            (s^2*(3*d^2*(4*sw^4 + swC^2*(-5 + 4*swC^2) + sw^2*(-5 + 
                   8*swC^2)) + 2*d*(-9 + 30*swC^2 - 24*swC^4 + 
                 sw^2*(30 - 22*swC^2 - 40*swC^4) + 8*sw^4*(-3 - 5*swC^2 + 
                   8*swC^4)) + 2*(9 - 30*swC^2 + 24*swC^4 + sw^4*
                  (24 + 80*swC^2 - 128*swC^4) + sw^2*(-30 - 4*swC^2 + 
                   80*swC^4))) + 3*s*(9*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*
                (9 - 10*swC^2 + 16*swC^4) - 2*sw^2*(45 - 98*swC^2 + 
                 40*swC^4) - 11*d*(4*sw^4 + swC^2*(-5 + 4*swC^2) + 
                 sw^2*(-5 + 8*swC^2)) + d^2*(3 + 8*sw^4 - 10*swC^2 + 
                 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)))*t + 
             2*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 
               2*sw^2*(15 - 76*swC^2 + 80*swC^4))*t^2)))*(-1 + GaugeXi[A]))/
       (mz^3 - mz*s)^2))/(cwC^2*Pi^(2*d)*(mz^2 - s)^2*sw^2*(1 - sw^2)*swC^2), 
   ((-I/27)*2^(-6 - d)*EL^6*t*
     (s*(72*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) - 
        12*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
        3*d^3*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
        4*d*(-9 + 30*swC^2 - 24*swC^4 + sw^2*(30 - 22*swC^2 - 40*swC^4) + 
          8*sw^4*(-3 - 5*swC^2 + 8*swC^4))) + 
      mz^2*(648*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
        120*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) - 
        9*d^3*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
        4*d*(-123*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(-123 - 5*swC^2 + 
            8*swC^4) - 2*sw^2*(-615 + 971*swC^2 + 20*swC^4))) + 
      8*(30*(3 - 10*swC^2 + 8*swC^4) + 16*sw^4*(15 - 10*swC^2 + 16*swC^4) - 
        4*sw^2*(75 - 146*swC^2 + 40*swC^4) - 18*d*(3 + 8*sw^4 - 10*swC^2 + 
          8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 3*d^2*(3 + 8*sw^4 - 10*swC^2 + 
          8*swC^4 + 2*sw^2*(-5 + 8*swC^2)))*t))/(cwC^2*Pi^d*(mz^2 - s)*sw^2*
     (-1 + sw^2)*swC^2), ((-I/27)*4^(-3 - d)*EL^6*t*
     (-9*d^3*(2*Pi)^d*s^2 - mz^4*(9*d^3*(2*Pi)^d + 2^(1 + d)*Pi^d*
         (3*d^3*(4*sw^4 + swC^2*(-5 + 4*swC^2) + sw^2*(-5 + 8*swC^2)) - 
          12*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) - 
          6*d*(-9 + 30*swC^2 - 24*swC^4 + sw^2*(30 - 22*swC^2 - 40*swC^4) + 
            8*sw^4*(-3 - 5*swC^2 + 8*swC^4)) + 4*(9 - 30*swC^2 + 24*swC^4 + 
            8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
              80*swC^4)))) + 2^(1 + d)*Pi^d*
       (-(s^2*(3*d^3*(4*sw^4 + swC^2*(-5 + 4*swC^2) + sw^2*(-5 + 8*swC^2)) - 
           12*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) - 
           6*d*(-9 + 30*swC^2 - 24*swC^4 + sw^2*(30 - 22*swC^2 - 40*swC^4) + 
             8*sw^4*(-3 - 5*swC^2 + 8*swC^4)) + 4*(9 - 30*swC^2 + 24*swC^4 + 
             8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 80*
                swC^4)))) + 4*s*(3*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
            2*sw^2*(-5 + 8*swC^2)) + 2*(-9 + 30*swC^2 - 24*swC^4 + 
            sw^2*(30 + 4*swC^2 - 80*swC^4) + 8*sw^4*(-3 - 10*swC^2 + 
              16*swC^4)))*t + 8*(9 - 30*swC^2 + 24*swC^4 + 
          8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
            80*swC^4))*t^2) + 2*mz^2*(9*d^3*(2*Pi)^d*s + 
        2^(1 + d)*Pi^d*(s*(3*d^3*(4*sw^4 + swC^2*(-5 + 4*swC^2) + 
              sw^2*(-5 + 8*swC^2)) - 9*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
              2*sw^2*(-5 + 8*swC^2)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
              sw^2*(-30 + 74*swC^2 - 40*swC^4) + 8*sw^4*(3 - 5*swC^2 + 
                8*swC^4)) + d*(6*(3 - 10*swC^2 + 8*swC^4) - 16*sw^4*(-3 - 
                5*swC^2 + 8*swC^4) + sw^2*(-60 + 44*swC^2 + 80*swC^4))) + 
          2*(30*(3 - 10*swC^2 + 8*swC^4) + 16*sw^4*(15 - 10*swC^2 + 
              16*swC^4) - 4*sw^2*(75 - 146*swC^2 + 40*swC^4) - 
            18*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
            3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)))*
           t))))/(cwC^2*Pi^(2*d)*(mz^2 - s)*sw^2*(-1 + sw^2)*swC^2), 
   ((I/27)*2^(-7 - 2*d)*EL^6*(2^(2 + d)*Pi^d*
       (s^2*(3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
            2*sw^2*(-5 + 8*swC^2)) + 4*d*(-9 + 30*swC^2 - 24*swC^4 + 
            sw^2*(30 - 22*swC^2 - 40*swC^4) + 8*sw^4*(-3 - 5*swC^2 + 
              8*swC^4)) - 4*(-9 + 30*swC^2 - 24*swC^4 + 
            sw^2*(30 + 4*swC^2 - 80*swC^4) + 8*sw^4*(-3 - 10*swC^2 + 
              16*swC^4))) + 2*s*(-15*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
            2*sw^2*(-5 + 8*swC^2)) + 3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
            2*sw^2*(-5 + 8*swC^2)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
            sw^2*(-30 + 74*swC^2 - 40*swC^4) + 8*sw^4*(3 - 5*swC^2 + 
              8*swC^4)))*t + 4*(9 - 30*swC^2 + 24*swC^4 + 
          8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
            80*swC^4))*t^2) - 2^(1 + d)*Pi^d*
       (s*(3*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
          2*(-9 + 30*swC^2 - 24*swC^4 + sw^2*(30 + 4*swC^2 - 80*swC^4) + 
            8*sw^4*(-3 - 10*swC^2 + 16*swC^4))) - 
        2*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 
          2*sw^2*(15 - 76*swC^2 + 80*swC^4))*t)*(-1 + GaugeXi[A])*
       (-s + mz^2*GaugeXi[Z]) + 2*(-3 + d)*(9*d*(2*Pi)^d + 
        2^(1 + d)*Pi^d*(4*sw^4*(-6 + 3*d - 20*swC^2 + 32*swC^4) + 
          3*(-3 - 5*(-2 + d)*swC^2 + 4*(-2 + d)*swC^4) + 
          sw^2*(30 + 4*swC^2 - 80*swC^4 + 3*d*(-5 + 8*swC^2))))*t*
       (-1 + GaugeXi[A])*(s + mz^2*GaugeXi[Z]) + 2^(1 + d)*Pi^d*s*
       (9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 
        2*sw^2*(15 - 76*swC^2 + 80*swC^4))*(-1 + GaugeXi[A])*
       (-(d*s) - (-4 + d)*mz^2*GaugeXi[Z]) + 
      (2*Pi)^d*(s*(3*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
            2*sw^2*(-5 + 8*swC^2)) + 2*(-9 + 30*swC^2 - 24*swC^4 + 
            sw^2*(30 + 4*swC^2 - 80*swC^4) + 8*sw^4*(-3 - 10*swC^2 + 
              16*swC^4))) - 2*(9 - 30*swC^2 + 24*swC^4 + 
          8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
            80*swC^4))*t)*(-1 + GaugeXi[A])*((-2 + d)*s + 
        (-4 + d)*mz^2*GaugeXi[Z]) + 
      ((2*Pi)^d*(s*(-3*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
             2*sw^2*(-5 + 8*swC^2)) + 4*(9 - 30*swC^2 + 24*swC^4 + 
             sw^2*(-30 + 74*swC^2 - 40*swC^4) + 8*sw^4*(3 - 5*swC^2 + 8*
                swC^4))) + 2*(9 - 30*swC^2 + 24*swC^4 + 
           8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
             80*swC^4))*t)*(-1 + GaugeXi[A])*(s*(d*s + 2*t) + 
         mz^2*((-4 + d)*s + 2*t)*GaugeXi[Z]))/s + 
      2^(2 + d)*Pi^d*(-1 + GaugeXi[A])*
       (s*(3*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
          2*(-9 + 30*swC^2 - 24*swC^4 + sw^2*(30 + 4*swC^2 - 80*swC^4) + 
            8*sw^4*(-3 - 10*swC^2 + 16*swC^4)))*t + 
        mz^2*(3*d*s*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
            2*sw^2*(-5 + 8*swC^2)) + 2*s*(-9 + 30*swC^2 - 24*swC^4 + 
            sw^2*(30 + 4*swC^2 - 80*swC^4) + 8*sw^4*(-3 - 10*swC^2 + 
              16*swC^4)) + 3*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
            2*sw^2*(-5 + 8*swC^2))*t - 4*(9 - 30*swC^2 + 24*swC^4 + 
            sw^2*(-30 + 74*swC^2 - 40*swC^4) + 8*sw^4*(3 - 5*swC^2 + 
              8*swC^4))*t)*GaugeXi[Z]) + 
      ((-1 + GaugeXi[A])*((-2 + d)*s + (-4 + d)*mz^2*GaugeXi[Z])*
        (s*(27*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-9 + 30*swC^2 - 24*swC^4 + 
               sw^2*(30 + 4*swC^2 - 80*swC^4) + 8*sw^4*(-3 - 10*swC^2 + 
                 16*swC^4) + 3*d*(-3 + 4*sw^4 - 5*swC^2 + 4*swC^4 + 
                 sw^2*(-5 + 8*swC^2))) + (-9 + 30*swC^2 - 24*swC^4 - 8*sw^4*
                (3 - 20*swC^2 + 32*swC^4) + 2*sw^2*(15 - 76*swC^2 + 
                 80*swC^4))*t)) + mz^2*(-9*d*(2*Pi)^d*s + 
           2^(1 + d)*Pi^d*(s*(-4*sw^4*(-6 + 3*d - 20*swC^2 + 32*swC^4) + 3*
                (3 + 5*(-2 + d)*swC^2 - 4*(-2 + d)*swC^4) + sw^2*
                (-30 - 4*swC^2 + 80*swC^4 - 3*d*(-5 + 8*swC^2))) + 
             (9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*
                sw^2*(15 - 76*swC^2 + 80*swC^4))*t))*GaugeXi[Z]))/
       (s - mz^2*GaugeXi[Z])))/(cwC^2*mz^2*Pi^(2*d)*(mz^2 - s)*sw^2*
     (-1 + sw^2)*swC^2), ((I/27)*2^(-7 - 2*d)*EL^6*(-1 + GaugeXi[A])*
     (2^(1 + d)*d*Pi^d*s*(9 - 30*swC^2 + 24*swC^4 + 
        8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
          80*swC^4)) - 2^(1 + d)*Pi^d*(3*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2)) + 2*(-9 + 30*swC^2 - 24*swC^4 + 
          sw^2*(30 + 4*swC^2 - 80*swC^4) + 8*sw^4*(-3 - 10*swC^2 + 
            16*swC^4)))*t - 2*(-2 + d)*(9*d*(2*Pi)^d + 
        2^(1 + d)*Pi^d*(4*sw^4*(-6 + 3*d - 20*swC^2 + 32*swC^4) + 
          3*(-3 - 5*(-2 + d)*swC^2 + 4*(-2 + d)*swC^4) + 
          sw^2*(30 + 4*swC^2 - 80*swC^4 + 3*d*(-5 + 8*swC^2))))*t + 
      ((2*Pi)^d*(d*s + 2*t)*(s*(3*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
             2*sw^2*(-5 + 8*swC^2)) - 4*(9 - 30*swC^2 + 24*swC^4 + 
             sw^2*(-30 + 74*swC^2 - 40*swC^4) + 8*sw^4*(3 - 5*swC^2 + 8*
                swC^4))) - 2*(9 - 30*swC^2 + 24*swC^4 + 
           8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
             80*swC^4))*t))/s + 2^(1 + d)*Pi^d*
       (s*(-3*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
          2*(9 - 30*swC^2 + 24*swC^4 + sw^4*(24 + 80*swC^2 - 128*swC^4) + 
            sw^2*(-30 - 4*swC^2 + 80*swC^4))) + 
        2*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 
          2*sw^2*(15 - 76*swC^2 + 80*swC^4))*t) + 
      (2^(1 + d)*(-2 + d)*Pi^d*(s*(3*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
             2*sw^2*(-5 + 8*swC^2)) + 2*(-9 + 30*swC^2 - 24*swC^4 + 
             sw^2*(30 + 4*swC^2 - 80*swC^4) + 8*sw^4*(-3 - 10*swC^2 + 16*
                swC^4))) - 2*(9 - 30*swC^2 + 24*swC^4 + 
           8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
             80*swC^4))*t)*(s - mz^2*GaugeXi[Z]))/
       (-2*s + 2*mz^2*GaugeXi[Z]) + 
      (2*(-2 + d)*(s*(27*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (s*(-9 + 30*swC^2 - 24*swC^4 + sw^2*(30 + 4*swC^2 - 80*swC^4) + 8*
                sw^4*(-3 - 10*swC^2 + 16*swC^4) + 3*d*(-3 + 4*sw^4 - 
                 5*swC^2 + 4*swC^4 + sw^2*(-5 + 8*swC^2))) + 
             (-9 + 30*swC^2 - 24*swC^4 - 8*sw^4*(3 - 20*swC^2 + 32*swC^4) + 2*
                sw^2*(15 - 76*swC^2 + 80*swC^4))*t)) + 
         mz^2*(-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (s*(-4*sw^4*(-6 + 3*d - 20*swC^2 + 32*swC^4) + 3*
                (3 + 5*(-2 + d)*swC^2 - 4*(-2 + d)*swC^4) + sw^2*
                (-30 - 4*swC^2 + 80*swC^4 - 3*d*(-5 + 8*swC^2))) + 
             (9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*
                sw^2*(15 - 76*swC^2 + 80*swC^4))*t))*GaugeXi[Z]))/
       (-2*s + 2*mz^2*GaugeXi[Z])))/(cwC^2*mz^2*Pi^(2*d)*(mz^2 - s)*sw^2*
     (-1 + sw^2)*swC^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, ((I/27)*2^(-5 - d)*EL^6*
     (s*(-24*d^2*(3 - 20*sw^2 + 32*sw^4) + d^3*(9 - 60*sw^2 + 96*sw^4) - 
        12*d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 64*sw^8) + 
        8*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)) + 
      2*(-468 + 3120*sw^2 - 4784*sw^4 - 640*sw^6 + 512*sw^8 - 
        36*d^2*(3 - 20*sw^2 + 32*sw^4) + d^3*(9 - 60*sw^2 + 96*sw^4) - 
        4*d*(-99 + 660*sw^2 - 1030*sw^4 - 80*sw^6 + 64*sw^8))*t))/
    (Pi^d*s*sw^4*(-1 + sw^2)^2), 0, 
   ((I/27)*2^(-7 - 2*d)*EL^6*(9*d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
       (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
          3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
            64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
          d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 
            64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*
         t^2) - mz^2*(-117*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(18 - 120*sw^2 + 88*sw^4 + 320*sw^6 - 256*sw^8 + 
            d^2*(63 - 30*sw^2 + 48*sw^4) + 2*d*(-9 + 60*sw^2 - 70*sw^4 - 
              80*sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
            d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
              80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
            256*sw^8)*t^2)) + 
      (-2*s*(9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
           (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
              3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 
                80*sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
              d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
                80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 
              320*sw^6 + 256*sw^8)*t^2)) + 3*mz^2*(-51*d^2*(2*Pi)^d*s^2 + 
          2^(1 + d)*Pi^d*(2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 
              128*sw^8 + 3*d^2*(5 - 5*sw^2 + 8*sw^4) + d*(-9 + 60*sw^2 - 
                70*sw^4 - 80*sw^6 + 64*sw^8)) + 
            s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + d^2*(9 - 60*sw^2 + 96*sw^4) + 
              8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8))*t + 
            2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^2)))*
       GaugeXi[Z] + (9*d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
         (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
            3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
              64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
            d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
              80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
            256*sw^8)*t^2) - 3*mz^2*(-39*d^2*(2*Pi)^d*s^2 + 
          2^(1 + d)*Pi^d*(2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 
              128*sw^8 + 3*d^2*(4 - 5*sw^2 + 8*sw^4) + d*(-9 + 60*sw^2 - 
                70*sw^4 - 80*sw^6 + 64*sw^8)) + 
            s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + d^2*(9 - 60*sw^2 + 96*sw^4) + 
              8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8))*t + 
            2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^2)))*
       GaugeXi[Z]^2 + mz^2*(-9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(18 - 120*sw^2 + 88*sw^4 + 320*sw^6 - 256*sw^8 + 
            d^2*(9 - 30*sw^2 + 48*sw^4) + 2*d*(-9 + 60*sw^2 - 70*sw^4 - 
              80*sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
            d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
              80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
            256*sw^8)*t^2))*GaugeXi[Z]^3))/((-1 + d)*mz^4*Pi^(2*d)*s^2*sw^4*
     (-1 + sw^2)^2*(-1 + GaugeXi[Z])^2), 0, 
   ((-I/27)*2^(-5 - d)*EL^6*t*(-4*mz^2*(-468 + 3120*sw^2 - 4784*sw^4 - 
        640*sw^6 + 512*sw^8 - 36*d^2*(3 - 20*sw^2 + 32*sw^4) + 
        d^3*(9 - 60*sw^2 + 96*sw^4) - 4*d*(-99 + 660*sw^2 - 1030*sw^4 - 
          80*sw^6 + 64*sw^8)) + s*(72*(3 - 20*sw^2 + 32*sw^4) - 
        12*d^2*(3 - 20*sw^2 + 32*sw^4) + d^3*(9 - 60*sw^2 + 96*sw^4) + 
        4*d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 64*sw^8)) + 
      8*(90 - 600*sw^2 + 1064*sw^4 - 320*sw^6 + 256*sw^8 - 
        18*d*(3 - 20*sw^2 + 32*sw^4) + d^2*(9 - 60*sw^2 + 96*sw^4))*t))/
    (Pi^d*s*sw^4*(-1 + sw^2)^2), 0, 0, 
   ((-I/27)*2^(-7 - 2*d)*EL^6*(9*d^2*mz^2*(2*Pi)^d*s^2 - 9*d^2*(2*Pi)^d*s^3 - 
      2^(1 + d)*Pi^d*s*(2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
          3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
            64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
          d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 
            64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*
         t^2) - 2^(1 + d)*mz^2*Pi^d*(s^2*(18 - 120*sw^2 + 88*sw^4 + 
          320*sw^6 - 256*sw^8 + d^2*(9 - 30*sw^2 + 48*sw^4) + 
          2*d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 64*sw^8)) + 
        s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + d^2*(9 - 60*sw^2 + 96*sw^4) + 
          8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8))*t + 
        2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^2) + 
      (2*s*(9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
           (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
              3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 
                80*sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
              d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
                80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 
              320*sw^6 + 256*sw^8)*t^2)) + 3*mz^2*(-15*d^2*(2*Pi)^d*s^2 + 
          2^(1 + d)*Pi^d*(2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 
              128*sw^8 + 3*d^2*(2 - 5*sw^2 + 8*sw^4) + d*(-9 + 60*sw^2 - 
                70*sw^4 - 80*sw^6 + 64*sw^8)) + 
            s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + d^2*(9 - 60*sw^2 + 96*sw^4) + 
              8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8))*t + 
            2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^2)))*
       GaugeXi[Z] - (9*d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
         (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
            3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
              64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
            d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
              80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
            256*sw^8)*t^2) + 3*mz^2*(-3*d^2*(2*Pi)^d*s^2 + 
          2^(1 + d)*Pi^d*(2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 
              128*sw^8 + 3*d^2*(1 - 5*sw^2 + 8*sw^4) + d*(-9 + 60*sw^2 - 
                70*sw^4 - 80*sw^6 + 64*sw^8)) + 
            s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + d^2*(9 - 60*sw^2 + 96*sw^4) + 
              8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8))*t + 
            2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^2)))*
       GaugeXi[Z]^2 + mz^2*(-117*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(18 - 120*sw^2 + 88*sw^4 + 320*sw^6 - 256*sw^8 + 
            d^2*(63 - 30*sw^2 + 48*sw^4) + 2*d*(-9 + 60*sw^2 - 70*sw^4 - 
              80*sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
            d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
              80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
            256*sw^8)*t^2))*GaugeXi[Z]^3))/((-1 + d)*mz^4*Pi^(2*d)*s^2*sw^4*
     (-1 + sw^2)^2*(-1 + GaugeXi[Z])^2), 
   ((-I/27)*2^(-7 - 2*d)*EL^6*(9*d^2*(2*Pi)^d*s^3 + 
      2^(1 + d)*Pi^d*s*(2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
          3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
            64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
          d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 
            64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*
         t^2) - mz^2*(27*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(18 - 120*sw^2 + 88*sw^4 + 320*sw^6 - 256*sw^8 + 
            d^2*(-9 - 30*sw^2 + 48*sw^4) + 2*d*(-9 + 60*sw^2 - 70*sw^4 - 
              80*sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
            d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
              80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
            256*sw^8)*t^2)) + 
      (-2*s*(9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
           (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
              3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 
                80*sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
              d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
                80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 
              320*sw^6 + 256*sw^8)*t^2)) + 3*mz^2*(-3*d^2*(2*Pi)^d*s^2 + 
          2^(1 + d)*Pi^d*(2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 
              128*sw^8 + 3*d^2*(1 - 5*sw^2 + 8*sw^4) + d*(-9 + 60*sw^2 - 
                70*sw^4 - 80*sw^6 + 64*sw^8)) + 
            s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + d^2*(9 - 60*sw^2 + 96*sw^4) + 
              8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8))*t + 
            2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^2)))*
       GaugeXi[Z] - (3*mz^2 - s)*(9*d^2*(2*Pi)^d*s^2 + 
        2^(1 + d)*Pi^d*(2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
            3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
              64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
            d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
              80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
            256*sw^8)*t^2))*GaugeXi[Z]^2 + 
      mz^2*(-9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(18 - 120*sw^2 + 88*sw^4 + 320*sw^6 - 256*sw^8 + 
            d^2*(9 - 30*sw^2 + 48*sw^4) + 2*d*(-9 + 60*sw^2 - 70*sw^4 - 
              80*sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
            d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
              80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
            256*sw^8)*t^2))*GaugeXi[Z]^3))/((-1 + d)*mz^4*Pi^(2*d)*s^2*sw^4*
     (-1 + sw^2)^2*(-1 + GaugeXi[Z])^2), 
   ((I/27)*2^(-7 - 2*d)*EL^6*((2*Pi)^d*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
        256*sw^8)*(s - s*GaugeXi[Z])^2*(d*(mz^2 - s)^2 + 
        2*((-2 + d)*mz^4 - d*mz^2*s)*GaugeXi[Z] + d*mz^4*GaugeXi[Z]^2) + 
      s^2*(d*(mz^2 - s)^2 + 2*((-2 + d)*mz^4 - d*mz^2*s)*GaugeXi[Z] + 
        d*mz^4*GaugeXi[Z]^2)*(9*(2*Pi)^d + 2^(2 + d)*Pi^d*sw^2*
         (-15 + 50*sw^2 - 80*sw^4 + 64*sw^6) - 2^(1 + d)*Pi^d*
         (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*GaugeXi[Z] + 
        (9*(2*Pi)^d + 2^(2 + d)*Pi^d*sw^2*(-15 + 50*sw^2 - 80*sw^4 + 
            64*sw^6))*GaugeXi[Z]^2) + (1 - d)*s*(mz^2 - s + mz^2*GaugeXi[Z])^
        2*(9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
         (s*(-9 - 30*(-2 + d)*sw^2 + (-44 + 48*d)*sw^4 - 160*sw^6 + 
            128*sw^8) + (-9 + 60*sw^2 - 200*sw^4 + 320*sw^6 - 256*sw^8)*t) - 
        2^(1 + d)*Pi^d*(d*s*(9 - 60*sw^2 + 96*sw^4) + 
          2*s*(-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 128*sw^8) - 
          2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t)*GaugeXi[Z] + 
        (9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-9 - 30*(-2 + d)*sw^2 + 
              (-44 + 48*d)*sw^4 - 160*sw^6 + 128*sw^8) + 
            (-9 + 60*sw^2 - 200*sw^4 + 320*sw^6 - 256*sw^8)*t))*
         GaugeXi[Z]^2) + ((mz^2 - s)^2*(d*s + 2*t) + 
        2*(mz^4*((-2 + d)*s - 2*t) - mz^2*s*(d*s + 2*t))*GaugeXi[Z] + 
        mz^4*(d*s + 2*t)*GaugeXi[Z]^2)*(9*d*(2*Pi)^d*s - 
        2^(1 + d)*Pi^d*(2*s*(9 + 15*(-4 + d)*sw^2 + (122 - 24*d)*sw^4 - 
            80*sw^6 + 64*sw^8) + (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
            256*sw^8)*t) - 2^(1 + d)*Pi^d*(d*s*(9 - 60*sw^2 + 96*sw^4) - 
          4*s*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8) - 
          2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t)*GaugeXi[Z] - 
        (-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(2*s*(9 + 15*(-4 + d)*sw^2 + 
              (122 - 24*d)*sw^4 - 80*sw^6 + 64*sw^8) + 
            (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t))*
         GaugeXi[Z]^2) - (1 - d)*s*(mz^2 - s + mz^2*GaugeXi[Z])*
       (s*(9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-9 - 30*(-2 + d)*sw^2 + 
              (-44 + 48*d)*sw^4 - 160*sw^6 + 128*sw^8) + 
            (-9 + 60*sw^2 - 200*sw^4 + 320*sw^6 - 256*sw^8)*t)) - 
        mz^2*(27*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
           (s*(-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 128*sw^8 + 
              d*(-9 - 30*sw^2 + 48*sw^4)) + (-9 + 60*sw^2 - 200*sw^4 + 
              320*sw^6 - 256*sw^8)*t)) - 
        (2^(1 + d)*Pi^d*s*(d*s*(9 - 60*sw^2 + 96*sw^4) + 
            2*s*(-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 128*sw^8) - 
            2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t) + 
          mz^2*(-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(9 + 30*(-2 + d)*sw^2 + 
                (44 - 48*d)*sw^4 + 160*sw^6 - 128*sw^8) + (9 - 60*sw^2 + 
                200*sw^4 - 320*sw^6 + 256*sw^8)*t)))*GaugeXi[Z] - 
        (-(s*(9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-9 - 30*(-2 + d)*sw^2 + 
                 (-44 + 48*d)*sw^4 - 160*sw^6 + 128*sw^8) + (-9 + 60*sw^2 - 
                 200*sw^4 + 320*sw^6 - 256*sw^8)*t))) + 
          mz^2*(27*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(9 - 60*sw^2 + 44*sw^4 + 
                160*sw^6 - 128*sw^8 - 6*d*(3 - 5*sw^2 + 8*sw^4)) + 
              (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t)))*
         GaugeXi[Z]^2 - mz^2*(-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
           (s*(-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 128*sw^8 + 
              d*(9 - 30*sw^2 + 48*sw^4)) + (-9 + 60*sw^2 - 200*sw^4 + 
              320*sw^6 - 256*sw^8)*t))*GaugeXi[Z]^3) + 
      2*(1 - d)*s*(mz^4*(9*d*(2*Pi)^d + 2^(1 + d)*Pi^d*
           (-9 - 30*(-2 + d)*sw^2 + (-44 + 48*d)*sw^4 - 160*sw^6 + 128*sw^8))*
         t + s^2*(-27*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(-9 + 60*sw^2 - 44*sw^4 - 
            160*sw^6 + 128*sw^8 + 6*d*(3 - 5*sw^2 + 8*sw^4)))*t + 
        2*mz^2*(9*d*(2*Pi)^d*s*(d*s - 11*t) + 2^(1 + d)*Pi^d*
           (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
              3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 
                80*sw^6 + 64*sw^8)) + 3*s*(27 - 180*sw^2 + 340*sw^4 - 
              160*sw^6 + 128*sw^8 - 22*d*sw^2*(-5 + 8*sw^2) + 
              d^2*(3 - 20*sw^2 + 32*sw^4))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 
              320*sw^6 + 256*sw^8)*t^2)) - 
        2*(s^2*(9*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(-9 - 30*(-2 + d)*sw^2 + 
              (-44 + 48*d)*sw^4 - 160*sw^6 + 128*sw^8))*t + 
          mz^4*(9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-9 - 30*(-2 + d)*sw^2 + 
                (-44 + 48*d)*sw^4 - 160*sw^6 + 128*sw^8) + 3*(-3 + d)*(3 - 
                20*sw^2 + 32*sw^4)*t)) + mz^2*(-189*d*(2*Pi)^d*s*t + 
            2^(1 + d)*Pi^d*(s^2*(d^2*(9 - 60*sw^2 + 96*sw^4) + 
                4*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8) + 
                4*d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 64*sw^8)) + 
              s*(153 - 1020*sw^2 + 1996*sw^4 - 1120*sw^6 + 896*sw^8 - 
                126*d*sw^2*(-5 + 8*sw^2) + 6*d^2*(3 - 20*sw^2 + 32*sw^4))*t + 
              4*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^2)))*
         GaugeXi[Z] + (s^2*(-27*d*(2*Pi)^d + 2^(1 + d)*Pi^d*
             (-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 128*sw^8 + 
              6*d*(3 - 5*sw^2 + 8*sw^4)))*t + 2^(1 + d)*mz^4*Pi^d*
           (2*s*(d*(9 - 60*sw^2 + 96*sw^4) + 2*(-9 + 60*sw^2 - 44*sw^4 - 
                160*sw^6 + 128*sw^8)) + (-90 + 600*sw^2 - 1064*sw^4 + 
              320*sw^6 - 256*sw^8 + 9*d*(3 - 20*sw^2 + 32*sw^4))*t) + 
          2*mz^2*(9*d*(2*Pi)^d*s*(d*s - 9*t) + 2^(1 + d)*Pi^d*
             (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
                3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 
                  80*sw^6 + 64*sw^8)) + s*(63 - 420*sw^2 + 932*sw^4 - 
                800*sw^6 + 640*sw^8 - 54*d*sw^2*(-5 + 8*sw^2) + 
                d^2*(9 - 60*sw^2 + 96*sw^4))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 
                320*sw^6 + 256*sw^8)*t^2)))*GaugeXi[Z]^2 - 
        2*(mz^2*s*(9*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(-9 - 30*(-2 + d)*sw^2 + 
              (-44 + 48*d)*sw^4 - 160*sw^6 + 128*sw^8))*t + 
          mz^4*(9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-9 - 30*(-2 + d)*sw^2 + 
                (-44 + 48*d)*sw^4 - 160*sw^6 + 128*sw^8) + 3*(-3 + d)*(3 - 
                20*sw^2 + 32*sw^4)*t)))*GaugeXi[Z]^3 + 
        mz^4*(9*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(-9 - 30*(-2 + d)*sw^2 + 
            (-44 + 48*d)*sw^4 - 160*sw^6 + 128*sw^8))*t*GaugeXi[Z]^4)))/
    ((1 - d)*mz^4*Pi^(2*d)*s^2*sw^4*(-1 + sw^2)^2*(-1 + GaugeXi[Z])^2), 
   ((I/27)*2^(-7 - 2*d)*EL^6*(9*d^2*mz^2*(2*Pi)^d*s^2 - 9*d^2*(2*Pi)^d*s^3 - 
      2^(1 + d)*Pi^d*s*(2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
          3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
            64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
          d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 
            64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*
         t^2) - 2^(1 + d)*mz^2*Pi^d*(s^2*(18 - 120*sw^2 + 88*sw^4 + 
          320*sw^6 - 256*sw^8 + d^2*(9 - 30*sw^2 + 48*sw^4) + 
          2*d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 64*sw^8)) + 
        s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + d^2*(9 - 60*sw^2 + 96*sw^4) + 
          8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8))*t + 
        2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^2) + 
      (3*mz^2 + 2*s)*(9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
            3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
              64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
            d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
              80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
            256*sw^8)*t^2))*GaugeXi[Z] - 
      (9*d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
         (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
            3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
              64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
            d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
              80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
            256*sw^8)*t^2) + 3*mz^2*(-3*d^2*(2*Pi)^d*s^2 + 
          2^(1 + d)*Pi^d*(2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 
              128*sw^8 + 3*d^2*(1 - 5*sw^2 + 8*sw^4) + d*(-9 + 60*sw^2 - 
                70*sw^4 - 80*sw^6 + 64*sw^8)) + 
            s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + d^2*(9 - 60*sw^2 + 96*sw^4) + 
              8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8))*t + 
            2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^2)))*
       GaugeXi[Z]^2 + mz^2*(27*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(18 - 120*sw^2 + 88*sw^4 + 320*sw^6 - 256*sw^8 + 
            d^2*(-9 - 30*sw^2 + 48*sw^4) + 2*d*(-9 + 60*sw^2 - 70*sw^4 - 
              80*sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
            d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
              80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
            256*sw^8)*t^2))*GaugeXi[Z]^3))/((-1 + d)*mz^4*Pi^(2*d)*s^2*sw^4*
     (-1 + sw^2)^2*(-1 + GaugeXi[Z])^2), 
   ((I/27)*2^(-7 - 2*d)*EL^6*((2*Pi)^d*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
        256*sw^8)*(s - s*GaugeXi[Z])^2*(d*(mz^2 - s)^2 + 
        2*((-2 + d)*mz^4 - d*mz^2*s)*GaugeXi[Z] + d*mz^4*GaugeXi[Z]^2) + 
      s^2*(d*(mz^2 - s)^2 + 2*((-2 + d)*mz^4 - d*mz^2*s)*GaugeXi[Z] + 
        d*mz^4*GaugeXi[Z]^2)*(9*(2*Pi)^d + 2^(2 + d)*Pi^d*sw^2*
         (-15 + 50*sw^2 - 80*sw^4 + 64*sw^6) - 2^(1 + d)*Pi^d*
         (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*GaugeXi[Z] + 
        (9*(2*Pi)^d + 2^(2 + d)*Pi^d*sw^2*(-15 + 50*sw^2 - 80*sw^4 + 
            64*sw^6))*GaugeXi[Z]^2) + (1 - d)*s*(mz^2 - s + mz^2*GaugeXi[Z])^
        2*(9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
         (s*(-9 - 30*(-2 + d)*sw^2 + (-44 + 48*d)*sw^4 - 160*sw^6 + 
            128*sw^8) + (-9 + 60*sw^2 - 200*sw^4 + 320*sw^6 - 256*sw^8)*t) - 
        2^(1 + d)*Pi^d*(d*s*(9 - 60*sw^2 + 96*sw^4) + 
          2*s*(-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 128*sw^8) - 
          2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t)*GaugeXi[Z] + 
        (9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-9 - 30*(-2 + d)*sw^2 + 
              (-44 + 48*d)*sw^4 - 160*sw^6 + 128*sw^8) + 
            (-9 + 60*sw^2 - 200*sw^4 + 320*sw^6 - 256*sw^8)*t))*
         GaugeXi[Z]^2) + ((mz^2 - s)^2*(d*s + 2*t) + 
        2*(mz^4*((-2 + d)*s - 2*t) - mz^2*s*(d*s + 2*t))*GaugeXi[Z] + 
        mz^4*(d*s + 2*t)*GaugeXi[Z]^2)*(9*d*(2*Pi)^d*s - 
        2^(1 + d)*Pi^d*(2*s*(9 + 15*(-4 + d)*sw^2 + (122 - 24*d)*sw^4 - 
            80*sw^6 + 64*sw^8) + (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
            256*sw^8)*t) - 2^(1 + d)*Pi^d*(d*s*(9 - 60*sw^2 + 96*sw^4) - 
          4*s*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8) - 
          2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t)*GaugeXi[Z] - 
        (-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(2*s*(9 + 15*(-4 + d)*sw^2 + 
              (122 - 24*d)*sw^4 - 80*sw^6 + 64*sw^8) + 
            (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t))*
         GaugeXi[Z]^2) - (1 - d)*s*(mz^2 - s + mz^2*GaugeXi[Z])*
       (s*(9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-9 - 30*(-2 + d)*sw^2 + 
              (-44 + 48*d)*sw^4 - 160*sw^6 + 128*sw^8) + 
            (-9 + 60*sw^2 - 200*sw^4 + 320*sw^6 - 256*sw^8)*t)) - 
        mz^2*(-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
           (s*(-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 128*sw^8 + 
              d*(9 - 30*sw^2 + 48*sw^4)) + (-9 + 60*sw^2 - 200*sw^4 + 
              320*sw^6 - 256*sw^8)*t)) - 
        (2^(1 + d)*Pi^d*s*(d*s*(9 - 60*sw^2 + 96*sw^4) + 
            2*s*(-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 128*sw^8) - 
            2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t) + 
          mz^2*(27*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(9 - 60*sw^2 + 44*sw^4 + 
                160*sw^6 - 128*sw^8 - 6*d*(3 - 5*sw^2 + 8*sw^4)) + 
              (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t)))*
         GaugeXi[Z] + (mz^2 + s)*(9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
           (s*(-9 - 30*(-2 + d)*sw^2 + (-44 + 48*d)*sw^4 - 160*sw^6 + 
              128*sw^8) + (-9 + 60*sw^2 - 200*sw^4 + 320*sw^6 - 256*sw^8)*t))*
         GaugeXi[Z]^2 - mz^2*(27*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
           (s*(-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 128*sw^8 + 
              d*(-9 - 30*sw^2 + 48*sw^4)) + (-9 + 60*sw^2 - 200*sw^4 + 
              320*sw^6 - 256*sw^8)*t))*GaugeXi[Z]^3) + 
      2*(1 - d)*s*(mz^4*(9*d*(2*Pi)^d + 2^(1 + d)*Pi^d*
           (-9 - 30*(-2 + d)*sw^2 + (-44 + 48*d)*sw^4 - 160*sw^6 + 128*sw^8))*
         t + s^2*(-27*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(-9 + 60*sw^2 - 44*sw^4 - 
            160*sw^6 + 128*sw^8 + 6*d*(3 - 5*sw^2 + 8*sw^4)))*t + 
        2*mz^2*(9*d*(2*Pi)^d*s*(d*s - 11*t) + 2^(1 + d)*Pi^d*
           (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
              3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 
                80*sw^6 + 64*sw^8)) + 3*s*(27 - 180*sw^2 + 340*sw^4 - 
              160*sw^6 + 128*sw^8 - 22*d*sw^2*(-5 + 8*sw^2) + 
              d^2*(3 - 20*sw^2 + 32*sw^4))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 
              320*sw^6 + 256*sw^8)*t^2)) - 
        2*(s^2*(9*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(-9 - 30*(-2 + d)*sw^2 + 
              (-44 + 48*d)*sw^4 - 160*sw^6 + 128*sw^8))*t + 
          mz^4*(9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-9 - 30*(-2 + d)*sw^2 + 
                (-44 + 48*d)*sw^4 - 160*sw^6 + 128*sw^8) + 3*(-3 + d)*(3 - 
                20*sw^2 + 32*sw^4)*t)) + mz^2*(-189*d*(2*Pi)^d*s*t + 
            2^(1 + d)*Pi^d*(s^2*(d^2*(9 - 60*sw^2 + 96*sw^4) + 
                4*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8) + 
                4*d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 64*sw^8)) + 
              s*(153 - 1020*sw^2 + 1996*sw^4 - 1120*sw^6 + 896*sw^8 - 
                126*d*sw^2*(-5 + 8*sw^2) + 6*d^2*(3 - 20*sw^2 + 32*sw^4))*t + 
              4*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^2)))*
         GaugeXi[Z] + (s^2*(-27*d*(2*Pi)^d + 2^(1 + d)*Pi^d*
             (-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 128*sw^8 + 
              6*d*(3 - 5*sw^2 + 8*sw^4)))*t + 2^(1 + d)*mz^4*Pi^d*
           (2*s*(d*(9 - 60*sw^2 + 96*sw^4) + 2*(-9 + 60*sw^2 - 44*sw^4 - 
                160*sw^6 + 128*sw^8)) + (-90 + 600*sw^2 - 1064*sw^4 + 
              320*sw^6 - 256*sw^8 + 9*d*(3 - 20*sw^2 + 32*sw^4))*t) + 
          2*mz^2*(9*d*(2*Pi)^d*s*(d*s - 9*t) + 2^(1 + d)*Pi^d*
             (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
                3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 
                  80*sw^6 + 64*sw^8)) + s*(63 - 420*sw^2 + 932*sw^4 - 
                800*sw^6 + 640*sw^8 - 54*d*sw^2*(-5 + 8*sw^2) + 
                d^2*(9 - 60*sw^2 + 96*sw^4))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 
                320*sw^6 + 256*sw^8)*t^2)))*GaugeXi[Z]^2 - 
        2*(mz^2*s*(9*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(-9 - 30*(-2 + d)*sw^2 + 
              (-44 + 48*d)*sw^4 - 160*sw^6 + 128*sw^8))*t + 
          mz^4*(9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-9 - 30*(-2 + d)*sw^2 + 
                (-44 + 48*d)*sw^4 - 160*sw^6 + 128*sw^8) + 3*(-3 + d)*(3 - 
                20*sw^2 + 32*sw^4)*t)))*GaugeXi[Z]^3 + 
        mz^4*(9*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(-9 - 30*(-2 + d)*sw^2 + 
            (-44 + 48*d)*sw^4 - 160*sw^6 + 128*sw^8))*t*GaugeXi[Z]^4)))/
    ((1 - d)*mz^4*Pi^(2*d)*s^2*sw^4*(-1 + sw^2)^2*(-1 + GaugeXi[Z])^2), 
   ((-I/27)*2^(-7 - 2*d)*EL^6*(9*d^2*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
          3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
            64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
          d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 
            64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*
         t^2))*(s - 4*mz^2*GaugeXi[Z]))/((-1 + d)*mz^4*Pi^(2*d)*s*sw^4*
     (-1 + sw^2)^2), ((I/27)*2^(-7 - 2*d)*EL^6*
     (((2*Pi)^d*(4*(-1 + d)*mz^4 - 4*d*mz^2*s + d*s^2)*
        (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8))/((-1 + d)*mz^4) + 
      2^(2 + d)*Pi^d*(468 - 3120*sw^2 + 4784*sw^4 + 640*sw^6 - 512*sw^8 + 
        d^3*(-9 + 60*sw^2 - 96*sw^4) + 36*d^2*(3 - 20*sw^2 + 32*sw^4) + 
        4*d*(-99 + 660*sw^2 - 1030*sw^4 - 80*sw^6 + 64*sw^8))*(1 + (2*t)/s) + 
      4*(-9*d^3*(2*Pi)^d + 2^(2 + d)*Pi^d*(117 - 780*sw^2 + 1196*sw^4 + 
          160*sw^6 - 128*sw^8 - 3*d^3*sw^2*(-5 + 8*sw^2) + 
          9*d^2*(3 - 20*sw^2 + 32*sw^4) + d*(-99 + 660*sw^2 - 1030*sw^4 - 
            80*sw^6 + 64*sw^8)))*(1 + (2*t)/s) - 
      (4*(mz^2 - s/2)*(2^(1 + d)*mz^2*Pi^d*(d*s*(9 - 60*sw^2 + 96*sw^4) + 
           2*s*(-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 128*sw^8) - 
           2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t) - 
         s*(9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-9 - 30*(-2 + d)*sw^2 + 
               (-44 + 48*d)*sw^4 - 160*sw^6 + 128*sw^8) + 
             (-9 + 60*sw^2 - 200*sw^4 + 320*sw^6 - 256*sw^8)*t))))/(mz^4*s) + 
      ((4*(-1 + d)*mz^4 - 4*d*mz^2*s + d*s^2)*(9*(2*Pi)^d + 
         2^(2 + d)*Pi^d*sw^2*(-15 + 50*sw^2 - 80*sw^4 + 64*sw^6) - 
         2^(1 + d)*Pi^d*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*
          GaugeXi[Z] + (9*(2*Pi)^d + 2^(2 + d)*Pi^d*sw^2*(-15 + 50*sw^2 - 
             80*sw^4 + 64*sw^6))*GaugeXi[Z]^2))/((-1 + d)*mz^4*
        (-1 + GaugeXi[Z])^2) - ((4*(-1 + d)*mz^4 - 4*mz^2*(d*s + 2*t) + 
         s*(d*s + 2*t))*(-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
          (2*s*(9 + 15*(-4 + d)*sw^2 + (122 - 24*d)*sw^4 - 80*sw^6 + 
             64*sw^8) + (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t) + 
         2^(1 + d)*Pi^d*(d*s*(9 - 60*sw^2 + 96*sw^4) - 
           4*s*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8) - 
           2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t)*GaugeXi[Z] + 
         (-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(2*s*(9 + 15*(-4 + d)*sw^2 + 
               (122 - 24*d)*sw^4 - 80*sw^6 + 64*sw^8) + 
             (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t))*
          GaugeXi[Z]^2))/((-1 + d)*mz^4*s*(-1 + GaugeXi[Z])^2) + 
      (2*(-(s^2*(-27*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(-9 + 60*sw^2 - 44*sw^4 - 
              160*sw^6 + 128*sw^8 + 6*d*(3 - 5*sw^2 + 8*sw^4)))*t) + 
         2*mz^4*(9*d*(77 + d^2)*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (s*(-513 + 3420*sw^2 - 5628*sw^4 + 480*sw^6 - 384*sw^8 + 6*d^3*
                sw^2*(-5 + 8*sw^2) - 24*d^2*(3 - 20*sw^2 + 32*sw^4) + 2*d*
                sw^2*(-1155 + 1874*sw^2 - 80*sw^4 + 64*sw^6)) + 
             (-477 + 3180*sw^2 - 4984*sw^4 - 320*sw^6 + 256*sw^8 - 36*d^2*
                (3 - 20*sw^2 + 32*sw^4) + d^3*(9 - 60*sw^2 + 96*sw^4) - 4*d*
                (-99 + 660*sw^2 - 1030*sw^4 - 80*sw^6 + 64*sw^8))*t)) - 
         4*mz^2*(9*d*(2*Pi)^d*s*(d*s - 11*t) + 2^(1 + d)*Pi^d*
            (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 3*d^2*sw^2*
                (-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
                 64*sw^8)) + 3*s*(27 - 180*sw^2 + 340*sw^4 - 160*sw^6 + 128*
                sw^8 - 22*d*sw^2*(-5 + 8*sw^2) + d^2*(3 - 20*sw^2 + 32*sw^4))*
              t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^2)) - 
         2*(-(s^2*(9*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(-9 - 30*(-2 + d)*sw^2 + 
                (-44 + 48*d)*sw^4 - 160*sw^6 + 128*sw^8))*t) + 
           2*mz^4*(9*d*(77 + d^2)*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
              (s*(-513 + 3420*sw^2 - 5628*sw^4 + 480*sw^6 - 384*sw^8 + 
                 6*d^3*sw^2*(-5 + 8*sw^2) - 24*d^2*(3 - 20*sw^2 + 32*sw^4) + 
                 2*d*sw^2*(-1155 + 1874*sw^2 - 80*sw^4 + 64*sw^6)) + 
               (-477 + 3180*sw^2 - 4984*sw^4 - 320*sw^6 + 256*sw^8 - 
                 36*d^2*(3 - 20*sw^2 + 32*sw^4) + d^3*(9 - 60*sw^2 + 
                   96*sw^4) - 4*d*(-99 + 660*sw^2 - 1030*sw^4 - 80*sw^6 + 
                   64*sw^8))*t)) - 4*mz^2*(9*d*(2*Pi)^d*s*(d*s - 11*t) + 
             2^(1 + d)*Pi^d*(2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 
                 128*sw^8 + 3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 
                   70*sw^4 - 80*sw^6 + 64*sw^8)) + 3*s*(27 - 180*sw^2 + 
                 340*sw^4 - 160*sw^6 + 128*sw^8 - 22*d*sw^2*(-5 + 8*sw^2) + 
                 d^2*(3 - 20*sw^2 + 32*sw^4))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 
                 320*sw^6 + 256*sw^8)*t^2)))*GaugeXi[Z] + 
         (-(s^2*(-27*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(-9 + 60*sw^2 - 44*sw^4 - 
                160*sw^6 + 128*sw^8 + 6*d*(3 - 5*sw^2 + 8*sw^4)))*t) + 
           2*mz^4*(9*d*(77 + d^2)*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
              (s*(-513 + 3420*sw^2 - 5628*sw^4 + 480*sw^6 - 384*sw^8 + 
                 6*d^3*sw^2*(-5 + 8*sw^2) - 24*d^2*(3 - 20*sw^2 + 32*sw^4) + 
                 2*d*sw^2*(-1155 + 1874*sw^2 - 80*sw^4 + 64*sw^6)) + 
               (-477 + 3180*sw^2 - 4984*sw^4 - 320*sw^6 + 256*sw^8 - 
                 36*d^2*(3 - 20*sw^2 + 32*sw^4) + d^3*(9 - 60*sw^2 + 
                   96*sw^4) - 4*d*(-99 + 660*sw^2 - 1030*sw^4 - 80*sw^6 + 
                   64*sw^8))*t)) - 4*mz^2*(9*d*(2*Pi)^d*s*(d*s - 11*t) + 
             2^(1 + d)*Pi^d*(2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 
                 128*sw^8 + 3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 
                   70*sw^4 - 80*sw^6 + 64*sw^8)) + 3*s*(27 - 180*sw^2 + 
                 340*sw^4 - 160*sw^6 + 128*sw^8 - 22*d*sw^2*(-5 + 8*sw^2) + 
                 d^2*(3 - 20*sw^2 + 32*sw^4))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 
                 320*sw^6 + 256*sw^8)*t^2)))*GaugeXi[Z]^2))/
       (mz^4*s*(-1 + GaugeXi[Z])^2)))/(Pi^(2*d)*sw^4*(-1 + sw^2)^2), 
   ((I/27)*2^(-5 - 2*d)*EL^6*(-9*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*mz^2*Pi^d*s*
       (-24*d^2*(3 - 20*sw^2 + 32*sw^4) + d^3*(9 - 60*sw^2 + 96*sw^4) - 
        12*d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 64*sw^8) + 
        8*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)) + 
      2^(2 + d)*Pi^d*(s^2*(-3*d^3*sw^2*(-5 + 8*sw^2) + 
          6*d^2*(3 - 20*sw^2 + 32*sw^4) + 3*d*(-9 + 60*sw^2 - 70*sw^4 - 
            80*sw^6 + 64*sw^8) - 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
            256*sw^8)) + 2*s*(d*(9 - 60*sw^2 + 96*sw^4) + 
          2*(-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 128*sw^8))*t + 
        4*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^2)))/
    (Pi^(2*d)*s*sw^4*(-1 + sw^2)^2), 
   ((-I/27)*4^(-3 - d)*EL^6*(4*mz^2*t*(9*d^3*(2*Pi)^d*s + 
        2^(1 + d)*Pi^d*(s*(6*d^3*sw^2*(-5 + 8*sw^2) - 
            9*d^2*(3 - 20*sw^2 + 32*sw^4) - 2*d*(-9 + 60*sw^2 - 70*sw^4 - 
              80*sw^6 + 64*sw^8) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 
              64*sw^8)) + 2*(90 - 600*sw^2 + 1064*sw^4 - 320*sw^6 + 
            256*sw^8 - 18*d*(3 - 20*sw^2 + 32*sw^4) + 
            d^2*(9 - 60*sw^2 + 96*sw^4))*t)) + 
      2*mz^4*(9*d^3*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
         (2*s*(3*d^3*sw^2*(-5 + 8*sw^2) - 6*d^2*(3 - 20*sw^2 + 32*sw^4) - 
            3*d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 64*sw^8) + 
            2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)) + 
          (468 - 3120*sw^2 + 4784*sw^4 + 640*sw^6 - 512*sw^8 + 
            d^3*(-9 + 60*sw^2 - 96*sw^4) + 36*d^2*(3 - 20*sw^2 + 32*sw^4) + 
            4*d*(-99 + 660*sw^2 - 1030*sw^4 - 80*sw^6 + 64*sw^8))*t)) + 
      t*(-9*d^3*(2*Pi)^d*s^2 + 2^(2 + d)*Pi^d*
         (s^2*(-3*d^3*sw^2*(-5 + 8*sw^2) + 6*d^2*(3 - 20*sw^2 + 32*sw^4) + 
            3*d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 64*sw^8) - 
            2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)) + 
          2*s*(d*(9 - 60*sw^2 + 96*sw^4) + 2*(-9 + 60*sw^2 - 44*sw^4 - 
              160*sw^6 + 128*sw^8))*t + 4*(9 - 60*sw^2 + 200*sw^4 - 
            320*sw^6 + 256*sw^8)*t^2))))/(Pi^(2*d)*s*sw^4*(-1 + sw^2)^2), 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, 
  {0, ((-I/27)*2^(-8 - d)*EL^6*
     (s*(-24*d^2*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 
          32*sw^6*(-5 + 8*swC^2) - 20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
          4*sw^4*(37 - 100*swC^2 + 64*swC^4)) + 
        3*d^3*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 32*sw^6*(-5 + 8*swC^2) - 
          20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 4*sw^4*(37 - 100*swC^2 + 
            64*swC^4)) - 12*d*(-9*(3 - 10*swC^2 + 8*swC^4) + 
          60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 64*sw^8*(-3 - 5*swC^2 + 
            8*swC^4) - 32*sw^6*(-15 + 11*swC^2 + 20*swC^4) - 
          4*sw^4*(111 - 265*swC^2 + 140*swC^4)) + 
        8*(9*(3 - 10*swC^2 + 8*swC^4) - 60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
          64*sw^8*(3 - 20*swC^2 + 32*swC^4) - 32*sw^6*(15 - 76*swC^2 + 
            80*swC^4) + 4*sw^4*(111 - 440*swC^2 + 400*swC^4))) + 
      2*(-36*d^2*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 
          32*sw^6*(-5 + 8*swC^2) - 20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
          4*sw^4*(37 - 100*swC^2 + 64*swC^4)) + 
        3*d^3*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 32*sw^6*(-5 + 8*swC^2) - 
          20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 4*sw^4*(37 - 100*swC^2 + 
            64*swC^4)) - 4*d*(-99*(3 - 10*swC^2 + 8*swC^4) + 
          660*sw^2*(3 - 10*swC^2 + 8*swC^4) + 64*sw^8*(-33 - 5*swC^2 + 
            8*swC^4) - 32*sw^6*(-165 + 251*swC^2 + 20*swC^4) - 
          4*sw^4*(1221 - 3265*swC^2 + 2060*swC^4)) + 
        4*(-117*(3 - 10*swC^2 + 8*swC^4) + 780*sw^2*(3 - 10*swC^2 + 
            8*swC^4) + 64*sw^8*(-39 - 10*swC^2 + 16*swC^4) - 
          32*sw^6*(-195 + 286*swC^2 + 40*swC^4) - 
          4*sw^4*(1443 - 3830*swC^2 + 2392*swC^4)))*t))/
    (cwC^2*Pi^d*(mz^2 - s)*sw^4*(-1 + sw^2)^2*swC^2), 0, 
   ((-I/27)*2^(-10 - d)*EL^6*
     (s^2*(3*d^2*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 
          32*sw^6*(-5 + 8*swC^2) - 20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
          4*sw^4*(37 - 100*swC^2 + 64*swC^4)) - 
        4*(-9*(3 - 10*swC^2 + 8*swC^4) + 60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
          64*sw^8*(-3 - 10*swC^2 + 16*swC^4) - 32*sw^6*(-15 - 2*swC^2 + 
            40*swC^4) - 4*sw^4*(111 - 230*swC^2 + 88*swC^4)) + 
        4*d*(-9*(3 - 10*swC^2 + 8*swC^4) + 60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
          64*sw^8*(-3 - 5*swC^2 + 8*swC^4) - 32*sw^6*(-15 + 11*swC^2 + 
            20*swC^4) - 4*sw^4*(111 - 265*swC^2 + 140*swC^4))) + 
      2*s*(-15*d*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 
          32*sw^6*(-5 + 8*swC^2) - 20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
          4*sw^4*(37 - 100*swC^2 + 64*swC^4)) + 
        3*d^2*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 32*sw^6*(-5 + 8*swC^2) - 
          20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 4*sw^4*(37 - 100*swC^2 + 
            64*swC^4)) + 8*(9*(3 - 10*swC^2 + 8*swC^4) - 
          60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 64*sw^8*(3 - 5*swC^2 + 
            8*swC^4) - 32*sw^6*(15 - 37*swC^2 + 20*swC^4) + 
          4*sw^4*(111 - 335*swC^2 + 244*swC^4)))*t + 
      4*(9*(3 - 10*swC^2 + 8*swC^4) - 60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
        64*sw^8*(3 - 20*swC^2 + 32*swC^4) - 32*sw^6*(15 - 76*swC^2 + 
          80*swC^4) + 4*sw^4*(111 - 440*swC^2 + 400*swC^4))*t^2)*
     (-mz^2 + s + mz^2*GaugeXi[Z]))/(cwC^2*(-1 + d)*mz^4*Pi^d*(mz^2 - s)*s*
     sw^4*(-1 + sw^2)^2*swC^2), 0, 
   ((I/27)*2^(-8 - d)*EL^6*t*
     (s*(72*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 32*sw^6*(-5 + 8*swC^2) - 
          20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 4*sw^4*(37 - 100*swC^2 + 
            64*swC^4)) - 12*d^2*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 
          32*sw^6*(-5 + 8*swC^2) - 20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
          4*sw^4*(37 - 100*swC^2 + 64*swC^4)) + 
        3*d^3*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 32*sw^6*(-5 + 8*swC^2) - 
          20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 4*sw^4*(37 - 100*swC^2 + 
            64*swC^4)) + 4*d*(-9*(3 - 10*swC^2 + 8*swC^4) + 
          60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 64*sw^8*(-3 - 5*swC^2 + 
            8*swC^4) - 32*sw^6*(-15 + 11*swC^2 + 20*swC^4) - 
          4*sw^4*(111 - 265*swC^2 + 140*swC^4))) - 
      4*mz^2*(-36*d^2*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 
          32*sw^6*(-5 + 8*swC^2) - 20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
          4*sw^4*(37 - 100*swC^2 + 64*swC^4)) + 
        3*d^3*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 32*sw^6*(-5 + 8*swC^2) - 
          20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 4*sw^4*(37 - 100*swC^2 + 
            64*swC^4)) - 4*d*(-99*(3 - 10*swC^2 + 8*swC^4) + 
          660*sw^2*(3 - 10*swC^2 + 8*swC^4) + 64*sw^8*(-33 - 5*swC^2 + 
            8*swC^4) - 32*sw^6*(-165 + 251*swC^2 + 20*swC^4) - 
          4*sw^4*(1221 - 3265*swC^2 + 2060*swC^4)) + 
        4*(-117*(3 - 10*swC^2 + 8*swC^4) + 780*sw^2*(3 - 10*swC^2 + 
            8*swC^4) + 64*sw^8*(-39 - 10*swC^2 + 16*swC^4) - 
          32*sw^6*(-195 + 286*swC^2 + 40*swC^4) - 
          4*sw^4*(1443 - 3830*swC^2 + 2392*swC^4))) + 
      8*(90*(3 - 10*swC^2 + 8*swC^4) - 600*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
        128*sw^8*(15 - 10*swC^2 + 16*swC^4) - 64*sw^6*(75 - 146*swC^2 + 
          40*swC^4) + 8*sw^4*(555 - 1570*swC^2 + 1064*swC^4) - 
        18*d*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 32*sw^6*(-5 + 8*swC^2) - 
          20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 4*sw^4*(37 - 100*swC^2 + 
            64*swC^4)) + 3*d^2*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 
          32*sw^6*(-5 + 8*swC^2) - 20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
          4*sw^4*(37 - 100*swC^2 + 64*swC^4)))*t))/
    (cwC^2*Pi^d*(mz^2 - s)*sw^4*(-1 + sw^2)^2*swC^2), 0, 0, 
   ((-I/27)*2^(-10 - d)*EL^6*
     (s^2*(3*d^2*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 
          32*sw^6*(-5 + 8*swC^2) - 20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
          4*sw^4*(37 - 100*swC^2 + 64*swC^4)) - 
        4*(-9*(3 - 10*swC^2 + 8*swC^4) + 60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
          64*sw^8*(-3 - 10*swC^2 + 16*swC^4) - 32*sw^6*(-15 - 2*swC^2 + 
            40*swC^4) - 4*sw^4*(111 - 230*swC^2 + 88*swC^4)) + 
        4*d*(-9*(3 - 10*swC^2 + 8*swC^4) + 60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
          64*sw^8*(-3 - 5*swC^2 + 8*swC^4) - 32*sw^6*(-15 + 11*swC^2 + 
            20*swC^4) - 4*sw^4*(111 - 265*swC^2 + 140*swC^4))) + 
      2*s*(-15*d*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 
          32*sw^6*(-5 + 8*swC^2) - 20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
          4*sw^4*(37 - 100*swC^2 + 64*swC^4)) + 
        3*d^2*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 32*sw^6*(-5 + 8*swC^2) - 
          20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 4*sw^4*(37 - 100*swC^2 + 
            64*swC^4)) + 8*(9*(3 - 10*swC^2 + 8*swC^4) - 
          60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 64*sw^8*(3 - 5*swC^2 + 
            8*swC^4) - 32*sw^6*(15 - 37*swC^2 + 20*swC^4) + 
          4*sw^4*(111 - 335*swC^2 + 244*swC^4)))*t + 
      4*(9*(3 - 10*swC^2 + 8*swC^4) - 60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
        64*sw^8*(3 - 20*swC^2 + 32*swC^4) - 32*sw^6*(15 - 76*swC^2 + 
          80*swC^4) + 4*sw^4*(111 - 440*swC^2 + 400*swC^4))*t^2)*
     (mz^2 + s - mz^2*GaugeXi[Z]))/(cwC^2*(-1 + d)*mz^4*Pi^d*(mz^2 - s)*s*
     sw^4*(-1 + sw^2)^2*swC^2), ((I/27)*2^(-10 - d)*EL^6*
     (s^2*(3*d^2*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 
          32*sw^6*(-5 + 8*swC^2) - 20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
          4*sw^4*(37 - 100*swC^2 + 64*swC^4)) - 
        4*(-9*(3 - 10*swC^2 + 8*swC^4) + 60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
          64*sw^8*(-3 - 10*swC^2 + 16*swC^4) - 32*sw^6*(-15 - 2*swC^2 + 
            40*swC^4) - 4*sw^4*(111 - 230*swC^2 + 88*swC^4)) + 
        4*d*(-9*(3 - 10*swC^2 + 8*swC^4) + 60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
          64*sw^8*(-3 - 5*swC^2 + 8*swC^4) - 32*sw^6*(-15 + 11*swC^2 + 
            20*swC^4) - 4*sw^4*(111 - 265*swC^2 + 140*swC^4))) + 
      2*s*(-15*d*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 
          32*sw^6*(-5 + 8*swC^2) - 20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
          4*sw^4*(37 - 100*swC^2 + 64*swC^4)) + 
        3*d^2*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 32*sw^6*(-5 + 8*swC^2) - 
          20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 4*sw^4*(37 - 100*swC^2 + 
            64*swC^4)) + 8*(9*(3 - 10*swC^2 + 8*swC^4) - 
          60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 64*sw^8*(3 - 5*swC^2 + 
            8*swC^4) - 32*sw^6*(15 - 37*swC^2 + 20*swC^4) + 
          4*sw^4*(111 - 335*swC^2 + 244*swC^4)))*t + 
      4*(9*(3 - 10*swC^2 + 8*swC^4) - 60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
        64*sw^8*(3 - 20*swC^2 + 32*swC^4) - 32*sw^6*(15 - 76*swC^2 + 
          80*swC^4) + 4*sw^4*(111 - 440*swC^2 + 400*swC^4))*t^2)*
     (-mz^2 + s + mz^2*GaugeXi[Z]))/(cwC^2*(-1 + d)*mz^4*Pi^d*(mz^2 - s)*s*
     sw^4*(-1 + sw^2)^2*swC^2), ((-I/27)*2^(-10 - d)*EL^6*
     (s^2*(3*d^2*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 
          32*sw^6*(-5 + 8*swC^2) - 20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
          4*sw^4*(37 - 100*swC^2 + 64*swC^4)) - 
        4*(-9*(3 - 10*swC^2 + 8*swC^4) + 60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
          64*sw^8*(-3 - 10*swC^2 + 16*swC^4) - 32*sw^6*(-15 - 2*swC^2 + 
            40*swC^4) - 4*sw^4*(111 - 230*swC^2 + 88*swC^4)) + 
        4*d*(-9*(3 - 10*swC^2 + 8*swC^4) + 60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
          64*sw^8*(-3 - 5*swC^2 + 8*swC^4) - 32*sw^6*(-15 + 11*swC^2 + 
            20*swC^4) - 4*sw^4*(111 - 265*swC^2 + 140*swC^4))) + 
      2*s*(-15*d*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 
          32*sw^6*(-5 + 8*swC^2) - 20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
          4*sw^4*(37 - 100*swC^2 + 64*swC^4)) + 
        3*d^2*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 32*sw^6*(-5 + 8*swC^2) - 
          20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 4*sw^4*(37 - 100*swC^2 + 
            64*swC^4)) + 8*(9*(3 - 10*swC^2 + 8*swC^4) - 
          60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 64*sw^8*(3 - 5*swC^2 + 
            8*swC^4) - 32*sw^6*(15 - 37*swC^2 + 20*swC^4) + 
          4*sw^4*(111 - 335*swC^2 + 244*swC^4)))*t + 
      4*(9*(3 - 10*swC^2 + 8*swC^4) - 60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
        64*sw^8*(3 - 20*swC^2 + 32*swC^4) - 32*sw^6*(15 - 76*swC^2 + 
          80*swC^4) + 4*sw^4*(111 - 440*swC^2 + 400*swC^4))*t^2)*
     (mz^4 + 2*(-3 + 2*d)*mz^2*s + s^2 - 2*mz^2*(mz^2 + s)*GaugeXi[Z] + 
      mz^4*GaugeXi[Z]^2))/(cwC^2*(-1 + d)*mz^4*Pi^d*(mz^2 - s)*s*sw^4*
     (-1 + sw^2)^2*swC^2), ((I/27)*2^(-10 - d)*EL^6*
     (s^2*(3*d^2*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 
          32*sw^6*(-5 + 8*swC^2) - 20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
          4*sw^4*(37 - 100*swC^2 + 64*swC^4)) - 
        4*(-9*(3 - 10*swC^2 + 8*swC^4) + 60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
          64*sw^8*(-3 - 10*swC^2 + 16*swC^4) - 32*sw^6*(-15 - 2*swC^2 + 
            40*swC^4) - 4*sw^4*(111 - 230*swC^2 + 88*swC^4)) + 
        4*d*(-9*(3 - 10*swC^2 + 8*swC^4) + 60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
          64*sw^8*(-3 - 5*swC^2 + 8*swC^4) - 32*sw^6*(-15 + 11*swC^2 + 
            20*swC^4) - 4*sw^4*(111 - 265*swC^2 + 140*swC^4))) + 
      2*s*(-15*d*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 
          32*sw^6*(-5 + 8*swC^2) - 20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
          4*sw^4*(37 - 100*swC^2 + 64*swC^4)) + 
        3*d^2*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 32*sw^6*(-5 + 8*swC^2) - 
          20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 4*sw^4*(37 - 100*swC^2 + 
            64*swC^4)) + 8*(9*(3 - 10*swC^2 + 8*swC^4) - 
          60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 64*sw^8*(3 - 5*swC^2 + 
            8*swC^4) - 32*sw^6*(15 - 37*swC^2 + 20*swC^4) + 
          4*sw^4*(111 - 335*swC^2 + 244*swC^4)))*t + 
      4*(9*(3 - 10*swC^2 + 8*swC^4) - 60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
        64*sw^8*(3 - 20*swC^2 + 32*swC^4) - 32*sw^6*(15 - 76*swC^2 + 
          80*swC^4) + 4*sw^4*(111 - 440*swC^2 + 400*swC^4))*t^2)*
     (mz^2 + s - mz^2*GaugeXi[Z]))/(cwC^2*(-1 + d)*mz^4*Pi^d*(mz^2 - s)*s*
     sw^4*(-1 + sw^2)^2*swC^2), ((-I/27)*2^(-10 - d)*EL^6*
     (s^2*(3*d^2*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 
          32*sw^6*(-5 + 8*swC^2) - 20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
          4*sw^4*(37 - 100*swC^2 + 64*swC^4)) - 
        4*(-9*(3 - 10*swC^2 + 8*swC^4) + 60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
          64*sw^8*(-3 - 10*swC^2 + 16*swC^4) - 32*sw^6*(-15 - 2*swC^2 + 
            40*swC^4) - 4*sw^4*(111 - 230*swC^2 + 88*swC^4)) + 
        4*d*(-9*(3 - 10*swC^2 + 8*swC^4) + 60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
          64*sw^8*(-3 - 5*swC^2 + 8*swC^4) - 32*sw^6*(-15 + 11*swC^2 + 
            20*swC^4) - 4*sw^4*(111 - 265*swC^2 + 140*swC^4))) + 
      2*s*(-15*d*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 
          32*sw^6*(-5 + 8*swC^2) - 20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
          4*sw^4*(37 - 100*swC^2 + 64*swC^4)) + 
        3*d^2*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 32*sw^6*(-5 + 8*swC^2) - 
          20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 4*sw^4*(37 - 100*swC^2 + 
            64*swC^4)) + 8*(9*(3 - 10*swC^2 + 8*swC^4) - 
          60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 64*sw^8*(3 - 5*swC^2 + 
            8*swC^4) - 32*sw^6*(15 - 37*swC^2 + 20*swC^4) + 
          4*sw^4*(111 - 335*swC^2 + 244*swC^4)))*t + 
      4*(9*(3 - 10*swC^2 + 8*swC^4) - 60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
        64*sw^8*(3 - 20*swC^2 + 32*swC^4) - 32*sw^6*(15 - 76*swC^2 + 
          80*swC^4) + 4*sw^4*(111 - 440*swC^2 + 400*swC^4))*t^2)*
     (mz^4 + 2*(-3 + 2*d)*mz^2*s + s^2 - 2*mz^2*(mz^2 + s)*GaugeXi[Z] + 
      mz^4*GaugeXi[Z]^2))/(cwC^2*(-1 + d)*mz^4*Pi^d*(mz^2 - s)*s*sw^4*
     (-1 + sw^2)^2*swC^2), ((I/27)*2^(-10 - d)*EL^6*
     (s^2*(3*d^2*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 
          32*sw^6*(-5 + 8*swC^2) - 20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
          4*sw^4*(37 - 100*swC^2 + 64*swC^4)) - 
        4*(-9*(3 - 10*swC^2 + 8*swC^4) + 60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
          64*sw^8*(-3 - 10*swC^2 + 16*swC^4) - 32*sw^6*(-15 - 2*swC^2 + 
            40*swC^4) - 4*sw^4*(111 - 230*swC^2 + 88*swC^4)) + 
        4*d*(-9*(3 - 10*swC^2 + 8*swC^4) + 60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
          64*sw^8*(-3 - 5*swC^2 + 8*swC^4) - 32*sw^6*(-15 + 11*swC^2 + 
            20*swC^4) - 4*sw^4*(111 - 265*swC^2 + 140*swC^4))) + 
      2*s*(-15*d*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 
          32*sw^6*(-5 + 8*swC^2) - 20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
          4*sw^4*(37 - 100*swC^2 + 64*swC^4)) + 
        3*d^2*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 32*sw^6*(-5 + 8*swC^2) - 
          20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 4*sw^4*(37 - 100*swC^2 + 
            64*swC^4)) + 8*(9*(3 - 10*swC^2 + 8*swC^4) - 
          60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 64*sw^8*(3 - 5*swC^2 + 
            8*swC^4) - 32*sw^6*(15 - 37*swC^2 + 20*swC^4) + 
          4*sw^4*(111 - 335*swC^2 + 244*swC^4)))*t + 
      4*(9*(3 - 10*swC^2 + 8*swC^4) - 60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
        64*sw^8*(3 - 20*swC^2 + 32*swC^4) - 32*sw^6*(15 - 76*swC^2 + 
          80*swC^4) + 4*sw^4*(111 - 440*swC^2 + 400*swC^4))*t^2)*
     (s - 4*mz^2*GaugeXi[Z]))/(cwC^2*(-1 + d)*mz^4*Pi^d*(mz^2 - s)*sw^4*
     (-1 + sw^2)^2*swC^2), ((I/27)*2^(-10 - d)*EL^6*
     (4*(-1 + d)*mz^4*(s*(-24*d^2*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 
            32*sw^6*(-5 + 8*swC^2) - 20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
            4*sw^4*(37 - 100*swC^2 + 64*swC^4)) + 
          3*d^3*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 32*sw^6*(-5 + 8*swC^2) - 
            20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 4*sw^4*(37 - 100*swC^2 + 
              64*swC^4)) - 12*d*(-9*(3 - 10*swC^2 + 8*swC^4) + 
            60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 64*sw^8*(-3 - 5*swC^2 + 
              8*swC^4) - 32*sw^6*(-15 + 11*swC^2 + 20*swC^4) - 
            4*sw^4*(111 - 265*swC^2 + 140*swC^4)) + 
          8*(9*(3 - 10*swC^2 + 8*swC^4) - 60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
            64*sw^8*(3 - 20*swC^2 + 32*swC^4) - 32*sw^6*(15 - 76*swC^2 + 
              80*swC^4) + 4*sw^4*(111 - 440*swC^2 + 400*swC^4))) + 
        2*(-36*d^2*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 
            32*sw^6*(-5 + 8*swC^2) - 20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
            4*sw^4*(37 - 100*swC^2 + 64*swC^4)) + 
          3*d^3*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 32*sw^6*(-5 + 8*swC^2) - 
            20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 4*sw^4*(37 - 100*swC^2 + 
              64*swC^4)) - 4*d*(-99*(3 - 10*swC^2 + 8*swC^4) + 
            660*sw^2*(3 - 10*swC^2 + 8*swC^4) + 64*sw^8*(-33 - 5*swC^2 + 
              8*swC^4) - 32*sw^6*(-165 + 251*swC^2 + 20*swC^4) - 
            4*sw^4*(1221 - 3265*swC^2 + 2060*swC^4)) + 
          4*(-117*(3 - 10*swC^2 + 8*swC^4) + 780*sw^2*(3 - 10*swC^2 + 
              8*swC^4) + 64*sw^8*(-39 - 10*swC^2 + 16*swC^4) - 
            32*sw^6*(-195 + 286*swC^2 + 40*swC^4) - 
            4*sw^4*(1443 - 3830*swC^2 + 2392*swC^4)))*t) + 
      4*(-3 + 2*d)*mz^2*(s^2*(3*d^2*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 
            32*sw^6*(-5 + 8*swC^2) - 20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
            4*sw^4*(37 - 100*swC^2 + 64*swC^4)) - 
          4*(-9*(3 - 10*swC^2 + 8*swC^4) + 60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
            64*sw^8*(-3 - 10*swC^2 + 16*swC^4) - 32*sw^6*(-15 - 2*swC^2 + 
              40*swC^4) - 4*sw^4*(111 - 230*swC^2 + 88*swC^4)) + 
          4*d*(-9*(3 - 10*swC^2 + 8*swC^4) + 60*sw^2*(3 - 10*swC^2 + 
              8*swC^4) + 64*sw^8*(-3 - 5*swC^2 + 8*swC^4) - 
            32*sw^6*(-15 + 11*swC^2 + 20*swC^4) - 4*sw^4*(111 - 265*swC^2 + 
              140*swC^4))) + 2*s*(-15*d*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 
            32*sw^6*(-5 + 8*swC^2) - 20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
            4*sw^4*(37 - 100*swC^2 + 64*swC^4)) + 
          3*d^2*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 32*sw^6*(-5 + 8*swC^2) - 
            20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 4*sw^4*(37 - 100*swC^2 + 
              64*swC^4)) + 8*(9*(3 - 10*swC^2 + 8*swC^4) - 
            60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 64*sw^8*(3 - 5*swC^2 + 
              8*swC^4) - 32*sw^6*(15 - 37*swC^2 + 20*swC^4) + 
            4*sw^4*(111 - 335*swC^2 + 244*swC^4)))*t + 
        4*(9*(3 - 10*swC^2 + 8*swC^4) - 60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
          64*sw^8*(3 - 20*swC^2 + 32*swC^4) - 32*sw^6*(15 - 76*swC^2 + 
            80*swC^4) + 4*sw^4*(111 - 440*swC^2 + 400*swC^4))*t^2) + 
      s*(s^2*(3*d^2*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 
            32*sw^6*(-5 + 8*swC^2) - 20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
            4*sw^4*(37 - 100*swC^2 + 64*swC^4)) - 
          4*(-9*(3 - 10*swC^2 + 8*swC^4) + 60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
            64*sw^8*(-3 - 10*swC^2 + 16*swC^4) - 32*sw^6*(-15 - 2*swC^2 + 
              40*swC^4) - 4*sw^4*(111 - 230*swC^2 + 88*swC^4)) + 
          4*d*(-9*(3 - 10*swC^2 + 8*swC^4) + 60*sw^2*(3 - 10*swC^2 + 
              8*swC^4) + 64*sw^8*(-3 - 5*swC^2 + 8*swC^4) - 
            32*sw^6*(-15 + 11*swC^2 + 20*swC^4) - 4*sw^4*(111 - 265*swC^2 + 
              140*swC^4))) + 2*s*(-15*d*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 
            32*sw^6*(-5 + 8*swC^2) - 20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
            4*sw^4*(37 - 100*swC^2 + 64*swC^4)) + 
          3*d^2*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 32*sw^6*(-5 + 8*swC^2) - 
            20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 4*sw^4*(37 - 100*swC^2 + 
              64*swC^4)) + 8*(9*(3 - 10*swC^2 + 8*swC^4) - 
            60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 64*sw^8*(3 - 5*swC^2 + 
              8*swC^4) - 32*sw^6*(15 - 37*swC^2 + 20*swC^4) + 
            4*sw^4*(111 - 335*swC^2 + 244*swC^4)))*t + 
        4*(9*(3 - 10*swC^2 + 8*swC^4) - 60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
          64*sw^8*(3 - 20*swC^2 + 32*swC^4) - 32*sw^6*(15 - 76*swC^2 + 
            80*swC^4) + 4*sw^4*(111 - 440*swC^2 + 400*swC^4))*t^2)))/
    (cwC^2*(-1 + d)*mz^4*Pi^d*(mz^2 - s)*sw^4*(-1 + sw^2)^2*swC^2), 
   ((-I/27)*2^(-8 - d)*EL^6*
     (2*mz^2*s*(-24*d^2*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 
          32*sw^6*(-5 + 8*swC^2) - 20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
          4*sw^4*(37 - 100*swC^2 + 64*swC^4)) + 
        3*d^3*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 32*sw^6*(-5 + 8*swC^2) - 
          20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 4*sw^4*(37 - 100*swC^2 + 
            64*swC^4)) - 12*d*(-9*(3 - 10*swC^2 + 8*swC^4) + 
          60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 64*sw^8*(-3 - 5*swC^2 + 
            8*swC^4) - 32*sw^6*(-15 + 11*swC^2 + 20*swC^4) - 
          4*sw^4*(111 - 265*swC^2 + 140*swC^4)) + 
        8*(9*(3 - 10*swC^2 + 8*swC^4) - 60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
          64*sw^8*(3 - 20*swC^2 + 32*swC^4) - 32*sw^6*(15 - 76*swC^2 + 
            80*swC^4) + 4*sw^4*(111 - 440*swC^2 + 400*swC^4))) - 
      s^2*(-24*d^2*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 
          32*sw^6*(-5 + 8*swC^2) - 20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
          4*sw^4*(37 - 100*swC^2 + 64*swC^4)) + 
        3*d^3*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 32*sw^6*(-5 + 8*swC^2) - 
          20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 4*sw^4*(37 - 100*swC^2 + 
            64*swC^4)) - 12*d*(-9*(3 - 10*swC^2 + 8*swC^4) + 
          60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 64*sw^8*(-3 - 5*swC^2 + 
            8*swC^4) - 32*sw^6*(-15 + 11*swC^2 + 20*swC^4) - 
          4*sw^4*(111 - 265*swC^2 + 140*swC^4)) + 
        8*(9*(3 - 10*swC^2 + 8*swC^4) - 60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
          64*sw^8*(3 - 20*swC^2 + 32*swC^4) - 32*sw^6*(15 - 76*swC^2 + 
            80*swC^4) + 4*sw^4*(111 - 440*swC^2 + 400*swC^4))) + 
      8*s*(3*d*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 32*sw^6*(-5 + 8*swC^2) - 
          20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 4*sw^4*(37 - 100*swC^2 + 
            64*swC^4)) + 2*(-9*(3 - 10*swC^2 + 8*swC^4) + 
          60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 64*sw^8*(-3 - 10*swC^2 + 
            16*swC^4) - 32*sw^6*(-15 - 2*swC^2 + 40*swC^4) - 
          4*sw^4*(111 - 230*swC^2 + 88*swC^4)))*t + 
      16*(9*(3 - 10*swC^2 + 8*swC^4) - 60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
        64*sw^8*(3 - 20*swC^2 + 32*swC^4) - 32*sw^6*(15 - 76*swC^2 + 
          80*swC^4) + 4*sw^4*(111 - 440*swC^2 + 400*swC^4))*t^2))/
    (cwC^2*Pi^d*(mz^2 - s)*sw^4*(-1 + sw^2)^2*swC^2), 
   ((I/27)*2^(-9 - d)*EL^6*
     (4*mz^2*t*(s*(-18*d^2*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 
            32*sw^6*(-5 + 8*swC^2) - 20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
            4*sw^4*(37 - 100*swC^2 + 64*swC^4)) + 
          3*d^3*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 32*sw^6*(-5 + 8*swC^2) - 
            20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 4*sw^4*(37 - 100*swC^2 + 
              64*swC^4)) - 4*d*(-9*(3 - 10*swC^2 + 8*swC^4) + 
            60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 64*sw^8*(-3 - 5*swC^2 + 
              8*swC^4) - 32*sw^6*(-15 + 11*swC^2 + 20*swC^4) - 
            4*sw^4*(111 - 265*swC^2 + 140*swC^4)) + 
          16*(9*(3 - 10*swC^2 + 8*swC^4) - 60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
            64*sw^8*(3 - 5*swC^2 + 8*swC^4) - 32*sw^6*(15 - 37*swC^2 + 
              20*swC^4) + 4*sw^4*(111 - 335*swC^2 + 244*swC^4))) + 
        4*(90*(3 - 10*swC^2 + 8*swC^4) - 600*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
          128*sw^8*(15 - 10*swC^2 + 16*swC^4) - 64*sw^6*(75 - 146*swC^2 + 
            40*swC^4) + 8*sw^4*(555 - 1570*swC^2 + 1064*swC^4) - 
          18*d*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 32*sw^6*(-5 + 8*swC^2) - 
            20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 4*sw^4*(37 - 100*swC^2 + 
              64*swC^4)) + 3*d^2*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 
            32*sw^6*(-5 + 8*swC^2) - 20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
            4*sw^4*(37 - 100*swC^2 + 64*swC^4)))*t) + 
      2*mz^4*(s*(-24*d^2*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 
            32*sw^6*(-5 + 8*swC^2) - 20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
            4*sw^4*(37 - 100*swC^2 + 64*swC^4)) + 
          3*d^3*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 32*sw^6*(-5 + 8*swC^2) - 
            20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 4*sw^4*(37 - 100*swC^2 + 
              64*swC^4)) - 12*d*(-9*(3 - 10*swC^2 + 8*swC^4) + 
            60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 64*sw^8*(-3 - 5*swC^2 + 
              8*swC^4) - 32*sw^6*(-15 + 11*swC^2 + 20*swC^4) - 
            4*sw^4*(111 - 265*swC^2 + 140*swC^4)) + 
          8*(9*(3 - 10*swC^2 + 8*swC^4) - 60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
            64*sw^8*(3 - 20*swC^2 + 32*swC^4) - 32*sw^6*(15 - 76*swC^2 + 
              80*swC^4) + 4*sw^4*(111 - 440*swC^2 + 400*swC^4))) - 
        2*(-36*d^2*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 
            32*sw^6*(-5 + 8*swC^2) - 20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
            4*sw^4*(37 - 100*swC^2 + 64*swC^4)) + 
          3*d^3*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 32*sw^6*(-5 + 8*swC^2) - 
            20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 4*sw^4*(37 - 100*swC^2 + 
              64*swC^4)) - 4*d*(-99*(3 - 10*swC^2 + 8*swC^4) + 
            660*sw^2*(3 - 10*swC^2 + 8*swC^4) + 64*sw^8*(-33 - 5*swC^2 + 
              8*swC^4) - 32*sw^6*(-165 + 251*swC^2 + 20*swC^4) - 
            4*sw^4*(1221 - 3265*swC^2 + 2060*swC^4)) + 
          4*(-117*(3 - 10*swC^2 + 8*swC^4) + 780*sw^2*(3 - 10*swC^2 + 
              8*swC^4) + 64*sw^8*(-39 - 10*swC^2 + 16*swC^4) - 
            32*sw^6*(-195 + 286*swC^2 + 40*swC^4) - 
            4*sw^4*(1443 - 3830*swC^2 + 2392*swC^4)))*t) + 
      t*(-(s^2*(-24*d^2*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 
             32*sw^6*(-5 + 8*swC^2) - 20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
             4*sw^4*(37 - 100*swC^2 + 64*swC^4)) + 
           3*d^3*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 
             32*sw^6*(-5 + 8*swC^2) - 20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
             4*sw^4*(37 - 100*swC^2 + 64*swC^4)) - 
           12*d*(-9*(3 - 10*swC^2 + 8*swC^4) + 60*sw^2*(3 - 10*swC^2 + 8*
                swC^4) + 64*sw^8*(-3 - 5*swC^2 + 8*swC^4) - 
             32*sw^6*(-15 + 11*swC^2 + 20*swC^4) - 4*sw^4*(111 - 265*swC^2 + 
               140*swC^4)) + 8*(9*(3 - 10*swC^2 + 8*swC^4) - 
             60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 64*sw^8*(3 - 20*swC^2 + 32*
                swC^4) - 32*sw^6*(15 - 76*swC^2 + 80*swC^4) + 
             4*sw^4*(111 - 440*swC^2 + 400*swC^4)))) + 
        8*s*(3*d*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 
            32*sw^6*(-5 + 8*swC^2) - 20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
            4*sw^4*(37 - 100*swC^2 + 64*swC^4)) + 
          2*(-9*(3 - 10*swC^2 + 8*swC^4) + 60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
            64*sw^8*(-3 - 10*swC^2 + 16*swC^4) - 32*sw^6*(-15 - 2*swC^2 + 
              40*swC^4) - 4*sw^4*(111 - 230*swC^2 + 88*swC^4)))*t + 
        16*(9*(3 - 10*swC^2 + 8*swC^4) - 60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
          64*sw^8*(3 - 20*swC^2 + 32*swC^4) - 32*sw^6*(15 - 76*swC^2 + 
            80*swC^4) + 4*sw^4*(111 - 440*swC^2 + 400*swC^4))*t^2)))/
    (cwC^2*Pi^d*(mz^2 - s)*sw^4*(-1 + sw^2)^2*swC^2), 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, 
  {((I/27)*2^(1 - d)*EL^6*((96 - 216*d + 82*d^2 - 7*d^3)*s^2 - 
      4*(208 - 84*d + 5*d^2)*s*t - 4*(176 - 80*d + 7*d^2)*t^2 + 
      2*(32 - 20*d + 3*d^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2)*GaugeXi[A] + 
      (-4 + d)^2*((-2 + d)*s^2 + 4*s*t + 4*t^2)*GaugeXi[A]^2))/
    ((-4 + d)*Pi^d*s^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/27)*2^(3 - d)*(32 - 14*d + d^2)*EL^6*(s + 2*t))/((-4 + d)*Pi^d*s), 
   ((-I/27)*2^(2 - d)*EL^6*(s + t)*(3*d*s^2 + 8*t*(3*s + 2*t)))/(Pi^d*s), 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0}, {((I/27)*4^(-2 - d)*EL^6*(15*d^4*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(s^2*(-15*d^4 - 96*(45 - 10*swC^2 + 16*swC^4) + 
          2*d^3*(99 - 35*swC^2 + 56*swC^4) + 48*d*(92 - 45*swC^2 + 
            72*swC^4) - 2*d^2*(759 - 410*swC^2 + 656*swC^4)) + 
        s*(-57*d^3 + 9*d^4 + 8*d^2*(-12 - 25*swC^2 + 40*swC^4) + 
          128*(-6 - 65*swC^2 + 104*swC^4) - 48*d*(-17 - 70*swC^2 + 
            112*swC^4))*t + 2*(176 - 80*d + 7*d^2)*(3 - 20*swC^2 + 32*swC^4)*
         t^2) - 2*(9*d^4*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (2*s^2*(96 + 320*swC^2 - 512*swC^4 + d^2*(93 + 130*swC^2 - 
              208*swC^4) + 3*d^3*(-8 - 5*swC^2 + 8*swC^4) + 
            12*d*(-13 - 30*swC^2 + 48*swC^4)) + s*(-105*d^3 + 9*d^4 + 
            256*(3 - 5*swC^2 + 8*swC^4) - 160*d*(6 - 5*swC^2 + 8*swC^4) + 
            12*d^2*(39 - 10*swC^2 + 16*swC^4))*t + 2*(32 - 20*d + 3*d^2)*
           (3 - 20*swC^2 + 32*swC^4)*t^2))*GaugeXi[A] + 
      (-9*d^4*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(3*d^4 - 2*d^3*(-9 - 5*swC^2 + 8*swC^4) + 
            32*(-3 - 10*swC^2 + 16*swC^4) - 16*d*(-9 - 20*swC^2 + 32*swC^4) + 
            2*d^2*(-39 - 50*swC^2 + 80*swC^4)) - (-4 + d)^2*s*
           (-15*d + 3*d^2 + 8*(3 - 5*swC^2 + 8*swC^4))*t - 
          2*(-4 + d)^2*(3 - 20*swC^2 + 32*swC^4)*t^2))*GaugeXi[A]^2))/
    (cwC^2*(-4 + d)*Pi^(2*d)*(mz^2 - s)*s*swC^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, ((-I/27)*4^(-1 - d)*EL^6*(-9*d^4*(2*Pi)^d*s + 
      2^(1 + d)*Pi^d*(2*s*(-30*d^3 + 3*d^4 + 32*(24 + 5*swC^2 - 8*swC^4) + 
          d^2*(246 + 5*swC^2 - 8*swC^4) + 2*d*(-372 - 35*swC^2 + 56*swC^4)) + 
        (24*d^3 - 3*d^4 + d^2*(-66 + 20*swC^2 - 32*swC^4) - 
          32*(3 - 20*swC^2 + 32*swC^4) + 8*d*(12 - 35*swC^2 + 56*swC^4))*t)))/
    (cwC^2*(-4 + d)*Pi^(2*d)*(mz^2 - s)*swC^2), 
   ((I/27)*2^(-3 - 2*d)*EL^6*(s + t)*(-3*d^3*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(3*s^2*(-72 - 9*d^2 + d^3 + 
          2*d*(24 - 5*swC^2 + 8*swC^4)) + 12*s*(d + 4*swC^2*(-5 + 8*swC^2))*
         t + 8*(3 - 20*swC^2 + 32*swC^4)*t^2)))/(cwC^2*Pi^(2*d)*(mz^2 - s)*
     swC^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 
   ((-I/432)*EL^6*((2^(2 - d)*(-54*d^2 + 3*d^3 - 32*(12 - 5*sw^2 + 8*sw^4) + 
         12*d*(22 - 5*sw^2 + 8*sw^4)))/Pi^d - 
      (2^(4 - d)*(-36*d^2 + 3*d^3 - 8*(21 - 5*sw^2 + 8*sw^4) + 
         2*d*(69 - 10*sw^2 + 16*sw^4))*(s + t))/((-4 + d)*Pi^d*s) - 
      (2^(2 - d)*(s*(-126*d^2 + 9*d^3 - 48*(15 - 5*sw^2 + 8*sw^4) + 
           20*d*(27 - 5*sw^2 + 8*sw^4)) + 2*(-36*d^2 + 3*d^3 - 
           8*(21 - 5*sw^2 + 8*sw^4) + 2*d*(69 - 10*sw^2 + 16*sw^4))*t))/
       (Pi^d*s) + (2^(1 - 2*d)*(2 - d)*(3*d^3*(2*Pi)^d*s^2 + 
         2^(1 + d)*Pi^d*(s^2*(-63*d^2 + 3*d^3 - 8*(48 - 5*sw^2 + 8*sw^4) + 
             d*(282 - 50*sw^2 + 80*sw^4)) + s*(-36*d^2 + 3*d^3 + 
             2*d*(75 - 10*sw^2 + 16*sw^4) + 8*(-21 - 25*sw^2 + 40*sw^4))*t + 
           8*(3 - 20*sw^2 + 32*sw^4)*t^2) + mz^2*(-9*d^3*(2*Pi)^d*s + 
           2^(1 + d)*Pi^d*(s*(63*d^2 + 24*(15 - 5*sw^2 + 8*sw^4) - 10*d*
                (27 - 5*sw^2 + 8*sw^4)) + (36*d^2 - 3*d^3 + 8*(21 - 5*sw^2 + 
                 8*sw^4) - 2*d*(69 - 10*sw^2 + 16*sw^4))*t))))/
       ((-4 + d)*Pi^(2*d)*(mz^2 - s)*s) + 
      (2^(1 - 2*d)*(-2 + d)*(3*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
          (s^2*(63*d^2 - 6*d^3 + d*(-282 + 50*sw^2 - 80*sw^4) + 
             8*(48 - 5*sw^2 + 8*sw^4)) + s*(36*d^2 - 3*d^3 + 
             8*(21 + 25*sw^2 - 40*sw^4) - 2*d*(75 - 10*sw^2 + 16*sw^4))*t - 
           8*(3 - 20*sw^2 + 32*sw^4)*t^2) + mz^2*(9*d^3*(2*Pi)^d*s + 
           2^(1 + d)*Pi^d*(s*(-63*d^2 - 24*(15 - 5*sw^2 + 8*sw^4) + 10*d*
                (27 - 5*sw^2 + 8*sw^4)) + (-36*d^2 + 3*d^3 - 8*(21 - 5*sw^2 + 
                 8*sw^4) + 2*d*(69 - 10*sw^2 + 16*sw^4))*t))))/
       ((-4 + d)*Pi^(2*d)*(mz^2 - s)*s) - (d*(-1 + 4*sw^2)*(-3 + 8*sw^2)*
        (-1 + GaugeXi[A]))/(2*Pi)^d - (d*(3 - 20*sw^2 + 32*sw^4)*
        (-1 + GaugeXi[A]))/(2*Pi)^d + 
      (2^(1 - d)*(3*d - 4*(3 - 5*sw^2 + 8*sw^4))*(s + t)*(-1 + GaugeXi[A]))/
       (Pi^d*s) - (2^(1 - d)*(3*s*(-6 + d + 20*sw^2 - 32*sw^4) - 
         2*(3 - 20*sw^2 + 32*sw^4)*t)*(-1 + GaugeXi[A]))/(Pi^d*s) - 
      ((-2 + d)*(3*s*(-6 + d + 20*sw^2 - 32*sw^4) - 2*(3 - 20*sw^2 + 32*sw^4)*
          t)*(-1 + GaugeXi[A]))/((2*Pi)^d*s) + 
      (((-2 + d)*s - 2*t)*(3*d*s - 4*s*(3 - 5*sw^2 + 8*sw^4) - 
         2*(3 - 20*sw^2 + 32*sw^4)*t)*(-1 + GaugeXi[A]))/((2*Pi)^d*s^2) - 
      (2^(1 - 3*d)*(-2 + d)*(-((2*Pi)^(2*d)*s^2*
           (3*d - 4*(3 - 5*sw^2 + 8*sw^4))*(s + t)) + mz^4*(2*Pi)^(2*d)*
          (-3*d + 4*(3 - 5*sw^2 + 8*sw^4))*(s + t) - 2^(1 + 2*d)*mz^2*
          Pi^(2*d)*(s^2*(3*d^2 + 4*(6 + 5*sw^2 - 8*sw^4) + 
             d*(-15 - 20*sw^2 + 32*sw^4)) + s*(-33*d + 6*d^2 + 
             20*(3 - 5*sw^2 + 8*sw^4))*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2))*
        (-1 + GaugeXi[A]))/(Pi^(3*d)*(mz^2 - s)^2*s) + 
      ((-2 + d)*(s*(-3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (3*s*(-3 + d + 10*sw^2 - 16*sw^4) + (-3 + 20*sw^2 - 32*sw^4)*
              t)) + mz^2*(-3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (s*(9 - 30*sw^2 + 48*sw^4) + (3 - 20*sw^2 + 32*sw^4)*t)))*
        (-1 + GaugeXi[A]))/((2*Pi)^(2*d)*(mz^2 - s)*s)))/
    (mz^2*sw^2*(1 - sw^2)), ((-I/27)*2^(-4 - 3*d)*EL^6*
     ((2^(3 + 2*d)*Pi^(2*d)*(-36*d^2 + 3*d^3 - 8*(21 - 5*sw^2 + 8*sw^4) + 
         2*d*(69 - 10*sw^2 + 16*sw^4))*((-2 + d)*s + 2*t))/((-4 + d)*s) - 
      (2^(2 + d)*Pi^d*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
          (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
           s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
           2*(3 - 20*sw^2 + 32*sw^4)*t^2) + mz^2*(-3*d^3*(2*Pi)^d*s + 
           2^(1 + d)*Pi^d*(s*(27*d^2 + 16*(12 - 5*sw^2 + 8*sw^4) - 6*d*
                (22 - 5*sw^2 + 8*sw^4)) + (36*d^2 - 3*d^3 + 8*(21 - 5*sw^2 + 
                 8*sw^4) - 2*d*(69 - 10*sw^2 + 16*sw^4))*t))))/(mz^2*s) + 
      (2^(2 + d)*(-3 + d)*Pi^d*(3*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
          (s^2*(-63*d^2 + 3*d^3 - 8*(48 - 5*sw^2 + 8*sw^4) + 
             d*(282 - 50*sw^2 + 80*sw^4)) + s*(-36*d^2 + 3*d^3 + 
             2*d*(75 - 10*sw^2 + 16*sw^4) + 8*(-21 - 25*sw^2 + 40*sw^4))*t + 
           8*(3 - 20*sw^2 + 32*sw^4)*t^2) + mz^2*(-9*d^3*(2*Pi)^d*s + 
           2^(1 + d)*Pi^d*(s*(63*d^2 + 24*(15 - 5*sw^2 + 8*sw^4) - 10*d*
                (27 - 5*sw^2 + 8*sw^4)) + (36*d^2 - 3*d^3 + 8*(21 - 5*sw^2 + 
                 8*sw^4) - 2*d*(69 - 10*sw^2 + 16*sw^4))*t))))/
       ((-4 + d)*(mz^2 - s)*s) + (2^(2 + d)*(-3 + d)*Pi^d*
        (-3*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
          (s^2*(-63*d^2 + 6*d^3 - 8*(48 - 5*sw^2 + 8*sw^4) + 
             d*(282 - 50*sw^2 + 80*sw^4)) + s*(-36*d^2 + 3*d^3 + 
             2*d*(75 - 10*sw^2 + 16*sw^4) + 8*(-21 - 25*sw^2 + 40*sw^4))*t + 
           8*(3 - 20*sw^2 + 32*sw^4)*t^2) + mz^2*(-9*d^3*(2*Pi)^d*s + 
           2^(1 + d)*Pi^d*(s*(63*d^2 + 24*(15 - 5*sw^2 + 8*sw^4) - 10*d*
                (27 - 5*sw^2 + 8*sw^4)) + (36*d^2 - 3*d^3 + 8*(21 - 5*sw^2 + 
                 8*sw^4) - 2*d*(69 - 10*sw^2 + 16*sw^4))*t))))/
       ((-4 + d)*(mz^2 - s)*s) + ((2*Pi)^(2*d)*((-4 + d)*mz^2 + d*s)*
        (-1 + 4*sw^2)*(-3 + 8*sw^2)*(-1 + GaugeXi[A]))/mz^2 + 
      ((2*Pi)^(2*d)*((-4 + d)*mz^2 + d*s)*(3 - 20*sw^2 + 32*sw^4)*
        (-1 + GaugeXi[A]))/mz^2 - (2^(1 + 2*d)*Pi^(2*d)*(mz^2 - s)*
        (3*s*(-6 + d + 20*sw^2 - 32*sw^4) - 2*(3 - 20*sw^2 + 32*sw^4)*t)*
        (-1 + GaugeXi[A]))/(mz^2*s) + 
      ((2*Pi)^(2*d)*((-4 + d)*mz^2 + (-2 + d)*s)*
        (3*s*(-6 + d + 20*sw^2 - 32*sw^4) - 2*(3 - 20*sw^2 + 32*sw^4)*t)*
        (-1 + GaugeXi[A]))/(mz^2*s) - 
      ((2*Pi)^(2*d)*(mz^2*((-6 + d)*s - 2*t) + s*((-2 + d)*s - 2*t))*
        (3*d*s - 4*s*(3 - 5*sw^2 + 8*sw^4) - 2*(3 - 20*sw^2 + 32*sw^4)*t)*
        (-1 + GaugeXi[A]))/(mz^2*s^2) + 
      ((2*Pi)^d*((-4 + d)*mz^2 + (-2 + d)*s)*(3*d*mz^2*(2*Pi)^d*s + 
         3*d*(2*Pi)^d*s^2 - 2^(1 + d)*Pi^d*s*
          (3*s*(-3 + d + 10*sw^2 - 16*sw^4) + (-3 + 20*sw^2 - 32*sw^4)*t) - 
         2^(1 + d)*mz^2*Pi^d*(s*(9 - 30*sw^2 + 48*sw^4) + 
           (3 - 20*sw^2 + 32*sw^4)*t))*(-1 + GaugeXi[A]))/
       (mz^2*(mz^2 - s)*s) - (4^(1 + d)*Pi^(2*d)*
        (s*(3*d - 4*(3 - 5*sw^2 + 8*sw^4))*(s + t) + 
         mz^2*(s*(6 - 40*sw^2 + 64*sw^4) + (-6 + 3*d - 20*sw^2 + 32*sw^4)*t))*
        (-1 + GaugeXi[A]))/(mz^2*s) + (2*(-3 + d)*(mz^2 + s)*
        (-((2*Pi)^(2*d)*s^2*(3*d - 4*(3 - 5*sw^2 + 8*sw^4))*(s + t)) + 
         mz^4*(2*Pi)^(2*d)*(-3*d + 4*(3 - 5*sw^2 + 8*sw^4))*(s + t) - 
         2^(1 + 2*d)*mz^2*Pi^(2*d)*(s^2*(3*d^2 + 4*(6 + 5*sw^2 - 8*sw^4) + 
             d*(-15 - 20*sw^2 + 32*sw^4)) + s*(-33*d + 6*d^2 + 
             20*(3 - 5*sw^2 + 8*sw^4))*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2))*
        (-1 + GaugeXi[A]))/(s*(mz^3 - mz*s)^2)))/(Pi^(3*d)*sw^2*(1 - sw^2)), 
   0, 0, ((-I/27)*EL^6*
     ((2^(2 + d)*Pi^d*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
           4*d*(-3 - 5*sw^2 + 8*sw^4)) + 2*s*(-15*d + 3*d^2 + 
           8*(3 - 5*sw^2 + 8*sw^4))*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2))/s - 
      (2^(1 + d)*Pi^d*(3*s*(-6 + d + 20*sw^2 - 32*sw^4) - 
         2*(3 - 20*sw^2 + 32*sw^4)*t)*(-1 + GaugeXi[A])*
        (s - mz^2*GaugeXi[Z]))/s + (2*Pi)^d*(-1 + 4*sw^2)*(-3 + 8*sw^2)*
       (-1 + GaugeXi[A])*(-(d*s) - (-4 + d)*mz^2*GaugeXi[Z]) + 
      (2*Pi)^d*(3 - 20*sw^2 + 32*sw^4)*(-1 + GaugeXi[A])*
       (-(d*s) - (-4 + d)*mz^2*GaugeXi[Z]) - 
      ((2*Pi)^d*(3*s*(-6 + d + 20*sw^2 - 32*sw^4) - 2*(3 - 20*sw^2 + 32*sw^4)*
          t)*(-1 + GaugeXi[A])*((-2 + d)*s + (-4 + d)*mz^2*GaugeXi[Z]))/s + 
      ((2*Pi)^d*(3*d*s - 4*s*(3 - 5*sw^2 + 8*sw^4) - 
         2*(3 - 20*sw^2 + 32*sw^4)*t)*(-1 + GaugeXi[A])*
        (s*((-2 + d)*s - 2*t) + mz^2*((-6 + d)*s - 2*t)*GaugeXi[Z]))/s^2 + 
      (2^(2 + d)*Pi^d*(-1 + GaugeXi[A])*(s*(3*d - 4*(3 - 5*sw^2 + 8*sw^4))*
          (s + t) + mz^2*(s*(6 - 40*sw^2 + 64*sw^4) + 
           (-6 + 3*d - 20*sw^2 + 32*sw^4)*t)*GaugeXi[Z]))/s - 
      ((-1 + GaugeXi[A])*((-2 + d)*s + (-4 + d)*mz^2*GaugeXi[Z])*
        (s*(-3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(3*s*(-3 + d + 10*sw^2 - 16*
                sw^4) + (-3 + 20*sw^2 - 32*sw^4)*t)) + 
         mz^2*(-3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(9 - 30*sw^2 + 48*sw^4) + 
             (3 - 20*sw^2 + 32*sw^4)*t))*GaugeXi[Z]))/
       (s*(s - mz^2*GaugeXi[Z])) - (2*(-3 + d)*(-1 + GaugeXi[A])*
        (s + mz^2*GaugeXi[Z])*(s^2*(-3*d*(2*Pi)^d*(s - 3*t) + 
           2^(2 + d)*Pi^d*(s*(3 - 5*sw^2 + 8*sw^4) + (3 - 3*d - 5*sw^2 + 8*
                sw^4)*t)) + 2^(1 + d)*mz^2*Pi^d*s*
          (3*d - 4*(3 - 5*sw^2 + 8*sw^4))*(s + t)*GaugeXi[Z] + 
         mz^4*(-3*d*(2*Pi)^d + 2^(2 + d)*Pi^d*(3 - 5*sw^2 + 8*sw^4))*(s + t)*
          GaugeXi[Z]^2))/(s*(s - mz^2*GaugeXi[Z])^2)))/
    (2^(2*(2 + d))*mz^2*Pi^(2*d)*sw^2*(1 - sw^2)), 
   ((-I/27)*4^(-2 - d)*EL^6*(-1 + GaugeXi[A])*(-9*d^2*(2*Pi)^d*s^4 + 
      2^(1 + d)*Pi^d*s^2*(s^2*(-6 + 3*d^2 - 20*sw^2 + 32*sw^4 + 
          d*(6 + 10*sw^2 - 16*sw^4)) + s*(15*d - 3*d^2 - 
          8*(3 - 5*sw^2 + 8*sw^4))*t - 2*(3 - 20*sw^2 + 32*sw^4)*t^2) + 
      2*mz^2*s*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
          s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[Z] - 
      mz^4*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
          s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[Z]^2))/
    (mz^2*Pi^(2*d)*s^2*sw^2*(1 - sw^2)*(s - mz^2*GaugeXi[Z])^2), 0, 0, 0, 0, 
   0, 0, 0, 0, ((I/27)*2^(-2 - d)*EL^6*
     (s*(-450*d^2 + 45*d^3 + d*(1488 + 60*sw^2 - 96*sw^4) + 
        32*(-51 - 5*sw^2 + 8*sw^4)) + mz^2*(-63*d^3 + 3*d^4 + 
        96*(12 - 5*sw^2 + 8*sw^4) + 6*d^2*(71 - 10*sw^2 + 16*sw^4) - 
        4*d*(294 - 85*sw^2 + 136*sw^4)) + 
      2*(-36*d^3 + 3*d^4 + 2*d^2*(87 - 10*sw^2 + 16*sw^4) + 
        16*(24 - 25*sw^2 + 40*sw^4) - 8*d*(51 - 25*sw^2 + 40*sw^4))*t))/
    ((-4 + d)*Pi^d*s*sw^2*(-1 + sw^2)), 0, 
   ((I/27)*2^(-3 - d)*EL^6*(s + t)*
     (s*(66*d^2 - 3*d^3 + 32*(15 + 5*sw^2 - 8*sw^4) + 
        4*d*(-84 - 5*sw^2 + 8*sw^4)) + mz^2*(-288 - 90*d^2 + 9*d^3 + 
        4*d*(72 - 5*sw^2 + 8*sw^4)) + 
      8*(-18*d + 3*d^2 + 4*(6 + 5*sw^2 - 8*sw^4))*t))/
    (Pi^d*s*sw^2*(-1 + sw^2)), ((I/27)*2^(-3 - 2*d)*EL^6*(s + t)*
     (-3*d^3*(2*Pi)^d*s^2 + mz^4*(3*d^3*(2*Pi)^d + 2^(1 + d)*Pi^d*
         (-27*d^2 - 16*(12 - 5*sw^2 + 8*sw^4) + 
          6*d*(22 - 5*sw^2 + 8*sw^4))) - 2^(1 + d)*mz^2*Pi^d*
       (s*(-432 - 60*d^2 + 3*d^3 + 4*d*(75 - 5*sw^2 + 8*sw^4)) - 
        4*(-18*d + 3*d^2 + 4*(6 + 5*sw^2 - 8*sw^4))*t) + 
      2^(1 + d)*Pi^d*(3*s^2*(-72 - 9*d^2 + d^3 + 
          2*d*(24 - 5*sw^2 + 8*sw^4)) + 12*s*(d + 4*sw^2*(-5 + 8*sw^2))*t + 
        8*(3 - 20*sw^2 + 32*sw^4)*t^2)))/(Pi^(2*d)*s*sw^2*(-1 + sw^2)), 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, ((I/27)*2^(-7 - 2*d)*EL^6*
     ((4*s*(9*d^3*(2*Pi)^d + 2^(1 + d)*Pi^d*
          (3*d^3*(4*sw^4 + swC^2*(-5 + 4*swC^2) + sw^2*(-5 + 8*swC^2)) - 
           27*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) - 
           32*(sw^2*(-60 + 109*swC^2 - 20*swC^4) + 6*(3 - 10*swC^2 + 8*
                swC^4) + 4*sw^4*(12 - 5*swC^2 + 8*swC^4)) + 
           12*d*(sw^2*(-110 + 189*swC^2 - 20*swC^4) + 
             11*(3 - 10*swC^2 + 8*swC^4) + 4*sw^4*(22 - 5*swC^2 + 8*
                swC^4)))))/(mz^2 - s) - 
      (2^(4 + d)*Pi^d*(-36*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
           2*sw^2*(-5 + 8*swC^2)) + 3*d^3*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
           2*sw^2*(-5 + 8*swC^2)) - 8*(sw^2*(-210 + 362*swC^2 - 40*swC^4) + 
           21*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(21 - 5*swC^2 + 8*swC^4)) + 
         2*d*(69*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(69 - 10*swC^2 + 
             16*swC^4) - 2*sw^2*(345 - 578*swC^2 + 40*swC^4)))*(s + t))/
       ((-4 + d)*(mz^2 - s)) - 
      (4*(27*d^3*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
          (s*(9*d^3*(4*sw^4 + swC^2*(-5 + 4*swC^2) + sw^2*(-5 + 8*swC^2)) - 
             63*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*
                (-5 + 8*swC^2)) + 10*d*(sw^2*(-270 + 458*swC^2 - 40*swC^4) + 
               27*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(27 - 5*swC^2 + 
                 8*swC^4)) - 24*(15*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*
                (15 - 5*swC^2 + 8*swC^4) - 2*sw^2*(75 - 133*swC^2 + 
                 20*swC^4))) + (-36*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*
                sw^2*(-5 + 8*swC^2)) + 3*d^3*(3 + 8*sw^4 - 10*swC^2 + 8*
                swC^4 + 2*sw^2*(-5 + 8*swC^2)) - 8*(sw^2*(-210 + 362*swC^2 - 
                 40*swC^4) + 21*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*
                (21 - 5*swC^2 + 8*swC^4)) + 2*d*(69*(3 - 10*swC^2 + 
                 8*swC^4) + 8*sw^4*(69 - 10*swC^2 + 16*swC^4) - 2*sw^2*
                (345 - 578*swC^2 + 40*swC^4)))*t)))/(mz^2 - s) + 
      (2*(2 - d)*(9*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
          (s^2*(9*d^3*(1 + 4*sw^4 - 5*swC^2 + 4*swC^4 + sw^2*
                (-5 + 8*swC^2)) - 63*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*
                sw^2*(-5 + 8*swC^2)) - 16*(sw^2*(-240 + 397*swC^2 - 
                 20*swC^4) + 24*(3 - 10*swC^2 + 8*swC^4) + 4*sw^4*
                (48 - 5*swC^2 + 8*swC^4)) + d*(282*(3 - 10*swC^2 + 8*swC^4) + 
               16*sw^4*(141 - 25*swC^2 + 40*swC^4) - 4*sw^2*(705 - 
                 1193*swC^2 + 100*swC^4))) + 
           s*(-36*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*
                (-5 + 8*swC^2)) + 3*d^3*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*
                sw^2*(-5 + 8*swC^2)) + 2*d*(75*(3 - 10*swC^2 + 8*swC^4) + 8*
                sw^4*(75 - 10*swC^2 + 16*swC^4) - 2*sw^2*(375 - 626*swC^2 + 
                 40*swC^4)) + 8*(sw^2*(210 - 206*swC^2 - 200*swC^4) - 21*
                (3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(-21 - 25*swC^2 + 
                 40*swC^4)))*t + 8*(9 - 30*swC^2 + 24*swC^4 + 
             8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 80*
                swC^4))*t^2) + mz^2*(-27*d^3*(2*Pi)^d*s + 
           2^(1 + d)*Pi^d*(s*(-9*d^3*(4*sw^4 + swC^2*(-5 + 4*swC^2) + 
                 sw^2*(-5 + 8*swC^2)) + 63*d^2*(3 + 8*sw^4 - 10*swC^2 + 
                 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) - 10*d*
                (sw^2*(-270 + 458*swC^2 - 40*swC^4) + 27*(3 - 10*swC^2 + 
                   8*swC^4) + 8*sw^4*(27 - 5*swC^2 + 8*swC^4)) + 24*
                (15*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(15 - 5*swC^2 + 
                   8*swC^4) - 2*sw^2*(75 - 133*swC^2 + 20*swC^4))) + 
             (36*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 
                   8*swC^2)) - 3*d^3*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
                 2*sw^2*(-5 + 8*swC^2)) + 8*(sw^2*(-210 + 362*swC^2 - 
                   40*swC^4) + 21*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*
                  (21 - 5*swC^2 + 8*swC^4)) - 2*d*(69*(3 - 10*swC^2 + 
                   8*swC^4) + 8*sw^4*(69 - 10*swC^2 + 16*swC^4) - 
                 2*sw^2*(345 - 578*swC^2 + 40*swC^4)))*t))))/
       ((-4 + d)*(mz^2 - s)^2) - (2*(2 - d)*(-27*d^3*(2*Pi)^d*s^2 + 
         2^(1 + d)*Pi^d*(s^2*(-9*d^3*(4*sw^4 + swC^2*(-5 + 4*swC^2) + sw^2*
                (-5 + 8*swC^2)) + 63*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*
                sw^2*(-5 + 8*swC^2)) + 16*(sw^2*(-240 + 397*swC^2 - 
                 20*swC^4) + 24*(3 - 10*swC^2 + 8*swC^4) + 4*sw^4*
                (48 - 5*swC^2 + 8*swC^4)) + d*(-282*(3 - 10*swC^2 + 
                 8*swC^4) - 16*sw^4*(141 - 25*swC^2 + 40*swC^4) + 4*sw^2*
                (705 - 1193*swC^2 + 100*swC^4))) + 
           s*(36*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*
                (-5 + 8*swC^2)) - 3*d^3*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*
                sw^2*(-5 + 8*swC^2)) - 2*d*(75*(3 - 10*swC^2 + 8*swC^4) + 8*
                sw^4*(75 - 10*swC^2 + 16*swC^4) - 2*sw^2*(375 - 626*swC^2 + 
                 40*swC^4)) - 8*(sw^2*(210 - 206*swC^2 - 200*swC^4) - 21*
                (3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(-21 - 25*swC^2 + 
                 40*swC^4)))*t - 8*(9 - 30*swC^2 + 24*swC^4 + 
             8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 80*
                swC^4))*t^2) + mz^2*(-9*d^3*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (s*(9*d^3*(2 + 4*sw^4 - 5*swC^2 + 4*swC^4 + sw^2*(-5 + 
                   8*swC^2)) - 63*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
                 2*sw^2*(-5 + 8*swC^2)) + 10*d*(sw^2*(-270 + 458*swC^2 - 
                   40*swC^4) + 27*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*
                  (27 - 5*swC^2 + 8*swC^4)) - 24*(15*(3 - 10*swC^2 + 
                   8*swC^4) + 8*sw^4*(15 - 5*swC^2 + 8*swC^4) - 
                 2*sw^2*(75 - 133*swC^2 + 20*swC^4))) + 
             (-36*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*
                  (-5 + 8*swC^2)) + 3*d^3*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
                 2*sw^2*(-5 + 8*swC^2)) - 8*(sw^2*(-210 + 362*swC^2 - 
                   40*swC^4) + 21*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*
                  (21 - 5*swC^2 + 8*swC^4)) + 2*d*(69*(3 - 10*swC^2 + 
                   8*swC^4) + 8*sw^4*(69 - 10*swC^2 + 16*swC^4) - 
                 2*sw^2*(345 - 578*swC^2 + 40*swC^4)))*t))))/
       ((-4 + d)*(mz^2 - s)^2) - (d*(2*Pi)^d*s*(9 - 30*swC^2 + 24*swC^4 + 
         8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
           80*swC^4))*(-1 + GaugeXi[A]))/(mz^2 - s) - 
      (d*s*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*(3*swC^2*(-5 + 4*swC^2) + 
           sw^2*(-15 + 76*swC^2 - 80*swC^4) + 4*sw^4*(3 - 20*swC^2 + 
             32*swC^4)))*(-1 + GaugeXi[A]))/(mz^2 - s) + 
      (2^(1 + d)*Pi^d*(3*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
           2*sw^2*(-5 + 8*swC^2)) - 4*(9 - 30*swC^2 + 24*swC^4 + 
           sw^2*(-30 + 74*swC^2 - 40*swC^4) + 8*sw^4*(3 - 5*swC^2 + 
             8*swC^4)))*(s + t)*(-1 + GaugeXi[A]))/(mz^2 - s) + 
      ((2*Pi)^d*((-2 + d)*s - 2*t)*
        (s*(3*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) - 
           4*(9 - 30*swC^2 + 24*swC^4 + sw^2*(-30 + 74*swC^2 - 40*swC^4) + 
             8*sw^4*(3 - 5*swC^2 + 8*swC^4))) - 2*(9 - 30*swC^2 + 24*swC^4 + 
           8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
             80*swC^4))*t)*(-1 + GaugeXi[A]))/((mz^2 - s)*s) + 
      ((-2 + d)*(2*Pi)^d*(3*s*(d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
             2*sw^2*(-5 + 8*swC^2)) - 2*(9 - 30*swC^2 + 24*swC^4 - 
             10*sw^2*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(3 - 10*swC^2 + 16*
                swC^4))) - 2*(9 - 30*swC^2 + 24*swC^4 + 
           8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
             80*swC^4))*t)*(-1 + GaugeXi[A]))/(-mz^2 + s) + 
      ((2*Pi)^d*(-3*d*s*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
           2*sw^2*(-5 + 8*swC^2)) + 6*s*(9 - 30*swC^2 + 24*swC^4 - 
           10*sw^2*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(3 - 10*swC^2 + 
             16*swC^4)) + 2*(9 - 30*swC^2 + 24*swC^4 + 
           8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
             80*swC^4))*t)*(-1 + GaugeXi[A]))/(mz^2 - s) + 
      ((9*d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(3*s*(-9 + 30*swC^2 - 24*swC^4 + 
             10*sw^2*(3 - 10*swC^2 + 8*swC^4) - 8*sw^4*(3 - 10*swC^2 + 16*
                swC^4) + d*(3 + 4*sw^4 - 5*swC^2 + 4*swC^4 + sw^2*
                (-5 + 8*swC^2))) + (-9 + 30*swC^2 - 24*swC^4 - 
             8*sw^4*(3 - 20*swC^2 + 32*swC^4) + 2*sw^2*(15 - 76*swC^2 + 80*
                swC^4))*t))*(-1 + GaugeXi[A]))/(mz^2 - s) - 
      ((-2 + d)*(s*(-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (-3*s*(-9 - 5*(-6 + d)*swC^2 + 4*(-6 + d)*swC^4 + 4*sw^4*
                (-6 + d + 20*swC^2 - 32*swC^4) + sw^2*(30 - 5*d - 100*swC^2 + 
                 8*d*swC^2 + 80*swC^4)) + (9 - 30*swC^2 + 24*swC^4 + 8*sw^4*
                (3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
                 80*swC^4))*t)) + mz^2*(-9*d*(2*Pi)^d*s + 
           2^(1 + d)*Pi^d*(3*s*(-9 + 30*swC^2 - 24*swC^4 + 10*sw^2*
                (3 - 10*swC^2 + 8*swC^4) - 8*sw^4*(3 - 10*swC^2 + 16*swC^4) + 
               d*(3 + 4*sw^4 - 5*swC^2 + 4*swC^4 + sw^2*(-5 + 8*swC^2))) + 
             (-9 + 30*swC^2 - 24*swC^4 - 8*sw^4*(3 - 20*swC^2 + 32*swC^4) + 2*
                sw^2*(15 - 76*swC^2 + 80*swC^4))*t)))*(-1 + GaugeXi[A]))/
       (mz^2 - s)^2 + (2*(-2 + d)*(s^2*(-9*d*(2*Pi)^d + 2^(1 + d)*Pi^d*
            (3*d*(3 + 4*sw^4 - 5*swC^2 + 4*swC^4 + sw^2*(-5 + 8*swC^2)) - 
             2*(9 - 30*swC^2 + 24*swC^4 + sw^2*(-30 + 74*swC^2 - 40*swC^4) + 
               8*sw^4*(3 - 5*swC^2 + 8*swC^4))))*(s + t) + 
         mz^4*(-9*d*(2*Pi)^d*(s - t) + 2^(1 + d)*Pi^d*
            (3*d*s*(3 + 4*sw^4 - 5*swC^2 + 4*swC^4 + sw^2*(-5 + 8*swC^2)) - 
             2*s*(9 - 30*swC^2 + 24*swC^4 + sw^2*(-30 + 74*swC^2 - 
                 40*swC^4) + 8*sw^4*(3 - 5*swC^2 + 8*swC^4)) + 
             3*(-6 - 5*(-4 + d)*swC^2 + 4*(-4 + d)*swC^4)*t + 
             sw^2*(60 - 148*swC^2 + 80*swC^4 + 3*d*(-5 + 8*swC^2))*t + 
             4*sw^4*(3*d - 4*(3 - 5*swC^2 + 8*swC^4))*t)) + 
         2*mz^2*(9*d*(2*Pi)^d*s*((-5 + d)*s - 11*t) + 2^(1 + d)*Pi^d*
            (s^2*(3*(12 - 5*(8 - 5*d + d^2)*swC^2 + 4*(8 - 5*d + d^2)*
                  swC^4) + sw^2*(3*d^2*(-5 + 8*swC^2) + d*(75 - 68*swC^2 - 
                   80*swC^4) + 20*(-6 + 7*swC^2 + 4*swC^4)) + 4*sw^4*
                (3*d^2 + 4*(6 + 5*swC^2 - 8*swC^4) + d*(-15 - 20*swC^2 + 
                   32*swC^4))) + s*(-33*d*(4*sw^4 + swC^2*(-5 + 4*swC^2) + 
                 sw^2*(-5 + 8*swC^2)) + 3*d^2*(3 + 8*sw^4 - 10*swC^2 + 
                 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 10*(9 - 30*swC^2 + 
                 24*swC^4 + sw^2*(-30 + 74*swC^2 - 40*swC^4) + 8*sw^4*
                  (3 - 5*swC^2 + 8*swC^4)))*t + 2*(9 - 30*swC^2 + 24*swC^4 + 
               8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
                 80*swC^4))*t^2)))*(-1 + GaugeXi[A]))/(mz^2 - s)^3))/
    (cwC^2*mz^2*Pi^(2*d)*sw^2*(1 - sw^2)*swC^2), 
   ((I/27)*2^(-7 - 2*d)*EL^6*
     ((2^(3 + d)*Pi^d*(-36*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
           2*sw^2*(-5 + 8*swC^2)) + 3*d^3*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
           2*sw^2*(-5 + 8*swC^2)) - 8*(sw^2*(-210 + 362*swC^2 - 40*swC^4) + 
           21*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(21 - 5*swC^2 + 8*swC^4)) + 
         2*d*(69*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(69 - 10*swC^2 + 
             16*swC^4) - 2*sw^2*(345 - 578*swC^2 + 40*swC^4)))*
        ((-2 + d)*s + 2*t))/((-4 + d)*(mz^2 - s)) + 
      (4*(-3 + d)*(9*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
          (s^2*(9*d^3*(1 + 4*sw^4 - 5*swC^2 + 4*swC^4 + sw^2*
                (-5 + 8*swC^2)) - 63*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*
                sw^2*(-5 + 8*swC^2)) - 16*(sw^2*(-240 + 397*swC^2 - 
                 20*swC^4) + 24*(3 - 10*swC^2 + 8*swC^4) + 4*sw^4*
                (48 - 5*swC^2 + 8*swC^4)) + d*(282*(3 - 10*swC^2 + 8*swC^4) + 
               16*sw^4*(141 - 25*swC^2 + 40*swC^4) - 4*sw^2*(705 - 
                 1193*swC^2 + 100*swC^4))) + 
           s*(-36*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*
                (-5 + 8*swC^2)) + 3*d^3*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*
                sw^2*(-5 + 8*swC^2)) + 2*d*(75*(3 - 10*swC^2 + 8*swC^4) + 8*
                sw^4*(75 - 10*swC^2 + 16*swC^4) - 2*sw^2*(375 - 626*swC^2 + 
                 40*swC^4)) + 8*(sw^2*(210 - 206*swC^2 - 200*swC^4) - 21*
                (3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(-21 - 25*swC^2 + 
                 40*swC^4)))*t + 8*(9 - 30*swC^2 + 24*swC^4 + 
             8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 80*
                swC^4))*t^2) + mz^2*(-27*d^3*(2*Pi)^d*s + 
           2^(1 + d)*Pi^d*(s*(-9*d^3*(4*sw^4 + swC^2*(-5 + 4*swC^2) + 
                 sw^2*(-5 + 8*swC^2)) + 63*d^2*(3 + 8*sw^4 - 10*swC^2 + 
                 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) - 10*d*
                (sw^2*(-270 + 458*swC^2 - 40*swC^4) + 27*(3 - 10*swC^2 + 
                   8*swC^4) + 8*sw^4*(27 - 5*swC^2 + 8*swC^4)) + 24*
                (15*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(15 - 5*swC^2 + 
                   8*swC^4) - 2*sw^2*(75 - 133*swC^2 + 20*swC^4))) + 
             (36*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 
                   8*swC^2)) - 3*d^3*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
                 2*sw^2*(-5 + 8*swC^2)) + 8*(sw^2*(-210 + 362*swC^2 - 
                   40*swC^4) + 21*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*
                  (21 - 5*swC^2 + 8*swC^4)) - 2*d*(69*(3 - 10*swC^2 + 
                   8*swC^4) + 8*sw^4*(69 - 10*swC^2 + 16*swC^4) - 
                 2*sw^2*(345 - 578*swC^2 + 40*swC^4)))*t))))/
       ((-4 + d)*(mz^2 - s)^2) + 
      (4*(-9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
          (s^2*(-3*d^2*(4*sw^4 + swC^2*(-5 + 4*swC^2) + sw^2*
                (-5 + 8*swC^2)) + 2*(-9 + 30*swC^2 - 24*swC^4 + sw^2*
                (30 + 4*swC^2 - 80*swC^4) + 8*sw^4*(-3 - 10*swC^2 + 
                 16*swC^4)) + d*(6*(3 - 10*swC^2 + 8*swC^4) - 16*sw^4*
                (-3 - 5*swC^2 + 8*swC^4) + sw^2*(-60 + 44*swC^2 + 
                 80*swC^4))) + s*(15*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*
                sw^2*(-5 + 8*swC^2)) - 3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*
                swC^4 + 2*sw^2*(-5 + 8*swC^2)) - 8*(9 - 30*swC^2 + 24*swC^4 + 
               sw^2*(-30 + 74*swC^2 - 40*swC^4) + 8*sw^4*(3 - 5*swC^2 + 
                 8*swC^4)))*t - 2*(9 - 30*swC^2 + 24*swC^4 + 
             8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 80*
                swC^4))*t^2) + mz^2*(9*d^3*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (s*(3*d^3*(4*sw^4 + swC^2*(-5 + 4*swC^2) + sw^2*(-5 + 8*swC^2)) - 
               27*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*
                  (-5 + 8*swC^2)) - 32*(sw^2*(-60 + 109*swC^2 - 20*swC^4) + 
                 6*(3 - 10*swC^2 + 8*swC^4) + 4*sw^4*(12 - 5*swC^2 + 
                   8*swC^4)) + 12*d*(sw^2*(-110 + 189*swC^2 - 20*swC^4) + 
                 11*(3 - 10*swC^2 + 8*swC^4) + 4*sw^4*(22 - 5*swC^2 + 
                   8*swC^4))) + (-36*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
                 2*sw^2*(-5 + 8*swC^2)) + 3*d^3*(3 + 8*sw^4 - 10*swC^2 + 
                 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) - 8*(sw^2*(-210 + 
                   362*swC^2 - 40*swC^4) + 21*(3 - 10*swC^2 + 8*swC^4) + 
                 8*sw^4*(21 - 5*swC^2 + 8*swC^4)) + 2*d*(69*(3 - 10*swC^2 + 
                   8*swC^4) + 8*sw^4*(69 - 10*swC^2 + 16*swC^4) - 
                 2*sw^2*(345 - 578*swC^2 + 40*swC^4)))*t))))/
       (mz^2*(mz^2 - s)) - (4*(-3 + d)*(-27*d^3*(2*Pi)^d*s^2 + 
         2^(1 + d)*Pi^d*(s^2*(-9*d^3*(4*sw^4 + swC^2*(-5 + 4*swC^2) + sw^2*
                (-5 + 8*swC^2)) + 63*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*
                sw^2*(-5 + 8*swC^2)) + 16*(sw^2*(-240 + 397*swC^2 - 
                 20*swC^4) + 24*(3 - 10*swC^2 + 8*swC^4) + 4*sw^4*
                (48 - 5*swC^2 + 8*swC^4)) + d*(-282*(3 - 10*swC^2 + 
                 8*swC^4) - 16*sw^4*(141 - 25*swC^2 + 40*swC^4) + 4*sw^2*
                (705 - 1193*swC^2 + 100*swC^4))) + 
           s*(36*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*
                (-5 + 8*swC^2)) - 3*d^3*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*
                sw^2*(-5 + 8*swC^2)) - 2*d*(75*(3 - 10*swC^2 + 8*swC^4) + 8*
                sw^4*(75 - 10*swC^2 + 16*swC^4) - 2*sw^2*(375 - 626*swC^2 + 
                 40*swC^4)) - 8*(sw^2*(210 - 206*swC^2 - 200*swC^4) - 21*
                (3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(-21 - 25*swC^2 + 
                 40*swC^4)))*t - 8*(9 - 30*swC^2 + 24*swC^4 + 
             8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 80*
                swC^4))*t^2) + mz^2*(-9*d^3*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (s*(9*d^3*(2 + 4*sw^4 - 5*swC^2 + 4*swC^4 + sw^2*(-5 + 
                   8*swC^2)) - 63*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
                 2*sw^2*(-5 + 8*swC^2)) + 10*d*(sw^2*(-270 + 458*swC^2 - 
                   40*swC^4) + 27*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*
                  (27 - 5*swC^2 + 8*swC^4)) - 24*(15*(3 - 10*swC^2 + 
                   8*swC^4) + 8*sw^4*(15 - 5*swC^2 + 8*swC^4) - 
                 2*sw^2*(75 - 133*swC^2 + 20*swC^4))) + 
             (-36*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*
                  (-5 + 8*swC^2)) + 3*d^3*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
                 2*sw^2*(-5 + 8*swC^2)) - 8*(sw^2*(-210 + 362*swC^2 - 
                   40*swC^4) + 21*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*
                  (21 - 5*swC^2 + 8*swC^4)) + 2*d*(69*(3 - 10*swC^2 + 
                   8*swC^4) + 8*sw^4*(69 - 10*swC^2 + 16*swC^4) - 
                 2*sw^2*(345 - 578*swC^2 + 40*swC^4)))*t))))/
       ((-4 + d)*(mz^2 - s)^2) + ((2*Pi)^d*s*((-4 + d)*mz^2 + d*s)*
        (9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 
         2*sw^2*(15 - 76*swC^2 + 80*swC^4))*(-1 + GaugeXi[A]))/
       (mz^4 - mz^2*s) + (s*((-4 + d)*mz^2 + d*s)*(9*(2*Pi)^d + 
         2^(1 + d)*Pi^d*(3*swC^2*(-5 + 4*swC^2) + sw^2*(-15 + 76*swC^2 - 
             80*swC^4) + 4*sw^4*(3 - 20*swC^2 + 32*swC^4)))*
        (-1 + GaugeXi[A]))/(mz^4 - mz^2*s) + 
      ((2*Pi)^d*((-4 + d)*mz^2 + (-2 + d)*s)*
        (3*s*(d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) - 
           2*(9 - 30*swC^2 + 24*swC^4 - 10*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
             8*sw^4*(3 - 10*swC^2 + 16*swC^4))) - 
         2*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 
           2*sw^2*(15 - 76*swC^2 + 80*swC^4))*t)*(-1 + GaugeXi[A]))/
       (mz^4 - mz^2*s) + ((2*Pi)^d*(-3*d*s*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
           2*sw^2*(-5 + 8*swC^2)) + 6*s*(9 - 30*swC^2 + 24*swC^4 - 
           10*sw^2*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(3 - 10*swC^2 + 
             16*swC^4)) + 2*(9 - 30*swC^2 + 24*swC^4 + 
           8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
             80*swC^4))*t)*(-1 + GaugeXi[A]))/mz^2 + 
      ((2*Pi)^d*(s*(3*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
             2*sw^2*(-5 + 8*swC^2)) - 4*(9 - 30*swC^2 + 24*swC^4 + 
             sw^2*(-30 + 74*swC^2 - 40*swC^4) + 8*sw^4*(3 - 5*swC^2 + 8*
                swC^4))) - 2*(9 - 30*swC^2 + 24*swC^4 + 
           8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
             80*swC^4))*t)*(mz^2*(-((-6 + d)*s) + 2*t) + 
         s*(-((-2 + d)*s) + 2*t))*(-1 + GaugeXi[A]))/(mz^2*(mz^2 - s)*s) + 
      (4*(mz^2*(9*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(-3*d*(3 + 4*sw^4 - 5*swC^2 + 4*
                swC^4 + sw^2*(-5 + 8*swC^2)) + 2*(9 - 30*swC^2 + 24*swC^4 + 
               sw^2*(-30 + 74*swC^2 - 40*swC^4) + 8*sw^4*(3 - 5*swC^2 + 
                 8*swC^4))))*(s + t) - 2^(1 + d)*Pi^d*(9 - 30*swC^2 + 
           24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 
           2*sw^2*(15 - 76*swC^2 + 80*swC^4))*(s + t)^2 + 
         mz^2*(2*Pi)^d*(3*s*(d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*
                (-5 + 8*swC^2)) - 2*(9 - 30*swC^2 + 24*swC^4 - 10*sw^2*
                (3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(3 - 10*swC^2 + 
                 16*swC^4))) - 2*(9 - 30*swC^2 + 24*swC^4 + 
             8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 80*
                swC^4))*t) - (2*Pi)^d*s*
          (3*s*(d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) - 
             2*(9 - 30*swC^2 + 24*swC^4 - 10*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
               8*sw^4*(3 - 10*swC^2 + 16*swC^4))) - 
           2*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 
             2*sw^2*(15 - 76*swC^2 + 80*swC^4))*t) - 
         (2*Pi)^d*t*(3*s*(d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*
                (-5 + 8*swC^2)) - 2*(9 - 30*swC^2 + 24*swC^4 - 10*sw^2*
                (3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(3 - 10*swC^2 + 
                 16*swC^4))) - 2*(9 - 30*swC^2 + 24*swC^4 + 
             8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 80*
                swC^4))*t))*(-1 + GaugeXi[A]))/(mz^2*(mz^2 - s)) + 
      ((9*d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(3*s*(-9 + 30*swC^2 - 24*swC^4 + 
             10*sw^2*(3 - 10*swC^2 + 8*swC^4) - 8*sw^4*(3 - 10*swC^2 + 16*
                swC^4) + d*(3 + 4*sw^4 - 5*swC^2 + 4*swC^4 + sw^2*
                (-5 + 8*swC^2))) + (-9 + 30*swC^2 - 24*swC^4 - 
             8*sw^4*(3 - 20*swC^2 + 32*swC^4) + 2*sw^2*(15 - 76*swC^2 + 80*
                swC^4))*t))*(-1 + GaugeXi[A]))/mz^2 - 
      ((-((-4 + d)*mz^2) - (-2 + d)*s)*
        (s*(-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(-3*s*(-9 - 5*(-6 + d)*swC^2 + 4*
                (-6 + d)*swC^4 + 4*sw^4*(-6 + d + 20*swC^2 - 32*swC^4) + sw^2*
                (30 - 5*d - 100*swC^2 + 8*d*swC^2 + 80*swC^4)) + 
             (9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*
                sw^2*(15 - 76*swC^2 + 80*swC^4))*t)) + 
         mz^2*(-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (3*s*(-9 + 30*swC^2 - 24*swC^4 + 10*sw^2*(3 - 10*swC^2 + 
                 8*swC^4) - 8*sw^4*(3 - 10*swC^2 + 16*swC^4) + d*
                (3 + 4*sw^4 - 5*swC^2 + 4*swC^4 + sw^2*(-5 + 8*swC^2))) + 
             (-9 + 30*swC^2 - 24*swC^4 - 8*sw^4*(3 - 20*swC^2 + 32*swC^4) + 2*
                sw^2*(15 - 76*swC^2 + 80*swC^4))*t)))*(-1 + GaugeXi[A]))/
       (mz^3 - mz*s)^2 - (2*(-3 + d)*(mz^2 + s)*
        (s^2*(-9*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(3*d*(3 + 4*sw^4 - 5*swC^2 + 4*
                swC^4 + sw^2*(-5 + 8*swC^2)) - 2*(9 - 30*swC^2 + 24*swC^4 + 
               sw^2*(-30 + 74*swC^2 - 40*swC^4) + 8*sw^4*(3 - 5*swC^2 + 
                 8*swC^4))))*(s + t) + mz^4*(-9*d*(2*Pi)^d*(s - t) + 
           2^(1 + d)*Pi^d*(3*d*s*(3 + 4*sw^4 - 5*swC^2 + 4*swC^4 + sw^2*
                (-5 + 8*swC^2)) - 2*s*(9 - 30*swC^2 + 24*swC^4 + sw^2*
                (-30 + 74*swC^2 - 40*swC^4) + 8*sw^4*(3 - 5*swC^2 + 
                 8*swC^4)) + 3*(-6 - 5*(-4 + d)*swC^2 + 4*(-4 + d)*swC^4)*t + 
             sw^2*(60 - 148*swC^2 + 80*swC^4 + 3*d*(-5 + 8*swC^2))*t + 
             4*sw^4*(3*d - 4*(3 - 5*swC^2 + 8*swC^4))*t)) + 
         2*mz^2*(9*d*(2*Pi)^d*s*((-5 + d)*s - 11*t) + 2^(1 + d)*Pi^d*
            (s^2*(3*(12 - 5*(8 - 5*d + d^2)*swC^2 + 4*(8 - 5*d + d^2)*
                  swC^4) + sw^2*(3*d^2*(-5 + 8*swC^2) + d*(75 - 68*swC^2 - 
                   80*swC^4) + 20*(-6 + 7*swC^2 + 4*swC^4)) + 4*sw^4*
                (3*d^2 + 4*(6 + 5*swC^2 - 8*swC^4) + d*(-15 - 20*swC^2 + 
                   32*swC^4))) + s*(-33*d*(4*sw^4 + swC^2*(-5 + 4*swC^2) + 
                 sw^2*(-5 + 8*swC^2)) + 3*d^2*(3 + 8*sw^4 - 10*swC^2 + 
                 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 10*(9 - 30*swC^2 + 
                 24*swC^4 + sw^2*(-30 + 74*swC^2 - 40*swC^4) + 8*sw^4*
                  (3 - 5*swC^2 + 8*swC^4)))*t + 2*(9 - 30*swC^2 + 24*swC^4 + 
               8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
                 80*swC^4))*t^2)))*(-1 + GaugeXi[A]))/
       ((mz^2 - s)*(mz^3 - mz*s)^2)))/(cwC^2*Pi^(2*d)*sw^2*(1 - sw^2)*swC^2), 
   0, 0, ((-I/27)*2^(-7 - 2*d)*EL^6*
     ((2^(2 + d)*Pi^d*(s^2*(3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
             2*sw^2*(-5 + 8*swC^2)) + 4*d*(-9 + 30*swC^2 - 24*swC^4 + 
             sw^2*(30 - 22*swC^2 - 40*swC^4) + 8*sw^4*(-3 - 5*swC^2 + 8*
                swC^4)) - 4*(-9 + 30*swC^2 - 24*swC^4 + 
             sw^2*(30 + 4*swC^2 - 80*swC^4) + 8*sw^4*(-3 - 10*swC^2 + 16*
                swC^4))) + 2*s*(-15*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
             2*sw^2*(-5 + 8*swC^2)) + 3*d^2*(3 + 8*sw^4 - 10*swC^2 + 
             8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
             sw^2*(-30 + 74*swC^2 - 40*swC^4) + 8*sw^4*(3 - 5*swC^2 + 8*
                swC^4)))*t + 4*(9 - 30*swC^2 + 24*swC^4 + 
           8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
             80*swC^4))*t^2))/mz^2 - 
      ((2*Pi)^d*(-3*d*s*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
           2*sw^2*(-5 + 8*swC^2)) + 6*s*(9 - 30*swC^2 + 24*swC^4 - 
           10*sw^2*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(3 - 10*swC^2 + 
             16*swC^4)) + 2*(9 - 30*swC^2 + 24*swC^4 + 
           8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
             80*swC^4))*t)*(-1 + GaugeXi[A])*(-s + mz^2*GaugeXi[Z]))/mz^2 - 
      ((9*d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(3*s*(-9 + 30*swC^2 - 24*swC^4 + 
             10*sw^2*(3 - 10*swC^2 + 8*swC^4) - 8*sw^4*(3 - 10*swC^2 + 16*
                swC^4) + d*(3 + 4*sw^4 - 5*swC^2 + 4*swC^4 + sw^2*
                (-5 + 8*swC^2))) + (-9 + 30*swC^2 - 24*swC^4 - 
             8*sw^4*(3 - 20*swC^2 + 32*swC^4) + 2*sw^2*(15 - 76*swC^2 + 80*
                swC^4))*t))*(-1 + GaugeXi[A])*(-s + mz^2*GaugeXi[Z]))/mz^2 + 
      (2^(1 + d)*(-3 + d)*Pi^d*(3*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
           2*sw^2*(-5 + 8*swC^2)) - 4*(9 - 30*swC^2 + 24*swC^4 + 
           sw^2*(-30 + 74*swC^2 - 40*swC^4) + 8*sw^4*(3 - 5*swC^2 + 
             8*swC^4)))*(s + t)*(-1 + GaugeXi[A])*(s + mz^2*GaugeXi[Z]))/
       mz^2 - ((2*Pi)^d*(3*s*(d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
             2*sw^2*(-5 + 8*swC^2)) - 2*(9 - 30*swC^2 + 24*swC^4 - 
             10*sw^2*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(3 - 10*swC^2 + 16*
                swC^4))) - 2*(9 - 30*swC^2 + 24*swC^4 + 
           8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
             80*swC^4))*t)*(-1 + GaugeXi[A])*((-2 + d)*s + 
         (-4 + d)*mz^2*GaugeXi[Z]))/mz^2 - 
      ((2*Pi)^d*s*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 
           32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 80*swC^4))*(-1 + GaugeXi[A])*
        (d*s + (-4 + d)*mz^2*GaugeXi[Z]))/mz^2 - 
      (s*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*(3*swC^2*(-5 + 4*swC^2) + 
           sw^2*(-15 + 76*swC^2 - 80*swC^4) + 4*sw^4*(3 - 20*swC^2 + 
             32*swC^4)))*(-1 + GaugeXi[A])*(d*s + (-4 + d)*mz^2*GaugeXi[Z]))/
       mz^2 + ((2*Pi)^d*(s*(3*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
             2*sw^2*(-5 + 8*swC^2)) - 4*(9 - 30*swC^2 + 24*swC^4 + 
             sw^2*(-30 + 74*swC^2 - 40*swC^4) + 8*sw^4*(3 - 5*swC^2 + 8*
                swC^4))) - 2*(9 - 30*swC^2 + 24*swC^4 + 
           8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
             80*swC^4))*t)*(-1 + GaugeXi[A])*(s*((-2 + d)*s - 2*t) + 
         mz^2*((-6 + d)*s - 2*t)*GaugeXi[Z]))/(mz^2*s) + 
      4*(-1 + GaugeXi[A])*((2^(1 + d)*Pi^d*(9 - 30*swC^2 + 24*swC^4 + 
           8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
             80*swC^4))*(s + t)^2)/mz^2 - 
        ((2*Pi)^d*s*(-3*d*s*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
             2*sw^2*(-5 + 8*swC^2)) + 6*s*(9 - 30*swC^2 + 24*swC^4 - 
             10*sw^2*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(3 - 10*swC^2 + 16*
                swC^4)) + 2*(9 - 30*swC^2 + 24*swC^4 + 
             8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 80*
                swC^4))*t))/mz^2 - 
        ((2*Pi)^d*t*(-3*d*s*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
             2*sw^2*(-5 + 8*swC^2)) + 6*s*(9 - 30*swC^2 + 24*swC^4 - 
             10*sw^2*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(3 - 10*swC^2 + 16*
                swC^4)) + 2*(9 - 30*swC^2 + 24*swC^4 + 
             8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 80*
                swC^4))*t))/mz^2 + (-9*d*(2*Pi)^d + 2^(1 + d)*Pi^d*
           (3*d*(3 + 4*sw^4 - 5*swC^2 + 4*swC^4 + sw^2*(-5 + 8*swC^2)) - 
            2*(9 - 30*swC^2 + 24*swC^4 + sw^2*(-30 + 74*swC^2 - 40*swC^4) + 
              8*sw^4*(3 - 5*swC^2 + 8*swC^4))))*(s + t)*GaugeXi[Z] + 
        (2*Pi)^d*(-3*d*s*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
            2*sw^2*(-5 + 8*swC^2)) + 6*s*(9 - 30*swC^2 + 24*swC^4 - 
            10*sw^2*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(3 - 10*swC^2 + 
              16*swC^4)) + 2*(9 - 30*swC^2 + 24*swC^4 + 
            8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
              80*swC^4))*t)*GaugeXi[Z]) - 
      ((-1 + GaugeXi[A])*((-2 + d)*s + (-4 + d)*mz^2*GaugeXi[Z])*
        (s*(9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(3*s*(-9 - 5*(-6 + d)*swC^2 + 4*
                (-6 + d)*swC^4 + 4*sw^4*(-6 + d + 20*swC^2 - 32*swC^4) + sw^2*
                (30 - 5*d - 100*swC^2 + 8*d*swC^2 + 80*swC^4)) + 
             (-9 + 30*swC^2 - 24*swC^4 - 8*sw^4*(3 - 20*swC^2 + 32*swC^4) + 2*
                sw^2*(15 - 76*swC^2 + 80*swC^4))*t)) + 
         mz^2*(9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (-3*s*(-9 + 30*swC^2 - 24*swC^4 + 10*sw^2*(3 - 10*swC^2 + 
                 8*swC^4) - 8*sw^4*(3 - 10*swC^2 + 16*swC^4) + d*
                (3 + 4*sw^4 - 5*swC^2 + 4*swC^4 + sw^2*(-5 + 8*swC^2))) + 
             (9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*
                sw^2*(15 - 76*swC^2 + 80*swC^4))*t))*GaugeXi[Z]))/
       (mz^2*(s - mz^2*GaugeXi[Z]))))/(cwC^2*Pi^(2*d)*(mz^2 - s)*sw^2*
     (-1 + sw^2)*swC^2), ((-I/27)*2^(-7 - 2*d)*EL^6*(-1 + GaugeXi[A])*
     (-9*d*(2*Pi)^d*s + d*(2*Pi)^d*s*(9 - 30*swC^2 + 24*swC^4 + 
        8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
          80*swC^4)) + d*s*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*
         (3*swC^2*(-5 + 4*swC^2) + sw^2*(-15 + 76*swC^2 - 80*swC^4) + 
          4*sw^4*(3 - 20*swC^2 + 32*swC^4))) - 2^(1 + d)*Pi^d*
       (3*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) - 
        4*(9 - 30*swC^2 + 24*swC^4 + sw^2*(-30 + 74*swC^2 - 40*swC^4) + 
          8*sw^4*(3 - 5*swC^2 + 8*swC^4)))*(s + t) - 
      2^(1 + d)*(-2 + d)*Pi^d*(3*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2)) - 4*(9 - 30*swC^2 + 24*swC^4 + 
          sw^2*(-30 + 74*swC^2 - 40*swC^4) + 8*sw^4*(3 - 5*swC^2 + 8*swC^4)))*
       (s + t) + (2*Pi)^d*(3*d*s*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2)) - 6*s*(9 - 30*swC^2 + 24*swC^4 - 
          10*sw^2*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(3 - 10*swC^2 + 
            16*swC^4)) - 2*(9 - 30*swC^2 + 24*swC^4 + 
          8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
            80*swC^4))*t) + ((2*Pi)^d*((-2 + d)*s - 2*t)*
        (s*(-3*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
           4*(9 - 30*swC^2 + 24*swC^4 + sw^2*(-30 + 74*swC^2 - 40*swC^4) + 
             8*sw^4*(3 - 5*swC^2 + 8*swC^4))) + 2*(9 - 30*swC^2 + 24*swC^4 + 
           8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
             80*swC^4))*t))/s + 2^(1 + d)*Pi^d*
       (3*s*(-9 + 30*swC^2 - 24*swC^4 + 10*sw^2*(3 - 10*swC^2 + 8*swC^4) - 
          8*sw^4*(3 - 10*swC^2 + 16*swC^4) + d*(3 + 4*sw^4 - 5*swC^2 + 
            4*swC^4 + sw^2*(-5 + 8*swC^2))) + (-9 + 30*swC^2 - 24*swC^4 - 
          8*sw^4*(3 - 20*swC^2 + 32*swC^4) + 2*sw^2*(15 - 76*swC^2 + 
            80*swC^4))*t) - (2^(1 + d)*(-2 + d)*Pi^d*
        (3*s*(d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) - 
           2*(9 - 30*swC^2 + 24*swC^4 - 10*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
             8*sw^4*(3 - 10*swC^2 + 16*swC^4))) - 
         2*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 
           2*sw^2*(15 - 76*swC^2 + 80*swC^4))*t)*(s - mz^2*GaugeXi[Z]))/
       (-2*s + 2*mz^2*GaugeXi[Z]) - 
      (2*(-2 + d)*(s*(9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (3*s*(-9 - 5*(-6 + d)*swC^2 + 4*(-6 + d)*swC^4 + 4*sw^4*
                (-6 + d + 20*swC^2 - 32*swC^4) + sw^2*(30 - 5*d - 100*swC^2 + 
                 8*d*swC^2 + 80*swC^4)) + (-9 + 30*swC^2 - 24*swC^4 - 8*sw^4*
                (3 - 20*swC^2 + 32*swC^4) + 2*sw^2*(15 - 76*swC^2 + 
                 80*swC^4))*t)) + mz^2*(9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (-3*s*(-9 + 30*swC^2 - 24*swC^4 + 10*sw^2*(3 - 10*swC^2 + 
                 8*swC^4) - 8*sw^4*(3 - 10*swC^2 + 16*swC^4) + d*
                (3 + 4*sw^4 - 5*swC^2 + 4*swC^4 + sw^2*(-5 + 8*swC^2))) + 
             (9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*
                sw^2*(15 - 76*swC^2 + 80*swC^4))*t))*GaugeXi[Z]))/
       (-2*s + 2*mz^2*GaugeXi[Z])))/(cwC^2*mz^2*Pi^(2*d)*(mz^2 - s)*sw^2*
     (-1 + sw^2)*swC^2), 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/27)*2^(-5 - d)*EL^6*
     (s*(-450*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
        45*d^3*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) - 
        24*d*(sw^2*(620 - 979*swC^2 - 20*swC^4) - 
          62*(3 - 10*swC^2 + 8*swC^4) + 4*sw^4*(-124 - 5*swC^2 + 8*swC^4)) + 
        32*(-10*sw^2*(-51 + 79*swC^2 + 4*swC^4) - 
          51*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(-51 - 5*swC^2 + 8*swC^4))) + 
      mz^2*(-63*d^3*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2)) + 3*d^4*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2)) + 192*(sw^2*(-60 + 109*swC^2 - 20*swC^4) + 
          6*(3 - 10*swC^2 + 8*swC^4) + 4*sw^4*(12 - 5*swC^2 + 8*swC^4)) + 
        6*d^2*(71*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(71 - 10*swC^2 + 
            16*swC^4) - 2*sw^2*(355 - 594*swC^2 + 40*swC^4)) - 
        8*d*(sw^2*(-1470 + 2573*swC^2 - 340*swC^4) + 
          147*(3 - 10*swC^2 + 8*swC^4) + 4*sw^4*(294 - 85*swC^2 + 
            136*swC^4))) + 2*(-36*d^3*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2)) + 3*d^4*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2)) + 2*d^2*(87*(3 - 10*swC^2 + 8*swC^4) + 
          8*sw^4*(87 - 10*swC^2 + 16*swC^4) - 2*sw^2*(435 - 722*swC^2 + 
            40*swC^4)) + 32*(sw^2*(-120 + 257*swC^2 - 100*swC^4) + 
          12*(3 - 10*swC^2 + 8*swC^4) + 4*sw^4*(24 - 25*swC^2 + 40*swC^4)) - 
        8*d*(sw^2*(-510 + 946*swC^2 - 200*swC^4) + 
          51*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(51 - 25*swC^2 + 40*swC^4)))*
       t))/(cwC^2*(-4 + d)*Pi^d*(mz^2 - s)*sw^2*(-1 + sw^2)*swC^2), 0, 
   ((-I/27)*EL^6*((9*d^3*(2*Pi)^d + 2^(1 + d)*Pi^d*
         (3*d^3*(4*sw^4 + swC^2*(-5 + 4*swC^2) + sw^2*(-5 + 8*swC^2)) - 
          27*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) - 
          32*(sw^2*(-60 + 109*swC^2 - 20*swC^4) + 6*(3 - 10*swC^2 + 
              8*swC^4) + 4*sw^4*(12 - 5*swC^2 + 8*swC^4)) + 
          12*d*(sw^2*(-110 + 189*swC^2 - 20*swC^4) + 
            11*(3 - 10*swC^2 + 8*swC^4) + 4*sw^4*(22 - 5*swC^2 + 8*swC^4))))*
       (mz^2*(-s + t) + s*(s + t)) - 2*(s + t)*(9*d^3*(2*Pi)^d*s + 
        2^(1 + d)*Pi^d*(s*(3*d^3*(4*sw^4 + swC^2*(-5 + 4*swC^2) + 
              sw^2*(-5 + 8*swC^2)) - 216*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
              2*sw^2*(-5 + 8*swC^2)) - 30*d^2*(3 + 8*sw^4 - 10*swC^2 + 
              8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
            2*d*(75*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(75 - 5*swC^2 + 
                8*swC^4) - 2*sw^2*(375 - 613*swC^2 + 20*swC^4))) + 
          2*(18*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) - 
            3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
            8*(-9 + 30*swC^2 - 24*swC^4 - 5*sw^2*(-6 + 7*swC^2 + 4*swC^4) + 
              4*sw^4*(-6 - 5*swC^2 + 8*swC^4)))*t)) + 
      2*mz^2*(9*d^3*(2*Pi)^d*t + 2^(1 + d)*Pi^d*
         (s*(-36*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 
                8*swC^2)) + 3*d^3*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
              2*sw^2*(-5 + 8*swC^2)) - 8*(sw^2*(-210 + 362*swC^2 - 
                40*swC^4) + 21*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(21 - 
                5*swC^2 + 8*swC^4)) + 2*d*(69*(3 - 10*swC^2 + 8*swC^4) + 
              8*sw^4*(69 - 10*swC^2 + 16*swC^4) - 2*sw^2*(345 - 578*swC^2 + 
                40*swC^4))) + (3*d^3*(4*sw^4 + swC^2*(-5 + 4*swC^2) + 
              sw^2*(-5 + 8*swC^2)) - 9*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
              2*sw^2*(-5 + 8*swC^2)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
              sw^2*(-30 + 74*swC^2 - 40*swC^4) + 8*sw^4*(3 - 5*swC^2 + 
                8*swC^4)) + d*(6*(3 - 10*swC^2 + 8*swC^4) - 16*sw^4*(-3 - 
                5*swC^2 + 8*swC^4) + sw^2*(-60 + 44*swC^2 + 80*swC^4)))*t))))/
    (2^(2*(3 + d))*cwC^2*Pi^(2*d)*(mz^2 - s)*sw^2*(-1 + sw^2)*swC^2), 
   ((-I/27)*4^(-3 - d)*EL^6*(-2*mz^2*(s + t)*(9*d^3*(2*Pi)^d*s + 
        2^(1 + d)*Pi^d*(s*(3*d^3*(4*sw^4 + swC^2*(-5 + 4*swC^2) + 
              sw^2*(-5 + 8*swC^2)) - 216*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
              2*sw^2*(-5 + 8*swC^2)) - 30*d^2*(3 + 8*sw^4 - 10*swC^2 + 
              8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
            2*d*(75*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(75 - 5*swC^2 + 
                8*swC^4) - 2*sw^2*(375 - 613*swC^2 + 20*swC^4))) + 
          2*(18*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) - 
            3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
            8*(-9 + 30*swC^2 - 24*swC^4 - 5*sw^2*(-6 + 7*swC^2 + 4*swC^4) + 
              4*sw^4*(-6 - 5*swC^2 + 8*swC^4)))*t)) + 
      mz^4*(-9*d^3*(2*Pi)^d*(s - t) + 2^(1 + d)*Pi^d*
         (s*(3*d^3*(3 + 4*sw^4 - 5*swC^2 + 4*swC^4 + sw^2*(-5 + 8*swC^2)) - 
            27*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 
                8*swC^2)) - 32*(sw^2*(-60 + 109*swC^2 - 20*swC^4) + 
              6*(3 - 10*swC^2 + 8*swC^4) + 4*sw^4*(12 - 5*swC^2 + 8*swC^4)) + 
            12*d*(sw^2*(-110 + 189*swC^2 - 20*swC^4) + 11*(3 - 10*swC^2 + 
                8*swC^4) + 4*sw^4*(22 - 5*swC^2 + 8*swC^4))) + 
          (3*d^3*(4*sw^4 + swC^2*(-5 + 4*swC^2) + sw^2*(-5 + 8*swC^2)) - 
            27*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 
                8*swC^2)) - 32*(sw^2*(-60 + 109*swC^2 - 20*swC^4) + 
              6*(3 - 10*swC^2 + 8*swC^4) + 4*sw^4*(12 - 5*swC^2 + 8*swC^4)) + 
            12*d*(sw^2*(-110 + 189*swC^2 - 20*swC^4) + 11*(3 - 10*swC^2 + 
                8*swC^4) + 4*sw^4*(22 - 5*swC^2 + 8*swC^4)))*t)) + 
      (s + t)*(9*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (3*s^2*(d^3*(4*sw^4 + swC^2*(-5 + 4*swC^2) + sw^2*(-5 + 8*swC^2)) - 
            72*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) - 
            9*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
            4*d*(-5*sw^2*(24 - 41*swC^2 + 4*swC^4) + 12*(3 - 10*swC^2 + 
                8*swC^4) + 4*sw^4*(24 - 5*swC^2 + 8*swC^4))) + 
          12*s*(d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
            8*sw^2*swC^2*(13 - 20*swC^2 + 4*sw^2*(-5 + 8*swC^2)))*t + 
          8*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 
            2*sw^2*(15 - 76*swC^2 + 80*swC^4))*t^2))))/
    (cwC^2*Pi^(2*d)*(mz^2 - s)*sw^2*(-1 + sw^2)*swC^2), 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 
   ((-I/432)*EL^6*((2^(2 - d)*(-54*d^2 + 3*d^3 - 32*(12 - 5*sw^2 + 8*sw^4) + 
         12*d*(22 - 5*sw^2 + 8*sw^4)))/Pi^d - 
      (2^(4 - d)*(-36*d^2 + 3*d^3 - 8*(21 - 5*sw^2 + 8*sw^4) + 
         2*d*(69 - 10*sw^2 + 16*sw^4))*(s + t))/((-4 + d)*Pi^d*s) - 
      (2^(2 - d)*(s*(-126*d^2 + 9*d^3 - 48*(15 - 5*sw^2 + 8*sw^4) + 
           20*d*(27 - 5*sw^2 + 8*sw^4)) + 2*(-36*d^2 + 3*d^3 - 
           8*(21 - 5*sw^2 + 8*sw^4) + 2*d*(69 - 10*sw^2 + 16*sw^4))*t))/
       (Pi^d*s) + (2^(1 - 2*d)*(2 - d)*(3*d^3*(2*Pi)^d*s^2 + 
         2^(1 + d)*Pi^d*(s^2*(-63*d^2 + 3*d^3 - 8*(48 - 5*sw^2 + 8*sw^4) + 
             d*(282 - 50*sw^2 + 80*sw^4)) + s*(-36*d^2 + 3*d^3 + 
             2*d*(75 - 10*sw^2 + 16*sw^4) + 8*(-21 - 25*sw^2 + 40*sw^4))*t + 
           8*(3 - 20*sw^2 + 32*sw^4)*t^2) + mz^2*(-9*d^3*(2*Pi)^d*s + 
           2^(1 + d)*Pi^d*(s*(63*d^2 + 24*(15 - 5*sw^2 + 8*sw^4) - 10*d*
                (27 - 5*sw^2 + 8*sw^4)) + (36*d^2 - 3*d^3 + 8*(21 - 5*sw^2 + 
                 8*sw^4) - 2*d*(69 - 10*sw^2 + 16*sw^4))*t))))/
       ((-4 + d)*Pi^(2*d)*(mz^2 - s)*s) + 
      (2^(1 - 2*d)*(-2 + d)*(3*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
          (s^2*(63*d^2 - 6*d^3 + d*(-282 + 50*sw^2 - 80*sw^4) + 
             8*(48 - 5*sw^2 + 8*sw^4)) + s*(36*d^2 - 3*d^3 + 
             8*(21 + 25*sw^2 - 40*sw^4) - 2*d*(75 - 10*sw^2 + 16*sw^4))*t - 
           8*(3 - 20*sw^2 + 32*sw^4)*t^2) + mz^2*(9*d^3*(2*Pi)^d*s + 
           2^(1 + d)*Pi^d*(s*(-63*d^2 - 24*(15 - 5*sw^2 + 8*sw^4) + 10*d*
                (27 - 5*sw^2 + 8*sw^4)) + (-36*d^2 + 3*d^3 - 8*(21 - 5*sw^2 + 
                 8*sw^4) + 2*d*(69 - 10*sw^2 + 16*sw^4))*t))))/
       ((-4 + d)*Pi^(2*d)*(mz^2 - s)*s) - (d*(-1 + 4*sw^2)*(-3 + 8*sw^2)*
        (-1 + GaugeXi[A]))/(2*Pi)^d - (d*(3 - 20*sw^2 + 32*sw^4)*
        (-1 + GaugeXi[A]))/(2*Pi)^d + 
      (2^(1 - d)*(3*d - 4*(3 - 5*sw^2 + 8*sw^4))*(s + t)*(-1 + GaugeXi[A]))/
       (Pi^d*s) - (2^(1 - d)*(3*s*(-6 + d + 20*sw^2 - 32*sw^4) - 
         2*(3 - 20*sw^2 + 32*sw^4)*t)*(-1 + GaugeXi[A]))/(Pi^d*s) - 
      ((-2 + d)*(3*s*(-6 + d + 20*sw^2 - 32*sw^4) - 2*(3 - 20*sw^2 + 32*sw^4)*
          t)*(-1 + GaugeXi[A]))/((2*Pi)^d*s) + 
      (((-2 + d)*s - 2*t)*(3*d*s - 4*s*(3 - 5*sw^2 + 8*sw^4) - 
         2*(3 - 20*sw^2 + 32*sw^4)*t)*(-1 + GaugeXi[A]))/((2*Pi)^d*s^2) - 
      (2^(1 - 3*d)*(-2 + d)*(-((2*Pi)^(2*d)*s^2*
           (3*d - 4*(3 - 5*sw^2 + 8*sw^4))*(s + t)) + mz^4*(2*Pi)^(2*d)*
          (-3*d + 4*(3 - 5*sw^2 + 8*sw^4))*(s + t) - 2^(1 + 2*d)*mz^2*
          Pi^(2*d)*(s^2*(3*d^2 + 4*(6 + 5*sw^2 - 8*sw^4) + 
             d*(-15 - 20*sw^2 + 32*sw^4)) + s*(-33*d + 6*d^2 + 
             20*(3 - 5*sw^2 + 8*sw^4))*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2))*
        (-1 + GaugeXi[A]))/(Pi^(3*d)*(mz^2 - s)^2*s) + 
      ((-2 + d)*(s*(-3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (3*s*(-3 + d + 10*sw^2 - 16*sw^4) + (-3 + 20*sw^2 - 32*sw^4)*
              t)) + mz^2*(-3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (s*(9 - 30*sw^2 + 48*sw^4) + (3 - 20*sw^2 + 32*sw^4)*t)))*
        (-1 + GaugeXi[A]))/((2*Pi)^(2*d)*(mz^2 - s)*s)))/
    (mz^2*sw^2*(1 - sw^2)), ((-I/27)*2^(-4 - 3*d)*EL^6*
     ((2^(3 + 2*d)*Pi^(2*d)*(-36*d^2 + 3*d^3 - 8*(21 - 5*sw^2 + 8*sw^4) + 
         2*d*(69 - 10*sw^2 + 16*sw^4))*((-2 + d)*s + 2*t))/((-4 + d)*s) - 
      (2^(2 + d)*Pi^d*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
          (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
           s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
           2*(3 - 20*sw^2 + 32*sw^4)*t^2) + mz^2*(-3*d^3*(2*Pi)^d*s + 
           2^(1 + d)*Pi^d*(s*(27*d^2 + 16*(12 - 5*sw^2 + 8*sw^4) - 6*d*
                (22 - 5*sw^2 + 8*sw^4)) + (36*d^2 - 3*d^3 + 8*(21 - 5*sw^2 + 
                 8*sw^4) - 2*d*(69 - 10*sw^2 + 16*sw^4))*t))))/(mz^2*s) + 
      (2^(2 + d)*(-3 + d)*Pi^d*(3*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
          (s^2*(-63*d^2 + 3*d^3 - 8*(48 - 5*sw^2 + 8*sw^4) + 
             d*(282 - 50*sw^2 + 80*sw^4)) + s*(-36*d^2 + 3*d^3 + 
             2*d*(75 - 10*sw^2 + 16*sw^4) + 8*(-21 - 25*sw^2 + 40*sw^4))*t + 
           8*(3 - 20*sw^2 + 32*sw^4)*t^2) + mz^2*(-9*d^3*(2*Pi)^d*s + 
           2^(1 + d)*Pi^d*(s*(63*d^2 + 24*(15 - 5*sw^2 + 8*sw^4) - 10*d*
                (27 - 5*sw^2 + 8*sw^4)) + (36*d^2 - 3*d^3 + 8*(21 - 5*sw^2 + 
                 8*sw^4) - 2*d*(69 - 10*sw^2 + 16*sw^4))*t))))/
       ((-4 + d)*(mz^2 - s)*s) + (2^(2 + d)*(-3 + d)*Pi^d*
        (-3*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
          (s^2*(-63*d^2 + 6*d^3 - 8*(48 - 5*sw^2 + 8*sw^4) + 
             d*(282 - 50*sw^2 + 80*sw^4)) + s*(-36*d^2 + 3*d^3 + 
             2*d*(75 - 10*sw^2 + 16*sw^4) + 8*(-21 - 25*sw^2 + 40*sw^4))*t + 
           8*(3 - 20*sw^2 + 32*sw^4)*t^2) + mz^2*(-9*d^3*(2*Pi)^d*s + 
           2^(1 + d)*Pi^d*(s*(63*d^2 + 24*(15 - 5*sw^2 + 8*sw^4) - 10*d*
                (27 - 5*sw^2 + 8*sw^4)) + (36*d^2 - 3*d^3 + 8*(21 - 5*sw^2 + 
                 8*sw^4) - 2*d*(69 - 10*sw^2 + 16*sw^4))*t))))/
       ((-4 + d)*(mz^2 - s)*s) + ((2*Pi)^(2*d)*((-4 + d)*mz^2 + d*s)*
        (-1 + 4*sw^2)*(-3 + 8*sw^2)*(-1 + GaugeXi[A]))/mz^2 + 
      ((2*Pi)^(2*d)*((-4 + d)*mz^2 + d*s)*(3 - 20*sw^2 + 32*sw^4)*
        (-1 + GaugeXi[A]))/mz^2 - (2^(1 + 2*d)*Pi^(2*d)*(mz^2 - s)*
        (3*s*(-6 + d + 20*sw^2 - 32*sw^4) - 2*(3 - 20*sw^2 + 32*sw^4)*t)*
        (-1 + GaugeXi[A]))/(mz^2*s) + 
      ((2*Pi)^(2*d)*((-4 + d)*mz^2 + (-2 + d)*s)*
        (3*s*(-6 + d + 20*sw^2 - 32*sw^4) - 2*(3 - 20*sw^2 + 32*sw^4)*t)*
        (-1 + GaugeXi[A]))/(mz^2*s) - 
      ((2*Pi)^(2*d)*(mz^2*((-6 + d)*s - 2*t) + s*((-2 + d)*s - 2*t))*
        (3*d*s - 4*s*(3 - 5*sw^2 + 8*sw^4) - 2*(3 - 20*sw^2 + 32*sw^4)*t)*
        (-1 + GaugeXi[A]))/(mz^2*s^2) + 
      ((2*Pi)^d*((-4 + d)*mz^2 + (-2 + d)*s)*(3*d*mz^2*(2*Pi)^d*s + 
         3*d*(2*Pi)^d*s^2 - 2^(1 + d)*Pi^d*s*
          (3*s*(-3 + d + 10*sw^2 - 16*sw^4) + (-3 + 20*sw^2 - 32*sw^4)*t) - 
         2^(1 + d)*mz^2*Pi^d*(s*(9 - 30*sw^2 + 48*sw^4) + 
           (3 - 20*sw^2 + 32*sw^4)*t))*(-1 + GaugeXi[A]))/
       (mz^2*(mz^2 - s)*s) - (4^(1 + d)*Pi^(2*d)*
        (s*(3*d - 4*(3 - 5*sw^2 + 8*sw^4))*(s + t) + 
         mz^2*(s*(6 - 40*sw^2 + 64*sw^4) + (-6 + 3*d - 20*sw^2 + 32*sw^4)*t))*
        (-1 + GaugeXi[A]))/(mz^2*s) + (2*(-3 + d)*(mz^2 + s)*
        (-((2*Pi)^(2*d)*s^2*(3*d - 4*(3 - 5*sw^2 + 8*sw^4))*(s + t)) + 
         mz^4*(2*Pi)^(2*d)*(-3*d + 4*(3 - 5*sw^2 + 8*sw^4))*(s + t) - 
         2^(1 + 2*d)*mz^2*Pi^(2*d)*(s^2*(3*d^2 + 4*(6 + 5*sw^2 - 8*sw^4) + 
             d*(-15 - 20*sw^2 + 32*sw^4)) + s*(-33*d + 6*d^2 + 
             20*(3 - 5*sw^2 + 8*sw^4))*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2))*
        (-1 + GaugeXi[A]))/(s*(mz^3 - mz*s)^2)))/(Pi^(3*d)*sw^2*(1 - sw^2)), 
   0, 0, ((-I/27)*EL^6*
     ((2^(2 + d)*Pi^d*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
           4*d*(-3 - 5*sw^2 + 8*sw^4)) + 2*s*(-15*d + 3*d^2 + 
           8*(3 - 5*sw^2 + 8*sw^4))*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2))/s - 
      (2^(1 + d)*Pi^d*(3*s*(-6 + d + 20*sw^2 - 32*sw^4) - 
         2*(3 - 20*sw^2 + 32*sw^4)*t)*(-1 + GaugeXi[A])*
        (s - mz^2*GaugeXi[Z]))/s + (2*Pi)^d*(-1 + 4*sw^2)*(-3 + 8*sw^2)*
       (-1 + GaugeXi[A])*(-(d*s) - (-4 + d)*mz^2*GaugeXi[Z]) + 
      (2*Pi)^d*(3 - 20*sw^2 + 32*sw^4)*(-1 + GaugeXi[A])*
       (-(d*s) - (-4 + d)*mz^2*GaugeXi[Z]) - 
      ((2*Pi)^d*(3*s*(-6 + d + 20*sw^2 - 32*sw^4) - 2*(3 - 20*sw^2 + 32*sw^4)*
          t)*(-1 + GaugeXi[A])*((-2 + d)*s + (-4 + d)*mz^2*GaugeXi[Z]))/s + 
      ((2*Pi)^d*(3*d*s - 4*s*(3 - 5*sw^2 + 8*sw^4) - 
         2*(3 - 20*sw^2 + 32*sw^4)*t)*(-1 + GaugeXi[A])*
        (s*((-2 + d)*s - 2*t) + mz^2*((-6 + d)*s - 2*t)*GaugeXi[Z]))/s^2 + 
      (2^(2 + d)*Pi^d*(-1 + GaugeXi[A])*(s*(3*d - 4*(3 - 5*sw^2 + 8*sw^4))*
          (s + t) + mz^2*(s*(6 - 40*sw^2 + 64*sw^4) + 
           (-6 + 3*d - 20*sw^2 + 32*sw^4)*t)*GaugeXi[Z]))/s - 
      ((-1 + GaugeXi[A])*((-2 + d)*s + (-4 + d)*mz^2*GaugeXi[Z])*
        (s*(-3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(3*s*(-3 + d + 10*sw^2 - 16*
                sw^4) + (-3 + 20*sw^2 - 32*sw^4)*t)) + 
         mz^2*(-3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(9 - 30*sw^2 + 48*sw^4) + 
             (3 - 20*sw^2 + 32*sw^4)*t))*GaugeXi[Z]))/
       (s*(s - mz^2*GaugeXi[Z])) - (2*(-3 + d)*(-1 + GaugeXi[A])*
        (s + mz^2*GaugeXi[Z])*(s^2*(-3*d*(2*Pi)^d*(s - 3*t) + 
           2^(2 + d)*Pi^d*(s*(3 - 5*sw^2 + 8*sw^4) + (3 - 3*d - 5*sw^2 + 8*
                sw^4)*t)) + 2^(1 + d)*mz^2*Pi^d*s*
          (3*d - 4*(3 - 5*sw^2 + 8*sw^4))*(s + t)*GaugeXi[Z] + 
         mz^4*(-3*d*(2*Pi)^d + 2^(2 + d)*Pi^d*(3 - 5*sw^2 + 8*sw^4))*(s + t)*
          GaugeXi[Z]^2))/(s*(s - mz^2*GaugeXi[Z])^2)))/
    (2^(2*(2 + d))*mz^2*Pi^(2*d)*sw^2*(1 - sw^2)), 
   ((-I/27)*4^(-2 - d)*EL^6*(-1 + GaugeXi[A])*(-9*d^2*(2*Pi)^d*s^4 + 
      2^(1 + d)*Pi^d*s^2*(s^2*(-6 + 3*d^2 - 20*sw^2 + 32*sw^4 + 
          d*(6 + 10*sw^2 - 16*sw^4)) + s*(15*d - 3*d^2 - 
          8*(3 - 5*sw^2 + 8*sw^4))*t - 2*(3 - 20*sw^2 + 32*sw^4)*t^2) + 
      2*mz^2*s*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
          s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[Z] - 
      mz^4*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
          s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[Z]^2))/
    (mz^2*Pi^(2*d)*s^2*sw^2*(1 - sw^2)*(s - mz^2*GaugeXi[Z])^2), 0, 0, 0, 0, 
   0, 0, 0, 0, ((I/27)*4^(-1 - d)*EL^6*(27*d^3*(2*Pi)^d*s + 
      mz^2*(-3*d^3*(15 + d)*(2*Pi)^d + 2^(1 + d)*Pi^d*(-9*d^3 + 3*d^4 + 
          48*(12 - 5*sw^2 + 8*sw^4) + 3*d^2*(71 - 10*sw^2 + 16*sw^4) - 
          2*d*(294 - 85*sw^2 + 136*sw^4))) + 2^(1 + d)*Pi^d*
       (s*(-225*d^2 + 9*d^3 + d*(744 + 30*sw^2 - 48*sw^4) + 
          16*(-51 - 5*sw^2 + 8*sw^4)) + (-36*d^3 + 3*d^4 + 
          2*d^2*(87 - 10*sw^2 + 16*sw^4) + 16*(24 - 25*sw^2 + 40*sw^4) - 
          8*d*(51 - 25*sw^2 + 40*sw^4))*t)))/((-4 + d)*Pi^(2*d)*s*sw^2*
     (-1 + sw^2)), 0, ((I/27)*2^(-3 - d)*EL^6*(s + t)*
     (s*(66*d^2 - 3*d^3 + 32*(15 + 5*sw^2 - 8*sw^4) + 
        4*d*(-84 - 5*sw^2 + 8*sw^4)) + mz^2*(-288 - 90*d^2 + 9*d^3 + 
        4*d*(72 - 5*sw^2 + 8*sw^4)) + 
      8*(-18*d + 3*d^2 + 4*(6 + 5*sw^2 - 8*sw^4))*t))/
    (Pi^d*s*sw^2*(-1 + sw^2)), ((I/27)*2^(-3 - 2*d)*EL^6*(s + t)*
     (-3*d^3*(2*Pi)^d*s^2 + mz^4*(3*d^3*(2*Pi)^d + 2^(1 + d)*Pi^d*
         (-27*d^2 - 16*(12 - 5*sw^2 + 8*sw^4) + 
          6*d*(22 - 5*sw^2 + 8*sw^4))) - 2^(1 + d)*mz^2*Pi^d*
       (s*(-432 - 60*d^2 + 3*d^3 + 4*d*(75 - 5*sw^2 + 8*sw^4)) - 
        4*(-18*d + 3*d^2 + 4*(6 + 5*sw^2 - 8*sw^4))*t) + 
      2^(1 + d)*Pi^d*(3*s^2*(-72 - 9*d^2 + d^3 + 
          2*d*(24 - 5*sw^2 + 8*sw^4)) + 12*s*(d + 4*sw^2*(-5 + 8*sw^2))*t + 
        8*(3 - 20*sw^2 + 32*sw^4)*t^2)))/(Pi^(2*d)*s*sw^2*(-1 + sw^2)), 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, ((-I/27)*2^(-7 - 2*d)*EL^6*
     ((2^(4 + d)*Pi^d*(mz^2 - s)^2*(-36*d^2*(3 + 8*sw^4 - 10*swC^2 + 
           8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 3*d^3*(3 + 8*sw^4 - 10*swC^2 + 
           8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) - 
         8*(sw^2*(-210 + 362*swC^2 - 40*swC^4) + 21*(3 - 10*swC^2 + 
             8*swC^4) + 8*sw^4*(21 - 5*swC^2 + 8*swC^4)) + 
         2*d*(69*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(69 - 10*swC^2 + 
             16*swC^4) - 2*sw^2*(345 - 578*swC^2 + 40*swC^4)))*(s + t))/
       (-4 + d) - (4*(mz^2 - s)^2*s*(-9*d^3*(2*Pi)^d*(s - t) + 
         2^(1 + d)*Pi^d*(s*(3*d^3*(3 + 4*sw^4 - 5*swC^2 + 4*swC^4 + sw^2*
                (-5 + 8*swC^2)) - 27*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*
                sw^2*(-5 + 8*swC^2)) - 32*(sw^2*(-60 + 109*swC^2 - 
                 20*swC^4) + 6*(3 - 10*swC^2 + 8*swC^4) + 4*sw^4*
                (12 - 5*swC^2 + 8*swC^4)) + 12*d*(sw^2*(-110 + 189*swC^2 - 
                 20*swC^4) + 11*(3 - 10*swC^2 + 8*swC^4) + 4*sw^4*
                (22 - 5*swC^2 + 8*swC^4))) + 
           (3*d^3*(4*sw^4 + swC^2*(-5 + 4*swC^2) + sw^2*(-5 + 8*swC^2)) - 
             27*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*
                (-5 + 8*swC^2)) - 32*(sw^2*(-60 + 109*swC^2 - 20*swC^4) + 6*
                (3 - 10*swC^2 + 8*swC^4) + 4*sw^4*(12 - 5*swC^2 + 8*swC^4)) + 
             12*d*(sw^2*(-110 + 189*swC^2 - 20*swC^4) + 11*(3 - 10*swC^2 + 
                 8*swC^4) + 4*sw^4*(22 - 5*swC^2 + 8*swC^4)))*t)))/(s + t) + 
      2*(mz^2 - s)^2*(-9*d^3*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
         (s*(9*d^3*(2 + 4*sw^4 - 5*swC^2 + 4*swC^4 + sw^2*(-5 + 8*swC^2)) - 
            63*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 
                8*swC^2)) + 10*d*(sw^2*(-270 + 458*swC^2 - 40*swC^4) + 
              27*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(27 - 5*swC^2 + 
                8*swC^4)) - 24*(15*(3 - 10*swC^2 + 8*swC^4) + 
              8*sw^4*(15 - 5*swC^2 + 8*swC^4) - 2*sw^2*(75 - 133*swC^2 + 
                20*swC^4))) + (-36*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
              2*sw^2*(-5 + 8*swC^2)) + 3*d^3*(3 + 8*sw^4 - 10*swC^2 + 
              8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) - 
            8*(sw^2*(-210 + 362*swC^2 - 40*swC^4) + 21*(3 - 10*swC^2 + 
                8*swC^4) + 8*sw^4*(21 - 5*swC^2 + 8*swC^4)) + 
            2*d*(69*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(69 - 10*swC^2 + 
                16*swC^4) - 2*sw^2*(345 - 578*swC^2 + 40*swC^4)))*t)) + 
      2*(mz^2 - s)^2*(27*d^3*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
         (s*(9*d^3*(4*sw^4 + swC^2*(-5 + 4*swC^2) + sw^2*(-5 + 8*swC^2)) - 
            63*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 
                8*swC^2)) + 10*d*(sw^2*(-270 + 458*swC^2 - 40*swC^4) + 
              27*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(27 - 5*swC^2 + 
                8*swC^4)) - 24*(15*(3 - 10*swC^2 + 8*swC^4) + 
              8*sw^4*(15 - 5*swC^2 + 8*swC^4) - 2*sw^2*(75 - 133*swC^2 + 
                20*swC^4))) + (-36*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
              2*sw^2*(-5 + 8*swC^2)) + 3*d^3*(3 + 8*sw^4 - 10*swC^2 + 
              8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) - 
            8*(sw^2*(-210 + 362*swC^2 - 40*swC^4) + 21*(3 - 10*swC^2 + 
                8*swC^4) + 8*sw^4*(21 - 5*swC^2 + 8*swC^4)) + 
            2*d*(69*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(69 - 10*swC^2 + 
                16*swC^4) - 2*sw^2*(345 - 578*swC^2 + 40*swC^4)))*t)) - 
      (2*(2 - d)*(mz^2 - s)*(9*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
          (s^2*(9*d^3*(1 + 4*sw^4 - 5*swC^2 + 4*swC^4 + sw^2*
                (-5 + 8*swC^2)) - 63*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*
                sw^2*(-5 + 8*swC^2)) - 16*(sw^2*(-240 + 397*swC^2 - 
                 20*swC^4) + 24*(3 - 10*swC^2 + 8*swC^4) + 4*sw^4*
                (48 - 5*swC^2 + 8*swC^4)) + d*(282*(3 - 10*swC^2 + 8*swC^4) + 
               16*sw^4*(141 - 25*swC^2 + 40*swC^4) - 4*sw^2*(705 - 
                 1193*swC^2 + 100*swC^4))) + 
           s*(-36*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*
                (-5 + 8*swC^2)) + 3*d^3*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*
                sw^2*(-5 + 8*swC^2)) + 2*d*(75*(3 - 10*swC^2 + 8*swC^4) + 8*
                sw^4*(75 - 10*swC^2 + 16*swC^4) - 2*sw^2*(375 - 626*swC^2 + 
                 40*swC^4)) + 8*(sw^2*(210 - 206*swC^2 - 200*swC^4) - 21*
                (3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(-21 - 25*swC^2 + 
                 40*swC^4)))*t + 8*(9 - 30*swC^2 + 24*swC^4 + 
             8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 80*
                swC^4))*t^2) + mz^2*(-27*d^3*(2*Pi)^d*s + 
           2^(1 + d)*Pi^d*(s*(-9*d^3*(4*sw^4 + swC^2*(-5 + 4*swC^2) + 
                 sw^2*(-5 + 8*swC^2)) + 63*d^2*(3 + 8*sw^4 - 10*swC^2 + 
                 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) - 10*d*
                (sw^2*(-270 + 458*swC^2 - 40*swC^4) + 27*(3 - 10*swC^2 + 
                   8*swC^4) + 8*sw^4*(27 - 5*swC^2 + 8*swC^4)) + 24*
                (15*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(15 - 5*swC^2 + 
                   8*swC^4) - 2*sw^2*(75 - 133*swC^2 + 20*swC^4))) + 
             (36*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 
                   8*swC^2)) - 3*d^3*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
                 2*sw^2*(-5 + 8*swC^2)) + 8*(sw^2*(-210 + 362*swC^2 - 
                   40*swC^4) + 21*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*
                  (21 - 5*swC^2 + 8*swC^4)) - 2*d*(69*(3 - 10*swC^2 + 
                   8*swC^4) + 8*sw^4*(69 - 10*swC^2 + 16*swC^4) - 
                 2*sw^2*(345 - 578*swC^2 + 40*swC^4)))*t))))/(-4 + d) - 
      (2*(2 - d)*(mz^2 - s)*(27*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
          (s^2*(9*d^3*(4*sw^4 + swC^2*(-5 + 4*swC^2) + sw^2*(-5 + 8*swC^2)) - 
             63*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*
                (-5 + 8*swC^2)) - 16*(sw^2*(-240 + 397*swC^2 - 20*swC^4) + 24*
                (3 - 10*swC^2 + 8*swC^4) + 4*sw^4*(48 - 5*swC^2 + 8*swC^4)) + 
             d*(282*(3 - 10*swC^2 + 8*swC^4) + 16*sw^4*(141 - 25*swC^2 + 
                 40*swC^4) - 4*sw^2*(705 - 1193*swC^2 + 100*swC^4))) + 
           s*(-36*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*
                (-5 + 8*swC^2)) + 3*d^3*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*
                sw^2*(-5 + 8*swC^2)) + 2*d*(75*(3 - 10*swC^2 + 8*swC^4) + 8*
                sw^4*(75 - 10*swC^2 + 16*swC^4) - 2*sw^2*(375 - 626*swC^2 + 
                 40*swC^4)) + 8*(sw^2*(210 - 206*swC^2 - 200*swC^4) - 21*
                (3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(-21 - 25*swC^2 + 
                 40*swC^4)))*t + 8*(9 - 30*swC^2 + 24*swC^4 + 
             8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 80*
                swC^4))*t^2) + mz^2*(-27*d^3*(2*Pi)^d*s + 
           2^(1 + d)*Pi^d*(s*(-9*d^3*(4*sw^4 + swC^2*(-5 + 4*swC^2) + 
                 sw^2*(-5 + 8*swC^2)) + 63*d^2*(3 + 8*sw^4 - 10*swC^2 + 
                 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) - 10*d*
                (sw^2*(-270 + 458*swC^2 - 40*swC^4) + 27*(3 - 10*swC^2 + 
                   8*swC^4) + 8*sw^4*(27 - 5*swC^2 + 8*swC^4)) + 24*
                (15*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(15 - 5*swC^2 + 
                   8*swC^4) - 2*sw^2*(75 - 133*swC^2 + 20*swC^4))) + 
             (36*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 
                   8*swC^2)) - 3*d^3*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
                 2*sw^2*(-5 + 8*swC^2)) + 8*(sw^2*(-210 + 362*swC^2 - 
                   40*swC^4) + 21*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*
                  (21 - 5*swC^2 + 8*swC^4)) - 2*d*(69*(3 - 10*swC^2 + 
                   8*swC^4) + 8*sw^4*(69 - 10*swC^2 + 16*swC^4) - 
                 2*sw^2*(345 - 578*swC^2 + 40*swC^4)))*t))))/(-4 + d) + 
      d*(2*Pi)^d*(mz^2 - s)^2*s*(9 - 30*swC^2 + 24*swC^4 + 
        8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 80*swC^4))*
       (-1 + GaugeXi[A]) + d*(mz^2 - s)^2*s*(9*(2*Pi)^d + 
        2^(1 + d)*Pi^d*(3*swC^2*(-5 + 4*swC^2) + 
          sw^2*(-15 + 76*swC^2 - 80*swC^4) + 4*sw^4*(3 - 20*swC^2 + 
            32*swC^4)))*(-1 + GaugeXi[A]) - 2^(1 + d)*Pi^d*(mz^2 - s)^2*
       (3*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) - 
        4*(9 - 30*swC^2 + 24*swC^4 + sw^2*(-30 + 74*swC^2 - 40*swC^4) + 
          8*sw^4*(3 - 5*swC^2 + 8*swC^4)))*(s + t)*(-1 + GaugeXi[A]) - 
      ((2*Pi)^d*(mz^2 - s)^2*((-2 + d)*s - 2*t)*
        (s*(3*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) - 
           4*(9 - 30*swC^2 + 24*swC^4 + sw^2*(-30 + 74*swC^2 - 40*swC^4) + 
             8*sw^4*(3 - 5*swC^2 + 8*swC^4))) - 2*(9 - 30*swC^2 + 24*swC^4 + 
           8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
             80*swC^4))*t)*(-1 + GaugeXi[A]))/s + (-2 + d)*(2*Pi)^d*
       (mz^2 - s)^2*(3*s*(d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
            2*sw^2*(-5 + 8*swC^2)) - 2*(9 - 30*swC^2 + 24*swC^4 - 
            10*sw^2*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(3 - 10*swC^2 + 
              16*swC^4))) - 2*(9 - 30*swC^2 + 24*swC^4 + 
          8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
            80*swC^4))*t)*(-1 + GaugeXi[A]) - (2*Pi)^d*(mz^2 - s)^2*
       (-3*d*s*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
        6*s*(9 - 30*swC^2 + 24*swC^4 - 10*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
          8*sw^4*(3 - 10*swC^2 + 16*swC^4)) + 2*(9 - 30*swC^2 + 24*swC^4 + 
          8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
            80*swC^4))*t)*(-1 + GaugeXi[A]) + (mz^2 - s)^2*
       (-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(3*s*(-9 + 30*swC^2 - 24*swC^4 + 
            10*sw^2*(3 - 10*swC^2 + 8*swC^4) - 8*sw^4*(3 - 10*swC^2 + 
              16*swC^4) + d*(3 + 4*sw^4 - 5*swC^2 + 4*swC^4 + 
              sw^2*(-5 + 8*swC^2))) + (-9 + 30*swC^2 - 24*swC^4 - 
            8*sw^4*(3 - 20*swC^2 + 32*swC^4) + 2*sw^2*(15 - 76*swC^2 + 
              80*swC^4))*t))*(-1 + GaugeXi[A]) - 2^(1 + d)*(-2 + d)*Pi^d*
       (mz^4*(3*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) - 
          4*(9 - 30*swC^2 + 24*swC^4 + sw^2*(-30 + 74*swC^2 - 40*swC^4) + 
            8*sw^4*(3 - 5*swC^2 + 8*swC^4)))*(s + t) + 
        s^2*(3*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) - 
          4*(9 - 30*swC^2 + 24*swC^4 + sw^2*(-30 + 74*swC^2 - 40*swC^4) + 
            8*sw^4*(3 - 5*swC^2 + 8*swC^4)))*(s + t) + 
        2*mz^2*(s^2*(3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
              2*sw^2*(-5 + 8*swC^2)) - 8*(-9 + 30*swC^2 - 24*swC^4 - 
              5*sw^2*(-6 + 7*swC^2 + 4*swC^4) + 4*sw^4*(-6 - 5*swC^2 + 
                8*swC^4)) + d*(-15*(3 - 10*swC^2 + 8*swC^4) + 
              8*sw^4*(-15 - 20*swC^2 + 32*swC^4) - 2*sw^2*(-75 + 68*swC^2 + 
                80*swC^4))) + s*(-33*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
              2*sw^2*(-5 + 8*swC^2)) + 6*d^2*(3 + 8*sw^4 - 10*swC^2 + 
              8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 20*(9 - 30*swC^2 + 
              24*swC^4 + sw^2*(-30 + 74*swC^2 - 40*swC^4) + 8*sw^4*(3 - 
                5*swC^2 + 8*swC^4)))*t + 4*(9 - 30*swC^2 + 24*swC^4 + 
            8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
              80*swC^4))*t^2))*(-1 + GaugeXi[A]) - 
      ((-2 + d)*(mz^2 - s)^2*(s*(-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (-3*s*(-9 - 5*(-6 + d)*swC^2 + 4*(-6 + d)*swC^4 + 4*sw^4*
                (-6 + d + 20*swC^2 - 32*swC^4) + sw^2*(30 - 5*d - 100*swC^2 + 
                 8*d*swC^2 + 80*swC^4)) + (9 - 30*swC^2 + 24*swC^4 + 8*sw^4*
                (3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
                 80*swC^4))*t)) + mz^2*(-9*d*(2*Pi)^d*s + 
           2^(1 + d)*Pi^d*(3*s*(-9 + 30*swC^2 - 24*swC^4 + 10*sw^2*
                (3 - 10*swC^2 + 8*swC^4) - 8*sw^4*(3 - 10*swC^2 + 16*swC^4) + 
               d*(3 + 4*sw^4 - 5*swC^2 + 4*swC^4 + sw^2*(-5 + 8*swC^2))) + 
             (-9 + 30*swC^2 - 24*swC^4 - 8*sw^4*(3 - 20*swC^2 + 32*swC^4) + 2*
                sw^2*(15 - 76*swC^2 + 80*swC^4))*t)))*(-1 + GaugeXi[A]))/
       (-mz^2 + s)))/(cwC^2*mz^2*Pi^(2*d)*(mz^2 - s)^3*sw^2*(1 - sw^2)*
     swC^2), ((I/27)*2^(-7 - 2*d)*EL^6*
     ((2^(3 + d)*Pi^d*(-36*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
           2*sw^2*(-5 + 8*swC^2)) + 3*d^3*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
           2*sw^2*(-5 + 8*swC^2)) - 8*(sw^2*(-210 + 362*swC^2 - 40*swC^4) + 
           21*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(21 - 5*swC^2 + 8*swC^4)) + 
         2*d*(69*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(69 - 10*swC^2 + 
             16*swC^4) - 2*sw^2*(345 - 578*swC^2 + 40*swC^4)))*
        ((-2 + d)*s + 2*t))/((-4 + d)*(mz^2 - s)) - 
      (4*(9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
          (s^2*(3*d^2*(4*sw^4 + swC^2*(-5 + 4*swC^2) + sw^2*(-5 + 8*swC^2)) + 
             2*d*(-9 + 30*swC^2 - 24*swC^4 + sw^2*(30 - 22*swC^2 - 
                 40*swC^4) + 8*sw^4*(-3 - 5*swC^2 + 8*swC^4)) + 
             2*(9 - 30*swC^2 + 24*swC^4 + sw^4*(24 + 80*swC^2 - 128*swC^4) + 
               sw^2*(-30 - 4*swC^2 + 80*swC^4))) + 
           s*(-15*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*
                (-5 + 8*swC^2)) + 3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*
                sw^2*(-5 + 8*swC^2)) + 8*(9 - 30*swC^2 + 24*swC^4 + sw^2*
                (-30 + 74*swC^2 - 40*swC^4) + 8*sw^4*(3 - 5*swC^2 + 
                 8*swC^4)))*t + 2*(9 - 30*swC^2 + 24*swC^4 + 
             8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 80*
                swC^4))*t^2) + mz^2*(-9*d^3*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (s*(-3*d^3*(4*sw^4 + swC^2*(-5 + 4*swC^2) + sw^2*(-5 + 
                   8*swC^2)) + 27*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
                 2*sw^2*(-5 + 8*swC^2)) + 32*(sw^2*(-60 + 109*swC^2 - 
                   20*swC^4) + 6*(3 - 10*swC^2 + 8*swC^4) + 4*sw^4*
                  (12 - 5*swC^2 + 8*swC^4)) - 12*d*(sw^2*(-110 + 189*swC^2 - 
                   20*swC^4) + 11*(3 - 10*swC^2 + 8*swC^4) + 4*sw^4*
                  (22 - 5*swC^2 + 8*swC^4))) + (36*d^2*(3 + 8*sw^4 - 
                 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) - 3*d^3*
                (3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 8*
                (sw^2*(-210 + 362*swC^2 - 40*swC^4) + 21*(3 - 10*swC^2 + 
                   8*swC^4) + 8*sw^4*(21 - 5*swC^2 + 8*swC^4)) - 2*d*
                (69*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(69 - 10*swC^2 + 
                   16*swC^4) - 2*sw^2*(345 - 578*swC^2 + 40*swC^4)))*t))))/
       (mz^2*(mz^2 - s)) + (4*(-3 + d)*(9*d^3*(2*Pi)^d*s^2 + 
         2^(1 + d)*Pi^d*(s^2*(9*d^3*(1 + 4*sw^4 - 5*swC^2 + 4*swC^4 + sw^2*
                (-5 + 8*swC^2)) - 63*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*
                sw^2*(-5 + 8*swC^2)) - 16*(sw^2*(-240 + 397*swC^2 - 
                 20*swC^4) + 24*(3 - 10*swC^2 + 8*swC^4) + 4*sw^4*
                (48 - 5*swC^2 + 8*swC^4)) + d*(282*(3 - 10*swC^2 + 8*swC^4) + 
               16*sw^4*(141 - 25*swC^2 + 40*swC^4) - 4*sw^2*(705 - 
                 1193*swC^2 + 100*swC^4))) + 
           s*(-36*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*
                (-5 + 8*swC^2)) + 3*d^3*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*
                sw^2*(-5 + 8*swC^2)) + 2*d*(75*(3 - 10*swC^2 + 8*swC^4) + 8*
                sw^4*(75 - 10*swC^2 + 16*swC^4) - 2*sw^2*(375 - 626*swC^2 + 
                 40*swC^4)) + 8*(sw^2*(210 - 206*swC^2 - 200*swC^4) - 21*
                (3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(-21 - 25*swC^2 + 
                 40*swC^4)))*t + 8*(9 - 30*swC^2 + 24*swC^4 + 
             8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 80*
                swC^4))*t^2) + mz^2*(-27*d^3*(2*Pi)^d*s + 
           2^(1 + d)*Pi^d*(s*(-9*d^3*(4*sw^4 + swC^2*(-5 + 4*swC^2) + 
                 sw^2*(-5 + 8*swC^2)) + 63*d^2*(3 + 8*sw^4 - 10*swC^2 + 
                 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) - 10*d*
                (sw^2*(-270 + 458*swC^2 - 40*swC^4) + 27*(3 - 10*swC^2 + 
                   8*swC^4) + 8*sw^4*(27 - 5*swC^2 + 8*swC^4)) + 24*
                (15*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(15 - 5*swC^2 + 
                   8*swC^4) - 2*sw^2*(75 - 133*swC^2 + 20*swC^4))) + 
             (36*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 
                   8*swC^2)) - 3*d^3*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
                 2*sw^2*(-5 + 8*swC^2)) + 8*(sw^2*(-210 + 362*swC^2 - 
                   40*swC^4) + 21*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*
                  (21 - 5*swC^2 + 8*swC^4)) - 2*d*(69*(3 - 10*swC^2 + 
                   8*swC^4) + 8*sw^4*(69 - 10*swC^2 + 16*swC^4) - 
                 2*sw^2*(345 - 578*swC^2 + 40*swC^4)))*t))))/
       ((-4 + d)*(mz^2 - s)^2) + (4*(-3 + d)*(27*d^3*(2*Pi)^d*s^2 + 
         2^(1 + d)*Pi^d*(s^2*(9*d^3*(4*sw^4 + swC^2*(-5 + 4*swC^2) + sw^2*
                (-5 + 8*swC^2)) - 63*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*
                sw^2*(-5 + 8*swC^2)) - 16*(sw^2*(-240 + 397*swC^2 - 
                 20*swC^4) + 24*(3 - 10*swC^2 + 8*swC^4) + 4*sw^4*
                (48 - 5*swC^2 + 8*swC^4)) + d*(282*(3 - 10*swC^2 + 8*swC^4) + 
               16*sw^4*(141 - 25*swC^2 + 40*swC^4) - 4*sw^2*(705 - 
                 1193*swC^2 + 100*swC^4))) + 
           s*(-36*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*
                (-5 + 8*swC^2)) + 3*d^3*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*
                sw^2*(-5 + 8*swC^2)) + 2*d*(75*(3 - 10*swC^2 + 8*swC^4) + 8*
                sw^4*(75 - 10*swC^2 + 16*swC^4) - 2*sw^2*(375 - 626*swC^2 + 
                 40*swC^4)) + 8*(sw^2*(210 - 206*swC^2 - 200*swC^4) - 21*
                (3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(-21 - 25*swC^2 + 
                 40*swC^4)))*t + 8*(9 - 30*swC^2 + 24*swC^4 + 
             8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 80*
                swC^4))*t^2) + mz^2*(-27*d^3*(2*Pi)^d*s + 
           2^(1 + d)*Pi^d*(s*(-9*d^3*(4*sw^4 + swC^2*(-5 + 4*swC^2) + 
                 sw^2*(-5 + 8*swC^2)) + 63*d^2*(3 + 8*sw^4 - 10*swC^2 + 
                 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) - 10*d*
                (sw^2*(-270 + 458*swC^2 - 40*swC^4) + 27*(3 - 10*swC^2 + 
                   8*swC^4) + 8*sw^4*(27 - 5*swC^2 + 8*swC^4)) + 24*
                (15*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(15 - 5*swC^2 + 
                   8*swC^4) - 2*sw^2*(75 - 133*swC^2 + 20*swC^4))) + 
             (36*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 
                   8*swC^2)) - 3*d^3*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
                 2*sw^2*(-5 + 8*swC^2)) + 8*(sw^2*(-210 + 362*swC^2 - 
                   40*swC^4) + 21*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*
                  (21 - 5*swC^2 + 8*swC^4)) - 2*d*(69*(3 - 10*swC^2 + 
                   8*swC^4) + 8*sw^4*(69 - 10*swC^2 + 16*swC^4) - 
                 2*sw^2*(345 - 578*swC^2 + 40*swC^4)))*t))))/
       ((-4 + d)*(mz^2 - s)^2) + ((2*Pi)^d*s*((-4 + d)*mz^2 + d*s)*
        (9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 
         2*sw^2*(15 - 76*swC^2 + 80*swC^4))*(-1 + GaugeXi[A]))/
       (mz^4 - mz^2*s) + (s*((-4 + d)*mz^2 + d*s)*(9*(2*Pi)^d + 
         2^(1 + d)*Pi^d*(3*swC^2*(-5 + 4*swC^2) + sw^2*(-15 + 76*swC^2 - 
             80*swC^4) + 4*sw^4*(3 - 20*swC^2 + 32*swC^4)))*
        (-1 + GaugeXi[A]))/(mz^4 - mz^2*s) + 
      ((2*Pi)^d*((-4 + d)*mz^2 + (-2 + d)*s)*
        (3*s*(d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) - 
           2*(9 - 30*swC^2 + 24*swC^4 - 10*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
             8*sw^4*(3 - 10*swC^2 + 16*swC^4))) - 
         2*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 
           2*sw^2*(15 - 76*swC^2 + 80*swC^4))*t)*(-1 + GaugeXi[A]))/
       (mz^4 - mz^2*s) + ((2*Pi)^d*(-3*d*s*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
           2*sw^2*(-5 + 8*swC^2)) + 6*s*(9 - 30*swC^2 + 24*swC^4 - 
           10*sw^2*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(3 - 10*swC^2 + 
             16*swC^4)) + 2*(9 - 30*swC^2 + 24*swC^4 + 
           8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
             80*swC^4))*t)*(-1 + GaugeXi[A]))/mz^2 + 
      ((2*Pi)^d*(s*(3*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
             2*sw^2*(-5 + 8*swC^2)) - 4*(9 - 30*swC^2 + 24*swC^4 + 
             sw^2*(-30 + 74*swC^2 - 40*swC^4) + 8*sw^4*(3 - 5*swC^2 + 8*
                swC^4))) - 2*(9 - 30*swC^2 + 24*swC^4 + 
           8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
             80*swC^4))*t)*(mz^2*(-((-6 + d)*s) + 2*t) + 
         s*(-((-2 + d)*s) + 2*t))*(-1 + GaugeXi[A]))/(mz^2*(mz^2 - s)*s) - 
      ((-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(3*s*(-9 + 30*swC^2 - 24*swC^4 + 
             10*sw^2*(3 - 10*swC^2 + 8*swC^4) - 8*sw^4*(3 - 10*swC^2 + 16*
                swC^4) + d*(3 + 4*sw^4 - 5*swC^2 + 4*swC^4 + sw^2*
                (-5 + 8*swC^2))) + (-9 + 30*swC^2 - 24*swC^4 - 
             8*sw^4*(3 - 20*swC^2 + 32*swC^4) + 2*sw^2*(15 - 76*swC^2 + 80*
                swC^4))*t))*(-1 + GaugeXi[A]))/mz^2 - 
      (2^(1 + d)*(-3 + d)*Pi^d*(mz^2 + s)*
        (mz^4*(3*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
             2*sw^2*(-5 + 8*swC^2)) - 4*(9 - 30*swC^2 + 24*swC^4 + 
             sw^2*(-30 + 74*swC^2 - 40*swC^4) + 8*sw^4*(3 - 5*swC^2 + 8*
                swC^4)))*(s + t) + s^2*(3*d*(3 + 8*sw^4 - 10*swC^2 + 
             8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) - 4*(9 - 30*swC^2 + 24*swC^4 + 
             sw^2*(-30 + 74*swC^2 - 40*swC^4) + 8*sw^4*(3 - 5*swC^2 + 8*
                swC^4)))*(s + t) + 2*mz^2*
          (s^2*(3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*
                (-5 + 8*swC^2)) - 8*(-9 + 30*swC^2 - 24*swC^4 - 5*sw^2*
                (-6 + 7*swC^2 + 4*swC^4) + 4*sw^4*(-6 - 5*swC^2 + 8*swC^4)) + 
             d*(-15*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(-15 - 20*swC^2 + 
                 32*swC^4) - 2*sw^2*(-75 + 68*swC^2 + 80*swC^4))) + 
           s*(-33*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*
                (-5 + 8*swC^2)) + 6*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*
                sw^2*(-5 + 8*swC^2)) + 20*(9 - 30*swC^2 + 24*swC^4 + sw^2*
                (-30 + 74*swC^2 - 40*swC^4) + 8*sw^4*(3 - 5*swC^2 + 
                 8*swC^4)))*t + 4*(9 - 30*swC^2 + 24*swC^4 + 
             8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 80*
                swC^4))*t^2))*(-1 + GaugeXi[A]))/
       ((mz^2 - s)*(mz^3 - mz*s)^2) - ((-((-4 + d)*mz^2) - (-2 + d)*s)*
        (s*(-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(-3*s*(-9 - 5*(-6 + d)*swC^2 + 4*
                (-6 + d)*swC^4 + 4*sw^4*(-6 + d + 20*swC^2 - 32*swC^4) + sw^2*
                (30 - 5*d - 100*swC^2 + 8*d*swC^2 + 80*swC^4)) + 
             (9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*
                sw^2*(15 - 76*swC^2 + 80*swC^4))*t)) + 
         mz^2*(-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (3*s*(-9 + 30*swC^2 - 24*swC^4 + 10*sw^2*(3 - 10*swC^2 + 
                 8*swC^4) - 8*sw^4*(3 - 10*swC^2 + 16*swC^4) + d*
                (3 + 4*sw^4 - 5*swC^2 + 4*swC^4 + sw^2*(-5 + 8*swC^2))) + 
             (-9 + 30*swC^2 - 24*swC^4 - 8*sw^4*(3 - 20*swC^2 + 32*swC^4) + 2*
                sw^2*(15 - 76*swC^2 + 80*swC^4))*t)))*(-1 + GaugeXi[A]))/
       (mz^3 - mz*s)^2 - 
      (4*(s*(9*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(3*(-6 - 5*(-4 + d)*swC^2 + 4*
                (-4 + d)*swC^4) + sw^2*(60 - 148*swC^2 + 80*swC^4 + 3*d*
                (-5 + 8*swC^2)) + 4*sw^4*(3*d - 4*(3 - 5*swC^2 + 8*swC^4))))*
          (s + t) + mz^2*(-9*d*(2*Pi)^d*t + 2^(1 + d)*Pi^d*
            (s*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 
               2*sw^2*(15 - 76*swC^2 + 80*swC^4)) + (-9 + 30*swC^2 - 24*
                swC^4 + sw^2*(30 + 4*swC^2 - 80*swC^4) + 8*sw^4*
                (-3 - 10*swC^2 + 16*swC^4) + 3*d*(3 + 4*sw^4 - 5*swC^2 + 
                 4*swC^4 + sw^2*(-5 + 8*swC^2)))*t)))*(-1 + GaugeXi[A]))/
       (mz^2*(mz^2 - s))))/(cwC^2*Pi^(2*d)*sw^2*(1 - sw^2)*swC^2), 0, 0, 
   ((-I/27)*2^(-7 - 2*d)*EL^6*
     (4*(9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(3*d^2*(4*sw^4 + swC^2*(-5 + 4*swC^2) + sw^2*(-5 + 8*swC^2)) + 
            2*d*(-9 + 30*swC^2 - 24*swC^4 + sw^2*(30 - 22*swC^2 - 40*swC^4) + 
              8*sw^4*(-3 - 5*swC^2 + 8*swC^4)) + 2*(9 - 30*swC^2 + 24*swC^4 + 
              sw^4*(24 + 80*swC^2 - 128*swC^4) + sw^2*(-30 - 4*swC^2 + 
                80*swC^4))) + s*(-15*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
              2*sw^2*(-5 + 8*swC^2)) + 3*d^2*(3 + 8*sw^4 - 10*swC^2 + 
              8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
              sw^2*(-30 + 74*swC^2 - 40*swC^4) + 8*sw^4*(3 - 5*swC^2 + 
                8*swC^4)))*t + 2*(9 - 30*swC^2 + 24*swC^4 + 
            8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
              80*swC^4))*t^2)) + (2*Pi)^d*
       (3*s*(d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) - 
          2*(9 - 30*swC^2 + 24*swC^4 - 10*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
            8*sw^4*(3 - 10*swC^2 + 16*swC^4))) - 
        2*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 
          2*sw^2*(15 - 76*swC^2 + 80*swC^4))*t)*(-1 + GaugeXi[A])*
       (-s + mz^2*GaugeXi[Z]) + (-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
         (3*s*(-9 + 30*swC^2 - 24*swC^4 + 10*sw^2*(3 - 10*swC^2 + 8*swC^4) - 
            8*sw^4*(3 - 10*swC^2 + 16*swC^4) + d*(3 + 4*sw^4 - 5*swC^2 + 
              4*swC^4 + sw^2*(-5 + 8*swC^2))) + (-9 + 30*swC^2 - 24*swC^4 - 
            8*sw^4*(3 - 20*swC^2 + 32*swC^4) + 2*sw^2*(15 - 76*swC^2 + 
              80*swC^4))*t))*(-1 + GaugeXi[A])*(-s + mz^2*GaugeXi[Z]) + 
      2^(1 + d)*(-3 + d)*Pi^d*(3*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2)) - 4*(9 - 30*swC^2 + 24*swC^4 + 
          sw^2*(-30 + 74*swC^2 - 40*swC^4) + 8*sw^4*(3 - 5*swC^2 + 8*swC^4)))*
       (s + t)*(-1 + GaugeXi[A])*(s + mz^2*GaugeXi[Z]) + 
      (2*Pi)^d*s*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 
          32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 80*swC^4))*(-1 + GaugeXi[A])*
       (-(d*s) - (-4 + d)*mz^2*GaugeXi[Z]) + 
      s*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*(3*swC^2*(-5 + 4*swC^2) + 
          sw^2*(-15 + 76*swC^2 - 80*swC^4) + 4*sw^4*(3 - 20*swC^2 + 
            32*swC^4)))*(-1 + GaugeXi[A])*(-(d*s) - (-4 + d)*mz^2*
         GaugeXi[Z]) - (2*Pi)^d*
       (3*s*(d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) - 
          2*(9 - 30*swC^2 + 24*swC^4 - 10*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
            8*sw^4*(3 - 10*swC^2 + 16*swC^4))) - 
        2*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 
          2*sw^2*(15 - 76*swC^2 + 80*swC^4))*t)*(-1 + GaugeXi[A])*
       ((-2 + d)*s + (-4 + d)*mz^2*GaugeXi[Z]) + 
      ((2*Pi)^d*(s*(3*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
             2*sw^2*(-5 + 8*swC^2)) - 4*(9 - 30*swC^2 + 24*swC^4 + 
             sw^2*(-30 + 74*swC^2 - 40*swC^4) + 8*sw^4*(3 - 5*swC^2 + 8*
                swC^4))) - 2*(9 - 30*swC^2 + 24*swC^4 + 
           8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
             80*swC^4))*t)*(-1 + GaugeXi[A])*(s*((-2 + d)*s - 2*t) + 
         mz^2*((-6 + d)*s - 2*t)*GaugeXi[Z]))/s - 
      ((-1 + GaugeXi[A])*((-2 + d)*s + (-4 + d)*mz^2*GaugeXi[Z])*
        (s*(9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(3*s*(-9 - 5*(-6 + d)*swC^2 + 4*
                (-6 + d)*swC^4 + 4*sw^4*(-6 + d + 20*swC^2 - 32*swC^4) + sw^2*
                (30 - 5*d - 100*swC^2 + 8*d*swC^2 + 80*swC^4)) + 
             (-9 + 30*swC^2 - 24*swC^4 - 8*sw^4*(3 - 20*swC^2 + 32*swC^4) + 2*
                sw^2*(15 - 76*swC^2 + 80*swC^4))*t)) + 
         mz^2*(9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (-3*s*(-9 + 30*swC^2 - 24*swC^4 + 10*sw^2*(3 - 10*swC^2 + 
                 8*swC^4) - 8*sw^4*(3 - 10*swC^2 + 16*swC^4) + d*
                (3 + 4*sw^4 - 5*swC^2 + 4*swC^4 + sw^2*(-5 + 8*swC^2))) + 
             (9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*
                sw^2*(15 - 76*swC^2 + 80*swC^4))*t))*GaugeXi[Z]))/
       (s - mz^2*GaugeXi[Z]) + 4*(-1 + GaugeXi[A])*
       (s*(9*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(3*(-6 - 5*(-4 + d)*swC^2 + 
              4*(-4 + d)*swC^4) + sw^2*(60 - 148*swC^2 + 80*swC^4 + 
              3*d*(-5 + 8*swC^2)) + 4*sw^4*(3*d - 4*(3 - 5*swC^2 + 
                8*swC^4))))*(s + t) + mz^2*(-9*d*(2*Pi)^d*t + 
          2^(1 + d)*Pi^d*(s*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 
                32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 80*swC^4)) + 
            (-9 + 30*swC^2 - 24*swC^4 + sw^2*(30 + 4*swC^2 - 80*swC^4) + 
              8*sw^4*(-3 - 10*swC^2 + 16*swC^4) + 3*d*(3 + 4*sw^4 - 5*swC^2 + 
                4*swC^4 + sw^2*(-5 + 8*swC^2)))*t))*GaugeXi[Z])))/
    (cwC^2*mz^2*Pi^(2*d)*(mz^2 - s)*sw^2*(-1 + sw^2)*swC^2), 
   ((-I/27)*2^(-7 - 2*d)*EL^6*(-1 + GaugeXi[A])*(-9*d*(2*Pi)^d*s + 
      d*(2*Pi)^d*s*(9 - 30*swC^2 + 24*swC^4 + 
        8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
          80*swC^4)) + d*s*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*
         (3*swC^2*(-5 + 4*swC^2) + sw^2*(-15 + 76*swC^2 - 80*swC^4) + 
          4*sw^4*(3 - 20*swC^2 + 32*swC^4))) - 2^(1 + d)*Pi^d*
       (3*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) - 
        4*(9 - 30*swC^2 + 24*swC^4 + sw^2*(-30 + 74*swC^2 - 40*swC^4) + 
          8*sw^4*(3 - 5*swC^2 + 8*swC^4)))*(s + t) - 
      2^(1 + d)*(-2 + d)*Pi^d*(3*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2)) - 4*(9 - 30*swC^2 + 24*swC^4 + 
          sw^2*(-30 + 74*swC^2 - 40*swC^4) + 8*sw^4*(3 - 5*swC^2 + 8*swC^4)))*
       (s + t) + (2*Pi)^d*(3*s*(d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
            2*sw^2*(-5 + 8*swC^2)) - 2*(9 - 30*swC^2 + 24*swC^4 - 
            10*sw^2*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(3 - 10*swC^2 + 
              16*swC^4))) - 2*(9 - 30*swC^2 + 24*swC^4 + 
          8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
            80*swC^4))*t) + ((2*Pi)^d*((-2 + d)*s - 2*t)*
        (s*(-3*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
           4*(9 - 30*swC^2 + 24*swC^4 + sw^2*(-30 + 74*swC^2 - 40*swC^4) + 
             8*sw^4*(3 - 5*swC^2 + 8*swC^4))) + 2*(9 - 30*swC^2 + 24*swC^4 + 
           8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
             80*swC^4))*t))/s + 2^(1 + d)*Pi^d*
       (3*s*(-9 + 30*swC^2 - 24*swC^4 + 10*sw^2*(3 - 10*swC^2 + 8*swC^4) - 
          8*sw^4*(3 - 10*swC^2 + 16*swC^4) + d*(3 + 4*sw^4 - 5*swC^2 + 
            4*swC^4 + sw^2*(-5 + 8*swC^2))) + (-9 + 30*swC^2 - 24*swC^4 - 
          8*sw^4*(3 - 20*swC^2 + 32*swC^4) + 2*sw^2*(15 - 76*swC^2 + 
            80*swC^4))*t) - (2^(1 + d)*(-2 + d)*Pi^d*
        (3*s*(d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) - 
           2*(9 - 30*swC^2 + 24*swC^4 - 10*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
             8*sw^4*(3 - 10*swC^2 + 16*swC^4))) - 
         2*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 
           2*sw^2*(15 - 76*swC^2 + 80*swC^4))*t)*(s - mz^2*GaugeXi[Z]))/
       (-2*s + 2*mz^2*GaugeXi[Z]) - 
      (2*(-2 + d)*(s*(9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (3*s*(-9 - 5*(-6 + d)*swC^2 + 4*(-6 + d)*swC^4 + 4*sw^4*
                (-6 + d + 20*swC^2 - 32*swC^4) + sw^2*(30 - 5*d - 100*swC^2 + 
                 8*d*swC^2 + 80*swC^4)) + (-9 + 30*swC^2 - 24*swC^4 - 8*sw^4*
                (3 - 20*swC^2 + 32*swC^4) + 2*sw^2*(15 - 76*swC^2 + 
                 80*swC^4))*t)) + mz^2*(9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (-3*s*(-9 + 30*swC^2 - 24*swC^4 + 10*sw^2*(3 - 10*swC^2 + 
                 8*swC^4) - 8*sw^4*(3 - 10*swC^2 + 16*swC^4) + d*
                (3 + 4*sw^4 - 5*swC^2 + 4*swC^4 + sw^2*(-5 + 8*swC^2))) + 
             (9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*
                sw^2*(15 - 76*swC^2 + 80*swC^4))*t))*GaugeXi[Z]))/
       (-2*s + 2*mz^2*GaugeXi[Z])))/(cwC^2*mz^2*Pi^(2*d)*(mz^2 - s)*sw^2*
     (-1 + sw^2)*swC^2), 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/27)*2^(-5 - d)*EL^6*
     (s*(-450*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
        45*d^3*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) - 
        24*d*(sw^2*(620 - 979*swC^2 - 20*swC^4) - 
          62*(3 - 10*swC^2 + 8*swC^4) + 4*sw^4*(-124 - 5*swC^2 + 8*swC^4)) + 
        32*(-10*sw^2*(-51 + 79*swC^2 + 4*swC^4) - 
          51*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(-51 - 5*swC^2 + 8*swC^4))) + 
      mz^2*(-63*d^3*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2)) + 3*d^4*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2)) + 192*(sw^2*(-60 + 109*swC^2 - 20*swC^4) + 
          6*(3 - 10*swC^2 + 8*swC^4) + 4*sw^4*(12 - 5*swC^2 + 8*swC^4)) + 
        6*d^2*(71*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(71 - 10*swC^2 + 
            16*swC^4) - 2*sw^2*(355 - 594*swC^2 + 40*swC^4)) - 
        8*d*(sw^2*(-1470 + 2573*swC^2 - 340*swC^4) + 
          147*(3 - 10*swC^2 + 8*swC^4) + 4*sw^4*(294 - 85*swC^2 + 
            136*swC^4))) + 2*(-36*d^3*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2)) + 3*d^4*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2)) + 2*d^2*(87*(3 - 10*swC^2 + 8*swC^4) + 
          8*sw^4*(87 - 10*swC^2 + 16*swC^4) - 2*sw^2*(435 - 722*swC^2 + 
            40*swC^4)) + 32*(sw^2*(-120 + 257*swC^2 - 100*swC^4) + 
          12*(3 - 10*swC^2 + 8*swC^4) + 4*sw^4*(24 - 25*swC^2 + 40*swC^4)) - 
        8*d*(sw^2*(-510 + 946*swC^2 - 200*swC^4) + 
          51*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(51 - 25*swC^2 + 40*swC^4)))*
       t))/(cwC^2*(-4 + d)*Pi^d*(mz^2 - s)*sw^2*(-1 + sw^2)*swC^2), 0, 
   ((-I/27)*EL^6*(2^(1 + d)*Pi^d*
       (s^2*(432*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
          60*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) - 
          3*d^3*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) - 
          4*d*(75*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(75 - 5*swC^2 + 
              8*swC^4) - 2*sw^2*(375 - 613*swC^2 + 20*swC^4))) + 
        s*(72*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) - 
          3*d^3*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) - 
          16*(sw^2*(330 - 502*swC^2 - 40*swC^4) - 33*(3 - 10*swC^2 + 
              8*swC^4) + 8*sw^4*(-33 - 5*swC^2 + 8*swC^4)) - 
          4*d*(93*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(93 - 5*swC^2 + 
              8*swC^4) - 2*sw^2*(465 - 757*swC^2 + 20*swC^4)))*t + 
        4*(-18*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
          3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) - 
          8*(-9 + 30*swC^2 - 24*swC^4 - 5*sw^2*(-6 + 7*swC^2 + 4*swC^4) + 
            4*sw^4*(-6 - 5*swC^2 + 8*swC^4)))*t^2 + 
        mz^2*(2*s*(-36*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
              2*sw^2*(-5 + 8*swC^2)) + 3*d^3*(3 + 8*sw^4 - 10*swC^2 + 
              8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) - 
            8*(sw^2*(-210 + 362*swC^2 - 40*swC^4) + 21*(3 - 10*swC^2 + 
                8*swC^4) + 8*sw^4*(21 - 5*swC^2 + 8*swC^4)) + 
            2*d*(69*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(69 - 10*swC^2 + 
                16*swC^4) - 2*sw^2*(345 - 578*swC^2 + 40*swC^4))) + 
          (-18*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 
                8*swC^2)) + 3*d^3*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
              2*sw^2*(-5 + 8*swC^2)) - 4*d*(-9 + 30*swC^2 - 24*swC^4 + 
              sw^2*(30 - 22*swC^2 - 40*swC^4) + 8*sw^4*(-3 - 5*swC^2 + 
                8*swC^4)) + 16*(9 - 30*swC^2 + 24*swC^4 + sw^2*(-30 + 
                74*swC^2 - 40*swC^4) + 8*sw^4*(3 - 5*swC^2 + 8*swC^4)))*t)) + 
      (s + (mz^2*(-s + t))/(s + t))*(-9*d^3*(2*Pi)^d*(s - t) + 
        2^(1 + d)*Pi^d*(s*(3*d^3*(3 + 4*sw^4 - 5*swC^2 + 4*swC^4 + 
              sw^2*(-5 + 8*swC^2)) - 27*d^2*(3 + 8*sw^4 - 10*swC^2 + 
              8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) - 
            32*(sw^2*(-60 + 109*swC^2 - 20*swC^4) + 6*(3 - 10*swC^2 + 
                8*swC^4) + 4*sw^4*(12 - 5*swC^2 + 8*swC^4)) + 
            12*d*(sw^2*(-110 + 189*swC^2 - 20*swC^4) + 11*(3 - 10*swC^2 + 
                8*swC^4) + 4*sw^4*(22 - 5*swC^2 + 8*swC^4))) + 
          (3*d^3*(4*sw^4 + swC^2*(-5 + 4*swC^2) + sw^2*(-5 + 8*swC^2)) - 
            27*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 
                8*swC^2)) - 32*(sw^2*(-60 + 109*swC^2 - 20*swC^4) + 
              6*(3 - 10*swC^2 + 8*swC^4) + 4*sw^4*(12 - 5*swC^2 + 8*swC^4)) + 
            12*d*(sw^2*(-110 + 189*swC^2 - 20*swC^4) + 11*(3 - 10*swC^2 + 
                8*swC^4) + 4*sw^4*(22 - 5*swC^2 + 8*swC^4)))*t))))/
    (2^(2*(3 + d))*cwC^2*Pi^(2*d)*(mz^2 - s)*sw^2*(-1 + sw^2)*swC^2), 
   ((-I/27)*4^(-3 - d)*EL^6*(s + t)*(9*d^3*(2*Pi)^d*s^2 + 
      mz^4*(9*d^3*(2*Pi)^d + 2^(1 + d)*Pi^d*
         (3*d^3*(4*sw^4 + swC^2*(-5 + 4*swC^2) + sw^2*(-5 + 8*swC^2)) - 
          27*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) - 
          32*(sw^2*(-60 + 109*swC^2 - 20*swC^4) + 6*(3 - 10*swC^2 + 
              8*swC^4) + 4*sw^4*(12 - 5*swC^2 + 8*swC^4)) + 
          12*d*(sw^2*(-110 + 189*swC^2 - 20*swC^4) + 
            11*(3 - 10*swC^2 + 8*swC^4) + 4*sw^4*(22 - 5*swC^2 + 
              8*swC^4)))) + 2^(1 + d)*mz^2*Pi^d*
       (s*(432*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
          60*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) - 
          3*d^3*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) - 
          4*d*(75*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(75 - 5*swC^2 + 
              8*swC^4) - 2*sw^2*(375 - 613*swC^2 + 20*swC^4))) + 
        4*(-18*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
          3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) - 
          8*(-9 + 30*swC^2 - 24*swC^4 - 5*sw^2*(-6 + 7*swC^2 + 4*swC^4) + 
            4*sw^4*(-6 - 5*swC^2 + 8*swC^4)))*t) + 
      2^(1 + d)*Pi^d*(3*s^2*(d^3*(4*sw^4 + swC^2*(-5 + 4*swC^2) + 
            sw^2*(-5 + 8*swC^2)) - 72*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
            2*sw^2*(-5 + 8*swC^2)) - 9*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
            2*sw^2*(-5 + 8*swC^2)) + 4*d*(-5*sw^2*(24 - 41*swC^2 + 4*swC^4) + 
            12*(3 - 10*swC^2 + 8*swC^4) + 4*sw^4*(24 - 5*swC^2 + 8*swC^4))) + 
        12*s*(d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
          8*sw^2*swC^2*(13 - 20*swC^2 + 4*sw^2*(-5 + 8*swC^2)))*t + 
        8*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 
          2*sw^2*(15 - 76*swC^2 + 80*swC^4))*t^2)))/
    (cwC^2*Pi^(2*d)*(mz^2 - s)*sw^2*(-1 + sw^2)*swC^2), 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, ((-I/27)*2^(-7 - 2*d)*EL^6*
     (s*(s + t)*(-9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(18 - 120*sw^2 + 88*sw^4 + 320*sw^6 - 256*sw^8 + 
            d^2*(9 - 30*sw^2 + 48*sw^4) + 2*d*(-9 + 60*sw^2 - 70*sw^4 - 
              80*sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
            d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
              80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
            256*sw^8)*t^2)) - mz^2*(9*d^2*(2*Pi)^d*s^2*(5*s + 7*t) + 
        2^(1 + d)*Pi^d*(2*s^3*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
            3*d^2*(-3 - 5*sw^2 + 8*sw^4) + d*(-9 + 60*sw^2 - 70*sw^4 - 
              80*sw^6 + 64*sw^8)) + s^2*(90 - 600*sw^2 + 1064*sw^4 - 
            320*sw^6 + 256*sw^8 + 18*d^2*(-1 - 5*sw^2 + 8*sw^4) + 
            d*(-63 + 420*sw^2 - 620*sw^4 - 160*sw^6 + 128*sw^8))*t + 
          s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + d^2*(9 - 60*sw^2 + 96*sw^4) + 
            2*(45 - 300*sw^2 + 688*sw^4 - 640*sw^6 + 512*sw^8))*t^2 + 
          2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^3)) + 
      (-2*s*(9*d^2*(2*Pi)^d*s^2*(s + 3*t) + 2^(1 + d)*Pi^d*
           (2*s^3*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
              3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 
                80*sw^6 + 64*sw^8)) + s^2*(90 - 600*sw^2 + 1064*sw^4 - 
              320*sw^6 + 256*sw^8 + 18*d^2*sw^2*(-5 + 8*sw^2) + 
              d*(-63 + 420*sw^2 - 620*sw^4 - 160*sw^6 + 128*sw^8))*t + 
            s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + d^2*(9 - 60*sw^2 + 96*sw^4) + 
              2*(45 - 300*sw^2 + 688*sw^4 - 640*sw^6 + 512*sw^8))*t^2 + 
            2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^3)) + 
        3*mz^2*(3*d^2*(2*Pi)^d*s^2*(9*s + 11*t) + 2^(1 + d)*Pi^d*
           (s^3*(18 - 120*sw^2 + 88*sw^4 + 320*sw^6 - 256*sw^8 + 
              d^2*(-9 - 30*sw^2 + 48*sw^4) + 2*d*(-9 + 60*sw^2 - 70*sw^4 - 
                80*sw^6 + 64*sw^8)) + s^2*(90 - 600*sw^2 + 1064*sw^4 - 
              320*sw^6 + 256*sw^8 + 3*d^2*(-1 - 30*sw^2 + 48*sw^4) + 
              d*(-63 + 420*sw^2 - 620*sw^4 - 160*sw^6 + 128*sw^8))*t + 
            s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + d^2*(9 - 60*sw^2 + 96*sw^4) + 
              2*(45 - 300*sw^2 + 688*sw^4 - 640*sw^6 + 512*sw^8))*t^2 + 
            2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^3)))*
       GaugeXi[Z] + (s*(s + t)*(-9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
           (s^2*(18 - 120*sw^2 + 88*sw^4 + 320*sw^6 - 256*sw^8 + 
              d^2*(9 - 30*sw^2 + 48*sw^4) + 2*d*(-9 + 60*sw^2 - 70*sw^4 - 
                80*sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
              d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
                80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 
              320*sw^6 + 256*sw^8)*t^2)) - 
        3*mz^2*(15*d^2*(2*Pi)^d*s^2*(s + 3*t) + 2^(1 + d)*Pi^d*
           (s^3*(18 - 120*sw^2 + 88*sw^4 + 320*sw^6 - 256*sw^8 + 
              d^2*(-3 - 30*sw^2 + 48*sw^4) + 2*d*(-9 + 60*sw^2 - 70*sw^4 - 
                80*sw^6 + 64*sw^8)) + s^2*(90 - 600*sw^2 + 1064*sw^4 - 
              320*sw^6 + 256*sw^8 + 9*d^2*(-1 - 10*sw^2 + 16*sw^4) + 
              d*(-63 + 420*sw^2 - 620*sw^4 - 160*sw^6 + 128*sw^8))*t + 
            s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + d^2*(9 - 60*sw^2 + 96*sw^4) + 
              2*(45 - 300*sw^2 + 688*sw^4 - 640*sw^6 + 512*sw^8))*t^2 + 
            2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^3)))*
       GaugeXi[Z]^2 + mz^2*(9*d^2*(2*Pi)^d*s^2*(3*s + 5*t) + 
        2^(1 + d)*Pi^d*(s^3*(18 - 120*sw^2 + 88*sw^4 + 320*sw^6 - 256*sw^8 + 
            d^2*(-9 - 30*sw^2 + 48*sw^4) + 2*d*(-9 + 60*sw^2 - 70*sw^4 - 
              80*sw^6 + 64*sw^8)) + s^2*(90 - 600*sw^2 + 1064*sw^4 - 
            320*sw^6 + 256*sw^8 + 9*d^2*(-1 - 10*sw^2 + 16*sw^4) + 
            d*(-63 + 420*sw^2 - 620*sw^4 - 160*sw^6 + 128*sw^8))*t + 
          s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + d^2*(9 - 60*sw^2 + 96*sw^4) + 
            2*(45 - 300*sw^2 + 688*sw^4 - 640*sw^6 + 512*sw^8))*t^2 + 
          2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^3))*
       GaugeXi[Z]^3))/((-1 + d)*mz^4*Pi^(2*d)*s^2*sw^4*(-1 + sw^2)^2*(s + t)*
     (-1 + GaugeXi[Z])^2), 0, 0, 0, 0, 
   ((I/27)*2^(-7 - 2*d)*EL^6*(9*d^2*(2*Pi)^d*s^3 - 2^(1 + d)*Pi^d*s*
       (s^2*(18 - 120*sw^2 + 88*sw^4 + 320*sw^6 - 256*sw^8 + 
          d^2*(9 - 30*sw^2 + 48*sw^4) + 2*d*(-9 + 60*sw^2 - 70*sw^4 - 
            80*sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
          d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 
            64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*
         t^2) - mz^2*(27*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(18 - 120*sw^2 + 88*sw^4 + 320*sw^6 - 256*sw^8 + 
            d^2*(-9 - 30*sw^2 + 48*sw^4) + 2*d*(-9 + 60*sw^2 - 70*sw^4 - 
              80*sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
            d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
              80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
            256*sw^8)*t^2)) + 
      (2*s*(9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
           (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
              3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 
                80*sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
              d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
                80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 
              320*sw^6 + 256*sw^8)*t^2)) + 3*mz^2*(3*d^2*(2*Pi)^d*s^2 + 
          2^(1 + d)*Pi^d*(s^2*(18 - 120*sw^2 + 88*sw^4 + 320*sw^6 - 
              256*sw^8 + d^2*(3 - 30*sw^2 + 48*sw^4) + 2*d*(-9 + 60*sw^2 - 
                70*sw^4 - 80*sw^6 + 64*sw^8)) + 
            s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + d^2*(9 - 60*sw^2 + 96*sw^4) + 
              8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8))*t + 
            2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^2)))*
       GaugeXi[Z] - (-9*d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
         (s^2*(18 - 120*sw^2 + 88*sw^4 + 320*sw^6 - 256*sw^8 + 
            d^2*(9 - 30*sw^2 + 48*sw^4) + 2*d*(-9 + 60*sw^2 - 70*sw^4 - 
              80*sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
            d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
              80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
            256*sw^8)*t^2) + 3*mz^2*(3*d^2*(2*Pi)^d*s^2 + 
          2^(1 + d)*Pi^d*(s^2*(18 - 120*sw^2 + 88*sw^4 + 320*sw^6 - 
              256*sw^8 + d^2*(3 - 30*sw^2 + 48*sw^4) + 2*d*(-9 + 60*sw^2 - 
                70*sw^4 - 80*sw^6 + 64*sw^8)) + 
            s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + d^2*(9 - 60*sw^2 + 96*sw^4) + 
              8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8))*t + 
            2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^2)))*
       GaugeXi[Z]^2 + mz^2*(45*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
            3*d^2*(-3 - 5*sw^2 + 8*sw^4) + d*(-9 + 60*sw^2 - 70*sw^4 - 
              80*sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
            d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
              80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
            256*sw^8)*t^2))*GaugeXi[Z]^3))/((-1 + d)*mz^4*Pi^(2*d)*s^2*sw^4*
     (-1 + sw^2)^2*(-1 + GaugeXi[Z])^2), 
   ((-I/27)*2^(-7 - 2*d)*EL^6*(-3*2^(1 + d)*Pi^d*(9 - 60*sw^2 + 200*sw^4 - 
        320*sw^6 + 256*sw^8)*(s + t) + 
      (mz^2*(2*Pi)^d*(d*s*(-9 + 60*sw^2 - 96*sw^4) + 
         6*s*(9 - 60*sw^2 + 148*sw^4 - 160*sw^6 + 128*sw^8) + 
         2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t))/s + 
      (2*Pi)^d*(24*s*sw^4*(13 - 40*sw^2 + 32*sw^4) + 
        3*d*s*(3 - 20*sw^2 + 32*sw^4) + 4*(9 - 60*sw^2 + 200*sw^4 - 
          320*sw^6 + 256*sw^8)*t) + 3*2^(1 + d)*mz^2*Pi^d*
       (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*GaugeXi[Z] + 
      (2^(1 + d)*mz^2*Pi^d*(d*s*(-9 + 60*sw^2 - 96*sw^4) + 
         6*s*(9 - 60*sw^2 + 148*sw^4 - 160*sw^6 + 128*sw^8) + 
         2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t)*GaugeXi[Z])/s + 
      (2^(1 + d)*Pi^d*(d*(9 - 60*sw^2 + 96*sw^4) - 
         4*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8))*(s + t)*
        (-mz^2 + s + mz^2*GaugeXi[Z]))/s - 
      (2^(1 + d)*Pi^d*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*
        (d*(mz^2 - s) + (-4 + 3*d)*mz^2*GaugeXi[Z]))/(-1 + d) - 
      (2^(2 + d)*Pi^d*(-((mz^2 - s)*(d*(9 - 60*sw^2 + 96*sw^4) - 
            4*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8))*(s + t)) + 
         mz^2*(2*s*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8) + 
           d*(9 - 60*sw^2 + 96*sw^4)*t + 2*(-9 + 60*sw^2 - 44*sw^4 - 
             160*sw^6 + 128*sw^8)*t)*GaugeXi[Z]))/s - 
      (mz^2*GaugeXi[Z]*(3*d*s*(3*(2*Pi)^d + 2^(2 + d)*Pi^d*sw^2*
            (-5 + 8*sw^2)) + 2^(1 + d)*Pi^d*
          (12*s*sw^4*(13 - 40*sw^2 + 32*sw^4) + (-9 + 60*sw^2 - 200*sw^4 + 
             320*sw^6 - 256*sw^8)*t) - 2^(1 + d)*Pi^d*
          (24*s*sw^4*(13 - 40*sw^2 + 32*sw^4) + 3*d*s*(3 - 20*sw^2 + 
             32*sw^4) - 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t)*
          GaugeXi[Z] + (3*d*s*(3*(2*Pi)^d + 2^(2 + d)*Pi^d*sw^2*
              (-5 + 8*sw^2)) + 2^(1 + d)*Pi^d*(12*s*sw^4*(13 - 40*sw^2 + 32*
                sw^4) + (-9 + 60*sw^2 - 200*sw^4 + 320*sw^6 - 256*sw^8)*t))*
          GaugeXi[Z]^2))/(s*(-1 + GaugeXi[Z])^2) - 
      (((mz^2 - s)*((-2 + d)*s - 2*t) + mz^2*((-2 + 3*d)*s + 2*t)*GaugeXi[Z])*
        (-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(2*s*(9 + 15*(-4 + d)*sw^2 + 
             (122 - 24*d)*sw^4 - 80*sw^6 + 64*sw^8) + 
           (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t) + 
         2^(1 + d)*Pi^d*(d*s*(9 - 60*sw^2 + 96*sw^4) - 
           4*s*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8) - 
           2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t)*GaugeXi[Z] + 
         (-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(2*s*(9 + 15*(-4 + d)*sw^2 + 
               (122 - 24*d)*sw^4 - 80*sw^6 + 64*sw^8) + 
             (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t))*
          GaugeXi[Z]^2))/((-1 + d)*s^2*(-1 + GaugeXi[Z])^2) + 
      (2*mz^2*GaugeXi[Z]*(9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
          (3*s*(9 - 60*sw^2 + 148*sw^4 - 160*sw^6 + 128*sw^8 + 
             d*(-3 + 10*sw^2 - 16*sw^4)) + (9 - 60*sw^2 + 200*sw^4 - 
             320*sw^6 + 256*sw^8)*t) + 2^(1 + d)*Pi^d*
          (d*s*(9 - 60*sw^2 + 96*sw^4) - 6*s*(9 - 60*sw^2 + 148*sw^4 - 
             160*sw^6 + 128*sw^8) - 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
             256*sw^8)*t)*GaugeXi[Z] + (9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (3*s*(9 - 60*sw^2 + 148*sw^4 - 160*sw^6 + 128*sw^8 + d*
                (-3 + 10*sw^2 - 16*sw^4)) + (9 - 60*sw^2 + 200*sw^4 - 320*
                sw^6 + 256*sw^8)*t))*GaugeXi[Z]^2))/(s*(-1 + GaugeXi[Z])^2) - 
      (mz^2*(-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
           (3*s*(-9 + 60*sw^2 - 148*sw^4 + 160*sw^6 - 128*sw^8 + 
              d*(3 - 10*sw^2 + 16*sw^4)) + (-9 + 60*sw^2 - 200*sw^4 + 
              320*sw^6 - 256*sw^8)*t)) + s*(-9*d*(2*Pi)^d*s + 
          2^(1 + d)*Pi^d*(3*s*(9 + 10*(-6 + d)*sw^2 - 4*(-37 + 4*d)*sw^4 - 
              160*sw^6 + 128*sw^8) + (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
              256*sw^8)*t)) + 
        (2^(1 + d)*Pi^d*s*(d*s*(9 - 60*sw^2 + 96*sw^4) - 
            6*s*(9 - 60*sw^2 + 148*sw^4 - 160*sw^6 + 128*sw^8) - 
            2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t) + 
          mz^2*(-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(3*s*(9 + 10*(-6 + d)*sw^2 - 
                4*(-37 + 4*d)*sw^4 - 160*sw^6 + 128*sw^8) + (9 - 60*sw^2 + 
                200*sw^4 - 320*sw^6 + 256*sw^8)*t)))*GaugeXi[Z] - 
        (mz^2 + s)*(9*d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*
           (3*s*(9 + 10*(-6 + d)*sw^2 - 4*(-37 + 4*d)*sw^4 - 160*sw^6 + 
              128*sw^8) + (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t))*
         GaugeXi[Z]^2 + mz^2*(-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
           (3*s*(-9 + 60*sw^2 - 148*sw^4 + 160*sw^6 - 128*sw^8 + 
              d*(3 - 10*sw^2 + 16*sw^4)) + (-9 + 60*sw^2 - 200*sw^4 + 
              320*sw^6 - 256*sw^8)*t))*GaugeXi[Z]^3)/
       (s*(-1 + GaugeXi[Z])^2)))/(mz^4*Pi^(2*d)*sw^4*(-1 + sw^2)^2), 
   ((I/27)*2^(-7 - 2*d)*EL^6*
     ((2^(1 + d)*Pi^d*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*
        (d*(mz^2 - s)^2 + 2*((-2 + d)*mz^4 - d*mz^2*s)*GaugeXi[Z] + 
         d*mz^4*GaugeXi[Z]^2))/(-1 + d) + 
      (((mz^2 - s)^2*((-2 + d)*s - 2*t) + 2*mz^2*(d*(mz^2 - s)*s + 
           2*(s^2 + mz^2*t + s*t))*GaugeXi[Z] + mz^4*((-2 + d)*s - 2*t)*
          GaugeXi[Z]^2)*(-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
          (2*s*(9 + 15*(-4 + d)*sw^2 + (122 - 24*d)*sw^4 - 80*sw^6 + 
             64*sw^8) + (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t) + 
         2^(1 + d)*Pi^d*(d*s*(9 - 60*sw^2 + 96*sw^4) - 
           4*s*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8) - 
           2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t)*GaugeXi[Z] + 
         (-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(2*s*(9 + 15*(-4 + d)*sw^2 + 
               (122 - 24*d)*sw^4 - 80*sw^6 + 64*sw^8) + 
             (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t))*
          GaugeXi[Z]^2))/((-1 + d)*s^2*(-1 + GaugeXi[Z])^2) + 
      ((mz^2 - s + mz^2*GaugeXi[Z])*(mz^2*(-9*d*(2*Pi)^d*s + 
           2^(1 + d)*Pi^d*(3*s*(-9 + 60*sw^2 - 148*sw^4 + 160*sw^6 - 128*
                sw^8 + d*(3 - 10*sw^2 + 16*sw^4)) + (-9 + 60*sw^2 - 200*
                sw^4 + 320*sw^6 - 256*sw^8)*t)) + 
         s*(-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(3*s*(9 + 10*(-6 + d)*sw^2 - 4*
                (-37 + 4*d)*sw^4 - 160*sw^6 + 128*sw^8) + 
             (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t)) + 
         (2^(1 + d)*Pi^d*s*(d*s*(9 - 60*sw^2 + 96*sw^4) - 
             6*s*(9 - 60*sw^2 + 148*sw^4 - 160*sw^6 + 128*sw^8) - 
             2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t) + 
           mz^2*(-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(3*s*(9 + 10*(-6 + d)*
                  sw^2 - 4*(-37 + 4*d)*sw^4 - 160*sw^6 + 128*sw^8) + 
               (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t)))*
          GaugeXi[Z] - (mz^2 + s)*(9*d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*
            (3*s*(9 + 10*(-6 + d)*sw^2 - 4*(-37 + 4*d)*sw^4 - 160*sw^6 + 128*
                sw^8) + (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t))*
          GaugeXi[Z]^2 + mz^2*(-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (3*s*(-9 + 60*sw^2 - 148*sw^4 + 160*sw^6 - 128*sw^8 + d*
                (3 - 10*sw^2 + 16*sw^4)) + (-9 + 60*sw^2 - 200*sw^4 + 320*
                sw^6 - 256*sw^8)*t))*GaugeXi[Z]^3))/(s*(-1 + GaugeXi[Z])^2) - 
      (2*(mz^4*(9*d*(2*Pi)^d - 2^(2 + d)*Pi^d*(9 + 15*(-4 + d)*sw^2 + 
             (122 - 24*d)*sw^4 - 80*sw^6 + 64*sw^8))*(s + t) + 
         s^2*(9*d*(2*Pi)^d*(s + 3*t) - 2^(1 + d)*Pi^d*
            (2*s*(9 + 15*(-4 + d)*sw^2 + (122 - 24*d)*sw^4 - 80*sw^6 + 64*
                sw^8) + (d*(9 + 30*sw^2 - 48*sw^4) + 2*(9 - 60*sw^2 + 
                 122*sw^4 - 80*sw^6 + 64*sw^8))*t)) + 
         2*mz^2*(9*d*(2*Pi)^d*s*((-5 + d)*s - 11*t) + 2^(1 + d)*Pi^d*
            (2*s^2*(18 - 15*(8 - 5*d + d^2)*sw^2 + 2*(83 - 47*d + 12*d^2)*
                sw^4 - 80*(-1 + d)*sw^6 + 64*(-1 + d)*sw^8) + 
             s*(-66*d*sw^2*(-5 + 8*sw^2) + d^2*(9 - 60*sw^2 + 96*sw^4) + 10*
                (9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8))*t + 
             2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^2)) - 
         2*(s^2*(9*d*(2*Pi)^d - 2^(2 + d)*Pi^d*(9 + 15*(-4 + d)*sw^2 + 
               (122 - 24*d)*sw^4 - 80*sw^6 + 64*sw^8))*(s + t) + 
           mz^4*(9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-9 - 30*(-2 + d)*sw^2 + 
                 (-44 + 48*d)*sw^4 - 160*sw^6 + 128*sw^8) + 3*(-3 + d)*
                (3 - 20*sw^2 + 32*sw^4)*t)) + 
           mz^2*(-27*d*(2*Pi)^d*s*(3*s + 7*t) + 2^(1 + d)*Pi^d*
              (s^2*(d^2*(9 - 60*sw^2 + 96*sw^4) - 6*(-9 + 60*sw^2 - 70*sw^4 - 
                   80*sw^6 + 64*sw^8) + d*(270*sw^2 - 328*sw^4 - 320*sw^6 + 
                   256*sw^8)) + 6*s*(-21*d*sw^2*(-5 + 8*sw^2) + 
                 d^2*(3 - 20*sw^2 + 32*sw^4) + 3*(9 - 60*sw^2 + 122*sw^4 - 
                   80*sw^6 + 64*sw^8))*t + 4*(9 - 60*sw^2 + 200*sw^4 - 
                 320*sw^6 + 256*sw^8)*t^2)))*GaugeXi[Z] + 
         (-4*s^3*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*sw^2*(-30 + 61*sw^2 - 40*sw^4 + 
               32*sw^6)) + 3*2^(1 + d)*d^2*mz^2*Pi^d*s*(3 - 20*sw^2 + 
             32*sw^4)*(s + 2*t) - 4*s^2*(3*2^(2 + d)*mz^2*Pi^d*sw^4*
              (13 - 40*sw^2 + 32*sw^4) + 9*(2*Pi)^d*t + 2^(1 + d)*Pi^d*sw^2*
              (-30 + 61*sw^2 - 40*sw^4 + 32*sw^6)*t) + 3*2^(3 + d)*mz^2*Pi^d*
            s*(mz^2*(26*sw^4 - 80*sw^6 + 64*sw^8) + (9 - 60*sw^2 + 122*sw^4 - 
               80*sw^6 + 64*sw^8)*t) + 2^(3 + d)*mz^2*Pi^d*t*
            (2*mz^2*(-9 + 60*sw^2 - 83*sw^4 - 40*sw^6 + 32*sw^8) + 
             (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t) + 
           d*(3*2^(1 + d)*mz^4*Pi^d*(3 - 20*sw^2 + 32*sw^4)*(s + 3*t) + 
             3*s^2*(3*(2*Pi)^d*s + 2^(2 + d)*Pi^d*s*sw^2*(-5 + 8*sw^2) + 9*
                (2*Pi)^d*t + 2^(1 + d)*Pi^d*(-3 - 10*sw^2 + 16*sw^4)*t) + 
             2^(1 + d)*mz^2*Pi^d*s*(s*(-27 + 180*sw^2 - 184*sw^4 - 320*sw^6 + 
                 256*sw^8) - 27*(3 - 20*sw^2 + 32*sw^4)*t)))*GaugeXi[Z]^2 - 
         2*(mz^2*s*(9*d*(2*Pi)^d - 2^(2 + d)*Pi^d*(9 + 15*(-4 + d)*sw^2 + 
               (122 - 24*d)*sw^4 - 80*sw^6 + 64*sw^8))*(s + t) + 
           mz^4*(9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-9 - 30*(-2 + d)*sw^2 + 
                 (-44 + 48*d)*sw^4 - 160*sw^6 + 128*sw^8) + 3*(-3 + d)*
                (3 - 20*sw^2 + 32*sw^4)*t)))*GaugeXi[Z]^3 + 
         mz^4*(9*d*(2*Pi)^d - 2^(2 + d)*Pi^d*(9 + 15*(-4 + d)*sw^2 + 
             (122 - 24*d)*sw^4 - 80*sw^6 + 64*sw^8))*(s + t)*GaugeXi[Z]^4))/
       (s*(-1 + GaugeXi[Z])^2) - (mz^2 - s + mz^2*GaugeXi[Z])*
       (-3*2^(1 + d)*Pi^d*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*
         (s + t) + (mz^2*(2*Pi)^d*(d*s*(-9 + 60*sw^2 - 96*sw^4) + 
           6*s*(9 - 60*sw^2 + 148*sw^4 - 160*sw^6 + 128*sw^8) + 
           2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t))/s + 
        (2*Pi)^d*(24*s*sw^4*(13 - 40*sw^2 + 32*sw^4) + 
          3*d*s*(3 - 20*sw^2 + 32*sw^4) + 4*(9 - 60*sw^2 + 200*sw^4 - 
            320*sw^6 + 256*sw^8)*t) + 3*2^(1 + d)*mz^2*Pi^d*
         (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*GaugeXi[Z] - 
        (mz^2*GaugeXi[Z]*(3*d*s*(3*(2*Pi)^d + 2^(2 + d)*Pi^d*sw^2*
              (-5 + 8*sw^2)) + 2^(1 + d)*Pi^d*(12*s*sw^4*(13 - 40*sw^2 + 32*
                sw^4) + (-9 + 60*sw^2 - 200*sw^4 + 320*sw^6 - 256*sw^8)*t) - 
           2^(1 + d)*Pi^d*(24*s*sw^4*(13 - 40*sw^2 + 32*sw^4) + 
             3*d*s*(3 - 20*sw^2 + 32*sw^4) - 2*(9 - 60*sw^2 + 200*sw^4 - 320*
                sw^6 + 256*sw^8)*t)*GaugeXi[Z] + 
           (3*d*s*(3*(2*Pi)^d + 2^(2 + d)*Pi^d*sw^2*(-5 + 8*sw^2)) + 
             2^(1 + d)*Pi^d*(12*s*sw^4*(13 - 40*sw^2 + 32*sw^4) + 
               (-9 + 60*sw^2 - 200*sw^4 + 320*sw^6 - 256*sw^8)*t))*
            GaugeXi[Z]^2))/(s*(-1 + GaugeXi[Z])^2))))/
    (mz^4*Pi^(2*d)*sw^4*(-1 + sw^2)^2), 
   ((-I/27)*2^(-7 - 2*d)*EL^6*(3*2^(1 + d)*Pi^d*(mz^2 - s)*
       (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8) - 
      3*2^(1 + d)*Pi^d*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t + 
      (2^(1 + d)*mz^2*Pi^d*(d*s*(-9 + 60*sw^2 - 96*sw^4) + 
         6*s*(9 - 60*sw^2 + 148*sw^4 - 160*sw^6 + 128*sw^8) + 
         2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t))/s + 
      (2*Pi)^d*(24*s*sw^4*(13 - 40*sw^2 + 32*sw^4) + 
        3*d*s*(3 - 20*sw^2 + 32*sw^4) + 4*(9 - 60*sw^2 + 200*sw^4 - 
          320*sw^6 + 256*sw^8)*t) + 
      (mz^2*(2*Pi)^d*(d*s*(-9 + 60*sw^2 - 96*sw^4) + 
         6*s*(9 - 60*sw^2 + 148*sw^4 - 160*sw^6 + 128*sw^8) + 
         2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t)*GaugeXi[Z])/s + 
      (2^(1 + d)*Pi^d*(d*(9 - 60*sw^2 + 96*sw^4) - 
         4*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8))*(s + t)*
        (mz^2 + s - mz^2*GaugeXi[Z]))/s - 
      (2^(1 + d)*Pi^d*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*
        ((-4 + 3*d)*mz^2 - d*s + d*mz^2*GaugeXi[Z]))/(-1 + d) - 
      (2^(2 + d)*Pi^d*(s*(d*(9 - 60*sw^2 + 96*sw^4) - 
           4*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8))*(s + t) + 
         mz^2*(2*s*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8) + 
           d*(9 - 60*sw^2 + 96*sw^4)*t + 2*(-9 + 60*sw^2 - 44*sw^4 - 
             160*sw^6 + 128*sw^8)*t) - mz^2*(d*(9 - 60*sw^2 + 96*sw^4) - 
           4*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8))*(s + t)*
          GaugeXi[Z]))/s - 
      (mz^2*(3*d*s*(3*(2*Pi)^d + 2^(2 + d)*Pi^d*sw^2*(-5 + 8*sw^2)) + 
         2^(1 + d)*Pi^d*(12*s*sw^4*(13 - 40*sw^2 + 32*sw^4) + 
           (-9 + 60*sw^2 - 200*sw^4 + 320*sw^6 - 256*sw^8)*t) - 
         2^(1 + d)*Pi^d*(24*s*sw^4*(13 - 40*sw^2 + 32*sw^4) + 
           3*d*s*(3 - 20*sw^2 + 32*sw^4) - 2*(9 - 60*sw^2 + 200*sw^4 - 
             320*sw^6 + 256*sw^8)*t)*GaugeXi[Z] + 
         (3*d*s*(3*(2*Pi)^d + 2^(2 + d)*Pi^d*sw^2*(-5 + 8*sw^2)) + 
           2^(1 + d)*Pi^d*(12*s*sw^4*(13 - 40*sw^2 + 32*sw^4) + 
             (-9 + 60*sw^2 - 200*sw^4 + 320*sw^6 - 256*sw^8)*t))*
          GaugeXi[Z]^2))/(s*(-1 + GaugeXi[Z])^2) - 
      ((s*(2*s - d*s + 2*t) + mz^2*(-2*s + 3*d*s + 2*t) + 
         mz^2*((-2 + d)*s - 2*t)*GaugeXi[Z])*(-9*d*(2*Pi)^d*s + 
         2^(1 + d)*Pi^d*(2*s*(9 + 15*(-4 + d)*sw^2 + (122 - 24*d)*sw^4 - 
             80*sw^6 + 64*sw^8) + (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
             256*sw^8)*t) + 2^(1 + d)*Pi^d*(d*s*(9 - 60*sw^2 + 96*sw^4) - 
           4*s*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8) - 
           2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t)*GaugeXi[Z] + 
         (-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(2*s*(9 + 15*(-4 + d)*sw^2 + 
               (122 - 24*d)*sw^4 - 80*sw^6 + 64*sw^8) + 
             (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t))*
          GaugeXi[Z]^2))/((-1 + d)*s^2*(-1 + GaugeXi[Z])^2) + 
      (2*mz^2*(9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
          (3*s*(9 - 60*sw^2 + 148*sw^4 - 160*sw^6 + 128*sw^8 + 
             d*(-3 + 10*sw^2 - 16*sw^4)) + (9 - 60*sw^2 + 200*sw^4 - 
             320*sw^6 + 256*sw^8)*t) + 2^(1 + d)*Pi^d*
          (d*s*(9 - 60*sw^2 + 96*sw^4) - 6*s*(9 - 60*sw^2 + 148*sw^4 - 
             160*sw^6 + 128*sw^8) - 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
             256*sw^8)*t)*GaugeXi[Z] + (9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (3*s*(9 - 60*sw^2 + 148*sw^4 - 160*sw^6 + 128*sw^8 + d*
                (-3 + 10*sw^2 - 16*sw^4)) + (9 - 60*sw^2 + 200*sw^4 - 320*
                sw^6 + 256*sw^8)*t))*GaugeXi[Z]^2))/(s*(-1 + GaugeXi[Z])^2) - 
      (mz^2*(-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
           (3*s*(-9 + 60*sw^2 - 148*sw^4 + 160*sw^6 - 128*sw^8 + 
              d*(3 - 10*sw^2 + 16*sw^4)) + (-9 + 60*sw^2 - 200*sw^4 + 
              320*sw^6 - 256*sw^8)*t)) + s*(-9*d*(2*Pi)^d*s + 
          2^(1 + d)*Pi^d*(3*s*(9 + 10*(-6 + d)*sw^2 - 4*(-37 + 4*d)*sw^4 - 
              160*sw^6 + 128*sw^8) + (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
              256*sw^8)*t)) + 
        (2^(1 + d)*Pi^d*s*(d*s*(9 - 60*sw^2 + 96*sw^4) - 
            6*s*(9 - 60*sw^2 + 148*sw^4 - 160*sw^6 + 128*sw^8) - 
            2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t) + 
          mz^2*(-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(3*s*(9 + 10*(-6 + d)*sw^2 - 
                4*(-37 + 4*d)*sw^4 - 160*sw^6 + 128*sw^8) + (9 - 60*sw^2 + 
                200*sw^4 - 320*sw^6 + 256*sw^8)*t)))*GaugeXi[Z] - 
        (mz^2 + s)*(9*d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*
           (3*s*(9 + 10*(-6 + d)*sw^2 - 4*(-37 + 4*d)*sw^4 - 160*sw^6 + 
              128*sw^8) + (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t))*
         GaugeXi[Z]^2 + mz^2*(-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
           (3*s*(-9 + 60*sw^2 - 148*sw^4 + 160*sw^6 - 128*sw^8 + 
              d*(3 - 10*sw^2 + 16*sw^4)) + (-9 + 60*sw^2 - 200*sw^4 + 
              320*sw^6 - 256*sw^8)*t))*GaugeXi[Z]^3)/
       (s*(-1 + GaugeXi[Z])^2)))/(mz^4*Pi^(2*d)*sw^4*(-1 + sw^2)^2), 
   ((I/27)*2^(-7 - 2*d)*EL^6*
     ((2^(1 + d)*Pi^d*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*
        (d*(mz^2 - s)^2 + 2*((-2 + d)*mz^4 - d*mz^2*s)*GaugeXi[Z] + 
         d*mz^4*GaugeXi[Z]^2))/(-1 + d) + 
      (((mz^2 - s)^2*((-2 + d)*s - 2*t) + 2*mz^2*(d*(mz^2 - s)*s + 
           2*(s^2 + mz^2*t + s*t))*GaugeXi[Z] + mz^4*((-2 + d)*s - 2*t)*
          GaugeXi[Z]^2)*(-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
          (2*s*(9 + 15*(-4 + d)*sw^2 + (122 - 24*d)*sw^4 - 80*sw^6 + 
             64*sw^8) + (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t) + 
         2^(1 + d)*Pi^d*(d*s*(9 - 60*sw^2 + 96*sw^4) - 
           4*s*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8) - 
           2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t)*GaugeXi[Z] + 
         (-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(2*s*(9 + 15*(-4 + d)*sw^2 + 
               (122 - 24*d)*sw^4 - 80*sw^6 + 64*sw^8) + 
             (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t))*
          GaugeXi[Z]^2))/((-1 + d)*s^2*(-1 + GaugeXi[Z])^2) + 
      ((mz^2 - s + mz^2*GaugeXi[Z])*(mz^2*(-9*d*(2*Pi)^d*s + 
           2^(1 + d)*Pi^d*(3*s*(-9 + 60*sw^2 - 148*sw^4 + 160*sw^6 - 128*
                sw^8 + d*(3 - 10*sw^2 + 16*sw^4)) + (-9 + 60*sw^2 - 200*
                sw^4 + 320*sw^6 - 256*sw^8)*t)) + 
         s*(-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(3*s*(9 + 10*(-6 + d)*sw^2 - 4*
                (-37 + 4*d)*sw^4 - 160*sw^6 + 128*sw^8) + 
             (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t)) + 
         (2^(1 + d)*Pi^d*s*(d*s*(9 - 60*sw^2 + 96*sw^4) - 
             6*s*(9 - 60*sw^2 + 148*sw^4 - 160*sw^6 + 128*sw^8) - 
             2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t) + 
           mz^2*(-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(3*s*(9 + 10*(-6 + d)*
                  sw^2 - 4*(-37 + 4*d)*sw^4 - 160*sw^6 + 128*sw^8) + 
               (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t)))*
          GaugeXi[Z] - (mz^2 + s)*(9*d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*
            (3*s*(9 + 10*(-6 + d)*sw^2 - 4*(-37 + 4*d)*sw^4 - 160*sw^6 + 128*
                sw^8) + (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t))*
          GaugeXi[Z]^2 + mz^2*(-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (3*s*(-9 + 60*sw^2 - 148*sw^4 + 160*sw^6 - 128*sw^8 + d*
                (3 - 10*sw^2 + 16*sw^4)) + (-9 + 60*sw^2 - 200*sw^4 + 320*
                sw^6 - 256*sw^8)*t))*GaugeXi[Z]^3))/(s*(-1 + GaugeXi[Z])^2) - 
      (2*(mz^4*(9*d*(2*Pi)^d - 2^(2 + d)*Pi^d*(9 + 15*(-4 + d)*sw^2 + 
             (122 - 24*d)*sw^4 - 80*sw^6 + 64*sw^8))*(s + t) + 
         s^2*(9*d*(2*Pi)^d*(s + 3*t) - 2^(1 + d)*Pi^d*
            (2*s*(9 + 15*(-4 + d)*sw^2 + (122 - 24*d)*sw^4 - 80*sw^6 + 64*
                sw^8) + (d*(9 + 30*sw^2 - 48*sw^4) + 2*(9 - 60*sw^2 + 
                 122*sw^4 - 80*sw^6 + 64*sw^8))*t)) + 
         2*mz^2*(9*d*(2*Pi)^d*s*((-5 + d)*s - 11*t) + 2^(1 + d)*Pi^d*
            (2*s^2*(18 - 15*(8 - 5*d + d^2)*sw^2 + 2*(83 - 47*d + 12*d^2)*
                sw^4 - 80*(-1 + d)*sw^6 + 64*(-1 + d)*sw^8) + 
             s*(-66*d*sw^2*(-5 + 8*sw^2) + d^2*(9 - 60*sw^2 + 96*sw^4) + 10*
                (9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8))*t + 
             2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^2)) - 
         2*(s^2*(9*d*(2*Pi)^d - 2^(2 + d)*Pi^d*(9 + 15*(-4 + d)*sw^2 + 
               (122 - 24*d)*sw^4 - 80*sw^6 + 64*sw^8))*(s + t) + 
           mz^4*(9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-9 - 30*(-2 + d)*sw^2 + 
                 (-44 + 48*d)*sw^4 - 160*sw^6 + 128*sw^8) + 3*(-3 + d)*
                (3 - 20*sw^2 + 32*sw^4)*t)) + 
           mz^2*(-27*d*(2*Pi)^d*s*(3*s + 7*t) + 2^(1 + d)*Pi^d*
              (s^2*(d^2*(9 - 60*sw^2 + 96*sw^4) - 6*(-9 + 60*sw^2 - 70*sw^4 - 
                   80*sw^6 + 64*sw^8) + d*(270*sw^2 - 328*sw^4 - 320*sw^6 + 
                   256*sw^8)) + 6*s*(-21*d*sw^2*(-5 + 8*sw^2) + 
                 d^2*(3 - 20*sw^2 + 32*sw^4) + 3*(9 - 60*sw^2 + 122*sw^4 - 
                   80*sw^6 + 64*sw^8))*t + 4*(9 - 60*sw^2 + 200*sw^4 - 
                 320*sw^6 + 256*sw^8)*t^2)))*GaugeXi[Z] + 
         (-4*s^3*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*sw^2*(-30 + 61*sw^2 - 40*sw^4 + 
               32*sw^6)) + 3*2^(1 + d)*d^2*mz^2*Pi^d*s*(3 - 20*sw^2 + 
             32*sw^4)*(s + 2*t) - 4*s^2*(3*2^(2 + d)*mz^2*Pi^d*sw^4*
              (13 - 40*sw^2 + 32*sw^4) + 9*(2*Pi)^d*t + 2^(1 + d)*Pi^d*sw^2*
              (-30 + 61*sw^2 - 40*sw^4 + 32*sw^6)*t) + 3*2^(3 + d)*mz^2*Pi^d*
            s*(mz^2*(26*sw^4 - 80*sw^6 + 64*sw^8) + (9 - 60*sw^2 + 122*sw^4 - 
               80*sw^6 + 64*sw^8)*t) + 2^(3 + d)*mz^2*Pi^d*t*
            (2*mz^2*(-9 + 60*sw^2 - 83*sw^4 - 40*sw^6 + 32*sw^8) + 
             (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t) + 
           d*(3*2^(1 + d)*mz^4*Pi^d*(3 - 20*sw^2 + 32*sw^4)*(s + 3*t) + 
             3*s^2*(3*(2*Pi)^d*s + 2^(2 + d)*Pi^d*s*sw^2*(-5 + 8*sw^2) + 9*
                (2*Pi)^d*t + 2^(1 + d)*Pi^d*(-3 - 10*sw^2 + 16*sw^4)*t) + 
             2^(1 + d)*mz^2*Pi^d*s*(s*(-27 + 180*sw^2 - 184*sw^4 - 320*sw^6 + 
                 256*sw^8) - 27*(3 - 20*sw^2 + 32*sw^4)*t)))*GaugeXi[Z]^2 - 
         2*(mz^2*s*(9*d*(2*Pi)^d - 2^(2 + d)*Pi^d*(9 + 15*(-4 + d)*sw^2 + 
               (122 - 24*d)*sw^4 - 80*sw^6 + 64*sw^8))*(s + t) + 
           mz^4*(9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-9 - 30*(-2 + d)*sw^2 + 
                 (-44 + 48*d)*sw^4 - 160*sw^6 + 128*sw^8) + 3*(-3 + d)*
                (3 - 20*sw^2 + 32*sw^4)*t)))*GaugeXi[Z]^3 + 
         mz^4*(9*d*(2*Pi)^d - 2^(2 + d)*Pi^d*(9 + 15*(-4 + d)*sw^2 + 
             (122 - 24*d)*sw^4 - 80*sw^6 + 64*sw^8))*(s + t)*GaugeXi[Z]^4))/
       (s*(-1 + GaugeXi[Z])^2) - (mz^2 - s + mz^2*GaugeXi[Z])*
       (3*2^(1 + d)*Pi^d*(mz^2 - s)*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
          256*sw^8) - 3*2^(1 + d)*Pi^d*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
          256*sw^8)*t + (2*Pi)^d*(24*s*sw^4*(13 - 40*sw^2 + 32*sw^4) + 
          3*d*s*(3 - 20*sw^2 + 32*sw^4) + 4*(9 - 60*sw^2 + 200*sw^4 - 
            320*sw^6 + 256*sw^8)*t) + 
        (mz^2*(2*Pi)^d*(d*s*(-9 + 60*sw^2 - 96*sw^4) + 
           6*s*(9 - 60*sw^2 + 148*sw^4 - 160*sw^6 + 128*sw^8) + 
           2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t)*GaugeXi[Z])/
         s - (mz^2*(3*d*s*(3*(2*Pi)^d + 2^(2 + d)*Pi^d*sw^2*(-5 + 8*sw^2)) + 
           2^(1 + d)*Pi^d*(12*s*sw^4*(13 - 40*sw^2 + 32*sw^4) + 
             (-9 + 60*sw^2 - 200*sw^4 + 320*sw^6 - 256*sw^8)*t) - 
           2^(1 + d)*Pi^d*(24*s*sw^4*(13 - 40*sw^2 + 32*sw^4) + 
             3*d*s*(3 - 20*sw^2 + 32*sw^4) - 2*(9 - 60*sw^2 + 200*sw^4 - 320*
                sw^6 + 256*sw^8)*t)*GaugeXi[Z] + 
           (3*d*s*(3*(2*Pi)^d + 2^(2 + d)*Pi^d*sw^2*(-5 + 8*sw^2)) + 
             2^(1 + d)*Pi^d*(12*s*sw^4*(13 - 40*sw^2 + 32*sw^4) + 
               (-9 + 60*sw^2 - 200*sw^4 + 320*sw^6 - 256*sw^8)*t))*
            GaugeXi[Z]^2))/(s*(-1 + GaugeXi[Z])^2))))/
    (mz^4*Pi^(2*d)*sw^4*(-1 + sw^2)^2), 
   ((I/27)*2^(-7 - 2*d)*EL^6*(9*d^2*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
          3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
            64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
          d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 
            64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*
         t^2))*(s - 4*mz^2*GaugeXi[Z]))/((-1 + d)*mz^4*Pi^(2*d)*s*sw^4*
     (-1 + sw^2)^2), ((-I/27)*2^(-7 - 2*d)*EL^6*
     ((2^(1 + d)*Pi^d*(4*(-1 + d)*mz^4 - 4*d*mz^2*s + d*s^2)*
        (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8))/((-1 + d)*mz^4) - 
      (4*(9*d^3*(2*Pi)^d + 2^(1 + d)*Pi^d*(6*d^3*sw^2*(-5 + 8*sw^2) - 
           18*d^2*(3 - 20*sw^2 + 32*sw^4) - 4*(63 - 420*sw^2 + 698*sw^4 - 
             80*sw^6 + 64*sw^8) + d*(207 - 1380*sw^2 + 2260*sw^4 - 160*sw^6 + 
             128*sw^8)))*(s + 2*t))/s + 2^(2 + d)*Pi^d*
       (-36*d^2*(3 - 20*sw^2 + 32*sw^4) + d^3*(9 - 60*sw^2 + 96*sw^4) - 
        8*(63 - 420*sw^2 + 698*sw^4 - 80*sw^6 + 64*sw^8) + 
        d*(414 - 2760*sw^2 + 4520*sw^4 - 320*sw^6 + 256*sw^8))*
       (-1 - (2*t)/s) + (2*(mz^2 - s/2)*(2^(1 + d)*mz^2*Pi^d*
          (d*s*(9 - 60*sw^2 + 96*sw^4) - 6*s*(9 - 60*sw^2 + 148*sw^4 - 
             160*sw^6 + 128*sw^8) - 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
             256*sw^8)*t) + s*(-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (3*s*(9 + 10*(-6 + d)*sw^2 - 4*(-37 + 4*d)*sw^4 - 160*sw^6 + 128*
                sw^8) + (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t))))/
       (mz^4*s) + ((4*(-1 + d)*mz^4 + s*((-2 + d)*s - 2*t) + 
         mz^2*(-4*(-2 + d)*s + 8*t))*(-9*d*(2*Pi)^d*s + 
         2^(1 + d)*Pi^d*(2*s*(9 + 15*(-4 + d)*sw^2 + (122 - 24*d)*sw^4 - 
             80*sw^6 + 64*sw^8) + (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
             256*sw^8)*t) + 2^(1 + d)*Pi^d*(d*s*(9 - 60*sw^2 + 96*sw^4) - 
           4*s*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8) - 
           2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t)*GaugeXi[Z] + 
         (-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(2*s*(9 + 15*(-4 + d)*sw^2 + 
               (122 - 24*d)*sw^4 - 80*sw^6 + 64*sw^8) + 
             (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t))*
          GaugeXi[Z]^2))/((-1 + d)*mz^4*s*(-1 + GaugeXi[Z])^2) + 
      (2*(s^2*(-9*d*(2*Pi)^d*(s + 3*t) + 2^(1 + d)*Pi^d*
            (2*s*(9 + 15*(-4 + d)*sw^2 + (122 - 24*d)*sw^4 - 80*sw^6 + 64*
                sw^8) + (d*(9 + 30*sw^2 - 48*sw^4) + 2*(9 - 60*sw^2 + 
                 122*sw^4 - 80*sw^6 + 64*sw^8))*t)) + 
         2*mz^4*(9*d*(87 + d^2)*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (s*(-549 + 3660*sw^2 - 6116*sw^4 + 800*sw^6 - 640*sw^8 + 6*d^3*
                sw^2*(-5 + 8*sw^2) - 27*d^2*(3 - 20*sw^2 + 32*sw^4) + 6*d*
                sw^2*(-435 + 722*sw^2 - 80*sw^4 + 64*sw^6)) + 
             (-495 + 3300*sw^2 - 5384*sw^4 + 320*sw^6 - 256*sw^8 - 36*d^2*
                (3 - 20*sw^2 + 32*sw^4) + d^3*(9 - 60*sw^2 + 96*sw^4) + d*
                (414 - 2760*sw^2 + 4520*sw^4 - 320*sw^6 + 256*sw^8))*t)) - 
         4*mz^2*(9*d*(2*Pi)^d*s*((-5 + d)*s - 11*t) + 2^(1 + d)*Pi^d*
            (2*s^2*(18 - 15*(8 - 5*d + d^2)*sw^2 + 2*(83 - 47*d + 12*d^2)*
                sw^4 - 80*(-1 + d)*sw^6 + 64*(-1 + d)*sw^8) + 
             s*(-66*d*sw^2*(-5 + 8*sw^2) + d^2*(9 - 60*sw^2 + 96*sw^4) + 10*
                (9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8))*t + 
             2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^2)) - 
         2*(-(s^2*(9*d*(2*Pi)^d - 2^(2 + d)*Pi^d*(9 + 15*(-4 + d)*sw^2 + 
                (122 - 24*d)*sw^4 - 80*sw^6 + 64*sw^8))*(s + t)) + 
           2*mz^4*(9*d*(87 + d^2)*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
              (s*(-549 + 3660*sw^2 - 6116*sw^4 + 800*sw^6 - 640*sw^8 + 
                 6*d^3*sw^2*(-5 + 8*sw^2) - 27*d^2*(3 - 20*sw^2 + 32*sw^4) + 
                 6*d*sw^2*(-435 + 722*sw^2 - 80*sw^4 + 64*sw^6)) + 
               (-495 + 3300*sw^2 - 5384*sw^4 + 320*sw^6 - 256*sw^8 - 
                 36*d^2*(3 - 20*sw^2 + 32*sw^4) + d^3*(9 - 60*sw^2 + 
                   96*sw^4) + d*(414 - 2760*sw^2 + 4520*sw^4 - 320*sw^6 + 
                   256*sw^8))*t)) - 4*mz^2*(9*d*(2*Pi)^d*s*((-5 + d)*s - 11*
                t) + 2^(1 + d)*Pi^d*(2*s^2*(18 - 15*(8 - 5*d + d^2)*sw^2 + 
                 2*(83 - 47*d + 12*d^2)*sw^4 - 80*(-1 + d)*sw^6 + 
                 64*(-1 + d)*sw^8) + s*(-66*d*sw^2*(-5 + 8*sw^2) + 
                 d^2*(9 - 60*sw^2 + 96*sw^4) + 10*(9 - 60*sw^2 + 122*sw^4 - 
                   80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 
                 320*sw^6 + 256*sw^8)*t^2)))*GaugeXi[Z] + 
         (s^2*(-9*d*(2*Pi)^d*(s + 3*t) + 2^(1 + d)*Pi^d*
              (2*s*(9 + 15*(-4 + d)*sw^2 + (122 - 24*d)*sw^4 - 80*sw^6 + 
                 64*sw^8) + (d*(9 + 30*sw^2 - 48*sw^4) + 2*(9 - 60*sw^2 + 
                   122*sw^4 - 80*sw^6 + 64*sw^8))*t)) + 
           2*mz^4*(9*d*(87 + d^2)*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
              (s*(-549 + 3660*sw^2 - 6116*sw^4 + 800*sw^6 - 640*sw^8 + 
                 6*d^3*sw^2*(-5 + 8*sw^2) - 27*d^2*(3 - 20*sw^2 + 32*sw^4) + 
                 6*d*sw^2*(-435 + 722*sw^2 - 80*sw^4 + 64*sw^6)) + 
               (-495 + 3300*sw^2 - 5384*sw^4 + 320*sw^6 - 256*sw^8 - 
                 36*d^2*(3 - 20*sw^2 + 32*sw^4) + d^3*(9 - 60*sw^2 + 
                   96*sw^4) + d*(414 - 2760*sw^2 + 4520*sw^4 - 320*sw^6 + 
                   256*sw^8))*t)) - 4*mz^2*(9*d*(2*Pi)^d*s*((-5 + d)*s - 11*
                t) + 2^(1 + d)*Pi^d*(2*s^2*(18 - 15*(8 - 5*d + d^2)*sw^2 + 
                 2*(83 - 47*d + 12*d^2)*sw^4 - 80*(-1 + d)*sw^6 + 
                 64*(-1 + d)*sw^8) + s*(-66*d*sw^2*(-5 + 8*sw^2) + 
                 d^2*(9 - 60*sw^2 + 96*sw^4) + 10*(9 - 60*sw^2 + 122*sw^4 - 
                   80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 
                 320*sw^6 + 256*sw^8)*t^2)))*GaugeXi[Z]^2))/
       (mz^4*s*(-1 + GaugeXi[Z])^2) - 
      (2*(mz^2 - s/2)*(3*2^(1 + d)*Pi^d*(mz^2 - s)*(9 - 60*sw^2 + 200*sw^4 - 
           320*sw^6 + 256*sw^8) - 3*2^(1 + d)*Pi^d*(9 - 60*sw^2 + 200*sw^4 - 
           320*sw^6 + 256*sw^8)*t - (mz^2*(2*Pi)^d*
           (d*s*(9 - 60*sw^2 + 96*sw^4) - 6*s*(9 - 60*sw^2 + 148*sw^4 - 
              160*sw^6 + 128*sw^8) - 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
              256*sw^8)*t))/s + (2*Pi)^d*(24*s*sw^4*(13 - 40*sw^2 + 
             32*sw^4) + 3*d*s*(3 - 20*sw^2 + 32*sw^4) + 
           4*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t) - 
         (mz^2*(3*d*s*(3*(2*Pi)^d + 2^(2 + d)*Pi^d*sw^2*(-5 + 8*sw^2)) + 
            2^(1 + d)*Pi^d*(12*s*sw^4*(13 - 40*sw^2 + 32*sw^4) + 
              (-9 + 60*sw^2 - 200*sw^4 + 320*sw^6 - 256*sw^8)*t) - 
            2^(1 + d)*Pi^d*(24*s*sw^4*(13 - 40*sw^2 + 32*sw^4) + 
              3*d*s*(3 - 20*sw^2 + 32*sw^4) - 2*(9 - 60*sw^2 + 200*sw^4 - 
                320*sw^6 + 256*sw^8)*t)*GaugeXi[Z] + 
            (3*d*s*(3*(2*Pi)^d + 2^(2 + d)*Pi^d*sw^2*(-5 + 8*sw^2)) + 
              2^(1 + d)*Pi^d*(12*s*sw^4*(13 - 40*sw^2 + 32*sw^4) + 
                (-9 + 60*sw^2 - 200*sw^4 + 320*sw^6 - 256*sw^8)*t))*
             GaugeXi[Z]^2))/(s*(-1 + GaugeXi[Z])^2)))/mz^4))/
    (Pi^(2*d)*sw^4*(-1 + sw^2)^2), ((-I/27)*2^(-5 - 2*d)*EL^6*
     (9*d^3*(2*Pi)^d*s^2 - 2^(1 + d)*mz^2*Pi^d*s*
       (-54*d^2*(3 - 20*sw^2 + 32*sw^4) + d^3*(9 - 60*sw^2 + 96*sw^4) - 
        64*(18 - 120*sw^2 + 205*sw^4 - 40*sw^6 + 32*sw^8) + 
        24*d*(33 - 220*sw^2 + 365*sw^4 - 40*sw^6 + 32*sw^8)) + 
      2^(1 + d)*Pi^d*(3*s^2*(2*d^3*sw^2*(-5 + 8*sw^2) - 
          72*(3 - 20*sw^2 + 32*sw^4) - 9*d^2*(3 - 20*sw^2 + 32*sw^4) + 
          4*d*(36 - 240*sw^2 + 397*sw^4 - 40*sw^6 + 32*sw^8)) + 
        12*s*(8*sw^4*(13 - 40*sw^2 + 32*sw^4) + d*(3 - 20*sw^2 + 32*sw^4))*
         t + 8*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^2)))/
    (Pi^(2*d)*s*sw^4*(-1 + sw^2)^2), 0, 
   ((-I/27)*2^(-5 - 2*d)*EL^6*(-9*d^3*(2*Pi)^d*s*(s - t) + 
      2^(1 + d)*Pi^d*(s^2*(-9*d^2*(3 - 20*sw^2 + 32*sw^4) + 
          d^3*(9 - 30*sw^2 + 48*sw^4) - 2*d*(-9 + 60*sw^2 - 70*sw^4 - 
            80*sw^6 + 64*sw^8) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 
            64*sw^8)) + s*(9*d^3*(1 - 10*sw^2 + 16*sw^4) - 
          144*(3 - 20*sw^2 + 32*sw^4) - 45*d^2*(3 - 20*sw^2 + 32*sw^4) + 
          4*d*(108 - 720*sw^2 + 1165*sw^4 - 40*sw^6 + 32*sw^8))*t + 
        (-36*d^2*(3 - 20*sw^2 + 32*sw^4) + d^3*(9 - 60*sw^2 + 96*sw^4) - 
          8*(63 - 420*sw^2 + 698*sw^4 - 80*sw^6 + 64*sw^8) + 
          d*(414 - 2760*sw^2 + 4520*sw^4 - 320*sw^6 + 256*sw^8))*t^2)))/
    (Pi^(2*d)*s*sw^4*(-1 + sw^2)^2*(s + t)), 0, 
   ((-I/27)*2^(-5 - 2*d)*EL^6*(-9*d^3*(2*Pi)^d*s*(s^2 + t^2) + 
      2^(1 + d)*Pi^d*(s^3*(-6*d^3*sw^2*(-5 + 8*sw^2) + 
          33*d^2*(3 - 20*sw^2 + 32*sw^4) + 4*d*(-126 + 840*sw^2 - 1331*sw^4 - 
            40*sw^6 + 32*sw^8) - 16*(-45 + 300*sw^2 - 454*sw^4 - 80*sw^6 + 
            64*sw^8)) + s^2*(d^3*(-9 + 60*sw^2 - 96*sw^4) + 
          78*d^2*(3 - 20*sw^2 + 32*sw^4) + 8*d*(-153 + 1020*sw^2 - 
            1619*sw^4 - 40*sw^6 + 32*sw^8) - 96*(-18 + 120*sw^2 - 179*sw^4 - 
            40*sw^6 + 32*sw^8))*t + s*(-6*d^3*sw^2*(-5 + 8*sw^2) + 
          57*d^2*(3 - 20*sw^2 + 32*sw^4) + 4*d*(-234 + 1560*sw^2 - 
            2483*sw^4 - 40*sw^6 + 32*sw^8) - 48*(-27 + 180*sw^2 - 262*sw^4 - 
            80*sw^6 + 64*sw^8))*t^2 + 4*(-18*d*(3 - 20*sw^2 + 32*sw^4) + 
          d^2*(9 - 60*sw^2 + 96*sw^4) - 8*(-9 + 60*sw^2 - 83*sw^4 - 40*sw^6 + 
            32*sw^8))*t^3) + 4*mz^2*(9*d^3*(2*Pi)^d*(s^2 + t^2) + 
        2^(1 + d)*Pi^d*(s^2*(6*d^3*sw^2*(-5 + 8*sw^2) - 
            18*d^2*(3 - 20*sw^2 + 32*sw^4) - 4*(63 - 420*sw^2 + 698*sw^4 - 
              80*sw^6 + 64*sw^8) + d*(207 - 1380*sw^2 + 2260*sw^4 - 
              160*sw^6 + 128*sw^8)) + s*(-36*d^2*(3 - 20*sw^2 + 32*sw^4) + 
            d^3*(9 - 60*sw^2 + 96*sw^4) - 8*(63 - 420*sw^2 + 698*sw^4 - 
              80*sw^6 + 64*sw^8) + d*(414 - 2760*sw^2 + 4520*sw^4 - 
              320*sw^6 + 256*sw^8))*t + (6*d^3*sw^2*(-5 + 8*sw^2) - 
            18*d^2*(3 - 20*sw^2 + 32*sw^4) - 4*(63 - 420*sw^2 + 698*sw^4 - 
              80*sw^6 + 64*sw^8) + d*(207 - 1380*sw^2 + 2260*sw^4 - 
              160*sw^6 + 128*sw^8))*t^2))))/(Pi^(2*d)*s*sw^4*(-1 + sw^2)^2*
     (s + t)), 0, ((-I/27)*4^(-3 - d)*EL^6*(-9*d^3*(2*Pi)^d*s^2*(s + 3*t) + 
      2^(1 + d)*Pi^d*(3*s^3*(d^3*(3 - 10*sw^2 + 16*sw^4) - 
          72*(3 - 20*sw^2 + 32*sw^4) - 9*d^2*(3 - 20*sw^2 + 32*sw^4) + 
          4*d*(36 - 240*sw^2 + 397*sw^4 - 40*sw^6 + 32*sw^8)) + 
        3*s^2*(2*d^3*(3 - 5*sw^2 + 8*sw^4) - 9*d^2*(3 - 20*sw^2 + 32*sw^4) + 
          4*d*(39 - 260*sw^2 + 429*sw^4 - 40*sw^6 + 32*sw^8) + 
          8*(-27 + 180*sw^2 - 236*sw^4 - 160*sw^6 + 128*sw^8))*t + 
        4*s*(d*(9 - 60*sw^2 + 96*sw^4) + 2*(9 - 60*sw^2 + 356*sw^4 - 
            800*sw^6 + 640*sw^8))*t^2 + 8*(9 - 60*sw^2 + 200*sw^4 - 
          320*sw^6 + 256*sw^8)*t^3) - 4*mz^2*(s + t)*(9*d^3*(2*Pi)^d*s + 
        2^(2 + d)*Pi^d*(s*(3*d^3*sw^2*(-5 + 8*sw^2) - 
            108*(3 - 20*sw^2 + 32*sw^4) - 15*d^2*(3 - 20*sw^2 + 32*sw^4) + 
            d*(225 - 1500*sw^2 + 2426*sw^4 - 80*sw^6 + 64*sw^8)) + 
          (d^2*(-9 + 60*sw^2 - 96*sw^4) + 18*d*(3 - 20*sw^2 + 32*sw^4) + 
            8*(-9 + 60*sw^2 - 83*sw^4 - 40*sw^6 + 32*sw^8))*t)) + 
      2*mz^4*(27*d^3*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
         (s*(18*d^3*sw^2*(-5 + 8*sw^2) - 63*d^2*(3 - 20*sw^2 + 32*sw^4) - 
            24*(45 - 300*sw^2 + 506*sw^4 - 80*sw^6 + 64*sw^8) + 
            10*d*(81 - 540*sw^2 + 890*sw^4 - 80*sw^6 + 64*sw^8)) + 
          (-36*d^2*(3 - 20*sw^2 + 32*sw^4) + d^3*(9 - 60*sw^2 + 96*sw^4) - 
            8*(63 - 420*sw^2 + 698*sw^4 - 80*sw^6 + 64*sw^8) + 
            d*(414 - 2760*sw^2 + 4520*sw^4 - 320*sw^6 + 256*sw^8))*t))))/
    (Pi^(2*d)*s*sw^4*(-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
  {0, 0, 0, ((I/27)*2^(-10 - d)*EL^6*
     (s^2*(3*d^2*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 
          32*sw^6*(-5 + 8*swC^2) - 20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
          4*sw^4*(37 - 100*swC^2 + 64*swC^4)) - 
        4*(-9*(3 - 10*swC^2 + 8*swC^4) + 60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
          64*sw^8*(-3 - 10*swC^2 + 16*swC^4) - 32*sw^6*(-15 - 2*swC^2 + 
            40*swC^4) - 4*sw^4*(111 - 230*swC^2 + 88*swC^4)) + 
        4*d*(-9*(3 - 10*swC^2 + 8*swC^4) + 60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
          64*sw^8*(-3 - 5*swC^2 + 8*swC^4) - 32*sw^6*(-15 + 11*swC^2 + 
            20*swC^4) - 4*sw^4*(111 - 265*swC^2 + 140*swC^4))) + 
      2*s*(-15*d*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 
          32*sw^6*(-5 + 8*swC^2) - 20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
          4*sw^4*(37 - 100*swC^2 + 64*swC^4)) + 
        3*d^2*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 32*sw^6*(-5 + 8*swC^2) - 
          20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 4*sw^4*(37 - 100*swC^2 + 
            64*swC^4)) + 8*(9*(3 - 10*swC^2 + 8*swC^4) - 
          60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 64*sw^8*(3 - 5*swC^2 + 
            8*swC^4) - 32*sw^6*(15 - 37*swC^2 + 20*swC^4) + 
          4*sw^4*(111 - 335*swC^2 + 244*swC^4)))*t + 
      4*(9*(3 - 10*swC^2 + 8*swC^4) - 60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
        64*sw^8*(3 - 20*swC^2 + 32*swC^4) - 32*sw^6*(15 - 76*swC^2 + 
          80*swC^4) + 4*sw^4*(111 - 440*swC^2 + 400*swC^4))*t^2)*
     (-mz^2 + s + mz^2*GaugeXi[Z]))/(cwC^2*(-1 + d)*mz^4*Pi^d*(mz^2 - s)*s*
     sw^4*(-1 + sw^2)^2*swC^2), 0, 0, 0, 0, 
   ((I/27)*2^(-10 - d)*EL^6*
     (s^2*(3*d^2*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 
          32*sw^6*(-5 + 8*swC^2) - 20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
          4*sw^4*(37 - 100*swC^2 + 64*swC^4)) - 
        4*(-9*(3 - 10*swC^2 + 8*swC^4) + 60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
          64*sw^8*(-3 - 10*swC^2 + 16*swC^4) - 32*sw^6*(-15 - 2*swC^2 + 
            40*swC^4) - 4*sw^4*(111 - 230*swC^2 + 88*swC^4)) + 
        4*d*(-9*(3 - 10*swC^2 + 8*swC^4) + 60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
          64*sw^8*(-3 - 5*swC^2 + 8*swC^4) - 32*sw^6*(-15 + 11*swC^2 + 
            20*swC^4) - 4*sw^4*(111 - 265*swC^2 + 140*swC^4))) + 
      2*s*(-15*d*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 
          32*sw^6*(-5 + 8*swC^2) - 20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
          4*sw^4*(37 - 100*swC^2 + 64*swC^4)) + 
        3*d^2*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 32*sw^6*(-5 + 8*swC^2) - 
          20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 4*sw^4*(37 - 100*swC^2 + 
            64*swC^4)) + 8*(9*(3 - 10*swC^2 + 8*swC^4) - 
          60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 64*sw^8*(3 - 5*swC^2 + 
            8*swC^4) - 32*sw^6*(15 - 37*swC^2 + 20*swC^4) + 
          4*sw^4*(111 - 335*swC^2 + 244*swC^4)))*t + 
      4*(9*(3 - 10*swC^2 + 8*swC^4) - 60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
        64*sw^8*(3 - 20*swC^2 + 32*swC^4) - 32*sw^6*(15 - 76*swC^2 + 
          80*swC^4) + 4*sw^4*(111 - 440*swC^2 + 400*swC^4))*t^2)*
     (mz^2 + s - mz^2*GaugeXi[Z]))/(cwC^2*(-1 + d)*mz^4*Pi^d*(mz^2 - s)*s*
     sw^4*(-1 + sw^2)^2*swC^2), ((-I/27)*2^(-10 - d)*EL^6*
     (s^2*(3*d^2*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 
          32*sw^6*(-5 + 8*swC^2) - 20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
          4*sw^4*(37 - 100*swC^2 + 64*swC^4)) - 
        4*(-9*(3 - 10*swC^2 + 8*swC^4) + 60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
          64*sw^8*(-3 - 10*swC^2 + 16*swC^4) - 32*sw^6*(-15 - 2*swC^2 + 
            40*swC^4) - 4*sw^4*(111 - 230*swC^2 + 88*swC^4)) + 
        4*d*(-9*(3 - 10*swC^2 + 8*swC^4) + 60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
          64*sw^8*(-3 - 5*swC^2 + 8*swC^4) - 32*sw^6*(-15 + 11*swC^2 + 
            20*swC^4) - 4*sw^4*(111 - 265*swC^2 + 140*swC^4))) + 
      2*s*(-15*d*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 
          32*sw^6*(-5 + 8*swC^2) - 20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
          4*sw^4*(37 - 100*swC^2 + 64*swC^4)) + 
        3*d^2*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 32*sw^6*(-5 + 8*swC^2) - 
          20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 4*sw^4*(37 - 100*swC^2 + 
            64*swC^4)) + 8*(9*(3 - 10*swC^2 + 8*swC^4) - 
          60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 64*sw^8*(3 - 5*swC^2 + 
            8*swC^4) - 32*sw^6*(15 - 37*swC^2 + 20*swC^4) + 
          4*sw^4*(111 - 335*swC^2 + 244*swC^4)))*t + 
      4*(9*(3 - 10*swC^2 + 8*swC^4) - 60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
        64*sw^8*(3 - 20*swC^2 + 32*swC^4) - 32*sw^6*(15 - 76*swC^2 + 
          80*swC^4) + 4*sw^4*(111 - 440*swC^2 + 400*swC^4))*t^2)*
     (-mz^2 + s + mz^2*GaugeXi[Z]))/(cwC^2*(-1 + d)*mz^4*Pi^d*(mz^2 - s)*s*
     sw^4*(-1 + sw^2)^2*swC^2), ((I/27)*2^(-10 - d)*EL^6*
     (s^2*(3*d^2*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 
          32*sw^6*(-5 + 8*swC^2) - 20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
          4*sw^4*(37 - 100*swC^2 + 64*swC^4)) - 
        4*(-9*(3 - 10*swC^2 + 8*swC^4) + 60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
          64*sw^8*(-3 - 10*swC^2 + 16*swC^4) - 32*sw^6*(-15 - 2*swC^2 + 
            40*swC^4) - 4*sw^4*(111 - 230*swC^2 + 88*swC^4)) + 
        4*d*(-9*(3 - 10*swC^2 + 8*swC^4) + 60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
          64*sw^8*(-3 - 5*swC^2 + 8*swC^4) - 32*sw^6*(-15 + 11*swC^2 + 
            20*swC^4) - 4*sw^4*(111 - 265*swC^2 + 140*swC^4))) + 
      2*s*(-15*d*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 
          32*sw^6*(-5 + 8*swC^2) - 20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
          4*sw^4*(37 - 100*swC^2 + 64*swC^4)) + 
        3*d^2*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 32*sw^6*(-5 + 8*swC^2) - 
          20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 4*sw^4*(37 - 100*swC^2 + 
            64*swC^4)) + 8*(9*(3 - 10*swC^2 + 8*swC^4) - 
          60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 64*sw^8*(3 - 5*swC^2 + 
            8*swC^4) - 32*sw^6*(15 - 37*swC^2 + 20*swC^4) + 
          4*sw^4*(111 - 335*swC^2 + 244*swC^4)))*t + 
      4*(9*(3 - 10*swC^2 + 8*swC^4) - 60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
        64*sw^8*(3 - 20*swC^2 + 32*swC^4) - 32*sw^6*(15 - 76*swC^2 + 
          80*swC^4) + 4*sw^4*(111 - 440*swC^2 + 400*swC^4))*t^2)*
     (mz^4 + 2*(-3 + 2*d)*mz^2*s + s^2 - 2*mz^2*(mz^2 + s)*GaugeXi[Z] + 
      mz^4*GaugeXi[Z]^2))/(cwC^2*(-1 + d)*mz^4*Pi^d*(mz^2 - s)*s*sw^4*
     (-1 + sw^2)^2*swC^2), ((-I/27)*2^(-10 - d)*EL^6*
     (s^2*(3*d^2*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 
          32*sw^6*(-5 + 8*swC^2) - 20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
          4*sw^4*(37 - 100*swC^2 + 64*swC^4)) - 
        4*(-9*(3 - 10*swC^2 + 8*swC^4) + 60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
          64*sw^8*(-3 - 10*swC^2 + 16*swC^4) - 32*sw^6*(-15 - 2*swC^2 + 
            40*swC^4) - 4*sw^4*(111 - 230*swC^2 + 88*swC^4)) + 
        4*d*(-9*(3 - 10*swC^2 + 8*swC^4) + 60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
          64*sw^8*(-3 - 5*swC^2 + 8*swC^4) - 32*sw^6*(-15 + 11*swC^2 + 
            20*swC^4) - 4*sw^4*(111 - 265*swC^2 + 140*swC^4))) + 
      2*s*(-15*d*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 
          32*sw^6*(-5 + 8*swC^2) - 20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
          4*sw^4*(37 - 100*swC^2 + 64*swC^4)) + 
        3*d^2*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 32*sw^6*(-5 + 8*swC^2) - 
          20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 4*sw^4*(37 - 100*swC^2 + 
            64*swC^4)) + 8*(9*(3 - 10*swC^2 + 8*swC^4) - 
          60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 64*sw^8*(3 - 5*swC^2 + 
            8*swC^4) - 32*sw^6*(15 - 37*swC^2 + 20*swC^4) + 
          4*sw^4*(111 - 335*swC^2 + 244*swC^4)))*t + 
      4*(9*(3 - 10*swC^2 + 8*swC^4) - 60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
        64*sw^8*(3 - 20*swC^2 + 32*swC^4) - 32*sw^6*(15 - 76*swC^2 + 
          80*swC^4) + 4*sw^4*(111 - 440*swC^2 + 400*swC^4))*t^2)*
     (mz^2 + s - mz^2*GaugeXi[Z]))/(cwC^2*(-1 + d)*mz^4*Pi^d*(mz^2 - s)*s*
     sw^4*(-1 + sw^2)^2*swC^2), ((I/27)*2^(-10 - d)*EL^6*
     (s^2*(3*d^2*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 
          32*sw^6*(-5 + 8*swC^2) - 20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
          4*sw^4*(37 - 100*swC^2 + 64*swC^4)) - 
        4*(-9*(3 - 10*swC^2 + 8*swC^4) + 60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
          64*sw^8*(-3 - 10*swC^2 + 16*swC^4) - 32*sw^6*(-15 - 2*swC^2 + 
            40*swC^4) - 4*sw^4*(111 - 230*swC^2 + 88*swC^4)) + 
        4*d*(-9*(3 - 10*swC^2 + 8*swC^4) + 60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
          64*sw^8*(-3 - 5*swC^2 + 8*swC^4) - 32*sw^6*(-15 + 11*swC^2 + 
            20*swC^4) - 4*sw^4*(111 - 265*swC^2 + 140*swC^4))) + 
      2*s*(-15*d*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 
          32*sw^6*(-5 + 8*swC^2) - 20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
          4*sw^4*(37 - 100*swC^2 + 64*swC^4)) + 
        3*d^2*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 32*sw^6*(-5 + 8*swC^2) - 
          20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 4*sw^4*(37 - 100*swC^2 + 
            64*swC^4)) + 8*(9*(3 - 10*swC^2 + 8*swC^4) - 
          60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 64*sw^8*(3 - 5*swC^2 + 
            8*swC^4) - 32*sw^6*(15 - 37*swC^2 + 20*swC^4) + 
          4*sw^4*(111 - 335*swC^2 + 244*swC^4)))*t + 
      4*(9*(3 - 10*swC^2 + 8*swC^4) - 60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
        64*sw^8*(3 - 20*swC^2 + 32*swC^4) - 32*sw^6*(15 - 76*swC^2 + 
          80*swC^4) + 4*sw^4*(111 - 440*swC^2 + 400*swC^4))*t^2)*
     (mz^4 + 2*(-3 + 2*d)*mz^2*s + s^2 - 2*mz^2*(mz^2 + s)*GaugeXi[Z] + 
      mz^4*GaugeXi[Z]^2))/(cwC^2*(-1 + d)*mz^4*Pi^d*(mz^2 - s)*s*sw^4*
     (-1 + sw^2)^2*swC^2), ((-I/27)*2^(-10 - d)*EL^6*
     (s^2*(3*d^2*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 
          32*sw^6*(-5 + 8*swC^2) - 20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
          4*sw^4*(37 - 100*swC^2 + 64*swC^4)) - 
        4*(-9*(3 - 10*swC^2 + 8*swC^4) + 60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
          64*sw^8*(-3 - 10*swC^2 + 16*swC^4) - 32*sw^6*(-15 - 2*swC^2 + 
            40*swC^4) - 4*sw^4*(111 - 230*swC^2 + 88*swC^4)) + 
        4*d*(-9*(3 - 10*swC^2 + 8*swC^4) + 60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
          64*sw^8*(-3 - 5*swC^2 + 8*swC^4) - 32*sw^6*(-15 + 11*swC^2 + 
            20*swC^4) - 4*sw^4*(111 - 265*swC^2 + 140*swC^4))) + 
      2*s*(-15*d*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 
          32*sw^6*(-5 + 8*swC^2) - 20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
          4*sw^4*(37 - 100*swC^2 + 64*swC^4)) + 
        3*d^2*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 32*sw^6*(-5 + 8*swC^2) - 
          20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 4*sw^4*(37 - 100*swC^2 + 
            64*swC^4)) + 8*(9*(3 - 10*swC^2 + 8*swC^4) - 
          60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 64*sw^8*(3 - 5*swC^2 + 
            8*swC^4) - 32*sw^6*(15 - 37*swC^2 + 20*swC^4) + 
          4*sw^4*(111 - 335*swC^2 + 244*swC^4)))*t + 
      4*(9*(3 - 10*swC^2 + 8*swC^4) - 60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
        64*sw^8*(3 - 20*swC^2 + 32*swC^4) - 32*sw^6*(15 - 76*swC^2 + 
          80*swC^4) + 4*sw^4*(111 - 440*swC^2 + 400*swC^4))*t^2)*
     (s - 4*mz^2*GaugeXi[Z]))/(cwC^2*(-1 + d)*mz^4*Pi^d*(mz^2 - s)*sw^4*
     (-1 + sw^2)^2*swC^2), ((-I/27)*2^(-10 - d)*EL^6*
     (4*(-1 + d)*mz^4*(s*(-18*d^2*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 
            32*sw^6*(-5 + 8*swC^2) - 20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
            4*sw^4*(37 - 100*swC^2 + 64*swC^4)) + 
          3*d^3*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 32*sw^6*(-5 + 8*swC^2) - 
            20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 4*sw^4*(37 - 100*swC^2 + 
              64*swC^4)) - 4*d*(-9*(3 - 10*swC^2 + 8*swC^4) + 
            60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 64*sw^8*(-3 - 5*swC^2 + 
              8*swC^4) - 32*sw^6*(-15 + 11*swC^2 + 20*swC^4) - 
            4*sw^4*(111 - 265*swC^2 + 140*swC^4)) + 
          16*(9*(3 - 10*swC^2 + 8*swC^4) - 60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
            64*sw^8*(3 - 5*swC^2 + 8*swC^4) - 32*sw^6*(15 - 37*swC^2 + 
              20*swC^4) + 4*sw^4*(111 - 335*swC^2 + 244*swC^4))) + 
        2*(-36*d^2*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 
            32*sw^6*(-5 + 8*swC^2) - 20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
            4*sw^4*(37 - 100*swC^2 + 64*swC^4)) + 
          3*d^3*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 32*sw^6*(-5 + 8*swC^2) - 
            20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 4*sw^4*(37 - 100*swC^2 + 
              64*swC^4)) - 8*(63*(3 - 10*swC^2 + 8*swC^4) - 
            420*sw^2*(3 - 10*swC^2 + 8*swC^4) + 64*sw^8*(21 - 5*swC^2 + 
              8*swC^4) - 32*sw^6*(105 - 181*swC^2 + 20*swC^4) + 
            4*sw^4*(777 - 2135*swC^2 + 1396*swC^4)) + 
          2*d*(207*(3 - 10*swC^2 + 8*swC^4) - 1380*sw^2*(3 - 10*swC^2 + 
              8*swC^4) + 64*sw^8*(69 - 10*swC^2 + 16*swC^4) - 
            32*sw^6*(345 - 578*swC^2 + 40*swC^4) + 
            4*sw^4*(2553 - 6970*swC^2 + 4520*swC^4)))*t) + 
      4*(-3 + 2*d)*mz^2*(s^2*(3*d^2*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 
            32*sw^6*(-5 + 8*swC^2) - 20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
            4*sw^4*(37 - 100*swC^2 + 64*swC^4)) - 
          4*(-9*(3 - 10*swC^2 + 8*swC^4) + 60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
            64*sw^8*(-3 - 10*swC^2 + 16*swC^4) - 32*sw^6*(-15 - 2*swC^2 + 
              40*swC^4) - 4*sw^4*(111 - 230*swC^2 + 88*swC^4)) + 
          4*d*(-9*(3 - 10*swC^2 + 8*swC^4) + 60*sw^2*(3 - 10*swC^2 + 
              8*swC^4) + 64*sw^8*(-3 - 5*swC^2 + 8*swC^4) - 
            32*sw^6*(-15 + 11*swC^2 + 20*swC^4) - 4*sw^4*(111 - 265*swC^2 + 
              140*swC^4))) + 2*s*(-15*d*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 
            32*sw^6*(-5 + 8*swC^2) - 20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
            4*sw^4*(37 - 100*swC^2 + 64*swC^4)) + 
          3*d^2*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 32*sw^6*(-5 + 8*swC^2) - 
            20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 4*sw^4*(37 - 100*swC^2 + 
              64*swC^4)) + 8*(9*(3 - 10*swC^2 + 8*swC^4) - 
            60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 64*sw^8*(3 - 5*swC^2 + 
              8*swC^4) - 32*sw^6*(15 - 37*swC^2 + 20*swC^4) + 
            4*sw^4*(111 - 335*swC^2 + 244*swC^4)))*t + 
        4*(9*(3 - 10*swC^2 + 8*swC^4) - 60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
          64*sw^8*(3 - 20*swC^2 + 32*swC^4) - 32*sw^6*(15 - 76*swC^2 + 
            80*swC^4) + 4*sw^4*(111 - 440*swC^2 + 400*swC^4))*t^2) + 
      s*(s^2*(3*d^2*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 
            32*sw^6*(-5 + 8*swC^2) - 20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
            4*sw^4*(37 - 100*swC^2 + 64*swC^4)) - 
          4*(-9*(3 - 10*swC^2 + 8*swC^4) + 60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
            64*sw^8*(-3 - 10*swC^2 + 16*swC^4) - 32*sw^6*(-15 - 2*swC^2 + 
              40*swC^4) - 4*sw^4*(111 - 230*swC^2 + 88*swC^4)) + 
          4*d*(-9*(3 - 10*swC^2 + 8*swC^4) + 60*sw^2*(3 - 10*swC^2 + 
              8*swC^4) + 64*sw^8*(-3 - 5*swC^2 + 8*swC^4) - 
            32*sw^6*(-15 + 11*swC^2 + 20*swC^4) - 4*sw^4*(111 - 265*swC^2 + 
              140*swC^4))) + 2*s*(-15*d*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 
            32*sw^6*(-5 + 8*swC^2) - 20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
            4*sw^4*(37 - 100*swC^2 + 64*swC^4)) + 
          3*d^2*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 32*sw^6*(-5 + 8*swC^2) - 
            20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 4*sw^4*(37 - 100*swC^2 + 
              64*swC^4)) + 8*(9*(3 - 10*swC^2 + 8*swC^4) - 
            60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 64*sw^8*(3 - 5*swC^2 + 
              8*swC^4) - 32*sw^6*(15 - 37*swC^2 + 20*swC^4) + 
            4*sw^4*(111 - 335*swC^2 + 244*swC^4)))*t + 
        4*(9*(3 - 10*swC^2 + 8*swC^4) - 60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
          64*sw^8*(3 - 20*swC^2 + 32*swC^4) - 32*sw^6*(15 - 76*swC^2 + 
            80*swC^4) + 4*sw^4*(111 - 440*swC^2 + 400*swC^4))*t^2)))/
    (cwC^2*(-1 + d)*mz^4*Pi^d*(mz^2 - s)*sw^4*(-1 + sw^2)^2*swC^2), 
   ((I/27)*2^(-8 - d)*EL^6*
     (-2*mz^2*s*(-54*d^2*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 
          32*sw^6*(-5 + 8*swC^2) - 20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
          4*sw^4*(37 - 100*swC^2 + 64*swC^4)) + 
        3*d^3*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 32*sw^6*(-5 + 8*swC^2) - 
          20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 4*sw^4*(37 - 100*swC^2 + 
            64*swC^4)) - 128*(9*(3 - 10*swC^2 + 8*swC^4) - 
          60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 16*sw^8*(12 - 5*swC^2 + 
            8*swC^4) - 8*sw^6*(60 - 109*swC^2 + 20*swC^4) + 
          sw^4*(444 - 1235*swC^2 + 820*swC^4)) + 
        24*d*(33*(3 - 10*swC^2 + 8*swC^4) - 220*sw^2*(3 - 10*swC^2 + 
            8*swC^4) + 32*sw^8*(22 - 5*swC^2 + 8*swC^4) - 
          16*sw^6*(110 - 189*swC^2 + 20*swC^4) + 2*sw^4*(814 - 2235*swC^2 + 
            1460*swC^4))) + 3*s^2*(-144*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 
          32*sw^6*(-5 + 8*swC^2) - 20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
          4*sw^4*(37 - 100*swC^2 + 64*swC^4)) - 
        18*d^2*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 32*sw^6*(-5 + 8*swC^2) - 
          20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 4*sw^4*(37 - 100*swC^2 + 
            64*swC^4)) + d^3*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 
          32*sw^6*(-5 + 8*swC^2) - 20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
          4*sw^4*(37 - 100*swC^2 + 64*swC^4)) + 
        16*d*(-40*sw^6*(24 - 41*swC^2 + 4*swC^4) + 
          18*(3 - 10*swC^2 + 8*swC^4) - 120*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
          16*sw^8*(24 - 5*swC^2 + 8*swC^4) + sw^4*(888 - 2435*swC^2 + 
            1588*swC^4))) + 24*s*(16*sw^4*swC^2*(-35 + 52*swC^2 + 
          16*sw^4*(-5 + 8*swC^2) - 8*sw^2*(-13 + 20*swC^2)) + 
        d*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 32*sw^6*(-5 + 8*swC^2) - 
          20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 4*sw^4*(37 - 100*swC^2 + 
            64*swC^4)))*t + 16*(9*(3 - 10*swC^2 + 8*swC^4) - 
        60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 64*sw^8*(3 - 20*swC^2 + 
          32*swC^4) - 32*sw^6*(15 - 76*swC^2 + 80*swC^4) + 
        4*sw^4*(111 - 440*swC^2 + 400*swC^4))*t^2))/
    (cwC^2*Pi^d*(mz^2 - s)*sw^4*(-1 + sw^2)^2*swC^2), 0, 
   ((I/27)*2^(-8 - d)*EL^6*
     (s*(-18*d^2*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 
          32*sw^6*(-5 + 8*swC^2) - 20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
          4*sw^4*(37 - 100*swC^2 + 64*swC^4)) + 
        3*d^3*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 32*sw^6*(-5 + 8*swC^2) - 
          20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 4*sw^4*(37 - 100*swC^2 + 
            64*swC^4)) - 4*d*(-9*(3 - 10*swC^2 + 8*swC^4) + 
          60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 64*sw^8*(-3 - 5*swC^2 + 
            8*swC^4) - 32*sw^6*(-15 + 11*swC^2 + 20*swC^4) - 
          4*sw^4*(111 - 265*swC^2 + 140*swC^4)) + 
        16*(9*(3 - 10*swC^2 + 8*swC^4) - 60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
          64*sw^8*(3 - 5*swC^2 + 8*swC^4) - 32*sw^6*(15 - 37*swC^2 + 
            20*swC^4) + 4*sw^4*(111 - 335*swC^2 + 244*swC^4))) + 
      2*(-36*d^2*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 
          32*sw^6*(-5 + 8*swC^2) - 20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
          4*sw^4*(37 - 100*swC^2 + 64*swC^4)) + 
        3*d^3*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 32*sw^6*(-5 + 8*swC^2) - 
          20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 4*sw^4*(37 - 100*swC^2 + 
            64*swC^4)) - 8*(63*(3 - 10*swC^2 + 8*swC^4) - 
          420*sw^2*(3 - 10*swC^2 + 8*swC^4) + 64*sw^8*(21 - 5*swC^2 + 
            8*swC^4) - 32*sw^6*(105 - 181*swC^2 + 20*swC^4) + 
          4*sw^4*(777 - 2135*swC^2 + 1396*swC^4)) + 
        2*d*(207*(3 - 10*swC^2 + 8*swC^4) - 1380*sw^2*(3 - 10*swC^2 + 
            8*swC^4) + 64*sw^8*(69 - 10*swC^2 + 16*swC^4) - 
          32*sw^6*(345 - 578*swC^2 + 40*swC^4) + 4*sw^4*(2553 - 6970*swC^2 + 
            4520*swC^4)))*t))/(cwC^2*Pi^d*(mz^2 - s)*sw^4*(-1 + sw^2)^2*
     swC^2), 0, ((I/27)*2^(-8 - d)*EL^6*(s + t)*
     (s*(16*d*(sw^4*(-3108 + 8365*swC^2 - 5324*swC^4) - 
          63*(3 - 10*swC^2 + 8*swC^4) + 420*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
          16*sw^8*(-84 - 5*swC^2 + 8*swC^4) - 8*sw^6*(-420 + 659*swC^2 + 
            20*swC^4)) + 66*d^2*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 
          32*sw^6*(-5 + 8*swC^2) - 20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
          4*sw^4*(37 - 100*swC^2 + 64*swC^4)) - 
        3*d^3*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 32*sw^6*(-5 + 8*swC^2) - 
          20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 4*sw^4*(37 - 100*swC^2 + 
            64*swC^4)) - 32*(-45*(3 - 10*swC^2 + 8*swC^4) + 
          300*sw^2*(3 - 10*swC^2 + 8*swC^4) + 64*sw^8*(-15 - 5*swC^2 + 
            8*swC^4) - 32*sw^6*(-75 + 107*swC^2 + 20*swC^4) - 
          4*sw^4*(555 - 1465*swC^2 + 908*swC^4))) + 
      4*mz^2*(-36*d^2*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 
          32*sw^6*(-5 + 8*swC^2) - 20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
          4*sw^4*(37 - 100*swC^2 + 64*swC^4)) + 
        3*d^3*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 32*sw^6*(-5 + 8*swC^2) - 
          20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 4*sw^4*(37 - 100*swC^2 + 
            64*swC^4)) - 8*(63*(3 - 10*swC^2 + 8*swC^4) - 
          420*sw^2*(3 - 10*swC^2 + 8*swC^4) + 64*sw^8*(21 - 5*swC^2 + 
            8*swC^4) - 32*sw^6*(105 - 181*swC^2 + 20*swC^4) + 
          4*sw^4*(777 - 2135*swC^2 + 1396*swC^4)) + 
        2*d*(207*(3 - 10*swC^2 + 8*swC^4) - 1380*sw^2*(3 - 10*swC^2 + 
            8*swC^4) + 64*sw^8*(69 - 10*swC^2 + 16*swC^4) - 
          32*sw^6*(345 - 578*swC^2 + 40*swC^4) + 4*sw^4*(2553 - 6970*swC^2 + 
            4520*swC^4))) + 8*(-18*d*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 
          32*sw^6*(-5 + 8*swC^2) - 20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
          4*sw^4*(37 - 100*swC^2 + 64*swC^4)) + 
        3*d^2*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 32*sw^6*(-5 + 8*swC^2) - 
          20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 4*sw^4*(37 - 100*swC^2 + 
            64*swC^4)) - 8*(-80*sw^6*(-6 + 7*swC^2 + 4*swC^4) - 
          9*(3 - 10*swC^2 + 8*swC^4) + 60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
          32*sw^8*(-6 - 5*swC^2 + 8*swC^4) - 2*sw^4*(222 - 565*swC^2 + 
            332*swC^4)))*t))/(cwC^2*Pi^d*(mz^2 - s)*sw^4*(-1 + sw^2)^2*
     swC^2), 0, ((I/27)*2^(-9 - d)*EL^6*
     (3*s^3*(-144*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 
          32*sw^6*(-5 + 8*swC^2) - 20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
          4*sw^4*(37 - 100*swC^2 + 64*swC^4)) - 
        18*d^2*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 32*sw^6*(-5 + 8*swC^2) - 
          20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 4*sw^4*(37 - 100*swC^2 + 
            64*swC^4)) + d^3*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 
          32*sw^6*(-5 + 8*swC^2) - 20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
          4*sw^4*(37 - 100*swC^2 + 64*swC^4)) + 
        16*d*(-40*sw^6*(24 - 41*swC^2 + 4*swC^4) + 
          18*(3 - 10*swC^2 + 8*swC^4) - 120*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
          16*sw^8*(24 - 5*swC^2 + 8*swC^4) + sw^4*(888 - 2435*swC^2 + 
            1588*swC^4))) + 3*s^2*(-18*d^2*(9 + 64*sw^8 - 30*swC^2 + 
          24*swC^4 + 32*sw^6*(-5 + 8*swC^2) - 20*sw^2*(3 - 10*swC^2 + 
            8*swC^4) + 4*sw^4*(37 - 100*swC^2 + 64*swC^4)) + 
        d^3*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 32*sw^6*(-5 + 8*swC^2) - 
          20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 4*sw^4*(37 - 100*swC^2 + 
            64*swC^4)) + 16*(-27*(3 - 10*swC^2 + 8*swC^4) + 
          180*sw^2*(3 - 10*swC^2 + 8*swC^4) + 64*sw^8*(-9 - 10*swC^2 + 
            16*swC^4) - 32*sw^6*(-45 + 46*swC^2 + 40*swC^4) - 
          4*sw^4*(333 - 830*swC^2 + 472*swC^4)) + 
        8*d*(39*(3 - 10*swC^2 + 8*swC^4) - 260*sw^2*(3 - 10*swC^2 + 
            8*swC^4) + 32*sw^8*(26 - 5*swC^2 + 8*swC^4) - 
          16*sw^6*(130 - 221*swC^2 + 20*swC^4) + 2*sw^4*(962 - 2635*swC^2 + 
            1716*swC^4)))*t + 8*s*(3*d*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 
          32*sw^6*(-5 + 8*swC^2) - 20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
          4*sw^4*(37 - 100*swC^2 + 64*swC^4)) + 
        2*(9*(3 - 10*swC^2 + 8*swC^4) - 60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
          64*sw^8*(3 - 50*swC^2 + 80*swC^4) - 32*sw^6*(15 - 154*swC^2 + 
            200*swC^4) + 4*sw^4*(111 - 650*swC^2 + 712*swC^4)))*t^2 + 
      16*(9*(3 - 10*swC^2 + 8*swC^4) - 60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
        64*sw^8*(3 - 20*swC^2 + 32*swC^4) - 32*sw^6*(15 - 76*swC^2 + 
          80*swC^4) + 4*sw^4*(111 - 440*swC^2 + 400*swC^4))*t^3 + 
      2*mz^4*(s*(-126*d^2*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 
            32*sw^6*(-5 + 8*swC^2) - 20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
            4*sw^4*(37 - 100*swC^2 + 64*swC^4)) + 
          9*d^3*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 32*sw^6*(-5 + 8*swC^2) - 
            20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 4*sw^4*(37 - 100*swC^2 + 
              64*swC^4)) - 48*(45*(3 - 10*swC^2 + 8*swC^4) - 
            300*sw^2*(3 - 10*swC^2 + 8*swC^4) + 64*sw^8*(15 - 5*swC^2 + 
              8*swC^4) - 32*sw^6*(75 - 133*swC^2 + 20*swC^4) + 
            4*sw^4*(555 - 1535*swC^2 + 1012*swC^4)) + 
          20*d*(81*(3 - 10*swC^2 + 8*swC^4) - 540*sw^2*(3 - 10*swC^2 + 
              8*swC^4) + 64*sw^8*(27 - 5*swC^2 + 8*swC^4) - 
            32*sw^6*(135 - 229*swC^2 + 20*swC^4) + 4*sw^4*(999 - 2735*swC^2 + 
              1780*swC^4))) + 2*(-36*d^2*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 
            32*sw^6*(-5 + 8*swC^2) - 20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
            4*sw^4*(37 - 100*swC^2 + 64*swC^4)) + 
          3*d^3*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 32*sw^6*(-5 + 8*swC^2) - 
            20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 4*sw^4*(37 - 100*swC^2 + 
              64*swC^4)) - 8*(63*(3 - 10*swC^2 + 8*swC^4) - 
            420*sw^2*(3 - 10*swC^2 + 8*swC^4) + 64*sw^8*(21 - 5*swC^2 + 
              8*swC^4) - 32*sw^6*(105 - 181*swC^2 + 20*swC^4) + 
            4*sw^4*(777 - 2135*swC^2 + 1396*swC^4)) + 
          2*d*(207*(3 - 10*swC^2 + 8*swC^4) - 1380*sw^2*(3 - 10*swC^2 + 
              8*swC^4) + 64*sw^8*(69 - 10*swC^2 + 16*swC^4) - 
            32*sw^6*(345 - 578*swC^2 + 40*swC^4) + 
            4*sw^4*(2553 - 6970*swC^2 + 4520*swC^4)))*t) - 
      4*mz^2*(s^2*(-432*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 
            32*sw^6*(-5 + 8*swC^2) - 20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
            4*sw^4*(37 - 100*swC^2 + 64*swC^4)) - 
          60*d^2*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 
            32*sw^6*(-5 + 8*swC^2) - 20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
            4*sw^4*(37 - 100*swC^2 + 64*swC^4)) + 
          3*d^3*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 32*sw^6*(-5 + 8*swC^2) - 
            20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 4*sw^4*(37 - 100*swC^2 + 
              64*swC^4)) + 4*d*(225*(3 - 10*swC^2 + 8*swC^4) - 
            1500*sw^2*(3 - 10*swC^2 + 8*swC^4) + 64*sw^8*(75 - 5*swC^2 + 
              8*swC^4) - 32*sw^6*(375 - 613*swC^2 + 20*swC^4) + 
            4*sw^4*(2775 - 7535*swC^2 + 4852*swC^4))) + 
        s*(-72*d^2*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 
            32*sw^6*(-5 + 8*swC^2) - 20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
            4*sw^4*(37 - 100*swC^2 + 64*swC^4)) + 
          3*d^3*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 32*sw^6*(-5 + 8*swC^2) - 
            20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 4*sw^4*(37 - 100*swC^2 + 
              64*swC^4)) + 16*(-99*(3 - 10*swC^2 + 8*swC^4) + 
            660*sw^2*(3 - 10*swC^2 + 8*swC^4) + 64*sw^8*(-33 - 5*swC^2 + 
              8*swC^4) - 32*sw^6*(-165 + 251*swC^2 + 20*swC^4) - 
            4*sw^4*(1221 - 3265*swC^2 + 2060*swC^4)) + 
          4*d*(279*(3 - 10*swC^2 + 8*swC^4) - 1860*sw^2*(3 - 10*swC^2 + 
              8*swC^4) + 64*sw^8*(93 - 5*swC^2 + 8*swC^4) - 
            32*sw^6*(465 - 757*swC^2 + 20*swC^4) + 
            4*sw^4*(3441 - 9335*swC^2 + 6004*swC^4)))*t - 
        4*(-18*d*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 
            32*sw^6*(-5 + 8*swC^2) - 20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
            4*sw^4*(37 - 100*swC^2 + 64*swC^4)) + 
          3*d^2*(9 + 64*sw^8 - 30*swC^2 + 24*swC^4 + 32*sw^6*(-5 + 8*swC^2) - 
            20*sw^2*(3 - 10*swC^2 + 8*swC^4) + 4*sw^4*(37 - 100*swC^2 + 
              64*swC^4)) - 8*(-80*sw^6*(-6 + 7*swC^2 + 4*swC^4) - 
            9*(3 - 10*swC^2 + 8*swC^4) + 60*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
            32*sw^8*(-6 - 5*swC^2 + 8*swC^4) - 2*sw^4*(222 - 565*swC^2 + 
              332*swC^4)))*t^2)))/(cwC^2*Pi^d*(mz^2 - s)*sw^4*(-1 + sw^2)^2*
     swC^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, ((-I/3)*2^(-3 - d)*(-4 + d)*EL^6*((-4 - 2*d + d^2)*s + 
      2*(14 - 8*d + d^2)*t))/(Pi^d*s*sw^4), 0, 0, 0, 0, 
   ((I/3)*2^(-5 - 2*d)*EL^6*(-(d^2*(2*Pi)^d*s^3) + 2^(1 + d)*Pi^d*s*
       (2*(-1 + d)*s^2 - (8 - 5*d + d^2)*s*t - 2*t^2) - 
      mz^2*(1 - sw^2)*(-(d^2*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*
         ((2 - 2*d + d^2)*s^2 + (8 - 5*d + d^2)*s*t + 2*t^2)) + 
      (2^(1 + d)*Pi^d*s*((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 4*t^2) + 
        mz^2*(1 - sw^2)*(-5*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
           ((6 - 6*d + 4*d^2)*s^2 + 3*(8 - 5*d + d^2)*s*t + 6*t^2)))*
       GaugeXi[W] - (d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
         (-2*(-1 + d)*s^2 + (8 - 5*d + d^2)*s*t + 2*t^2) + 
        mz^2*(1 - sw^2)*(-7*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
           ((6 - 6*d + 5*d^2)*s^2 + 3*(8 - 5*d + d^2)*s*t + 6*t^2)))*
       GaugeXi[W]^2 + mz^2*(1 - sw^2)*(-3*d^2*(2*Pi)^d*s^2 + 
        2^(1 + d)*Pi^d*(2*(1 - d + d^2)*s^2 + (8 - 5*d + d^2)*s*t + 2*t^2))*
       GaugeXi[W]^3))/((-1 + d)*mz^4*Pi^(2*d)*s^2*sw^4*(-1 + sw^2)^2*
     (-1 + GaugeXi[W])^2), ((I/3)*2^(-5 - 2*d)*EL^6*
     (-(d^2*(2*Pi)^d*s^3) + 2^(1 + d)*Pi^d*s*((2 - 2*d + d^2)*s^2 + 
        (8 - 5*d + d^2)*s*t + 2*t^2) - 2^(1 + d)*Pi^d*
       (s - 2*mz^2*(-1 + sw^2))*((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 
        4*t^2)*GaugeXi[W] + (-(d^2*(2*Pi)^d*s^3) + 2^(1 + d)*Pi^d*s*
         ((2 - 2*d + d^2)*s^2 + (8 - 5*d + d^2)*s*t + 2*t^2) + 
        2^(3 + d)*mz^2*Pi^d*(1 - sw^2)*((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*
           t + 4*t^2))*GaugeXi[W]^2 - 2^(2 + d)*mz^2*Pi^d*(1 - sw^2)*
       ((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 4*t^2)*GaugeXi[W]^3))/
    ((-1 + d)*mz^4*Pi^(2*d)*s*sw^4*(-1 + sw^2)^2*(-1 + GaugeXi[W])^2), 
   ((-I/3)*2^(-5 - 2*d)*EL^6*(d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
       (-2*(-1 + d)*s^2 + (8 - 5*d + d^2)*s*t + 2*t^2) - 
      mz^2*(1 - sw^2)*(-3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (2*(1 - d + d^2)*s^2 + (8 - 5*d + d^2)*s*t + 2*t^2)) + 
      (-(2^(1 + d)*Pi^d*s*((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 4*t^2)) + 
        mz^2*(1 - sw^2)*(-7*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
           ((6 - 6*d + 5*d^2)*s^2 + 3*(8 - 5*d + d^2)*s*t + 6*t^2)))*
       GaugeXi[W] + (d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
         (-2*(-1 + d)*s^2 + (8 - 5*d + d^2)*s*t + 2*t^2) - 
        mz^2*(1 - sw^2)*(-5*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
           ((6 - 6*d + 4*d^2)*s^2 + 3*(8 - 5*d + d^2)*s*t + 6*t^2)))*
       GaugeXi[W]^2 + mz^2*(1 - sw^2)*(-(d^2*(2*Pi)^d*s^2) + 
        2^(1 + d)*Pi^d*((2 - 2*d + d^2)*s^2 + (8 - 5*d + d^2)*s*t + 2*t^2))*
       GaugeXi[W]^3))/((-1 + d)*mz^4*Pi^(2*d)*s^2*sw^4*(-1 + sw^2)^2*
     (-1 + GaugeXi[W])^2), ((-I/3)*2^(-5 - 2*d)*EL^6*
     (-(2^(1 + d)*Pi^d*s*(d*s^2 + 4*d*mz^2*s*(-1 + sw^2) + 
         4*(-1 + d)*mz^4*(-1 + sw^2)^2)*(-1 + GaugeXi[W])^2) + 
      (2*Pi)^d*(4*(-1 + d)*mz^4*(-1 + sw^2)^2 + s*((-2 + d)*s - 2*t) + 
        4*mz^2*(-1 + sw^2)*((-2 + d)*s - 2*t))*((-4 + d)*s - 2*t)*
       (-1 + GaugeXi[W])^2 + 2^(3 + d)*(-1 + d)*(-56 + 46*d - 12*d^2 + d^3)*
       mz^4*Pi^d*(-1 + sw^2)^2*(s + 2*t)*(-1 + GaugeXi[W])^2 - 
      (1 - d)*(s + 2*mz^2*(-1 + sw^2))*(2^(1 + d)*mz^2*Pi^d*(1 - sw^2)*
         ((-6 + d)*s - 2*t) + s*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(3*s + t)))*
       (-1 + GaugeXi[W])^2 + 2*(1 - d)*((2^(2 + d)*Pi^d - d*(2*Pi)^d)*s^2*
         (s + t) + 2^(1 + d)*mz^4*Pi^d*(-1 + sw^2)^2*
         ((-122 + 87*d - 18*d^2 + d^3)*s + 2*(-55 + 46*d - 12*d^2 + d^3)*t) - 
        2^(2 + d)*mz^2*Pi^d*(1 - sw^2)*((8 - 5*d + d^2)*s^2 + 
          (20 - 11*d + 2*d^2)*s*t + 4*t^2) + 2^(1 + d)*Pi^d*
         ((-4 + d)*s^2*(s + t) - 2*mz^4*(-1 + sw^2)^2*
           ((-122 + 87*d - 18*d^2 + d^3)*s + 2*(-55 + 46*d - 12*d^2 + d^3)*
             t) + 4*mz^2*(1 - sw^2)*((8 - 5*d + d^2)*s^2 + 
            (20 - 11*d + 2*d^2)*s*t + 4*t^2))*GaugeXi[W] + 
        ((2^(2 + d)*Pi^d - d*(2*Pi)^d)*s^2*(s + t) + 2^(1 + d)*mz^4*Pi^d*
           (-1 + sw^2)^2*((-122 + 87*d - 18*d^2 + d^3)*s + 
            2*(-55 + 46*d - 12*d^2 + d^3)*t) - 2^(2 + d)*mz^2*Pi^d*(1 - sw^2)*
           ((8 - 5*d + d^2)*s^2 + (20 - 11*d + 2*d^2)*s*t + 4*t^2))*
         GaugeXi[W]^2) - (1 - d)*(s + 2*mz^2*(-1 + sw^2))*
       (2^(1 + d)*mz^2*Pi^d*(1 - sw^2)*((-6 + d)*s - 2*t) + 
        s*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(-((-3 + d)*s) + t)) + 
        2^(1 + d)*Pi^d*(s + 2*mz^2*(-1 + sw^2))*((-6 + d)*s - 2*t)*
         GaugeXi[W] + (2^(1 + d)*mz^2*Pi^d*(1 - sw^2)*((-6 + d)*s - 2*t) + 
          s*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(-((-3 + d)*s) + t)))*
         GaugeXi[W]^2)))/(mz^4*Pi^(2*d)*(s - d*s)*sw^4*(-1 + sw^2)^2*
     (-1 + GaugeXi[W])^2), ((-I/3)*2^(-3 - 4*d)*EL^6*
     ((-144 + 96*d - 18*d^2 + d^3)*s^2 + 2*(-128 + 88*d - 18*d^2 + d^3)*mz^2*
       s*(-1 + sw^2) + 8*d*s*t + 16*t^2)*((2*Pi)^(3*d) - 
      2^(1 + 3*d)*Pi^(3*d)*GaugeXi[W] + (2*Pi)^(3*d)*GaugeXi[W]^2))/
    (Pi^(4*d)*s*sw^4*(-1 + GaugeXi[W])^2), 
   ((I/3)*2^(-3 - d)*(-4 + d)*EL^6*(s + t)*((40 - 18*d + d^2)*s + 
      4*(14 - 8*d + d^2)*mz^2*(-1 + sw^2) - 8*(-2 + d)*t))/(Pi^d*s*sw^4), 
   ((-I/3)*4^(-2 - d)*EL^6*(2^(2 + d)*(-4 + d)*mz^2*Pi^d*(-1 + sw^2)*(s + t)*
       ((36 - 16*d + d^2)*s - 4*(-2 + d)*t) + 2^(1 + d)*(-4 + d)*mz^4*Pi^d*
       (-1 + sw^2)^2*(3*(20 - 10*d + d^2)*s + 2*(14 - 8*d + d^2)*t) + 
      (s + t)*(-(d^3*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*
         ((-72 + 48*d - 9*d^2 + d^3)*s^2 + 4*d*s*t + 8*t^2))))/
    (Pi^(2*d)*s*sw^4), ((I/3)*2^(-5 - 2*d)*EL^6*(d^2*(2*Pi)^d*s^3 + 
      2^(1 + d)*Pi^d*s*(-2*(-1 + d)*s^2 + (8 - 5*d + d^2)*s*t + 2*t^2) + 
      mz^2*(1 - sw^2)*(-3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         ((-2 + 2*d + d^2)*s^2 - (8 - 5*d + d^2)*s*t - 2*t^2)) - 
      (2^(1 + d)*Pi^d*s*((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 4*t^2) + 
        3*mz^2*(1 - sw^2)*(-(d^2*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*
           (2*(-1 + d)*s^2 - (8 - 5*d + d^2)*s*t - 2*t^2)))*GaugeXi[W] + 
      (d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*(-2*(-1 + d)*s^2 + 
          (8 - 5*d + d^2)*s*t + 2*t^2) - 3*mz^2*(1 - sw^2)*
         (-(d^2*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*((2 - 2*d + d^2)*s^2 + 
            (8 - 5*d + d^2)*s*t + 2*t^2)))*GaugeXi[W]^2 + 
      mz^2*(1 - sw^2)*(-3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (2*(1 - d + d^2)*s^2 + (8 - 5*d + d^2)*s*t + 2*t^2))*GaugeXi[W]^3))/
    ((-1 + d)*mz^4*Pi^(2*d)*s^2*sw^4*(-1 + sw^2)^2*(-1 + GaugeXi[W])^2), 
   ((-I/3)*2^(-5 - 4*d)*EL^6*
     (-(((2*Pi)^(2*d)*(d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(3*s + t))*
         (s + mz^2*(-1 + sw^2) + mz^2*(-1 + sw^2)*GaugeXi[W])^2)/s) - 
      (2^(1 + 3*d)*Pi^(3*d)*(d*(s + mz^2*(-1 + sw^2))^2 + 
         2*mz^2*(-1 + sw^2)*(d*s + (-2 + d)*mz^2*(-1 + sw^2))*GaugeXi[W] + 
         d*mz^4*(-1 + sw^2)^2*GaugeXi[W]^2))/(-1 + d) + 
      ((2*Pi)^(3*d)*((-4 + d)*s - 2*t)*((s + mz^2*(-1 + sw^2))^2*
          ((-2 + d)*s - 2*t) + 2*mz^2*(1 - sw^2)*
          (-(d*s*(s + mz^2*(-1 + sw^2))) + 2*(s^2 + s*t - mz^2*(-1 + sw^2)*
              t))*GaugeXi[W] + mz^4*(-1 + sw^2)^2*((-2 + d)*s - 2*t)*
          GaugeXi[W]^2))/((-1 + d)*s^2) - 
      ((2*Pi)^(2*d)*(-s - mz^2*(-1 + sw^2) - mz^2*(-1 + sw^2)*GaugeXi[W])*
        (mz^2*(1 - sw^2)*(d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(3*s + t)) + 
         s*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(-((-3 + d)*s) + t)) + 
         (2^(1 + d)*Pi^d*s*((-6 + d)*s - 2*t) + mz^2*(1 - sw^2)*
            (-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(3*s + t)))*GaugeXi[W] + 
         (mz^2*(1 - sw^2)*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(3*s + t)) + 
           s*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(-((-3 + d)*s) + t)))*
          GaugeXi[W]^2 - mz^2*(1 - sw^2)*(-(d*(2*Pi)^d*s) + 
           2^(1 + d)*Pi^d*(3*s + t))*GaugeXi[W]^3))/(s*(-1 + GaugeXi[W])^2) - 
      (2*(-((2*Pi)^(3*d)*((-4 + d)*s^2*(s + t) + (-4 + d)*mz^4*(-1 + sw^2)^2*
             (s + t) + 2*mz^2*(1 - sw^2)*((8 - 5*d + d^2)*s^2 + 
              (20 - 11*d + 2*d^2)*s*t + 4*t^2))) + 2^(1 + 3*d)*Pi^(3*d)*
          ((-4 + d)*s^2*(s + t) + mz^4*(-1 + sw^2)^2*((-2 + d)*s + 
             2*(-3 + d)*t) + mz^2*(1 - sw^2)*((12 - 9*d + 2*d^2)*s^2 + 
             (36 - 21*d + 4*d^2)*s*t + 8*t^2))*GaugeXi[W] - 
         (2*Pi)^(3*d)*(-2*d^2*mz^2*s*(-1 + sw^2)*(s + 2*t) - 
           4*(s^3 + s^2*t + 6*mz^2*s*(-1 + sw^2)*t + 2*mz^2*(-1 + sw^2)*t*
              (2*mz^2*(-1 + sw^2) + t)) + d*(s^2*(s + t) + 
             6*mz^2*s*(-1 + sw^2)*(s + 3*t) + 2*mz^4*(-1 + sw^2)^2*
              (s + 3*t)))*GaugeXi[W]^2 + 2^(1 + 3*d)*mz^2*Pi^(3*d)*(1 - sw^2)*
          ((-4 + d)*s*(s + t) + mz^2*(1 - sw^2)*((-2 + d)*s + 2*(-3 + d)*t))*
          GaugeXi[W]^3 - (-4 + d)*mz^4*(2*Pi)^(3*d)*(-1 + sw^2)^2*(s + t)*
          GaugeXi[W]^4))/(s*(-1 + GaugeXi[W])^2)))/
    (mz^4*Pi^(4*d)*sw^4*(-1 + sw^2)^2), 
   ((I/3)*2^(-5 - 2*d)*EL^6*(d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
       (-2*(-1 + d)*s^2 + (8 - 5*d + d^2)*s*t + 2*t^2) + 
      mz^2*(1 - sw^2)*(-3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (2*(1 - d + d^2)*s^2 + (8 - 5*d + d^2)*s*t + 2*t^2)) - 
      (2^(1 + d)*Pi^d*s*((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 4*t^2) + 
        3*mz^2*(1 - sw^2)*(-(d^2*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*
           ((2 - 2*d + d^2)*s^2 + (8 - 5*d + d^2)*s*t + 2*t^2)))*GaugeXi[W] - 
      (s - 3*mz^2*(-1 + sw^2))*(-(d^2*(2*Pi)^d*s^2) + 
        2^(1 + d)*Pi^d*(2*(-1 + d)*s^2 - (8 - 5*d + d^2)*s*t - 2*t^2))*
       GaugeXi[W]^2 + mz^2*(1 - sw^2)*(-3*d^2*(2*Pi)^d*s^2 + 
        2^(1 + d)*Pi^d*((-2 + 2*d + d^2)*s^2 - (8 - 5*d + d^2)*s*t - 2*t^2))*
       GaugeXi[W]^3))/((-1 + d)*mz^4*Pi^(2*d)*s^2*sw^4*(-1 + sw^2)^2*
     (-1 + GaugeXi[W])^2), ((-I/3)*2^(-5 - 4*d)*EL^6*
     (-(((2*Pi)^(2*d)*(d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(3*s + t))*
         (s + mz^2*(-1 + sw^2) + mz^2*(-1 + sw^2)*GaugeXi[W])^2)/s) - 
      (2^(1 + 3*d)*Pi^(3*d)*(d*(s + mz^2*(-1 + sw^2))^2 + 
         2*mz^2*(-1 + sw^2)*(d*s + (-2 + d)*mz^2*(-1 + sw^2))*GaugeXi[W] + 
         d*mz^4*(-1 + sw^2)^2*GaugeXi[W]^2))/(-1 + d) + 
      ((2*Pi)^(3*d)*((-4 + d)*s - 2*t)*((s + mz^2*(-1 + sw^2))^2*
          ((-2 + d)*s - 2*t) + 2*mz^2*(1 - sw^2)*
          (-(d*s*(s + mz^2*(-1 + sw^2))) + 2*(s^2 + s*t - mz^2*(-1 + sw^2)*
              t))*GaugeXi[W] + mz^4*(-1 + sw^2)^2*((-2 + d)*s - 2*t)*
          GaugeXi[W]^2))/((-1 + d)*s^2) - 
      ((2*Pi)^(2*d)*(-s - mz^2*(-1 + sw^2) - mz^2*(-1 + sw^2)*GaugeXi[W])*
        (mz^2*(1 - sw^2)*(d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(3*s + t)) + 
         s*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(-((-3 + d)*s) + t)) + 
         (2^(1 + d)*Pi^d*s*((-6 + d)*s - 2*t) + mz^2*(1 - sw^2)*
            (-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(3*s + t)))*GaugeXi[W] + 
         (mz^2*(1 - sw^2)*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(3*s + t)) + 
           s*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(-((-3 + d)*s) + t)))*
          GaugeXi[W]^2 - mz^2*(1 - sw^2)*(-(d*(2*Pi)^d*s) + 
           2^(1 + d)*Pi^d*(3*s + t))*GaugeXi[W]^3))/(s*(-1 + GaugeXi[W])^2) - 
      (2*(-((2*Pi)^(3*d)*((-4 + d)*s^2*(s + t) + (-4 + d)*mz^4*(-1 + sw^2)^2*
             (s + t) + 2*mz^2*(1 - sw^2)*((8 - 5*d + d^2)*s^2 + 
              (20 - 11*d + 2*d^2)*s*t + 4*t^2))) + 2^(1 + 3*d)*Pi^(3*d)*
          ((-4 + d)*s^2*(s + t) + mz^4*(-1 + sw^2)^2*((-2 + d)*s + 
             2*(-3 + d)*t) + mz^2*(1 - sw^2)*((12 - 9*d + 2*d^2)*s^2 + 
             (36 - 21*d + 4*d^2)*s*t + 8*t^2))*GaugeXi[W] - 
         (2*Pi)^(3*d)*(-2*d^2*mz^2*s*(-1 + sw^2)*(s + 2*t) - 
           4*(s^3 + s^2*t + 6*mz^2*s*(-1 + sw^2)*t + 2*mz^2*(-1 + sw^2)*t*
              (2*mz^2*(-1 + sw^2) + t)) + d*(s^2*(s + t) + 
             6*mz^2*s*(-1 + sw^2)*(s + 3*t) + 2*mz^4*(-1 + sw^2)^2*
              (s + 3*t)))*GaugeXi[W]^2 + 2^(1 + 3*d)*mz^2*Pi^(3*d)*(1 - sw^2)*
          ((-4 + d)*s*(s + t) + mz^2*(1 - sw^2)*((-2 + d)*s + 2*(-3 + d)*t))*
          GaugeXi[W]^3 - (-4 + d)*mz^4*(2*Pi)^(3*d)*(-1 + sw^2)^2*(s + t)*
          GaugeXi[W]^4))/(s*(-1 + GaugeXi[W])^2)))/
    (mz^4*Pi^(4*d)*sw^4*(-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((I/3)*2^(-6 - d)*(-4 + d)*EL^6*(3 - 10*swC^2 + 8*swC^4)*
     ((-4 - 2*d + d^2)*s + 2*(14 - 8*d + d^2)*t))/(cwC^2*Pi^d*(mz^2 - s)*sw^4*
     swC^2), 0, 0, 0, 0, ((I/3)*2^(-8 - d)*EL^6*(3 - 10*swC^2 + 8*swC^4)*
     ((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 4*t^2)*
     (s - mz^2*(-1 + sw^2) + mz^2*(-1 + sw^2)*GaugeXi[W]))/
    (cwC^2*(-1 + d)*mz^4*Pi^d*(mz^2 - s)*s*sw^4*(-1 + sw^2)^2*swC^2), 
   ((-I/3)*2^(-8 - d)*EL^6*(3 - 10*swC^2 + 8*swC^4)*
     ((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 4*t^2)*
     (s + 4*mz^2*(-1 + sw^2)*GaugeXi[W]))/(cwC^2*(-1 + d)*mz^4*Pi^d*
     (mz^2 - s)*sw^4*(-1 + sw^2)^2*swC^2), 
   ((I/3)*2^(-8 - d)*EL^6*(3 - 10*swC^2 + 8*swC^4)*
     ((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 4*t^2)*
     (s + mz^2*(-1 + sw^2) - mz^2*(-1 + sw^2)*GaugeXi[W]))/
    (cwC^2*(-1 + d)*mz^4*Pi^d*(mz^2 - s)*s*sw^4*(-1 + sw^2)^2*swC^2), 
   ((-I/3)*2^(-8 - d)*EL^6*(3 - 10*swC^2 + 8*swC^4)*
     (4*(4 - 5*d + d^2)*mz^4*(-1 + sw^2)^2*((-4 - 2*d + d^2)*s + 
        2*(14 - 8*d + d^2)*t) + s*((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 
        4*t^2) + 4*(-3 + 2*d)*mz^2*(1 - sw^2)*((-2 + d)^2*s^2 + 
        2*(8 - 5*d + d^2)*s*t + 4*t^2)))/(cwC^2*(-1 + d)*mz^4*Pi^d*(mz^2 - s)*
     sw^4*(-1 + sw^2)^2*swC^2), ((I/3)*2^(-6 - d)*EL^6*
     (3 - 10*swC^2 + 8*swC^4)*((-144 + 96*d - 18*d^2 + d^3)*s^2 + 
      2*(-128 + 88*d - 18*d^2 + d^3)*mz^2*s*(-1 + sw^2) + 8*d*s*t + 16*t^2))/
    (cwC^2*Pi^d*(mz^2 - s)*sw^4*swC^2), 
   ((-I/3)*2^(-6 - d)*(-4 + d)*EL^6*(3 - 10*swC^2 + 8*swC^4)*(s + t)*
     ((40 - 18*d + d^2)*s + 4*(14 - 8*d + d^2)*mz^2*(-1 + sw^2) - 
      8*(-2 + d)*t))/(cwC^2*Pi^d*(mz^2 - s)*sw^4*swC^2), 
   ((I/3)*2^(-7 - d)*EL^6*(3 - 10*swC^2 + 8*swC^4)*
     (4*(-4 + d)*mz^2*(-1 + sw^2)*(s + t)*((36 - 16*d + d^2)*s - 
        4*(-2 + d)*t) + 2*(-4 + d)*mz^4*(-1 + sw^2)^2*
       (3*(20 - 10*d + d^2)*s + 2*(14 - 8*d + d^2)*t) + 
      (s + t)*((-144 + 96*d - 18*d^2 + d^3)*s^2 + 8*d*s*t + 16*t^2)))/
    (cwC^2*Pi^d*(mz^2 - s)*sw^4*swC^2), 
   ((-I/3)*2^(-8 - d)*EL^6*(3 - 10*swC^2 + 8*swC^4)*
     ((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 4*t^2)*
     (s + mz^2*(-1 + sw^2) - mz^2*(-1 + sw^2)*GaugeXi[W]))/
    (cwC^2*(-1 + d)*mz^4*Pi^d*(mz^2 - s)*s*sw^4*(-1 + sw^2)^2*swC^2), 
   ((I/3)*2^(-8 - d)*EL^6*(3 - 10*swC^2 + 8*swC^4)*
     ((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 4*t^2)*
     (s^2 - 2*(-3 + 2*d)*mz^2*s*(-1 + sw^2) + mz^4*(-1 + sw^2)^2 - 
      2*mz^2*(-1 + sw^2)*(-s + mz^2*(-1 + sw^2))*GaugeXi[W] + 
      mz^4*(-1 + sw^2)^2*GaugeXi[W]^2))/(cwC^2*(-1 + d)*mz^4*Pi^d*(mz^2 - s)*
     s*sw^4*(-1 + sw^2)^2*swC^2), 
   ((-I/3)*2^(-8 - d)*EL^6*(3 - 10*swC^2 + 8*swC^4)*
     ((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 4*t^2)*
     (s - mz^2*(-1 + sw^2) + mz^2*(-1 + sw^2)*GaugeXi[W]))/
    (cwC^2*(-1 + d)*mz^4*Pi^d*(mz^2 - s)*s*sw^4*(-1 + sw^2)^2*swC^2), 
   ((I/3)*2^(-8 - d)*EL^6*(3 - 10*swC^2 + 8*swC^4)*
     ((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 4*t^2)*
     (s^2 - 2*(-3 + 2*d)*mz^2*s*(-1 + sw^2) + mz^4*(-1 + sw^2)^2 - 
      2*mz^2*(-1 + sw^2)*(-s + mz^2*(-1 + sw^2))*GaugeXi[W] + 
      mz^4*(-1 + sw^2)^2*GaugeXi[W]^2))/(cwC^2*(-1 + d)*mz^4*Pi^d*(mz^2 - s)*
     s*sw^4*(-1 + sw^2)^2*swC^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {((-I/9)*2^(2 - d)*(16 - 7*d + d^2)*EL^6*((-2 + d)*s^2 + 4*s*t + 
      4*t^2))/((-4 + d)*Pi^d*s^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
  {((I/9)*2^(-3 - d)*(16 - 7*d + d^2)*EL^6*
     (s^2*(12 + 3*d^2 + 40*swC^2 - 64*swC^4 + 4*d*(-3 - 5*swC^2 + 8*swC^4)) + 
      2*s*(-15*d + 3*d^2 + 8*(3 - 5*swC^2 + 8*swC^4))*t + 
      4*(3 - 20*swC^2 + 32*swC^4)*t^2))/(cwC^2*(-4 + d)*Pi^d*(mz^2 - s)*s*
     swC^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {((-I/9)*2^(-1 - 2*d)*EL^6*(1 - 4*sw^2 + 8*sw^4)*
     (-(d*(1 + d)*(2*Pi)^d*s^3) + 2^(1 + d)*mz^2*Pi^d*((-2 + d)*s^2 + 4*s*t + 
        4*t^2) + 2^(1 + d)*Pi^d*s*((-7 + 5*d)*s^2 - 2*(-7 + d)*s*t - 
        2*(-7 + d)*t^2)))/(Pi^(2*d)*s^3*sw^2*(-1 + sw^2)), 0, 0, 
   ((I/9)*2^(-1 - d)*EL^6*(2*mz^2 + 3*s)*(1 - 4*sw^2 + 8*sw^4)*
     ((-2 + d)*s^2 + 4*s*t + 4*t^2))/(mz^2*Pi^d*s^3*sw^2*(-1 + sw^2)), 0, 0, 
   0, 0, ((I/9)*2^(-1 - d)*EL^6*(1 - 4*sw^2 + 8*sw^4)*
     ((-2 + d)*s^2 + 4*s*t + 4*t^2))/(mz^2*Pi^d*s^2*sw^2*(-1 + sw^2)), 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/9)*2^(-1 - 2*d)*EL^6*(1 - 4*sw^2 + 8*sw^4)*
     (2^(1 + d)*mz^4*Pi^d*((-2 + d)*s^2 + 4*s*t + 4*t^2) + 
      2^(1 + d)*Pi^d*s^2*((-2 + d)*s^2 + 4*s*t + 4*t^2) + 
      mz^2*s*(-(d^2*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*((-8 + 5*d)*s^2 - 
          2*(-8 + d)*s*t - 2*(-8 + d)*t^2))))/(Pi^(2*d)*s^3*sw^2*
     (-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
  {((I/9)*2^(-5 - 3*d)*EL^6*(-((-2 + d)*(2*Pi)^(2*d)*s^2*(2*mz^2 + s)*
        (-3 + 8*swC^2)*(-1 + 2*swC^2 + sw^2*(4 - 8*swC^2) + 
         4*sw^4*(-1 + 4*swC^2))) + 2^(1 + 2*d)*Pi^(2*d)*(s + 2*t)*
       ((-2 + d)*mz^2*(s*(3*d*(1 + 4*sw^4 - 2*swC^2 + sw^2*(-4 + 8*swC^2)) - 
            4*(3 - 8*swC^2 + 4*swC^4 - 4*sw^2*(3 - 8*swC^2 + 4*swC^4) + 
              4*sw^4*(3 - 5*swC^2 + 8*swC^4))) - 2*(-3 + 8*swC^2)*
           (-1 + 2*swC^2 + sw^2*(4 - 8*swC^2) + 4*sw^4*(-1 + 4*swC^2))*t) + 
        2*s*(s*(-6 + 4*swC^2 + 16*swC^4 - 8*sw^2*(-3 + 2*swC^2 + 8*swC^4) + 
            8*sw^4*(-3 - 10*swC^2 + 16*swC^4) + 3*d*(1 + 4*sw^4 - 2*swC^2 + 
              sw^2*(-4 + 8*swC^2))) - (-4 + d)*(-3 + 8*swC^2)*
           (-1 + 2*swC^2 + sw^2*(4 - 8*swC^2) + 4*sw^4*(-1 + 4*swC^2))*t)) - 
      (2*Pi)^d*s^2*(3*d^2*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
         (s*(3*d^2*(2*sw^4 - swC^2 + sw^2*(-2 + 4*swC^2)) + 
            4*(3 - 8*swC^2 + 4*swC^4 - 4*sw^2*(3 - 8*swC^2 + 4*swC^4) + 
              4*sw^4*(3 - 5*swC^2 + 8*swC^4)) + d*(-9 + 22*swC^2 - 8*swC^4 + 
              4*sw^2*(9 - 22*swC^2 + 8*swC^4) - 4*sw^4*(9 - 10*swC^2 + 
                16*swC^4))) - (-2 + d)*(-3 + 8*swC^2)*(-1 + 2*swC^2 + 
            sw^2*(4 - 8*swC^2) + 4*sw^4*(-1 + 4*swC^2))*t)) - 
      s^2*(3*d^3*(2*Pi)^(2*d)*s - 4^(1 + d)*(-2 + d)*mz^2*Pi^(2*d)*
         (-3 + 8*swC^2)*(-1 + 2*swC^2 + sw^2*(4 - 8*swC^2) + 
          4*sw^4*(-1 + 4*swC^2)) + 2^(1 + 2*d)*Pi^(2*d)*
         (s*(3*d^3*(2*sw^4 - swC^2 + sw^2*(-2 + 4*swC^2)) + 
            2*d^2*(-9 + 16*swC^2 + 4*swC^4 - 4*sw^2*(-9 + 16*swC^2 + 
                4*swC^4) + 4*sw^4*(-9 - 5*swC^2 + 8*swC^4)) - 
            20*d*(-3 + 4*swC^2 + 4*swC^4 - 4*sw^2*(-3 + 4*swC^2 + 4*swC^4) + 
              4*sw^4*(-3 - 5*swC^2 + 8*swC^4)) + 20*(-3 + 2*swC^2 + 8*swC^4 - 
              4*sw^2*(-3 + 2*swC^2 + 8*swC^4) + 4*sw^4*(-3 - 10*swC^2 + 
                16*swC^4))) + (-36*d^2*(1 + 4*sw^4 - 2*swC^2 + 
              sw^2*(-4 + 8*swC^2)) + 3*d^3*(1 + 4*sw^4 - 2*swC^2 + 
              sw^2*(-4 + 8*swC^2)) - 8*(21 - 44*swC^2 + 4*swC^4 - 
              4*sw^2*(21 - 44*swC^2 + 4*swC^4) + 4*sw^4*(21 - 5*swC^2 + 
                8*swC^4)) + 2*d*(69 - 142*swC^2 + 8*swC^4 - 4*sw^2*(69 - 
                142*swC^2 + 8*swC^4) + 4*sw^4*(69 - 10*swC^2 + 16*swC^4)))*
           t)) + (2*Pi)^(2*d)*(3 - 8*swC^2)*(1 - 2*swC^2 + 
        sw^4*(4 - 16*swC^2) + sw^2*(-4 + 8*swC^2))*
       (s*(-((-2 + d)*s^2) + 4*s*t + 4*(-1 + d)*t^2) + 
        2*mz^2*((-2 + d)*s^2 + 4*(-1 + d)*s*t + 4*(-1 + d)*t^2))))/
    (cwC^2*Pi^(3*d)*(mz^2 - s)*s^2*sw^2*(-1 + sw^2)*swC^2), 0, 0, 
   ((-I/9)*2^(-5 - 3*d)*EL^6*(-3*d^2*(2*Pi)^(2*d)*s^3 + 
      3*2^(1 + 2*d)*Pi^(2*d)*s*
       (s^2*(d^2*(2 + 6*sw^4 - 3*swC^2 + 6*sw^2*(-1 + 2*swC^2)) + 
          d*(-6 + 8*swC^2 + 8*swC^4 - 8*sw^2*(-3 + 4*swC^2 + 4*swC^4) + 
            8*sw^4*(-3 - 5*swC^2 + 8*swC^4)) + 2*(3 - 2*swC^2 - 8*swC^4 + 
            sw^4*(12 + 40*swC^2 - 64*swC^4) + 4*sw^2*(-3 + 2*swC^2 + 
              8*swC^4))) + s*(-15*d*(1 + 4*sw^4 - 2*swC^2 + 
            sw^2*(-4 + 8*swC^2)) + 3*d^2*(1 + 4*sw^4 - 2*swC^2 + 
            sw^2*(-4 + 8*swC^2)) + 8*(3 - 8*swC^2 + 4*swC^4 - 
            4*sw^2*(3 - 8*swC^2 + 4*swC^4) + 4*sw^4*(3 - 5*swC^2 + 8*swC^4)))*
         t + 2*(-3 + 8*swC^2)*(-1 + 2*swC^2 + sw^2*(4 - 8*swC^2) + 
          4*sw^4*(-1 + 4*swC^2))*t^2) + 2*mz^2*(3*d^2*(2*Pi)^(2*d)*s^2 + 
        2^(1 + 2*d)*Pi^(2*d)*(s^2*(3*d^2*(2*sw^4 - swC^2 + sw^2*(-2 + 
                4*swC^2)) + d*(-6 + 8*swC^2 + 8*swC^4 - 8*sw^2*(-3 + 
                4*swC^2 + 4*swC^4) + 8*sw^4*(-3 - 5*swC^2 + 8*swC^4)) + 
            2*(3 - 2*swC^2 - 8*swC^4 + sw^4*(12 + 40*swC^2 - 64*swC^4) + 
              4*sw^2*(-3 + 2*swC^2 + 8*swC^4))) + 
          s*(-15*d*(1 + 4*sw^4 - 2*swC^2 + sw^2*(-4 + 8*swC^2)) + 
            3*d^2*(1 + 4*sw^4 - 2*swC^2 + sw^2*(-4 + 8*swC^2)) + 
            8*(3 - 8*swC^2 + 4*swC^4 - 4*sw^2*(3 - 8*swC^2 + 4*swC^4) + 
              4*sw^4*(3 - 5*swC^2 + 8*swC^4)))*t + 2*(-3 + 8*swC^2)*
           (-1 + 2*swC^2 + sw^2*(4 - 8*swC^2) + 4*sw^4*(-1 + 4*swC^2))*
           t^2))))/(cwC^2*mz^2*Pi^(3*d)*(mz^2 - s)*s^2*sw^2*(-1 + sw^2)*
     swC^2), 0, 0, 0, 0, ((-I/9)*2^(-5 - d)*EL^6*
     (s^2*(3*d^2*(1 + 4*sw^4 - 2*swC^2 + sw^2*(-4 + 8*swC^2)) + 
        4*d*(-3 + 4*swC^2 + 4*swC^4 - 4*sw^2*(-3 + 4*swC^2 + 4*swC^4) + 
          4*sw^4*(-3 - 5*swC^2 + 8*swC^4)) - 4*(-3 + 2*swC^2 + 8*swC^4 - 
          4*sw^2*(-3 + 2*swC^2 + 8*swC^4) + 4*sw^4*(-3 - 10*swC^2 + 
            16*swC^4))) + 2*s*(-15*d*(1 + 4*sw^4 - 2*swC^2 + 
          sw^2*(-4 + 8*swC^2)) + 3*d^2*(1 + 4*sw^4 - 2*swC^2 + 
          sw^2*(-4 + 8*swC^2)) + 8*(3 - 8*swC^2 + 4*swC^4 - 
          4*sw^2*(3 - 8*swC^2 + 4*swC^4) + 4*sw^4*(3 - 5*swC^2 + 8*swC^4)))*
       t + 4*(-3 + 8*swC^2)*(-1 + 2*swC^2 + sw^2*(4 - 8*swC^2) + 
        4*sw^4*(-1 + 4*swC^2))*t^2))/(cwC^2*mz^2*Pi^d*(mz^2 - s)*s*sw^2*
     (-1 + sw^2)*swC^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, ((I/9)*2^(-5 - 3*d)*EL^6*
     (2^(1 + 2*d)*(-2 + d)*mz^4*Pi^(2*d)*(-3 + 8*swC^2)*
       (-1 + 2*swC^2 + sw^2*(4 - 8*swC^2) + 4*sw^4*(-1 + 4*swC^2)) + 
      (2^(1 + 2*d)*Pi^(2*d)*(t + (mz^2*(s + 2*t))/s)*
        ((-2 + d)*mz^2*(s*(3*d*(1 + 4*sw^4 - 2*swC^2 + sw^2*(-4 + 8*swC^2)) - 
             4*(3 - 8*swC^2 + 4*swC^4 - 4*sw^2*(3 - 8*swC^2 + 4*swC^4) + 4*
                sw^4*(3 - 5*swC^2 + 8*swC^4))) - 2*(-3 + 8*swC^2)*
            (-1 + 2*swC^2 + sw^2*(4 - 8*swC^2) + 4*sw^4*(-1 + 4*swC^2))*t) + 
         2*s*(s*(-6 + 4*swC^2 + 16*swC^4 - 8*sw^2*(-3 + 2*swC^2 + 8*swC^4) + 
             8*sw^4*(-3 - 10*swC^2 + 16*swC^4) + 3*d*(1 + 4*sw^4 - 2*swC^2 + 
               sw^2*(-4 + 8*swC^2))) - (-4 + d)*(-3 + 8*swC^2)*
            (-1 + 2*swC^2 + sw^2*(4 - 8*swC^2) + 4*sw^4*(-1 + 4*swC^2))*t)))/
       s + mz^2*(-3*d^3*(2*Pi)^(2*d)*s + 2^(1 + 2*d)*Pi^(2*d)*
         (s*(3*d^3*(-2*sw^4 + swC^2 + sw^2*(2 - 4*swC^2)) + 
            d^2*(18 - 32*swC^2 - 8*swC^4 + 8*sw^2*(-9 + 16*swC^2 + 4*swC^4) - 
              8*sw^4*(-9 - 5*swC^2 + 8*swC^4)) + 20*d*(-3 + 4*swC^2 + 
              4*swC^4 - 4*sw^2*(-3 + 4*swC^2 + 4*swC^4) + 4*sw^4*(-3 - 
                5*swC^2 + 8*swC^4)) - 20*(-3 + 2*swC^2 + 8*swC^4 - 
              4*sw^2*(-3 + 2*swC^2 + 8*swC^4) + 4*sw^4*(-3 - 10*swC^2 + 
                16*swC^4))) + (36*d^2*(1 + 4*sw^4 - 2*swC^2 + 
              sw^2*(-4 + 8*swC^2)) - 3*d^3*(1 + 4*sw^4 - 2*swC^2 + 
              sw^2*(-4 + 8*swC^2)) + 8*(21 - 44*swC^2 + 4*swC^4 - 
              4*sw^2*(21 - 44*swC^2 + 4*swC^4) + 4*sw^4*(21 - 5*swC^2 + 
                8*swC^4)) - 2*d*(69 - 142*swC^2 + 8*swC^4 - 4*sw^2*(69 - 
                142*swC^2 + 8*swC^4) + 4*sw^4*(69 - 10*swC^2 + 16*swC^4)))*
           t)) + 2*(3*d*(2*Pi)^(2*d)*(d*s^2 + t^2) + 2^(1 + 2*d)*Pi^(2*d)*
         (s^2*(3*d^2*(2*sw^4 - swC^2 + sw^2*(-2 + 4*swC^2)) + 
            d*(-6 + 8*swC^2 + 8*swC^4 - 8*sw^2*(-3 + 4*swC^2 + 4*swC^4) + 
              8*sw^4*(-3 - 5*swC^2 + 8*swC^4)) + 2*(3 - 2*swC^2 - 8*swC^4 + 
              sw^4*(12 + 40*swC^2 - 64*swC^4) + 4*sw^2*(-3 + 2*swC^2 + 
                8*swC^4))) + s*(-18*d*(1 + 4*sw^4 - 2*swC^2 + 
              sw^2*(-4 + 8*swC^2)) + 3*d^2*(1 + 4*sw^4 - 2*swC^2 + 
              sw^2*(-4 + 8*swC^2)) + 2*(15 - 34*swC^2 + 8*swC^4 - 
              4*sw^2*(15 - 34*swC^2 + 8*swC^4) + sw^4*(60 - 40*swC^2 + 
                64*swC^4)))*t + (-3 - 7*(-2 + d)*swC^2 + 8*(-2 + d)*swC^4 - 
            2*(-2 + d)*sw^2*(3 - 14*swC^2 + 16*swC^4) + 2*(-2 + d)*sw^4*
             (3 - 20*swC^2 + 32*swC^4))*t^2)) + 
      (2^(1 + 2*d)*Pi^(2*d)*(-3 + 8*swC^2)*(-1 + 2*swC^2 + 
         sw^2*(4 - 8*swC^2) + 4*sw^4*(-1 + 4*swC^2))*((-2 + d)*s^2*t^2 + 
         mz^4*((-2 + d)*s^2 + 4*(-1 + d)*s*t + 4*(-1 + d)*t^2) + 
         2*mz^2*s*t*(-2*t + d*(s + 2*t))))/s^2))/(cwC^2*Pi^(3*d)*(mz^2 - s)*
     sw^2*(-1 + sw^2)*swC^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}, {((-I/9)*2^(-3 - d)*(16 - 7*d + d^2)*EL^6*
     (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
      2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
      4*(3 - 20*sw^2 + 32*sw^4)*t^2))/((-4 + d)*Pi^d*(mz^2 - s)*s*sw^2*
     (-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0}, {((I/9)*4^(-3 - d)*EL^6*(9*(-7 + d)*d^3*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(s^2*(3*d^4*(4*sw^4 + swC^2*(-5 + 4*swC^2) + 
            sw^2*(-5 + 8*swC^2)) - 36*d^2*(-6 + 20*swC^2 - 16*swC^4 + 
            sw^2*(20 - 19*swC^2 - 20*swC^4) + 4*sw^4*(-4 - 5*swC^2 + 
              8*swC^4)) - 32*(-9 + 30*swC^2 - 24*swC^4 + 
            sw^2*(30 + 4*swC^2 - 80*swC^4) + 8*sw^4*(-3 - 10*swC^2 + 
              16*swC^4)) + d^3*(sw^2*(165 - 212*swC^2 - 80*swC^4) + 
            4*sw^4*(-33 - 20*swC^2 + 32*swC^4) - 3*(6 - 55*swC^2 + 
              44*swC^4)) + 6*d*(-23*(3 - 10*swC^2 + 8*swC^4) + 
            8*sw^4*(-23 - 50*swC^2 + 80*swC^4) - 2*sw^2*(-115 + 54*swC^2 + 
              200*swC^4))) + s*(-36*d^3*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
            2*sw^2*(-5 + 8*swC^2)) + 3*d^4*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
            2*sw^2*(-5 + 8*swC^2)) + 128*(9 - 30*swC^2 + 24*swC^4 + 
            sw^2*(-30 + 74*swC^2 - 40*swC^4) + 8*sw^4*(3 - 5*swC^2 + 
              8*swC^4)) - 8*d*(sw^2*(-510 + 998*swC^2 - 280*swC^4) + 
            51*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(51 - 35*swC^2 + 
              56*swC^4)) + d^2*(177*(3 - 10*swC^2 + 8*swC^4) - 
            10*sw^2*(177 - 304*swC^2 + 32*swC^4) + 8*sw^4*(177 - 40*swC^2 + 
              64*swC^4)))*t + 2*(16 - 7*d + d^2)*(9 - 30*swC^2 + 24*swC^4 + 
          8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
            80*swC^4))*t^2)))/(cwC^2*(-4 + d)*Pi^(2*d)*(mz^2 - s)^2*sw^2*
     (-1 + sw^2)*swC^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
  {((-I/9)*2^(-5 - 3*d)*EL^6*(2*mz^2*(3*d^2*(2*Pi)^(2*d)*s^2 + 
        2^(1 + 2*d)*Pi^(2*d)*(s^2*(6 - 28*sw^2 + 24*sw^4 + 144*sw^6 - 
            128*sw^8 + 9*d^2*sw^2*(-1 + 2*sw^2) + d*(-6 + 32*sw^2 - 48*sw^4 - 
              72*sw^6 + 64*sw^8)) + s*(-15*d*(1 - 6*sw^2 + 12*sw^4) + 
            3*d^2*(1 - 6*sw^2 + 12*sw^4) + 8*(3 - 20*sw^2 + 48*sw^4 - 
              36*sw^6 + 32*sw^8))*t + 2*(3 - 26*sw^2 + 84*sw^4 - 144*sw^6 + 
            128*sw^8)*t^2)) - s*(3*d^2*(1 + d)*(2*Pi)^(2*d)*s^2 + 
        2^(1 + 2*d)*Pi^(2*d)*(s^2*(9*d^3*sw^2*(-1 + 2*sw^2) - 
            12*d*(-4 + 21*sw^2 - 30*sw^4 - 54*sw^6 + 48*sw^8) + 
            d^2*(-18 + 95*sw^2 - 174*sw^4 - 72*sw^6 + 64*sw^8) + 
            14*(-3 + 14*sw^2 - 12*sw^4 - 72*sw^6 + 64*sw^8)) + 
          s*(-36*d^2*(1 - 6*sw^2 + 12*sw^4) + 3*d^3*(1 - 6*sw^2 + 12*sw^4) - 
            56*(3 - 20*sw^2 + 48*sw^4 - 36*sw^6 + 32*sw^8) + 
            d*(129 - 790*sw^2 + 1644*sw^4 - 288*sw^6 + 256*sw^8))*t + 
          2*(-7 + d)*(3 - 26*sw^2 + 84*sw^4 - 144*sw^6 + 128*sw^8)*t^2))))/
    (Pi^(3*d)*(mz^2 - s)*sw^4*(s - s*sw^2)^2), 0, 0, 
   ((I/9)*2^(-5 - 3*d)*EL^6*(-3*d^2*(2*Pi)^(2*d)*s^3 + 
      3*2^(1 + 2*d)*Pi^(2*d)*s*(s^2*(6 - 28*sw^2 + 24*sw^4 + 144*sw^6 - 
          128*sw^8 + d^2*(2 - 9*sw^2 + 18*sw^4) + 
          d*(-6 + 32*sw^2 - 48*sw^4 - 72*sw^6 + 64*sw^8)) + 
        s*(-15*d*(1 - 6*sw^2 + 12*sw^4) + 3*d^2*(1 - 6*sw^2 + 12*sw^4) + 
          8*(3 - 20*sw^2 + 48*sw^4 - 36*sw^6 + 32*sw^8))*t + 
        2*(3 - 26*sw^2 + 84*sw^4 - 144*sw^6 + 128*sw^8)*t^2) + 
      2*mz^2*(3*d^2*(2*Pi)^(2*d)*s^2 + 2^(1 + 2*d)*Pi^(2*d)*
         (s^2*(6 - 28*sw^2 + 24*sw^4 + 144*sw^6 - 128*sw^8 + 
            9*d^2*sw^2*(-1 + 2*sw^2) + d*(-6 + 32*sw^2 - 48*sw^4 - 72*sw^6 + 
              64*sw^8)) + s*(-15*d*(1 - 6*sw^2 + 12*sw^4) + 
            3*d^2*(1 - 6*sw^2 + 12*sw^4) + 8*(3 - 20*sw^2 + 48*sw^4 - 
              36*sw^6 + 32*sw^8))*t + 2*(3 - 26*sw^2 + 84*sw^4 - 144*sw^6 + 
            128*sw^8)*t^2))))/(mz^2*Pi^(3*d)*(mz^2 - s)*s^2*sw^4*
     (-1 + sw^2)^2), 0, 0, 0, 0, 
   ((I/9)*2^(-5 - d)*EL^6*(s^2*(3*d^2*(1 - 6*sw^2 + 12*sw^4) + 
        4*(3 - 14*sw^2 + 12*sw^4 + 72*sw^6 - 64*sw^8) + 
        4*d*(-3 + 16*sw^2 - 24*sw^4 - 36*sw^6 + 32*sw^8)) + 
      2*s*(-15*d*(1 - 6*sw^2 + 12*sw^4) + 3*d^2*(1 - 6*sw^2 + 12*sw^4) + 
        8*(3 - 20*sw^2 + 48*sw^4 - 36*sw^6 + 32*sw^8))*t + 
      4*(3 - 26*sw^2 + 84*sw^4 - 144*sw^6 + 128*sw^8)*t^2))/
    (mz^2*Pi^d*(mz^2 - s)*s*sw^4*(-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/9)*2^(-5 - 3*d)*EL^6*(2^(1 + 2*d)*(-2 + d)*mz^4*Pi^(2*d)*
       (3 - 26*sw^2 + 84*sw^4 - 144*sw^6 + 128*sw^8) - 
      mz^2*(3*d^3*(2*Pi)^(2*d)*s + 2^(1 + 2*d)*Pi^(2*d)*
         (s*(9*d^3*sw^2*(-1 + 2*sw^2) + 2*d^2*(-9 + 52*sw^2 - 96*sw^4 - 
              36*sw^6 + 32*sw^8) - 20*d*(-3 + 16*sw^2 - 24*sw^4 - 36*sw^6 + 
              32*sw^8) + 20*(-3 + 14*sw^2 - 12*sw^4 - 72*sw^6 + 64*sw^8)) + 
          (-36*d^2*(1 - 6*sw^2 + 12*sw^4) + 3*d^3*(1 - 6*sw^2 + 12*sw^4) - 
            8*(21 - 128*sw^2 + 264*sw^4 - 36*sw^6 + 32*sw^8) + 
            2*d*(69 - 418*sw^2 + 852*sw^4 - 72*sw^6 + 64*sw^8))*t)) + 
      2*(3*d*(2*Pi)^(2*d)*(d*s^2 + t^2) + 2^(1 + 2*d)*Pi^(2*d)*
         (s^2*(6 - 28*sw^2 + 24*sw^4 + 144*sw^6 - 128*sw^8 + 
            9*d^2*sw^2*(-1 + 2*sw^2) + d*(-6 + 32*sw^2 - 48*sw^4 - 72*sw^6 + 
              64*sw^8)) + s*(-18*d*(1 - 6*sw^2 + 12*sw^4) + 
            3*d^2*(1 - 6*sw^2 + 12*sw^4) + 2*(15 - 94*sw^2 + 204*sw^4 - 
              72*sw^6 + 64*sw^8))*t + (-3 - 13*(-2 + d)*sw^2 + 
            42*(-2 + d)*sw^4 - 72*(-2 + d)*sw^6 + 64*(-2 + d)*sw^8)*t^2)) + 
      (2^(1 + 2*d)*Pi^(2*d)*(3 - 26*sw^2 + 84*sw^4 - 144*sw^6 + 128*sw^8)*
        ((-2 + d)*s^2*t^2 + mz^4*((-2 + d)*s^2 + 4*(-1 + d)*s*t + 
           4*(-1 + d)*t^2) + 2*mz^2*s*t*(-2*t + d*(s + 2*t))))/s^2 + 
      (2^(1 + d)*Pi^d*(t + (mz^2*(s + 2*t))/s)*
        (mz^2*(3*d^2*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (s*(9*d^2*sw^2*(-1 + 2*sw^2) + d*(-9 + 58*sw^2 - 132*sw^4 + 
                 72*sw^6 - 64*sw^8) + 4*(3 - 20*sw^2 + 48*sw^4 - 36*sw^6 + 
                 32*sw^8)) - (-2 + d)*(3 - 26*sw^2 + 84*sw^4 - 144*sw^6 + 128*
                sw^8)*t)) + 2*s*(3*d*(2*Pi)^d*(s - t) + 2^(1 + d)*Pi^d*
            (s*(-3 + (14 - 9*d)*sw^2 + 6*(-2 + 3*d)*sw^4 - 72*sw^6 + 64*
                sw^8) + (6 + 13*(-4 + d)*sw^2 - 42*(-4 + d)*sw^4 + 72*
                (-4 + d)*sw^6 - 64*(-4 + d)*sw^8)*t))))/s))/
    (Pi^(3*d)*(mz^2 - s)*sw^4*(-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {((I/9)*2^(-8 - d)*EL^6*(2*mz^2 - (-7 + d)*s)*
     (s^2*(3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
          sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
            8*swC^4)) + 4*(9 - 30*swC^2 + 24*swC^4 + 
          sw^8*(96 + 320*swC^2 - 512*swC^4) + 12*sw^4*(15 - 34*swC^2 + 
            8*swC^4) + 24*sw^6*(-9 + 2*swC^2 + 24*swC^4) - 
          2*sw^2*(33 - 94*swC^2 + 56*swC^4)) + 
        4*d*(-9 + 30*swC^2 - 24*swC^4 - 72*sw^6*(-3 + 3*swC^2 + 4*swC^4) + 
          32*sw^8*(-3 - 5*swC^2 + 8*swC^4) - 12*sw^4*(15 - 38*swC^2 + 
            16*swC^4) + 2*sw^2*(33 - 98*swC^2 + 64*swC^4))) + 
      2*s*(-15*d*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
          sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
            8*swC^4)) + 3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 
          8*sw^6*(-9 + 16*swC^2) + sw^2*(-22 + 68*swC^2 - 48*swC^4) + 
          12*sw^4*(5 - 14*swC^2 + 8*swC^4)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
          32*sw^8*(3 - 5*swC^2 + 8*swC^4) - 24*sw^6*(9 - 23*swC^2 + 
            12*swC^4) + 12*sw^4*(15 - 46*swC^2 + 32*swC^4) - 
          2*sw^2*(33 - 106*swC^2 + 80*swC^4)))*t + 
      4*(9 - 30*swC^2 + 24*swC^4 + sw^2*(-66 + 236*swC^2 - 208*swC^4) + 
        32*sw^8*(3 - 20*swC^2 + 32*swC^4) - 24*sw^6*(9 - 44*swC^2 + 
          48*swC^4) + 12*sw^4*(15 - 58*swC^2 + 56*swC^4))*t^2))/
    (cwC^2*Pi^d*(mz^2 - s)^2*s*sw^4*(-1 + sw^2)^2*swC^2), 0, 0, 
   ((-I/9)*2^(-8 - d)*EL^6*(2*mz^2 + 3*s)*
     (s^2*(3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
          sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
            8*swC^4)) + 4*(9 - 30*swC^2 + 24*swC^4 + 
          sw^8*(96 + 320*swC^2 - 512*swC^4) + 12*sw^4*(15 - 34*swC^2 + 
            8*swC^4) + 24*sw^6*(-9 + 2*swC^2 + 24*swC^4) - 
          2*sw^2*(33 - 94*swC^2 + 56*swC^4)) + 
        4*d*(-9 + 30*swC^2 - 24*swC^4 - 72*sw^6*(-3 + 3*swC^2 + 4*swC^4) + 
          32*sw^8*(-3 - 5*swC^2 + 8*swC^4) - 12*sw^4*(15 - 38*swC^2 + 
            16*swC^4) + 2*sw^2*(33 - 98*swC^2 + 64*swC^4))) + 
      2*s*(-15*d*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
          sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
            8*swC^4)) + 3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 
          8*sw^6*(-9 + 16*swC^2) + sw^2*(-22 + 68*swC^2 - 48*swC^4) + 
          12*sw^4*(5 - 14*swC^2 + 8*swC^4)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
          32*sw^8*(3 - 5*swC^2 + 8*swC^4) - 24*sw^6*(9 - 23*swC^2 + 
            12*swC^4) + 12*sw^4*(15 - 46*swC^2 + 32*swC^4) - 
          2*sw^2*(33 - 106*swC^2 + 80*swC^4)))*t + 
      4*(9 - 30*swC^2 + 24*swC^4 + sw^2*(-66 + 236*swC^2 - 208*swC^4) + 
        32*sw^8*(3 - 20*swC^2 + 32*swC^4) - 24*sw^6*(9 - 44*swC^2 + 
          48*swC^4) + 12*sw^4*(15 - 58*swC^2 + 56*swC^4))*t^2))/
    (cwC^2*mz^2*Pi^d*(mz^2 - s)^2*s*sw^4*(-1 + sw^2)^2*swC^2), 0, 0, 0, 0, 
   ((-I/9)*2^(-8 - d)*EL^6*
     (s^2*(3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
          sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
            8*swC^4)) + 4*(9 - 30*swC^2 + 24*swC^4 + 
          sw^8*(96 + 320*swC^2 - 512*swC^4) + 12*sw^4*(15 - 34*swC^2 + 
            8*swC^4) + 24*sw^6*(-9 + 2*swC^2 + 24*swC^4) - 
          2*sw^2*(33 - 94*swC^2 + 56*swC^4)) + 
        4*d*(-9 + 30*swC^2 - 24*swC^4 - 72*sw^6*(-3 + 3*swC^2 + 4*swC^4) + 
          32*sw^8*(-3 - 5*swC^2 + 8*swC^4) - 12*sw^4*(15 - 38*swC^2 + 
            16*swC^4) + 2*sw^2*(33 - 98*swC^2 + 64*swC^4))) + 
      2*s*(-15*d*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
          sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
            8*swC^4)) + 3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 
          8*sw^6*(-9 + 16*swC^2) + sw^2*(-22 + 68*swC^2 - 48*swC^4) + 
          12*sw^4*(5 - 14*swC^2 + 8*swC^4)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
          32*sw^8*(3 - 5*swC^2 + 8*swC^4) - 24*sw^6*(9 - 23*swC^2 + 
            12*swC^4) + 12*sw^4*(15 - 46*swC^2 + 32*swC^4) - 
          2*sw^2*(33 - 106*swC^2 + 80*swC^4)))*t + 
      4*(9 - 30*swC^2 + 24*swC^4 + sw^2*(-66 + 236*swC^2 - 208*swC^4) + 
        32*sw^8*(3 - 20*swC^2 + 32*swC^4) - 24*sw^6*(9 - 44*swC^2 + 
          48*swC^4) + 12*sw^4*(15 - 58*swC^2 + 56*swC^4))*t^2))/
    (cwC^2*mz^2*Pi^d*(mz^2 - s)^2*sw^4*(-1 + sw^2)^2*swC^2), 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((I/9)*2^(-8 - d)*EL^6*(2*mz^4 - (-8 + d)*mz^2*s + 2*s^2)*
     (s^2*(3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
          sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
            8*swC^4)) + 4*(9 - 30*swC^2 + 24*swC^4 + 
          sw^8*(96 + 320*swC^2 - 512*swC^4) + 12*sw^4*(15 - 34*swC^2 + 
            8*swC^4) + 24*sw^6*(-9 + 2*swC^2 + 24*swC^4) - 
          2*sw^2*(33 - 94*swC^2 + 56*swC^4)) + 
        4*d*(-9 + 30*swC^2 - 24*swC^4 - 72*sw^6*(-3 + 3*swC^2 + 4*swC^4) + 
          32*sw^8*(-3 - 5*swC^2 + 8*swC^4) - 12*sw^4*(15 - 38*swC^2 + 
            16*swC^4) + 2*sw^2*(33 - 98*swC^2 + 64*swC^4))) + 
      2*s*(-15*d*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
          sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
            8*swC^4)) + 3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 
          8*sw^6*(-9 + 16*swC^2) + sw^2*(-22 + 68*swC^2 - 48*swC^4) + 
          12*sw^4*(5 - 14*swC^2 + 8*swC^4)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
          32*sw^8*(3 - 5*swC^2 + 8*swC^4) - 24*sw^6*(9 - 23*swC^2 + 
            12*swC^4) + 12*sw^4*(15 - 46*swC^2 + 32*swC^4) - 
          2*sw^2*(33 - 106*swC^2 + 80*swC^4)))*t + 
      4*(9 - 30*swC^2 + 24*swC^4 + sw^2*(-66 + 236*swC^2 - 208*swC^4) + 
        32*sw^8*(3 - 20*swC^2 + 32*swC^4) - 24*sw^6*(9 - 44*swC^2 + 
          48*swC^4) + 12*sw^4*(15 - 58*swC^2 + 56*swC^4))*t^2))/
    (cwC^2*Pi^d*(mz^2 - s)^2*s*sw^4*(-1 + sw^2)^2*swC^2), 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {((-I/9)*4^(-2 - d)*EL^6*(-3*d^2*(1 + d)*(2*Pi)^d*s^3 + 
      2^(1 + d)*mz^2*Pi^d*(1 - sw^2)*(s^2*(3*d^2 - 4*d*(3 + 2*sw^2) + 
          4*(3 + 4*sw^2)) + 2*s*(24 - 15*d + 3*d^2 - 16*sw^2)*t + 
        4*(3 - 8*sw^2)*t^2) + 2^(1 + d)*Pi^d*s*
       (2*s^2*(d^2*(9 + 2*sw^2) - 6*d*(4 + 3*sw^2) + 7*(3 + 4*sw^2)) - 
        (-7 + d)*s*(24 - 15*d + 3*d^2 - 16*sw^2)*t + 2*(-7 + d)*(-3 + 8*sw^2)*
         t^2)))/(Pi^(2*d)*(mz^2 - s)*s^2*sw^4*(-1 + sw^2)), 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/9)*2^(-4 - d)*EL^6*(s^2*(3*d^2 - 4*d*(3 + 2*sw^2) + 4*(3 + 4*sw^2)) + 
      2*s*(24 - 15*d + 3*d^2 - 16*sw^2)*t + 4*(3 - 8*sw^2)*t^2))/
    (mz^2*Pi^d*(mz^2 - s)*s*sw^4*(-1 + sw^2)^2), 0, 
   ((I/9)*4^(-2 - d)*EL^6*(-3*d^2*(2*Pi)^d*s^3 + 3*2^(1 + d)*Pi^d*s*
       (2*s^2*(3 + d^2 + 4*sw^2 - d*(3 + 2*sw^2)) + 
        s*(24 - 15*d + 3*d^2 - 16*sw^2)*t + 2*(3 - 8*sw^2)*t^2) + 
      2^(1 + d)*mz^2*Pi^d*(1 - sw^2)*(s^2*(3*d^2 - 4*d*(3 + 2*sw^2) + 
          4*(3 + 4*sw^2)) + 2*s*(24 - 15*d + 3*d^2 - 16*sw^2)*t + 
        4*(3 - 8*sw^2)*t^2)))/(mz^2*Pi^(2*d)*s^2*(-mz^2 + s)*sw^4*
     (-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/9)*4^(-2 - d)*EL^6*(2^(1 + d)*Pi^d*s^2*
       (s^2*(3*d^2 - 4*d*(3 + 2*sw^2) + 4*(3 + 4*sw^2)) + 
        2*s*(24 - 15*d + 3*d^2 - 16*sw^2)*t + 4*(3 - 8*sw^2)*t^2) + 
      2^(1 + d)*mz^4*Pi^d*(-1 + sw^2)^2*
       (s^2*(3*d^2 - 4*d*(3 + 2*sw^2) + 4*(3 + 4*sw^2)) + 
        2*s*(24 - 15*d + 3*d^2 - 16*sw^2)*t + 4*(3 - 8*sw^2)*t^2) + 
      mz^2*(1 - sw^2)*(-3*d^3*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
         (2*s^2*(d^2*(9 + 2*sw^2) + 8*(3 + 4*sw^2) - d*(27 + 20*sw^2)) - 
          (-8 + d)*s*(24 - 15*d + 3*d^2 - 16*sw^2)*t + 
          2*(-8 + d)*(-3 + 8*sw^2)*t^2))))/(Pi^(2*d)*(mz^2 - s)*s^2*sw^4*
     (-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
  {((-I/9)*2^(-7 - d)*EL^6*((-7 + d)*s + 2*mz^2*(-1 + sw^2))*(-1 + 2*swC^2)*
     ((-2 + d)*s^2*(18 - 24*swC^2 - 8*sw^2*(3 + 4*swC^2) + 
        3*d*(-3 + 4*sw^2 + 4*swC^2)) + 2*s*(-72 + 96*swC^2 + 
        sw^2*(96 - 64*swC^2) - 15*d*(-3 + 4*sw^2 + 4*swC^2) + 
        3*d^2*(-3 + 4*sw^2 + 4*swC^2))*t + 
      4*(-9 + 12*swC^2 - 4*sw^2*(-3 + 8*swC^2))*t^2))/
    (cwC^2*Pi^d*(mz^2 - s)^2*s*sw^4*(-1 + sw^2)*swC^2), 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((I/9)*2^(-7 - d)*EL^6*(-1 + 2*swC^2)*
     ((-2 + d)*s^2*(18 - 24*swC^2 - 8*sw^2*(3 + 4*swC^2) + 
        3*d*(-3 + 4*sw^2 + 4*swC^2)) + 2*s*(-72 + 96*swC^2 + 
        sw^2*(96 - 64*swC^2) - 15*d*(-3 + 4*sw^2 + 4*swC^2) + 
        3*d^2*(-3 + 4*sw^2 + 4*swC^2))*t + 
      4*(-9 + 12*swC^2 - 4*sw^2*(-3 + 8*swC^2))*t^2))/
    (cwC^2*mz^2*Pi^d*(mz^2 - s)^2*sw^4*(-1 + sw^2)^2*swC^2), 0, 
   ((I/9)*2^(-7 - d)*EL^6*(3*s - 2*mz^2*(-1 + sw^2))*(-1 + 2*swC^2)*
     ((-2 + d)*s^2*(18 - 24*swC^2 - 8*sw^2*(3 + 4*swC^2) + 
        3*d*(-3 + 4*sw^2 + 4*swC^2)) + 2*s*(-72 + 96*swC^2 + 
        sw^2*(96 - 64*swC^2) - 15*d*(-3 + 4*sw^2 + 4*swC^2) + 
        3*d^2*(-3 + 4*sw^2 + 4*swC^2))*t + 
      4*(-9 + 12*swC^2 - 4*sw^2*(-3 + 8*swC^2))*t^2))/
    (cwC^2*mz^2*Pi^d*(mz^2 - s)^2*s*sw^4*(-1 + sw^2)^2*swC^2), 0, 0, 0, 0, 0, 
   0, 0, 0, 0, ((I/9)*2^(-7 - d)*EL^6*(2*s^2 + (-8 + d)*mz^2*s*(-1 + sw^2) + 
      2*mz^4*(-1 + sw^2)^2)*(-1 + 2*swC^2)*
     ((-2 + d)*s^2*(18 - 24*swC^2 - 8*sw^2*(3 + 4*swC^2) + 
        3*d*(-3 + 4*sw^2 + 4*swC^2)) + 2*s*(-72 + 96*swC^2 + 
        sw^2*(96 - 64*swC^2) - 15*d*(-3 + 4*sw^2 + 4*swC^2) + 
        3*d^2*(-3 + 4*sw^2 + 4*swC^2))*t + 
      4*(-9 + 12*swC^2 - 4*sw^2*(-3 + 8*swC^2))*t^2))/
    (cwC^2*Pi^d*(mz^2 - s)^2*s*sw^4*(-1 + sw^2)*swC^2), 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((I/9)*2^(-1 - d)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
    ((-1 + d)*mz^4*Pi^d*s*sw^2*(-1 + sw^2)^2), 
   ((I/9)*4^(-1 - d)*EL^6*(-3*d*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
       ((1 + d)*s^2 - 2*s*t - 2*t^2) + 2^(2 + d)*mz^2*Pi^d*(1 - sw^2)*
       ((-2 + d)*s^2 + 4*s*t + 4*t^2)*GaugeXi[W]))/
    ((-1 + d)*mz^4*Pi^(2*d)*s*(sw - sw^3)^2), 
   ((-I/9)*2^(-1 - d)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
     (2*s - 4*d*s + (-5 + 4*d)*mz^2*(-1 + sw^2) + (s + mz^2*(-1 + sw^2))*
       GaugeXi[W]))/((-1 + d)*mz^2*Pi^d*s^3*sw^2*(-1 + sw^2)), 
   ((-I/9)*2^(-2 - d)*EL^6*(s + 2*mz^2*(-1 + sw^2))*
     (s^2 - 4*(-3 + 2*d)*mz^2*s*(-1 + sw^2) + 4*(-1 + d)*mz^4*(-1 + sw^2)^2)*
     ((-2 + d)*s^2 + 4*s*t + 4*t^2))/((-1 + d)*mz^4*Pi^d*s^3*sw^2*
     (-1 + sw^2)^2), ((I/9)*2^(1 - 2*d)*EL^6*mz^2*(-1 + sw^2)*
     (2^(1 + d)*Pi^d*s*((-2 + d)*s^2 + 4*s*t + 4*t^2) + 
      mz^2*(-1 + sw^2)*(-(d*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*
         (s^2 - 2*s*t - 2*t^2))))/(Pi^(2*d)*s^3*sw^2), 0, 0, 
   ((-I/9)*2^(-1 - d)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
     (s^2 - 2*(-3 + 2*d)*mz^2*s*(-1 + sw^2) + mz^4*(-1 + sw^2)^2 - 
      mz^2*(-1 + sw^2)*(s + mz^2*(-1 + sw^2))*GaugeXi[W]))/
    ((-1 + d)*mz^4*Pi^d*s^3*sw^2*(-1 + sw^2)^2), 
   ((I/9)*2^(-1 - d)*EL^6*(s + mz^2*(-1 + sw^2))*((-2 + d)*s^2 + 4*s*t + 
      4*t^2)*(s^2 - 2*(-3 + 2*d)*mz^2*s*(-1 + sw^2) + mz^4*(-1 + sw^2)^2 - 
      2*mz^2*(-1 + sw^2)*(-s + mz^2*(-1 + sw^2))*GaugeXi[W] + 
      mz^4*(-1 + sw^2)^2*GaugeXi[W]^2))/((-1 + d)*mz^4*Pi^d*s^3*sw^2*
     (-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((I/9)*2^(-5 - 2*d)*EL^6*(-3*d^2*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(s^2*(-6 + 4*swC^2 + 3*d^2*swC^2 + 16*swC^4 + 
          d*(6 - 8*swC^2 - 8*swC^4)) + s*(24 - 15*d + 3*d^2 - 16*swC^2)*
         (-1 + 2*swC^2)*t - 2*(3 - 14*swC^2 + 16*swC^4)*t^2) + 
      2^(1 + d)*Pi^d*(-1 + 2*swC^2)*(s^2*(-3*d^2 + 4*d*(3 + 2*swC^2) - 
          4*(3 + 4*swC^2)) + 2*s*(-24 + 15*d - 3*d^2 + 16*swC^2)*t + 
        4*(-3 + 8*swC^2)*t^2)*GaugeXi[W] + 
      (-3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(-6 + 4*swC^2 + 3*d^2*swC^2 + 16*swC^4 + 
            d*(6 - 8*swC^2 - 8*swC^4)) + s*(24 - 15*d + 3*d^2 - 16*swC^2)*
           (-1 + 2*swC^2)*t - 2*(3 - 14*swC^2 + 16*swC^4)*t^2))*
       GaugeXi[W]^2))/(cwC^2*(-1 + d)*mz^4*Pi^(2*d)*(mz^2 - s)*sw^2*
     (-1 + sw^2)^2*swC^2*(-1 + GaugeXi[W])^2), 
   ((-I/9)*2^(-6 - 5*d)*EL^6*(2^(1 + 4*d)*(-1 + d)*Pi^(4*d)*(-1 + 2*swC^2)*
       (s*(-6 + 3*d - 8*swC^2) + 2*(-3 + 8*swC^2)*t)*(-1 + GaugeXi[W])^2*
       (s + 2*mz^2*(-1 + sw^2)*GaugeXi[W])^2 + 2^(1 + 4*d)*Pi^(4*d)*s*
       (3 - 14*swC^2 + 16*swC^4)*(-1 + GaugeXi[W])^2*
       (d*s^2 + 4*d*mz^2*s*(-1 + sw^2)*GaugeXi[W] + 4*(-1 + d)*mz^4*
         (-1 + sw^2)^2*GaugeXi[W]^2) + (2*Pi)^(4*d)*(1 - 2*swC^2)*
       (s*(-12 + 3*d + 8*swC^2) + 2*(-3 + 8*swC^2)*t)*(-1 + GaugeXi[W])^2*
       (s*(d*s + 2*t) + 4*mz^2*(-1 + sw^2)*(d*s + 2*t)*GaugeXi[W] + 
        4*(-1 + d)*mz^4*(-1 + sw^2)^2*GaugeXi[W]^2) + 
      2*(1 - d)*(1 - 2*swC^2)*((2*Pi)^(4*d)*s^2*(-6 + 3*d - 8*swC^2)*t - 
        2^(1 + 4*d)*Pi^(4*d)*s*(s - 2*mz^2*(-1 + sw^2))*(-6 + 3*d - 8*swC^2)*
         t*GaugeXi[W] - (-((2*Pi)^(4*d)*s^2*(-6 + 3*d - 8*swC^2)*t) + 
          2^(3 + 4*d)*mz^2*Pi^(4*d)*s*(-1 + sw^2)*(-6 + 3*d - 8*swC^2)*t + 
          2^(1 + 4*d)*mz^4*Pi^(4*d)*(-1 + sw^2)^2*(s*(-6 + 3*d - 8*swC^2) + 
            2*(-3 + 8*swC^2)*t))*GaugeXi[W]^2 + 4^(1 + 2*d)*mz^2*Pi^(4*d)*
         (1 - sw^2)*(s*(6 - 3*d + 8*swC^2)*t + mz^2*(1 - sw^2)*
           (s*(-6 + 3*d - 8*swC^2) + 2*(-3 + 8*swC^2)*t))*GaugeXi[W]^3 + 
        2^(1 + 4*d)*mz^4*Pi^(4*d)*(-1 + sw^2)^2*(s*(6 - 3*d + 8*swC^2) + 
          2*(3 - 8*swC^2)*t)*GaugeXi[W]^4)))/(cwC^2*(-1 + d)*mz^4*Pi^(5*d)*
     (mz^2 - s)*sw^2*(-1 + sw^2)^2*swC^2*(-1 + GaugeXi[W])^2), 
   ((-I/9)*2^(-5 - d)*EL^6*(-1 + 2*swC^2)*
     (s^2*(3*d^2 - 4*d*(3 + 2*swC^2) + 4*(3 + 4*swC^2)) + 
      2*s*(24 - 15*d + 3*d^2 - 16*swC^2)*t + 4*(3 - 8*swC^2)*t^2)*
     (2*s - 4*d*s + (-5 + 4*d)*mz^2*(-1 + sw^2) + (s + mz^2*(-1 + sw^2))*
       GaugeXi[W]))/(cwC^2*(-1 + d)*mz^2*Pi^d*(mz^2 - s)*s^2*sw^2*(-1 + sw^2)*
     swC^2), ((-I/9)*4^(-3 - 2*d)*EL^6*
     (-(2^(1 + 3*d)*Pi^(3*d)*s^2*(-s - 2*mz^2*(-1 + sw^2))*
        (d*s^2 + 4*d*mz^2*s*(-1 + sw^2) + 4*(-1 + d)*mz^4*(-1 + sw^2)^2)*
        (3 - 14*swC^2 + 16*swC^4)) + 2^(2 + 3*d)*(-1 + d)*mz^4*Pi^(3*d)*
       (-1 + sw^2)^2*(s + 2*mz^2*(-1 + sw^2))*(3 - 14*swC^2 + 16*swC^4)*
       ((-2 + d)*s^2 - 4*s*t - 4*(-1 + d)*t^2) - (2*Pi)^(3*d)*s*
       (-s - 2*mz^2*(-1 + sw^2))*(1 - 2*swC^2)*(s*(-12 + 3*d + 8*swC^2) + 
        2*(-3 + 8*swC^2)*t)*(4*(-1 + d)*mz^4*(-1 + sw^2)^2 + s*(d*s + 2*t) + 
        4*mz^2*(-1 + sw^2)*(d*s + 2*t)) - 2^(1 + 3*d)*(1 - d)*Pi^(3*d)*s*
       (-s/2 - mz^2*(-1 + sw^2))*(1 - 2*swC^2)*
       (8*mz^4*(-1 + sw^2)^2*(4*(-3 + d)*s*swC^2 + (-3 + 8*swC^2)*t) + 
        s^2*(s*(-6 + 3*d - 8*swC^2) + 2*(-3 + 8*swC^2)*t) + 
        4*mz^2*s*(-1 + sw^2)*(s*(-6 + 3*d - 8*swC^2) + 2*(-3 + 8*swC^2)*t)) + 
      2*(1 - d)*s*(-s/2 - mz^2*(-1 + sw^2))*(1 - 2*swC^2)*
       ((2*Pi)^(3*d)*s^2*(s*(6 - 3*d + 8*swC^2) + 2*(3 - 8*swC^2)*t) + 
        2^(2 + 3*d)*mz^2*Pi^(3*d)*s*(1 - sw^2)*(s*(-6 + 3*d - 8*swC^2) + 
          2*(-3 + 8*swC^2)*t) + 2^(2 + 3*d)*mz^4*Pi^(3*d)*(-1 + sw^2)^2*
         (s*(30 + 3*d^2 - 8*swC^2 + d*(-21 + 8*swC^2)) + 
          2*(-3 + d)*(-3 + 8*swC^2)*t)) - 2^(2 + 3*d)*(1 - d)*mz^4*Pi^(3*d)*
       (-1 + sw^2)^2*(1 - 2*swC^2)*(s + 2*t)*
       (-2*(-2 + d)*mz^2*(-1 + sw^2)*(s*(-6 + 3*d - 8*swC^2) + 
          2*(-3 + 8*swC^2)*t) - s*(s*(36 + 3*d^2 + 48*swC^2 - 
            8*d*(3 + swC^2)) + 2*(2 + d)*(-3 + 8*swC^2)*t)) - 
      2*(1 - d)*s*((2*Pi)^(3*d)*s^3*(-6 + 3*d - 8*swC^2)*(-1 + 2*swC^2)*t + 
        2^(2 + 3*d)*(-3 + d)*mz^6*Pi^(3*d)*(-1 + sw^2)^3*(-1 + 2*swC^2)*
         (s*(-6 + 3*d - 8*swC^2) + 2*(-3 + 8*swC^2)*t) - 
        2^(1 + 3*d)*mz^4*Pi^(3*d)*s*(-1 + sw^2)^2*(-1 + 2*swC^2)*
         (3*s*(18 - 15*d + 3*d^2 + 24*swC^2 - 8*d*swC^2) + 
          2*(111 + 12*d^2 + 40*swC^2 - d*(75 + 8*swC^2))*t) + 
        2*mz^2*s*(1 - sw^2)*(69*d*(2*Pi)^(3*d)*s*t + 2^(1 + 3*d)*Pi^(3*d)*
           (s^2*(-1 + 2*swC^2)*(3*d^2 - 4*d*(3 + 2*swC^2) + 
              4*(3 + 4*swC^2)) + s*(-57 + 134*swC^2 - 69*d*swC^2 - 40*swC^4 + 
              6*d^2*(-1 + 2*swC^2))*t - 4*(3 - 14*swC^2 + 16*swC^4)*t^2)))))/
    (cwC^2*(-1 + d)*mz^4*Pi^(4*d)*(mz^2 - s)*s^2*sw^2*(-1 + sw^2)^2*swC^2), 
   ((I/9)*2^(-3 - d)*EL^6*mz^2*(-1 + sw^2)*(-2*s + mz^2*(-1 + sw^2))*
     (-1 + 2*swC^2)*(s^2*(-3*d^2 + 4*d*(3 + 2*swC^2) - 4*(3 + 4*swC^2)) + 
      2*s*(-24 + 15*d - 3*d^2 + 16*swC^2)*t + 4*(-3 + 8*swC^2)*t^2))/
    (cwC^2*Pi^d*(mz^2 - s)*s^2*sw^2*swC^2), 0, 0, 
   ((-I/9)*2^(-5 - 4*d)*EL^6*(3*d^2*(2*Pi)^(3*d)*s^4 + 
      2^(1 + 3*d)*Pi^(3*d)*s^2*(s^2*(6 - 4*swC^2 - 3*d^2*swC^2 - 16*swC^4 + 
          d*(-6 + 8*swC^2 + 8*swC^4)) - s*(24 - 15*d + 3*d^2 - 16*swC^2)*
         (-1 + 2*swC^2)*t + 2*(3 - 14*swC^2 + 16*swC^4)*t^2) + 
      mz^4*(-1 + sw^2)^2*(3*d^2*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
         (s^2*(6 - 4*swC^2 - 3*d^2*swC^2 - 16*swC^4 + 
            d*(-6 + 8*swC^2 + 8*swC^4)) - s*(24 - 15*d + 3*d^2 - 16*swC^2)*
           (-1 + 2*swC^2)*t + 2*(3 - 14*swC^2 + 16*swC^4)*t^2)) - 
      2*mz^2*s*(1 - sw^2)*(33*d^2*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
         (s^2*(d^3*(-3 + 6*swC^2) - d^2*swC^2*(25 + 16*swC^2) - 
            6*(-3 + 2*swC^2 + 8*swC^4) + d*(-30 + 32*swC^2 + 56*swC^4)) + 
          (-3 + 2*d)*s*(24 - 15*d + 3*d^2 - 16*swC^2)*(-1 + 2*swC^2)*t - 
          2*(-3 + 2*d)*(3 - 14*swC^2 + 16*swC^4)*t^2)) + 
      (2*s^2*(-3*d^2*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
           (s^2*(-6 + 4*swC^2 + 3*d^2*swC^2 + 16*swC^4 + d*(6 - 8*swC^2 - 
                8*swC^4)) + s*(24 - 15*d + 3*d^2 - 16*swC^2)*(-1 + 2*swC^2)*
             t - 2*(3 - 14*swC^2 + 16*swC^4)*t^2)) + 3*mz^4*(-1 + sw^2)^2*
         (-3*d^2*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
           (s^2*(-6 + 4*swC^2 + 3*d^2*swC^2 + 16*swC^4 + d*(6 - 8*swC^2 - 
                8*swC^4)) + s*(24 - 15*d + 3*d^2 - 16*swC^2)*(-1 + 2*swC^2)*
             t - 2*(3 - 14*swC^2 + 16*swC^4)*t^2)) + mz^2*s*(1 - sw^2)*
         (135*d^2*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
           (s^2*(12*d^3*(-1 + 2*swC^2) - d^2*swC^2*(103 + 64*swC^2) - 
              26*(-3 + 2*swC^2 + 8*swC^4) + 2*d*(-63 + 68*swC^2 + 
                116*swC^4)) + (-13 + 8*d)*s*(24 - 15*d + 3*d^2 - 16*swC^2)*
             (-1 + 2*swC^2)*t - 2*(-13 + 8*d)*(3 - 14*swC^2 + 16*swC^4)*
             t^2)))*GaugeXi[W] + (3*d^2*(2*Pi)^(3*d)*s^4 + 
        2^(1 + 3*d)*Pi^(3*d)*s^2*(s^2*(6 - 4*swC^2 - 3*d^2*swC^2 - 16*swC^4 + 
            d*(-6 + 8*swC^2 + 8*swC^4)) - s*(24 - 15*d + 3*d^2 - 16*swC^2)*
           (-1 + 2*swC^2)*t + 2*(3 - 14*swC^2 + 16*swC^4)*t^2) - 
        3*mz^4*(-1 + sw^2)^2*(-3*d^2*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
           (s^2*(-6 + 4*swC^2 + 3*d^2*swC^2 + 16*swC^4 + d*(6 - 8*swC^2 - 
                8*swC^4)) + s*(24 - 15*d + 3*d^2 - 16*swC^2)*(-1 + 2*swC^2)*
             t - 2*(3 - 14*swC^2 + 16*swC^4)*t^2)) - 4*mz^2*s*(1 - sw^2)*
         (-3*d^3*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
           (s^2*(3*d^3*swC^2 + d^2*(9 - 14*swC^2 - 8*swC^4) - 
              4*(-3 + 2*swC^2 + 8*swC^4) + 2*d*(-9 + 10*swC^2 + 16*swC^4)) + 
            (-2 + d)*s*(24 - 15*d + 3*d^2 - 16*swC^2)*(-1 + 2*swC^2)*t - 
            2*(-2 + d)*(3 - 14*swC^2 + 16*swC^4)*t^2)))*GaugeXi[W]^2 + 
      mz^2*(1 - sw^2)*(-s - mz^2*(-1 + sw^2))*(-3*d^2*(2*Pi)^(3*d)*s^2 + 
        2^(1 + 3*d)*Pi^(3*d)*(s^2*(-6 + 4*swC^2 + 3*d^2*swC^2 + 16*swC^4 + 
            d*(6 - 8*swC^2 - 8*swC^4)) + s*(24 - 15*d + 3*d^2 - 16*swC^2)*
           (-1 + 2*swC^2)*t - 2*(3 - 14*swC^2 + 16*swC^4)*t^2))*
       GaugeXi[W]^3))/(cwC^2*(-1 + d)*mz^4*Pi^(4*d)*s^2*(-mz^2 + s)*sw^2*
     (-1 + sw^2)^2*swC^2*(-1 + GaugeXi[W])^2), 
   ((-I/9)*2^(-5 - d)*EL^6*(s + mz^2*(-1 + sw^2))*(-1 + 2*swC^2)*
     (s^2*(-3*d^2 + 4*d*(3 + 2*swC^2) - 4*(3 + 4*swC^2)) + 
      2*s*(-24 + 15*d - 3*d^2 + 16*swC^2)*t + 4*(-3 + 8*swC^2)*t^2)*
     (s^2 - 2*(-3 + 2*d)*mz^2*s*(-1 + sw^2) + mz^4*(-1 + sw^2)^2 - 
      2*mz^2*(-1 + sw^2)*(-s + mz^2*(-1 + sw^2))*GaugeXi[W] + 
      mz^4*(-1 + sw^2)^2*GaugeXi[W]^2))/(cwC^2*(-1 + d)*mz^4*Pi^d*(mz^2 - s)*
     s^2*sw^2*(-1 + sw^2)^2*swC^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, ((I/9)*4^(-2 - d)*EL^6*(-3*d^2*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(s^2*(-6 - 8*sw^2 + d*(6 + 4*sw^2)) + 
        s*(-24 + 15*d - 3*d^2 + 16*sw^2)*t + 2*(-3 + 8*sw^2)*t^2) + 
      2^(1 + d)*Pi^d*(s^2*(3*d^2 - 4*d*(3 + 2*sw^2) + 4*(3 + 4*sw^2)) + 
        2*s*(24 - 15*d + 3*d^2 - 16*sw^2)*t + 4*(3 - 8*sw^2)*t^2)*
       GaugeXi[W] + (-3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(-6 + 6*d - 8*sw^2 + 4*d*sw^2) + s*(-24 + 15*d - 3*d^2 + 
            16*sw^2)*t + 2*(-3 + 8*sw^2)*t^2))*GaugeXi[W]^2))/
    ((-1 + d)*mz^4*Pi^(2*d)*(mz^2 - s)*sw^4*(-1 + sw^2)^2*
     (-1 + GaugeXi[W])^2), ((I/9)*2^(-5 - d)*EL^6*
     (s^2*(3*d^2 - 4*d*(3 + 2*sw^2) + 4*(3 + 4*sw^2)) + 
      2*s*(24 - 15*d + 3*d^2 - 16*sw^2)*t + 4*(3 - 8*sw^2)*t^2)*
     (s + 4*mz^2*(-1 + sw^2)*GaugeXi[W]))/((-1 + d)*mz^4*Pi^d*(mz^2 - s)*sw^4*
     (-1 + sw^2)^2), ((I/9)*2^(-4 - d)*EL^6*
     (s^2*(3*d^2 - 4*d*(3 + 2*sw^2) + 4*(3 + 4*sw^2)) + 
      2*s*(24 - 15*d + 3*d^2 - 16*sw^2)*t + 4*(3 - 8*sw^2)*t^2)*
     (2*s - 4*d*s + (-5 + 4*d)*mz^2*(-1 + sw^2) + (s + mz^2*(-1 + sw^2))*
       GaugeXi[W]))/((-1 + d)*mz^2*Pi^d*(mz^2 - s)*s^2*sw^4*(-1 + sw^2)), 
   ((-I/9)*2^(-5 - 6*d)*EL^6*(2^(1 + 5*d)*Pi^(5*d)*s^2*(-3 + 8*sw^2)*
       (-s - 2*mz^2*(-1 + sw^2))*(d*s^2 + 4*d*mz^2*s*(-1 + sw^2) + 
        4*(-1 + d)*mz^4*(-1 + sw^2)^2)*(-1 + GaugeXi[W])^2 + 
      2^(2 + 5*d)*(1 - d)*mz^4*Pi^(5*d)*(3 - 8*sw^2)*(-1 + sw^2)^2*
       (-s - 2*mz^2*(-1 + sw^2))*((-2 + d)*s^2 - 4*s*t - 4*(-1 + d)*t^2)*
       (-1 + GaugeXi[W])^2 + 2*(1 - d)*s*(-s/2 - mz^2*(-1 + sw^2))*
       (2^(2 + 5*d)*mz^2*Pi^(5*d)*s*(-1 + sw^2)*(s*(6 - 3*d + 8*sw^2) + 
          2*(3 - 8*sw^2)*t) - (2*Pi)^(5*d)*s^2*(s*(-6 + 3*d - 8*sw^2) + 
          2*(-3 + 8*sw^2)*t) + 2^(2 + 5*d)*mz^4*Pi^(5*d)*(-1 + sw^2)^2*
         (s*(30 + 3*d^2 - 8*sw^2 + d*(-21 + 8*sw^2)) + 
          2*(-3 + d)*(-3 + 8*sw^2)*t))*(-1 + GaugeXi[W])^2 - 
      2^(2 + 5*d)*(1 - d)*mz^4*Pi^(5*d)*(-1 + sw^2)^2*(s + 2*t)*
       (-2*(-2 + d)*mz^2*(-1 + sw^2)*(s*(-6 + 3*d - 8*sw^2) + 
          2*(-3 + 8*sw^2)*t) + s*(s*(-3*d^2 + 8*d*(3 + sw^2) - 
            12*(3 + 4*sw^2)) - 2*(2 + d)*(-3 + 8*sw^2)*t))*
       (-1 + GaugeXi[W])^2 - 2*(1 - d)*s*((2*Pi)^(5*d)*s^3*(6 - 3*d + 8*sw^2)*
         t + 2^(2 + 5*d)*(-3 + d)*mz^6*Pi^(5*d)*(1 - sw^2)^3*
         (s*(-6 + 3*d - 8*sw^2) + 2*(-3 + 8*sw^2)*t) + 
        2^(1 + 5*d)*mz^4*Pi^(5*d)*s*(-1 + sw^2)^2*
         (3*s*(18 - 15*d + 3*d^2 + 24*sw^2 - 8*d*sw^2) + 
          2*(111 + 12*d^2 + 40*sw^2 - d*(75 + 8*sw^2))*t) - 
        2^(1 + 5*d)*mz^2*Pi^(5*d)*s*(1 - sw^2)*
         (2*s^2*(3*d^2 - 4*d*(3 + 2*sw^2) + 4*(3 + 4*sw^2)) + 
          s*(114 - 69*d + 12*d^2 - 40*sw^2)*t + 8*(3 - 8*sw^2)*t^2))*
       (-1 + GaugeXi[W])^2 - (2*Pi)^(2*d)*s*(-s - 2*mz^2*(-1 + sw^2))*
       (s*(-12 + 3*d + 8*sw^2) + 2*(-3 + 8*sw^2)*t)*
       (4*(-1 + d)*mz^4*(-1 + sw^2)^2 + s*(d*s + 2*t) + 
        4*mz^2*(-1 + sw^2)*(d*s + 2*t))*((2*Pi)^(3*d) - 
        2^(1 + 3*d)*Pi^(3*d)*GaugeXi[W] + (2*Pi)^(3*d)*GaugeXi[W]^2) - 
      2^(1 + 2*d)*(1 - d)*Pi^(2*d)*s*(-s/2 - mz^2*(-1 + sw^2))*
       (-4*mz^2*s*(-1 + sw^2)*(s*(6 - 3*d + 8*sw^2) + 2*(3 - 8*sw^2)*t) + 
        8*mz^4*(-1 + sw^2)^2*(4*(-3 + d)*s*sw^2 + (-3 + 8*sw^2)*t) + 
        s^2*(s*(-6 + 3*d - 8*sw^2) + 2*(-3 + 8*sw^2)*t))*
       ((2*Pi)^(3*d) - 2^(1 + 3*d)*Pi^(3*d)*GaugeXi[W] + 
        (2*Pi)^(3*d)*GaugeXi[W]^2)))/((-1 + d)*mz^4*Pi^(6*d)*(mz^2 - s)*s^2*
     sw^4*(-1 + sw^2)^2*(-1 + GaugeXi[W])^2), 
   ((-I/9)*2^(-2 - d)*EL^6*mz^2*(-1 + sw^2)*(-2*s + mz^2*(-1 + sw^2))*
     (s^2*(-3*d^2 + 4*d*(3 + 2*sw^2) - 4*(3 + 4*sw^2)) + 
      2*s*(-24 + 15*d - 3*d^2 + 16*sw^2)*t + 4*(-3 + 8*sw^2)*t^2))/
    (Pi^d*(mz^2 - s)*s^2*sw^4), 0, 0, 
   ((I/9)*2^(-4 - d)*EL^6*(s^2*(3*d^2 - 4*d*(3 + 2*sw^2) + 4*(3 + 4*sw^2)) + 
      2*s*(24 - 15*d + 3*d^2 - 16*sw^2)*t + 4*(3 - 8*sw^2)*t^2)*
     (s^2 - 2*(-3 + 2*d)*mz^2*s*(-1 + sw^2) + mz^4*(-1 + sw^2)^2 - 
      mz^2*(-1 + sw^2)*(s + mz^2*(-1 + sw^2))*GaugeXi[W]))/
    ((-1 + d)*mz^4*Pi^d*(mz^2 - s)*s^2*sw^4*(-1 + sw^2)^2), 
   ((I/9)*2^(-4 - d)*EL^6*(s + mz^2*(-1 + sw^2))*
     (s^2*(-3*d^2 + 4*d*(3 + 2*sw^2) - 4*(3 + 4*sw^2)) + 
      2*s*(-24 + 15*d - 3*d^2 + 16*sw^2)*t + 4*(-3 + 8*sw^2)*t^2)*
     (s^2 - 2*(-3 + 2*d)*mz^2*s*(-1 + sw^2) + mz^4*(-1 + sw^2)^2 - 
      2*mz^2*(-1 + sw^2)*(-s + mz^2*(-1 + sw^2))*GaugeXi[W] + 
      mz^4*(-1 + sw^2)^2*GaugeXi[W]^2))/((-1 + d)*mz^4*Pi^d*(mz^2 - s)*s^2*
     sw^4*(-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((I/9)*2^(-7 - d)*EL^6*s*(-1 + 2*swC^2)*
     ((-2 + d)*s^2*(18 - 24*swC^2 - 8*sw^2*(3 + 4*swC^2) + 
        3*d*(-3 + 4*sw^2 + 4*swC^2)) + 2*s*(-72 + 96*swC^2 + 
        sw^2*(96 - 64*swC^2) - 15*d*(-3 + 4*sw^2 + 4*swC^2) + 
        3*d^2*(-3 + 4*sw^2 + 4*swC^2))*t + 
      4*(-9 + 12*swC^2 - 4*sw^2*(-3 + 8*swC^2))*t^2))/
    (cwC^2*(-1 + d)*mz^4*Pi^d*(mz^2 - s)^2*sw^4*(-1 + sw^2)^2*swC^2), 
   ((-I/9)*2^(-8 - d)*EL^6*s*(-1 + 2*swC^2)*
     ((-2 + d)*s^2*(18 - 24*swC^2 - 8*sw^2*(3 + 4*swC^2) + 
        3*d*(-3 + 4*sw^2 + 4*swC^2)) + 2*s*(-72 + 96*swC^2 + 
        sw^2*(96 - 64*swC^2) - 15*d*(-3 + 4*sw^2 + 4*swC^2) + 
        3*d^2*(-3 + 4*sw^2 + 4*swC^2))*t + 
      4*(-9 + 12*swC^2 - 4*sw^2*(-3 + 8*swC^2))*t^2)*
     (s + 4*mz^2*(-1 + sw^2)*GaugeXi[W]))/(cwC^2*(-1 + d)*mz^4*Pi^d*
     (mz^2 - s)^2*sw^4*(-1 + sw^2)^2*swC^2), 
   ((-I/9)*2^(-7 - d)*EL^6*(-1 + 2*swC^2)*
     ((-2 + d)*s^2*(18 - 24*swC^2 - 8*sw^2*(3 + 4*swC^2) + 
        3*d*(-3 + 4*sw^2 + 4*swC^2)) + 2*s*(-72 + 96*swC^2 + 
        sw^2*(96 - 64*swC^2) - 15*d*(-3 + 4*sw^2 + 4*swC^2) + 
        3*d^2*(-3 + 4*sw^2 + 4*swC^2))*t + 
      4*(-9 + 12*swC^2 - 4*sw^2*(-3 + 8*swC^2))*t^2)*
     (2*s - 4*d*s + (-5 + 4*d)*mz^2*(-1 + sw^2) + (s + mz^2*(-1 + sw^2))*
       GaugeXi[W]))/(cwC^2*(-1 + d)*mz^2*Pi^d*(mz^2 - s)^2*s*sw^4*(-1 + sw^2)*
     swC^2), ((-I/9)*2^(-8 - d)*EL^6*(s + 2*mz^2*(-1 + sw^2))*
     (s^2 - 4*(-3 + 2*d)*mz^2*s*(-1 + sw^2) + 4*(-1 + d)*mz^4*(-1 + sw^2)^2)*
     (-1 + 2*swC^2)*((-2 + d)*s^2*(18 - 24*swC^2 - 8*sw^2*(3 + 4*swC^2) + 
        3*d*(-3 + 4*sw^2 + 4*swC^2)) + 2*s*(-72 + 96*swC^2 + 
        sw^2*(96 - 64*swC^2) - 15*d*(-3 + 4*sw^2 + 4*swC^2) + 
        3*d^2*(-3 + 4*sw^2 + 4*swC^2))*t + 
      4*(-9 + 12*swC^2 - 4*sw^2*(-3 + 8*swC^2))*t^2))/
    (cwC^2*(-1 + d)*mz^4*Pi^d*(mz^2 - s)^2*s*sw^4*(-1 + sw^2)^2*swC^2), 
   ((-I/9)*2^(-5 - d)*EL^6*mz^2*(1 - sw^2)*(2*s - mz^2*(-1 + sw^2))*
     (-1 + 2*swC^2)*((-2 + d)*s^2*(18 - 24*swC^2 - 8*sw^2*(3 + 4*swC^2) + 
        3*d*(-3 + 4*sw^2 + 4*swC^2)) + 2*s*(-72 + 96*swC^2 + 
        sw^2*(96 - 64*swC^2) - 15*d*(-3 + 4*sw^2 + 4*swC^2) + 
        3*d^2*(-3 + 4*sw^2 + 4*swC^2))*t + 
      4*(-9 + 12*swC^2 - 4*sw^2*(-3 + 8*swC^2))*t^2))/
    (cwC^2*Pi^d*(mz^2 - s)^2*s*sw^4*swC^2), 0, 0, 
   ((-I/9)*2^(-7 - d)*EL^6*(-1 + 2*swC^2)*
     ((-2 + d)*s^2*(18 - 24*swC^2 - 8*sw^2*(3 + 4*swC^2) + 
        3*d*(-3 + 4*sw^2 + 4*swC^2)) + 2*s*(-72 + 96*swC^2 + 
        sw^2*(96 - 64*swC^2) - 15*d*(-3 + 4*sw^2 + 4*swC^2) + 
        3*d^2*(-3 + 4*sw^2 + 4*swC^2))*t + 
      4*(-9 + 12*swC^2 - 4*sw^2*(-3 + 8*swC^2))*t^2)*
     (s^2 - 2*(-3 + 2*d)*mz^2*s*(-1 + sw^2) + mz^4*(-1 + sw^2)^2 - 
      mz^2*(-1 + sw^2)*(s + mz^2*(-1 + sw^2))*GaugeXi[W]))/
    (cwC^2*(-1 + d)*mz^4*Pi^d*(mz^2 - s)^2*s*sw^4*(-1 + sw^2)^2*swC^2), 
   ((-I/9)*2^(-7 - d)*EL^6*(-s - mz^2*(-1 + sw^2))*(-1 + 2*swC^2)*
     ((-2 + d)*s^2*(18 - 24*swC^2 - 8*sw^2*(3 + 4*swC^2) + 
        3*d*(-3 + 4*sw^2 + 4*swC^2)) + 2*s*(-72 + 96*swC^2 + 
        sw^2*(96 - 64*swC^2) - 15*d*(-3 + 4*sw^2 + 4*swC^2) + 
        3*d^2*(-3 + 4*sw^2 + 4*swC^2))*t + 
      4*(-9 + 12*swC^2 - 4*sw^2*(-3 + 8*swC^2))*t^2)*
     (s^2 - 2*(-3 + 2*d)*mz^2*s*(-1 + sw^2) + mz^4*(-1 + sw^2)^2 - 
      2*mz^2*(-1 + sw^2)*(-s + mz^2*(-1 + sw^2))*GaugeXi[W] + 
      mz^4*(-1 + sw^2)^2*GaugeXi[W]^2))/(cwC^2*(-1 + d)*mz^4*Pi^d*
     (mz^2 - s)^2*s*sw^4*(-1 + sw^2)^2*swC^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {((-I/81)*2^(4 - d)*(16 - 7*d + d^2)*EL^6*
     ((-2 + d)*s^2 + 4*s*t + 4*t^2))/((-4 + d)*Pi^d*s^2), 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
  {((-I/81)*2^(-1 - 4*d)*EL^6*(3*(-11 + d)*d^3*(2*Pi)^(3*d)*s^2 + 
      2^(1 + 3*d)*Pi^(3*d)*(2*s^2*(48 + 160*swC^2 - 256*swC^4 + 
          d^3*swC^2*(-5 + 8*swC^2) - 9*d^2*(-4 - 5*swC^2 + 8*swC^4) + 
          3*d*(-23 - 50*swC^2 + 80*swC^4)) + 
        s*(-36*d^3 + 3*d^4 + 128*(3 - 5*swC^2 + 8*swC^4) - 
          8*d*(51 - 35*swC^2 + 56*swC^4) + d^2*(177 - 40*swC^2 + 64*swC^4))*
         t + 2*(16 - 7*d + d^2)*(3 - 20*swC^2 + 32*swC^4)*t^2)))/
    (cwC^2*(-4 + d)*Pi^(4*d)*s*(-mz^2 + s)*swC^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {((-I/81)*2^(-1 - 2*d)*EL^6*(9 - 24*sw^2 + 32*sw^4)*
     (-(d*(1 + d)*(2*Pi)^d*s^3) + 2^(1 + d)*mz^2*Pi^d*((-2 + d)*s^2 + 4*s*t + 
        4*t^2) + 2^(1 + d)*Pi^d*s*((-7 + 5*d)*s^2 - 2*(-7 + d)*s*t - 
        2*(-7 + d)*t^2)))/(Pi^(2*d)*s^3*sw^2*(-1 + sw^2)), 0, 0, 
   ((I/81)*2^(-1 - d)*EL^6*(2*mz^2 + 3*s)*(9 - 24*sw^2 + 32*sw^4)*
     ((-2 + d)*s^2 + 4*s*t + 4*t^2))/(mz^2*Pi^d*s^3*sw^2*(-1 + sw^2)), 0, 0, 
   0, 0, ((I/81)*2^(-1 - d)*EL^6*(9 - 24*sw^2 + 32*sw^4)*
     ((-2 + d)*s^2 + 4*s*t + 4*t^2))/(mz^2*Pi^d*s^2*sw^2*(-1 + sw^2)), 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/81)*2^(-1 - 2*d)*EL^6*(9 - 24*sw^2 + 32*sw^4)*
     (2^(1 + d)*mz^4*Pi^d*((-2 + d)*s^2 + 4*s*t + 4*t^2) + 
      2^(1 + d)*Pi^d*s^2*((-2 + d)*s^2 + 4*s*t + 4*t^2) + 
      mz^2*s*(-(d^2*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*((-8 + 5*d)*s^2 - 
          2*(-8 + d)*s*t - 2*(-8 + d)*t^2))))/(Pi^(2*d)*s^3*sw^2*
     (-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
  {((I/81)*2^(-5 - 2*d)*EL^6*(-27*d^2*(2*Pi)^d*s - 27*d^3*(2*Pi)^d*s + 
      2^(2 + d)*(-2 + d)*mz^2*Pi^d*(-1 + 4*swC^2)*(sw^2*(72 - 96*swC^2) + 
        9*(-3 + 4*swC^2) + 16*sw^4*(-3 + 8*swC^2)) - 
      (-2 + d)*(2*Pi)^d*(2*mz^2 + s)*(-1 + 4*swC^2)*(sw^2*(72 - 96*swC^2) + 
        9*(-3 + 4*swC^2) + 16*sw^4*(-3 + 8*swC^2)) + 
      2^(1 + d)*Pi^d*(s*(-36*(3 - 7*swC^2 + 4*swC^4) + 
          96*sw^2*(3 - 7*swC^2 + 4*swC^4) - 64*sw^4*(3 - 5*swC^2 + 8*swC^4) - 
          6*d^2*(4*sw^4 - 3*swC^2 + sw^2*(-6 + 8*swC^2)) + 
          d*(9*(9 - 18*swC^2 + 8*swC^4) - 24*sw^2*(9 - 18*swC^2 + 8*swC^4) + 
            16*sw^4*(9 - 10*swC^2 + 16*swC^4))) + (-2 + d)*(-1 + 4*swC^2)*
         (sw^2*(72 - 96*swC^2) + 9*(-3 + 4*swC^2) + 16*sw^4*(-3 + 8*swC^2))*
         t) - 2^(1 + d)*Pi^d*
       (2*s*(3*d^3*(4*sw^4 - 3*swC^2 + sw^2*(-6 + 8*swC^2)) + 
          d^2*(9*(-9 + 9*swC^2 + 4*swC^4) - 24*sw^2*(-9 + 9*swC^2 + 
              4*swC^4) + 16*sw^4*(-9 - 5*swC^2 + 8*swC^4)) - 
          10*d*(9*(-3 + swC^2 + 4*swC^4) - 24*sw^2*(-3 + swC^2 + 4*swC^4) + 
            16*sw^4*(-3 - 5*swC^2 + 8*swC^4)) + 
          10*(9*(-3 - 2*swC^2 + 8*swC^4) - 24*sw^2*(-3 - 2*swC^2 + 8*swC^4) + 
            16*sw^4*(-3 - 10*swC^2 + 16*swC^4))) + 
        (-36*d^2*(9 + 16*sw^4 - 12*swC^2 + 8*sw^2*(-3 + 4*swC^2)) + 
          3*d^3*(9 + 16*sw^4 - 12*swC^2 + 8*sw^2*(-3 + 4*swC^2)) - 
          8*(9*(21 - 31*swC^2 + 4*swC^4) - 24*sw^2*(21 - 31*swC^2 + 
              4*swC^4) + 16*sw^4*(21 - 5*swC^2 + 8*swC^4)) + 
          2*d*(9*(69 - 98*swC^2 + 8*swC^4) - 24*sw^2*(69 - 98*swC^2 + 
              8*swC^4) + 16*sw^4*(69 - 10*swC^2 + 16*swC^4)))*t) + 
      ((27*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(-12*(-2 + d)*sw^2*(3 - 16*swC^2 + 
             16*swC^4) + 8*(-2 + d)*sw^4*(3 - 20*swC^2 + 32*swC^4) + 
           9*(-3 - 8*(-2 + d)*swC^2 + 8*(-2 + d)*swC^4)))*
        (s*(-((-2 + d)*s^2) + 4*s*t + 4*(-1 + d)*t^2) + 
         2*mz^2*((-2 + d)*s^2 + 4*(-1 + d)*s*t + 4*(-1 + d)*t^2)))/
       ((-2 + d)*s^2) + (2*(1 + (2*t)/s)*
        (mz^2*(27*d^2*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (s*(36*(3 - 7*swC^2 + 4*swC^4) - 96*sw^2*(3 - 7*swC^2 + 
                 4*swC^4) + 64*sw^4*(3 - 5*swC^2 + 8*swC^4) + 6*d^2*
                (4*sw^4 - 3*swC^2 + sw^2*(-6 + 8*swC^2)) + d*
                (-9*(9 - 18*swC^2 + 8*swC^4) + 24*sw^2*(9 - 18*swC^2 + 
                   8*swC^4) - 16*sw^4*(9 - 10*swC^2 + 16*swC^4))) - 
             (-2 + d)*(-1 + 4*swC^2)*(sw^2*(72 - 96*swC^2) + 9*
                (-3 + 4*swC^2) + 16*sw^4*(-3 + 8*swC^2))*t)) + 
         2*s*(27*d*(2*Pi)^d*(s - t) + 2^(1 + d)*Pi^d*
            (s*(12*sw^2*(-2 + d - 4*swC^2)*(-3 + 4*swC^2) - 9*
                (3 + 2*(1 + d)*swC^2 - 8*swC^4) + 8*sw^4*(-6 + 3*d - 
                 20*swC^2 + 32*swC^4)) - 2*(-6*(-4 + d)*sw^2*(3 - 16*swC^2 + 
                 16*swC^4) + 4*(-4 + d)*sw^4*(3 - 20*swC^2 + 32*swC^4) + 9*
                (-3 - 4*(-4 + d)*swC^2 + 4*(-4 + d)*swC^4))*t))))/s))/
    (cwC^2*Pi^(2*d)*(mz^2 - s)*sw^2*(-1 + sw^2)*swC^2), 0, 0, 
   ((-I/81)*2^(-5 - 2*d)*EL^6*(2*mz^2*(27*d^3*(2*Pi)^d*s^2 + 
        2^(1 + d)*Pi^d*(s^2*(36*(-3 - 2*swC^2 + 8*swC^4) - 
            96*sw^2*(-3 - 2*swC^2 + 8*swC^4) + 64*sw^4*(-3 - 10*swC^2 + 
              16*swC^4) + 6*d^3*(4*sw^4 - 3*swC^2 + sw^2*(-6 + 8*swC^2)) + 
            d^2*(9*(-9 + 6*swC^2 + 8*swC^4) - 24*sw^2*(-9 + 6*swC^2 + 
                8*swC^4) + 16*sw^4*(-9 - 10*swC^2 + 16*swC^4)) + 
            d*(162 - 288*swC^4 + 48*sw^2*(-9 + 16*swC^4) - 32*sw^4*(-9 - 
                20*swC^2 + 32*swC^4))) + 
          s*(-21*d^2*(9 + 16*sw^4 - 12*swC^2 + 8*sw^2*(-3 + 4*swC^2)) + 
            3*d^3*(9 + 16*sw^4 - 12*swC^2 + 8*sw^2*(-3 + 4*swC^2)) - 
            16*(9*(3 - 7*swC^2 + 4*swC^4) - 24*sw^2*(3 - 7*swC^2 + 4*swC^4) + 
              16*sw^4*(3 - 5*swC^2 + 8*swC^4)) + 
            2*d*(9*(27 - 48*swC^2 + 16*swC^4) - 24*sw^2*(27 - 48*swC^2 + 
                16*swC^4) + 16*sw^4*(27 - 20*swC^2 + 32*swC^4)))*t + 
          2*(-2 + d)*(-1 + 4*swC^2)*(sw^2*(72 - 96*swC^2) + 
            9*(-3 + 4*swC^2) + 16*sw^4*(-3 + 8*swC^2))*t^2)) + 
      3*(-9*d^3*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
         (s^2*(36*(-3 - 2*swC^2 + 8*swC^4) - 96*sw^2*(-3 - 2*swC^2 + 
              8*swC^4) + 64*sw^4*(-3 - 10*swC^2 + 16*swC^4) + 
            6*d^3*(3 + 4*sw^4 - 3*swC^2 + sw^2*(-6 + 8*swC^2)) + 
            d^2*(9*(-9 + 6*swC^2 + 8*swC^4) - 24*sw^2*(-9 + 6*swC^2 + 
                8*swC^4) + 16*sw^4*(-9 - 10*swC^2 + 16*swC^4)) + 
            d*(162 - 288*swC^4 + 48*sw^2*(-9 + 16*swC^4) - 32*sw^4*(-9 - 
                20*swC^2 + 32*swC^4))) + 
          s*(-21*d^2*(9 + 16*sw^4 - 12*swC^2 + 8*sw^2*(-3 + 4*swC^2)) + 
            3*d^3*(9 + 16*sw^4 - 12*swC^2 + 8*sw^2*(-3 + 4*swC^2)) - 
            16*(9*(3 - 7*swC^2 + 4*swC^4) - 24*sw^2*(3 - 7*swC^2 + 4*swC^4) + 
              16*sw^4*(3 - 5*swC^2 + 8*swC^4)) + 
            2*d*(9*(27 - 48*swC^2 + 16*swC^4) - 24*sw^2*(27 - 48*swC^2 + 
                16*swC^4) + 16*sw^4*(27 - 20*swC^2 + 32*swC^4)))*t + 
          2*(-2 + d)*(-1 + 4*swC^2)*(sw^2*(72 - 96*swC^2) + 
            9*(-3 + 4*swC^2) + 16*sw^4*(-3 + 8*swC^2))*t^2))))/
    (cwC^2*(-2 + d)*mz^2*Pi^(2*d)*(mz^2 - s)*s^2*sw^2*(-1 + sw^2)*swC^2), 0, 
   0, 0, 0, ((I/81)*2^(-5 - 2*d)*EL^6*(27*d^2*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(2*s^2*(sw^4*(48 + 160*swC^2 - 256*swC^4) + 
          9*(3 + 2*swC^2 - 8*swC^4) + 24*sw^2*(-3 - 2*swC^2 + 8*swC^4) + 
          3*d^2*(4*sw^4 - 3*swC^2 + sw^2*(-6 + 8*swC^2)) + 
          d*(9*(-3 + swC^2 + 4*swC^4) - 24*sw^2*(-3 + swC^2 + 4*swC^4) + 
            16*sw^4*(-3 - 5*swC^2 + 8*swC^4))) + 
        s*(-15*d*(9 + 16*sw^4 - 12*swC^2 + 8*sw^2*(-3 + 4*swC^2)) + 
          3*d^2*(9 + 16*sw^4 - 12*swC^2 + 8*sw^2*(-3 + 4*swC^2)) + 
          8*(9*(3 - 7*swC^2 + 4*swC^4) - 24*sw^2*(3 - 7*swC^2 + 4*swC^4) + 
            16*sw^4*(3 - 5*swC^2 + 8*swC^4)))*t + 2*(-1 + 4*swC^2)*
         (sw^2*(72 - 96*swC^2) + 9*(-3 + 4*swC^2) + 16*sw^4*(-3 + 8*swC^2))*
         t^2)))/(cwC^2*mz^2*Pi^(2*d)*s*(-mz^2 + s)*sw^2*(-1 + sw^2)*swC^2), 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((I/81)*2^(-5 - 2*d)*EL^6*(2^(1 + d)*(-2 + d)*mz^4*Pi^d*(-1 + 4*swC^2)*
       (sw^2*(72 - 96*swC^2) + 9*(-3 + 4*swC^2) + 16*sw^4*(-3 + 8*swC^2)) + 
      mz^2*(-27*d^3*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
         (-2*s*(3*d^3*(4*sw^4 - 3*swC^2 + sw^2*(-6 + 8*swC^2)) + 
            d^2*(9*(-9 + 9*swC^2 + 4*swC^4) - 24*sw^2*(-9 + 9*swC^2 + 
                4*swC^4) + 16*sw^4*(-9 - 5*swC^2 + 8*swC^4)) - 
            10*d*(9*(-3 + swC^2 + 4*swC^4) - 24*sw^2*(-3 + swC^2 + 4*swC^4) + 
              16*sw^4*(-3 - 5*swC^2 + 8*swC^4)) + 
            10*(9*(-3 - 2*swC^2 + 8*swC^4) - 24*sw^2*(-3 - 2*swC^2 + 
                8*swC^4) + 16*sw^4*(-3 - 10*swC^2 + 16*swC^4))) + 
          (36*d^2*(9 + 16*sw^4 - 12*swC^2 + 8*sw^2*(-3 + 4*swC^2)) - 
            3*d^3*(9 + 16*sw^4 - 12*swC^2 + 8*sw^2*(-3 + 4*swC^2)) + 
            8*(9*(21 - 31*swC^2 + 4*swC^4) - 24*sw^2*(21 - 31*swC^2 + 
                4*swC^4) + 16*sw^4*(21 - 5*swC^2 + 8*swC^4)) - 
            2*d*(9*(69 - 98*swC^2 + 8*swC^4) - 24*sw^2*(69 - 98*swC^2 + 
                8*swC^4) + 16*sw^4*(69 - 10*swC^2 + 16*swC^4)))*t)) + 
      2*(27*d*(2*Pi)^d*(d*s^2 + t^2) + 2^(1 + d)*Pi^d*
         (2*s^2*(sw^4*(48 + 160*swC^2 - 256*swC^4) + 
            9*(3 + 2*swC^2 - 8*swC^4) + 24*sw^2*(-3 - 2*swC^2 + 8*swC^4) + 
            3*d^2*(4*sw^4 - 3*swC^2 + sw^2*(-6 + 8*swC^2)) + 
            d*(9*(-3 + swC^2 + 4*swC^4) - 24*sw^2*(-3 + swC^2 + 4*swC^4) + 
              16*sw^4*(-3 - 5*swC^2 + 8*swC^4))) + 
          s*(18*(15 - 26*swC^2 + 8*swC^4) - 48*sw^2*(15 - 26*swC^2 + 
              8*swC^4) + 32*sw^4*(15 - 10*swC^2 + 16*swC^4) - 
            18*d*(9 + 16*sw^4 - 12*swC^2 + 8*sw^2*(-3 + 4*swC^2)) + 
            3*d^2*(9 + 16*sw^4 - 12*swC^2 + 8*sw^2*(-3 + 4*swC^2)))*t + 
          (-12*(-2 + d)*sw^2*(3 - 16*swC^2 + 16*swC^4) + 8*(-2 + d)*sw^4*
             (3 - 20*swC^2 + 32*swC^4) + 9*(-3 - 8*(-2 + d)*swC^2 + 
              8*(-2 + d)*swC^4))*t^2)) + 
      (2*(27*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(-12*(-2 + d)*sw^2*
            (3 - 16*swC^2 + 16*swC^4) + 8*(-2 + d)*sw^4*(3 - 20*swC^2 + 
             32*swC^4) + 9*(-3 - 8*(-2 + d)*swC^2 + 8*(-2 + d)*swC^4)))*
        ((-2 + d)*s^2*t^2 + mz^4*((-2 + d)*s^2 + 4*(-1 + d)*s*t + 
           4*(-1 + d)*t^2) + 2*mz^2*s*t*(-2*t + d*(s + 2*t))))/
       ((-2 + d)*s^2) + (2*(t + (mz^2*(s + 2*t))/s)*
        (mz^2*(27*d^2*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (s*(36*(3 - 7*swC^2 + 4*swC^4) - 96*sw^2*(3 - 7*swC^2 + 
                 4*swC^4) + 64*sw^4*(3 - 5*swC^2 + 8*swC^4) + 6*d^2*
                (4*sw^4 - 3*swC^2 + sw^2*(-6 + 8*swC^2)) + d*
                (-9*(9 - 18*swC^2 + 8*swC^4) + 24*sw^2*(9 - 18*swC^2 + 
                   8*swC^4) - 16*sw^4*(9 - 10*swC^2 + 16*swC^4))) - 
             (-2 + d)*(-1 + 4*swC^2)*(sw^2*(72 - 96*swC^2) + 9*
                (-3 + 4*swC^2) + 16*sw^4*(-3 + 8*swC^2))*t)) + 
         2*s*(27*d*(2*Pi)^d*(s - t) + 2^(1 + d)*Pi^d*
            (s*(12*sw^2*(-2 + d - 4*swC^2)*(-3 + 4*swC^2) - 9*
                (3 + 2*(1 + d)*swC^2 - 8*swC^4) + 8*sw^4*(-6 + 3*d - 
                 20*swC^2 + 32*swC^4)) - 2*(-6*(-4 + d)*sw^2*(3 - 16*swC^2 + 
                 16*swC^4) + 4*(-4 + d)*sw^4*(3 - 20*swC^2 + 32*swC^4) + 9*
                (-3 - 4*(-4 + d)*swC^2 + 4*(-4 + d)*swC^4))*t))))/s))/
    (cwC^2*Pi^(2*d)*(mz^2 - s)*sw^2*(-1 + sw^2)*swC^2), 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
  {((I/9)*2^(-1 - d)*EL^6*((-7 + d)*s + 2*mz^2*(-1 + sw^2))*
     ((-2 + d)*s^2 + 4*s*t + 4*t^2))/(Pi^d*s^3*sw^2), 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/9)*2^(-1 - d)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
    (mz^2*Pi^d*s^2*sw^2*(-1 + sw^2)), 0, 
   ((I/9)*2^(-1 - d)*EL^6*(-3*s + 2*mz^2*(-1 + sw^2))*
     ((-2 + d)*s^2 + 4*s*t + 4*t^2))/(mz^2*Pi^d*s^3*sw^2*(-1 + sw^2)), 0, 0, 
   0, 0, 0, 0, 0, 0, 0, ((-I/9)*2^(-1 - d)*EL^6*
     (2*s^2 + (-8 + d)*mz^2*s*(-1 + sw^2) + 2*mz^4*(-1 + sw^2)^2)*
     ((-2 + d)*s^2 + 4*s*t + 4*t^2))/(Pi^d*s^3*sw^2), 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, 
  {((I/9)*2^(-5 - 2*d)*EL^6*(-3*d^2*(2*Pi)^d*s - 3*d^3*(2*Pi)^d*s - 
      2^(2 + d)*(-2 + d)*mz^2*Pi^d*(-1 + sw^2)*(3 - 16*swC^2 + 16*swC^4) - 
      (-2 + d)*(2*Pi)^d*(s - 2*mz^2*(-1 + sw^2))*(3 - 16*swC^2 + 16*swC^4) + 
      2^(1 + d)*Pi^d*(s*(2*d^2*swC^2 - 4*(3 - 7*swC^2 + 4*swC^4) + 
          d*(9 - 18*swC^2 + 8*swC^4)) + (-2 + d)*(3 - 16*swC^2 + 16*swC^4)*
         t) + 2^(1 + d)*Pi^d*(2*s*(30 + 20*swC^2 + d^3*swC^2 - 80*swC^4 + 
          d^2*(9 - 9*swC^2 - 4*swC^4) + 10*d*(-3 + swC^2 + 4*swC^4)) + 
        (-3 + 4*swC^2)*(-12*d^2 + d^3 + d*(46 - 4*swC^2) + 8*(-7 + swC^2))*
         t) + ((2^(1 + d)*Pi^d - d*(2*Pi)^d)*(-3 + 4*swC^2)*(-1 + 4*swC^2)*
        (s*((-2 + d)*s^2 - 4*s*t - 4*(-1 + d)*t^2) + 2*mz^2*(-1 + sw^2)*
          ((-2 + d)*s^2 + 4*(-1 + d)*s*t + 4*(-1 + d)*t^2)))/((-2 + d)*s^2) - 
      (2*(1 + (2*t)/s)*(2^(1 + d)*Pi^d*s*(-3 + 4*swC^2)*
          (s*(-2 + d - 4*swC^2) + (-4 + d)*(-1 + 4*swC^2)*t) + 
         mz^2*(1 - sw^2)*(-3*d^2*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (s*(2*d^2*swC^2 - 4*(3 - 7*swC^2 + 4*swC^4) + d*(9 - 18*swC^2 + 
                 8*swC^4)) + (-2 + d)*(3 - 16*swC^2 + 16*swC^4)*t))))/s))/
    (cwC^2*Pi^(2*d)*(mz^2 - s)*sw^2*swC^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ((I/9)*2^(-5 - 2*d)*EL^6*
     (3*d^2*(2*Pi)^d*s^2 - 2^(1 + d)*Pi^d*
       (2*s^2*(-3 - 2*swC^2 + d^2*swC^2 + 8*swC^4 - 
          d*(-3 + swC^2 + 4*swC^4)) + s*(8 - 5*d + d^2 - 8*swC^2)*
         (-3 + 4*swC^2)*t - 2*(3 - 16*swC^2 + 16*swC^4)*t^2)))/
    (cwC^2*mz^2*Pi^(2*d)*(mz^2 - s)*s*sw^2*(-1 + sw^2)*swC^2), 0, 
   ((-I/9)*2^(-5 - 2*d)*EL^6*(2*mz^2*(1 - sw^2)*(-3*d^3*(2*Pi)^d*s^2 + 
        2^(1 + d)*Pi^d*(s^2*(12 + 8*swC^2 + 2*d^3*swC^2 - 32*swC^4 + 
            d^2*(9 - 6*swC^2 - 8*swC^4) + 2*d*(-9 + 16*swC^4)) + 
          (-2 + d)*s*(8 - 5*d + d^2 - 8*swC^2)*(-3 + 4*swC^2)*t - 
          2*(-2 + d)*(3 - 16*swC^2 + 16*swC^4)*t^2)) + 
      3*(d^3*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
         (s^2*(12 + 8*swC^2 - 32*swC^4 + 2*d^3*(-1 + swC^2) + 
            d^2*(9 - 6*swC^2 - 8*swC^4) + 2*d*(-9 + 16*swC^4)) + 
          (-2 + d)*s*(8 - 5*d + d^2 - 8*swC^2)*(-3 + 4*swC^2)*t - 
          2*(-2 + d)*(3 - 16*swC^2 + 16*swC^4)*t^2))))/
    (cwC^2*(-2 + d)*mz^2*Pi^(2*d)*(mz^2 - s)*s^2*sw^2*(-1 + sw^2)*swC^2), 0, 
   0, 0, 0, 0, 0, 0, 0, 0, ((-I/9)*2^(-5 - 2*d)*EL^6*
     (-(2^(1 + d)*(-2 + d)*mz^4*Pi^d*(-1 + sw^2)^2*(3 - 16*swC^2 + 
         16*swC^4)) + 2^(1 + d)*Pi^d*(-3 + 4*swC^2)*
       (s^2*(4 + d^2 + 8*swC^2 - 4*d*(1 + swC^2)) + 
        2*s*(10 - 6*d + d^2 - 4*swC^2)*t - (-2 + d)*(-1 + 4*swC^2)*t^2) - 
      mz^2*(1 - sw^2)*(-3*d^3*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
         (2*s*(30 + 20*swC^2 + d^3*swC^2 - 80*swC^4 + 
            d^2*(9 - 9*swC^2 - 4*swC^4) + 10*d*(-3 + swC^2 + 4*swC^4)) + 
          (-3 + 4*swC^2)*(-12*d^2 + d^3 + d*(46 - 4*swC^2) + 8*(-7 + swC^2))*
           t)) + (2*(2^(1 + d)*Pi^d - d*(2*Pi)^d)*(-3 + 4*swC^2)*
        (-1 + 4*swC^2)*((-2 + d)*s^2*t^2 + mz^4*(-1 + sw^2)^2*
          ((-2 + d)*s^2 + 4*(-1 + d)*s*t + 4*(-1 + d)*t^2) - 
         2*mz^2*s*(-1 + sw^2)*t*(-2*t + d*(s + 2*t))))/((-2 + d)*s^2) + 
      (2*(t - (mz^2*(-1 + sw^2)*(s + 2*t))/s)*
        (2^(1 + d)*Pi^d*s*(-3 + 4*swC^2)*(s*(-2 + d - 4*swC^2) + 
           (-4 + d)*(-1 + 4*swC^2)*t) + mz^2*(1 - sw^2)*(-3*d^2*(2*Pi)^d*s + 
           2^(1 + d)*Pi^d*(s*(2*d^2*swC^2 - 4*(3 - 7*swC^2 + 4*swC^4) + d*
                (9 - 18*swC^2 + 8*swC^4)) + (-2 + d)*(3 - 16*swC^2 + 16*
                swC^4)*t))))/s))/(cwC^2*Pi^(2*d)*(mz^2 - s)*sw^2*swC^2), 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {((I/81)*2^(-1 - 4*d)*EL^6*(3*(-11 + d)*d^3*(2*Pi)^(3*d)*s^2 + 
      2^(1 + 3*d)*Pi^(3*d)*(2*s^2*(48 + 160*sw^2 - 256*sw^4 + 
          d^3*sw^2*(-5 + 8*sw^2) - 9*d^2*(-4 - 5*sw^2 + 8*sw^4) + 
          3*d*(-23 - 50*sw^2 + 80*sw^4)) + s*(-36*d^3 + 3*d^4 + 
          128*(3 - 5*sw^2 + 8*sw^4) - 8*d*(51 - 35*sw^2 + 56*sw^4) + 
          d^2*(177 - 40*sw^2 + 64*sw^4))*t + 2*(16 - 7*d + d^2)*
         (3 - 20*sw^2 + 32*sw^4)*t^2)))/((-4 + d)*Pi^(4*d)*s*(-mz^2 + s)*sw^2*
     (-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0}, {((I/81)*4^(-2 - d)*EL^6*(9*(-1 + d)*d^4*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(s^2*(3*d^5*(4*sw^4 + swC^2*(-5 + 4*swC^2) + 
            sw^2*(-5 + 8*swC^2)) + 64*(-9 + 30*swC^2 - 24*swC^4 + 
            sw^2*(30 + 4*swC^2 - 80*swC^4) + 8*sw^4*(-3 - 10*swC^2 + 
              16*swC^4)) + d^4*(-5*sw^2*(-39 + 52*swC^2 + 16*swC^4) + 
            4*sw^4*(-39 - 20*swC^2 + 32*swC^4) - 3*(18 - 65*swC^2 + 
              52*swC^4)) + 6*d^2*(sw^2*(470 - 336*swC^2 - 640*swC^4) - 
            47*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(-47 - 80*swC^2 + 
              128*swC^4)) + d^3*(sw^4*(840 + 880*swC^2 - 1408*swC^4) + 
            105*(3 - 10*swC^2 + 8*swC^4) + 2*sw^2*(-525 + 554*swC^2 + 
              440*swC^4)) - 4*d*(-93*(3 - 10*swC^2 + 8*swC^4) + 
            8*sw^4*(-93 - 230*swC^2 + 368*swC^4) - 2*sw^2*(-465 + 146*swC^2 + 
              920*swC^4))) + (-32 + 30*d - 9*d^2 + d^3)*s*
         (-15*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
          3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
          8*(9 - 30*swC^2 + 24*swC^4 + sw^2*(-30 + 74*swC^2 - 40*swC^4) + 
            8*sw^4*(3 - 5*swC^2 + 8*swC^4)))*t + 2*(-32 + 30*d - 9*d^2 + d^3)*
         (9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 
          2*sw^2*(15 - 76*swC^2 + 80*swC^4))*t^2)))/
    (cwC^2*(-4 + d)*(-2 + d)*Pi^(2*d)*(mz^2 - s)^2*sw^2*(-1 + sw^2)*swC^2), 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {((-I/81)*2^(-5 - 2*d)*EL^6*
     (2*mz^2*(27*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (2*s^2*(27 - 54*sw^2 - 72*sw^4 + 352*sw^6 - 256*sw^8 + 
            9*d^2*sw^2*(-3 + 4*sw^2) + d*(-27 + 81*sw^2 - 36*sw^4 - 
              176*sw^6 + 128*sw^8)) + s*(-45*d*(3 - 12*sw^2 + 16*sw^4) + 
            9*d^2*(3 - 12*sw^2 + 16*sw^4) + 8*(27 - 135*sw^2 + 252*sw^4 - 
              176*sw^6 + 128*sw^8))*t + 2*(27 - 216*sw^2 + 576*sw^4 - 
            704*sw^6 + 512*sw^8)*t^2)) - s*(27*d^2*(1 + d)*(2*Pi)^d*s^2 + 
        2^(1 + d)*Pi^d*(2*s^2*(9*d^3*sw^2*(-3 + 4*sw^2) + 
            d^2*(-81 + 270*sw^2 - 288*sw^4 - 176*sw^6 + 128*sw^8) - 
            9*d*(-24 + 69*sw^2 - 20*sw^4 - 176*sw^6 + 128*sw^8) + 
            7*(-27 + 54*sw^2 + 72*sw^4 - 352*sw^6 + 256*sw^8)) + 
          s*(-108*d^2*(3 - 12*sw^2 + 16*sw^4) + 9*d^3*(3 - 12*sw^2 + 
              16*sw^4) - 56*(27 - 135*sw^2 + 252*sw^4 - 176*sw^6 + 
              128*sw^8) + d*(1161 - 4860*sw^2 + 7056*sw^4 - 1408*sw^6 + 
              1024*sw^8))*t + 2*(-7 + d)*(27 - 216*sw^2 + 576*sw^4 - 
            704*sw^6 + 512*sw^8)*t^2))))/(Pi^(2*d)*(mz^2 - s)*sw^4*
     (s - s*sw^2)^2), 0, 0, ((I/81)*2^(-5 - 2*d)*EL^6*
     (2*mz^2*(27*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (2*s^2*(27 - 54*sw^2 - 72*sw^4 + 352*sw^6 - 256*sw^8 + 
            9*d^2*sw^2*(-3 + 4*sw^2) + d*(-27 + 81*sw^2 - 36*sw^4 - 
              176*sw^6 + 128*sw^8)) + s*(-45*d*(3 - 12*sw^2 + 16*sw^4) + 
            9*d^2*(3 - 12*sw^2 + 16*sw^4) + 8*(27 - 135*sw^2 + 252*sw^4 - 
              176*sw^6 + 128*sw^8))*t + 2*(27 - 216*sw^2 + 576*sw^4 - 
            704*sw^6 + 512*sw^8)*t^2)) + 3*(-9*d^2*(2*Pi)^d*s^3 + 
        2^(1 + d)*Pi^d*s*(2*s^2*(27 - 54*sw^2 - 72*sw^4 + 352*sw^6 - 
            256*sw^8 + 9*d^2*(1 - 3*sw^2 + 4*sw^4) + 
            d*(-27 + 81*sw^2 - 36*sw^4 - 176*sw^6 + 128*sw^8)) + 
          s*(-45*d*(3 - 12*sw^2 + 16*sw^4) + 9*d^2*(3 - 12*sw^2 + 16*sw^4) + 
            8*(27 - 135*sw^2 + 252*sw^4 - 176*sw^6 + 128*sw^8))*t + 
          2*(27 - 216*sw^2 + 576*sw^4 - 704*sw^6 + 512*sw^8)*t^2))))/
    (mz^2*Pi^(2*d)*(mz^2 - s)*s^2*sw^4*(-1 + sw^2)^2), 0, 0, 0, 0, 
   ((I/81)*2^(-5 - d)*EL^6*(s^2*(9*d^2*(3 - 12*sw^2 + 16*sw^4) + 
        4*d*(-27 + 81*sw^2 - 36*sw^4 - 176*sw^6 + 128*sw^8) - 
        4*(-27 + 54*sw^2 + 72*sw^4 - 352*sw^6 + 256*sw^8)) + 
      2*s*(-45*d*(3 - 12*sw^2 + 16*sw^4) + 9*d^2*(3 - 12*sw^2 + 16*sw^4) + 
        8*(27 - 135*sw^2 + 252*sw^4 - 176*sw^6 + 128*sw^8))*t + 
      4*(27 - 216*sw^2 + 576*sw^4 - 704*sw^6 + 512*sw^8)*t^2))/
    (mz^2*Pi^d*(mz^2 - s)*s*sw^4*(-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/81)*2^(-5 - 2*d)*EL^6*(2*mz^4*(27*d^2*(2*Pi)^d*s^2 + 
        2^(1 + d)*Pi^d*(2*s^2*(27 - 54*sw^2 - 72*sw^4 + 352*sw^6 - 256*sw^8 + 
            9*d^2*sw^2*(-3 + 4*sw^2) + d*(-27 + 81*sw^2 - 36*sw^4 - 
              176*sw^6 + 128*sw^8)) + s*(-45*d*(3 - 12*sw^2 + 16*sw^4) + 
            9*d^2*(3 - 12*sw^2 + 16*sw^4) + 8*(27 - 135*sw^2 + 252*sw^4 - 
              176*sw^6 + 128*sw^8))*t + 2*(27 - 216*sw^2 + 576*sw^4 - 
            704*sw^6 + 512*sw^8)*t^2)) + 2*(27*d^2*(2*Pi)^d*s^4 + 
        2^(1 + d)*Pi^d*s^2*(2*s^2*(27 - 54*sw^2 - 72*sw^4 + 352*sw^6 - 
            256*sw^8 + 9*d^2*sw^2*(-3 + 4*sw^2) + d*(-27 + 81*sw^2 - 
              36*sw^4 - 176*sw^6 + 128*sw^8)) + 
          s*(-45*d*(3 - 12*sw^2 + 16*sw^4) + 9*d^2*(3 - 12*sw^2 + 16*sw^4) + 
            8*(27 - 135*sw^2 + 252*sw^4 - 176*sw^6 + 128*sw^8))*t + 
          2*(27 - 216*sw^2 + 576*sw^4 - 704*sw^6 + 512*sw^8)*t^2)) - 
      mz^2*(27*d^3*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
         (2*s^2*(9*d^3*sw^2*(-3 + 4*sw^2) + d*(243 - 702*sw^2 + 216*sw^4 + 
              1760*sw^6 - 1280*sw^8) + d^2*(-81 + 297*sw^2 - 324*sw^4 - 
              176*sw^6 + 128*sw^8) + 8*(-27 + 54*sw^2 + 72*sw^4 - 352*sw^6 + 
              256*sw^8)) + s*(-117*d^2*(3 - 12*sw^2 + 16*sw^4) + 
            9*d^3*(3 - 12*sw^2 + 16*sw^4) - 64*(27 - 135*sw^2 + 252*sw^4 - 
              176*sw^6 + 128*sw^8) + 8*d*(162 - 675*sw^2 + 972*sw^4 - 
              176*sw^6 + 128*sw^8))*t + 2*(-8 + d)*(27 - 216*sw^2 + 
            576*sw^4 - 704*sw^6 + 512*sw^8)*t^2))))/
    (Pi^(2*d)*(mz^2 - s)*sw^4*(s - s*sw^2)^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {((I/81)*2^(-8 - d)*EL^6*(2*mz^2 - (-7 + d)*s)*
     (s^2*(3*d^2*(128*sw^8 - 18*sw^2*(3 - 4*swC^2)^2 + 
          32*sw^6*(-11 + 16*swC^2) + 9*(3 - 10*swC^2 + 8*swC^4) + 
          24*sw^4*(15 - 32*swC^2 + 16*swC^4)) + 
        4*d*(-72*sw^4*(15 - 23*swC^2 + 4*swC^4) + 
          162*sw^2*(3 - 7*swC^2 + 4*swC^4) - 27*(3 - 10*swC^2 + 8*swC^4) + 
          128*sw^8*(-3 - 5*swC^2 + 8*swC^4) - 32*sw^6*(-33 + 17*swC^2 + 
            44*swC^4)) - 4*(54*sw^2*(9 - 18*swC^2 + 8*swC^4) - 
          27*(3 - 10*swC^2 + 8*swC^4) + 72*sw^4*(-15 + 14*swC^2 + 8*swC^4) + 
          128*sw^8*(-3 - 10*swC^2 + 16*swC^4) - 32*sw^6*(-33 - 14*swC^2 + 
            88*swC^4))) + 2*s*(-15*d*(128*sw^8 - 18*sw^2*(3 - 4*swC^2)^2 + 
          32*sw^6*(-11 + 16*swC^2) + 9*(3 - 10*swC^2 + 8*swC^4) + 
          24*sw^4*(15 - 32*swC^2 + 16*swC^4)) + 
        3*d^2*(128*sw^8 - 18*sw^2*(3 - 4*swC^2)^2 + 
          32*sw^6*(-11 + 16*swC^2) + 9*(3 - 10*swC^2 + 8*swC^4) + 
          24*sw^4*(15 - 32*swC^2 + 16*swC^4)) + 
        8*(27*(3 - 10*swC^2 + 8*swC^4) + 128*sw^8*(3 - 5*swC^2 + 8*swC^4) - 
          54*sw^2*(9 - 27*swC^2 + 20*swC^4) + 72*sw^4*(15 - 41*swC^2 + 
            28*swC^4) - 32*sw^6*(33 - 79*swC^2 + 44*swC^4)))*t + 
      4*(27*(3 - 10*swC^2 + 8*swC^4) - 54*sw^2*(9 - 36*swC^2 + 32*swC^4) + 
        128*sw^8*(3 - 20*swC^2 + 32*swC^4) + 72*sw^4*(15 - 68*swC^2 + 
          64*swC^4) - 32*sw^6*(33 - 172*swC^2 + 176*swC^4))*t^2))/
    (cwC^2*Pi^d*(mz^2 - s)^2*s*sw^4*(-1 + sw^2)^2*swC^2), 0, 0, 
   ((-I/81)*2^(-8 - d)*EL^6*(2*mz^2 + 3*s)*
     (s^2*(3*d^2*(128*sw^8 - 18*sw^2*(3 - 4*swC^2)^2 + 
          32*sw^6*(-11 + 16*swC^2) + 9*(3 - 10*swC^2 + 8*swC^4) + 
          24*sw^4*(15 - 32*swC^2 + 16*swC^4)) + 
        4*d*(-72*sw^4*(15 - 23*swC^2 + 4*swC^4) + 
          162*sw^2*(3 - 7*swC^2 + 4*swC^4) - 27*(3 - 10*swC^2 + 8*swC^4) + 
          128*sw^8*(-3 - 5*swC^2 + 8*swC^4) - 32*sw^6*(-33 + 17*swC^2 + 
            44*swC^4)) - 4*(54*sw^2*(9 - 18*swC^2 + 8*swC^4) - 
          27*(3 - 10*swC^2 + 8*swC^4) + 72*sw^4*(-15 + 14*swC^2 + 8*swC^4) + 
          128*sw^8*(-3 - 10*swC^2 + 16*swC^4) - 32*sw^6*(-33 - 14*swC^2 + 
            88*swC^4))) + 2*s*(-15*d*(128*sw^8 - 18*sw^2*(3 - 4*swC^2)^2 + 
          32*sw^6*(-11 + 16*swC^2) + 9*(3 - 10*swC^2 + 8*swC^4) + 
          24*sw^4*(15 - 32*swC^2 + 16*swC^4)) + 
        3*d^2*(128*sw^8 - 18*sw^2*(3 - 4*swC^2)^2 + 
          32*sw^6*(-11 + 16*swC^2) + 9*(3 - 10*swC^2 + 8*swC^4) + 
          24*sw^4*(15 - 32*swC^2 + 16*swC^4)) + 
        8*(27*(3 - 10*swC^2 + 8*swC^4) + 128*sw^8*(3 - 5*swC^2 + 8*swC^4) - 
          54*sw^2*(9 - 27*swC^2 + 20*swC^4) + 72*sw^4*(15 - 41*swC^2 + 
            28*swC^4) - 32*sw^6*(33 - 79*swC^2 + 44*swC^4)))*t + 
      4*(27*(3 - 10*swC^2 + 8*swC^4) - 54*sw^2*(9 - 36*swC^2 + 32*swC^4) + 
        128*sw^8*(3 - 20*swC^2 + 32*swC^4) + 72*sw^4*(15 - 68*swC^2 + 
          64*swC^4) - 32*sw^6*(33 - 172*swC^2 + 176*swC^4))*t^2))/
    (cwC^2*mz^2*Pi^d*(mz^2 - s)^2*s*sw^4*(-1 + sw^2)^2*swC^2), 0, 0, 0, 0, 
   ((-I/81)*2^(-8 - d)*EL^6*
     (s^2*(3*d^2*(128*sw^8 - 18*sw^2*(3 - 4*swC^2)^2 + 
          32*sw^6*(-11 + 16*swC^2) + 9*(3 - 10*swC^2 + 8*swC^4) + 
          24*sw^4*(15 - 32*swC^2 + 16*swC^4)) + 
        4*d*(-72*sw^4*(15 - 23*swC^2 + 4*swC^4) + 
          162*sw^2*(3 - 7*swC^2 + 4*swC^4) - 27*(3 - 10*swC^2 + 8*swC^4) + 
          128*sw^8*(-3 - 5*swC^2 + 8*swC^4) - 32*sw^6*(-33 + 17*swC^2 + 
            44*swC^4)) - 4*(54*sw^2*(9 - 18*swC^2 + 8*swC^4) - 
          27*(3 - 10*swC^2 + 8*swC^4) + 72*sw^4*(-15 + 14*swC^2 + 8*swC^4) + 
          128*sw^8*(-3 - 10*swC^2 + 16*swC^4) - 32*sw^6*(-33 - 14*swC^2 + 
            88*swC^4))) + 2*s*(-15*d*(128*sw^8 - 18*sw^2*(3 - 4*swC^2)^2 + 
          32*sw^6*(-11 + 16*swC^2) + 9*(3 - 10*swC^2 + 8*swC^4) + 
          24*sw^4*(15 - 32*swC^2 + 16*swC^4)) + 
        3*d^2*(128*sw^8 - 18*sw^2*(3 - 4*swC^2)^2 + 
          32*sw^6*(-11 + 16*swC^2) + 9*(3 - 10*swC^2 + 8*swC^4) + 
          24*sw^4*(15 - 32*swC^2 + 16*swC^4)) + 
        8*(27*(3 - 10*swC^2 + 8*swC^4) + 128*sw^8*(3 - 5*swC^2 + 8*swC^4) - 
          54*sw^2*(9 - 27*swC^2 + 20*swC^4) + 72*sw^4*(15 - 41*swC^2 + 
            28*swC^4) - 32*sw^6*(33 - 79*swC^2 + 44*swC^4)))*t + 
      4*(27*(3 - 10*swC^2 + 8*swC^4) - 54*sw^2*(9 - 36*swC^2 + 32*swC^4) + 
        128*sw^8*(3 - 20*swC^2 + 32*swC^4) + 72*sw^4*(15 - 68*swC^2 + 
          64*swC^4) - 32*sw^6*(33 - 172*swC^2 + 176*swC^4))*t^2))/
    (cwC^2*mz^2*Pi^d*(mz^2 - s)^2*sw^4*(-1 + sw^2)^2*swC^2), 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((I/81)*2^(-8 - d)*EL^6*(2*mz^4 - (-8 + d)*mz^2*s + 2*s^2)*
     (s^2*(3*d^2*(128*sw^8 - 18*sw^2*(3 - 4*swC^2)^2 + 
          32*sw^6*(-11 + 16*swC^2) + 9*(3 - 10*swC^2 + 8*swC^4) + 
          24*sw^4*(15 - 32*swC^2 + 16*swC^4)) + 
        4*d*(-72*sw^4*(15 - 23*swC^2 + 4*swC^4) + 
          162*sw^2*(3 - 7*swC^2 + 4*swC^4) - 27*(3 - 10*swC^2 + 8*swC^4) + 
          128*sw^8*(-3 - 5*swC^2 + 8*swC^4) - 32*sw^6*(-33 + 17*swC^2 + 
            44*swC^4)) - 4*(54*sw^2*(9 - 18*swC^2 + 8*swC^4) - 
          27*(3 - 10*swC^2 + 8*swC^4) + 72*sw^4*(-15 + 14*swC^2 + 8*swC^4) + 
          128*sw^8*(-3 - 10*swC^2 + 16*swC^4) - 32*sw^6*(-33 - 14*swC^2 + 
            88*swC^4))) + 2*s*(-15*d*(128*sw^8 - 18*sw^2*(3 - 4*swC^2)^2 + 
          32*sw^6*(-11 + 16*swC^2) + 9*(3 - 10*swC^2 + 8*swC^4) + 
          24*sw^4*(15 - 32*swC^2 + 16*swC^4)) + 
        3*d^2*(128*sw^8 - 18*sw^2*(3 - 4*swC^2)^2 + 
          32*sw^6*(-11 + 16*swC^2) + 9*(3 - 10*swC^2 + 8*swC^4) + 
          24*sw^4*(15 - 32*swC^2 + 16*swC^4)) + 
        8*(27*(3 - 10*swC^2 + 8*swC^4) + 128*sw^8*(3 - 5*swC^2 + 8*swC^4) - 
          54*sw^2*(9 - 27*swC^2 + 20*swC^4) + 72*sw^4*(15 - 41*swC^2 + 
            28*swC^4) - 32*sw^6*(33 - 79*swC^2 + 44*swC^4)))*t + 
      4*(27*(3 - 10*swC^2 + 8*swC^4) - 54*sw^2*(9 - 36*swC^2 + 32*swC^4) + 
        128*sw^8*(3 - 20*swC^2 + 32*swC^4) + 72*sw^4*(15 - 68*swC^2 + 
          64*swC^4) - 32*sw^6*(33 - 172*swC^2 + 176*swC^4))*t^2))/
    (cwC^2*Pi^d*(mz^2 - s)^2*s*sw^4*(-1 + sw^2)^2*swC^2), 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {((-I/9)*EL^6*(-3*d^2*(2*Pi)^d*s - 3*d^3*(2*Pi)^d*s - 
      2^(2 + d)*(-2 + d)*mz^2*Pi^d*(-1 + sw^2)*(3 - 14*sw^2 + 8*sw^4) + 
      2*(-s/2 + mz^2*(-1 + sw^2))*(3*d*(2*Pi)^d + 2^(1 + d)*Pi^d*
         (-3 - 7*(-2 + d)*sw^2 + 4*(-2 + d)*sw^4)) + 
      2^(1 + d)*Pi^d*(s*(d^2*sw^2 + d*(3 - 2*sw^2)^2 - 
          4*(3 - 5*sw^2 + 2*sw^4)) + (-2 + d)*(3 - 14*sw^2 + 8*sw^4)*t) + 
      2^(1 + d)*Pi^d*(s*(60 + 80*sw^2 + d^3*sw^2 - 80*sw^4 + 
          20*d*(-3 - sw^2 + 2*sw^4) - 2*d^2*(-9 + 3*sw^2 + 2*sw^4)) + 
        (-3 + 2*sw^2)*(-12*d^2 + d^3 + d*(46 - 4*sw^2) + 8*(-7 + sw^2))*t) + 
      ((2^(1 + d)*Pi^d - d*(2*Pi)^d)*(-3 + 2*sw^2)*(-1 + 4*sw^2)*
        (s*((-2 + d)*s^2 - 4*s*t - 4*(-1 + d)*t^2) + 2*mz^2*(-1 + sw^2)*
          ((-2 + d)*s^2 + 4*(-1 + d)*s*t + 4*(-1 + d)*t^2)))/((-2 + d)*s^2) - 
      (2*(1 + (2*t)/s)*(2^(1 + d)*Pi^d*s*(-3 + 2*sw^2)*(s*(-2 + d - 4*sw^2) + 
           (-4 + d)*(-1 + 4*sw^2)*t) + mz^2*(1 - sw^2)*(-3*d^2*(2*Pi)^d*s + 
           2^(1 + d)*Pi^d*(s*(d^2*sw^2 + d*(3 - 2*sw^2)^2 - 4*(3 - 5*sw^2 + 
                 2*sw^4)) + (-2 + d)*(3 - 14*sw^2 + 8*sw^4)*t))))/s))/
    (2^(2*(2 + d))*Pi^(2*d)*(mz^2 - s)*sw^4*(-1 + sw^2)), 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((I/9)*EL^6*(3*d^2*(2*Pi)^d*s^2 - 2^(1 + d)*Pi^d*
       (s^2*(-6 - 8*sw^2 + d^2*sw^2 + 8*sw^4 + d*(6 + 2*sw^2 - 4*sw^4)) + 
        s*(8 - 5*d + d^2 - 8*sw^2)*(-3 + 2*sw^2)*t - 2*(3 - 14*sw^2 + 8*sw^4)*
         t^2)))/(2^(2*(2 + d))*Pi^(2*d)*s*(-mz^2 + s)*sw^4*(mz - mz*sw^2)^2), 
   0, ((-I/9)*4^(-2 - d)*EL^6*(2*mz^2*(1 - sw^2)*(-3*d^3*(2*Pi)^d*s^2 + 
        2^(1 + d)*Pi^d*(s^2*(d^3*sw^2 + d^2*(9 - 4*sw^4) + 
            4*(3 + 4*sw^2 - 4*sw^4) + 2*d*(-9 - 6*sw^2 + 8*sw^4)) + 
          (-2 + d)*s*(8 - 5*d + d^2 - 8*sw^2)*(-3 + 2*sw^2)*t - 
          2*(-2 + d)*(3 - 14*sw^2 + 8*sw^4)*t^2)) + 
      3*(d^3*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
         (s^2*(d^3*(-2 + sw^2) + d^2*(9 - 4*sw^4) + 4*(3 + 4*sw^2 - 4*sw^4) + 
            2*d*(-9 - 6*sw^2 + 8*sw^4)) + (-2 + d)*s*(8 - 5*d + d^2 - 8*sw^2)*
           (-3 + 2*sw^2)*t - 2*(-2 + d)*(3 - 14*sw^2 + 8*sw^4)*t^2))))/
    ((-2 + d)*mz^2*Pi^(2*d)*s^2*(-mz^2 + s)*sw^4*(-1 + sw^2)^2), 0, 0, 0, 0, 
   0, 0, 0, 0, 0, ((I/9)*EL^6*(-(2^(1 + d)*(-2 + d)*mz^4*Pi^d*(-1 + sw^2)^2*
        (3 - 14*sw^2 + 8*sw^4)) - mz^2*(1 - sw^2)*(-3*d^3*(2*Pi)^d*s + 
        2^(1 + d)*Pi^d*(s*(60 + 80*sw^2 + d^3*sw^2 - 80*sw^4 + 
            20*d*(-3 - sw^2 + 2*sw^4) - 2*d^2*(-9 + 3*sw^2 + 2*sw^4)) + 
          (-3 + 2*sw^2)*(-12*d^2 + d^3 + d*(46 - 4*sw^2) + 8*(-7 + sw^2))*
           t)) + 2*(-3*d*(2*Pi)^d*(d*s^2 + t^2) + 2^(1 + d)*Pi^d*
         (s^2*(-6 - 8*sw^2 + d^2*sw^2 + 8*sw^4 + d*(6 + 2*sw^2 - 4*sw^4)) + 
          s*(10 - 6*d + d^2 - 4*sw^2)*(-3 + 2*sw^2)*t + 
          (3 + 7*(-2 + d)*sw^2 - 4*(-2 + d)*sw^4)*t^2)) + 
      (2*(2^(1 + d)*Pi^d - d*(2*Pi)^d)*(-3 + 2*sw^2)*(-1 + 4*sw^2)*
        ((-2 + d)*s^2*t^2 + mz^4*(-1 + sw^2)^2*((-2 + d)*s^2 + 
           4*(-1 + d)*s*t + 4*(-1 + d)*t^2) - 2*mz^2*s*(-1 + sw^2)*t*
          (-2*t + d*(s + 2*t))))/((-2 + d)*s^2) + 
      (2*(t - (mz^2*(-1 + sw^2)*(s + 2*t))/s)*(2^(1 + d)*Pi^d*s*(-3 + 2*sw^2)*
          (s*(-2 + d - 4*sw^2) + (-4 + d)*(-1 + 4*sw^2)*t) + 
         mz^2*(1 - sw^2)*(-3*d^2*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (s*(d^2*sw^2 + d*(3 - 2*sw^2)^2 - 4*(3 - 5*sw^2 + 2*sw^4)) + 
             (-2 + d)*(3 - 14*sw^2 + 8*sw^4)*t))))/s))/
    (2^(2*(2 + d))*Pi^(2*d)*(mz^2 - s)*sw^4*(-1 + sw^2)), 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}, 
  {((I/9)*2^(-7 - d)*EL^6*(-3 + 2*sw^2)*((-7 + d)*s + 2*mz^2*(-1 + sw^2))*
     (-3 + 4*swC^2)*(-((-2 + d)*s^2*(-2 + 4*swC^2 + 
         d*(1 - 2*sw^2 - 2*swC^2) + sw^2*(4 + 8*swC^2))) + 
      2*s*(-8 + 16*swC^2 - 16*sw^2*(-1 + swC^2) - 
        5*d*(-1 + 2*sw^2 + 2*swC^2) + d^2*(-1 + 2*sw^2 + 2*swC^2))*t + 
      4*(-1 + 2*swC^2 + sw^2*(2 - 8*swC^2))*t^2))/(cwC^2*Pi^d*(mz^2 - s)^2*s*
     sw^4*(-1 + sw^2)*swC^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, ((I/9)*2^(-7 - d)*EL^6*(-3 + 2*sw^2)*(-3 + 4*swC^2)*
     (-((-2 + d)*s^2*(2 - 4*swC^2 - 4*sw^2*(1 + 2*swC^2) + 
         d*(-1 + 2*sw^2 + 2*swC^2))) - 2*s*(-8 + 16*swC^2 - 
        16*sw^2*(-1 + swC^2) - 5*d*(-1 + 2*sw^2 + 2*swC^2) + 
        d^2*(-1 + 2*sw^2 + 2*swC^2))*t + 
      4*(1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t^2))/
    (cwC^2*mz^2*Pi^d*(mz^2 - s)^2*sw^4*(-1 + sw^2)^2*swC^2), 0, 
   ((-I/9)*2^(-7 - d)*EL^6*(-3 + 2*sw^2)*(-3*s + 2*mz^2*(-1 + sw^2))*
     (-3 + 4*swC^2)*(-((-2 + d)*s^2*(2 - 4*swC^2 - 4*sw^2*(1 + 2*swC^2) + 
         d*(-1 + 2*sw^2 + 2*swC^2))) - 2*s*(-8 + 16*swC^2 - 
        16*sw^2*(-1 + swC^2) - 5*d*(-1 + 2*sw^2 + 2*swC^2) + 
        d^2*(-1 + 2*sw^2 + 2*swC^2))*t + 
      4*(1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t^2))/
    (cwC^2*mz^2*Pi^d*(mz^2 - s)^2*s*sw^4*(-1 + sw^2)^2*swC^2), 0, 0, 0, 0, 0, 
   0, 0, 0, 0, ((-I/9)*2^(-7 - d)*EL^6*(-3 + 2*sw^2)*
     (2*s^2 + (-8 + d)*mz^2*s*(-1 + sw^2) + 2*mz^4*(-1 + sw^2)^2)*
     (-3 + 4*swC^2)*(-((-2 + d)*s^2*(-2 + 4*swC^2 + 
         d*(1 - 2*sw^2 - 2*swC^2) + sw^2*(4 + 8*swC^2))) + 
      2*s*(-8 + 16*swC^2 - 16*sw^2*(-1 + swC^2) - 
        5*d*(-1 + 2*sw^2 + 2*swC^2) + d^2*(-1 + 2*sw^2 + 2*swC^2))*t + 
      4*(-1 + 2*swC^2 + sw^2*(2 - 8*swC^2))*t^2))/(cwC^2*Pi^d*(mz^2 - s)^2*s*
     sw^4*(-1 + sw^2)*swC^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((I/3)*2^(-3 - d)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
     (s^2 + 2*(-3 + 2*d)*mz^2*s*(-1 + sw^2) - mz^4*(-1 + sw^2)^2 + 
      mz^2*(-1 + sw^2)*(s + mz^2*(-1 + sw^2))*GaugeXi[W]))/
    ((-1 + d)*mz^4*Pi^d*s^3*sw^2*(-1 + sw^2)^2), 
   ((-I/3)*2^(-3 - 2*d)*EL^6*(d*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
       (-s^2 + 2*s*t + 2*t^2) + 2^(2 + d)*mz^2*Pi^d*(-1 + sw^2)*
       ((-2 + d)*s^2 + 4*s*t + 4*t^2)*GaugeXi[W]))/
    ((-1 + d)*mz^4*Pi^(2*d)*s*sw^2*(-1 + sw^2)^2), 
   ((I/3)*2^(-3 - d)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
     (s^2 + 4*(-1 + 2*d)*mz^2*s*(-1 + sw^2) - (-9 + 8*d)*mz^4*(-1 + sw^2)^2 - 
      mz^2*(-1 + sw^2)*(s + mz^2*(-1 + sw^2))*GaugeXi[W]))/
    ((-1 + d)*mz^4*Pi^d*s^3*sw^2*(-1 + sw^2)^2), 
   ((I/3)*2^(-3 - 2*d)*EL^6*(-(d*(2*Pi)^d*s^5) + 2^(1 + d)*Pi^d*s^3*
       (s^2 - 2*s*t - 2*t^2) + 2^(3 + d)*(-1 + d)*mz^6*Pi^d*(1 - sw^2)^3*
       ((-2 + d)*s^2 + 4*s*t + 4*t^2) + 2^(1 + d)*(-7 + 4*d)*mz^2*Pi^d*s^2*
       (-1 + sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2) + 2^(2 + d)*(-5 + 3*d)*mz^4*
       Pi^d*s*(-1 + sw^2)^2*((-2 + d)*s^2 + 4*s*t + 4*t^2)))/
    ((-1 + d)*mz^4*Pi^(2*d)*s^3*(sw - sw^3)^2), 
   ((-I/3)*EL^6*mz^2*(-1 + sw^2)*(-2*s + mz^2*(-1 + sw^2))*
     ((-2 + d)*s^2 + 4*s*t + 4*t^2))/((2*Pi)^d*s^3*sw^2), 0, 0, 
   ((-I/3)*2^(-3 - d)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
     (s^2 - 2*(-3 + 2*d)*mz^2*s*(-1 + sw^2) + mz^4*(-1 + sw^2)^2 - 
      mz^2*(-1 + sw^2)*(s + mz^2*(-1 + sw^2))*GaugeXi[W]))/
    ((-1 + d)*mz^4*Pi^d*s^3*sw^2*(-1 + sw^2)^2), 
   ((-I/3)*2^(-3 - 2*d)*EL^6*(-s - mz^2*(-1 + sw^2))*
     (d*(2*Pi)^d*s^4 + 2^(1 + d)*Pi^d*s^2*(-s^2 + 2*s*t + 2*t^2) + 
      2^(1 + d)*(-3 + 2*d)*mz^2*Pi^d*s*(1 - sw^2)*((-2 + d)*s^2 + 4*s*t + 
        4*t^2) + mz^4*(-1 + sw^2)^2*(-3*d*(2*Pi)^d*s^2 + 
        2^(1 + d)*Pi^d*((-1 + 2*d)*s^2 + 2*s*t + 2*t^2)) - 
      2^(1 + d)*mz^2*Pi^d*(1 - sw^2)*(s - mz^2*(-1 + sw^2))*
       ((-2 + d)*s^2 + 4*s*t + 4*t^2)*GaugeXi[W] - mz^4*(-1 + sw^2)^2*
       (-(d*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*(s^2 - 2*s*t - 2*t^2))*
       GaugeXi[W]^2))/((-1 + d)*mz^4*Pi^(2*d)*s^3*(sw - sw^3)^2), 
   ((-I/3)*2^(-3 - d)*EL^6*(s + mz^2*(-1 + sw^2))*((-2 + d)*s^2 + 4*s*t + 
      4*t^2)*(s - mz^2*(-1 + sw^2) + mz^2*(-1 + sw^2)*GaugeXi[W]))/
    ((-1 + d)*mz^4*Pi^d*s^3*sw^2*(-1 + sw^2)^2), 
   ((-I/3)*2^(-3 - 2*d)*EL^6*(-s - mz^2*(-1 + sw^2))*
     (d*(2*Pi)^d*s^4 + 2^(1 + d)*Pi^d*s^2*(-s^2 + 2*s*t + 2*t^2) + 
      2^(1 + d)*(-3 + 2*d)*mz^2*Pi^d*s*(1 - sw^2)*((-2 + d)*s^2 + 4*s*t + 
        4*t^2) + mz^4*(-1 + sw^2)^2*(d*(2*Pi)^d*s^2 + 
        2^(1 + d)*Pi^d*(-s^2 + 2*s*t + 2*t^2)) - 2^(1 + d)*mz^2*Pi^d*
       (1 - sw^2)*(s - mz^2*(-1 + sw^2))*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
       GaugeXi[W] + mz^4*(-1 + sw^2)^2*(-3*d*(2*Pi)^d*s^2 + 
        2^(1 + d)*Pi^d*((-1 + 2*d)*s^2 + 2*s*t + 2*t^2))*GaugeXi[W]^2))/
    ((-1 + d)*mz^4*Pi^(2*d)*s^3*(sw - sw^3)^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, ((I/3)*2^(-7 - 2*d)*EL^6*(3*d^2*(2*Pi)^d*s^4 - 
      2^(1 + d)*(-3 + 2*d)*mz^2*Pi^d*s*(1 - sw^2)*(-3 + 4*swC^2)*
       (s^2*(4 + d^2 + 8*swC^2 - 4*d*(1 + swC^2)) + 
        2*s*(8 - 5*d + d^2 - 8*swC^2)*t + 4*(1 - 4*swC^2)*t^2) + 
      2^(1 + d)*Pi^d*s^2*(s^2*(-6 - 4*swC^2 + 16*swC^4 + d^2*(-3 + 2*swC^2) - 
          2*d*(-3 + swC^2 + 4*swC^4)) + s*(8 - 5*d + d^2 - 8*swC^2)*
         (-3 + 4*swC^2)*t - 2*(3 - 16*swC^2 + 16*swC^4)*t^2) + 
      mz^4*(-1 + sw^2)^2*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(6 + 4*swC^2 - 2*d^2*swC^2 - 16*swC^4 + 
            2*d*(-3 + swC^2 + 4*swC^4)) - s*(8 - 5*d + d^2 - 8*swC^2)*
           (-3 + 4*swC^2)*t + 2*(3 - 16*swC^2 + 16*swC^4)*t^2)) + 
      mz^2*(1 - sw^2)*(-s - mz^2*(-1 + sw^2))*(-9*d^2*(2*Pi)^d*s^2 + 
        2^(1 + d)*Pi^d*(s^2*(-6 - 4*swC^2 + 16*swC^4 + d^2*(3 + 2*swC^2) - 
            2*d*(-3 + swC^2 + 4*swC^4)) + s*(8 - 5*d + d^2 - 8*swC^2)*
           (-3 + 4*swC^2)*t - 2*(3 - 16*swC^2 + 16*swC^4)*t^2))*GaugeXi[W]))/
    (cwC^2*(-1 + d)*mz^4*Pi^(2*d)*(mz^2 - s)*s^2*sw^2*(-1 + sw^2)^2*swC^2), 
   ((-I/3)*2^(-7 - d)*EL^6*(-3 + 4*swC^2)*
     (s^2*(4 + d^2 + 8*swC^2 - 4*d*(1 + swC^2)) + 
      2*s*(8 - 5*d + d^2 - 8*swC^2)*t + 4*(1 - 4*swC^2)*t^2)*
     (s + 4*mz^2*(-1 + sw^2)*GaugeXi[W]))/(cwC^2*(-1 + d)*mz^4*Pi^d*
     (mz^2 - s)*sw^2*(-1 + sw^2)^2*swC^2), 
   ((I/3)*2^(-7 - 2*d)*EL^6*(3*d^3*(2*Pi)^d*s^4 - 2^(1 + d)*Pi^d*s^2*
       (s^2*(12 + 8*swC^2 + 2*d^3*swC^2 - 32*swC^4 + 
          d^2*(9 - 6*swC^2 - 8*swC^4) + 2*d*(-9 + 16*swC^4)) + 
        (-2 + d)*s*(8 - 5*d + d^2 - 8*swC^2)*(-3 + 4*swC^2)*t - 
        2*(-2 + d)*(3 - 16*swC^2 + 16*swC^4)*t^2) + 4*mz^2*s*(1 - sw^2)*
       (39*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(d^4*(-3 + 4*swC^2) - 2*d^3*swC^2*(7 + 8*swC^2) + 
            d*(42 + 16*swC^2 - 96*swC^4) + 4*(-3 - 2*swC^2 + 8*swC^4) + 
            d^2*(-45 + 6*swC^2 + 72*swC^4)) + (2 - 5*d + 2*d^2)*s*
           (8 - 5*d + d^2 - 8*swC^2)*(-3 + 4*swC^2)*t - 2*(2 - 5*d + 2*d^2)*
           (3 - 16*swC^2 + 16*swC^4)*t^2)) + mz^4*(-1 + sw^2)^2*
       (129*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(4*d^4*(-3 + 4*swC^2) + d*(258 + 64*swC^2 - 544*swC^4) + 
            d^3*(21 - 66*swC^2 - 64*swC^4) + 36*(-3 - 2*swC^2 + 8*swC^4) + 
            d^2*(-225 + 54*swC^2 + 328*swC^4)) + (18 - 25*d + 8*d^2)*s*
           (8 - 5*d + d^2 - 8*swC^2)*(-3 + 4*swC^2)*t - 2*(18 - 25*d + 8*d^2)*
           (3 - 16*swC^2 + 16*swC^4)*t^2)) + mz^2*(1 - sw^2)*
       (-s - mz^2*(-1 + sw^2))*(3*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(12 + 8*swC^2 - 32*swC^4 + d^3*(-3 + 2*swC^2) + 
            d^2*(9 - 6*swC^2 - 8*swC^4) + 2*d*(-9 + 16*swC^4)) + 
          (-2 + d)*s*(8 - 5*d + d^2 - 8*swC^2)*(-3 + 4*swC^2)*t - 
          2*(-2 + d)*(3 - 16*swC^2 + 16*swC^4)*t^2))*GaugeXi[W]))/
    (cwC^2*(-2 + d)*(-1 + d)*mz^4*Pi^(2*d)*s^2*(-mz^2 + s)*sw^2*(-1 + sw^2)^2*
     swC^2), ((I/3)*2^(-7 - 2*d)*EL^6*
     ((-2 + d)*(2*Pi)^d*s^2*(-s - 2*mz^2*(-1 + sw^2))*
       (d*s^2 + 4*d*mz^2*s*(-1 + sw^2) + 4*(-1 + d)*mz^4*(-1 + sw^2)^2)*
       (3 - 16*swC^2 + 16*swC^4) - (2 - d)*s^2*(-((2*Pi)^d*s) - 
        2^(1 + d)*mz^2*Pi^d*(-1 + sw^2))*(d*s^2 + 4*d*mz^2*s*(-1 + sw^2) + 
        4*(-1 + d)*mz^4*(-1 + sw^2)^2)*(3 - 16*swC^2 + 16*swC^4) - 
      4*(-1 + d)*mz^4*(-(2^(1 + d)*Pi^d) + d*(2*Pi)^d)*(-1 + sw^2)^2*
       (s + 2*mz^2*(-1 + sw^2))*(-3 + 4*swC^2)*(-1 + 4*swC^2)*
       ((-2 + d)*s^2 - 4*s*t - 4*(-1 + d)*t^2) - (2 - d)*(2*Pi)^d*s*
       (-s - 2*mz^2*(-1 + sw^2))*(3 - 4*swC^2)*(s*(-4 + d + 4*swC^2) + 
        2*(-1 + 4*swC^2)*t)*(4*(-1 + d)*mz^4*(-1 + sw^2)^2 + s*(d*s + 2*t) + 
        4*mz^2*(-1 + sw^2)*(d*s + 2*t)) + 2*(1 - d)*(2 - d)*s*
       (-s/2 - mz^2*(-1 + sw^2))*(2^(2 + d)*mz^2*Pi^d*s*(1 - sw^2)*
         (-3 + 4*swC^2)*(s*(2 - d + 4*swC^2) + (2 - 8*swC^2)*t) + 
        2^(3 + d)*mz^4*Pi^d*(-1 + sw^2)^2*(-3 + 4*swC^2)*
         (2*(-3 + d)*s*swC^2 + (-1 + 4*swC^2)*t) + 
        s^2*(3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
           (s*(3 - 3*d + 2*swC^2 + 2*d*swC^2 - 8*swC^4) + 
            (3 - 16*swC^2 + 16*swC^4)*t))) - 2*(1 - d)*(2 - d)*s*
       (-s/2 - mz^2*(-1 + sw^2))*(2^(2 + d)*mz^2*Pi^d*s*(-1 + sw^2)*
         (-3 + 4*swC^2)*(s*(2 - d + 4*swC^2) + (2 - 8*swC^2)*t) + 
        2^(2 + d)*mz^4*Pi^d*(-1 + sw^2)^2*(-3 + 4*swC^2)*
         (s*(10 + d^2 - 4*swC^2 + d*(-7 + 4*swC^2)) + 
          2*(-3 + d)*(-1 + 4*swC^2)*t) - s^2*(-3*d*(2*Pi)^d*s + 
          2^(1 + d)*Pi^d*(s*(3 + 2*(1 + d)*swC^2 - 8*swC^4) + 
            (3 - 16*swC^2 + 16*swC^4)*t))) + 4*(1 - d)*(2 - d)*mz^4*
       (-1 + sw^2)^2*(s + 2*t)*(2^(1 + d)*(-2 + d)*mz^2*Pi^d*(1 - sw^2)*
         (-3 + 4*swC^2)*(s*(-2 + d - 4*swC^2) + 2*(-1 + 4*swC^2)*t) - 
        s*(-3*d^2*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
           (2*s*(-9 - 6*swC^2 + d^2*swC^2 + 24*swC^4 + d*(6 - 5*swC^2 - 
                4*swC^4)) + (2 + d)*(3 - 16*swC^2 + 16*swC^4)*t))) - 
      2*(1 - d)*(2 - d)*s*(s^3*(-3*d*(2*Pi)^d + 2^(1 + d)*Pi^d*
           (3 + 2*(1 + d)*swC^2 - 8*swC^4))*t + 2^(2 + d)*(-3 + d)*mz^6*Pi^d*
         (-1 + sw^2)^3*(-3 + 4*swC^2)*(s*(-2 + d - 4*swC^2) + 
          2*(-1 + 4*swC^2)*t) + 2^(1 + d)*mz^4*Pi^d*s*(-1 + sw^2)^2*
         (-3 + 4*swC^2)*(-3*s*(6 + d^2 + 12*swC^2 - d*(5 + 4*swC^2)) - 
          2*(37 + 4*d^2 + 20*swC^2 - d*(25 + 4*swC^2))*t) + 
        2*mz^2*s*(1 - sw^2)*(69*d*(2*Pi)^d*s*t + 2^(1 + d)*Pi^d*
           (s^2*(-3 + 4*swC^2)*(4 + d^2 + 8*swC^2 - 4*d*(1 + swC^2)) + 
            s*(-57 + 106*swC^2 - 46*d*swC^2 - 40*swC^4 + d^2*(-6 + 8*swC^2))*
             t - 4*(3 - 16*swC^2 + 16*swC^4)*t^2)))))/
    (cwC^2*(-2 + d)*(-1 + d)*mz^4*Pi^(2*d)*(mz^2 - s)*s^2*sw^2*(-1 + sw^2)^2*
     swC^2), ((I/3)*2^(-5 - 2*d)*EL^6*
     (-((2^(1 + d)*(-2 + d)*mz^4*Pi^d*(-1 + sw^2)^2*(-3 + 4*swC^2)*
         (s*(-2 + d - 4*swC^2) + 2*(-1 + 4*swC^2)*t))/s) + 
      2^(2 + d)*mz^2*Pi^d*(1 - sw^2)*(-3 + 4*swC^2)*
       (-(s*(4 + d^2 + 8*swC^2 - 4*d*(1 + swC^2))) + 
        (-24 - 3*d^2 + 4*d*(4 + swC^2))*t) - 2*(2^(1 + d)*Pi^d - d*(2*Pi)^d)*
       (-3 + 4*swC^2)*(-1 + 4*swC^2)*t*(t + (4*mz^2*(-1 + sw^2)*t)/s + 
        (4*mz^4*(-1 + sw^2)^2*(s + (-1 + d)*t))/((-2 + d)*s^2)) + 
      t*(-3*d^2*(2*Pi)^d*s + 2^(2 + d)*Pi^d*
         (s*(-9 - 6*swC^2 + d^2*swC^2 + 24*swC^4 + 
            d*(6 - 5*swC^2 - 4*swC^4)) + 2*(3 - 16*swC^2 + 16*swC^4)*t)) + 
      ((t + (2*mz^2*(-1 + sw^2)*t)/s)*(2^(1 + d)*(-2 + d)*mz^2*Pi^d*
          (1 - sw^2)*(-3 + 4*swC^2)*(s*(-2 + d - 4*swC^2) + 
           2*(-1 + 4*swC^2)*t) - s*(-3*d^2*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (2*s*(-9 - 6*swC^2 + d^2*swC^2 + 24*swC^4 + d*(6 - 5*swC^2 - 
                 4*swC^4)) + (2 + d)*(3 - 16*swC^2 + 16*swC^4)*t))))/s))/
    (cwC^2*Pi^(2*d)*(mz^2 - s)*sw^2*swC^2), 0, 0, 
   ((-I/3)*2^(-7 - 2*d)*EL^6*(3*d^2*(2*Pi)^d*s^4 - 2^(1 + d)*(-3 + 2*d)*mz^2*
       Pi^d*s*(1 - sw^2)*(-3 + 4*swC^2)*
       (s^2*(4 + d^2 + 8*swC^2 - 4*d*(1 + swC^2)) + 
        2*s*(8 - 5*d + d^2 - 8*swC^2)*t + 4*(1 - 4*swC^2)*t^2) + 
      2^(1 + d)*Pi^d*s^2*(s^2*(6 + 4*swC^2 - 2*d^2*swC^2 - 16*swC^4 + 
          2*d*(-3 + swC^2 + 4*swC^4)) - s*(8 - 5*d + d^2 - 8*swC^2)*
         (-3 + 4*swC^2)*t + 2*(3 - 16*swC^2 + 16*swC^4)*t^2) + 
      mz^4*(-1 + sw^2)^2*(-3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(6 + 4*swC^2 - 16*swC^4 + d^2*(3 - 2*swC^2) + 
            2*d*(-3 + swC^2 + 4*swC^4)) - s*(8 - 5*d + d^2 - 8*swC^2)*
           (-3 + 4*swC^2)*t + 2*(3 - 16*swC^2 + 16*swC^4)*t^2)) + 
      mz^2*(1 - sw^2)*(-s - mz^2*(-1 + sw^2))*(3*d^2*(2*Pi)^d*s^2 + 
        2^(1 + d)*Pi^d*(s^2*(-6 - 4*swC^2 + 16*swC^4 + d^2*(-3 + 2*swC^2) - 
            2*d*(-3 + swC^2 + 4*swC^4)) + s*(8 - 5*d + d^2 - 8*swC^2)*
           (-3 + 4*swC^2)*t - 2*(3 - 16*swC^2 + 16*swC^4)*t^2))*GaugeXi[W]))/
    (cwC^2*(-1 + d)*mz^4*Pi^(2*d)*s^2*(-mz^2 + s)*sw^2*(-1 + sw^2)^2*swC^2), 
   ((I/3)*2^(-7 - 2*d)*EL^6*
     (-(((s + mz^2*(-1 + sw^2))*(s + mz^2*(-1 + sw^2) + mz^2*(-1 + sw^2)*
           GaugeXi[W])*(s*(3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
             (s*(3 - 3*d + 2*swC^2 + 2*d*swC^2 - 8*swC^4) + (3 - 16*swC^2 + 
                16*swC^4)*t)) - mz^2*(1 - sw^2)*(-3*d*(2*Pi)^d*s + 
            2^(1 + d)*Pi^d*(s*(3 + 2*(1 + d)*swC^2 - 8*swC^4) + 
              (3 - 16*swC^2 + 16*swC^4)*t)) - mz^2*(1 - sw^2)*
           (-3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(3 + 2*(1 + d)*swC^2 - 
                8*swC^4) + (3 - 16*swC^2 + 16*swC^4)*t))*GaugeXi[W]))/s) - 
      ((s + mz^2*(-1 + sw^2) + mz^2*(-1 + sw^2)*GaugeXi[W])*
        (2^(1 + d)*mz^2*Pi^d*s*(1 - sw^2)*(-3 + 4*swC^2)*
          (s*(2 - d + 4*swC^2) + (2 - 8*swC^2)*t) + 
         s^2*(-3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(3 + 2*(1 + d)*swC^2 - 8*
                swC^4) + (3 - 16*swC^2 + 16*swC^4)*t)) + 
         mz^4*(-1 + sw^2)^2*(-3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (s*(3 + 2*(1 + d)*swC^2 - 8*swC^4) + (3 - 16*swC^2 + 16*swC^4)*
              t)) + mz^2*(1 - sw^2)*(-s - mz^2*(-1 + sw^2))*
          (-3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(3 + 2*(1 + d)*swC^2 - 8*
                swC^4) + (3 - 16*swC^2 + 16*swC^4)*t))*GaugeXi[W]))/s + 
      (2^(1 + d)*Pi^d*(s + mz^2*(-1 + sw^2))*(3 - 16*swC^2 + 16*swC^4)*
        (d*(s + mz^2*(-1 + sw^2))^2 + 2*mz^2*(-1 + sw^2)*
          (d*s + (-2 + d)*mz^2*(-1 + sw^2))*GaugeXi[W] + 
         d*mz^4*(-1 + sw^2)^2*GaugeXi[W]^2))/(1 - d) - 
      (2*(s + mz^2*(-1 + sw^2))*(s^2*(-3*d*(2*Pi)^d + 2^(1 + d)*Pi^d*
            (3 + 2*(1 + d)*swC^2 - 8*swC^4))*t + mz^4*(-1 + sw^2)^2*
          (-3*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(3 + 2*(1 + d)*swC^2 - 8*swC^4))*
          t + 2*mz^2*(1 - sw^2)*(-3*d*(2*Pi)^d*s*(d*s - 11*t) + 
           2^(1 + d)*Pi^d*(2*s^2*(-3 - 2*swC^2 + d^2*swC^2 + 8*swC^4 - d*
                (-3 + swC^2 + 4*swC^4)) + s*(-22*d*swC^2 + d^2*
                (-3 + 4*swC^2) - 3*(9 - 18*swC^2 + 8*swC^4))*t - 
             2*(3 - 16*swC^2 + 16*swC^4)*t^2)) - 2*mz^2*(1 - sw^2)*
          (s*(-3*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(3 + 2*(1 + d)*swC^2 - 8*swC^4))*
            t + mz^2*(1 - sw^2)*(-3*d*(2*Pi)^d*(s + t) + 2^(1 + d)*Pi^d*
              (s*(3 + 2*(1 + d)*swC^2 - 8*swC^4) + 2*(3 + (-7 + d)*swC^2 + 
                 4*swC^4)*t)))*GaugeXi[W] + mz^4*(-1 + sw^2)^2*
          (-3*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(3 + 2*(1 + d)*swC^2 - 8*swC^4))*t*
          GaugeXi[W]^2))/s + ((2*Pi)^d*(s + mz^2*(-1 + sw^2))*(3 - 4*swC^2)*
        (s*(-4 + d + 4*swC^2) + 2*(-1 + 4*swC^2)*t)*
        ((s + mz^2*(-1 + sw^2))^2*(d*s + 2*t) + 2*mz^2*(1 - sw^2)*
          (-(mz^2*(-1 + sw^2)*((-2 + d)*s - 2*t)) - s*(d*s + 2*t))*
          GaugeXi[W] + mz^4*(-1 + sw^2)^2*(d*s + 2*t)*GaugeXi[W]^2))/
       ((1 - d)*s^2)))/(cwC^2*mz^4*Pi^(2*d)*(-mz^2 + s)*sw^2*(-1 + sw^2)^2*
     swC^2), ((I/3)*2^(-7 - 2*d)*EL^6*(-3*d^2*(2*Pi)^d*s^4 + 
      2^(1 + d)*Pi^d*s^2*(2*s^2*(-3 - 2*swC^2 + d^2*swC^2 + 8*swC^4 - 
          d*(-3 + swC^2 + 4*swC^4)) + s*(8 - 5*d + d^2 - 8*swC^2)*
         (-3 + 4*swC^2)*t - 2*(3 - 16*swC^2 + 16*swC^4)*t^2) + 
      mz^4*(-1 + sw^2)^2*(-3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(6 + 4*swC^2 - 16*swC^4 + d^2*(3 - 2*swC^2) + 
            2*d*(-3 + swC^2 + 4*swC^4)) - s*(8 - 5*d + d^2 - 8*swC^2)*
           (-3 + 4*swC^2)*t + 2*(3 - 16*swC^2 + 16*swC^4)*t^2)) + 
      mz^2*(1 - sw^2)*(-s - mz^2*(-1 + sw^2))*(-3*d^2*(2*Pi)^d*s^2 + 
        2^(1 + d)*Pi^d*(2*s^2*(-3 - 2*swC^2 + d^2*swC^2 + 8*swC^4 - 
            d*(-3 + swC^2 + 4*swC^4)) + s*(8 - 5*d + d^2 - 8*swC^2)*
           (-3 + 4*swC^2)*t - 2*(3 - 16*swC^2 + 16*swC^4)*t^2))*GaugeXi[W]))/
    (cwC^2*(-1 + d)*mz^4*Pi^(2*d)*s^2*(-mz^2 + s)*sw^2*(-1 + sw^2)^2*swC^2), 
   ((I/3)*2^(-7 - 2*d)*EL^6*(((2*Pi)^d*(s + mz^2*(-1 + sw^2))*(-3 + 4*swC^2)*
        (s*(2 - d + 4*swC^2) + (2 - 8*swC^2)*t)*
        (s + mz^2*(-1 + sw^2) + mz^2*(-1 + sw^2)*GaugeXi[W])^2)/s - 
      ((s + mz^2*(-1 + sw^2) + mz^2*(-1 + sw^2)*GaugeXi[W])*
        (2^(1 + d)*mz^2*Pi^d*s*(1 - sw^2)*(-3 + 4*swC^2)*
          (s*(2 - d + 4*swC^2) + (2 - 8*swC^2)*t) + 
         s^2*(-3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(3 + 2*(1 + d)*swC^2 - 8*
                swC^4) + (3 - 16*swC^2 + 16*swC^4)*t)) + 
         mz^4*(-1 + sw^2)^2*(-3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (s*(3 + 2*(1 + d)*swC^2 - 8*swC^4) + (3 - 16*swC^2 + 16*swC^4)*
              t)) + mz^2*(1 - sw^2)*(-s - mz^2*(-1 + sw^2))*
          (-3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(3 + 2*(1 + d)*swC^2 - 8*
                swC^4) + (3 - 16*swC^2 + 16*swC^4)*t))*GaugeXi[W]))/s + 
      (2^(1 + d)*Pi^d*(s + mz^2*(-1 + sw^2))*(3 - 16*swC^2 + 16*swC^4)*
        (d*(s + mz^2*(-1 + sw^2))^2 + 2*mz^2*(-1 + sw^2)*
          (d*s + (-2 + d)*mz^2*(-1 + sw^2))*GaugeXi[W] + 
         d*mz^4*(-1 + sw^2)^2*GaugeXi[W]^2))/(1 - d) - 
      (2*(s^3*(-3*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(3 + 2*(1 + d)*swC^2 - 
             8*swC^4))*t - mz^6*(1 - sw^2)^3*(-3*d*(2*Pi)^d + 
           2^(1 + d)*Pi^d*(3 + 2*(1 + d)*swC^2 - 8*swC^4))*t + 
         mz^2*s*(1 - sw^2)*(3*d*(2*Pi)^d*s*t + 2^(1 + d)*Pi^d*
            (s^2*(-3 + 4*swC^2)*(4 + d^2 + 8*swC^2 - 4*d*(1 + swC^2)) + 
             s*(-57 + 106*swC^2 - 40*swC^4 + d*(33 - 46*swC^2) + d^2*
                (-6 + 8*swC^2))*t - 4*(3 - 16*swC^2 + 16*swC^4)*t^2)) + 
         mz^4*(-1 + sw^2)^2*(57*d*(2*Pi)^d*s*t + 2^(1 + d)*Pi^d*
            (-(s^2*(-3 + 4*swC^2)*(4 + d^2 + 8*swC^2 - 4*d*(1 + swC^2))) + 
             s*(57 - 106*swC^2 + 40*swC^4 + d^2*(6 - 8*swC^2) + d*
                (-63 + 46*swC^2))*t + 4*(3 - 16*swC^2 + 16*swC^4)*t^2)) + 
         2*mz^2*(1 - sw^2)*(-s - mz^2*(-1 + sw^2))*
          (s*(-3*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(3 + 2*(1 + d)*swC^2 - 8*swC^4))*
            t + mz^2*(1 - sw^2)*(-3*d*(2*Pi)^d*(s + t) + 2^(1 + d)*Pi^d*
              (s*(3 + 2*(1 + d)*swC^2 - 8*swC^4) + 2*(3 + (-7 + d)*swC^2 + 
                 4*swC^4)*t)))*GaugeXi[W] - mz^4*(-1 + sw^2)^2*
          (-s - mz^2*(-1 + sw^2))*(-3*d*(2*Pi)^d + 2^(1 + d)*Pi^d*
            (3 + 2*(1 + d)*swC^2 - 8*swC^4))*t*GaugeXi[W]^2))/s + 
      ((2*Pi)^d*(s + mz^2*(-1 + sw^2))*(3 - 4*swC^2)*(s*(-4 + d + 4*swC^2) + 
         2*(-1 + 4*swC^2)*t)*((s + mz^2*(-1 + sw^2))^2*(d*s + 2*t) + 
         2*mz^2*(1 - sw^2)*(-(mz^2*(-1 + sw^2)*((-2 + d)*s - 2*t)) - 
           s*(d*s + 2*t))*GaugeXi[W] + mz^4*(-1 + sw^2)^2*(d*s + 2*t)*
          GaugeXi[W]^2))/((1 - d)*s^2)))/(cwC^2*mz^4*Pi^(2*d)*(-mz^2 + s)*
     sw^2*(-1 + sw^2)^2*swC^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, ((-I/3)*2^(-5 - 2*d)*EL^6*(-3*d^2*(2*Pi)^d*s^4 + 
      2^(1 + d)*Pi^d*s^2*(2*s^2*(1 + d^2 + 2*sw^2 - d*(1 + sw^2)) + 
        s*(8 - 5*d + d^2 - 8*sw^2)*t + 2*(1 - 4*sw^2)*t^2) + 
      mz^4*(-1 + sw^2)^2*(-(d^2*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*
         (2*s^2*(-1 + d - 2*sw^2 + d*sw^2) - s*(8 - 5*d + d^2 - 8*sw^2)*t + 
          2*(-1 + 4*sw^2)*t^2)) - 2*mz^2*s*(1 - sw^2)*(-11*d^2*(2*Pi)^d*s^2 + 
        2^(1 + d)*Pi^d*(s^2*(d^3 - 4*d^2*sw^2 - 6*(1 + 2*sw^2) + 
            2*d*(5 + 7*sw^2)) + (-3 + 2*d)*s*(8 - 5*d + d^2 - 8*sw^2)*t - 
          2*(-3 + 2*d)*(-1 + 4*sw^2)*t^2)) + 
      (-(2^(1 + d)*Pi^d*s^2*(s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2)) + 
           2*s*(8 - 5*d + d^2 - 8*sw^2)*t + 4*(1 - 4*sw^2)*t^2)) - 
        3*mz^4*(-1 + sw^2)^2*(-(d^2*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*
           (2*s^2*(-1 + d - 2*sw^2 + d*sw^2) - s*(8 - 5*d + d^2 - 8*sw^2)*t + 
            2*(-1 + 4*sw^2)*t^2)) + mz^2*s*(1 - sw^2)*(d^2*(2*Pi)^d*s^2 + 
          2^(1 + d)*Pi^d*(s^2*(4*d^3 - 26*(1 + 2*sw^2) - d^2*(23 + 16*sw^2) + 
              d*(42 + 58*sw^2)) + (-13 + 8*d)*s*(8 - 5*d + d^2 - 8*sw^2)*t - 
            2*(-13 + 8*d)*(-1 + 4*sw^2)*t^2)))*GaugeXi[W] + 
      (-3*d^2*(2*Pi)^d*s^4 + 2^(1 + d)*Pi^d*s^2*
         (2*s^2*(1 + d^2 + 2*sw^2 - d*(1 + sw^2)) + 
          s*(8 - 5*d + d^2 - 8*sw^2)*t + 2*(1 - 4*sw^2)*t^2) - 
        2^(2 + d)*(-2 + d)*mz^2*Pi^d*s*(1 - sw^2)*
         (s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2)) + 
          2*s*(8 - 5*d + d^2 - 8*sw^2)*t + 4*(1 - 4*sw^2)*t^2) - 
        3*mz^4*(-1 + sw^2)^2*(-5*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
           (s^2*(2 + 3*d^2 + 4*sw^2 - 2*d*(1 + sw^2)) + 
            s*(8 - 5*d + d^2 - 8*sw^2)*t + 2*(1 - 4*sw^2)*t^2)))*
       GaugeXi[W]^2 + mz^2*(1 - sw^2)*(-7*d^2*(2*Pi)^d*s^3 + 
        2^(1 + d)*Pi^d*s*(s^2*(-2 + 3*d^2 - 4*sw^2 + 2*d*(1 + sw^2)) - 
          s*(8 - 5*d + d^2 - 8*sw^2)*t + 2*(-1 + 4*sw^2)*t^2) + 
        mz^2*(1 - sw^2)*(-(d^2*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*
           (s^2*(2 + d^2 + 4*sw^2 - 2*d*(1 + sw^2)) + 
            s*(8 - 5*d + d^2 - 8*sw^2)*t + 2*(1 - 4*sw^2)*t^2)))*
       GaugeXi[W]^3))/((-1 + d)*mz^4*Pi^(2*d)*(mz^2 - s)*s^2*sw^4*
     (-1 + sw^2)^2*(-1 + GaugeXi[W])^2), 
   ((I/3)*2^(-5 - 2*d)*EL^6*(-(d^2*(2*Pi)^d*s^3) + 2^(1 + d)*Pi^d*s*
       (s^2*(2 + d^2 + 4*sw^2 - 2*d*(1 + sw^2)) + s*(8 - 5*d + d^2 - 8*sw^2)*
         t + 2*(1 - 4*sw^2)*t^2) - 2*(d^2*(2*Pi)^d*s^3 + 
        2^(1 + d)*mz^2*Pi^d*(1 - sw^2)*(s^2*(4 + d^2 + 8*sw^2 - 
            4*d*(1 + sw^2)) + 2*s*(8 - 5*d + d^2 - 8*sw^2)*t + 
          4*(1 - 4*sw^2)*t^2) - 2^(1 + d)*Pi^d*s*
         (2*s^2*(-1 + d - 2*sw^2 + d*sw^2) - s*(8 - 5*d + d^2 - 8*sw^2)*t + 
          2*(-1 + 4*sw^2)*t^2))*GaugeXi[W] + 
      (-(d^2*(2*Pi)^d*s^3) + 2^(1 + d)*Pi^d*s*
         (s^2*(2 + d^2 + 4*sw^2 - 2*d*(1 + sw^2)) + 
          s*(8 - 5*d + d^2 - 8*sw^2)*t + 2*(1 - 4*sw^2)*t^2) + 
        2^(3 + d)*mz^2*Pi^d*(1 - sw^2)*(s^2*(4 + d^2 + 8*sw^2 - 
            4*d*(1 + sw^2)) + 2*s*(8 - 5*d + d^2 - 8*sw^2)*t + 
          4*(1 - 4*sw^2)*t^2))*GaugeXi[W]^2 - 2^(2 + d)*mz^2*Pi^d*(1 - sw^2)*
       (s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2)) + 
        2*s*(8 - 5*d + d^2 - 8*sw^2)*t + 4*(1 - 4*sw^2)*t^2)*GaugeXi[W]^3))/
    ((-1 + d)*mz^4*Pi^(2*d)*(mz^2 - s)*sw^4*(-1 + sw^2)^2*
     (-1 + GaugeXi[W])^2), ((I/3)*2^(-5 - d)*EL^6*
     (s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2)) + 2*s*(8 - 5*d + d^2 - 8*sw^2)*
       t + 4*(1 - 4*sw^2)*t^2)*(-s^2 - 4*(-1 + 2*d)*mz^2*s*(-1 + sw^2) + 
      (-9 + 8*d)*mz^4*(-1 + sw^2)^2 + mz^2*(-1 + sw^2)*(s + mz^2*(-1 + sw^2))*
       GaugeXi[W]))/((-1 + d)*mz^4*Pi^d*(mz^2 - s)*s^2*sw^4*(-1 + sw^2)^2), 
   ((-I/3)*2^(-5 - 4*d)*EL^6*(2^(1 + 3*d)*Pi^(3*d)*s^2*(-1 + 4*sw^2)*
       (-s - 2*mz^2*(-1 + sw^2))*(d*s^2 + 4*d*mz^2*s*(-1 + sw^2) + 
        4*(-1 + d)*mz^4*(-1 + sw^2)^2)*(-1 + GaugeXi[W])^2 + 
      2^(2 + 3*d)*(1 - d)*mz^4*Pi^(3*d)*(1 - 4*sw^2)*(-1 + sw^2)^2*
       (-s - 2*mz^2*(-1 + sw^2))*((-2 + d)*s^2 - 4*s*t - 4*(-1 + d)*t^2)*
       (-1 + GaugeXi[W])^2 + 2*(1 - d)*s*(-s/2 - mz^2*(-1 + sw^2))*
       (2^(2 + 3*d)*mz^2*Pi^(3*d)*s*(-1 + sw^2)*(s*(2 - d + 4*sw^2) + 
          (2 - 8*sw^2)*t) - (2*Pi)^(3*d)*s^2*(s*(-2 + d - 4*sw^2) + 
          2*(-1 + 4*sw^2)*t) + 2^(2 + 3*d)*mz^4*Pi^(3*d)*(-1 + sw^2)^2*
         (s*(10 + d^2 - 4*sw^2 + d*(-7 + 4*sw^2)) + 2*(-3 + d)*(-1 + 4*sw^2)*
           t))*(-1 + GaugeXi[W])^2 - 2*(1 - d)*s*
       ((2*Pi)^(3*d)*s^3*(2 - d + 4*sw^2)*t + 2^(2 + 3*d)*(-3 + d)*mz^6*
         Pi^(3*d)*(1 - sw^2)^3*(s*(-2 + d - 4*sw^2) + 2*(-1 + 4*sw^2)*t) + 
        2^(1 + 3*d)*mz^4*Pi^(3*d)*s*(-1 + sw^2)^2*
         (3*s*(6 + d^2 + 12*sw^2 - d*(5 + 4*sw^2)) + 
          2*(37 + 4*d^2 + 20*sw^2 - d*(25 + 4*sw^2))*t) - 
        2^(1 + 3*d)*mz^2*Pi^(3*d)*s*(1 - sw^2)*
         (2*s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2)) + 
          s*(38 - 23*d + 4*d^2 - 20*sw^2)*t + 8*(1 - 4*sw^2)*t^2))*
       (-1 + GaugeXi[W])^2 - 4^(1 + d)*(1 - d)*mz^4*Pi^(2*d)*(-1 + sw^2)^2*
       (s + 2*t)*(2^(1 + d)*(-2 + d)*mz^2*Pi^d*(1 - sw^2)*
         (s*(-2 + d - 4*sw^2) + 2*(-1 + 4*sw^2)*t) + 
        s*(-(d^2*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*
           (2*s*(-3 - 6*sw^2 + d*(2 + sw^2)) - (2 + d)*(-1 + 4*sw^2)*t)))*
       (-1 + GaugeXi[W])^2 - s*(-s - 2*mz^2*(-1 + sw^2))*
       (s*(-4 + d + 4*sw^2) + 2*(-1 + 4*sw^2)*t)*
       (4*(-1 + d)*mz^4*(-1 + sw^2)^2 + s*(d*s + 2*t) + 
        4*mz^2*(-1 + sw^2)*(d*s + 2*t))*((2*Pi)^(3*d) - 
        2^(1 + 3*d)*Pi^(3*d)*GaugeXi[W] + (2*Pi)^(3*d)*GaugeXi[W]^2) - 
      2*(1 - d)*s*(-s/2 - mz^2*(-1 + sw^2))*
       (-4*mz^2*s*(-1 + sw^2)*(s*(2 - d + 4*sw^2) + (2 - 8*sw^2)*t) + 
        8*mz^4*(-1 + sw^2)^2*(2*(-3 + d)*s*sw^2 + (-1 + 4*sw^2)*t) + 
        s^2*(s*(-2 + d - 4*sw^2) + 2*(-1 + 4*sw^2)*t))*
       ((2*Pi)^(3*d) - 2^(1 + 3*d)*Pi^(3*d)*GaugeXi[W] + 
        (2*Pi)^(3*d)*GaugeXi[W]^2)))/((-1 + d)*mz^4*Pi^(4*d)*(mz^2 - s)*s^2*
     sw^4*(-1 + sw^2)^2*(-1 + GaugeXi[W])^2), 
   ((-I/3)*4^(-1 - d)*EL^6*mz^2*(1 - sw^2)*
     (-(2^(1 + d)*Pi^d*s*(s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2)) + 
         2*s*(8 - 5*d + d^2 - 8*sw^2)*t + 4*(1 - 4*sw^2)*t^2)) + 
      mz^2*(1 - sw^2)*(-(d^2*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*
         (2*s^2*(-1 + d - 2*sw^2 + d*sw^2) - s*(8 - 5*d + d^2 - 8*sw^2)*t + 
          2*(-1 + 4*sw^2)*t^2))))/(Pi^(2*d)*(mz^2 - s)*s^2*sw^4), 0, 0, 
   ((I/3)*2^(-5 - 2*d)*EL^6*(-(d^2*(2*Pi)^d*s^4) + 2^(1 + d)*Pi^d*s^2*
       (2*s^2*(-1 + d - 2*sw^2 + d*sw^2) - s*(8 - 5*d + d^2 - 8*sw^2)*t + 
        2*(-1 + 4*sw^2)*t^2) + mz^4*(-1 + sw^2)^2*(-3*d^2*(2*Pi)^d*s^2 + 
        2^(1 + d)*Pi^d*(s^2*(-2 + d^2 - 4*sw^2 + 2*d*(1 + sw^2)) - 
          s*(8 - 5*d + d^2 - 8*sw^2)*t + 2*(-1 + 4*sw^2)*t^2)) - 
      2*mz^2*s*(1 - sw^2)*(-11*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(d^3 - 4*d^2*sw^2 - 6*(1 + 2*sw^2) + 2*d*(5 + 7*sw^2)) + 
          (-3 + 2*d)*s*(8 - 5*d + d^2 - 8*sw^2)*t - 2*(-3 + 2*d)*
           (-1 + 4*sw^2)*t^2)) + 
      (2^(1 + d)*Pi^d*s^2*(s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2)) + 
          2*s*(8 - 5*d + d^2 - 8*sw^2)*t + 4*(1 - 4*sw^2)*t^2) + 
        3*mz^4*(-1 + sw^2)^2*(-(d^2*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*
           (s^2*(2 + d^2 + 4*sw^2 - 2*d*(1 + sw^2)) + 
            s*(8 - 5*d + d^2 - 8*sw^2)*t + 2*(1 - 4*sw^2)*t^2)) + 
        mz^2*s*(1 - sw^2)*(-45*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
           (2*s^2*(-13 + 21*d + 2*d^3 - 26*sw^2 + 29*d*sw^2 - 8*d^2*sw^2) + 
            (-13 + 8*d)*s*(8 - 5*d + d^2 - 8*sw^2)*t - 2*(-13 + 8*d)*
             (-1 + 4*sw^2)*t^2)))*GaugeXi[W] + 
      (-(d^2*(2*Pi)^d*s^4) - 2^(2 + d)*(-2 + d)*mz^2*Pi^d*s*(1 - sw^2)*
         (s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2)) + 
          2*s*(8 - 5*d + d^2 - 8*sw^2)*t + 4*(1 - 4*sw^2)*t^2) + 
        2^(1 + d)*Pi^d*s^2*(2*s^2*(-1 + d - 2*sw^2 + d*sw^2) - 
          s*(8 - 5*d + d^2 - 8*sw^2)*t + 2*(-1 + 4*sw^2)*t^2) + 
        mz^4*(-1 + sw^2)^2*(d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
           (-2*s^2*(3 + d^2 + 6*sw^2 - 3*d*(1 + sw^2)) - 
            3*s*(8 - 5*d + d^2 - 8*sw^2)*t + 6*(-1 + 4*sw^2)*t^2)))*
       GaugeXi[W]^2 + mz^2*(1 - sw^2)*(-s - mz^2*(-1 + sw^2))*
       (-3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (2*s^2*(1 + d^2 + 2*sw^2 - d*(1 + sw^2)) + 
          s*(8 - 5*d + d^2 - 8*sw^2)*t + 2*(1 - 4*sw^2)*t^2))*GaugeXi[W]^3))/
    ((-1 + d)*mz^4*Pi^(2*d)*s^2*(-mz^2 + s)*sw^4*(-1 + sw^2)^2*
     (-1 + GaugeXi[W])^2), ((-I/3)*2^(-5 - 2*d)*EL^6*
     (2^(1 + d)*Pi^d*(1 - 4*sw^2)*(-s - mz^2*(-1 + sw^2))*
       (s - s*GaugeXi[W])^2*(d*(s + mz^2*(-1 + sw^2))^2 + 
        2*mz^2*(1 - sw^2)*(-(d*s) - (-2 + d)*mz^2*(-1 + sw^2))*GaugeXi[W] + 
        d*mz^4*(-1 + sw^2)^2*GaugeXi[W]^2) + (-s - mz^2*(-1 + sw^2))*
       ((s + mz^2*(-1 + sw^2))^2*(d*s + 2*t) + 2*mz^2*(1 - sw^2)*
         (-(mz^2*(-1 + sw^2)*((-2 + d)*s - 2*t)) - s*(d*s + 2*t))*
         GaugeXi[W] + mz^4*(-1 + sw^2)^2*(d*s + 2*t)*GaugeXi[W]^2)*
       (d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(2*s*(-1 + sw^2) + (-1 + 4*sw^2)*t) - 
        2^(1 + d)*Pi^d*(s*(-4 + d + 4*sw^2) + 2*(-1 + 4*sw^2)*t)*GaugeXi[W] + 
        (d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(2*s*(-1 + sw^2) + (-1 + 4*sw^2)*t))*
         GaugeXi[W]^2) - (1 - d)*s*(-s - mz^2*(-1 + sw^2) - 
        mz^2*(-1 + sw^2)*GaugeXi[W])*(2^(1 + d)*mz^2*Pi^d*s*(-1 + sw^2)*
         (s*(2 - d + 4*sw^2) + (2 - 8*sw^2)*t) + 
        s^2*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(s + 2*s*sw^2 + t - 
            4*sw^2*t)) + mz^4*(-1 + sw^2)^2*(-(d*(2*Pi)^d*s) + 
          2^(1 + d)*Pi^d*(s + 2*s*sw^2 + t - 4*sw^2*t)) - 
        (-(2^(1 + d)*Pi^d*s^2*(s*(-2 + d - 4*sw^2) + 2*(-1 + 4*sw^2)*t)) + 
          mz^4*(-1 + sw^2)^2*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*
             (s + 2*s*sw^2 + t - 4*sw^2*t)) + 3*mz^2*s*(1 - sw^2)*
           (-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(s*(-1 + d - 2*sw^2) + 
              (-1 + 4*sw^2)*t)))*GaugeXi[W] - (-s^2 + mz^4*(-1 + sw^2)^2)*
         (-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(s + 2*s*sw^2 + t - 4*sw^2*t))*
         GaugeXi[W]^2 + mz^2*(1 - sw^2)*(-s - mz^2*(-1 + sw^2))*
         (-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(s + 2*s*sw^2 + t - 4*sw^2*t))*
         GaugeXi[W]^3) - (1 - d)*s*(-s - mz^2*(-1 + sw^2) - 
        mz^2*(-1 + sw^2)*GaugeXi[W])*(2^(1 + d)*mz^2*Pi^d*s*(-1 + sw^2)*
         (s*(2 - d + 4*sw^2) + (2 - 8*sw^2)*t) + 
        s^2*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(s + 2*s*sw^2 + t - 
            4*sw^2*t)) + mz^4*(-1 + sw^2)^2*(-3*d*(2*Pi)^d*s + 
          2^(1 + d)*Pi^d*(s*(1 + d + 2*sw^2) + t - 4*sw^2*t)) - 
        (-(2^(1 + d)*Pi^d*s^2*(s*(-2 + d - 4*sw^2) + 2*(-1 + 4*sw^2)*t)) + 
          mz^4*(-1 + sw^2)^2*(-5*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
             (s + 2*d*s + 2*s*sw^2 + t - 4*sw^2*t)) + mz^2*s*(1 - sw^2)*
           (-7*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-3 + 5*d - 6*sw^2) + 
              3*(-1 + 4*sw^2)*t)))*GaugeXi[W] + 
        (s^2*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(s + 2*s*sw^2 + t - 
              4*sw^2*t)) + mz^4*(-1 + sw^2)^2*(-(d*(2*Pi)^d*s) + 
            2^(1 + d)*Pi^d*(s*(-1 + d - 2*sw^2) + (-1 + 4*sw^2)*t)))*
         GaugeXi[W]^2 + mz^2*(1 - sw^2)*(-s - mz^2*(-1 + sw^2))*
         (-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(s + 2*s*sw^2 + t - 4*sw^2*t))*
         GaugeXi[W]^3) - 2*(1 - d)*s*
       (-(s^3*(-(d*(2*Pi)^d) + 2^(1 + d)*Pi^d*(1 + 2*sw^2))*t) + 
        mz^6*(1 - sw^2)^3*(-(d*(2*Pi)^d) + 2^(1 + d)*Pi^d*(1 + 2*sw^2))*t - 
        mz^4*(-1 + sw^2)^2*(d*(2*Pi)^d*s*t + 2^(1 + d)*Pi^d*
           (s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2)) + 
            s*(19 - 12*d + 2*d^2 - 10*sw^2)*t + 4*(1 - 4*sw^2)*t^2)) + 
        mz^2*s*(1 - sw^2)*(-(d*(2*Pi)^d*s*t) + 2^(1 + d)*Pi^d*
           (s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2)) + 
            s*(19 - 11*d + 2*d^2 - 10*sw^2)*t + 4*(1 - 4*sw^2)*t^2)) + 
        2*(s^3*(-(d*(2*Pi)^d) + 2^(1 + d)*Pi^d*(1 + 2*sw^2))*t - 
          2^(1 + d)*mz^2*Pi^d*s*(1 - sw^2)*(s^2*(4 + d^2 + 8*sw^2 - 
              4*d*(1 + sw^2)) + s*(18 - 11*d + 2*d^2 - 12*sw^2)*t + 
            4*(1 - 4*sw^2)*t^2) + mz^6*(1 - sw^2)^3*(d*(2*Pi)^d*s - 
            2^(1 + d)*Pi^d*(s + 2*s*sw^2 - (-3 + d)*t)) + 
          mz^4*(-1 + sw^2)^2*(-(d*(2*Pi)^d*s*(9*s + 23*t)) + 
            2^(1 + d)*Pi^d*(s^2*(5 + d^2 + 10*sw^2 - 4*d*sw^2) + 
              2*s*(10 + d^2 - 7*sw^2)*t + 4*(1 - 4*sw^2)*t^2)))*GaugeXi[W] + 
        (-(s^3*(-(d*(2*Pi)^d) + 2^(1 + d)*Pi^d*(1 + 2*sw^2))*t) - 
          2^(1 + d)*mz^6*Pi^d*(1 - sw^2)^3*(2*s*(-2 + d - 4*sw^2) + 
            (-10 + 3*d + 4*sw^2)*t) - 2^(1 + d)*mz^4*Pi^d*(-1 + sw^2)^2*
           (s^2*(8 + d^2 + 16*sw^2 - 2*d*(3 + 2*sw^2)) + 
            2*s*(12 - 6*d + d^2 - 12*sw^2)*t + 4*(1 - 4*sw^2)*t^2) + 
          mz^2*s*(1 - sw^2)*(d*(2*Pi)^d*s*t + 2^(1 + d)*Pi^d*
             (s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2)) + s*(15 - 10*d + 
                2*d^2 - 18*sw^2)*t + 4*(1 - 4*sw^2)*t^2)))*GaugeXi[W]^2 + 
        2^(1 + d)*mz^2*Pi^d*(1 - sw^2)*(-s - mz^2*(-1 + sw^2))*
         (s*(-2 + d - 4*sw^2)*t + mz^2*(1 - sw^2)*(s*(-2 + d - 4*sw^2) + 
            2*(-3 + d)*t))*GaugeXi[W]^3 - mz^4*(-1 + sw^2)^2*
         (s*(-(d*(2*Pi)^d) + 2^(1 + d)*Pi^d*(1 + 2*sw^2)) + 
          mz^2*(-1 + sw^2)*(d*(2*Pi)^d + 2^(1 + d)*Pi^d*(1 - d + 2*sw^2)))*t*
         GaugeXi[W]^4)))/((-1 + d)*mz^4*Pi^(2*d)*(mz^2 - s)*s^2*sw^4*
     (-1 + sw^2)^2*(-1 + GaugeXi[W])^2), 
   ((I/3)*2^(-5 - 2*d)*EL^6*(-(d^2*(2*Pi)^d*s^4) + 2^(1 + d)*Pi^d*s^2*
       (2*s^2*(-1 + d - 2*sw^2 + d*sw^2) - s*(8 - 5*d + d^2 - 8*sw^2)*t + 
        2*(-1 + 4*sw^2)*t^2) + mz^4*(-1 + sw^2)^2*(-3*d^2*(2*Pi)^d*s^2 + 
        2^(1 + d)*Pi^d*(2*s^2*(1 + d^2 + 2*sw^2 - d*(1 + sw^2)) + 
          s*(8 - 5*d + d^2 - 8*sw^2)*t + 2*(1 - 4*sw^2)*t^2)) + 
      (2^(1 + d)*Pi^d*s^2*(s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2)) + 
          2*s*(8 - 5*d + d^2 - 8*sw^2)*t + 4*(1 - 4*sw^2)*t^2) - 
        mz^2*s*(1 - sw^2)*(-11*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
           (s^2*(-2 + 5*d^2 - 4*sw^2 + 2*d*(1 + sw^2)) - 
            s*(8 - 5*d + d^2 - 8*sw^2)*t + 2*(-1 + 4*sw^2)*t^2)) + 
        mz^4*(-1 + sw^2)^2*(d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
           (-2*s^2*(3 + d^2 + 6*sw^2 - 3*d*(1 + sw^2)) - 
            3*s*(8 - 5*d + d^2 - 8*sw^2)*t + 6*(-1 + 4*sw^2)*t^2)))*
       GaugeXi[W] + (-(d^2*(2*Pi)^d*s^4) - 2^(1 + d)*mz^2*Pi^d*s*(1 - sw^2)*
         (s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2)) + 
          2*s*(8 - 5*d + d^2 - 8*sw^2)*t + 4*(1 - 4*sw^2)*t^2) + 
        2^(1 + d)*Pi^d*s^2*(2*s^2*(-1 + d - 2*sw^2 + d*sw^2) - 
          s*(8 - 5*d + d^2 - 8*sw^2)*t + 2*(-1 + 4*sw^2)*t^2) + 
        3*mz^4*(-1 + sw^2)^2*(-(d^2*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*
           (s^2*(2 + d^2 + 4*sw^2 - 2*d*(1 + sw^2)) + 
            s*(8 - 5*d + d^2 - 8*sw^2)*t + 2*(1 - 4*sw^2)*t^2)))*
       GaugeXi[W]^2 + mz^2*(1 - sw^2)*(-s - mz^2*(-1 + sw^2))*
       (-3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(-2 + d^2 - 4*sw^2 + 2*d*(1 + sw^2)) - 
          s*(8 - 5*d + d^2 - 8*sw^2)*t + 2*(-1 + 4*sw^2)*t^2))*GaugeXi[W]^3))/
    ((-1 + d)*mz^4*Pi^(2*d)*s^2*(-mz^2 + s)*sw^4*(-1 + sw^2)^2*
     (-1 + GaugeXi[W])^2), ((-I/3)*2^(-5 - 2*d)*EL^6*
     (2^(1 + d)*Pi^d*(1 - 4*sw^2)*(-s - mz^2*(-1 + sw^2))*
       (s - s*GaugeXi[W])^2*(d*(s + mz^2*(-1 + sw^2))^2 + 
        2*mz^2*(1 - sw^2)*(-(d*s) - (-2 + d)*mz^2*(-1 + sw^2))*GaugeXi[W] + 
        d*mz^4*(-1 + sw^2)^2*GaugeXi[W]^2) + (-s - mz^2*(-1 + sw^2))*
       ((s + mz^2*(-1 + sw^2))^2*(d*s + 2*t) + 2*mz^2*(1 - sw^2)*
         (-(mz^2*(-1 + sw^2)*((-2 + d)*s - 2*t)) - s*(d*s + 2*t))*
         GaugeXi[W] + mz^4*(-1 + sw^2)^2*(d*s + 2*t)*GaugeXi[W]^2)*
       (d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(2*s*(-1 + sw^2) + (-1 + 4*sw^2)*t) - 
        2^(1 + d)*Pi^d*(s*(-4 + d + 4*sw^2) + 2*(-1 + 4*sw^2)*t)*GaugeXi[W] + 
        (d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(2*s*(-1 + sw^2) + (-1 + 4*sw^2)*t))*
         GaugeXi[W]^2) - (1 - d)*s*(-s - mz^2*(-1 + sw^2) - 
        mz^2*(-1 + sw^2)*GaugeXi[W])*(2^(1 + d)*mz^2*Pi^d*s*(-1 + sw^2)*
         (s*(2 - d + 4*sw^2) + (2 - 8*sw^2)*t) + 
        s^2*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(s + 2*s*sw^2 + t - 
            4*sw^2*t)) + mz^4*(-1 + sw^2)^2*(-(d*(2*Pi)^d*s) + 
          2^(1 + d)*Pi^d*(s + 2*s*sw^2 + t - 4*sw^2*t)) - 
        (-(2^(1 + d)*Pi^d*s^2*(s*(-2 + d - 4*sw^2) + 2*(-1 + 4*sw^2)*t)) + 
          mz^4*(-1 + sw^2)^2*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*
             (s + 2*s*sw^2 + t - 4*sw^2*t)) + mz^2*s*(1 - sw^2)*
           (-19*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-3 + 11*d - 6*sw^2) + 
              3*(-1 + 4*sw^2)*t)))*GaugeXi[W] - (-s^2 + mz^4*(-1 + sw^2)^2)*
         (-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(s + 2*s*sw^2 + t - 4*sw^2*t))*
         GaugeXi[W]^2 + mz^2*(1 - sw^2)*(-s - mz^2*(-1 + sw^2))*
         (-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(s + 2*s*sw^2 + t - 4*sw^2*t))*
         GaugeXi[W]^3) - (1 - d)*s*(-s - mz^2*(-1 + sw^2) - 
        mz^2*(-1 + sw^2)*GaugeXi[W])*(2^(1 + d)*mz^2*Pi^d*s*(-1 + sw^2)*
         (s*(2 - d + 4*sw^2) + (2 - 8*sw^2)*t) + 
        s^2*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(s + 2*s*sw^2 + t - 
            4*sw^2*t)) + mz^4*(-1 + sw^2)^2*(-(d*(2*Pi)^d*s) + 
          2^(1 + d)*Pi^d*(s + 2*s*sw^2 + t - 4*sw^2*t)) + 
        (2^(1 + d)*Pi^d*s^2*(s*(-2 + d - 4*sw^2) + 2*(-1 + 4*sw^2)*t) + 
          mz^2*s*(1 - sw^2)*(-7*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
             (s*(3 + 2*d + 6*sw^2) + 3*(1 - 4*sw^2)*t)) + 
          mz^4*(-1 + sw^2)^2*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*
             (s*(-1 + d - 2*sw^2) + (-1 + 4*sw^2)*t)))*GaugeXi[W] - 
        (s^2*(d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(s + 2*s*sw^2 + t - 4*sw^2*t)) + 
          mz^4*(-1 + sw^2)^2*(-5*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
             (s + 2*d*s + 2*s*sw^2 + t - 4*sw^2*t)))*GaugeXi[W]^2 + 
        mz^2*(1 - sw^2)*(-s - mz^2*(-1 + sw^2))*(-3*d*(2*Pi)^d*s + 
          2^(1 + d)*Pi^d*(s*(1 + d + 2*sw^2) + t - 4*sw^2*t))*GaugeXi[W]^3) + 
      2*(1 - d)*s*(s^3*(-(d*(2*Pi)^d) + 2^(1 + d)*Pi^d*(1 + 2*sw^2))*t - 
        mz^6*(1 - sw^2)^3*(d*(2*Pi)^d + 2^(1 + d)*Pi^d*(1 - d + 2*sw^2))*t - 
        mz^2*s*(1 - sw^2)*(7*d*(2*Pi)^d*s*t + 2^(1 + d)*Pi^d*
           (s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2)) + 
            s*(19 - 15*d + 2*d^2 - 10*sw^2)*t + 4*(1 - 4*sw^2)*t^2)) + 
        mz^4*(-1 + sw^2)^2*(-11*d*(2*Pi)^d*s*t + 2^(1 + d)*Pi^d*
           (s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2)) + 
            s*(19 - 6*d + 2*d^2 - 10*sw^2)*t + 4*(1 - 4*sw^2)*t^2)) - 
        2*(s^3*(-(d*(2*Pi)^d) + 2^(1 + d)*Pi^d*(1 + 2*sw^2))*t - 
          2^(1 + d)*mz^2*Pi^d*s*(1 - sw^2)*(s^2*(4 + d^2 + 8*sw^2 - 
              4*d*(1 + sw^2)) + s*(18 - 11*d + 2*d^2 - 12*sw^2)*t + 
            4*(1 - 4*sw^2)*t^2) + mz^6*(1 - sw^2)^3*(d*(2*Pi)^d*s - 
            2^(1 + d)*Pi^d*(s + 2*s*sw^2 - (-3 + d)*t)) + 
          mz^4*(-1 + sw^2)^2*(-(d*(2*Pi)^d*s*(9*s + 23*t)) + 
            2^(1 + d)*Pi^d*(s^2*(5 + d^2 + 10*sw^2 - 4*d*sw^2) + 
              2*s*(10 + d^2 - 7*sw^2)*t + 4*(1 - 4*sw^2)*t^2)))*GaugeXi[W] + 
        (s^3*(-(d*(2*Pi)^d) + 2^(1 + d)*Pi^d*(1 + 2*sw^2))*t + 
          2^(1 + d)*mz^6*Pi^d*(1 - sw^2)^3*(2*s*(-2 + d - 4*sw^2) + 
            (-10 + 3*d + 4*sw^2)*t) + 2^(1 + d)*mz^4*Pi^d*(-1 + sw^2)^2*
           (s^2*(8 + d^2 + 16*sw^2 - 2*d*(3 + 2*sw^2)) + 
            2*s*(12 - 6*d + d^2 - 12*sw^2)*t + 4*(1 - 4*sw^2)*t^2) - 
          mz^2*s*(1 - sw^2)*(7*d*(2*Pi)^d*s*t + 2^(1 + d)*Pi^d*
             (s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2)) + s*(15 - 13*d + 
                2*d^2 - 18*sw^2)*t + 4*(1 - 4*sw^2)*t^2)))*GaugeXi[W]^2 - 
        2^(1 + d)*mz^2*Pi^d*(1 - sw^2)*(-s - mz^2*(-1 + sw^2))*
         (s*(-2 + d - 4*sw^2)*t + mz^2*(1 - sw^2)*(s*(-2 + d - 4*sw^2) + 
            2*(-3 + d)*t))*GaugeXi[W]^3 + mz^4*(-1 + sw^2)^2*
         (s + mz^2*(-1 + sw^2))*(-(d*(2*Pi)^d) + 2^(1 + d)*Pi^d*(1 + 2*sw^2))*
         t*GaugeXi[W]^4)))/((-1 + d)*mz^4*Pi^(2*d)*(mz^2 - s)*s^2*sw^4*
     (-1 + sw^2)^2*(-1 + GaugeXi[W])^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, ((I/3)*2^(-8 - d)*EL^6*(-3 + 4*swC^2)*
     (-((-2 + d)*s^2*(-2 + 4*swC^2 + d*(1 - 2*sw^2 - 2*swC^2) + 
         sw^2*(4 + 8*swC^2))) + 2*s*(-8 + 16*swC^2 - 16*sw^2*(-1 + swC^2) - 
        5*d*(-1 + 2*sw^2 + 2*swC^2) + d^2*(-1 + 2*sw^2 + 2*swC^2))*t + 
      4*(-1 + 2*swC^2 + sw^2*(2 - 8*swC^2))*t^2)*
     (s^2 + 2*(-3 + 2*d)*mz^2*s*(-1 + sw^2) - mz^4*(-1 + sw^2)^2 + 
      mz^2*(-1 + sw^2)*(s + mz^2*(-1 + sw^2))*GaugeXi[W]))/
    (cwC^2*(-1 + d)*mz^4*Pi^d*(mz^2 - s)^2*s*sw^4*(-1 + sw^2)^2*swC^2), 
   ((-I/3)*2^(-8 - d)*EL^6*s*(-3 + 4*swC^2)*
     (-((-2 + d)*s^2*(-2 + 4*swC^2 + d*(1 - 2*sw^2 - 2*swC^2) + 
         sw^2*(4 + 8*swC^2))) + 2*s*(-8 + 16*swC^2 - 16*sw^2*(-1 + swC^2) - 
        5*d*(-1 + 2*sw^2 + 2*swC^2) + d^2*(-1 + 2*sw^2 + 2*swC^2))*t + 
      4*(-1 + 2*swC^2 + sw^2*(2 - 8*swC^2))*t^2)*
     (s + 4*mz^2*(-1 + sw^2)*GaugeXi[W]))/(cwC^2*(-1 + d)*mz^4*Pi^d*
     (mz^2 - s)^2*sw^4*(-1 + sw^2)^2*swC^2), 
   ((I/3)*2^(-8 - d)*EL^6*(-3 + 4*swC^2)*
     (-((-2 + d)*s^2*(-2 + 4*swC^2 + d*(1 - 2*sw^2 - 2*swC^2) + 
         sw^2*(4 + 8*swC^2))) + 2*s*(-8 + 16*swC^2 - 16*sw^2*(-1 + swC^2) - 
        5*d*(-1 + 2*sw^2 + 2*swC^2) + d^2*(-1 + 2*sw^2 + 2*swC^2))*t + 
      4*(-1 + 2*swC^2 + sw^2*(2 - 8*swC^2))*t^2)*
     (s^2 + 4*(-1 + 2*d)*mz^2*s*(-1 + sw^2) - (-9 + 8*d)*mz^4*(-1 + sw^2)^2 - 
      mz^2*(-1 + sw^2)*(s + mz^2*(-1 + sw^2))*GaugeXi[W]))/
    (cwC^2*(-1 + d)*mz^4*Pi^d*(mz^2 - s)^2*s*sw^4*(-1 + sw^2)^2*swC^2), 
   ((-I/3)*2^(-8 - d)*EL^6*(s + 2*mz^2*(-1 + sw^2))*
     (s^2 - 4*(-3 + 2*d)*mz^2*s*(-1 + sw^2) + 4*(-1 + d)*mz^4*(-1 + sw^2)^2)*
     (-3 + 4*swC^2)*(-((-2 + d)*s^2*(-2 + 4*swC^2 + 
         d*(1 - 2*sw^2 - 2*swC^2) + sw^2*(4 + 8*swC^2))) + 
      2*s*(-8 + 16*swC^2 - 16*sw^2*(-1 + swC^2) - 
        5*d*(-1 + 2*sw^2 + 2*swC^2) + d^2*(-1 + 2*sw^2 + 2*swC^2))*t + 
      4*(-1 + 2*swC^2 + sw^2*(2 - 8*swC^2))*t^2))/(cwC^2*(-1 + d)*mz^4*Pi^d*
     (mz^2 - s)^2*s*sw^4*(-1 + sw^2)^2*swC^2), 
   ((I/3)*2^(-5 - d)*EL^6*mz^2*(-1 + sw^2)*(-2*s + mz^2*(-1 + sw^2))*
     (-3 + 4*swC^2)*(-((-2 + d)*s^2*(2 - 4*swC^2 - 4*sw^2*(1 + 2*swC^2) + 
         d*(-1 + 2*sw^2 + 2*swC^2))) - 2*s*(-8 + 16*swC^2 - 
        16*sw^2*(-1 + swC^2) - 5*d*(-1 + 2*sw^2 + 2*swC^2) + 
        d^2*(-1 + 2*sw^2 + 2*swC^2))*t + 
      4*(1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t^2))/(cwC^2*Pi^d*(mz^2 - s)^2*s*
     sw^4*swC^2), 0, 0, ((-I/3)*2^(-8 - d)*EL^6*(-3 + 4*swC^2)*
     (-((-2 + d)*s^2*(-2 + 4*swC^2 + d*(1 - 2*sw^2 - 2*swC^2) + 
         sw^2*(4 + 8*swC^2))) + 2*s*(-8 + 16*swC^2 - 16*sw^2*(-1 + swC^2) - 
        5*d*(-1 + 2*sw^2 + 2*swC^2) + d^2*(-1 + 2*sw^2 + 2*swC^2))*t + 
      4*(-1 + 2*swC^2 + sw^2*(2 - 8*swC^2))*t^2)*
     (s^2 - 2*(-3 + 2*d)*mz^2*s*(-1 + sw^2) + mz^4*(-1 + sw^2)^2 - 
      mz^2*(-1 + sw^2)*(s + mz^2*(-1 + sw^2))*GaugeXi[W]))/
    (cwC^2*(-1 + d)*mz^4*Pi^d*(mz^2 - s)^2*s*sw^4*(-1 + sw^2)^2*swC^2), 
   ((-I/3)*2^(-8 - d)*EL^6*(s + mz^2*(-1 + sw^2))*(-3 + 4*swC^2)*
     (-((-2 + d)*s^2*(2 - 4*swC^2 - 4*sw^2*(1 + 2*swC^2) + 
         d*(-1 + 2*sw^2 + 2*swC^2))) - 2*s*(-8 + 16*swC^2 - 
        16*sw^2*(-1 + swC^2) - 5*d*(-1 + 2*sw^2 + 2*swC^2) + 
        d^2*(-1 + 2*sw^2 + 2*swC^2))*t + 
      4*(1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t^2)*
     (s^2 - 2*(-3 + 2*d)*mz^2*s*(-1 + sw^2) + mz^4*(-1 + sw^2)^2 - 
      2*mz^2*(-1 + sw^2)*(-s + mz^2*(-1 + sw^2))*GaugeXi[W] + 
      mz^4*(-1 + sw^2)^2*GaugeXi[W]^2))/(cwC^2*(-1 + d)*mz^4*Pi^d*
     (mz^2 - s)^2*s*sw^4*(-1 + sw^2)^2*swC^2), 
   ((I/3)*2^(-8 - d)*EL^6*(s + mz^2*(-1 + sw^2))*(-3 + 4*swC^2)*
     (-((-2 + d)*s^2*(2 - 4*swC^2 - 4*sw^2*(1 + 2*swC^2) + 
         d*(-1 + 2*sw^2 + 2*swC^2))) - 2*s*(-8 + 16*swC^2 - 
        16*sw^2*(-1 + swC^2) - 5*d*(-1 + 2*sw^2 + 2*swC^2) + 
        d^2*(-1 + 2*sw^2 + 2*swC^2))*t + 
      4*(1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t^2)*(s - mz^2*(-1 + sw^2) + 
      mz^2*(-1 + sw^2)*GaugeXi[W]))/(cwC^2*(-1 + d)*mz^4*Pi^d*(mz^2 - s)^2*s*
     sw^4*(-1 + sw^2)^2*swC^2), ((-I/3)*2^(-8 - d)*EL^6*
     (s + mz^2*(-1 + sw^2))*(-3 + 4*swC^2)*
     (-((-2 + d)*s^2*(2 - 4*swC^2 - 4*sw^2*(1 + 2*swC^2) + 
         d*(-1 + 2*sw^2 + 2*swC^2))) - 2*s*(-8 + 16*swC^2 - 
        16*sw^2*(-1 + swC^2) - 5*d*(-1 + 2*sw^2 + 2*swC^2) + 
        d^2*(-1 + 2*sw^2 + 2*swC^2))*t + 
      4*(1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t^2)*
     (s^2 - 2*(-3 + 2*d)*mz^2*s*(-1 + sw^2) + mz^4*(-1 + sw^2)^2 - 
      2*mz^2*(-1 + sw^2)*(-s + mz^2*(-1 + sw^2))*GaugeXi[W] + 
      mz^4*(-1 + sw^2)^2*GaugeXi[W]^2))/(cwC^2*(-1 + d)*mz^4*Pi^d*
     (mz^2 - s)^2*s*sw^4*(-1 + sw^2)^2*swC^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((I/9)*2^(3 - d)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2))/(Pi^d*s^3), 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/9)*EL^6*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
       (2*s^2*(3 + 10*swC^2 - 16*swC^4 + d*(-3 - 5*swC^2 + 8*swC^4)) + 
        s*(-15*d + 3*d^2 + 8*(3 - 5*swC^2 + 8*swC^4))*t + 
        2*(3 - 20*swC^2 + 32*swC^4)*t^2)))/(2^(2*(1 + d))*cwC^2*Pi^(2*d)*
     (mz^2 - s)*s^2*swC^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((I/9)*EL^6*(-1 + 2*sw^2)*(-1 + 4*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
    ((2*Pi)^d*(mz^2 - s)*s^2*sw^2*(-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/9)*4^(-2 - d)*EL^6*(1 - 2*sw^2)*(-3*d^2*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(s^2*(-6 + 4*swC^2 + 16*swC^4 + 3*d^2*(sw^2 + swC^2) + 
          sw^2*(12 + 40*swC^2 - 64*swC^4) + 2*d*(3 - 4*swC^2 - 4*swC^4 + 
            2*sw^2*(-3 - 5*swC^2 + 8*swC^4))) + 
        s*(-15*d*(-1 + 2*sw^2 + 2*swC^2) + d^2*(-3 + 6*sw^2 + 6*swC^2) + 
          8*(-3 + 8*swC^2 - 4*swC^4 + 2*sw^2*(3 - 5*swC^2 + 8*swC^4)))*t + 
        2*(-3 + 8*swC^2)*(1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t^2)))/
    (cwC^2*Pi^(2*d)*(mz^2 - s)^2*sw^2*(s - s*sw^2)*swC^2), 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((I/9)*2^(-1 - d)*EL^6*(-1 + 2*sw^2)*(-3 + 8*sw^2)*
     ((-2 + d)*s^2 + 4*s*t + 4*t^2))/(Pi^d*(mz^2 - s)*s^2*sw^2*(-1 + sw^2)), 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/9)*2^(-5 - d)*EL^6*(-1 + 2*sw^2)*
     (s^2*(3*d^2*(-3 + 4*sw^2 + 4*swC^2) + 4*d*(-3*(-3 + swC^2 + 4*swC^4) + 
          4*sw^2*(-3 - 5*swC^2 + 8*swC^4)) - 4*(9 + 6*swC^2 - 24*swC^4 + 
          4*sw^2*(-3 - 10*swC^2 + 16*swC^4))) + 
      2*s*(-15*d*(-3 + 4*sw^2 + 4*swC^2) + 3*d^2*(-3 + 4*sw^2 + 4*swC^2) - 
        24*(3 - 7*swC^2 + 4*swC^4) + 32*sw^2*(3 - 5*swC^2 + 8*swC^4))*t + 
      4*(-1 + 4*swC^2)*(9 - 12*swC^2 + 4*sw^2*(-3 + 8*swC^2))*t^2))/
    (cwC^2*Pi^d*(mz^2 - s)^2*s*sw^2*(-1 + sw^2)*swC^2), 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((I/9)*2^(-5 - 2*d)*EL^6*(3*d^2*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(2*s^2*(3 + 10*sw^2 - 16*sw^4 + 
          d*(-3 - 5*sw^2 + 8*sw^4)) + s*(-15*d + 3*d^2 + 
          8*(3 - 5*sw^2 + 8*sw^4))*t + 2*(3 - 20*sw^2 + 32*sw^4)*t^2)))/
    (Pi^(2*d)*(mz^2 - s)^2*s*sw^4*(-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/9)*2^(-8 - d)*EL^6*
     (s^2*(3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
        4*d*(-9 + 30*swC^2 - 24*swC^4 + sw^2*(30 - 22*swC^2 - 40*swC^4) + 
          8*sw^4*(-3 - 5*swC^2 + 8*swC^4)) - 4*(-9 + 30*swC^2 - 24*swC^4 + 
          sw^2*(30 + 4*swC^2 - 80*swC^4) + 8*sw^4*(-3 - 10*swC^2 + 
            16*swC^4))) + 2*s*(-15*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2)) + 3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
          sw^2*(-30 + 74*swC^2 - 40*swC^4) + 8*sw^4*(3 - 5*swC^2 + 8*swC^4)))*
       t + 4*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 
        2*sw^2*(15 - 76*swC^2 + 80*swC^4))*t^2))/(cwC^2*Pi^d*(mz^2 - s)^3*
     sw^4*(-1 + sw^2)^2*swC^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 
   ((I/9)*2^(-5 - 2*d)*EL^6*(3*d^2*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(2*s^2*(3 + 10*sw^2 - 16*sw^4 + 
          d*(-3 - 5*sw^2 + 8*sw^4)) + s*(-15*d + 3*d^2 + 
          8*(3 - 5*sw^2 + 8*sw^4))*t + 2*(3 - 20*sw^2 + 32*sw^4)*t^2)))/
    (Pi^(2*d)*(mz^2 - s)^2*s*sw^4*(-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/9)*2^(-8 - d)*EL^6*
     (s^2*(3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
        4*d*(-9 + 30*swC^2 - 24*swC^4 + sw^2*(30 - 22*swC^2 - 40*swC^4) + 
          8*sw^4*(-3 - 5*swC^2 + 8*swC^4)) - 4*(-9 + 30*swC^2 - 24*swC^4 + 
          sw^2*(30 + 4*swC^2 - 80*swC^4) + 8*sw^4*(-3 - 10*swC^2 + 
            16*swC^4))) + 2*s*(-15*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2)) + 3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
          sw^2*(-30 + 74*swC^2 - 40*swC^4) + 8*sw^4*(3 - 5*swC^2 + 8*swC^4)))*
       t + 4*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 
        2*sw^2*(15 - 76*swC^2 + 80*swC^4))*t^2))/(cwC^2*Pi^d*(mz^2 - s)^3*
     sw^4*(-1 + sw^2)^2*swC^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, ((I/9)*4^(-2 - d)*EL^6*(1 - 2*sw^2)^2*(3*d^2*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(2*s^2*(3 + 10*sw^2 - 16*sw^4 + 
          d*(-3 - 5*sw^2 + 8*sw^4)) + s*(-15*d + 3*d^2 + 
          8*(3 - 5*sw^2 + 8*sw^4))*t + 2*(3 - 20*sw^2 + 32*sw^4)*t^2)))/
    (Pi^(2*d)*(mz^2 - s)^2*s*sw^4*(-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/9)*2^(-7 - d)*EL^6*(1 - 2*sw^2)^2*
     (s^2*(3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
        4*d*(-9 + 30*swC^2 - 24*swC^4 + sw^2*(30 - 22*swC^2 - 40*swC^4) + 
          8*sw^4*(-3 - 5*swC^2 + 8*swC^4)) - 4*(-9 + 30*swC^2 - 24*swC^4 + 
          sw^2*(30 + 4*swC^2 - 80*swC^4) + 8*sw^4*(-3 - 10*swC^2 + 
            16*swC^4))) + 2*s*(-15*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2)) + 3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
          sw^2*(-30 + 74*swC^2 - 40*swC^4) + 8*sw^4*(3 - 5*swC^2 + 8*swC^4)))*
       t + 4*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 
        2*sw^2*(15 - 76*swC^2 + 80*swC^4))*t^2))/(cwC^2*Pi^d*(mz^2 - s)^3*
     sw^4*(-1 + sw^2)^2*swC^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((I/9)*2^(3 - d)*(-1 + d)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2)*GaugeXi[W])/
    (d*Pi^d*s^3), 0, ((I/9)*2^(3 - d)*(-1 + d)^2*EL^6*
     ((-2 + d)*s^2 + 4*s*t + 4*t^2))/(d*Pi^d*s^3), 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((I/9)*2^(-2 - d)*(-1 + d)*EL^6*
     (s^2*(12 + 3*d^2 + 40*swC^2 - 64*swC^4 + 4*d*(-3 - 5*swC^2 + 8*swC^4)) + 
      2*s*(-15*d + 3*d^2 + 8*(3 - 5*swC^2 + 8*swC^4))*t + 
      4*(3 - 20*swC^2 + 32*swC^4)*t^2)*GaugeXi[W])/
    (cwC^2*d*Pi^d*s^2*(-mz^2 + s)*swC^2), 0, 
   ((I/9)*2^(-2 - d)*(-1 + d)^2*EL^6*
     (s^2*(12 + 3*d^2 + 40*swC^2 - 64*swC^4 + 4*d*(-3 - 5*swC^2 + 8*swC^4)) + 
      2*s*(-15*d + 3*d^2 + 8*(3 - 5*swC^2 + 8*swC^4))*t + 
      4*(3 - 20*swC^2 + 32*swC^4)*t^2))/(cwC^2*d*Pi^d*s^2*(-mz^2 + s)*swC^2), 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, ((-I/9)*2^(1 - d)*(-1 + d)*EL^6*(-1 + 4*sw^2)*
     ((-2 + d)*s^2 + 4*s*t + 4*t^2)*GaugeXi[W])/(d*Pi^d*s^2*(-mz^2 + s)*
     sw^2), 0, ((-I/9)*2^(1 - 4*d)*EL^6*(-(d*(5 + d^2)*(2*Pi)^(3*d)*s^2) + 
      2^(1 + 3*d)*Pi^(3*d)*(s^2*(1 - 4*sw^2 + 10*d*sw^2 + 2*d^3*sw^2 + 
          d^2*(2 - 8*sw^2)) + 2*(-1 + d)^2*s*(-1 + 4*sw^2)*t + 
        2*(-1 + d)^2*(-1 + 4*sw^2)*t^2)))/(d*Pi^(4*d)*s^2*(-mz^2 + s)*sw^2), 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/9)*2^(-3 - d)*(-1 + d)*EL^6*
     (s^2*(d^2*(-3 + 6*sw^2 + 6*swC^2) + 4*(-3 + 2*swC^2 + 8*swC^4 + 
          sw^2*(6 + 20*swC^2 - 32*swC^4)) + 4*d*(3 - 4*swC^2 - 4*swC^4 + 
          2*sw^2*(-3 - 5*swC^2 + 8*swC^4))) + 
      2*s*(-15*d*(-1 + 2*sw^2 + 2*swC^2) + d^2*(-3 + 6*sw^2 + 6*swC^2) + 
        8*(-3 + 8*swC^2 - 4*swC^4 + 2*sw^2*(3 - 5*swC^2 + 8*swC^4)))*t + 
      4*(-3 + 8*swC^2)*(1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t^2)*GaugeXi[W])/
    (cwC^2*d*Pi^d*(mz^2 - s)^2*s*sw^2*swC^2), 0, 
   ((-I/9)*2^(-3 - d)*(-1 + d)^2*EL^6*
     (s^2*(d^2*(-3 + 6*sw^2 + 6*swC^2) + 4*(-3 + 2*swC^2 + 8*swC^4 + 
          sw^2*(6 + 20*swC^2 - 32*swC^4)) + 4*d*(3 - 4*swC^2 - 4*swC^4 + 
          2*sw^2*(-3 - 5*swC^2 + 8*swC^4))) + 
      2*s*(-15*d*(-1 + 2*sw^2 + 2*swC^2) + d^2*(-3 + 6*sw^2 + 6*swC^2) + 
        8*(-3 + 8*swC^2 - 4*swC^4 + 2*sw^2*(3 - 5*swC^2 + 8*swC^4)))*t + 
      4*(-3 + 8*swC^2)*(1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t^2))/
    (cwC^2*d*Pi^d*(mz^2 - s)^2*s*sw^2*swC^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/9)*(-1 + d)*EL^6*(-3 + 8*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
     GaugeXi[W])/(d*(2*Pi)^d*s^2*(-mz^2 + s)*sw^2), 0, 
   ((-I/9)*EL^6*(-3*d*(5 + d^2)*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
       (s^2*(3 - 8*sw^2 + 20*d*sw^2 + 4*d^3*sw^2 + d^2*(6 - 16*sw^2)) + 
        2*(-1 + d)^2*s*(-3 + 8*sw^2)*t + 2*(-1 + d)^2*(-3 + 8*sw^2)*t^2)))/
    (d*(2*Pi)^(4*d)*s^2*(-mz^2 + s)*sw^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/9)*4^(-2 - d)*EL^6*(-9*(-5 + d)*d^2*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(2*s^2*(9 + 6*swC^2 - 24*swC^4 + 3*d^3*(sw^2 + swC^2) + 
          4*sw^2*(-3 - 10*swC^2 + 16*swC^4) - 3*d*(6 + swC^2 - 12*swC^4 + 
            4*sw^2*(-2 - 5*swC^2 + 8*swC^4)) + d^2*(-6*(swC^2 + 2*swC^4) + 
            sw^2*(-15 - 20*swC^2 + 32*swC^4))) + (-1 + d)*s*
         (-15*d*(-3 + 4*sw^2 + 4*swC^2) + 3*d^2*(-3 + 4*sw^2 + 4*swC^2) - 
          24*(3 - 7*swC^2 + 4*swC^4) + 32*sw^2*(3 - 5*swC^2 + 8*swC^4))*t + 
        2*(-1 + d)*(-1 + 4*swC^2)*(9 - 12*swC^2 + 4*sw^2*(-3 + 8*swC^2))*
         t^2))*GaugeXi[W])/(cwC^2*d*Pi^(2*d)*(mz^2 - s)^2*s*sw^2*swC^2), 0, 
   ((-I/9)*4^(-2 - d)*EL^6*(-9*d^2*(13 + d^2)*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(s^2*(6*d^4*(sw^2 + swC^2) + 
          2*(-9 - 6*swC^2 + 24*swC^4 + sw^2*(12 + 40*swC^2 - 64*swC^4)) + 
          d^3*(-3*(-9 + 6*swC^2 + 8*swC^4) + 4*sw^2*(-9 - 10*swC^2 + 
              16*swC^4)) + d^2*(sw^2*(78 + 160*swC^2 - 256*swC^4) + 
            6*(swC^2 + 16*swC^4)) + 2*d*(27 + 9*swC^2 - 60*swC^4 + 
            4*sw^2*(-9 - 25*swC^2 + 40*swC^4))) + (-1 + d)^2*s*
         (-15*d*(-3 + 4*sw^2 + 4*swC^2) + 3*d^2*(-3 + 4*sw^2 + 4*swC^2) - 
          24*(3 - 7*swC^2 + 4*swC^4) + 32*sw^2*(3 - 5*swC^2 + 8*swC^4))*t + 
        2*(-1 + d)^2*(-1 + 4*swC^2)*(9 - 12*swC^2 + 4*sw^2*(-3 + 8*swC^2))*
         t^2)))/(cwC^2*d*Pi^(2*d)*(mz^2 - s)^2*s*sw^2*swC^2), 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((I/9)*2^(-2 - d)*(-1 + d)*EL^6*
     (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
      2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
      4*(3 - 20*sw^2 + 32*sw^4)*t^2)*GaugeXi[W])/(d*Pi^d*(mz^2 - s)^2*s*
     sw^4), 0, ((I/9)*2^(-2 - d)*(-1 + d)^2*EL^6*
     (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
      2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
      4*(3 - 20*sw^2 + 32*sw^4)*t^2))/(d*Pi^d*(mz^2 - s)^2*s*sw^4), 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/9)*2^(-5 - d)*(-1 + d)*EL^6*
     (s^2*(3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
        4*d*(-9 + 30*swC^2 - 24*swC^4 + sw^2*(30 - 22*swC^2 - 40*swC^4) + 
          8*sw^4*(-3 - 5*swC^2 + 8*swC^4)) - 4*(-9 + 30*swC^2 - 24*swC^4 + 
          sw^2*(30 + 4*swC^2 - 80*swC^4) + 8*sw^4*(-3 - 10*swC^2 + 
            16*swC^4))) + 2*s*(-15*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2)) + 3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
          sw^2*(-30 + 74*swC^2 - 40*swC^4) + 8*sw^4*(3 - 5*swC^2 + 8*swC^4)))*
       t + 4*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 
        2*sw^2*(15 - 76*swC^2 + 80*swC^4))*t^2)*GaugeXi[W])/
    (cwC^2*d*Pi^d*(mz^2 - s)^3*sw^4*swC^2), 0, 
   ((-I/9)*2^(-5 - d)*(-1 + d)^2*EL^6*
     (s^2*(3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
        4*d*(-9 + 30*swC^2 - 24*swC^4 + sw^2*(30 - 22*swC^2 - 40*swC^4) + 
          8*sw^4*(-3 - 5*swC^2 + 8*swC^4)) - 4*(-9 + 30*swC^2 - 24*swC^4 + 
          sw^2*(30 + 4*swC^2 - 80*swC^4) + 8*sw^4*(-3 - 10*swC^2 + 
            16*swC^4))) + 2*s*(-15*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2)) + 3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
          sw^2*(-30 + 74*swC^2 - 40*swC^4) + 8*sw^4*(3 - 5*swC^2 + 8*swC^4)))*
       t + 4*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 
        2*sw^2*(15 - 76*swC^2 + 80*swC^4))*t^2))/(cwC^2*d*Pi^d*(mz^2 - s)^3*
     sw^4*swC^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
  {((I/9)*2^(3 - d)*(-2 + d)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
    ((-1 + d)*Pi^d*s^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, 
  {((I/9)*4^(-1 - d)*EL^6*(3*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
       (s^2*(-12 - 40*swC^2 + 64*swC^4 + d*(18 + 40*swC^2 - 64*swC^4) + 
          d^2*(-9 - 10*swC^2 + 16*swC^4)) + s*(-21*d^2 + 3*d^3 - 
          16*(3 - 5*swC^2 + 8*swC^4) + d*(54 - 40*swC^2 + 64*swC^4))*t + 
        2*(-2 + d)*(3 - 20*swC^2 + 32*swC^4)*t^2)))/
    (cwC^2*(-1 + d)*Pi^(2*d)*s*(-mz^2 + s)*swC^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {((I/9)*2^(3 - d)*(-2 + d)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
    ((-1 + d)*Pi^d*s^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, 
  {((I/9)*4^(-1 - d)*EL^6*(3*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
       (s^2*(-12 - 40*swC^2 + 64*swC^4 + d*(18 + 40*swC^2 - 64*swC^4) + 
          d^2*(-9 - 10*swC^2 + 16*swC^4)) + s*(-21*d^2 + 3*d^3 - 
          16*(3 - 5*swC^2 + 8*swC^4) + d*(54 - 40*swC^2 + 64*swC^4))*t + 
        2*(-2 + d)*(3 - 20*swC^2 + 32*swC^4)*t^2)))/
    (cwC^2*(-1 + d)*Pi^(2*d)*s*(-mz^2 + s)*swC^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/9)*2^(4 - d)*(-2 + d)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
    ((-1 + d)*Pi^d*s^3), ((I/9)*2^(3 - d)*EL^6*(4*ml^2 + (-2 + d)*s)*
     ((-2 + d)*s^2 + 4*s*t + 4*t^2))/((-1 + d)*Pi^d*s^3), 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/9)*2^(-1 - d)*(-2 + d)*EL^6*
     (s^2*(12 + 3*d^2 + 40*swC^2 - 64*swC^4 + 4*d*(-3 - 5*swC^2 + 8*swC^4)) + 
      2*s*(-15*d + 3*d^2 + 8*(3 - 5*swC^2 + 8*swC^4))*t + 
      4*(3 - 20*swC^2 + 32*swC^4)*t^2))/(cwC^2*(-1 + d)*Pi^d*s^2*(-mz^2 + s)*
     swC^2), ((I/9)*4^(-1 - 2*d)*EL^6*(3*d^3*(2*Pi)^(3*d)*s^3 + 
      2^(2 + 3*d)*ml^2*Pi^(3*d)*(s^2*(12 + 3*d^2 + 40*swC^2 - 64*swC^4 + 
          4*d*(-3 - 5*swC^2 + 8*swC^4)) + 2*s*(-15*d + 3*d^2 + 
          8*(3 - 5*swC^2 + 8*swC^4))*t + 4*(3 - 20*swC^2 + 32*swC^4)*t^2) + 
      2^(1 + 3*d)*Pi^(3*d)*s*(s^2*(-12 - 40*swC^2 + 64*swC^4 + 
          d*(18 + 40*swC^2 - 64*swC^4) + d^2*(-9 - 10*swC^2 + 16*swC^4)) + 
        s*(-21*d^2 + 3*d^3 - 16*(3 - 5*swC^2 + 8*swC^4) + 
          d*(54 - 40*swC^2 + 64*swC^4))*t + 2*(-2 + d)*(3 - 20*swC^2 + 
          32*swC^4)*t^2)))/(cwC^2*(-1 + d)*Pi^(4*d)*s^2*(-mz^2 + s)*swC^2), 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {((I/27)*2^(5 - d)*(-2 + d)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
    ((-1 + d)*Pi^d*s^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, 
  {((I/27)*EL^6*(3*d^3*(2*Pi)^(2*d)*s^2 + 2^(1 + 2*d)*Pi^(2*d)*
       (s^2*(-12 - 40*swC^2 + 64*swC^4 + d*(18 + 40*swC^2 - 64*swC^4) + 
          d^2*(-9 - 10*swC^2 + 16*swC^4)) + s*(-21*d^2 + 3*d^3 - 
          16*(3 - 5*swC^2 + 8*swC^4) + d*(54 - 40*swC^2 + 64*swC^4))*t + 
        2*(-2 + d)*(3 - 20*swC^2 + 32*swC^4)*t^2)))/
    (cwC^2*(-1 + d)*(2*Pi)^(3*d)*s*(-mz^2 + s)*swC^2), 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/27)*2^(6 - d)*(-2 + d)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
    ((-1 + d)*Pi^d*s^3), ((I/27)*2^(5 - d)*EL^6*(4*mc^2 + (-2 + d)*s)*
     ((-2 + d)*s^2 + 4*s*t + 4*t^2))/((-1 + d)*Pi^d*s^3), 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/27)*2^(1 - 2*d)*EL^6*(3*d^3*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(s^2*(-12 - 40*swC^2 + 64*swC^4 + 
          d*(18 + 40*swC^2 - 64*swC^4) + d^2*(-9 - 10*swC^2 + 16*swC^4)) + 
        s*(-21*d^2 + 3*d^3 - 16*(3 - 5*swC^2 + 8*swC^4) + 
          d*(54 - 40*swC^2 + 64*swC^4))*t + 2*(-2 + d)*(3 - 20*swC^2 + 
          32*swC^4)*t^2)))/(cwC^2*(-1 + d)*Pi^(2*d)*s^2*(-mz^2 + s)*swC^2), 
   ((I/27)*EL^6*(3*d^3*(2*Pi)^(3*d)*s^3 + 2^(2 + 3*d)*mc^2*Pi^(3*d)*
       (s^2*(12 + 3*d^2 + 40*swC^2 - 64*swC^4 + 
          4*d*(-3 - 5*swC^2 + 8*swC^4)) + 2*s*(-15*d + 3*d^2 + 
          8*(3 - 5*swC^2 + 8*swC^4))*t + 4*(3 - 20*swC^2 + 32*swC^4)*t^2) + 
      2^(1 + 3*d)*Pi^(3*d)*s*(s^2*(-12 - 40*swC^2 + 64*swC^4 + 
          d*(18 + 40*swC^2 - 64*swC^4) + d^2*(-9 - 10*swC^2 + 16*swC^4)) + 
        s*(-21*d^2 + 3*d^3 - 16*(3 - 5*swC^2 + 8*swC^4) + 
          d*(54 - 40*swC^2 + 64*swC^4))*t + 2*(-2 + d)*(3 - 20*swC^2 + 
          32*swC^4)*t^2)))/(cwC^2*(-1 + d)*(2*Pi)^(4*d)*s^2*(-mz^2 + s)*
     swC^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/27)*2^(6 - d)*(-2 + d)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
    ((-1 + d)*Pi^d*s^3), ((I/27)*2^(5 - d)*EL^6*(4*mt^2 + (-2 + d)*s)*
     ((-2 + d)*s^2 + 4*s*t + 4*t^2))/((-1 + d)*Pi^d*s^3), 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/27)*2^(1 - 2*d)*EL^6*(3*d^3*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(s^2*(-12 - 40*swC^2 + 64*swC^4 + 
          d*(18 + 40*swC^2 - 64*swC^4) + d^2*(-9 - 10*swC^2 + 16*swC^4)) + 
        s*(-21*d^2 + 3*d^3 - 16*(3 - 5*swC^2 + 8*swC^4) + 
          d*(54 - 40*swC^2 + 64*swC^4))*t + 2*(-2 + d)*(3 - 20*swC^2 + 
          32*swC^4)*t^2)))/(cwC^2*(-1 + d)*Pi^(2*d)*s^2*(-mz^2 + s)*swC^2), 
   ((I/27)*EL^6*(3*d^3*(2*Pi)^(3*d)*s^3 + 2^(2 + 3*d)*mt^2*Pi^(3*d)*
       (s^2*(12 + 3*d^2 + 40*swC^2 - 64*swC^4 + 
          4*d*(-3 - 5*swC^2 + 8*swC^4)) + 2*s*(-15*d + 3*d^2 + 
          8*(3 - 5*swC^2 + 8*swC^4))*t + 4*(3 - 20*swC^2 + 32*swC^4)*t^2) + 
      2^(1 + 3*d)*Pi^(3*d)*s*(s^2*(-12 - 40*swC^2 + 64*swC^4 + 
          d*(18 + 40*swC^2 - 64*swC^4) + d^2*(-9 - 10*swC^2 + 16*swC^4)) + 
        s*(-21*d^2 + 3*d^3 - 16*(3 - 5*swC^2 + 8*swC^4) + 
          d*(54 - 40*swC^2 + 64*swC^4))*t + 2*(-2 + d)*(3 - 20*swC^2 + 
          32*swC^4)*t^2)))/(cwC^2*(-1 + d)*(2*Pi)^(4*d)*s^2*(-mz^2 + s)*
     swC^2), 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {((I/27)*2^(3 - d)*(-2 + d)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
    ((-1 + d)*Pi^d*s^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, 
  {((I/27)*4^(-1 - d)*EL^6*(3*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
       (s^2*(-12 - 40*swC^2 + 64*swC^4 + d*(18 + 40*swC^2 - 64*swC^4) + 
          d^2*(-9 - 10*swC^2 + 16*swC^4)) + s*(-21*d^2 + 3*d^3 - 
          16*(3 - 5*swC^2 + 8*swC^4) + d*(54 - 40*swC^2 + 64*swC^4))*t + 
        2*(-2 + d)*(3 - 20*swC^2 + 32*swC^4)*t^2)))/
    (cwC^2*(-1 + d)*Pi^(2*d)*s*(-mz^2 + s)*swC^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/27)*2^(4 - d)*(-2 + d)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
    ((-1 + d)*Pi^d*s^3), ((I/27)*2^(3 - d)*EL^6*(4*ms^2 + (-2 + d)*s)*
     ((-2 + d)*s^2 + 4*s*t + 4*t^2))/((-1 + d)*Pi^d*s^3), 0, 0, 0, 0, 0, 0}, 
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/27)*2^(-1 - d)*(-2 + d)*EL^6*
     (s^2*(12 + 3*d^2 + 40*swC^2 - 64*swC^4 + 4*d*(-3 - 5*swC^2 + 8*swC^4)) + 
      2*s*(-15*d + 3*d^2 + 8*(3 - 5*swC^2 + 8*swC^4))*t + 
      4*(3 - 20*swC^2 + 32*swC^4)*t^2))/(cwC^2*(-1 + d)*Pi^d*s^2*(-mz^2 + s)*
     swC^2), ((I/27)*4^(-1 - 2*d)*EL^6*(3*d^3*(2*Pi)^(3*d)*s^3 + 
      2^(2 + 3*d)*ms^2*Pi^(3*d)*(s^2*(12 + 3*d^2 + 40*swC^2 - 64*swC^4 + 
          4*d*(-3 - 5*swC^2 + 8*swC^4)) + 2*s*(-15*d + 3*d^2 + 
          8*(3 - 5*swC^2 + 8*swC^4))*t + 4*(3 - 20*swC^2 + 32*swC^4)*t^2) + 
      2^(1 + 3*d)*Pi^(3*d)*s*(s^2*(-12 - 40*swC^2 + 64*swC^4 + 
          d*(18 + 40*swC^2 - 64*swC^4) + d^2*(-9 - 10*swC^2 + 16*swC^4)) + 
        s*(-21*d^2 + 3*d^3 - 16*(3 - 5*swC^2 + 8*swC^4) + 
          d*(54 - 40*swC^2 + 64*swC^4))*t + 2*(-2 + d)*(3 - 20*swC^2 + 
          32*swC^4)*t^2)))/(cwC^2*(-1 + d)*Pi^(4*d)*s^2*(-mz^2 + s)*swC^2), 
   0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, ((-I/27)*2^(4 - d)*(-2 + d)*EL^6*((-2 + d)*s^2 + 4*s*t + 
      4*t^2))/((-1 + d)*Pi^d*s^3), 
   ((I/27)*2^(3 - d)*EL^6*(4*mb^2 + (-2 + d)*s)*((-2 + d)*s^2 + 4*s*t + 
      4*t^2))/((-1 + d)*Pi^d*s^3), 0, 0, 0, 0}, 
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/27)*2^(-1 - d)*(-2 + d)*EL^6*
     (s^2*(12 + 3*d^2 + 40*swC^2 - 64*swC^4 + 4*d*(-3 - 5*swC^2 + 8*swC^4)) + 
      2*s*(-15*d + 3*d^2 + 8*(3 - 5*swC^2 + 8*swC^4))*t + 
      4*(3 - 20*swC^2 + 32*swC^4)*t^2))/(cwC^2*(-1 + d)*Pi^d*s^2*(-mz^2 + s)*
     swC^2), ((I/27)*4^(-1 - 2*d)*EL^6*(3*d^3*(2*Pi)^(3*d)*s^3 + 
      2^(2 + 3*d)*mb^2*Pi^(3*d)*(s^2*(12 + 3*d^2 + 40*swC^2 - 64*swC^4 + 
          4*d*(-3 - 5*swC^2 + 8*swC^4)) + 2*s*(-15*d + 3*d^2 + 
          8*(3 - 5*swC^2 + 8*swC^4))*t + 4*(3 - 20*swC^2 + 32*swC^4)*t^2) + 
      2^(1 + 3*d)*Pi^(3*d)*s*(s^2*(-12 - 40*swC^2 + 64*swC^4 + 
          d*(18 + 40*swC^2 - 64*swC^4) + d^2*(-9 - 10*swC^2 + 16*swC^4)) + 
        s*(-21*d^2 + 3*d^3 - 16*(3 - 5*swC^2 + 8*swC^4) + 
          d*(54 - 40*swC^2 + 64*swC^4))*t + 2*(-2 + d)*(3 - 20*swC^2 + 
          32*swC^4)*t^2)))/(cwC^2*(-1 + d)*Pi^(4*d)*s^2*(-mz^2 + s)*swC^2), 
   0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, 
  {((-I/9)*2^(-1 - 2*d)*EL^6*(d^2*(2*Pi)^d*s^2 + 2^(2 + d)*Pi^d*
       (s^2*((1 - 4*sw^2)^2 - d*(1 - 4*sw^2)^2 + d^2*(-2*sw^2 + 4*sw^4)) + 
        (-2 + d)*s*(1 - 4*sw^2)^2*t + (-2 + d)*(1 - 4*sw^2)^2*t^2)))/
    ((-1 + d)*Pi^(2*d)*s*(-mz^2 + s)*sw^2*(-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
  {((-I/9)*2^(-5 - 2*d)*EL^6*(3*d^3*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(s^2*(3*d^3*(4*sw^4 - swC^2 + sw^2*(-3 + 4*swC^2)) + 
          d^2*(-1 + 4*sw^2)*(9 - 14*swC^2 - 8*swC^4 + 
            2*sw^2*(-9 - 10*swC^2 + 16*swC^4)) - 2*d*(-1 + 4*sw^2)*
           (9 - 10*swC^2 - 16*swC^4 + 2*sw^2*(-9 - 20*swC^2 + 32*swC^4)) + 
          4*(-1 + 4*sw^2)*(3 - 2*swC^2 - 8*swC^4 + sw^2*(-6 - 20*swC^2 + 
              32*swC^4))) + (-2 + d)*s*(-1 + 4*sw^2)*
         (-15*d*(-1 + 2*sw^2 + 2*swC^2) + d^2*(-3 + 6*sw^2 + 6*swC^2) + 
          8*(-3 + 8*swC^2 - 4*swC^4 + 2*sw^2*(3 - 5*swC^2 + 8*swC^4)))*t + 
        2*(-2 + d)*(-1 + 4*sw^2)*(-3 + 8*swC^2)*(1 - 2*swC^2 + 
          sw^2*(-2 + 8*swC^2))*t^2)))/(cwC^2*(-1 + d)*Pi^(2*d)*(mz^2 - s)^2*
     sw^2*(-1 + sw^2)*swC^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
  {((-I/9)*2^(-1 - 2*d)*EL^6*(d^2*(2*Pi)^d*s^2 + 2^(2 + d)*Pi^d*
       (s^2*((1 - 4*sw^2)^2 - d*(1 - 4*sw^2)^2 + d^2*(-2*sw^2 + 4*sw^4)) + 
        (-2 + d)*s*(1 - 4*sw^2)^2*t + (-2 + d)*(1 - 4*sw^2)^2*t^2)))/
    ((-1 + d)*Pi^(2*d)*s*(-mz^2 + s)*sw^2*(-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
  {((-I/9)*2^(-5 - 2*d)*EL^6*(3*d^3*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(s^2*(3*d^3*(4*sw^4 - swC^2 + sw^2*(-3 + 4*swC^2)) + 
          d^2*(-1 + 4*sw^2)*(9 - 14*swC^2 - 8*swC^4 + 
            2*sw^2*(-9 - 10*swC^2 + 16*swC^4)) - 2*d*(-1 + 4*sw^2)*
           (9 - 10*swC^2 - 16*swC^4 + 2*sw^2*(-9 - 20*swC^2 + 32*swC^4)) + 
          4*(-1 + 4*sw^2)*(3 - 2*swC^2 - 8*swC^4 + sw^2*(-6 - 20*swC^2 + 
              32*swC^4))) + (-2 + d)*s*(-1 + 4*sw^2)*
         (-15*d*(-1 + 2*sw^2 + 2*swC^2) + d^2*(-3 + 6*sw^2 + 6*swC^2) + 
          8*(-3 + 8*swC^2 - 4*swC^4 + 2*sw^2*(3 - 5*swC^2 + 8*swC^4)))*t + 
        2*(-2 + d)*(-1 + 4*sw^2)*(-3 + 8*swC^2)*(1 - 2*swC^2 + 
          sw^2*(-2 + 8*swC^2))*t^2)))/(cwC^2*(-1 + d)*Pi^(2*d)*(mz^2 - s)^2*
     sw^2*(-1 + sw^2)*swC^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/9)*EL^6*(d^2*(2*Pi)^(3*d)*s^2 + 2^(2 + 3*d)*Pi^(3*d)*
       (s^2*((1 - 4*sw^2)^2 - d*(1 - 4*sw^2)^2 + d^2*(-2*sw^2 + 4*sw^4)) + 
        (-2 + d)*s*(1 - 4*sw^2)^2*t + (-2 + d)*(1 - 4*sw^2)^2*t^2)))/
    ((-1 + d)*(2*Pi)^(4*d)*(mz^2 - s)*s^2*sw^2*(-1 + sw^2)), 
   ((I/9)*2^(-1 - 4*d)*EL^6*(d^2*(2*Pi)^(3*d)*s^3 + 2^(2 + 3*d)*Pi^(3*d)*
       (ml - 4*ml*sw^2)^2*((-2 + d)*s^2 + 4*s*t + 4*t^2) + 
      2^(2 + 3*d)*Pi^(3*d)*s*(s^2*((1 - 4*sw^2)^2 - d*(1 - 4*sw^2)^2 + 
          d^2*(-2*sw^2 + 4*sw^4)) + (-2 + d)*s*(1 - 4*sw^2)^2*t + 
        (-2 + d)*(1 - 4*sw^2)^2*t^2)))/((-1 + d)*Pi^(4*d)*(mz^2 - s)*s^2*sw^2*
     (-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((I/9)*4^(-2 - d)*EL^6*(3*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
       (s^2*(3*d^3*(4*sw^4 - swC^2 + sw^2*(-3 + 4*swC^2)) + 
          d^2*(-1 + 4*sw^2)*(9 - 14*swC^2 - 8*swC^4 + 
            2*sw^2*(-9 - 10*swC^2 + 16*swC^4)) - 2*d*(-1 + 4*sw^2)*
           (9 - 10*swC^2 - 16*swC^4 + 2*sw^2*(-9 - 20*swC^2 + 32*swC^4)) + 
          4*(-1 + 4*sw^2)*(3 - 2*swC^2 - 8*swC^4 + sw^2*(-6 - 20*swC^2 + 
              32*swC^4))) + (-2 + d)*s*(-1 + 4*sw^2)*
         (-15*d*(-1 + 2*sw^2 + 2*swC^2) + d^2*(-3 + 6*sw^2 + 6*swC^2) + 
          8*(-3 + 8*swC^2 - 4*swC^4 + 2*sw^2*(3 - 5*swC^2 + 8*swC^4)))*t + 
        2*(-2 + d)*(-1 + 4*sw^2)*(-3 + 8*swC^2)*(1 - 2*swC^2 + 
          sw^2*(-2 + 8*swC^2))*t^2)))/(cwC^2*(-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s*
     sw^2*(-1 + sw^2)*swC^2), ((-I/9)*2^(-5 - 2*d)*EL^6*
     (3*d^3*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
       (s^2*(3*d^3*(4*sw^4 - swC^2 + sw^2*(-3 + 4*swC^2)) + 
          d^2*(-1 + 4*sw^2)*(9 - 14*swC^2 - 8*swC^4 + 
            2*sw^2*(-9 - 10*swC^2 + 16*swC^4)) - 2*d*(-1 + 4*sw^2)*
           (9 - 10*swC^2 - 16*swC^4 + 2*sw^2*(-9 - 20*swC^2 + 32*swC^4)) + 
          4*(-1 + 4*sw^2)*(3 - 2*swC^2 - 8*swC^4 + sw^2*(-6 - 20*swC^2 + 
              32*swC^4))) + (-2 + d)*s*(-1 + 4*sw^2)*
         (-15*d*(-1 + 2*sw^2 + 2*swC^2) + d^2*(-3 + 6*sw^2 + 6*swC^2) + 
          8*(-3 + 8*swC^2 - 4*swC^4 + 2*sw^2*(3 - 5*swC^2 + 8*swC^4)))*t + 
        2*(-2 + d)*(-1 + 4*sw^2)*(-3 + 8*swC^2)*(1 - 2*swC^2 + 
          sw^2*(-2 + 8*swC^2))*t^2) + 4*ml^2*(3*d^2*(2*Pi)^d*s^2 + 
        2^(1 + d)*Pi^d*(s^2*(3*d^2*(4*sw^4 - swC^2 + sw^2*(-3 + 4*swC^2)) + 
            2*d*(-1 + 4*sw^2)*(3 - 4*swC^2 - 4*swC^4 + 2*sw^2*(-3 - 5*swC^2 + 
                8*swC^4)) - 2*(-1 + 4*sw^2)*(3 - 2*swC^2 - 8*swC^4 + 
              sw^2*(-6 - 20*swC^2 + 32*swC^4))) + s*(-1 + 4*sw^2)*
           (-15*d*(-1 + 2*sw^2 + 2*swC^2) + d^2*(-3 + 6*sw^2 + 6*swC^2) + 
            8*(-3 + 8*swC^2 - 4*swC^4 + 2*sw^2*(3 - 5*swC^2 + 8*swC^4)))*t + 
          2*(-1 + 4*sw^2)*(-3 + 8*swC^2)*(1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*
           t^2))))/(cwC^2*(-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s*sw^2*(-1 + sw^2)*
     swC^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {((-I/9)*4^(-1 - d)*EL^6*(3*d^2*(2*Pi)^d*s^2 + 
      2^(2 + d)*Pi^d*(s^2*(3 - 20*sw^2 + 32*sw^4 + d^2*sw^2*(-5 + 8*sw^2) + 
          d*(-3 + 20*sw^2 - 32*sw^4)) + (-2 + d)*s*(3 - 20*sw^2 + 32*sw^4)*
         t + (-2 + d)*(3 - 20*sw^2 + 32*sw^4)*t^2)))/
    ((-1 + d)*Pi^(2*d)*s*(-mz^2 + s)*sw^2*(-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
  {((-I/9)*4^(-3 - d)*EL^6*(9*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
       (s^2*(6*d^3*(4*sw^4 - swC^2 + 4*sw^2*(-1 + swC^2)) + 
          d^2*(-1 + 4*sw^2)*(-3*(-9 + 6*swC^2 + 8*swC^4) + 
            4*sw^2*(-9 - 10*swC^2 + 16*swC^4)) + 4*(-1 + 4*sw^2)*
           (9 + 6*swC^2 - 24*swC^4 + 4*sw^2*(-3 - 10*swC^2 + 16*swC^4)) - 
          2*d*(-1 + 4*sw^2)*(27 - 48*swC^4 + 4*sw^2*(-9 - 20*swC^2 + 
              32*swC^4))) + (-2 + d)*s*(-1 + 4*sw^2)*
         (-15*d*(-3 + 4*sw^2 + 4*swC^2) + 3*d^2*(-3 + 4*sw^2 + 4*swC^2) - 
          24*(3 - 7*swC^2 + 4*swC^4) + 32*sw^2*(3 - 5*swC^2 + 8*swC^4))*t + 
        2*(-2 + d)*(-1 + 4*sw^2)*(-1 + 4*swC^2)*(9 - 12*swC^2 + 
          4*sw^2*(-3 + 8*swC^2))*t^2)))/(cwC^2*(-1 + d)*Pi^(2*d)*(mz^2 - s)^2*
     sw^2*(-1 + sw^2)*swC^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
  {((-I/9)*4^(-1 - d)*EL^6*(3*d^2*(2*Pi)^d*s^2 + 2^(2 + d)*Pi^d*
       (s^2*(3 - 20*sw^2 + 32*sw^4 + d^2*sw^2*(-5 + 8*sw^2) + 
          d*(-3 + 20*sw^2 - 32*sw^4)) + (-2 + d)*s*(3 - 20*sw^2 + 32*sw^4)*
         t + (-2 + d)*(3 - 20*sw^2 + 32*sw^4)*t^2)))/
    ((-1 + d)*Pi^(2*d)*s*(-mz^2 + s)*sw^2*(-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
  {((-I/9)*4^(-3 - d)*EL^6*(9*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
       (s^2*(6*d^3*(4*sw^4 - swC^2 + 4*sw^2*(-1 + swC^2)) + 
          d^2*(-1 + 4*sw^2)*(-3*(-9 + 6*swC^2 + 8*swC^4) + 
            4*sw^2*(-9 - 10*swC^2 + 16*swC^4)) + 4*(-1 + 4*sw^2)*
           (9 + 6*swC^2 - 24*swC^4 + 4*sw^2*(-3 - 10*swC^2 + 16*swC^4)) - 
          2*d*(-1 + 4*sw^2)*(27 - 48*swC^4 + 4*sw^2*(-9 - 20*swC^2 + 
              32*swC^4))) + (-2 + d)*s*(-1 + 4*sw^2)*
         (-15*d*(-3 + 4*sw^2 + 4*swC^2) + 3*d^2*(-3 + 4*sw^2 + 4*swC^2) - 
          24*(3 - 7*swC^2 + 4*swC^4) + 32*sw^2*(3 - 5*swC^2 + 8*swC^4))*t + 
        2*(-2 + d)*(-1 + 4*sw^2)*(-1 + 4*swC^2)*(9 - 12*swC^2 + 
          4*sw^2*(-3 + 8*swC^2))*t^2)))/(cwC^2*(-1 + d)*Pi^(2*d)*(mz^2 - s)^2*
     sw^2*(-1 + sw^2)*swC^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/9)*2^(-1 - 3*d)*EL^6*(3*d^2*(2*Pi)^(2*d)*s^2 + 
      4^(1 + d)*Pi^(2*d)*(s^2*(3 - 20*sw^2 + 32*sw^4 + 
          d^2*sw^2*(-5 + 8*sw^2) + d*(-3 + 20*sw^2 - 32*sw^4)) + 
        (-2 + d)*s*(3 - 20*sw^2 + 32*sw^4)*t + 
        (-2 + d)*(3 - 20*sw^2 + 32*sw^4)*t^2)))/((-1 + d)*Pi^(3*d)*(mz^2 - s)*
     s^2*sw^2*(-1 + sw^2)), ((I/9)*4^(-1 - d)*EL^6*(3*d^2*(2*Pi)^d*s^3 + 
      2^(2 + d)*ml^2*Pi^d*(3 - 20*sw^2 + 32*sw^4)*((-2 + d)*s^2 + 4*s*t + 
        4*t^2) + 2^(2 + d)*Pi^d*s*(s^2*(3 - 20*sw^2 + 32*sw^4 + 
          d^2*sw^2*(-5 + 8*sw^2) + d*(-3 + 20*sw^2 - 32*sw^4)) + 
        (-2 + d)*s*(3 - 20*sw^2 + 32*sw^4)*t + 
        (-2 + d)*(3 - 20*sw^2 + 32*sw^4)*t^2)))/((-1 + d)*Pi^(2*d)*(mz^2 - s)*
     s^2*sw^2*(-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((I/9)*2^(-5 - 2*d)*EL^6*(-9*d^3*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(s^2*(3*d^3*(3 + 8*sw^4 - 2*swC^2 + 
            8*sw^2*(-1 + swC^2)) + d^2*(-1 + 4*sw^2)*
           (-3*(-9 + 6*swC^2 + 8*swC^4) + 4*sw^2*(-9 - 10*swC^2 + 
              16*swC^4)) + 4*(-1 + 4*sw^2)*(9 + 6*swC^2 - 24*swC^4 + 
            4*sw^2*(-3 - 10*swC^2 + 16*swC^4)) - 2*d*(-1 + 4*sw^2)*
           (27 - 48*swC^4 + 4*sw^2*(-9 - 20*swC^2 + 32*swC^4))) + 
        (-2 + d)*s*(-1 + 4*sw^2)*(-15*d*(-3 + 4*sw^2 + 4*swC^2) + 
          3*d^2*(-3 + 4*sw^2 + 4*swC^2) - 24*(3 - 7*swC^2 + 4*swC^4) + 
          32*sw^2*(3 - 5*swC^2 + 8*swC^4))*t + 2*(-2 + d)*(-1 + 4*sw^2)*
         (-1 + 4*swC^2)*(9 - 12*swC^2 + 4*sw^2*(-3 + 8*swC^2))*t^2)))/
    (cwC^2*(-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s*sw^2*(-1 + sw^2)*swC^2), 
   ((-I/9)*4^(-3 - d)*EL^6*(9*d^3*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
       (s^2*(6*d^3*(4*sw^4 - swC^2 + 4*sw^2*(-1 + swC^2)) + 
          d^2*(-1 + 4*sw^2)*(-3*(-9 + 6*swC^2 + 8*swC^4) + 
            4*sw^2*(-9 - 10*swC^2 + 16*swC^4)) + 4*(-1 + 4*sw^2)*
           (9 + 6*swC^2 - 24*swC^4 + 4*sw^2*(-3 - 10*swC^2 + 16*swC^4)) - 
          2*d*(-1 + 4*sw^2)*(27 - 48*swC^4 + 4*sw^2*(-9 - 20*swC^2 + 
              32*swC^4))) + (-2 + d)*s*(-1 + 4*sw^2)*
         (-15*d*(-3 + 4*sw^2 + 4*swC^2) + 3*d^2*(-3 + 4*sw^2 + 4*swC^2) - 
          24*(3 - 7*swC^2 + 4*swC^4) + 32*sw^2*(3 - 5*swC^2 + 8*swC^4))*t + 
        2*(-2 + d)*(-1 + 4*sw^2)*(-1 + 4*swC^2)*(9 - 12*swC^2 + 
          4*sw^2*(-3 + 8*swC^2))*t^2) + 4*ml^2*(9*d^2*(2*Pi)^d*s^2 + 
        2^(1 + d)*Pi^d*(2*s^2*(3*d^2*(4*sw^4 - swC^2 + 4*sw^2*(-1 + swC^2)) + 
            d*(8*sw^2*(6 + swC^2 - 10*swC^4) + 3*(-3 + swC^2 + 4*swC^4) + 
              16*sw^4*(-3 - 5*swC^2 + 8*swC^4)) - (-1 + 4*sw^2)*
             (9 + 6*swC^2 - 24*swC^4 + 4*sw^2*(-3 - 10*swC^2 + 16*swC^4))) + 
          s*(-1 + 4*sw^2)*(-15*d*(-3 + 4*sw^2 + 4*swC^2) + 
            3*d^2*(-3 + 4*sw^2 + 4*swC^2) - 24*(3 - 7*swC^2 + 4*swC^4) + 
            32*sw^2*(3 - 5*swC^2 + 8*swC^4))*t + 2*(-1 + 4*sw^2)*
           (-1 + 4*swC^2)*(9 - 12*swC^2 + 4*sw^2*(-3 + 8*swC^2))*t^2))))/
    (cwC^2*(-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s*sw^2*(-1 + sw^2)*swC^2), 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
  {((-I/27)*EL^6*(-15*d^2*(2*Pi)^(2*d)*s^2 + 2^(1 + 2*d)*Pi^(2*d)*
       (s^2*(6 - 40*sw^2 + 64*sw^4 + d*(-6 + 40*sw^2 - 64*sw^4) + 
          d^2*(9 - 10*sw^2 + 16*sw^4)) + 2*(-2 + d)*s*(3 - 20*sw^2 + 32*sw^4)*
         t + 2*(-2 + d)*(3 - 20*sw^2 + 32*sw^4)*t^2)))/
    ((-1 + d)*(2*Pi)^(3*d)*s*(-mz^2 + s)*sw^2*(-1 + sw^2)), 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
  {((-I/27)*4^(-2 - d)*EL^6*(3*d^3*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(s^2*(3*d^3*(1 + 8*sw^4 - 3*swC^2 + 
            sw^2*(-7 + 8*swC^2)) + d^2*(-3 + 8*sw^2)*(9 - 14*swC^2 - 
            8*swC^4 + 2*sw^2*(-9 - 10*swC^2 + 16*swC^4)) - 
          2*d*(-3 + 8*sw^2)*(9 - 10*swC^2 - 16*swC^4 + 
            2*sw^2*(-9 - 20*swC^2 + 32*swC^4)) + 4*(-3 + 8*sw^2)*
           (3 - 2*swC^2 - 8*swC^4 + sw^2*(-6 - 20*swC^2 + 32*swC^4))) + 
        (-2 + d)*s*(-3 + 8*sw^2)*(-15*d*(-1 + 2*sw^2 + 2*swC^2) + 
          d^2*(-3 + 6*sw^2 + 6*swC^2) + 8*(-3 + 8*swC^2 - 4*swC^4 + 
            2*sw^2*(3 - 5*swC^2 + 8*swC^4)))*t + 2*(-2 + d)*(-3 + 8*sw^2)*
         (-3 + 8*swC^2)*(1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t^2)))/
    (cwC^2*(-1 + d)*Pi^(2*d)*(mz^2 - s)^2*sw^2*(-1 + sw^2)*swC^2), 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/27)*2^(1 - 4*d)*EL^6*(3*d^2*(2*Pi)^(3*d)*s^2 + 
      2^(2 + 3*d)*Pi^(3*d)*(s^2*(3 - 20*sw^2 + 32*sw^4 + 
          d^2*sw^2*(-5 + 8*sw^2) + d*(-3 + 20*sw^2 - 32*sw^4)) + 
        (-2 + d)*s*(3 - 20*sw^2 + 32*sw^4)*t + 
        (-2 + d)*(3 - 20*sw^2 + 32*sw^4)*t^2)))/((-1 + d)*Pi^(4*d)*(mz^2 - s)*
     s^2*sw^2*(-1 + sw^2)), ((I/27)*EL^6*(3*d^2*(2*Pi)^(3*d)*s^3 + 
      2^(2 + 3*d)*mc^2*Pi^(3*d)*(3 - 20*sw^2 + 32*sw^4)*
       ((-2 + d)*s^2 + 4*s*t + 4*t^2) + 2^(2 + 3*d)*Pi^(3*d)*s*
       (s^2*(3 - 20*sw^2 + 32*sw^4 + d^2*sw^2*(-5 + 8*sw^2) + 
          d*(-3 + 20*sw^2 - 32*sw^4)) + (-2 + d)*s*(3 - 20*sw^2 + 32*sw^4)*
         t + (-2 + d)*(3 - 20*sw^2 + 32*sw^4)*t^2)))/
    ((-1 + d)*(2*Pi)^(4*d)*(mz^2 - s)*s^2*sw^2*(-1 + sw^2)), 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((I/27)*2^(-3 - 2*d)*EL^6*(9*d^3*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(s^2*(3*d^3*(8*sw^4 - 3*swC^2 + sw^2*(-7 + 8*swC^2)) + 
          d^2*(-3 + 8*sw^2)*(9 - 14*swC^2 - 8*swC^4 + 
            2*sw^2*(-9 - 10*swC^2 + 16*swC^4)) - 2*d*(-3 + 8*sw^2)*
           (9 - 10*swC^2 - 16*swC^4 + 2*sw^2*(-9 - 20*swC^2 + 32*swC^4)) + 
          4*(-3 + 8*sw^2)*(3 - 2*swC^2 - 8*swC^4 + sw^2*(-6 - 20*swC^2 + 
              32*swC^4))) + (-2 + d)*s*(-3 + 8*sw^2)*
         (-15*d*(-1 + 2*sw^2 + 2*swC^2) + d^2*(-3 + 6*sw^2 + 6*swC^2) + 
          8*(-3 + 8*swC^2 - 4*swC^4 + 2*sw^2*(3 - 5*swC^2 + 8*swC^4)))*t + 
        2*(-2 + d)*(-3 + 8*sw^2)*(-3 + 8*swC^2)*(1 - 2*swC^2 + 
          sw^2*(-2 + 8*swC^2))*t^2)))/(cwC^2*(-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s*
     sw^2*(-1 + sw^2)*swC^2), ((-I/27)*4^(-2 - d)*EL^6*
     (3*d^3*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
       (s^2*(3*d^3*(1 + 8*sw^4 - 3*swC^2 + sw^2*(-7 + 8*swC^2)) + 
          d^2*(-3 + 8*sw^2)*(9 - 14*swC^2 - 8*swC^4 + 
            2*sw^2*(-9 - 10*swC^2 + 16*swC^4)) - 2*d*(-3 + 8*sw^2)*
           (9 - 10*swC^2 - 16*swC^4 + 2*sw^2*(-9 - 20*swC^2 + 32*swC^4)) + 
          4*(-3 + 8*sw^2)*(3 - 2*swC^2 - 8*swC^4 + sw^2*(-6 - 20*swC^2 + 
              32*swC^4))) + (-2 + d)*s*(-3 + 8*sw^2)*
         (-15*d*(-1 + 2*sw^2 + 2*swC^2) + d^2*(-3 + 6*sw^2 + 6*swC^2) + 
          8*(-3 + 8*swC^2 - 4*swC^4 + 2*sw^2*(3 - 5*swC^2 + 8*swC^4)))*t + 
        2*(-2 + d)*(-3 + 8*sw^2)*(-3 + 8*swC^2)*(1 - 2*swC^2 + 
          sw^2*(-2 + 8*swC^2))*t^2) + 4*mc^2*(9*d^2*(2*Pi)^d*s^2 + 
        2^(1 + d)*Pi^d*(s^2*(3*d^2*(8*sw^4 - 3*swC^2 + sw^2*(-7 + 8*swC^2)) + 
            2*d*(-3 + 8*sw^2)*(3 - 4*swC^2 - 4*swC^4 + 2*sw^2*(-3 - 5*swC^2 + 
                8*swC^4)) - 2*(-3 + 8*sw^2)*(3 - 2*swC^2 - 8*swC^4 + 
              sw^2*(-6 - 20*swC^2 + 32*swC^4))) + s*(-3 + 8*sw^2)*
           (-15*d*(-1 + 2*sw^2 + 2*swC^2) + d^2*(-3 + 6*sw^2 + 6*swC^2) + 
            8*(-3 + 8*swC^2 - 4*swC^4 + 2*sw^2*(3 - 5*swC^2 + 8*swC^4)))*t + 
          2*(-3 + 8*sw^2)*(-3 + 8*swC^2)*(1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*
           t^2))))/(cwC^2*(-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s*sw^2*(-1 + sw^2)*
     swC^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/27)*2^(1 - 4*d)*EL^6*(3*d^2*(2*Pi)^(3*d)*s^2 + 
      2^(2 + 3*d)*Pi^(3*d)*(s^2*(3 - 20*sw^2 + 32*sw^4 + 
          d^2*sw^2*(-5 + 8*sw^2) + d*(-3 + 20*sw^2 - 32*sw^4)) + 
        (-2 + d)*s*(3 - 20*sw^2 + 32*sw^4)*t + 
        (-2 + d)*(3 - 20*sw^2 + 32*sw^4)*t^2)))/((-1 + d)*Pi^(4*d)*(mz^2 - s)*
     s^2*sw^2*(-1 + sw^2)), ((I/27)*EL^6*(3*d^2*(2*Pi)^(3*d)*s^3 + 
      2^(2 + 3*d)*mt^2*Pi^(3*d)*(3 - 20*sw^2 + 32*sw^4)*
       ((-2 + d)*s^2 + 4*s*t + 4*t^2) + 2^(2 + 3*d)*Pi^(3*d)*s*
       (s^2*(3 - 20*sw^2 + 32*sw^4 + d^2*sw^2*(-5 + 8*sw^2) + 
          d*(-3 + 20*sw^2 - 32*sw^4)) + (-2 + d)*s*(3 - 20*sw^2 + 32*sw^4)*
         t + (-2 + d)*(3 - 20*sw^2 + 32*sw^4)*t^2)))/
    ((-1 + d)*(2*Pi)^(4*d)*(mz^2 - s)*s^2*sw^2*(-1 + sw^2)), 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((I/27)*2^(-3 - 2*d)*EL^6*(9*d^3*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(s^2*(3*d^3*(8*sw^4 - 3*swC^2 + sw^2*(-7 + 8*swC^2)) + 
          d^2*(-3 + 8*sw^2)*(9 - 14*swC^2 - 8*swC^4 + 
            2*sw^2*(-9 - 10*swC^2 + 16*swC^4)) - 2*d*(-3 + 8*sw^2)*
           (9 - 10*swC^2 - 16*swC^4 + 2*sw^2*(-9 - 20*swC^2 + 32*swC^4)) + 
          4*(-3 + 8*sw^2)*(3 - 2*swC^2 - 8*swC^4 + sw^2*(-6 - 20*swC^2 + 
              32*swC^4))) + (-2 + d)*s*(-3 + 8*sw^2)*
         (-15*d*(-1 + 2*sw^2 + 2*swC^2) + d^2*(-3 + 6*sw^2 + 6*swC^2) + 
          8*(-3 + 8*swC^2 - 4*swC^4 + 2*sw^2*(3 - 5*swC^2 + 8*swC^4)))*t + 
        2*(-2 + d)*(-3 + 8*sw^2)*(-3 + 8*swC^2)*(1 - 2*swC^2 + 
          sw^2*(-2 + 8*swC^2))*t^2)))/(cwC^2*(-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s*
     sw^2*(-1 + sw^2)*swC^2), ((-I/27)*4^(-2 - d)*EL^6*
     (3*d^3*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
       (s^2*(3*d^3*(1 + 8*sw^4 - 3*swC^2 + sw^2*(-7 + 8*swC^2)) + 
          d^2*(-3 + 8*sw^2)*(9 - 14*swC^2 - 8*swC^4 + 
            2*sw^2*(-9 - 10*swC^2 + 16*swC^4)) - 2*d*(-3 + 8*sw^2)*
           (9 - 10*swC^2 - 16*swC^4 + 2*sw^2*(-9 - 20*swC^2 + 32*swC^4)) + 
          4*(-3 + 8*sw^2)*(3 - 2*swC^2 - 8*swC^4 + sw^2*(-6 - 20*swC^2 + 
              32*swC^4))) + (-2 + d)*s*(-3 + 8*sw^2)*
         (-15*d*(-1 + 2*sw^2 + 2*swC^2) + d^2*(-3 + 6*sw^2 + 6*swC^2) + 
          8*(-3 + 8*swC^2 - 4*swC^4 + 2*sw^2*(3 - 5*swC^2 + 8*swC^4)))*t + 
        2*(-2 + d)*(-3 + 8*sw^2)*(-3 + 8*swC^2)*(1 - 2*swC^2 + 
          sw^2*(-2 + 8*swC^2))*t^2) + 4*mt^2*(9*d^2*(2*Pi)^d*s^2 + 
        2^(1 + d)*Pi^d*(s^2*(3*d^2*(8*sw^4 - 3*swC^2 + sw^2*(-7 + 8*swC^2)) + 
            2*d*(-3 + 8*sw^2)*(3 - 4*swC^2 - 4*swC^4 + 2*sw^2*(-3 - 5*swC^2 + 
                8*swC^4)) - 2*(-3 + 8*sw^2)*(3 - 2*swC^2 - 8*swC^4 + 
              sw^2*(-6 - 20*swC^2 + 32*swC^4))) + s*(-3 + 8*sw^2)*
           (-15*d*(-1 + 2*sw^2 + 2*swC^2) + d^2*(-3 + 6*sw^2 + 6*swC^2) + 
            8*(-3 + 8*swC^2 - 4*swC^4 + 2*sw^2*(3 - 5*swC^2 + 8*swC^4)))*t + 
          2*(-3 + 8*sw^2)*(-3 + 8*swC^2)*(1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*
           t^2))))/(cwC^2*(-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s*sw^2*(-1 + sw^2)*
     swC^2), 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {((-I/27)*2^(-1 - 2*d)*EL^6*(9*d^2*(2*Pi)^d*s^2 + 
      2^(2 + d)*Pi^d*(s^2*((3 - 8*sw^2)^2 - d*(3 - 8*sw^2)^2 + 
          4*d^2*sw^2*(-3 + 4*sw^2)) + (-2 + d)*s*(3 - 8*sw^2)^2*t + 
        (-2 + d)*(3 - 8*sw^2)^2*t^2)))/((-1 + d)*Pi^(2*d)*s*(-mz^2 + s)*sw^2*
     (-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0}, {((-I/27)*2^(-5 - 2*d)*EL^6*(9*d^3*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(s^2*(3*d^3*(3 + 16*sw^4 - 6*swC^2 + 
            2*sw^2*(-9 + 8*swC^2)) + d^2*(-3 + 8*sw^2)*
           (-3*(-9 + 6*swC^2 + 8*swC^4) + 4*sw^2*(-9 - 10*swC^2 + 
              16*swC^4)) + 4*(-3 + 8*sw^2)*(9 + 6*swC^2 - 24*swC^4 + 
            4*sw^2*(-3 - 10*swC^2 + 16*swC^4)) - 
          2*d*(sw^2*(324 + 240*swC^2 - 768*swC^4) + 9*(-9 + 16*swC^4) + 
            32*sw^4*(-9 - 20*swC^2 + 32*swC^4))) + (-2 + d)*s*(-3 + 8*sw^2)*
         (-15*d*(-3 + 4*sw^2 + 4*swC^2) + 3*d^2*(-3 + 4*sw^2 + 4*swC^2) - 
          24*(3 - 7*swC^2 + 4*swC^4) + 32*sw^2*(3 - 5*swC^2 + 8*swC^4))*t + 
        2*(-2 + d)*(-3 + 8*sw^2)*(-1 + 4*swC^2)*(9 - 12*swC^2 + 
          4*sw^2*(-3 + 8*swC^2))*t^2)))/(cwC^2*(-1 + d)*Pi^(2*d)*(mz^2 - s)^2*
     sw^2*(-1 + sw^2)*swC^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/27)*EL^6*(9*d^2*(2*Pi)^(3*d)*s^2 + 2^(2 + 3*d)*Pi^(3*d)*
       (s^2*((3 - 8*sw^2)^2 - d*(3 - 8*sw^2)^2 + 4*d^2*sw^2*(-3 + 4*sw^2)) + 
        (-2 + d)*s*(3 - 8*sw^2)^2*t + (-2 + d)*(3 - 8*sw^2)^2*t^2)))/
    ((-1 + d)*(2*Pi)^(4*d)*(mz^2 - s)*s^2*sw^2*(-1 + sw^2)), 
   ((I/27)*2^(-1 - 4*d)*EL^6*(9*d^2*(2*Pi)^(3*d)*s^3 + 
      2^(2 + 3*d)*mc^2*Pi^(3*d)*(3 - 8*sw^2)^2*((-2 + d)*s^2 + 4*s*t + 
        4*t^2) + 2^(2 + 3*d)*Pi^(3*d)*s*
       (s^2*((3 - 8*sw^2)^2 - d*(3 - 8*sw^2)^2 + 4*d^2*sw^2*(-3 + 4*sw^2)) + 
        (-2 + d)*s*(3 - 8*sw^2)^2*t + (-2 + d)*(3 - 8*sw^2)^2*t^2)))/
    ((-1 + d)*Pi^(4*d)*(mz^2 - s)*s^2*sw^2*(-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((I/27)*4^(-2 - d)*EL^6*(9*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
       (s^2*(3*d^3*(3 + 16*sw^4 - 6*swC^2 + 2*sw^2*(-9 + 8*swC^2)) + 
          d^2*(-3 + 8*sw^2)*(-3*(-9 + 6*swC^2 + 8*swC^4) + 
            4*sw^2*(-9 - 10*swC^2 + 16*swC^4)) + 4*(-3 + 8*sw^2)*
           (9 + 6*swC^2 - 24*swC^4 + 4*sw^2*(-3 - 10*swC^2 + 16*swC^4)) - 
          2*d*(sw^2*(324 + 240*swC^2 - 768*swC^4) + 9*(-9 + 16*swC^4) + 
            32*sw^4*(-9 - 20*swC^2 + 32*swC^4))) + (-2 + d)*s*(-3 + 8*sw^2)*
         (-15*d*(-3 + 4*sw^2 + 4*swC^2) + 3*d^2*(-3 + 4*sw^2 + 4*swC^2) - 
          24*(3 - 7*swC^2 + 4*swC^4) + 32*sw^2*(3 - 5*swC^2 + 8*swC^4))*t + 
        2*(-2 + d)*(-3 + 8*sw^2)*(-1 + 4*swC^2)*(9 - 12*swC^2 + 
          4*sw^2*(-3 + 8*swC^2))*t^2)))/(cwC^2*(-1 + d)*Pi^(2*d)*(mz^2 - s)^2*
     s*sw^2*(-1 + sw^2)*swC^2), ((-I/27)*2^(-5 - 2*d)*EL^6*
     (9*d^3*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
       (s^2*(3*d^3*(3 + 16*sw^4 - 6*swC^2 + 2*sw^2*(-9 + 8*swC^2)) + 
          d^2*(-3 + 8*sw^2)*(-3*(-9 + 6*swC^2 + 8*swC^4) + 
            4*sw^2*(-9 - 10*swC^2 + 16*swC^4)) + 4*(-3 + 8*sw^2)*
           (9 + 6*swC^2 - 24*swC^4 + 4*sw^2*(-3 - 10*swC^2 + 16*swC^4)) - 
          2*d*(sw^2*(324 + 240*swC^2 - 768*swC^4) + 9*(-9 + 16*swC^4) + 
            32*sw^4*(-9 - 20*swC^2 + 32*swC^4))) + (-2 + d)*s*(-3 + 8*sw^2)*
         (-15*d*(-3 + 4*sw^2 + 4*swC^2) + 3*d^2*(-3 + 4*sw^2 + 4*swC^2) - 
          24*(3 - 7*swC^2 + 4*swC^4) + 32*sw^2*(3 - 5*swC^2 + 8*swC^4))*t + 
        2*(-2 + d)*(-3 + 8*sw^2)*(-1 + 4*swC^2)*(9 - 12*swC^2 + 
          4*sw^2*(-3 + 8*swC^2))*t^2) + 4*mc^2*(27*d^2*(2*Pi)^d*s^2 + 
        2^(1 + d)*Pi^d*(2*s^2*(sw^4*(96 + 320*swC^2 - 512*swC^4) + 
            9*(3 + 2*swC^2 - 8*swC^4) + 12*sw^2*(-9 - 14*swC^2 + 32*swC^4) + 
            3*d^2*(8*sw^4 - 3*swC^2 + sw^2*(-9 + 8*swC^2)) + 
            d*(-3 + 8*sw^2)*(-3*(-3 + swC^2 + 4*swC^4) + 4*sw^2*(-3 - 
                5*swC^2 + 8*swC^4))) + s*(-3 + 8*sw^2)*
           (-15*d*(-3 + 4*sw^2 + 4*swC^2) + 3*d^2*(-3 + 4*sw^2 + 4*swC^2) - 
            24*(3 - 7*swC^2 + 4*swC^4) + 32*sw^2*(3 - 5*swC^2 + 8*swC^4))*t + 
          2*(-3 + 8*sw^2)*(-1 + 4*swC^2)*(9 - 12*swC^2 + 
            4*sw^2*(-3 + 8*swC^2))*t^2))))/(cwC^2*(-1 + d)*Pi^(2*d)*
     (mz^2 - s)^2*s*sw^2*(-1 + sw^2)*swC^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/27)*EL^6*(9*d^2*(2*Pi)^(3*d)*s^2 + 2^(2 + 3*d)*Pi^(3*d)*
       (s^2*((3 - 8*sw^2)^2 - d*(3 - 8*sw^2)^2 + 4*d^2*sw^2*(-3 + 4*sw^2)) + 
        (-2 + d)*s*(3 - 8*sw^2)^2*t + (-2 + d)*(3 - 8*sw^2)^2*t^2)))/
    ((-1 + d)*(2*Pi)^(4*d)*(mz^2 - s)*s^2*sw^2*(-1 + sw^2)), 
   ((I/27)*2^(-1 - 4*d)*EL^6*(9*d^2*(2*Pi)^(3*d)*s^3 + 
      2^(2 + 3*d)*mt^2*Pi^(3*d)*(3 - 8*sw^2)^2*((-2 + d)*s^2 + 4*s*t + 
        4*t^2) + 2^(2 + 3*d)*Pi^(3*d)*s*
       (s^2*((3 - 8*sw^2)^2 - d*(3 - 8*sw^2)^2 + 4*d^2*sw^2*(-3 + 4*sw^2)) + 
        (-2 + d)*s*(3 - 8*sw^2)^2*t + (-2 + d)*(3 - 8*sw^2)^2*t^2)))/
    ((-1 + d)*Pi^(4*d)*(mz^2 - s)*s^2*sw^2*(-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((I/27)*4^(-2 - d)*EL^6*(9*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
       (s^2*(3*d^3*(3 + 16*sw^4 - 6*swC^2 + 2*sw^2*(-9 + 8*swC^2)) + 
          d^2*(-3 + 8*sw^2)*(-3*(-9 + 6*swC^2 + 8*swC^4) + 
            4*sw^2*(-9 - 10*swC^2 + 16*swC^4)) + 4*(-3 + 8*sw^2)*
           (9 + 6*swC^2 - 24*swC^4 + 4*sw^2*(-3 - 10*swC^2 + 16*swC^4)) - 
          2*d*(sw^2*(324 + 240*swC^2 - 768*swC^4) + 9*(-9 + 16*swC^4) + 
            32*sw^4*(-9 - 20*swC^2 + 32*swC^4))) + (-2 + d)*s*(-3 + 8*sw^2)*
         (-15*d*(-3 + 4*sw^2 + 4*swC^2) + 3*d^2*(-3 + 4*sw^2 + 4*swC^2) - 
          24*(3 - 7*swC^2 + 4*swC^4) + 32*sw^2*(3 - 5*swC^2 + 8*swC^4))*t + 
        2*(-2 + d)*(-3 + 8*sw^2)*(-1 + 4*swC^2)*(9 - 12*swC^2 + 
          4*sw^2*(-3 + 8*swC^2))*t^2)))/(cwC^2*(-1 + d)*Pi^(2*d)*(mz^2 - s)^2*
     s*sw^2*(-1 + sw^2)*swC^2), ((-I/27)*2^(-5 - 2*d)*EL^6*
     (9*d^3*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
       (s^2*(3*d^3*(3 + 16*sw^4 - 6*swC^2 + 2*sw^2*(-9 + 8*swC^2)) + 
          d^2*(-3 + 8*sw^2)*(-3*(-9 + 6*swC^2 + 8*swC^4) + 
            4*sw^2*(-9 - 10*swC^2 + 16*swC^4)) + 4*(-3 + 8*sw^2)*
           (9 + 6*swC^2 - 24*swC^4 + 4*sw^2*(-3 - 10*swC^2 + 16*swC^4)) - 
          2*d*(sw^2*(324 + 240*swC^2 - 768*swC^4) + 9*(-9 + 16*swC^4) + 
            32*sw^4*(-9 - 20*swC^2 + 32*swC^4))) + (-2 + d)*s*(-3 + 8*sw^2)*
         (-15*d*(-3 + 4*sw^2 + 4*swC^2) + 3*d^2*(-3 + 4*sw^2 + 4*swC^2) - 
          24*(3 - 7*swC^2 + 4*swC^4) + 32*sw^2*(3 - 5*swC^2 + 8*swC^4))*t + 
        2*(-2 + d)*(-3 + 8*sw^2)*(-1 + 4*swC^2)*(9 - 12*swC^2 + 
          4*sw^2*(-3 + 8*swC^2))*t^2) + 4*mt^2*(27*d^2*(2*Pi)^d*s^2 + 
        2^(1 + d)*Pi^d*(2*s^2*(sw^4*(96 + 320*swC^2 - 512*swC^4) + 
            9*(3 + 2*swC^2 - 8*swC^4) + 12*sw^2*(-9 - 14*swC^2 + 32*swC^4) + 
            3*d^2*(8*sw^4 - 3*swC^2 + sw^2*(-9 + 8*swC^2)) + 
            d*(-3 + 8*sw^2)*(-3*(-3 + swC^2 + 4*swC^4) + 4*sw^2*(-3 - 
                5*swC^2 + 8*swC^4))) + s*(-3 + 8*sw^2)*
           (-15*d*(-3 + 4*sw^2 + 4*swC^2) + 3*d^2*(-3 + 4*sw^2 + 4*swC^2) - 
            24*(3 - 7*swC^2 + 4*swC^4) + 32*sw^2*(3 - 5*swC^2 + 8*swC^4))*t + 
          2*(-3 + 8*sw^2)*(-1 + 4*swC^2)*(9 - 12*swC^2 + 
            4*sw^2*(-3 + 8*swC^2))*t^2))))/(cwC^2*(-1 + d)*Pi^(2*d)*
     (mz^2 - s)^2*s*sw^2*(-1 + sw^2)*swC^2), 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {((-I/27)*2^(-1 - 2*d)*EL^6*(3*d^2*(2*Pi)^d*s^2 + 
      2^(2 + d)*Pi^d*(s^2*(3 - 16*sw^2 + 16*sw^4 + 4*d^2*sw^2*(-1 + sw^2) + 
          d*(-3 + 16*sw^2 - 16*sw^4)) + (-2 + d)*s*(3 - 16*sw^2 + 16*sw^4)*
         t + (-2 + d)*(3 - 16*sw^2 + 16*sw^4)*t^2)))/
    ((-1 + d)*Pi^(2*d)*s*(-mz^2 + s)*sw^2*(-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
  {((-I/27)*2^(-5 - 2*d)*EL^6*(3*d^3*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(s^2*(3*d^3*(1 + 4*sw^4 - 3*swC^2 + 
            sw^2*(-5 + 4*swC^2)) + d^2*(sw^2*(90 + 4*swC^2 - 128*swC^4) + 
            3*(-9 + 14*swC^2 + 8*swC^4) + 8*sw^4*(-9 - 10*swC^2 + 
              16*swC^4)) - 2*d*(-3 + 4*sw^2)*(9 - 10*swC^2 - 16*swC^4 + 
            2*sw^2*(-9 - 20*swC^2 + 32*swC^4)) + 4*(-3 + 4*sw^2)*
           (3 - 2*swC^2 - 8*swC^4 + sw^2*(-6 - 20*swC^2 + 32*swC^4))) + 
        (-2 + d)*s*(-3 + 4*sw^2)*(-15*d*(-1 + 2*sw^2 + 2*swC^2) + 
          d^2*(-3 + 6*sw^2 + 6*swC^2) + 8*(-3 + 8*swC^2 - 4*swC^4 + 
            2*sw^2*(3 - 5*swC^2 + 8*swC^4)))*t + 2*(-2 + d)*(-3 + 4*sw^2)*
         (-3 + 8*swC^2)*(1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t^2)))/
    (cwC^2*(-1 + d)*Pi^(2*d)*(mz^2 - s)^2*sw^2*(-1 + sw^2)*swC^2), 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/27)*EL^6*(3*d^2*(2*Pi)^(3*d)*s^2 + 2^(2 + 3*d)*Pi^(3*d)*
       (s^2*(3 - 16*sw^2 + 16*sw^4 + 4*d^2*sw^2*(-1 + sw^2) + 
          d*(-3 + 16*sw^2 - 16*sw^4)) + (-2 + d)*s*(3 - 16*sw^2 + 16*sw^4)*
         t + (-2 + d)*(3 - 16*sw^2 + 16*sw^4)*t^2)))/
    ((-1 + d)*(2*Pi)^(4*d)*(mz^2 - s)*s^2*sw^2*(-1 + sw^2)), 
   ((I/27)*2^(-1 - 4*d)*EL^6*(3*d^2*(2*Pi)^(3*d)*s^3 + 
      2^(2 + 3*d)*ms^2*Pi^(3*d)*(3 - 16*sw^2 + 16*sw^4)*
       ((-2 + d)*s^2 + 4*s*t + 4*t^2) + 2^(2 + 3*d)*Pi^(3*d)*s*
       (s^2*(3 - 16*sw^2 + 16*sw^4 + 4*d^2*sw^2*(-1 + sw^2) + 
          d*(-3 + 16*sw^2 - 16*sw^4)) + (-2 + d)*s*(3 - 16*sw^2 + 16*sw^4)*
         t + (-2 + d)*(3 - 16*sw^2 + 16*sw^4)*t^2)))/
    ((-1 + d)*Pi^(4*d)*(mz^2 - s)*s^2*sw^2*(-1 + sw^2)), 0, 0, 0, 0, 0, 0}, 
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((I/27)*4^(-2 - d)*EL^6*(3*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
       (s^2*(3*d^3*(1 + 4*sw^4 - 3*swC^2 + sw^2*(-5 + 4*swC^2)) + 
          d^2*(sw^2*(90 + 4*swC^2 - 128*swC^4) + 3*(-9 + 14*swC^2 + 
              8*swC^4) + 8*sw^4*(-9 - 10*swC^2 + 16*swC^4)) - 
          2*d*(-3 + 4*sw^2)*(9 - 10*swC^2 - 16*swC^4 + 
            2*sw^2*(-9 - 20*swC^2 + 32*swC^4)) + 4*(-3 + 4*sw^2)*
           (3 - 2*swC^2 - 8*swC^4 + sw^2*(-6 - 20*swC^2 + 32*swC^4))) + 
        (-2 + d)*s*(-3 + 4*sw^2)*(-15*d*(-1 + 2*sw^2 + 2*swC^2) + 
          d^2*(-3 + 6*sw^2 + 6*swC^2) + 8*(-3 + 8*swC^2 - 4*swC^4 + 
            2*sw^2*(3 - 5*swC^2 + 8*swC^4)))*t + 2*(-2 + d)*(-3 + 4*sw^2)*
         (-3 + 8*swC^2)*(1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t^2)))/
    (cwC^2*(-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s*sw^2*(-1 + sw^2)*swC^2), 
   ((-I/27)*2^(-5 - 2*d)*EL^6*(3*d^3*(2*Pi)^d*s^3 + 
      2^(1 + d)*Pi^d*s*(s^2*(3*d^3*(1 + 4*sw^4 - 3*swC^2 + 
            sw^2*(-5 + 4*swC^2)) + d^2*(sw^2*(90 + 4*swC^2 - 128*swC^4) + 
            3*(-9 + 14*swC^2 + 8*swC^4) + 8*sw^4*(-9 - 10*swC^2 + 
              16*swC^4)) - 2*d*(-3 + 4*sw^2)*(9 - 10*swC^2 - 16*swC^4 + 
            2*sw^2*(-9 - 20*swC^2 + 32*swC^4)) + 4*(-3 + 4*sw^2)*
           (3 - 2*swC^2 - 8*swC^4 + sw^2*(-6 - 20*swC^2 + 32*swC^4))) + 
        (-2 + d)*s*(-3 + 4*sw^2)*(-15*d*(-1 + 2*sw^2 + 2*swC^2) + 
          d^2*(-3 + 6*sw^2 + 6*swC^2) + 8*(-3 + 8*swC^2 - 4*swC^4 + 
            2*sw^2*(3 - 5*swC^2 + 8*swC^4)))*t + 2*(-2 + d)*(-3 + 4*sw^2)*
         (-3 + 8*swC^2)*(1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t^2) + 
      4*ms^2*(9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(3*d^2*(4*sw^4 - 3*swC^2 + sw^2*(-5 + 4*swC^2)) + 
            2*d*(sw^2*(30 + 14*swC^2 - 64*swC^4) + 3*(-3 + 4*swC^2 + 
                4*swC^4) + 8*sw^4*(-3 - 5*swC^2 + 8*swC^4)) - 
            2*(-3 + 4*sw^2)*(3 - 2*swC^2 - 8*swC^4 + sw^2*(-6 - 20*swC^2 + 
                32*swC^4))) + s*(-3 + 4*sw^2)*
           (-15*d*(-1 + 2*sw^2 + 2*swC^2) + d^2*(-3 + 6*sw^2 + 6*swC^2) + 
            8*(-3 + 8*swC^2 - 4*swC^4 + 2*sw^2*(3 - 5*swC^2 + 8*swC^4)))*t + 
          2*(-3 + 4*sw^2)*(-3 + 8*swC^2)*(1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*
           t^2))))/(cwC^2*(-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s*sw^2*(-1 + sw^2)*
     swC^2), 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, ((-I/27)*EL^6*(3*d^2*(2*Pi)^(3*d)*s^2 + 
      2^(2 + 3*d)*Pi^(3*d)*(s^2*(3 - 16*sw^2 + 16*sw^4 + 
          4*d^2*sw^2*(-1 + sw^2) + d*(-3 + 16*sw^2 - 16*sw^4)) + 
        (-2 + d)*s*(3 - 16*sw^2 + 16*sw^4)*t + 
        (-2 + d)*(3 - 16*sw^2 + 16*sw^4)*t^2)))/((-1 + d)*(2*Pi)^(4*d)*
     (mz^2 - s)*s^2*sw^2*(-1 + sw^2)), 
   ((I/27)*2^(-1 - 4*d)*EL^6*(3*d^2*(2*Pi)^(3*d)*s^3 + 
      2^(2 + 3*d)*mb^2*Pi^(3*d)*(3 - 16*sw^2 + 16*sw^4)*
       ((-2 + d)*s^2 + 4*s*t + 4*t^2) + 2^(2 + 3*d)*Pi^(3*d)*s*
       (s^2*(3 - 16*sw^2 + 16*sw^4 + 4*d^2*sw^2*(-1 + sw^2) + 
          d*(-3 + 16*sw^2 - 16*sw^4)) + (-2 + d)*s*(3 - 16*sw^2 + 16*sw^4)*
         t + (-2 + d)*(3 - 16*sw^2 + 16*sw^4)*t^2)))/
    ((-1 + d)*Pi^(4*d)*(mz^2 - s)*s^2*sw^2*(-1 + sw^2)), 0, 0, 0, 0}, 
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((I/27)*4^(-2 - d)*EL^6*(3*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
       (s^2*(3*d^3*(1 + 4*sw^4 - 3*swC^2 + sw^2*(-5 + 4*swC^2)) + 
          d^2*(sw^2*(90 + 4*swC^2 - 128*swC^4) + 3*(-9 + 14*swC^2 + 
              8*swC^4) + 8*sw^4*(-9 - 10*swC^2 + 16*swC^4)) - 
          2*d*(-3 + 4*sw^2)*(9 - 10*swC^2 - 16*swC^4 + 
            2*sw^2*(-9 - 20*swC^2 + 32*swC^4)) + 4*(-3 + 4*sw^2)*
           (3 - 2*swC^2 - 8*swC^4 + sw^2*(-6 - 20*swC^2 + 32*swC^4))) + 
        (-2 + d)*s*(-3 + 4*sw^2)*(-15*d*(-1 + 2*sw^2 + 2*swC^2) + 
          d^2*(-3 + 6*sw^2 + 6*swC^2) + 8*(-3 + 8*swC^2 - 4*swC^4 + 
            2*sw^2*(3 - 5*swC^2 + 8*swC^4)))*t + 2*(-2 + d)*(-3 + 4*sw^2)*
         (-3 + 8*swC^2)*(1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t^2)))/
    (cwC^2*(-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s*sw^2*(-1 + sw^2)*swC^2), 
   ((-I/27)*2^(-5 - 2*d)*EL^6*(3*d^3*(2*Pi)^d*s^3 + 
      2^(1 + d)*Pi^d*s*(s^2*(3*d^3*(1 + 4*sw^4 - 3*swC^2 + 
            sw^2*(-5 + 4*swC^2)) + d^2*(sw^2*(90 + 4*swC^2 - 128*swC^4) + 
            3*(-9 + 14*swC^2 + 8*swC^4) + 8*sw^4*(-9 - 10*swC^2 + 
              16*swC^4)) - 2*d*(-3 + 4*sw^2)*(9 - 10*swC^2 - 16*swC^4 + 
            2*sw^2*(-9 - 20*swC^2 + 32*swC^4)) + 4*(-3 + 4*sw^2)*
           (3 - 2*swC^2 - 8*swC^4 + sw^2*(-6 - 20*swC^2 + 32*swC^4))) + 
        (-2 + d)*s*(-3 + 4*sw^2)*(-15*d*(-1 + 2*sw^2 + 2*swC^2) + 
          d^2*(-3 + 6*sw^2 + 6*swC^2) + 8*(-3 + 8*swC^2 - 4*swC^4 + 
            2*sw^2*(3 - 5*swC^2 + 8*swC^4)))*t + 2*(-2 + d)*(-3 + 4*sw^2)*
         (-3 + 8*swC^2)*(1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t^2) + 
      4*mb^2*(9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(3*d^2*(4*sw^4 - 3*swC^2 + sw^2*(-5 + 4*swC^2)) + 
            2*d*(sw^2*(30 + 14*swC^2 - 64*swC^4) + 3*(-3 + 4*swC^2 + 
                4*swC^4) + 8*sw^4*(-3 - 5*swC^2 + 8*swC^4)) - 
            2*(-3 + 4*sw^2)*(3 - 2*swC^2 - 8*swC^4 + sw^2*(-6 - 20*swC^2 + 
                32*swC^4))) + s*(-3 + 4*sw^2)*
           (-15*d*(-1 + 2*sw^2 + 2*swC^2) + d^2*(-3 + 6*sw^2 + 6*swC^2) + 
            8*(-3 + 8*swC^2 - 4*swC^4 + 2*sw^2*(3 - 5*swC^2 + 8*swC^4)))*t + 
          2*(-3 + 4*sw^2)*(-3 + 8*swC^2)*(1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*
           t^2))))/(cwC^2*(-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s*sw^2*(-1 + sw^2)*
     swC^2), 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
  {((-I/27)*4^(-1 - d)*EL^6*(9*d^2*(2*Pi)^d*s^2 + 
      2^(2 + d)*Pi^d*(s^2*(9 - 36*sw^2 + 32*sw^4 + d^2*sw^2*(-9 + 8*sw^2) + 
          d*(-9 + 36*sw^2 - 32*sw^4)) + (-2 + d)*s*(9 - 36*sw^2 + 32*sw^4)*
         t + (-2 + d)*(9 - 36*sw^2 + 32*sw^4)*t^2)))/
    ((-1 + d)*Pi^(2*d)*s*(-mz^2 + s)*sw^2*(-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
  {((I/27)*EL^6*((d*s^2*((2*Pi)^d + 2^(1 + d)*Pi^d*(1 - 2*sw^2))*
        (-1 + 4*swC^2)*(9 - 12*swC^2 + 4*sw^2*(-3 + 8*swC^2)))/
       ((-1 + d)*(mz^2 - s)) - 
      (d*s^2*(27*(2*Pi)^d + 2^(3 + d)*Pi^d*(18*swC^2*(-1 + swC^2) - 
           9*sw^2*(1 - 6*swC^2 + 8*swC^4) + sw^4*(6 - 40*swC^2 + 64*swC^4))))/
       ((-1 + d)*(mz^2 - s)) + ((d*s + 2*t)*(-9*d*(2*Pi)^d*s + 
         2^(1 + d)*Pi^d*(-3*d*s*(3 + 8*sw^4 - 6*swC^2 + 
             4*sw^2*(-3 + 2*swC^2)) + 2*s*(-72*sw^2*(1 - 2*swC^2 + 2*swC^4) + 
             9*(3 - 7*swC^2 + 4*swC^4) + 16*sw^4*(3 - 5*swC^2 + 8*swC^4)) + 
           (-3 + 4*sw^2)*(-1 + 4*swC^2)*(9 - 12*swC^2 + 
             4*sw^2*(-3 + 8*swC^2))*t)))/((-1 + d)*(mz^2 - s)) - 
      (s*(27*d^2*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
          (s*(18*d^2*(4*swC^2*(-1 + swC^2) + sw^2*(-1 + 4*swC^2)) - 
             3*d*(8*sw^4 + 2*sw^2*(-21 + 68*swC^2) + 9*(3 - 16*swC^2 + 
                 16*swC^4)) + 4*(sw^4*(12 + 40*swC^2 - 64*swC^4) + 9*sw^2*
                (-5 + 10*swC^2 + 8*swC^4) + 9*(3 - 16*swC^2 + 16*swC^4))) + 
           (-6 + 3*d - 12*swC^2 + 4*sw^2*(-1 + 4*swC^2))*(9 - 12*swC^2 + 
             4*sw^2*(-3 + 8*swC^2))*t)))/(mz^2 - s) - 
      (s*(27*d^2*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
          (s*(6*d^2*(-3*swC^2 + sw^2*(-3 + 8*swC^2)) + 
             4*(sw^4*(12 + 40*swC^2 - 64*swC^4) + 9*(3 + 2*swC^2 - 8*swC^4) + 
               9*sw^2*(-5 + 2*swC^2 + 8*swC^4)) - 3*d*(8*sw^4 + sw^2*
                (-42 + 80*swC^2) - 3*(-9 + 6*swC^2 + 8*swC^4))) + 
           (-1 + 4*swC^2)*(54 - 72*swC^2 - 36*sw^2*(1 + 4*swC^2) + 
             9*d*(-3 + 4*sw^2 + 4*swC^2) + 16*sw^4*(-3 + 8*swC^2))*t)))/
       (mz^2 - s) + (-27*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(4*sw^4*(24 + 80*swC^2 - 128*swC^4) + 24*d^2*(sw^4 + 3*swC^2 - 
              4*sw^2*swC^2 - 3*swC^4) + 72*sw^2*(1 - 14*swC^2 + 8*swC^4) + 
            32*d*sw^4*(-3 - 5*swC^2 + 8*swC^4) - 36*(3 - 16*swC^2 + 
              16*swC^4) + 27*d*(3 - 16*swC^2 + 16*swC^4) - 
            12*d*sw^2*(3 - 58*swC^2 + 24*swC^4)) + 
          s*(3*d^2*(-3 + 4*sw^2)*(-3 + 4*sw^2 + 4*swC^2) - 
            3*d*(63 + 80*sw^4 - 120*swC^2 + 48*swC^4 + 16*sw^2*(-9 + 
                10*swC^2)) + 2*(64*sw^4*(3 - 5*swC^2 + 8*swC^4) - 
              36*sw^2*(11 - 26*swC^2 + 16*swC^4) + 9*(21 - 58*swC^2 + 
                40*swC^4)))*t + 2*(-3 + 4*sw^2)*(-1 + 4*swC^2)*
           (9 - 12*swC^2 + 4*sw^2*(-3 + 8*swC^2))*t^2) - 
        (2*s*t*(s*(9*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(-72*sw^2*(-1 - 2*swC^2 + 
                 4*swC^4) + 9*(-3 - 2*swC^2 + 8*swC^4) + 16*sw^4*
                (-3 - 10*swC^2 + 16*swC^4) + 3*d*(3 + 8*sw^4 - 6*swC^2 + 
                 4*sw^2*(-3 + 2*swC^2)))) - mz^2*(27*d*(2*Pi)^d + 
             2^(1 + d)*Pi^d*(-9*(3 + 2*(1 + d)*swC^2 - 8*swC^4) + 8*sw^4*
                (-6 + 3*d - 20*swC^2 + 32*swC^4) + 12*sw^2*(6 + 12*swC^2 - 
                 24*swC^4 + d*(-3 + 2*swC^2))))*GaugeXi[Z]))/
         (s - mz^2*GaugeXi[Z]))/(-mz^2 + s)))/(2^(2*(3 + d))*cwC^2*Pi^(2*d)*
     (mz^2 - s)*sw^2*(-1 + sw^2)*swC^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/27)*2^(-1 - 3*d)*EL^6*(9*d^2*(2*Pi)^(2*d)*s^2 + 
      4^(1 + d)*Pi^(2*d)*(s^2*(9 - 36*sw^2 + 32*sw^4 + 
          d^2*sw^2*(-9 + 8*sw^2) + d*(-9 + 36*sw^2 - 32*sw^4)) + 
        (-2 + d)*s*(9 - 36*sw^2 + 32*sw^4)*t + 
        (-2 + d)*(9 - 36*sw^2 + 32*sw^4)*t^2)))/((-1 + d)*Pi^(3*d)*(mz^2 - s)*
     s^2*sw^2*(-1 + sw^2)), ((I/27)*4^(-1 - d)*EL^6*
     (9*d^2*(2*Pi)^d*s^3 + 2^(2 + d)*ms^2*Pi^d*(9 - 36*sw^2 + 32*sw^4)*
       ((-2 + d)*s^2 + 4*s*t + 4*t^2) + 2^(2 + d)*Pi^d*s*
       (s^2*(9 - 36*sw^2 + 32*sw^4 + d^2*sw^2*(-9 + 8*sw^2) + 
          d*(-9 + 36*sw^2 - 32*sw^4)) + (-2 + d)*s*(9 - 36*sw^2 + 32*sw^4)*
         t + (-2 + d)*(9 - 36*sw^2 + 32*sw^4)*t^2)))/
    ((-1 + d)*Pi^(2*d)*(mz^2 - s)*s^2*sw^2*(-1 + sw^2)), 0, 0, 0, 0, 0, 0}, 
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((I/27)*2^(-5 - 2*d)*EL^6*(27*d^3*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(s^2*(6*d^3*(4*sw^4 - 3*swC^2 + sw^2*(-6 + 4*swC^2)) + 
          d^2*(-3 + 4*sw^2)*(-3*(-9 + 6*swC^2 + 8*swC^4) + 
            4*sw^2*(-9 - 10*swC^2 + 16*swC^4)) + 
          4*(-72*sw^2*(-1 - 2*swC^2 + 4*swC^4) + 9*(-3 - 2*swC^2 + 8*swC^4) + 
            16*sw^4*(-3 - 10*swC^2 + 16*swC^4)) - 2*d*(-3 + 4*sw^2)*
           (27 - 48*swC^4 + 4*sw^2*(-9 - 20*swC^2 + 32*swC^4))) + 
        (-2 + d)*s*(-3 + 4*sw^2)*(-15*d*(-3 + 4*sw^2 + 4*swC^2) + 
          3*d^2*(-3 + 4*sw^2 + 4*swC^2) - 24*(3 - 7*swC^2 + 4*swC^4) + 
          32*sw^2*(3 - 5*swC^2 + 8*swC^4))*t + 2*(-2 + d)*(-3 + 4*sw^2)*
         (-1 + 4*swC^2)*(9 - 12*swC^2 + 4*sw^2*(-3 + 8*swC^2))*t^2)))/
    (cwC^2*(-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s*sw^2*(-1 + sw^2)*swC^2), 
   ((-I/27)*4^(-3 - d)*EL^6*(27*d^3*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
       (s^2*(6*d^3*(4*sw^4 - 3*swC^2 + sw^2*(-6 + 4*swC^2)) + 
          d^2*(-3 + 4*sw^2)*(-3*(-9 + 6*swC^2 + 8*swC^4) + 
            4*sw^2*(-9 - 10*swC^2 + 16*swC^4)) + 
          4*(-72*sw^2*(-1 - 2*swC^2 + 4*swC^4) + 9*(-3 - 2*swC^2 + 8*swC^4) + 
            16*sw^4*(-3 - 10*swC^2 + 16*swC^4)) - 2*d*(-3 + 4*sw^2)*
           (27 - 48*swC^4 + 4*sw^2*(-9 - 20*swC^2 + 32*swC^4))) + 
        (-2 + d)*s*(-3 + 4*sw^2)*(-15*d*(-3 + 4*sw^2 + 4*swC^2) + 
          3*d^2*(-3 + 4*sw^2 + 4*swC^2) - 24*(3 - 7*swC^2 + 4*swC^4) + 
          32*sw^2*(3 - 5*swC^2 + 8*swC^4))*t + 2*(-2 + d)*(-3 + 4*sw^2)*
         (-1 + 4*swC^2)*(9 - 12*swC^2 + 4*sw^2*(-3 + 8*swC^2))*t^2) + 
      4*ms^2*(27*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (2*s^2*(sw^4*(48 + 160*swC^2 - 256*swC^4) + 
            9*(3 + 2*swC^2 - 8*swC^4) + 72*sw^2*(-1 - 2*swC^2 + 4*swC^4) + 
            3*d^2*(4*sw^4 - 3*swC^2 + sw^2*(-6 + 4*swC^2)) + 
            d*(-3 + 4*sw^2)*(-3*(-3 + swC^2 + 4*swC^4) + 4*sw^2*(-3 - 
                5*swC^2 + 8*swC^4))) + s*(-3 + 4*sw^2)*
           (-15*d*(-3 + 4*sw^2 + 4*swC^2) + 3*d^2*(-3 + 4*sw^2 + 4*swC^2) - 
            24*(3 - 7*swC^2 + 4*swC^4) + 32*sw^2*(3 - 5*swC^2 + 8*swC^4))*t + 
          2*(-3 + 4*sw^2)*(-1 + 4*swC^2)*(9 - 12*swC^2 + 
            4*sw^2*(-3 + 8*swC^2))*t^2))))/(cwC^2*(-1 + d)*Pi^(2*d)*
     (mz^2 - s)^2*s*sw^2*(-1 + sw^2)*swC^2), 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/27)*2^(-1 - 3*d)*EL^6*(9*d^2*(2*Pi)^(2*d)*s^2 + 
      4^(1 + d)*Pi^(2*d)*(s^2*(9 - 36*sw^2 + 32*sw^4 + 
          d^2*sw^2*(-9 + 8*sw^2) + d*(-9 + 36*sw^2 - 32*sw^4)) + 
        (-2 + d)*s*(9 - 36*sw^2 + 32*sw^4)*t + 
        (-2 + d)*(9 - 36*sw^2 + 32*sw^4)*t^2)))/((-1 + d)*Pi^(3*d)*(mz^2 - s)*
     s^2*sw^2*(-1 + sw^2)), ((I/27)*4^(-1 - d)*EL^6*
     (9*d^2*(2*Pi)^d*s^3 + 2^(2 + d)*mb^2*Pi^d*(9 - 36*sw^2 + 32*sw^4)*
       ((-2 + d)*s^2 + 4*s*t + 4*t^2) + 2^(2 + d)*Pi^d*s*
       (s^2*(9 - 36*sw^2 + 32*sw^4 + d^2*sw^2*(-9 + 8*sw^2) + 
          d*(-9 + 36*sw^2 - 32*sw^4)) + (-2 + d)*s*(9 - 36*sw^2 + 32*sw^4)*
         t + (-2 + d)*(9 - 36*sw^2 + 32*sw^4)*t^2)))/
    ((-1 + d)*Pi^(2*d)*(mz^2 - s)*s^2*sw^2*(-1 + sw^2)), 0, 0, 0, 0}, 
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((I/27)*2^(-5 - 2*d)*EL^6*(27*d^3*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(s^2*(6*d^3*(4*sw^4 - 3*swC^2 + sw^2*(-6 + 4*swC^2)) + 
          d^2*(-3 + 4*sw^2)*(-3*(-9 + 6*swC^2 + 8*swC^4) + 
            4*sw^2*(-9 - 10*swC^2 + 16*swC^4)) + 
          4*(-72*sw^2*(-1 - 2*swC^2 + 4*swC^4) + 9*(-3 - 2*swC^2 + 8*swC^4) + 
            16*sw^4*(-3 - 10*swC^2 + 16*swC^4)) - 2*d*(-3 + 4*sw^2)*
           (27 - 48*swC^4 + 4*sw^2*(-9 - 20*swC^2 + 32*swC^4))) + 
        (-2 + d)*s*(-3 + 4*sw^2)*(-15*d*(-3 + 4*sw^2 + 4*swC^2) + 
          3*d^2*(-3 + 4*sw^2 + 4*swC^2) - 24*(3 - 7*swC^2 + 4*swC^4) + 
          32*sw^2*(3 - 5*swC^2 + 8*swC^4))*t + 2*(-2 + d)*(-3 + 4*sw^2)*
         (-1 + 4*swC^2)*(9 - 12*swC^2 + 4*sw^2*(-3 + 8*swC^2))*t^2)))/
    (cwC^2*(-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s*sw^2*(-1 + sw^2)*swC^2), 
   ((-I/27)*4^(-3 - d)*EL^6*(27*d^3*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
       (s^2*(6*d^3*(4*sw^4 - 3*swC^2 + sw^2*(-6 + 4*swC^2)) + 
          d^2*(-3 + 4*sw^2)*(-3*(-9 + 6*swC^2 + 8*swC^4) + 
            4*sw^2*(-9 - 10*swC^2 + 16*swC^4)) + 
          4*(-72*sw^2*(-1 - 2*swC^2 + 4*swC^4) + 9*(-3 - 2*swC^2 + 8*swC^4) + 
            16*sw^4*(-3 - 10*swC^2 + 16*swC^4)) - 2*d*(-3 + 4*sw^2)*
           (27 - 48*swC^4 + 4*sw^2*(-9 - 20*swC^2 + 32*swC^4))) + 
        (-2 + d)*s*(-3 + 4*sw^2)*(-15*d*(-3 + 4*sw^2 + 4*swC^2) + 
          3*d^2*(-3 + 4*sw^2 + 4*swC^2) - 24*(3 - 7*swC^2 + 4*swC^4) + 
          32*sw^2*(3 - 5*swC^2 + 8*swC^4))*t + 2*(-2 + d)*(-3 + 4*sw^2)*
         (-1 + 4*swC^2)*(9 - 12*swC^2 + 4*sw^2*(-3 + 8*swC^2))*t^2) + 
      4*mb^2*(27*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (2*s^2*(sw^4*(48 + 160*swC^2 - 256*swC^4) + 
            9*(3 + 2*swC^2 - 8*swC^4) + 72*sw^2*(-1 - 2*swC^2 + 4*swC^4) + 
            3*d^2*(4*sw^4 - 3*swC^2 + sw^2*(-6 + 4*swC^2)) + 
            d*(-3 + 4*sw^2)*(-3*(-3 + swC^2 + 4*swC^4) + 4*sw^2*(-3 - 
                5*swC^2 + 8*swC^4))) + s*(-3 + 4*sw^2)*
           (-15*d*(-3 + 4*sw^2 + 4*swC^2) + 3*d^2*(-3 + 4*sw^2 + 4*swC^2) - 
            24*(3 - 7*swC^2 + 4*swC^4) + 32*sw^2*(3 - 5*swC^2 + 8*swC^4))*t + 
          2*(-3 + 4*sw^2)*(-1 + 4*swC^2)*(9 - 12*swC^2 + 
            4*sw^2*(-3 + 8*swC^2))*t^2))))/(cwC^2*(-1 + d)*Pi^(2*d)*
     (mz^2 - s)^2*s*sw^2*(-1 + sw^2)*swC^2), 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {((-I/9)*2^(-5 - 2*d)*EL^6*(-9*d^3*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(s^2*(12 + 3*d^3 + 40*sw^2 - 64*sw^4 + 
          d^2*(9 + 10*sw^2 - 16*sw^4) + 2*d*(-9 - 20*sw^2 + 32*sw^4)) + 
        s*(21*d^2 - 3*d^3 + d*(-54 + 40*sw^2 - 64*sw^4) + 
          16*(3 - 5*sw^2 + 8*sw^4))*t - 2*(-2 + d)*(3 - 20*sw^2 + 32*sw^4)*
         t^2)))/((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*sw^4*(-1 + sw^2)^2), 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
  {((-I/9)*2^(-8 - d)*(-2 + d)*EL^6*s*
     (s^2*(3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
        4*d*(-9 + 30*swC^2 - 24*swC^4 + sw^2*(30 - 22*swC^2 - 40*swC^4) + 
          8*sw^4*(-3 - 5*swC^2 + 8*swC^4)) - 4*(-9 + 30*swC^2 - 24*swC^4 + 
          sw^2*(30 + 4*swC^2 - 80*swC^4) + 8*sw^4*(-3 - 10*swC^2 + 
            16*swC^4))) + 2*s*(-15*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2)) + 3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
          sw^2*(-30 + 74*swC^2 - 40*swC^4) + 8*sw^4*(3 - 5*swC^2 + 8*swC^4)))*
       t + 4*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 
        2*sw^2*(15 - 76*swC^2 + 80*swC^4))*t^2))/(cwC^2*(-1 + d)*Pi^d*
     (mz^2 - s)^3*sw^4*(-1 + sw^2)^2*swC^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {((-I/9)*2^(-5 - 2*d)*EL^6*(-9*d^3*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(s^2*(12 + 3*d^3 + 40*sw^2 - 64*sw^4 + 
          d^2*(9 + 10*sw^2 - 16*sw^4) + 2*d*(-9 - 20*sw^2 + 32*sw^4)) + 
        s*(21*d^2 - 3*d^3 + d*(-54 + 40*sw^2 - 64*sw^4) + 
          16*(3 - 5*sw^2 + 8*sw^4))*t - 2*(-2 + d)*(3 - 20*sw^2 + 32*sw^4)*
         t^2)))/((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*sw^4*(-1 + sw^2)^2), 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
  {((-I/9)*2^(-8 - d)*(-2 + d)*EL^6*s*
     (s^2*(3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
        4*d*(-9 + 30*swC^2 - 24*swC^4 + sw^2*(30 - 22*swC^2 - 40*swC^4) + 
          8*sw^4*(-3 - 5*swC^2 + 8*swC^4)) - 4*(-9 + 30*swC^2 - 24*swC^4 + 
          sw^2*(30 + 4*swC^2 - 80*swC^4) + 8*sw^4*(-3 - 10*swC^2 + 
            16*swC^4))) + 2*s*(-15*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2)) + 3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
          sw^2*(-30 + 74*swC^2 - 40*swC^4) + 8*sw^4*(3 - 5*swC^2 + 8*swC^4)))*
       t + 4*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 
        2*sw^2*(15 - 76*swC^2 + 80*swC^4))*t^2))/(cwC^2*(-1 + d)*Pi^d*
     (mz^2 - s)^3*sw^4*(-1 + sw^2)^2*swC^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {((-I/9)*2^(-5 - 2*d)*EL^6*(-9*d^3*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(s^2*(12 + 3*d^3 + 40*sw^2 - 64*sw^4 + 
          d^2*(9 + 10*sw^2 - 16*sw^4) + 2*d*(-9 - 20*sw^2 + 32*sw^4)) + 
        s*(21*d^2 - 3*d^3 + d*(-54 + 40*sw^2 - 64*sw^4) + 
          16*(3 - 5*sw^2 + 8*sw^4))*t - 2*(-2 + d)*(3 - 20*sw^2 + 32*sw^4)*
         t^2)))/((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*sw^4*(-1 + sw^2)^2), 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
  {((-I/9)*2^(-8 - d)*(-2 + d)*EL^6*s*
     (s^2*(3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
        4*d*(-9 + 30*swC^2 - 24*swC^4 + sw^2*(30 - 22*swC^2 - 40*swC^4) + 
          8*sw^4*(-3 - 5*swC^2 + 8*swC^4)) - 4*(-9 + 30*swC^2 - 24*swC^4 + 
          sw^2*(30 + 4*swC^2 - 80*swC^4) + 8*sw^4*(-3 - 10*swC^2 + 
            16*swC^4))) + 2*s*(-15*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2)) + 3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
          sw^2*(-30 + 74*swC^2 - 40*swC^4) + 8*sw^4*(3 - 5*swC^2 + 8*swC^4)))*
       t + 4*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 
        2*sw^2*(15 - 76*swC^2 + 80*swC^4))*t^2))/(cwC^2*(-1 + d)*Pi^d*
     (mz^2 - s)^3*sw^4*(-1 + sw^2)^2*swC^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {((I/9)*2^(-5 - 2*d)*EL^6*(9*d^3*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(s^2*(3*d^3*(-1 - 2*sw^2 + 4*sw^4) + 
          d^2*(-9 + 26*sw^2 - 16*sw^4 - 144*sw^6 + 128*sw^8) + 
          4*(-3 + 2*sw^2 + 32*sw^4 - 144*sw^6 + 128*sw^8) - 
          2*d*(-9 + 16*sw^2 + 40*sw^4 - 288*sw^6 + 256*sw^8)) + 
        s*(1 - 4*sw^2 + 8*sw^4)*(-21*d^2 + 3*d^3 - 16*(3 - 5*sw^2 + 8*sw^4) + 
          d*(54 - 40*sw^2 + 64*sw^4))*t + 2*(-2 + d)*(3 - 32*sw^2 + 
          136*sw^4 - 288*sw^6 + 256*sw^8)*t^2)))/
    ((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*sw^4*(-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
  {((I/9)*4^(-4 - d)*EL^6*s*(9*d^3*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(s^2*(3*d^3*(32*sw^8 + swC^2*(-5 + 4*swC^2) + 
            8*sw^6*(-7 + 8*swC^2) + sw^2*(-11 + 28*swC^2 - 16*swC^4) + 
            4*sw^4*(9 - 18*swC^2 + 8*swC^4)) + d^2*(1 - 4*sw^2 + 8*sw^4)*
           (sw^2*(90 - 92*swC^2 - 80*swC^4) - 9*(3 - 10*swC^2 + 8*swC^4) + 
            8*sw^4*(-9 - 10*swC^2 + 16*swC^4)) + 4*(1 - 4*sw^2 + 8*sw^4)*
           (-9 + 30*swC^2 - 24*swC^4 + sw^2*(30 + 4*swC^2 - 80*swC^4) + 
            8*sw^4*(-3 - 10*swC^2 + 16*swC^4)) - 2*d*(1 - 4*sw^2 + 8*sw^4)*
           (-9*(3 - 10*swC^2 + 8*swC^4) - 10*sw^2*(-9 + 4*swC^2 + 16*swC^4) + 
            8*sw^4*(-9 - 20*swC^2 + 32*swC^4))) + s*(1 - 4*sw^2 + 8*sw^4)*
         (-21*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
          3*d^3*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) - 
          16*(9 - 30*swC^2 + 24*swC^4 + sw^2*(-30 + 74*swC^2 - 40*swC^4) + 
            8*sw^4*(3 - 5*swC^2 + 8*swC^4)) + 
          2*d*(27*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(27 - 20*swC^2 + 
              32*swC^4) - 2*sw^2*(135 - 268*swC^2 + 80*swC^4)))*t + 
        2*(-2 + d)*(1 - 4*sw^2 + 8*sw^4)*(9 - 30*swC^2 + 24*swC^4 + 
          8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
            80*swC^4))*t^2)))/(cwC^2*(-1 + d)*Pi^(2*d)*(mz^2 - s)^2*
     (-mz^2 + s)*sw^4*(-1 + sw^2)^2*swC^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {((I/9)*2^(-5 - 2*d)*EL^6*(9*d^3*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(s^2*(3*d^3*(-1 - 2*sw^2 + 4*sw^4) + 
          d^2*(-9 + 26*sw^2 - 16*sw^4 - 144*sw^6 + 128*sw^8) + 
          4*(-3 + 2*sw^2 + 32*sw^4 - 144*sw^6 + 128*sw^8) - 
          2*d*(-9 + 16*sw^2 + 40*sw^4 - 288*sw^6 + 256*sw^8)) + 
        s*(1 - 4*sw^2 + 8*sw^4)*(-21*d^2 + 3*d^3 - 16*(3 - 5*sw^2 + 8*sw^4) + 
          d*(54 - 40*sw^2 + 64*sw^4))*t + 2*(-2 + d)*(3 - 32*sw^2 + 
          136*sw^4 - 288*sw^6 + 256*sw^8)*t^2)))/
    ((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*sw^4*(-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
  {((I/9)*4^(-4 - d)*EL^6*s*(9*d^3*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(s^2*(3*d^3*(32*sw^8 + swC^2*(-5 + 4*swC^2) + 
            8*sw^6*(-7 + 8*swC^2) + sw^2*(-11 + 28*swC^2 - 16*swC^4) + 
            4*sw^4*(9 - 18*swC^2 + 8*swC^4)) + d^2*(1 - 4*sw^2 + 8*sw^4)*
           (sw^2*(90 - 92*swC^2 - 80*swC^4) - 9*(3 - 10*swC^2 + 8*swC^4) + 
            8*sw^4*(-9 - 10*swC^2 + 16*swC^4)) + 4*(1 - 4*sw^2 + 8*sw^4)*
           (-9 + 30*swC^2 - 24*swC^4 + sw^2*(30 + 4*swC^2 - 80*swC^4) + 
            8*sw^4*(-3 - 10*swC^2 + 16*swC^4)) - 2*d*(1 - 4*sw^2 + 8*sw^4)*
           (-9*(3 - 10*swC^2 + 8*swC^4) - 10*sw^2*(-9 + 4*swC^2 + 16*swC^4) + 
            8*sw^4*(-9 - 20*swC^2 + 32*swC^4))) + s*(1 - 4*sw^2 + 8*sw^4)*
         (-21*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
          3*d^3*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) - 
          16*(9 - 30*swC^2 + 24*swC^4 + sw^2*(-30 + 74*swC^2 - 40*swC^4) + 
            8*sw^4*(3 - 5*swC^2 + 8*swC^4)) + 
          2*d*(27*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(27 - 20*swC^2 + 
              32*swC^4) - 2*sw^2*(135 - 268*swC^2 + 80*swC^4)))*t + 
        2*(-2 + d)*(1 - 4*sw^2 + 8*sw^4)*(9 - 30*swC^2 + 24*swC^4 + 
          8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
            80*swC^4))*t^2)))/(cwC^2*(-1 + d)*Pi^(2*d)*(mz^2 - s)^2*
     (-mz^2 + s)*sw^4*(-1 + sw^2)^2*swC^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/9)*4^(-2 - d)*EL^6*(-3*d^3*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(s^2*(3*d^3*(1 - 2*sw^2 + 4*sw^4) + 
          d^2*(-9 + 26*sw^2 - 16*sw^4 - 144*sw^6 + 128*sw^8) + 
          4*(-3 + 2*sw^2 + 32*sw^4 - 144*sw^6 + 128*sw^8) - 
          2*d*(-9 + 16*sw^2 + 40*sw^4 - 288*sw^6 + 256*sw^8)) + 
        s*(1 - 4*sw^2 + 8*sw^4)*(-21*d^2 + 3*d^3 - 16*(3 - 5*sw^2 + 8*sw^4) + 
          d*(54 - 40*sw^2 + 64*sw^4))*t + 2*(-2 + d)*(3 - 32*sw^2 + 
          136*sw^4 - 288*sw^6 + 256*sw^8)*t^2)))/
    ((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s*sw^4*(-1 + sw^2)^2), 
   ((-I/9)*2^(-5 - 2*d)*EL^6*(-9*d^3*(2*Pi)^d*s^3 + 
      2^(1 + d)*Pi^d*s*(s^2*(d^3*(3 + 6*sw^2 - 12*sw^4) + 
          d^2*(9 - 26*sw^2 + 16*sw^4 + 144*sw^6 - 128*sw^8) - 
          4*(-3 + 2*sw^2 + 32*sw^4 - 144*sw^6 + 128*sw^8) + 
          2*d*(-9 + 16*sw^2 + 40*sw^4 - 288*sw^6 + 256*sw^8)) - 
        s*(1 - 4*sw^2 + 8*sw^4)*(-21*d^2 + 3*d^3 - 16*(3 - 5*sw^2 + 8*sw^4) + 
          d*(54 - 40*sw^2 + 64*sw^4))*t - 2*(-2 + d)*(3 - 32*sw^2 + 
          136*sw^4 - 288*sw^6 + 256*sw^8)*t^2) - 
      2*ml^2*(-3*(-7 + d)*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (2*s^2*(9 + 6*sw^2 - 80*sw^4 + 288*sw^6 - 256*sw^8 + 
            d^2*sw^2*(-1 + 4*sw^2) + d*(-12 - sw^2 + 32*sw^4 - 144*sw^6 + 
              128*sw^8)) + s*(-3*d^3 + d*(-69 + 160*sw^2 - 304*sw^4) + 
            24*d^2*(1 - sw^2 + 2*sw^4) + 8*(9 - 39*sw^2 + 112*sw^4 - 
              144*sw^6 + 128*sw^8))*t - 2*(-3 + d + 8*sw^2 - 16*sw^4)*
           (3 - 20*sw^2 + 32*sw^4)*t^2))))/((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s*
     sw^4*(-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ((I/9)*2^(-7 - d)*(-2 + d)*EL^6*
     (1 - 4*sw^2 + 8*sw^4)*
     (s^2*(3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
        4*d*(-9 + 30*swC^2 - 24*swC^4 + sw^2*(30 - 22*swC^2 - 40*swC^4) + 
          8*sw^4*(-3 - 5*swC^2 + 8*swC^4)) - 4*(-9 + 30*swC^2 - 24*swC^4 + 
          sw^2*(30 + 4*swC^2 - 80*swC^4) + 8*sw^4*(-3 - 10*swC^2 + 
            16*swC^4))) + 2*s*(-15*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2)) + 3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
          sw^2*(-30 + 74*swC^2 - 40*swC^4) + 8*sw^4*(3 - 5*swC^2 + 8*swC^4)))*
       t + 4*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 
        2*sw^2*(15 - 76*swC^2 + 80*swC^4))*t^2))/(cwC^2*(-1 + d)*Pi^d*
     (mz^2 - s)^3*sw^4*(-1 + sw^2)^2*swC^2), 
   ((-I/9)*4^(-4 - d)*EL^6*(-9*d^3*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
       (s^2*(-3*d^3*(32*sw^8 + swC^2*(-5 + 4*swC^2) + 8*sw^6*(-7 + 8*swC^2) + 
            sw^2*(-11 + 28*swC^2 - 16*swC^4) + 4*sw^4*(9 - 18*swC^2 + 
              8*swC^4)) - d^2*(1 - 4*sw^2 + 8*sw^4)*
           (sw^2*(90 - 92*swC^2 - 80*swC^4) - 9*(3 - 10*swC^2 + 8*swC^4) + 
            8*sw^4*(-9 - 10*swC^2 + 16*swC^4)) - 4*(1 - 4*sw^2 + 8*sw^4)*
           (-9 + 30*swC^2 - 24*swC^4 + sw^2*(30 + 4*swC^2 - 80*swC^4) + 
            8*sw^4*(-3 - 10*swC^2 + 16*swC^4)) + 2*d*(1 - 4*sw^2 + 8*sw^4)*
           (-9*(3 - 10*swC^2 + 8*swC^4) - 10*sw^2*(-9 + 4*swC^2 + 16*swC^4) + 
            8*sw^4*(-9 - 20*swC^2 + 32*swC^4))) - s*(1 - 4*sw^2 + 8*sw^4)*
         (-21*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
          3*d^3*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) - 
          16*(9 - 30*swC^2 + 24*swC^4 + sw^2*(-30 + 74*swC^2 - 40*swC^4) + 
            8*sw^4*(3 - 5*swC^2 + 8*swC^4)) + 
          2*d*(27*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(27 - 20*swC^2 + 
              32*swC^4) - 2*sw^2*(135 - 268*swC^2 + 80*swC^4)))*t - 
        2*(-2 + d)*(1 - 4*sw^2 + 8*sw^4)*(9 - 30*swC^2 + 24*swC^4 + 
          8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
            80*swC^4))*t^2) + 2*ml^2*(9*(-7 + d)*d^2*(2*Pi)^d*s^2 + 
        2^(1 + d)*Pi^d*(s^2*(3*d^3*(4*sw^4 + swC^2*(-5 + 4*swC^2) + 
              sw^2*(-5 + 8*swC^2)) + d^2*(-192*sw^8 + 21*swC^2*(5 - 
                4*swC^2) - 48*sw^6*(-7 + 8*swC^2) + sw^2*(141 - 236*swC^2 + 
                16*swC^4) - 4*sw^4*(69 - 88*swC^2 + 16*swC^4)) + 
            2*(3 - 8*sw^2 + 16*sw^4)*(-9 + 30*swC^2 - 24*swC^4 + 
              sw^2*(30 + 4*swC^2 - 80*swC^4) + 8*sw^4*(-3 - 10*swC^2 + 
                16*swC^4)) - 4*d*(sw^2*(96 - 151*swC^2 - 4*swC^4) - 
              6*(3 - 10*swC^2 + 8*swC^4) + 64*sw^8*(-3 - 5*swC^2 + 8*swC^4) + 
              4*sw^4*(-60 + 57*swC^2 + 32*swC^4) - 16*sw^6*(-21 + swC^2 + 
                36*swC^4))) + s*(3*d^3*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
              2*sw^2*(-5 + 8*swC^2)) - 24*d^2*(1 - sw^2 + 2*sw^4)*
             (3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) - 
            8*(3 - 8*sw^2 + 16*sw^4)*(9 - 30*swC^2 + 24*swC^4 + 
              sw^2*(-30 + 74*swC^2 - 40*swC^4) + 8*sw^4*(3 - 5*swC^2 + 
                8*swC^4)) + d*(1920*sw^8 + 480*sw^6*(-7 + 8*swC^2) + 
              69*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(309 - 580*swC^2 + 
                304*swC^4) - 2*sw^2*(525 - 1256*swC^2 + 640*swC^4)))*t + 
          2*(-3 + d + 8*sw^2 - 16*sw^4)*(9 - 30*swC^2 + 24*swC^4 + 
            8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
              80*swC^4))*t^2))))/(cwC^2*(-1 + d)*Pi^(2*d)*(mz^2 - s)^2*
     (-mz^2 + s)*sw^4*(-1 + sw^2)^2*swC^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}, {((I/27)*2^(-5 - 2*d)*EL^6*(9*d^3*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(s^2*(d^3*(9 - 36*sw^2 + 48*sw^4) + 
          d^2*(-81 + 126*sw^2 + 96*sw^4 - 704*sw^6 + 512*sw^8) + 
          4*(-27 - 18*sw^2 + 288*sw^4 - 704*sw^6 + 512*sw^8) - 
          2*d*(-81 + 36*sw^2 + 480*sw^4 - 1408*sw^6 + 1024*sw^8)) + 
        s*(9 - 24*sw^2 + 32*sw^4)*(-21*d^2 + 3*d^3 - 
          16*(3 - 5*sw^2 + 8*sw^4) + d*(54 - 40*sw^2 + 64*sw^4))*t + 
        2*(-2 + d)*(27 - 252*sw^2 + 864*sw^4 - 1408*sw^6 + 1024*sw^8)*t^2)))/
    ((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*sw^4*(-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
  {((I/27)*4^(-4 - d)*EL^6*s*(81*d^3*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(s^2*(d^2*(9 - 24*sw^2 + 32*sw^4)*
           (sw^2*(90 - 92*swC^2 - 80*swC^4) - 9*(3 - 10*swC^2 + 8*swC^4) + 
            8*sw^4*(-9 - 10*swC^2 + 16*swC^4)) + 4*(9 - 24*sw^2 + 32*sw^4)*
           (-9 + 30*swC^2 - 24*swC^4 + sw^2*(30 + 4*swC^2 - 80*swC^4) + 
            8*sw^4*(-3 - 10*swC^2 + 16*swC^4)) + 
          3*d^3*(128*sw^8 + 256*sw^6*(-1 + swC^2) + 9*swC^2*(-5 + 4*swC^2) + 
            4*sw^4*(51 - 88*swC^2 + 32*swC^4) - 3*sw^2*(27 - 64*swC^2 + 
              32*swC^4)) - 2*d*(9 - 24*sw^2 + 32*sw^4)*
           (-9*(3 - 10*swC^2 + 8*swC^4) - 10*sw^2*(-9 + 4*swC^2 + 16*swC^4) + 
            8*sw^4*(-9 - 20*swC^2 + 32*swC^4))) + s*(9 - 24*sw^2 + 32*sw^4)*
         (-21*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
          3*d^3*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) - 
          16*(9 - 30*swC^2 + 24*swC^4 + sw^2*(-30 + 74*swC^2 - 40*swC^4) + 
            8*sw^4*(3 - 5*swC^2 + 8*swC^4)) + 
          2*d*(27*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(27 - 20*swC^2 + 
              32*swC^4) - 2*sw^2*(135 - 268*swC^2 + 80*swC^4)))*t + 
        2*(-2 + d)*(9 - 24*sw^2 + 32*sw^4)*(9 - 30*swC^2 + 24*swC^4 + 
          8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
            80*swC^4))*t^2)))/(cwC^2*(-1 + d)*Pi^(2*d)*(mz^2 - s)^2*
     (-mz^2 + s)*sw^4*(-1 + sw^2)^2*swC^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/27)*4^(-2 - d)*EL^6*(27*d^3*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(s^2*(12*d^3*sw^2*(-3 + 4*sw^2) + 
          d^2*(-81 + 126*sw^2 + 96*sw^4 - 704*sw^6 + 512*sw^8) + 
          4*(-27 - 18*sw^2 + 288*sw^4 - 704*sw^6 + 512*sw^8) - 
          2*d*(-81 + 36*sw^2 + 480*sw^4 - 1408*sw^6 + 1024*sw^8)) + 
        s*(9 - 24*sw^2 + 32*sw^4)*(-21*d^2 + 3*d^3 - 
          16*(3 - 5*sw^2 + 8*sw^4) + d*(54 - 40*sw^2 + 64*sw^4))*t + 
        2*(-2 + d)*(27 - 252*sw^2 + 864*sw^4 - 1408*sw^6 + 1024*sw^8)*t^2)))/
    ((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s*sw^4*(-1 + sw^2)^2), 
   ((-I/27)*2^(-5 - 2*d)*EL^6*(2*mc^2*(27*(-7 + d)*d^2*(2*Pi)^d*s^2 + 
        2^(1 + d)*Pi^d*(2*s^2*(-81 - 126*sw^2 + 720*sw^4 - 1408*sw^6 + 
            1024*sw^8 + 3*d^2*sw^2*(-3 + 8*sw^2) + 
            d*(108 + 81*sw^2 - 408*sw^4 + 704*sw^6 - 512*sw^8)) + 
          s*(27*d^3 - 24*d^2*(9 - 6*sw^2 + 8*sw^4) + 
            3*d*(207 - 360*sw^2 + 512*sw^4) - 8*(81 - 279*sw^2 + 648*sw^4 - 
              704*sw^6 + 512*sw^8))*t + 2*(-27 + 9*d + 48*sw^2 - 64*sw^4)*
           (3 - 20*sw^2 + 32*sw^4)*t^2)) - 
      s*(9*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(d^3*(9 - 36*sw^2 + 48*sw^4) + d^2*(-81 + 126*sw^2 + 96*sw^4 - 
              704*sw^6 + 512*sw^8) + 4*(-27 - 18*sw^2 + 288*sw^4 - 704*sw^6 + 
              512*sw^8) - 2*d*(-81 + 36*sw^2 + 480*sw^4 - 1408*sw^6 + 
              1024*sw^8)) + s*(9 - 24*sw^2 + 32*sw^4)*(-21*d^2 + 3*d^3 - 
            16*(3 - 5*sw^2 + 8*sw^4) + d*(54 - 40*sw^2 + 64*sw^4))*t + 
          2*(-2 + d)*(27 - 252*sw^2 + 864*sw^4 - 1408*sw^6 + 1024*sw^8)*
           t^2))))/((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s*sw^4*(-1 + sw^2)^2), 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/27)*2^(-7 - 2*d)*EL^6*(81*d^3*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(s^2*(d^2*(9 - 24*sw^2 + 32*sw^4)*
           (sw^2*(90 - 92*swC^2 - 80*swC^4) - 9*(3 - 10*swC^2 + 8*swC^4) + 
            8*sw^4*(-9 - 10*swC^2 + 16*swC^4)) + 4*(9 - 24*sw^2 + 32*sw^4)*
           (-9 + 30*swC^2 - 24*swC^4 + sw^2*(30 + 4*swC^2 - 80*swC^4) + 
            8*sw^4*(-3 - 10*swC^2 + 16*swC^4)) + 
          3*d^3*(128*sw^8 + 256*sw^6*(-1 + swC^2) + 9*swC^2*(-5 + 4*swC^2) + 
            4*sw^4*(51 - 88*swC^2 + 32*swC^4) - 3*sw^2*(27 - 64*swC^2 + 
              32*swC^4)) - 2*d*(9 - 24*sw^2 + 32*sw^4)*
           (-9*(3 - 10*swC^2 + 8*swC^4) - 10*sw^2*(-9 + 4*swC^2 + 16*swC^4) + 
            8*sw^4*(-9 - 20*swC^2 + 32*swC^4))) + s*(9 - 24*sw^2 + 32*sw^4)*
         (-21*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
          3*d^3*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) - 
          16*(9 - 30*swC^2 + 24*swC^4 + sw^2*(-30 + 74*swC^2 - 40*swC^4) + 
            8*sw^4*(3 - 5*swC^2 + 8*swC^4)) + 
          2*d*(27*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(27 - 20*swC^2 + 
              32*swC^4) - 2*sw^2*(135 - 268*swC^2 + 80*swC^4)))*t + 
        2*(-2 + d)*(9 - 24*sw^2 + 32*sw^4)*(9 - 30*swC^2 + 24*swC^4 + 
          8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
            80*swC^4))*t^2)))/(cwC^2*(-1 + d)*Pi^(2*d)*(mz^2 - s)^2*
     (-mz^2 + s)*sw^4*(-1 + sw^2)^2*swC^2), 
   ((-I/27)*4^(-4 - d)*EL^6*(-81*d^3*(2*Pi)^d*s^3 + 
      2^(1 + d)*Pi^d*s*(s^2*(-(d^2*(9 - 24*sw^2 + 32*sw^4)*
            (sw^2*(90 - 92*swC^2 - 80*swC^4) - 9*(3 - 10*swC^2 + 8*swC^4) + 
             8*sw^4*(-9 - 10*swC^2 + 16*swC^4))) - 4*(9 - 24*sw^2 + 32*sw^4)*
           (-9 + 30*swC^2 - 24*swC^4 + sw^2*(30 + 4*swC^2 - 80*swC^4) + 
            8*sw^4*(-3 - 10*swC^2 + 16*swC^4)) - 
          3*d^3*(128*sw^8 + 256*sw^6*(-1 + swC^2) + 9*swC^2*(-5 + 4*swC^2) + 
            4*sw^4*(51 - 88*swC^2 + 32*swC^4) - 3*sw^2*(27 - 64*swC^2 + 
              32*swC^4)) + 2*d*(9 - 24*sw^2 + 32*sw^4)*
           (-9*(3 - 10*swC^2 + 8*swC^4) - 10*sw^2*(-9 + 4*swC^2 + 16*swC^4) + 
            8*sw^4*(-9 - 20*swC^2 + 32*swC^4))) - s*(9 - 24*sw^2 + 32*sw^4)*
         (-21*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
          3*d^3*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) - 
          16*(9 - 30*swC^2 + 24*swC^4 + sw^2*(-30 + 74*swC^2 - 40*swC^4) + 
            8*sw^4*(3 - 5*swC^2 + 8*swC^4)) + 
          2*d*(27*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(27 - 20*swC^2 + 
              32*swC^4) - 2*sw^2*(135 - 268*swC^2 + 80*swC^4)))*t - 
        2*(-2 + d)*(9 - 24*sw^2 + 32*sw^4)*(9 - 30*swC^2 + 24*swC^4 + 
          8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
            80*swC^4))*t^2) + 2*mc^2*(81*(-7 + d)*d^2*(2*Pi)^d*s^2 + 
        2^(1 + d)*Pi^d*(s^2*(27*d^3*(4*sw^4 + swC^2*(-5 + 4*swC^2) + 
              sw^2*(-5 + 8*swC^2)) + 2*(27 - 48*sw^2 + 64*sw^4)*
             (-9 + 30*swC^2 - 24*swC^4 + sw^2*(30 + 4*swC^2 - 80*swC^4) + 
              8*sw^4*(-3 - 10*swC^2 + 16*swC^4)) - 
            3*d^2*(256*sw^8 + 512*sw^6*(-1 + swC^2) + 63*swC^2*(-5 + 
                4*swC^2) - 4*sw^4*(-147 + 116*swC^2 + 32*swC^4) + 
              sw^2*(-387 + 588*swC^2 + 48*swC^4)) - 
            4*d*(-54*(3 - 10*swC^2 + 8*swC^4) + 256*sw^8*(-3 - 5*swC^2 + 
                8*swC^4) - 256*sw^6*(-6 - swC^2 + 11*swC^4) - 
              27*sw^2*(-28 + 37*swC^2 + 12*swC^4) + 12*sw^4*(-120 + 
                49*swC^2 + 136*swC^4))) + 
          s*(27*d^3*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 
                8*swC^2)) - 24*d^2*(9 - 6*sw^2 + 8*sw^4)*(3 + 8*sw^4 - 
              10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) - 
            8*(27 - 48*sw^2 + 64*sw^4)*(9 - 30*swC^2 + 24*swC^4 + 
              sw^2*(-30 + 74*swC^2 - 40*swC^4) + 8*sw^4*(3 - 5*swC^2 + 
                8*swC^4)) + 3*d*(2560*sw^8 + 5120*sw^6*(-1 + swC^2) + 
              207*(3 - 10*swC^2 + 8*swC^4) - 18*sw^2*(155 - 352*swC^2 + 
                160*swC^4) + 8*sw^4*(627 - 1000*swC^2 + 512*swC^4)))*t + 
          2*(-27 + 9*d + 48*sw^2 - 64*sw^4)*(9 - 30*swC^2 + 24*swC^4 + 
            8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
              80*swC^4))*t^2))))/(cwC^2*(-1 + d)*Pi^(2*d)*(mz^2 - s)^2*
     (-mz^2 + s)*sw^4*(-1 + sw^2)^2*swC^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/27)*4^(-2 - d)*EL^6*(27*d^3*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(s^2*(12*d^3*sw^2*(-3 + 4*sw^2) + 
          d^2*(-81 + 126*sw^2 + 96*sw^4 - 704*sw^6 + 512*sw^8) + 
          4*(-27 - 18*sw^2 + 288*sw^4 - 704*sw^6 + 512*sw^8) - 
          2*d*(-81 + 36*sw^2 + 480*sw^4 - 1408*sw^6 + 1024*sw^8)) + 
        s*(9 - 24*sw^2 + 32*sw^4)*(-21*d^2 + 3*d^3 - 
          16*(3 - 5*sw^2 + 8*sw^4) + d*(54 - 40*sw^2 + 64*sw^4))*t + 
        2*(-2 + d)*(27 - 252*sw^2 + 864*sw^4 - 1408*sw^6 + 1024*sw^8)*t^2)))/
    ((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s*sw^4*(-1 + sw^2)^2), 
   ((-I/27)*2^(-5 - 2*d)*EL^6*(2*mt^2*(27*(-7 + d)*d^2*(2*Pi)^d*s^2 + 
        2^(1 + d)*Pi^d*(2*s^2*(-81 - 126*sw^2 + 720*sw^4 - 1408*sw^6 + 
            1024*sw^8 + 3*d^2*sw^2*(-3 + 8*sw^2) + 
            d*(108 + 81*sw^2 - 408*sw^4 + 704*sw^6 - 512*sw^8)) + 
          s*(27*d^3 - 24*d^2*(9 - 6*sw^2 + 8*sw^4) + 
            3*d*(207 - 360*sw^2 + 512*sw^4) - 8*(81 - 279*sw^2 + 648*sw^4 - 
              704*sw^6 + 512*sw^8))*t + 2*(-27 + 9*d + 48*sw^2 - 64*sw^4)*
           (3 - 20*sw^2 + 32*sw^4)*t^2)) - 
      s*(9*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(d^3*(9 - 36*sw^2 + 48*sw^4) + d^2*(-81 + 126*sw^2 + 96*sw^4 - 
              704*sw^6 + 512*sw^8) + 4*(-27 - 18*sw^2 + 288*sw^4 - 704*sw^6 + 
              512*sw^8) - 2*d*(-81 + 36*sw^2 + 480*sw^4 - 1408*sw^6 + 
              1024*sw^8)) + s*(9 - 24*sw^2 + 32*sw^4)*(-21*d^2 + 3*d^3 - 
            16*(3 - 5*sw^2 + 8*sw^4) + d*(54 - 40*sw^2 + 64*sw^4))*t + 
          2*(-2 + d)*(27 - 252*sw^2 + 864*sw^4 - 1408*sw^6 + 1024*sw^8)*
           t^2))))/((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s*sw^4*(-1 + sw^2)^2), 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/27)*2^(-7 - 2*d)*EL^6*(81*d^3*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(s^2*(d^2*(9 - 24*sw^2 + 32*sw^4)*
           (sw^2*(90 - 92*swC^2 - 80*swC^4) - 9*(3 - 10*swC^2 + 8*swC^4) + 
            8*sw^4*(-9 - 10*swC^2 + 16*swC^4)) + 4*(9 - 24*sw^2 + 32*sw^4)*
           (-9 + 30*swC^2 - 24*swC^4 + sw^2*(30 + 4*swC^2 - 80*swC^4) + 
            8*sw^4*(-3 - 10*swC^2 + 16*swC^4)) + 
          3*d^3*(128*sw^8 + 256*sw^6*(-1 + swC^2) + 9*swC^2*(-5 + 4*swC^2) + 
            4*sw^4*(51 - 88*swC^2 + 32*swC^4) - 3*sw^2*(27 - 64*swC^2 + 
              32*swC^4)) - 2*d*(9 - 24*sw^2 + 32*sw^4)*
           (-9*(3 - 10*swC^2 + 8*swC^4) - 10*sw^2*(-9 + 4*swC^2 + 16*swC^4) + 
            8*sw^4*(-9 - 20*swC^2 + 32*swC^4))) + s*(9 - 24*sw^2 + 32*sw^4)*
         (-21*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
          3*d^3*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) - 
          16*(9 - 30*swC^2 + 24*swC^4 + sw^2*(-30 + 74*swC^2 - 40*swC^4) + 
            8*sw^4*(3 - 5*swC^2 + 8*swC^4)) + 
          2*d*(27*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(27 - 20*swC^2 + 
              32*swC^4) - 2*sw^2*(135 - 268*swC^2 + 80*swC^4)))*t + 
        2*(-2 + d)*(9 - 24*sw^2 + 32*sw^4)*(9 - 30*swC^2 + 24*swC^4 + 
          8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
            80*swC^4))*t^2)))/(cwC^2*(-1 + d)*Pi^(2*d)*(mz^2 - s)^2*
     (-mz^2 + s)*sw^4*(-1 + sw^2)^2*swC^2), 
   ((-I/27)*4^(-4 - d)*EL^6*(-81*d^3*(2*Pi)^d*s^3 + 
      2^(1 + d)*Pi^d*s*(s^2*(-(d^2*(9 - 24*sw^2 + 32*sw^4)*
            (sw^2*(90 - 92*swC^2 - 80*swC^4) - 9*(3 - 10*swC^2 + 8*swC^4) + 
             8*sw^4*(-9 - 10*swC^2 + 16*swC^4))) - 4*(9 - 24*sw^2 + 32*sw^4)*
           (-9 + 30*swC^2 - 24*swC^4 + sw^2*(30 + 4*swC^2 - 80*swC^4) + 
            8*sw^4*(-3 - 10*swC^2 + 16*swC^4)) - 
          3*d^3*(128*sw^8 + 256*sw^6*(-1 + swC^2) + 9*swC^2*(-5 + 4*swC^2) + 
            4*sw^4*(51 - 88*swC^2 + 32*swC^4) - 3*sw^2*(27 - 64*swC^2 + 
              32*swC^4)) + 2*d*(9 - 24*sw^2 + 32*sw^4)*
           (-9*(3 - 10*swC^2 + 8*swC^4) - 10*sw^2*(-9 + 4*swC^2 + 16*swC^4) + 
            8*sw^4*(-9 - 20*swC^2 + 32*swC^4))) - s*(9 - 24*sw^2 + 32*sw^4)*
         (-21*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
          3*d^3*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) - 
          16*(9 - 30*swC^2 + 24*swC^4 + sw^2*(-30 + 74*swC^2 - 40*swC^4) + 
            8*sw^4*(3 - 5*swC^2 + 8*swC^4)) + 
          2*d*(27*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(27 - 20*swC^2 + 
              32*swC^4) - 2*sw^2*(135 - 268*swC^2 + 80*swC^4)))*t - 
        2*(-2 + d)*(9 - 24*sw^2 + 32*sw^4)*(9 - 30*swC^2 + 24*swC^4 + 
          8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
            80*swC^4))*t^2) + 2*mt^2*(81*(-7 + d)*d^2*(2*Pi)^d*s^2 + 
        2^(1 + d)*Pi^d*(s^2*(27*d^3*(4*sw^4 + swC^2*(-5 + 4*swC^2) + 
              sw^2*(-5 + 8*swC^2)) + 2*(27 - 48*sw^2 + 64*sw^4)*
             (-9 + 30*swC^2 - 24*swC^4 + sw^2*(30 + 4*swC^2 - 80*swC^4) + 
              8*sw^4*(-3 - 10*swC^2 + 16*swC^4)) - 
            3*d^2*(256*sw^8 + 512*sw^6*(-1 + swC^2) + 63*swC^2*(-5 + 
                4*swC^2) - 4*sw^4*(-147 + 116*swC^2 + 32*swC^4) + 
              sw^2*(-387 + 588*swC^2 + 48*swC^4)) - 
            4*d*(-54*(3 - 10*swC^2 + 8*swC^4) + 256*sw^8*(-3 - 5*swC^2 + 
                8*swC^4) - 256*sw^6*(-6 - swC^2 + 11*swC^4) - 
              27*sw^2*(-28 + 37*swC^2 + 12*swC^4) + 12*sw^4*(-120 + 
                49*swC^2 + 136*swC^4))) + 
          s*(27*d^3*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 
                8*swC^2)) - 24*d^2*(9 - 6*sw^2 + 8*sw^4)*(3 + 8*sw^4 - 
              10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) - 
            8*(27 - 48*sw^2 + 64*sw^4)*(9 - 30*swC^2 + 24*swC^4 + 
              sw^2*(-30 + 74*swC^2 - 40*swC^4) + 8*sw^4*(3 - 5*swC^2 + 
                8*swC^4)) + 3*d*(2560*sw^8 + 5120*sw^6*(-1 + swC^2) + 
              207*(3 - 10*swC^2 + 8*swC^4) - 18*sw^2*(155 - 352*swC^2 + 
                160*swC^4) + 8*sw^4*(627 - 1000*swC^2 + 512*swC^4)))*t + 
          2*(-27 + 9*d + 48*sw^2 - 64*sw^4)*(9 - 30*swC^2 + 24*swC^4 + 
            8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
              80*swC^4))*t^2))))/(cwC^2*(-1 + d)*Pi^(2*d)*(mz^2 - s)^2*
     (-mz^2 + s)*sw^4*(-1 + sw^2)^2*swC^2), 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {((I/27)*2^(-5 - 2*d)*EL^6*(9*d^3*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(s^2*(3*d^3*(3 - 6*sw^2 + 4*sw^4) + 
          d^2*(-81 + 18*sw^2 + 192*sw^4 - 272*sw^6 + 128*sw^8) + 
          4*(-27 - 54*sw^2 + 240*sw^4 - 272*sw^6 + 128*sw^8) - 
          2*d*(-81 - 72*sw^2 + 456*sw^4 - 544*sw^6 + 256*sw^8)) + 
        s*(9 - 12*sw^2 + 8*sw^4)*(-21*d^2 + 3*d^3 - 
          16*(3 - 5*sw^2 + 8*sw^4) + d*(54 - 40*sw^2 + 64*sw^4))*t + 
        2*(-2 + d)*(27 - 216*sw^2 + 552*sw^4 - 544*sw^6 + 256*sw^8)*t^2)))/
    ((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*sw^4*(-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
  {((I/27)*4^(-4 - d)*EL^6*s*(81*d^3*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(s^2*(3*d^3*(32*sw^8 + 9*swC^2*(-5 + 4*swC^2) + 
            8*sw^6*(-11 + 8*swC^2) + 4*sw^4*(27 - 34*swC^2 + 8*swC^4) - 
            3*sw^2*(21 - 44*swC^2 + 16*swC^4)) + d^2*(9 - 12*sw^2 + 8*sw^4)*
           (sw^2*(90 - 92*swC^2 - 80*swC^4) - 9*(3 - 10*swC^2 + 8*swC^4) + 
            8*sw^4*(-9 - 10*swC^2 + 16*swC^4)) + 4*(9 - 12*sw^2 + 8*sw^4)*
           (-9 + 30*swC^2 - 24*swC^4 + sw^2*(30 + 4*swC^2 - 80*swC^4) + 
            8*sw^4*(-3 - 10*swC^2 + 16*swC^4)) - 2*d*(9 - 12*sw^2 + 8*sw^4)*
           (-9*(3 - 10*swC^2 + 8*swC^4) - 10*sw^2*(-9 + 4*swC^2 + 16*swC^4) + 
            8*sw^4*(-9 - 20*swC^2 + 32*swC^4))) + s*(9 - 12*sw^2 + 8*sw^4)*
         (-21*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
          3*d^3*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) - 
          16*(9 - 30*swC^2 + 24*swC^4 + sw^2*(-30 + 74*swC^2 - 40*swC^4) + 
            8*sw^4*(3 - 5*swC^2 + 8*swC^4)) + 
          2*d*(27*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(27 - 20*swC^2 + 
              32*swC^4) - 2*sw^2*(135 - 268*swC^2 + 80*swC^4)))*t + 
        2*(-2 + d)*(9 - 12*sw^2 + 8*sw^4)*(9 - 30*swC^2 + 24*swC^4 + 
          8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
            80*swC^4))*t^2)))/(cwC^2*(-1 + d)*Pi^(2*d)*(mz^2 - s)^2*
     (-mz^2 + s)*sw^4*(-1 + sw^2)^2*swC^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/27)*4^(-2 - d)*EL^6*(27*d^3*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(s^2*(6*d^3*sw^2*(-3 + 2*sw^2) + 
          d^2*(-81 + 18*sw^2 + 192*sw^4 - 272*sw^6 + 128*sw^8) + 
          4*(-27 - 54*sw^2 + 240*sw^4 - 272*sw^6 + 128*sw^8) - 
          2*d*(-81 - 72*sw^2 + 456*sw^4 - 544*sw^6 + 256*sw^8)) + 
        s*(9 - 12*sw^2 + 8*sw^4)*(-21*d^2 + 3*d^3 - 
          16*(3 - 5*sw^2 + 8*sw^4) + d*(54 - 40*sw^2 + 64*sw^4))*t + 
        2*(-2 + d)*(27 - 216*sw^2 + 552*sw^4 - 544*sw^6 + 256*sw^8)*t^2)))/
    ((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s*sw^4*(-1 + sw^2)^2), 
   ((-I/27)*2^(-5 - 2*d)*EL^6*(2*ms^2*(27*(-7 + d)*d^2*(2*Pi)^d*s^2 + 
        2^(1 + d)*Pi^d*(2*s^2*(-81 - 198*sw^2 + 624*sw^4 - 544*sw^6 + 
            256*sw^8 + 3*d^2*sw^2*(-9 + 20*sw^2) + d*(108 + 153*sw^2 - 
              432*sw^4 + 272*sw^6 - 128*sw^8)) + 
          s*(27*d^3 - 24*d^2*(9 - 3*sw^2 + 2*sw^4) + 
            d*(621 - 720*sw^2 + 816*sw^4) - 8*(81 - 207*sw^2 + 384*sw^4 - 
              272*sw^6 + 128*sw^8))*t + 2*(-27 + 9*d + 24*sw^2 - 16*sw^4)*
           (3 - 20*sw^2 + 32*sw^4)*t^2)) - 
      s*(9*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(3*d^3*(3 - 6*sw^2 + 4*sw^4) + d^2*(-81 + 18*sw^2 + 192*sw^4 - 
              272*sw^6 + 128*sw^8) + 4*(-27 - 54*sw^2 + 240*sw^4 - 272*sw^6 + 
              128*sw^8) - 2*d*(-81 - 72*sw^2 + 456*sw^4 - 544*sw^6 + 
              256*sw^8)) + s*(9 - 12*sw^2 + 8*sw^4)*(-21*d^2 + 3*d^3 - 
            16*(3 - 5*sw^2 + 8*sw^4) + d*(54 - 40*sw^2 + 64*sw^4))*t + 
          2*(-2 + d)*(27 - 216*sw^2 + 552*sw^4 - 544*sw^6 + 256*sw^8)*t^2))))/
    ((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s*sw^4*(-1 + sw^2)^2), 0, 0, 0, 0, 0, 0}, 
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/27)*2^(-7 - 2*d)*EL^6*(-81*d^3*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(s^2*(3*d^3*(32*sw^8 + 8*sw^6*(-11 + 8*swC^2) + 
            9*(3 - 5*swC^2 + 4*swC^4) + 4*sw^4*(27 - 34*swC^2 + 8*swC^4) - 
            3*sw^2*(21 - 44*swC^2 + 16*swC^4)) + d^2*(9 - 12*sw^2 + 8*sw^4)*
           (sw^2*(90 - 92*swC^2 - 80*swC^4) - 9*(3 - 10*swC^2 + 8*swC^4) + 
            8*sw^4*(-9 - 10*swC^2 + 16*swC^4)) + 4*(9 - 12*sw^2 + 8*sw^4)*
           (-9 + 30*swC^2 - 24*swC^4 + sw^2*(30 + 4*swC^2 - 80*swC^4) + 
            8*sw^4*(-3 - 10*swC^2 + 16*swC^4)) - 2*d*(9 - 12*sw^2 + 8*sw^4)*
           (-9*(3 - 10*swC^2 + 8*swC^4) - 10*sw^2*(-9 + 4*swC^2 + 16*swC^4) + 
            8*sw^4*(-9 - 20*swC^2 + 32*swC^4))) + s*(9 - 12*sw^2 + 8*sw^4)*
         (-21*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
          3*d^3*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) - 
          16*(9 - 30*swC^2 + 24*swC^4 + sw^2*(-30 + 74*swC^2 - 40*swC^4) + 
            8*sw^4*(3 - 5*swC^2 + 8*swC^4)) + 
          2*d*(27*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(27 - 20*swC^2 + 
              32*swC^4) - 2*sw^2*(135 - 268*swC^2 + 80*swC^4)))*t + 
        2*(-2 + d)*(9 - 12*sw^2 + 8*sw^4)*(9 - 30*swC^2 + 24*swC^4 + 
          8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
            80*swC^4))*t^2)))/(cwC^2*(-1 + d)*Pi^(2*d)*(mz^2 - s)^2*
     (-mz^2 + s)*sw^4*(-1 + sw^2)^2*swC^2), 
   ((-I/27)*4^(-4 - d)*EL^6*(2*ms^2*(81*(-7 + d)*d^2*(2*Pi)^d*s^2 + 
        2^(1 + d)*Pi^d*(s^2*(27*d^3*(4*sw^4 + swC^2*(-5 + 4*swC^2) + 
              sw^2*(-5 + 8*swC^2)) + 2*(27 - 24*sw^2 + 16*sw^4)*
             (-9 + 30*swC^2 - 24*swC^4 + sw^2*(30 + 4*swC^2 - 80*swC^4) + 
              8*sw^4*(-3 - 10*swC^2 + 16*swC^4)) - 
            4*d*(-54*(3 - 10*swC^2 + 8*swC^4) + 64*sw^8*(-3 - 5*swC^2 + 
                8*swC^4) + 36*sw^4*(-24 - 11*swC^2 + 48*swC^4) - 
              16*sw^6*(-33 - 19*swC^2 + 68*swC^4) - 9*sw^2*(-72 + 71*swC^2 + 
                68*swC^4)) - 3*d^2*(64*sw^8 + 63*swC^2*(-5 + 4*swC^2) + 
              16*sw^6*(-11 + 8*swC^2) + 9*sw^2*(-39 + 52*swC^2 + 16*swC^4) - 
              4*sw^4*(-99 + 8*swC^2 + 80*swC^4))) + 
          s*(27*d^3*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 
                8*swC^2)) - 24*d^2*(9 - 3*sw^2 + 2*sw^4)*(3 + 8*sw^4 - 
              10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) - 
            8*(27 - 24*sw^2 + 16*sw^4)*(9 - 30*swC^2 + 24*swC^4 + 
              sw^2*(-30 + 74*swC^2 - 40*swC^4) + 8*sw^4*(3 - 5*swC^2 + 
                8*swC^4)) + 3*d*(640*sw^8 + 160*sw^6*(-11 + 8*swC^2) + 
              207*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(387 - 460*swC^2 + 
                272*swC^4) - 6*sw^2*(405 - 856*swC^2 + 320*swC^4)))*t + 
          2*(-27 + 9*d + 24*sw^2 - 16*sw^4)*(9 - 30*swC^2 + 24*swC^4 + 
            8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
              80*swC^4))*t^2)) - s*(81*d^3*(2*Pi)^d*s^2 + 
        2^(1 + d)*Pi^d*(s^2*(3*d^3*(32*sw^8 + 9*swC^2*(-5 + 4*swC^2) + 
              8*sw^6*(-11 + 8*swC^2) + 4*sw^4*(27 - 34*swC^2 + 8*swC^4) - 
              3*sw^2*(21 - 44*swC^2 + 16*swC^4)) + d^2*(9 - 12*sw^2 + 8*sw^4)*
             (sw^2*(90 - 92*swC^2 - 80*swC^4) - 9*(3 - 10*swC^2 + 8*swC^4) + 
              8*sw^4*(-9 - 10*swC^2 + 16*swC^4)) + 4*(9 - 12*sw^2 + 8*sw^4)*
             (-9 + 30*swC^2 - 24*swC^4 + sw^2*(30 + 4*swC^2 - 80*swC^4) + 
              8*sw^4*(-3 - 10*swC^2 + 16*swC^4)) - 2*d*(9 - 12*sw^2 + 8*sw^4)*
             (-9*(3 - 10*swC^2 + 8*swC^4) - 10*sw^2*(-9 + 4*swC^2 + 
                16*swC^4) + 8*sw^4*(-9 - 20*swC^2 + 32*swC^4))) + 
          s*(9 - 12*sw^2 + 8*sw^4)*(-21*d^2*(3 + 8*sw^4 - 10*swC^2 + 
              8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 3*d^3*(3 + 8*sw^4 - 
              10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) - 
            16*(9 - 30*swC^2 + 24*swC^4 + sw^2*(-30 + 74*swC^2 - 40*swC^4) + 
              8*sw^4*(3 - 5*swC^2 + 8*swC^4)) + 
            2*d*(27*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(27 - 20*swC^2 + 
                32*swC^4) - 2*sw^2*(135 - 268*swC^2 + 80*swC^4)))*t + 
          2*(-2 + d)*(9 - 12*sw^2 + 8*sw^4)*(9 - 30*swC^2 + 24*swC^4 + 
            8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
              80*swC^4))*t^2))))/(cwC^2*(-1 + d)*Pi^(2*d)*(mz^2 - s)^2*
     (-mz^2 + s)*sw^4*(-1 + sw^2)^2*swC^2), 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/27)*4^(-2 - d)*EL^6*(27*d^3*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(s^2*(6*d^3*sw^2*(-3 + 2*sw^2) + 
          d^2*(-81 + 18*sw^2 + 192*sw^4 - 272*sw^6 + 128*sw^8) + 
          4*(-27 - 54*sw^2 + 240*sw^4 - 272*sw^6 + 128*sw^8) - 
          2*d*(-81 - 72*sw^2 + 456*sw^4 - 544*sw^6 + 256*sw^8)) + 
        s*(9 - 12*sw^2 + 8*sw^4)*(-21*d^2 + 3*d^3 - 
          16*(3 - 5*sw^2 + 8*sw^4) + d*(54 - 40*sw^2 + 64*sw^4))*t + 
        2*(-2 + d)*(27 - 216*sw^2 + 552*sw^4 - 544*sw^6 + 256*sw^8)*t^2)))/
    ((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s*sw^4*(-1 + sw^2)^2), 
   ((-I/27)*2^(-5 - 2*d)*EL^6*(2*mb^2*(27*(-7 + d)*d^2*(2*Pi)^d*s^2 + 
        2^(1 + d)*Pi^d*(2*s^2*(-81 - 198*sw^2 + 624*sw^4 - 544*sw^6 + 
            256*sw^8 + 3*d^2*sw^2*(-9 + 20*sw^2) + d*(108 + 153*sw^2 - 
              432*sw^4 + 272*sw^6 - 128*sw^8)) + 
          s*(27*d^3 - 24*d^2*(9 - 3*sw^2 + 2*sw^4) + 
            d*(621 - 720*sw^2 + 816*sw^4) - 8*(81 - 207*sw^2 + 384*sw^4 - 
              272*sw^6 + 128*sw^8))*t + 2*(-27 + 9*d + 24*sw^2 - 16*sw^4)*
           (3 - 20*sw^2 + 32*sw^4)*t^2)) - 
      s*(9*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(3*d^3*(3 - 6*sw^2 + 4*sw^4) + d^2*(-81 + 18*sw^2 + 192*sw^4 - 
              272*sw^6 + 128*sw^8) + 4*(-27 - 54*sw^2 + 240*sw^4 - 272*sw^6 + 
              128*sw^8) - 2*d*(-81 - 72*sw^2 + 456*sw^4 - 544*sw^6 + 
              256*sw^8)) + s*(9 - 12*sw^2 + 8*sw^4)*(-21*d^2 + 3*d^3 - 
            16*(3 - 5*sw^2 + 8*sw^4) + d*(54 - 40*sw^2 + 64*sw^4))*t + 
          2*(-2 + d)*(27 - 216*sw^2 + 552*sw^4 - 544*sw^6 + 256*sw^8)*t^2))))/
    ((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s*sw^4*(-1 + sw^2)^2), 0, 0, 0, 0}, 
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/27)*2^(-7 - 2*d)*EL^6*(-81*d^3*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(s^2*(3*d^3*(32*sw^8 + 8*sw^6*(-11 + 8*swC^2) + 
            9*(3 - 5*swC^2 + 4*swC^4) + 4*sw^4*(27 - 34*swC^2 + 8*swC^4) - 
            3*sw^2*(21 - 44*swC^2 + 16*swC^4)) + d^2*(9 - 12*sw^2 + 8*sw^4)*
           (sw^2*(90 - 92*swC^2 - 80*swC^4) - 9*(3 - 10*swC^2 + 8*swC^4) + 
            8*sw^4*(-9 - 10*swC^2 + 16*swC^4)) + 4*(9 - 12*sw^2 + 8*sw^4)*
           (-9 + 30*swC^2 - 24*swC^4 + sw^2*(30 + 4*swC^2 - 80*swC^4) + 
            8*sw^4*(-3 - 10*swC^2 + 16*swC^4)) - 2*d*(9 - 12*sw^2 + 8*sw^4)*
           (-9*(3 - 10*swC^2 + 8*swC^4) - 10*sw^2*(-9 + 4*swC^2 + 16*swC^4) + 
            8*sw^4*(-9 - 20*swC^2 + 32*swC^4))) + s*(9 - 12*sw^2 + 8*sw^4)*
         (-21*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
          3*d^3*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) - 
          16*(9 - 30*swC^2 + 24*swC^4 + sw^2*(-30 + 74*swC^2 - 40*swC^4) + 
            8*sw^4*(3 - 5*swC^2 + 8*swC^4)) + 
          2*d*(27*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(27 - 20*swC^2 + 
              32*swC^4) - 2*sw^2*(135 - 268*swC^2 + 80*swC^4)))*t + 
        2*(-2 + d)*(9 - 12*sw^2 + 8*sw^4)*(9 - 30*swC^2 + 24*swC^4 + 
          8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
            80*swC^4))*t^2)))/(cwC^2*(-1 + d)*Pi^(2*d)*(mz^2 - s)^2*
     (-mz^2 + s)*sw^4*(-1 + sw^2)^2*swC^2), 
   ((-I/27)*4^(-4 - d)*EL^6*(2*mb^2*(81*(-7 + d)*d^2*(2*Pi)^d*s^2 + 
        2^(1 + d)*Pi^d*(s^2*(27*d^3*(4*sw^4 + swC^2*(-5 + 4*swC^2) + 
              sw^2*(-5 + 8*swC^2)) + 2*(27 - 24*sw^2 + 16*sw^4)*
             (-9 + 30*swC^2 - 24*swC^4 + sw^2*(30 + 4*swC^2 - 80*swC^4) + 
              8*sw^4*(-3 - 10*swC^2 + 16*swC^4)) - 
            4*d*(-54*(3 - 10*swC^2 + 8*swC^4) + 64*sw^8*(-3 - 5*swC^2 + 
                8*swC^4) + 36*sw^4*(-24 - 11*swC^2 + 48*swC^4) - 
              16*sw^6*(-33 - 19*swC^2 + 68*swC^4) - 9*sw^2*(-72 + 71*swC^2 + 
                68*swC^4)) - 3*d^2*(64*sw^8 + 63*swC^2*(-5 + 4*swC^2) + 
              16*sw^6*(-11 + 8*swC^2) + 9*sw^2*(-39 + 52*swC^2 + 16*swC^4) - 
              4*sw^4*(-99 + 8*swC^2 + 80*swC^4))) + 
          s*(27*d^3*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 
                8*swC^2)) - 24*d^2*(9 - 3*sw^2 + 2*sw^4)*(3 + 8*sw^4 - 
              10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) - 
            8*(27 - 24*sw^2 + 16*sw^4)*(9 - 30*swC^2 + 24*swC^4 + 
              sw^2*(-30 + 74*swC^2 - 40*swC^4) + 8*sw^4*(3 - 5*swC^2 + 
                8*swC^4)) + 3*d*(640*sw^8 + 160*sw^6*(-11 + 8*swC^2) + 
              207*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(387 - 460*swC^2 + 
                272*swC^4) - 6*sw^2*(405 - 856*swC^2 + 320*swC^4)))*t + 
          2*(-27 + 9*d + 24*sw^2 - 16*sw^4)*(9 - 30*swC^2 + 24*swC^4 + 
            8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
              80*swC^4))*t^2)) - s*(81*d^3*(2*Pi)^d*s^2 + 
        2^(1 + d)*Pi^d*(s^2*(3*d^3*(32*sw^8 + 9*swC^2*(-5 + 4*swC^2) + 
              8*sw^6*(-11 + 8*swC^2) + 4*sw^4*(27 - 34*swC^2 + 8*swC^4) - 
              3*sw^2*(21 - 44*swC^2 + 16*swC^4)) + d^2*(9 - 12*sw^2 + 8*sw^4)*
             (sw^2*(90 - 92*swC^2 - 80*swC^4) - 9*(3 - 10*swC^2 + 8*swC^4) + 
              8*sw^4*(-9 - 10*swC^2 + 16*swC^4)) + 4*(9 - 12*sw^2 + 8*sw^4)*
             (-9 + 30*swC^2 - 24*swC^4 + sw^2*(30 + 4*swC^2 - 80*swC^4) + 
              8*sw^4*(-3 - 10*swC^2 + 16*swC^4)) - 2*d*(9 - 12*sw^2 + 8*sw^4)*
             (-9*(3 - 10*swC^2 + 8*swC^4) - 10*sw^2*(-9 + 4*swC^2 + 
                16*swC^4) + 8*sw^4*(-9 - 20*swC^2 + 32*swC^4))) + 
          s*(9 - 12*sw^2 + 8*sw^4)*(-21*d^2*(3 + 8*sw^4 - 10*swC^2 + 
              8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 3*d^3*(3 + 8*sw^4 - 
              10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) - 
            16*(9 - 30*swC^2 + 24*swC^4 + sw^2*(-30 + 74*swC^2 - 40*swC^4) + 
              8*sw^4*(3 - 5*swC^2 + 8*swC^4)) + 
            2*d*(27*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(27 - 20*swC^2 + 
                32*swC^4) - 2*sw^2*(135 - 268*swC^2 + 80*swC^4)))*t + 
          2*(-2 + d)*(9 - 12*sw^2 + 8*sw^4)*(9 - 30*swC^2 + 24*swC^4 + 
            8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
              80*swC^4))*t^2))))/(cwC^2*(-1 + d)*Pi^(2*d)*(mz^2 - s)^2*
     (-mz^2 + s)*sw^4*(-1 + sw^2)^2*swC^2), 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/9)*2^(3 - d)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
    ((-1 + d)*Pi^d*s^3), ((I/9)*2^(2 - d)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
     (s + 4*mz^2*(-1 + sw^2)*GaugeXi[W]))/((-1 + d)*Pi^d*s^3), 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/9)*4^(-1 - d)*EL^6*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
       (2*s^2*(3 + 10*swC^2 - 16*swC^4 + d*(-3 - 5*swC^2 + 8*swC^4)) + 
        s*(-15*d + 3*d^2 + 8*(3 - 5*swC^2 + 8*swC^4))*t + 
        2*(3 - 20*swC^2 + 32*swC^4)*t^2)))/(cwC^2*(-1 + d)*Pi^(2*d)*s^2*
     (-mz^2 + s)*swC^2), ((I/9)*2^(-3 - 2*d)*EL^6*(3*d^2*(2*Pi)^d*s^3 + 
      2^(1 + d)*Pi^d*s*(2*s^2*(3 + 10*swC^2 - 16*swC^4 + 
          d*(-3 - 5*swC^2 + 8*swC^4)) + s*(-15*d + 3*d^2 + 
          8*(3 - 5*swC^2 + 8*swC^4))*t + 2*(3 - 20*swC^2 + 32*swC^4)*t^2) - 
      4*mz^2*(1 - sw^2)*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (2*s^2*(3 + 10*swC^2 - 16*swC^4 + d*(-3 - 5*swC^2 + 8*swC^4)) + 
          s*(-15*d + 3*d^2 + 8*(3 - 5*swC^2 + 8*swC^4))*t + 
          2*(3 - 20*swC^2 + 32*swC^4)*t^2))*GaugeXi[W]))/
    (cwC^2*(-1 + d)*Pi^(2*d)*s^2*(-mz^2 + s)*swC^2), 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((I/9)*EL^6*(-1 + 2*sw^2)*(-1 + 4*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
    ((-1 + d)*(2*Pi)^d*s^2*(-mz^2 + s)*sw^2*(-1 + sw^2)), 
   ((-I/9)*2^(-1 - d)*EL^6*(-1 + 2*sw^2)*(-1 + 4*sw^2)*
     ((-2 + d)*s^2 + 4*s*t + 4*t^2)*(s + 4*mz^2*(-1 + sw^2)*GaugeXi[W]))/
    ((-1 + d)*Pi^d*s^2*(-mz^2 + s)*sw^2*(-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/9)*4^(-2 - d)*EL^6*(1 - 2*sw^2)*(-3*d^2*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(s^2*(-6 + 4*swC^2 + 16*swC^4 + 3*d^2*(sw^2 + swC^2) + 
          sw^2*(12 + 40*swC^2 - 64*swC^4) + 2*d*(3 - 4*swC^2 - 4*swC^4 + 
            2*sw^2*(-3 - 5*swC^2 + 8*swC^4))) + 
        s*(-15*d*(-1 + 2*sw^2 + 2*swC^2) + d^2*(-3 + 6*sw^2 + 6*swC^2) + 
          8*(-3 + 8*swC^2 - 4*swC^4 + 2*sw^2*(3 - 5*swC^2 + 8*swC^4)))*t + 
        2*(-3 + 8*swC^2)*(1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t^2)))/
    (cwC^2*(-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s*sw^2*(-1 + sw^2)*swC^2), 
   ((I/9)*2^(-5 - 2*d)*EL^6*(1 - 2*sw^2)*(-3*d^2*(2*Pi)^d*s^3 + 
      2^(1 + d)*Pi^d*s*(s^2*(-6 + 4*swC^2 + 16*swC^4 + 3*d^2*(sw^2 + swC^2) + 
          sw^2*(12 + 40*swC^2 - 64*swC^4) + 2*d*(3 - 4*swC^2 - 4*swC^4 + 
            2*sw^2*(-3 - 5*swC^2 + 8*swC^4))) + 
        s*(-15*d*(-1 + 2*sw^2 + 2*swC^2) + d^2*(-3 + 6*sw^2 + 6*swC^2) + 
          8*(-3 + 8*swC^2 - 4*swC^4 + 2*sw^2*(3 - 5*swC^2 + 8*swC^4)))*t + 
        2*(-3 + 8*swC^2)*(1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t^2) - 
      4*mz^2*(1 - sw^2)*(-3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(-6 + 4*swC^2 + 16*swC^4 + 3*d^2*(sw^2 + swC^2) + 
            sw^2*(12 + 40*swC^2 - 64*swC^4) + 2*d*(3 - 4*swC^2 - 4*swC^4 + 
              2*sw^2*(-3 - 5*swC^2 + 8*swC^4))) + 
          s*(-15*d*(-1 + 2*sw^2 + 2*swC^2) + d^2*(-3 + 6*sw^2 + 6*swC^2) + 
            8*(-3 + 8*swC^2 - 4*swC^4 + 2*sw^2*(3 - 5*swC^2 + 8*swC^4)))*t + 
          2*(-3 + 8*swC^2)*(1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t^2))*
       GaugeXi[W]))/(cwC^2*(-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s*sw^2*(-1 + sw^2)*
     swC^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, ((I/9)*2^(-1 - d)*EL^6*(-1 + 2*sw^2)*(-3 + 8*sw^2)*
     ((-2 + d)*s^2 + 4*s*t + 4*t^2))/((-1 + d)*Pi^d*s^2*(-mz^2 + s)*sw^2*
     (-1 + sw^2)), ((-I/9)*4^(-1 - d)*EL^6*(1 - 2*sw^2)*
     (-3*d*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*(s^2*(3 + 4*(-2 + d)*sw^2) + 
        2*s*(-3 + 8*sw^2)*t + 2*(-3 + 8*sw^2)*t^2) + 
      2^(2 + d)*mz^2*Pi^d*(-1 + sw^2)*(-3 + 8*sw^2)*((-2 + d)*s^2 + 4*s*t + 
        4*t^2)*GaugeXi[W]))/((-1 + d)*Pi^(2*d)*(mz^2 - s)*s^2*sw^2*
     (-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, ((-I/9)*2^(-5 - 2*d)*EL^6*(1 - 2*sw^2)*
     (-9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
       (2*s^2*(-9 - 6*swC^2 + 24*swC^4 + 3*d^2*(sw^2 + swC^2) + 
          sw^2*(12 + 40*swC^2 - 64*swC^4) - 3*d*(-3 + swC^2 + 4*swC^4) + 
          4*d*sw^2*(-3 - 5*swC^2 + 8*swC^4)) + 
        s*(-15*d*(-3 + 4*sw^2 + 4*swC^2) + 3*d^2*(-3 + 4*sw^2 + 4*swC^2) - 
          24*(3 - 7*swC^2 + 4*swC^4) + 32*sw^2*(3 - 5*swC^2 + 8*swC^4))*t + 
        2*(-1 + 4*swC^2)*(9 - 12*swC^2 + 4*sw^2*(-3 + 8*swC^2))*t^2)))/
    (cwC^2*(-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s*sw^2*(-1 + sw^2)*swC^2), 
   ((I/9)*4^(-3 - d)*EL^6*(1 - 2*sw^2)*(-9*d^2*(2*Pi)^d*s^3 + 
      2^(1 + d)*Pi^d*s*(2*s^2*(-9 - 6*swC^2 + 24*swC^4 + 
          3*d^2*(sw^2 + swC^2) + sw^2*(12 + 40*swC^2 - 64*swC^4) - 
          3*d*(-3 + swC^2 + 4*swC^4) + 4*d*sw^2*(-3 - 5*swC^2 + 8*swC^4)) + 
        s*(-15*d*(-3 + 4*sw^2 + 4*swC^2) + 3*d^2*(-3 + 4*sw^2 + 4*swC^2) - 
          24*(3 - 7*swC^2 + 4*swC^4) + 32*sw^2*(3 - 5*swC^2 + 8*swC^4))*t + 
        2*(-1 + 4*swC^2)*(9 - 12*swC^2 + 4*sw^2*(-3 + 8*swC^2))*t^2) - 
      4*mz^2*(1 - sw^2)*(-9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (2*s^2*(-9 - 6*swC^2 + 24*swC^4 + 3*d^2*(sw^2 + swC^2) + 
            sw^2*(12 + 40*swC^2 - 64*swC^4) - 3*d*(-3 + swC^2 + 4*swC^4) + 
            4*d*sw^2*(-3 - 5*swC^2 + 8*swC^4)) + 
          s*(-15*d*(-3 + 4*sw^2 + 4*swC^2) + 3*d^2*(-3 + 4*sw^2 + 4*swC^2) - 
            24*(3 - 7*swC^2 + 4*swC^4) + 32*sw^2*(3 - 5*swC^2 + 8*swC^4))*t + 
          2*(-1 + 4*swC^2)*(9 - 12*swC^2 + 4*sw^2*(-3 + 8*swC^2))*t^2))*
       GaugeXi[W]))/(cwC^2*(-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s*sw^2*(-1 + sw^2)*
     swC^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/9)*2^(-5 - 2*d)*EL^6*(3*d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
       (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
        s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
        2*(3 - 20*sw^2 + 32*sw^4)*t^2) + mh^2*(-3*d^2*(2*Pi)^d*s^2 + 
        2^(1 + d)*Pi^d*(s^2*(6 + 3*d^2 + 20*sw^2 - 32*sw^4 + 
            2*d*(-3 - 5*sw^2 + 8*sw^4)) + s*(-15*d + 3*d^2 + 
            8*(3 - 5*sw^2 + 8*sw^4))*t + 2*(3 - 20*sw^2 + 32*sw^4)*t^2)) - 
      mz^2*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
          s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[Z]))/
    ((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s^2*sw^4*(-1 + sw^2)^2), 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, ((-I/9)*2^(-5 - 2*d)*EL^6*(3*d^2*(2*Pi)^d*s^3 + 
      2^(1 + d)*Pi^d*s*(2*s^2*(3 + 10*sw^2 - 16*sw^4 + 
          d*(-3 - 5*sw^2 + 8*sw^4)) + s*(-15*d + 3*d^2 + 
          8*(3 - 5*sw^2 + 8*sw^4))*t + 2*(3 - 20*sw^2 + 32*sw^4)*t^2) + 
      mh^2*(-9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(-6 + 3*d^2 - 20*sw^2 + 32*sw^4 + d*(6 + 10*sw^2 - 16*sw^4)) + 
          s*(15*d - 3*d^2 - 8*(3 - 5*sw^2 + 8*sw^4))*t - 
          2*(3 - 20*sw^2 + 32*sw^4)*t^2)) + 
      mz^2*(-9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (2*s^2*(3 + 3*d^2 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
          s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[Z]))/
    ((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s^2*sw^4*(-1 + sw^2)^2), 
   ((I/9)*2^(-5 - 2*d)*EL^6*
     (((3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-3 - 10*sw^2 + 16*sw^4) + 
           (-3 + 20*sw^2 - 32*sw^4)*t))*(mh^2 - s + mz^2*GaugeXi[Z])^2)/s - 
      ((mh^2 - s + mz^2*GaugeXi[Z])*
        (s*(3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-3 - 10*sw^2 + 16*sw^4) + 
             (-3 + 20*sw^2 - 32*sw^4)*t)) + mh^2*(-9*d*(2*Pi)^d*s + 
           2^(1 + d)*Pi^d*(s*(3 + 3*d + 10*sw^2 - 16*sw^4) + 
             (3 - 20*sw^2 + 32*sw^4)*t)) - mz^2*(3*d*(2*Pi)^d*s + 
           2^(1 + d)*Pi^d*(s*(-3 - 10*sw^2 + 16*sw^4) + 
             (-3 + 20*sw^2 - 32*sw^4)*t))*GaugeXi[Z]))/s - 
      ((2*Pi)^d*(-1 + 4*sw^2)*(-3 + 8*sw^2)*(d*(mh^2 - s)^2 + 
         2*mz^2*((-2 + d)*mh^2 - d*s)*GaugeXi[Z] + d*mz^4*GaugeXi[Z]^2))/
       (-1 + d) - ((2*Pi)^d*(3 - 20*sw^2 + 32*sw^4)*(d*(mh^2 - s)^2 + 
         2*mz^2*((-2 + d)*mh^2 - d*s)*GaugeXi[Z] + d*mz^4*GaugeXi[Z]^2))/
       (-1 + d) + 
      (2*((-(2^(1 + d)*mh^2*Pi^d*s*(-6 + 3*d - 20*sw^2 + 32*sw^4)) + 
           mh^4*(3*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(-3 - 10*sw^2 + 16*sw^4)) + 
           s^2*(3*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(-3 - 10*sw^2 + 16*sw^4)))*t - 
         2^(1 + d)*mz^2*Pi^d*(s*(-6 + 3*d - 20*sw^2 + 32*sw^4)*t + 
           mh^2*(s*(-6 + 3*d - 20*sw^2 + 32*sw^4) + 3*d*t - 
             4*(3 - 5*sw^2 + 8*sw^4)*t))*GaugeXi[Z] + 
         mz^4*(3*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(-3 - 10*sw^2 + 16*sw^4))*t*
          GaugeXi[Z]^2))/s + ((-3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
          (2*s*(3 - 5*sw^2 + 8*sw^4) + (3 - 20*sw^2 + 32*sw^4)*t))*
        ((mh^2 - s)^2*(d*s + 2*t) + 2*mz^2*(mh^2*((-2 + d)*s - 2*t) - 
           s*(d*s + 2*t))*GaugeXi[Z] + mz^4*(d*s + 2*t)*GaugeXi[Z]^2))/
       ((-1 + d)*s^2)))/(Pi^(2*d)*(mz^2 - s)^2*sw^4*(-1 + sw^2)^2), 0, 0}, 
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((I/9)*2^(-8 - d)*EL^6*
     (s^2*(3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
        4*d*(-9 + 30*swC^2 - 24*swC^4 + sw^2*(30 - 22*swC^2 - 40*swC^4) + 
          8*sw^4*(-3 - 5*swC^2 + 8*swC^4)) - 4*(-9 + 30*swC^2 - 24*swC^4 + 
          sw^2*(30 + 4*swC^2 - 80*swC^4) + 8*sw^4*(-3 - 10*swC^2 + 
            16*swC^4))) + 2*s*(-15*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2)) + 3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
          sw^2*(-30 + 74*swC^2 - 40*swC^4) + 8*sw^4*(3 - 5*swC^2 + 8*swC^4)))*
       t + 4*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 
        2*sw^2*(15 - 76*swC^2 + 80*swC^4))*t^2)*(mh^2 + s - mz^2*GaugeXi[Z]))/
    (cwC^2*(-1 + d)*Pi^d*(mz^2 - s)^3*s*sw^4*(-1 + sw^2)^2*swC^2), 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, ((I/9)*2^(-8 - d)*EL^6*
     (s^2*(3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
        4*d*(-9 + 30*swC^2 - 24*swC^4 + sw^2*(30 - 22*swC^2 - 40*swC^4) + 
          8*sw^4*(-3 - 5*swC^2 + 8*swC^4)) - 4*(-9 + 30*swC^2 - 24*swC^4 + 
          sw^2*(30 + 4*swC^2 - 80*swC^4) + 8*sw^4*(-3 - 10*swC^2 + 
            16*swC^4))) + 2*s*(-15*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2)) + 3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
          sw^2*(-30 + 74*swC^2 - 40*swC^4) + 8*sw^4*(3 - 5*swC^2 + 8*swC^4)))*
       t + 4*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 
        2*sw^2*(15 - 76*swC^2 + 80*swC^4))*t^2)*
     (-mh^2 + s + mz^2*GaugeXi[Z]))/(cwC^2*(-1 + d)*Pi^d*(mz^2 - s)^3*s*sw^4*
     (-1 + sw^2)^2*swC^2), ((-I/9)*2^(-8 - d)*EL^6*
     (s^2*(3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
        4*d*(-9 + 30*swC^2 - 24*swC^4 + sw^2*(30 - 22*swC^2 - 40*swC^4) + 
          8*sw^4*(-3 - 5*swC^2 + 8*swC^4)) - 4*(-9 + 30*swC^2 - 24*swC^4 + 
          sw^2*(30 + 4*swC^2 - 80*swC^4) + 8*sw^4*(-3 - 10*swC^2 + 
            16*swC^4))) + 2*s*(-15*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2)) + 3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
          sw^2*(-30 + 74*swC^2 - 40*swC^4) + 8*sw^4*(3 - 5*swC^2 + 8*swC^4)))*
       t + 4*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 
        2*sw^2*(15 - 76*swC^2 + 80*swC^4))*t^2)*((mh^2 - s)^2 - 
      2*mz^2*(mh^2 + s)*GaugeXi[Z] + mz^4*GaugeXi[Z]^2))/
    (cwC^2*(-1 + d)*Pi^d*(mz^2 - s)^3*s*sw^4*(-1 + sw^2)^2*swC^2), 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/9)*4^(-2 - d)*EL^6*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
       (2*s^2*(3*d^2*sw^2*(-1 + sw^2) + d*(1 - 2*sw^2)^2*(-3 - 5*sw^2 + 
            8*sw^4) - (1 - 2*sw^2)^2*(-3 - 10*sw^2 + 16*sw^4)) + 
        s*(1 - 2*sw^2)^2*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
        2*(1 - 2*sw^2)^2*(3 - 20*sw^2 + 32*sw^4)*t^2)))/
    ((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s*sw^4*(-1 + sw^2)^2), 
   ((I/9)*2^(-5 - 2*d)*EL^6*(3*d^2*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(2*s^2*(3*d^2*sw^2*(-1 + sw^2) + d*(1 - 2*sw^2)^2*
           (-3 - 5*sw^2 + 8*sw^4) - (1 - 2*sw^2)^2*(-3 - 10*sw^2 + 
            16*sw^4)) + s*(1 - 2*sw^2)^2*(-15*d + 3*d^2 + 
          8*(3 - 5*sw^2 + 8*sw^4))*t + 2*(1 - 2*sw^2)^2*
         (3 - 20*sw^2 + 32*sw^4)*t^2))*(s + 4*mz^2*(-1 + sw^2)*GaugeXi[W]))/
    ((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s*sw^4*(-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((I/9)*2^(-7 - d)*EL^6*(1 - 2*sw^2)^2*
     (s^2*(3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
        4*d*(-9 + 30*swC^2 - 24*swC^4 + sw^2*(30 - 22*swC^2 - 40*swC^4) + 
          8*sw^4*(-3 - 5*swC^2 + 8*swC^4)) - 4*(-9 + 30*swC^2 - 24*swC^4 + 
          sw^2*(30 + 4*swC^2 - 80*swC^4) + 8*sw^4*(-3 - 10*swC^2 + 
            16*swC^4))) + 2*s*(-15*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2)) + 3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
          sw^2*(-30 + 74*swC^2 - 40*swC^4) + 8*sw^4*(3 - 5*swC^2 + 8*swC^4)))*
       t + 4*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 
        2*sw^2*(15 - 76*swC^2 + 80*swC^4))*t^2))/(cwC^2*(-1 + d)*Pi^d*
     (mz^2 - s)^3*sw^4*(-1 + sw^2)^2*swC^2), 
   ((-I/9)*2^(-8 - d)*EL^6*(1 - 2*sw^2)^2*
     (s^2*(3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
        4*d*(-9 + 30*swC^2 - 24*swC^4 + sw^2*(30 - 22*swC^2 - 40*swC^4) + 
          8*sw^4*(-3 - 5*swC^2 + 8*swC^4)) - 4*(-9 + 30*swC^2 - 24*swC^4 + 
          sw^2*(30 + 4*swC^2 - 80*swC^4) + 8*sw^4*(-3 - 10*swC^2 + 
            16*swC^4))) + 2*s*(-15*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2)) + 3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
          sw^2*(-30 + 74*swC^2 - 40*swC^4) + 8*sw^4*(3 - 5*swC^2 + 8*swC^4)))*
       t + 4*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 
        2*sw^2*(15 - 76*swC^2 + 80*swC^4))*t^2)*
     (s + 4*mz^2*(-1 + sw^2)*GaugeXi[W]))/(cwC^2*(-1 + d)*Pi^d*(mz^2 - s)^3*
     sw^4*(-1 + sw^2)^2*swC^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((I/9)*2^(1 - d)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2))/((-1 + d)*Pi^d*s^3), 
   ((I/9)*EL^6*(-(d*(2*Pi)^d*s^3) + 2^(1 + d)*Pi^d*s*(s^2 - 2*s*t - 2*t^2) + 
      2^(2 + d)*mz^2*Pi^d*(1 - sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
       GaugeXi[W]))/((-1 + d)*(2*Pi)^(2*d)*s^3), 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((I/9)*4^(-2 - d)*EL^6*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
       (2*s^2*(3 + 10*swC^2 - 16*swC^4 + d*(-3 - 5*swC^2 + 8*swC^4)) + 
        s*(-15*d + 3*d^2 + 8*(3 - 5*swC^2 + 8*swC^4))*t + 
        2*(3 - 20*swC^2 + 32*swC^4)*t^2)))/(cwC^2*(-1 + d)*Pi^(2*d)*s^2*
     (-mz^2 + s)*swC^2), ((-I/9)*2^(-5 - 2*d)*EL^6*(3*d^2*(2*Pi)^d*s^3 + 
      2^(1 + d)*Pi^d*s*(2*s^2*(3 + 10*swC^2 - 16*swC^4 + 
          d*(-3 - 5*swC^2 + 8*swC^4)) + s*(-15*d + 3*d^2 + 
          8*(3 - 5*swC^2 + 8*swC^4))*t + 2*(3 - 20*swC^2 + 32*swC^4)*t^2) - 
      4*mz^2*(1 - sw^2)*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (2*s^2*(3 + 10*swC^2 - 16*swC^4 + d*(-3 - 5*swC^2 + 8*swC^4)) + 
          s*(-15*d + 3*d^2 + 8*(3 - 5*swC^2 + 8*swC^4))*t + 
          2*(3 - 20*swC^2 + 32*swC^4)*t^2))*GaugeXi[W]))/
    (cwC^2*(-1 + d)*Pi^(2*d)*s^2*(-mz^2 + s)*swC^2), 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((I/9)*2^(1 - d)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2))/((-1 + d)*Pi^d*s^3), 
   ((I/9)*EL^6*(-(d*(2*Pi)^d*s^3) + 2^(1 + d)*Pi^d*s*(s^2 - 2*s*t - 2*t^2) + 
      2^(2 + d)*mz^2*Pi^d*(1 - sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
       GaugeXi[W]))/((-1 + d)*(2*Pi)^(2*d)*s^3), 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((I/9)*4^(-2 - d)*EL^6*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
       (2*s^2*(3 + 10*swC^2 - 16*swC^4 + d*(-3 - 5*swC^2 + 8*swC^4)) + 
        s*(-15*d + 3*d^2 + 8*(3 - 5*swC^2 + 8*swC^4))*t + 
        2*(3 - 20*swC^2 + 32*swC^4)*t^2)))/(cwC^2*(-1 + d)*Pi^(2*d)*s^2*
     (-mz^2 + s)*swC^2), ((-I/9)*2^(-5 - 2*d)*EL^6*(3*d^2*(2*Pi)^d*s^3 + 
      2^(1 + d)*Pi^d*s*(2*s^2*(3 + 10*swC^2 - 16*swC^4 + 
          d*(-3 - 5*swC^2 + 8*swC^4)) + s*(-15*d + 3*d^2 + 
          8*(3 - 5*swC^2 + 8*swC^4))*t + 2*(3 - 20*swC^2 + 32*swC^4)*t^2) - 
      4*mz^2*(1 - sw^2)*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (2*s^2*(3 + 10*swC^2 - 16*swC^4 + d*(-3 - 5*swC^2 + 8*swC^4)) + 
          s*(-15*d + 3*d^2 + 8*(3 - 5*swC^2 + 8*swC^4))*t + 
          2*(3 - 20*swC^2 + 32*swC^4)*t^2))*GaugeXi[W]))/
    (cwC^2*(-1 + d)*Pi^(2*d)*s^2*(-mz^2 + s)*swC^2), 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/9)*2^(-1 - d)*EL^6*(-1 + 4*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
    ((-1 + d)*Pi^d*s^2*(-mz^2 + s)*sw^2), 
   ((I/9)*4^(-1 - d)*EL^6*(-(d*(2*Pi)^d*s^3) + 2^(1 + d)*Pi^d*s*
       (s^2*(1 + 2*(-2 + d)*sw^2) + 2*s*(-1 + 4*sw^2)*t + 
        2*(-1 + 4*sw^2)*t^2) + 2^(2 + d)*mz^2*Pi^d*(-1 + sw^2)*(-1 + 4*sw^2)*
       ((-2 + d)*s^2 + 4*s*t + 4*t^2)*GaugeXi[W]))/
    ((-1 + d)*Pi^(2*d)*s^2*(-mz^2 + s)*sw^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/9)*2^(-5 - 2*d)*EL^6*(-3*d^2*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(s^2*(-6 + 4*swC^2 + 16*swC^4 + 3*d^2*(sw^2 + swC^2) + 
          sw^2*(12 + 40*swC^2 - 64*swC^4) + 2*d*(3 - 4*swC^2 - 4*swC^4 + 
            2*sw^2*(-3 - 5*swC^2 + 8*swC^4))) + 
        s*(-15*d*(-1 + 2*sw^2 + 2*swC^2) + d^2*(-3 + 6*sw^2 + 6*swC^2) + 
          8*(-3 + 8*swC^2 - 4*swC^4 + 2*sw^2*(3 - 5*swC^2 + 8*swC^4)))*t + 
        2*(-3 + 8*swC^2)*(1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t^2)))/
    (cwC^2*(-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s*sw^2*swC^2), 
   ((I/9)*4^(-3 - d)*EL^6*(-3*d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
       (s^2*(-6 + 4*swC^2 + 16*swC^4 + 3*d^2*(sw^2 + swC^2) + 
          sw^2*(12 + 40*swC^2 - 64*swC^4) + 2*d*(3 - 4*swC^2 - 4*swC^4 + 
            2*sw^2*(-3 - 5*swC^2 + 8*swC^4))) + 
        s*(-15*d*(-1 + 2*sw^2 + 2*swC^2) + d^2*(-3 + 6*sw^2 + 6*swC^2) + 
          8*(-3 + 8*swC^2 - 4*swC^4 + 2*sw^2*(3 - 5*swC^2 + 8*swC^4)))*t + 
        2*(-3 + 8*swC^2)*(1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t^2) - 
      4*mz^2*(1 - sw^2)*(-3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(-6 + 4*swC^2 + 16*swC^4 + 3*d^2*(sw^2 + swC^2) + 
            sw^2*(12 + 40*swC^2 - 64*swC^4) + 2*d*(3 - 4*swC^2 - 4*swC^4 + 
              2*sw^2*(-3 - 5*swC^2 + 8*swC^4))) + 
          s*(-15*d*(-1 + 2*sw^2 + 2*swC^2) + d^2*(-3 + 6*sw^2 + 6*swC^2) + 
            8*(-3 + 8*swC^2 - 4*swC^4 + 2*sw^2*(3 - 5*swC^2 + 8*swC^4)))*t + 
          2*(-3 + 8*swC^2)*(1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t^2))*
       GaugeXi[W]))/(cwC^2*(-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s*sw^2*swC^2), 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, ((-I/9)*2^(-2 - d)*EL^6*(-3 + 8*sw^2)*((-2 + d)*s^2 + 4*s*t + 
      4*t^2))/((-1 + d)*Pi^d*s^2*(-mz^2 + s)*sw^2), 
   ((-I/9)*2^(-3 - 2*d)*EL^6*(-3*d*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
       (s^2*(3 + 4*(-2 + d)*sw^2) + 2*s*(-3 + 8*sw^2)*t + 
        2*(-3 + 8*sw^2)*t^2) + 2^(2 + d)*mz^2*Pi^d*(-1 + sw^2)*(-3 + 8*sw^2)*
       ((-2 + d)*s^2 + 4*s*t + 4*t^2)*GaugeXi[W]))/
    ((-1 + d)*Pi^(2*d)*(mz^2 - s)*s^2*sw^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/9)*2^(-6 - d)*EL^6*(s^2*(3*d^2*(-3 + 4*sw^2 + 4*swC^2) + 
        4*d*(-3*(-3 + swC^2 + 4*swC^4) + 4*sw^2*(-3 - 5*swC^2 + 8*swC^4)) - 
        4*(9 + 6*swC^2 - 24*swC^4 + 4*sw^2*(-3 - 10*swC^2 + 16*swC^4))) + 
      2*s*(-15*d*(-3 + 4*sw^2 + 4*swC^2) + 3*d^2*(-3 + 4*sw^2 + 4*swC^2) - 
        24*(3 - 7*swC^2 + 4*swC^4) + 32*sw^2*(3 - 5*swC^2 + 8*swC^4))*t + 
      4*(-1 + 4*swC^2)*(9 - 12*swC^2 + 4*sw^2*(-3 + 8*swC^2))*t^2))/
    (cwC^2*(-1 + d)*Pi^d*(mz^2 - s)^2*s*sw^2*swC^2), 
   ((I/9)*2^(-7 - d)*EL^6*(s^2*(3*d^2*(-3 + 4*sw^2 + 4*swC^2) + 
        4*d*(-3*(-3 + swC^2 + 4*swC^4) + 4*sw^2*(-3 - 5*swC^2 + 8*swC^4)) - 
        4*(9 + 6*swC^2 - 24*swC^4 + 4*sw^2*(-3 - 10*swC^2 + 16*swC^4))) + 
      2*s*(-15*d*(-3 + 4*sw^2 + 4*swC^2) + 3*d^2*(-3 + 4*sw^2 + 4*swC^2) - 
        24*(3 - 7*swC^2 + 4*swC^4) + 32*sw^2*(3 - 5*swC^2 + 8*swC^4))*t + 
      4*(-1 + 4*swC^2)*(9 - 12*swC^2 + 4*sw^2*(-3 + 8*swC^2))*t^2)*
     (s + 4*mz^2*(-1 + sw^2)*GaugeXi[W]))/(cwC^2*(-1 + d)*Pi^d*(mz^2 - s)^2*s*
     sw^2*swC^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, ((-I/9)*2^(-1 - d)*EL^6*(-1 + 4*sw^2)*
     ((-2 + d)*s^2 + 4*s*t + 4*t^2))/((-1 + d)*Pi^d*s^2*(-mz^2 + s)*sw^2), 
   ((I/9)*4^(-1 - d)*EL^6*(-(d*(2*Pi)^d*s^3) + 2^(1 + d)*Pi^d*s*
       (s^2*(1 + 2*(-2 + d)*sw^2) + 2*s*(-1 + 4*sw^2)*t + 
        2*(-1 + 4*sw^2)*t^2) + 2^(2 + d)*mz^2*Pi^d*(-1 + sw^2)*(-1 + 4*sw^2)*
       ((-2 + d)*s^2 + 4*s*t + 4*t^2)*GaugeXi[W]))/
    ((-1 + d)*Pi^(2*d)*s^2*(-mz^2 + s)*sw^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/9)*2^(-5 - 2*d)*EL^6*(-3*d^2*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(s^2*(-6 + 4*swC^2 + 16*swC^4 + 3*d^2*(sw^2 + swC^2) + 
          sw^2*(12 + 40*swC^2 - 64*swC^4) + 2*d*(3 - 4*swC^2 - 4*swC^4 + 
            2*sw^2*(-3 - 5*swC^2 + 8*swC^4))) + 
        s*(-15*d*(-1 + 2*sw^2 + 2*swC^2) + d^2*(-3 + 6*sw^2 + 6*swC^2) + 
          8*(-3 + 8*swC^2 - 4*swC^4 + 2*sw^2*(3 - 5*swC^2 + 8*swC^4)))*t + 
        2*(-3 + 8*swC^2)*(1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t^2)))/
    (cwC^2*(-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s*sw^2*swC^2), 
   ((I/9)*4^(-3 - d)*EL^6*(-3*d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
       (s^2*(-6 + 4*swC^2 + 16*swC^4 + 3*d^2*(sw^2 + swC^2) + 
          sw^2*(12 + 40*swC^2 - 64*swC^4) + 2*d*(3 - 4*swC^2 - 4*swC^4 + 
            2*sw^2*(-3 - 5*swC^2 + 8*swC^4))) + 
        s*(-15*d*(-1 + 2*sw^2 + 2*swC^2) + d^2*(-3 + 6*sw^2 + 6*swC^2) + 
          8*(-3 + 8*swC^2 - 4*swC^4 + 2*sw^2*(3 - 5*swC^2 + 8*swC^4)))*t + 
        2*(-3 + 8*swC^2)*(1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t^2) - 
      4*mz^2*(1 - sw^2)*(-3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(-6 + 4*swC^2 + 16*swC^4 + 3*d^2*(sw^2 + swC^2) + 
            sw^2*(12 + 40*swC^2 - 64*swC^4) + 2*d*(3 - 4*swC^2 - 4*swC^4 + 
              2*sw^2*(-3 - 5*swC^2 + 8*swC^4))) + 
          s*(-15*d*(-1 + 2*sw^2 + 2*swC^2) + d^2*(-3 + 6*sw^2 + 6*swC^2) + 
            8*(-3 + 8*swC^2 - 4*swC^4 + 2*sw^2*(3 - 5*swC^2 + 8*swC^4)))*t + 
          2*(-3 + 8*swC^2)*(1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t^2))*
       GaugeXi[W]))/(cwC^2*(-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s*sw^2*swC^2), 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, ((-I/9)*2^(-2 - d)*EL^6*(-3 + 8*sw^2)*((-2 + d)*s^2 + 4*s*t + 
      4*t^2))/((-1 + d)*Pi^d*s^2*(-mz^2 + s)*sw^2), 
   ((-I/9)*2^(-3 - 2*d)*EL^6*(-3*d*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
       (s^2*(3 + 4*(-2 + d)*sw^2) + 2*s*(-3 + 8*sw^2)*t + 
        2*(-3 + 8*sw^2)*t^2) + 2^(2 + d)*mz^2*Pi^d*(-1 + sw^2)*(-3 + 8*sw^2)*
       ((-2 + d)*s^2 + 4*s*t + 4*t^2)*GaugeXi[W]))/
    ((-1 + d)*Pi^(2*d)*(mz^2 - s)*s^2*sw^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/9)*2^(-6 - d)*EL^6*(s^2*(3*d^2*(-3 + 4*sw^2 + 4*swC^2) + 
        4*d*(-3*(-3 + swC^2 + 4*swC^4) + 4*sw^2*(-3 - 5*swC^2 + 8*swC^4)) - 
        4*(9 + 6*swC^2 - 24*swC^4 + 4*sw^2*(-3 - 10*swC^2 + 16*swC^4))) + 
      2*s*(-15*d*(-3 + 4*sw^2 + 4*swC^2) + 3*d^2*(-3 + 4*sw^2 + 4*swC^2) - 
        24*(3 - 7*swC^2 + 4*swC^4) + 32*sw^2*(3 - 5*swC^2 + 8*swC^4))*t + 
      4*(-1 + 4*swC^2)*(9 - 12*swC^2 + 4*sw^2*(-3 + 8*swC^2))*t^2))/
    (cwC^2*(-1 + d)*Pi^d*(mz^2 - s)^2*s*sw^2*swC^2), 
   ((I/9)*2^(-7 - d)*EL^6*(s^2*(3*d^2*(-3 + 4*sw^2 + 4*swC^2) + 
        4*d*(-3*(-3 + swC^2 + 4*swC^4) + 4*sw^2*(-3 - 5*swC^2 + 8*swC^4)) - 
        4*(9 + 6*swC^2 - 24*swC^4 + 4*sw^2*(-3 - 10*swC^2 + 16*swC^4))) + 
      2*s*(-15*d*(-3 + 4*sw^2 + 4*swC^2) + 3*d^2*(-3 + 4*sw^2 + 4*swC^2) - 
        24*(3 - 7*swC^2 + 4*swC^4) + 32*sw^2*(3 - 5*swC^2 + 8*swC^4))*t + 
      4*(-1 + 4*swC^2)*(9 - 12*swC^2 + 4*sw^2*(-3 + 8*swC^2))*t^2)*
     (s + 4*mz^2*(-1 + sw^2)*GaugeXi[W]))/(cwC^2*(-1 + d)*Pi^d*(mz^2 - s)^2*s*
     sw^2*swC^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, ((I/9)*4^(-2 - d)*EL^6*(3*d^2*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(2*s^2*(3 + 10*sw^2 - 16*sw^4 + 
          d*(-3 - 5*sw^2 + 8*sw^4)) + s*(-15*d + 3*d^2 + 
          8*(3 - 5*sw^2 + 8*sw^4))*t + 2*(3 - 20*sw^2 + 32*sw^4)*t^2)))/
    ((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s*sw^4), 
   ((-I/9)*2^(-5 - 2*d)*EL^6*(3*d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
       (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
        s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
        2*(3 - 20*sw^2 + 32*sw^4)*t^2) - 4*mz^2*(1 - sw^2)*
       (3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
          s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[W]))/
    ((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s*sw^4), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/9)*2^(-7 - d)*EL^6*
     (s^2*(3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
        4*d*(-9 + 30*swC^2 - 24*swC^4 + sw^2*(30 - 22*swC^2 - 40*swC^4) + 
          8*sw^4*(-3 - 5*swC^2 + 8*swC^4)) - 4*(-9 + 30*swC^2 - 24*swC^4 + 
          sw^2*(30 + 4*swC^2 - 80*swC^4) + 8*sw^4*(-3 - 10*swC^2 + 
            16*swC^4))) + 2*s*(-15*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2)) + 3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
          sw^2*(-30 + 74*swC^2 - 40*swC^4) + 8*sw^4*(3 - 5*swC^2 + 8*swC^4)))*
       t + 4*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 
        2*sw^2*(15 - 76*swC^2 + 80*swC^4))*t^2))/(cwC^2*(-1 + d)*Pi^d*
     (mz^2 - s)^3*sw^4*swC^2), ((I/9)*2^(-8 - d)*EL^6*
     (s^2*(3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
        4*d*(-9 + 30*swC^2 - 24*swC^4 + sw^2*(30 - 22*swC^2 - 40*swC^4) + 
          8*sw^4*(-3 - 5*swC^2 + 8*swC^4)) - 4*(-9 + 30*swC^2 - 24*swC^4 + 
          sw^2*(30 + 4*swC^2 - 80*swC^4) + 8*sw^4*(-3 - 10*swC^2 + 
            16*swC^4))) + 2*s*(-15*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2)) + 3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
          sw^2*(-30 + 74*swC^2 - 40*swC^4) + 8*sw^4*(3 - 5*swC^2 + 8*swC^4)))*
       t + 4*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 
        2*sw^2*(15 - 76*swC^2 + 80*swC^4))*t^2)*
     (s + 4*mz^2*(-1 + sw^2)*GaugeXi[W]))/(cwC^2*(-1 + d)*Pi^d*(mz^2 - s)^3*
     sw^4*swC^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, ((I/9)*4^(-2 - d)*EL^6*(3*d^2*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(2*s^2*(3 + 10*sw^2 - 16*sw^4 + 
          d*(-3 - 5*sw^2 + 8*sw^4)) + s*(-15*d + 3*d^2 + 
          8*(3 - 5*sw^2 + 8*sw^4))*t + 2*(3 - 20*sw^2 + 32*sw^4)*t^2)))/
    ((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s*sw^4), 
   ((-I/9)*2^(-5 - 2*d)*EL^6*(3*d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
       (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
        s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
        2*(3 - 20*sw^2 + 32*sw^4)*t^2) - 4*mz^2*(1 - sw^2)*
       (3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
          s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[W]))/
    ((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s*sw^4), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/9)*2^(-7 - d)*EL^6*
     (s^2*(3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
        4*d*(-9 + 30*swC^2 - 24*swC^4 + sw^2*(30 - 22*swC^2 - 40*swC^4) + 
          8*sw^4*(-3 - 5*swC^2 + 8*swC^4)) - 4*(-9 + 30*swC^2 - 24*swC^4 + 
          sw^2*(30 + 4*swC^2 - 80*swC^4) + 8*sw^4*(-3 - 10*swC^2 + 
            16*swC^4))) + 2*s*(-15*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2)) + 3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
          sw^2*(-30 + 74*swC^2 - 40*swC^4) + 8*sw^4*(3 - 5*swC^2 + 8*swC^4)))*
       t + 4*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 
        2*sw^2*(15 - 76*swC^2 + 80*swC^4))*t^2))/(cwC^2*(-1 + d)*Pi^d*
     (mz^2 - s)^3*sw^4*swC^2), ((I/9)*2^(-8 - d)*EL^6*
     (s^2*(3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
        4*d*(-9 + 30*swC^2 - 24*swC^4 + sw^2*(30 - 22*swC^2 - 40*swC^4) + 
          8*sw^4*(-3 - 5*swC^2 + 8*swC^4)) - 4*(-9 + 30*swC^2 - 24*swC^4 + 
          sw^2*(30 + 4*swC^2 - 80*swC^4) + 8*sw^4*(-3 - 10*swC^2 + 
            16*swC^4))) + 2*s*(-15*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2)) + 3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
          sw^2*(-30 + 74*swC^2 - 40*swC^4) + 8*sw^4*(3 - 5*swC^2 + 8*swC^4)))*
       t + 4*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 
        2*sw^2*(15 - 76*swC^2 + 80*swC^4))*t^2)*
     (s + 4*mz^2*(-1 + sw^2)*GaugeXi[W]))/(cwC^2*(-1 + d)*Pi^d*(mz^2 - s)^3*
     sw^4*swC^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, ((I/9)*2^(1 - d)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
    ((-1 + d)*Pi^d*s^3), ((I/9)*EL^6*(-(d*(2*Pi)^d*s^3) + 
      2^(1 + d)*Pi^d*s*(s^2 - 2*s*t - 2*t^2) + 2^(2 + d)*mz^2*Pi^d*(1 - sw^2)*
       ((-2 + d)*s^2 + 4*s*t + 4*t^2)*GaugeXi[W]))/
    ((-1 + d)*(2*Pi)^(2*d)*s^3), 
   ((-I/9)*EL^6*(d*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*(-s^2 + 2*s*t + 2*t^2) + 
      mz^2*(1 - sw^2)*(-3*d*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         ((-1 + 2*d)*s^2 + 2*s*t + 2*t^2)) + mz^2*(1 - sw^2)*
       (-(d*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*(s^2 - 2*s*t - 2*t^2))*
       GaugeXi[W]))/((-1 + d)*(2*Pi)^(2*d)*s^4), 0, 0, 0, 0, 
   ((-I/9)*EL^6*((-s - mz^2*(-1 + sw^2))*(-(d*(2*Pi)^d*s^2) + 
        2^(1 + d)*Pi^d*(s^2 - 2*s*t - 2*t^2)) + mz^2*(1 - sw^2)*
       (-3*d*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*((-1 + 2*d)*s^2 + 2*s*t + 2*t^2))*
       GaugeXi[W]))/((-1 + d)*(2*Pi)^(2*d)*s^4), 
   ((-I/9)*EL^6*(-(d*(2*Pi)^d*s^4) + 2^(1 + d)*Pi^d*s^2*
       (s^2 - 2*s*t - 2*t^2) + 2^(1 + d)*(-3 + 2*d)*mz^2*Pi^d*s*(-1 + sw^2)*
       ((-2 + d)*s^2 + 4*s*t + 4*t^2) + mz^4*(-1 + sw^2)^2*
       (-(d*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*(s^2 - 2*s*t - 2*t^2)) + 
      2^(1 + d)*mz^2*Pi^d*(1 - sw^2)*(s - mz^2*(-1 + sw^2))*
       ((-2 + d)*s^2 + 4*s*t + 4*t^2)*GaugeXi[W] + mz^4*(-1 + sw^2)^2*
       (-(d*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*(s^2 - 2*s*t - 2*t^2))*
       GaugeXi[W]^2))/((-1 + d)*(2*Pi)^(2*d)*s^4), 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, ((I/9)*4^(-2 - d)*EL^6*(3*d^2*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(2*s^2*(3 + 10*swC^2 - 16*swC^4 + 
          d*(-3 - 5*swC^2 + 8*swC^4)) + s*(-15*d + 3*d^2 + 
          8*(3 - 5*swC^2 + 8*swC^4))*t + 2*(3 - 20*swC^2 + 32*swC^4)*t^2)))/
    (cwC^2*(-1 + d)*Pi^(2*d)*s^2*(-mz^2 + s)*swC^2), 
   ((-I/9)*2^(-5 - 2*d)*EL^6*(3*d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
       (2*s^2*(3 + 10*swC^2 - 16*swC^4 + d*(-3 - 5*swC^2 + 8*swC^4)) + 
        s*(-15*d + 3*d^2 + 8*(3 - 5*swC^2 + 8*swC^4))*t + 
        2*(3 - 20*swC^2 + 32*swC^4)*t^2) - 4*mz^2*(1 - sw^2)*
       (3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (2*s^2*(3 + 10*swC^2 - 16*swC^4 + d*(-3 - 5*swC^2 + 8*swC^4)) + 
          s*(-15*d + 3*d^2 + 8*(3 - 5*swC^2 + 8*swC^4))*t + 
          2*(3 - 20*swC^2 + 32*swC^4)*t^2))*GaugeXi[W]))/
    (cwC^2*(-1 + d)*Pi^(2*d)*s^2*(-mz^2 + s)*swC^2), 
   ((-I/9)*2^(-5 - 2*d)*EL^6*(9*d^2*(2*Pi)^d*s^3 - 2^(1 + d)*Pi^d*s*
       (s^2*(-6 + 3*d^2 - 20*swC^2 + 32*swC^4 + 
          d*(6 + 10*swC^2 - 16*swC^4)) + s*(15*d - 3*d^2 - 
          8*(3 - 5*swC^2 + 8*swC^4))*t - 2*(3 - 20*swC^2 + 32*swC^4)*t^2) + 
      mz^2*(1 - sw^2)*(-3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(6 + 3*d^2 + 20*swC^2 - 32*swC^4 + 2*d*(-3 - 5*swC^2 + 
              8*swC^4)) + s*(-15*d + 3*d^2 + 8*(3 - 5*swC^2 + 8*swC^4))*t + 
          2*(3 - 20*swC^2 + 32*swC^4)*t^2)) - mz^2*(1 - sw^2)*
       (3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (2*s^2*(3 + 10*swC^2 - 16*swC^4 + d*(-3 - 5*swC^2 + 8*swC^4)) + 
          s*(-15*d + 3*d^2 + 8*(3 - 5*swC^2 + 8*swC^4))*t + 
          2*(3 - 20*swC^2 + 32*swC^4)*t^2))*GaugeXi[W]))/
    (cwC^2*(-1 + d)*Pi^(2*d)*s^3*(-mz^2 + s)*swC^2), 0, 0, 0, 0, 
   ((-I/9)*2^(-5 - 2*d)*EL^6*((-s - mz^2*(-1 + sw^2))*(-9*d^2*(2*Pi)^d*s^2 + 
        2^(1 + d)*Pi^d*(s^2*(-6 + 3*d^2 - 20*swC^2 + 32*swC^4 + 
            d*(6 + 10*swC^2 - 16*swC^4)) + s*(15*d - 3*d^2 - 
            8*(3 - 5*swC^2 + 8*swC^4))*t - 2*(3 - 20*swC^2 + 32*swC^4)*
           t^2)) + mz^2*(1 - sw^2)*(-9*d^2*(2*Pi)^d*s^2 + 
        2^(1 + d)*Pi^d*(2*s^2*(3 + 3*d^2 + 10*swC^2 - 16*swC^4 + 
            d*(-3 - 5*swC^2 + 8*swC^4)) + s*(-15*d + 3*d^2 + 
            8*(3 - 5*swC^2 + 8*swC^4))*t + 2*(3 - 20*swC^2 + 32*swC^4)*t^2))*
       GaugeXi[W]))/(cwC^2*(-1 + d)*Pi^(2*d)*s^3*(-mz^2 + s)*swC^2), 
   ((I/9)*2^(-5 - 2*d)*EL^6*
     (s*(3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-3 - 10*swC^2 + 16*swC^4) + 
          (-3 + 20*swC^2 - 32*swC^4)*t))*(s + mz^2*(-1 + sw^2) + 
         mz^2*(-1 + sw^2)*GaugeXi[W])^2 + s*(s + mz^2*(-1 + sw^2) + 
        mz^2*(-1 + sw^2)*GaugeXi[W])*((-s - mz^2*(-1 + sw^2))*
         (-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(3 + 3*d + 10*swC^2 - 
              16*swC^4) + (3 - 20*swC^2 + 32*swC^4)*t)) - 
        mz^2*(1 - sw^2)*(3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
           (s*(-3 - 10*swC^2 + 16*swC^4) + (-3 + 20*swC^2 - 32*swC^4)*t))*
         GaugeXi[W]) + ((2*Pi)^d*s^2*(3 - 8*swC^2)*(1 - 4*swC^2)*
        (d*(s + mz^2*(-1 + sw^2))^2 + 2*mz^2*(-1 + sw^2)*
          (d*s + (-2 + d)*mz^2*(-1 + sw^2))*GaugeXi[W] + 
         d*mz^4*(-1 + sw^2)^2*GaugeXi[W]^2))/(1 - d) + 
      ((2*Pi)^d*s^2*(3 - 20*swC^2 + 32*swC^4)*(d*(s + mz^2*(-1 + sw^2))^2 + 
         2*mz^2*(-1 + sw^2)*(d*s + (-2 + d)*mz^2*(-1 + sw^2))*GaugeXi[W] + 
         d*mz^4*(-1 + sw^2)^2*GaugeXi[W]^2))/(1 - d) + 
      2*s*(s^2*(3*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(-3 - 10*swC^2 + 16*swC^4))*t + 
        mz^4*(-1 + sw^2)^2*(3*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(-3 - 10*swC^2 + 
            16*swC^4))*t + 2^(1 + d)*mz^2*Pi^d*(1 - sw^2)*
         (s^2*(12 + 3*d^2 + 40*swC^2 - 64*swC^4 + 4*d*(-3 - 5*swC^2 + 
              8*swC^4)) + 3*s*(18 - 11*d + 2*d^2 - 20*swC^2 + 32*swC^4)*t + 
          4*(3 - 20*swC^2 + 32*swC^4)*t^2) - 2^(1 + d)*mz^2*Pi^d*(1 - sw^2)*
         (s*(-6 + 3*d - 20*swC^2 + 32*swC^4)*t + mz^2*(1 - sw^2)*
           (s*(-6 + 3*d - 20*swC^2 + 32*swC^4) + 3*d*t - 
            4*(3 - 5*swC^2 + 8*swC^4)*t))*GaugeXi[W] + 
        mz^4*(-1 + sw^2)^2*(3*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(-3 - 10*swC^2 + 
            16*swC^4))*t*GaugeXi[W]^2) + 
      ((3*d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(2*s*(3 - 5*swC^2 + 8*swC^4) + 
           (3 - 20*swC^2 + 32*swC^4)*t))*((s + mz^2*(-1 + sw^2))^2*
          (d*s + 2*t) + 2*mz^2*(1 - sw^2)*
          (-(mz^2*(-1 + sw^2)*((-2 + d)*s - 2*t)) - s*(d*s + 2*t))*
          GaugeXi[W] + mz^4*(-1 + sw^2)^2*(d*s + 2*t)*GaugeXi[W]^2))/
       (1 - d)))/(cwC^2*Pi^(2*d)*s^3*(-mz^2 + s)*swC^2), 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((I/9)*2^(1 - d)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2))/((-1 + d)*Pi^d*s^3), 
   ((I/9)*EL^6*(-(d*(2*Pi)^d*s^3) + 2^(1 + d)*Pi^d*s*(s^2 - 2*s*t - 2*t^2) + 
      2^(2 + d)*mz^2*Pi^d*(1 - sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
       GaugeXi[W]))/((-1 + d)*(2*Pi)^(2*d)*s^3), 
   ((-I/9)*EL^6*(d*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*(-s^2 + 2*s*t + 2*t^2) + 
      mz^2*(1 - sw^2)*(-3*d*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         ((-1 + 2*d)*s^2 + 2*s*t + 2*t^2)) + mz^2*(1 - sw^2)*
       (-(d*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*(s^2 - 2*s*t - 2*t^2))*
       GaugeXi[W]))/((-1 + d)*(2*Pi)^(2*d)*s^4), 0, 0, 0, 0, 
   ((-I/9)*EL^6*((-s - mz^2*(-1 + sw^2))*(-(d*(2*Pi)^d*s^2) + 
        2^(1 + d)*Pi^d*(s^2 - 2*s*t - 2*t^2)) + mz^2*(1 - sw^2)*
       (-3*d*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*((-1 + 2*d)*s^2 + 2*s*t + 2*t^2))*
       GaugeXi[W]))/((-1 + d)*(2*Pi)^(2*d)*s^4), 
   ((-I/9)*EL^6*(-(d*(2*Pi)^d*s^4) + 2^(1 + d)*Pi^d*s^2*
       (s^2 - 2*s*t - 2*t^2) + 2^(1 + d)*(-3 + 2*d)*mz^2*Pi^d*s*(-1 + sw^2)*
       ((-2 + d)*s^2 + 4*s*t + 4*t^2) + mz^4*(-1 + sw^2)^2*
       (-(d*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*(s^2 - 2*s*t - 2*t^2)) + 
      2^(1 + d)*mz^2*Pi^d*(1 - sw^2)*(s - mz^2*(-1 + sw^2))*
       ((-2 + d)*s^2 + 4*s*t + 4*t^2)*GaugeXi[W] + mz^4*(-1 + sw^2)^2*
       (-(d*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*(s^2 - 2*s*t - 2*t^2))*
       GaugeXi[W]^2))/((-1 + d)*(2*Pi)^(2*d)*s^4), 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, ((I/9)*4^(-2 - d)*EL^6*(3*d^2*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(2*s^2*(3 + 10*swC^2 - 16*swC^4 + 
          d*(-3 - 5*swC^2 + 8*swC^4)) + s*(-15*d + 3*d^2 + 
          8*(3 - 5*swC^2 + 8*swC^4))*t + 2*(3 - 20*swC^2 + 32*swC^4)*t^2)))/
    (cwC^2*(-1 + d)*Pi^(2*d)*s^2*(-mz^2 + s)*swC^2), 
   ((-I/9)*2^(-5 - 2*d)*EL^6*(3*d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
       (2*s^2*(3 + 10*swC^2 - 16*swC^4 + d*(-3 - 5*swC^2 + 8*swC^4)) + 
        s*(-15*d + 3*d^2 + 8*(3 - 5*swC^2 + 8*swC^4))*t + 
        2*(3 - 20*swC^2 + 32*swC^4)*t^2) - 4*mz^2*(1 - sw^2)*
       (3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (2*s^2*(3 + 10*swC^2 - 16*swC^4 + d*(-3 - 5*swC^2 + 8*swC^4)) + 
          s*(-15*d + 3*d^2 + 8*(3 - 5*swC^2 + 8*swC^4))*t + 
          2*(3 - 20*swC^2 + 32*swC^4)*t^2))*GaugeXi[W]))/
    (cwC^2*(-1 + d)*Pi^(2*d)*s^2*(-mz^2 + s)*swC^2), 
   ((-I/9)*2^(-5 - 2*d)*EL^6*(9*d^2*(2*Pi)^d*s^3 - 2^(1 + d)*Pi^d*s*
       (s^2*(-6 + 3*d^2 - 20*swC^2 + 32*swC^4 + 
          d*(6 + 10*swC^2 - 16*swC^4)) + s*(15*d - 3*d^2 - 
          8*(3 - 5*swC^2 + 8*swC^4))*t - 2*(3 - 20*swC^2 + 32*swC^4)*t^2) + 
      mz^2*(1 - sw^2)*(-3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(6 + 3*d^2 + 20*swC^2 - 32*swC^4 + 2*d*(-3 - 5*swC^2 + 
              8*swC^4)) + s*(-15*d + 3*d^2 + 8*(3 - 5*swC^2 + 8*swC^4))*t + 
          2*(3 - 20*swC^2 + 32*swC^4)*t^2)) - mz^2*(1 - sw^2)*
       (3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (2*s^2*(3 + 10*swC^2 - 16*swC^4 + d*(-3 - 5*swC^2 + 8*swC^4)) + 
          s*(-15*d + 3*d^2 + 8*(3 - 5*swC^2 + 8*swC^4))*t + 
          2*(3 - 20*swC^2 + 32*swC^4)*t^2))*GaugeXi[W]))/
    (cwC^2*(-1 + d)*Pi^(2*d)*s^3*(-mz^2 + s)*swC^2), 0, 0, 0, 0, 
   ((-I/9)*2^(-5 - 2*d)*EL^6*((-s - mz^2*(-1 + sw^2))*(-9*d^2*(2*Pi)^d*s^2 + 
        2^(1 + d)*Pi^d*(s^2*(-6 + 3*d^2 - 20*swC^2 + 32*swC^4 + 
            d*(6 + 10*swC^2 - 16*swC^4)) + s*(15*d - 3*d^2 - 
            8*(3 - 5*swC^2 + 8*swC^4))*t - 2*(3 - 20*swC^2 + 32*swC^4)*
           t^2)) + mz^2*(1 - sw^2)*(-9*d^2*(2*Pi)^d*s^2 + 
        2^(1 + d)*Pi^d*(2*s^2*(3 + 3*d^2 + 10*swC^2 - 16*swC^4 + 
            d*(-3 - 5*swC^2 + 8*swC^4)) + s*(-15*d + 3*d^2 + 
            8*(3 - 5*swC^2 + 8*swC^4))*t + 2*(3 - 20*swC^2 + 32*swC^4)*t^2))*
       GaugeXi[W]))/(cwC^2*(-1 + d)*Pi^(2*d)*s^3*(-mz^2 + s)*swC^2), 
   ((I/9)*2^(-5 - 2*d)*EL^6*
     (s*(3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-3 - 10*swC^2 + 16*swC^4) + 
          (-3 + 20*swC^2 - 32*swC^4)*t))*(s + mz^2*(-1 + sw^2) + 
         mz^2*(-1 + sw^2)*GaugeXi[W])^2 + s*(s + mz^2*(-1 + sw^2) + 
        mz^2*(-1 + sw^2)*GaugeXi[W])*((-s - mz^2*(-1 + sw^2))*
         (-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(3 + 3*d + 10*swC^2 - 
              16*swC^4) + (3 - 20*swC^2 + 32*swC^4)*t)) - 
        mz^2*(1 - sw^2)*(3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
           (s*(-3 - 10*swC^2 + 16*swC^4) + (-3 + 20*swC^2 - 32*swC^4)*t))*
         GaugeXi[W]) + ((2*Pi)^d*s^2*(3 - 8*swC^2)*(1 - 4*swC^2)*
        (d*(s + mz^2*(-1 + sw^2))^2 + 2*mz^2*(-1 + sw^2)*
          (d*s + (-2 + d)*mz^2*(-1 + sw^2))*GaugeXi[W] + 
         d*mz^4*(-1 + sw^2)^2*GaugeXi[W]^2))/(1 - d) + 
      ((2*Pi)^d*s^2*(3 - 20*swC^2 + 32*swC^4)*(d*(s + mz^2*(-1 + sw^2))^2 + 
         2*mz^2*(-1 + sw^2)*(d*s + (-2 + d)*mz^2*(-1 + sw^2))*GaugeXi[W] + 
         d*mz^4*(-1 + sw^2)^2*GaugeXi[W]^2))/(1 - d) + 
      2*s*(s^2*(3*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(-3 - 10*swC^2 + 16*swC^4))*t + 
        mz^4*(-1 + sw^2)^2*(3*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(-3 - 10*swC^2 + 
            16*swC^4))*t + 2^(1 + d)*mz^2*Pi^d*(1 - sw^2)*
         (s^2*(12 + 3*d^2 + 40*swC^2 - 64*swC^4 + 4*d*(-3 - 5*swC^2 + 
              8*swC^4)) + 3*s*(18 - 11*d + 2*d^2 - 20*swC^2 + 32*swC^4)*t + 
          4*(3 - 20*swC^2 + 32*swC^4)*t^2) - 2^(1 + d)*mz^2*Pi^d*(1 - sw^2)*
         (s*(-6 + 3*d - 20*swC^2 + 32*swC^4)*t + mz^2*(1 - sw^2)*
           (s*(-6 + 3*d - 20*swC^2 + 32*swC^4) + 3*d*t - 
            4*(3 - 5*swC^2 + 8*swC^4)*t))*GaugeXi[W] + 
        mz^4*(-1 + sw^2)^2*(3*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(-3 - 10*swC^2 + 
            16*swC^4))*t*GaugeXi[W]^2) + 
      ((3*d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(2*s*(3 - 5*swC^2 + 8*swC^4) + 
           (3 - 20*swC^2 + 32*swC^4)*t))*((s + mz^2*(-1 + sw^2))^2*
          (d*s + 2*t) + 2*mz^2*(1 - sw^2)*
          (-(mz^2*(-1 + sw^2)*((-2 + d)*s - 2*t)) - s*(d*s + 2*t))*
          GaugeXi[W] + mz^4*(-1 + sw^2)^2*(d*s + 2*t)*GaugeXi[W]^2))/
       (1 - d)))/(cwC^2*Pi^(2*d)*s^3*(-mz^2 + s)*swC^2), 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/9)*2^(-1 - d)*EL^6*(-1 + 4*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
    ((-1 + d)*Pi^d*s^2*(-mz^2 + s)*(-1 + sw^2)), 
   ((-I/9)*4^(-1 - d)*EL^6*(-(d*(2*Pi)^d*s^3) + 2^(1 + d)*Pi^d*s*
       (s^2*(1 + 2*(-2 + d)*sw^2) + 2*s*(-1 + 4*sw^2)*t + 
        2*(-1 + 4*sw^2)*t^2) + 2^(2 + d)*mz^2*Pi^d*(-1 + sw^2)*(-1 + 4*sw^2)*
       ((-2 + d)*s^2 + 4*s*t + 4*t^2)*GaugeXi[W]))/
    ((-1 + d)*Pi^(2*d)*(mz^2 - s)*s^2*(-1 + sw^2)), 
   ((I/9)*2^(-2 - d)*EL^6*(-1 + 4*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
     (s - mz^2*(-1 + sw^2) + mz^2*(-1 + sw^2)*GaugeXi[W]))/
    ((-1 + d)*Pi^d*s^3*(-mz^2 + s)*(-1 + sw^2)), 0, 0, 0, 0, 
   ((I/9)*2^(-2 - d)*EL^6*(-1 + 4*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
     (s + mz^2*(-1 + sw^2) - mz^2*(-1 + sw^2)*GaugeXi[W]))/
    ((-1 + d)*Pi^d*s^3*(-mz^2 + s)*(-1 + sw^2)), 
   ((I/9)*4^(-1 - d)*EL^6*(-(d*(2*Pi)^d*s^4) + 2^(1 + d)*(-3 + 2*d)*mz^2*Pi^d*
       s*(1 - sw^2)*(-1 + 4*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2) + 
      2^(1 + d)*Pi^d*s^2*(s^2*(1 + 2*(-2 + d)*sw^2) + 2*s*(-1 + 4*sw^2)*t + 
        2*(-1 + 4*sw^2)*t^2) + mz^4*(-1 + sw^2)^2*(d*(2*Pi)^d*s^2 + 
        2^(1 + d)*Pi^d*(s^2*(1 - d - 4*sw^2 + 2*d*sw^2) + 
          2*s*(-1 + 4*sw^2)*t + 2*(-1 + 4*sw^2)*t^2)) - 
      2*mz^2*(1 - sw^2)*(s - mz^2*(-1 + sw^2))*(-(d*(2*Pi)^d*s^2) + 
        2^(1 + d)*Pi^d*(s^2*(1 + 2*(-2 + d)*sw^2) + 2*s*(-1 + 4*sw^2)*t + 
          2*(-1 + 4*sw^2)*t^2))*GaugeXi[W] + mz^4*(-1 + sw^2)^2*
       (-(d*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*(s^2*(1 + 2*(-2 + d)*sw^2) + 
          2*s*(-1 + 4*sw^2)*t + 2*(-1 + 4*sw^2)*t^2))*GaugeXi[W]^2))/
    ((-1 + d)*Pi^(2*d)*(mz^2 - s)*s^3*(-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, ((-I/9)*2^(-5 - 2*d)*EL^6*
     (-3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
       (s^2*(-6 + 4*swC^2 + 16*swC^4 + 3*d^2*(sw^2 + swC^2) + 
          sw^2*(12 + 40*swC^2 - 64*swC^4) + 2*d*(3 - 4*swC^2 - 4*swC^4 + 
            2*sw^2*(-3 - 5*swC^2 + 8*swC^4))) + 
        s*(-15*d*(-1 + 2*sw^2 + 2*swC^2) + d^2*(-3 + 6*sw^2 + 6*swC^2) + 
          8*(-3 + 8*swC^2 - 4*swC^4 + 2*sw^2*(3 - 5*swC^2 + 8*swC^4)))*t + 
        2*(-3 + 8*swC^2)*(1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t^2)))/
    (cwC^2*(-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s*(-1 + sw^2)*swC^2), 
   ((I/9)*4^(-3 - d)*EL^6*(-3*d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
       (s^2*(-6 + 4*swC^2 + 16*swC^4 + 3*d^2*(sw^2 + swC^2) + 
          sw^2*(12 + 40*swC^2 - 64*swC^4) + 2*d*(3 - 4*swC^2 - 4*swC^4 + 
            2*sw^2*(-3 - 5*swC^2 + 8*swC^4))) + 
        s*(-15*d*(-1 + 2*sw^2 + 2*swC^2) + d^2*(-3 + 6*sw^2 + 6*swC^2) + 
          8*(-3 + 8*swC^2 - 4*swC^4 + 2*sw^2*(3 - 5*swC^2 + 8*swC^4)))*t + 
        2*(-3 + 8*swC^2)*(1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t^2) - 
      4*mz^2*(1 - sw^2)*(-3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(-6 + 4*swC^2 + 16*swC^4 + 3*d^2*(sw^2 + swC^2) + 
            sw^2*(12 + 40*swC^2 - 64*swC^4) + 2*d*(3 - 4*swC^2 - 4*swC^4 + 
              2*sw^2*(-3 - 5*swC^2 + 8*swC^4))) + 
          s*(-15*d*(-1 + 2*sw^2 + 2*swC^2) + d^2*(-3 + 6*sw^2 + 6*swC^2) + 
            8*(-3 + 8*swC^2 - 4*swC^4 + 2*sw^2*(3 - 5*swC^2 + 8*swC^4)))*t + 
          2*(-3 + 8*swC^2)*(1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t^2))*
       GaugeXi[W]))/(cwC^2*(-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s*(-1 + sw^2)*
     swC^2), ((-I/9)*4^(-3 - d)*EL^6*(3*d^2*(2*Pi)^d*s^3 - 
      2^(1 + d)*Pi^d*s*(s^2*(-6 + 4*swC^2 + 16*swC^4 + 3*d^2*(sw^2 + swC^2) + 
          sw^2*(12 + 40*swC^2 - 64*swC^4) + 2*d*(3 - 4*swC^2 - 4*swC^4 + 
            2*sw^2*(-3 - 5*swC^2 + 8*swC^4))) + 
        s*(-15*d*(-1 + 2*sw^2 + 2*swC^2) + d^2*(-3 + 6*sw^2 + 6*swC^2) + 
          8*(-3 + 8*swC^2 - 4*swC^4 + 2*sw^2*(3 - 5*swC^2 + 8*swC^4)))*t + 
        2*(-3 + 8*swC^2)*(1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t^2) - 
      mz^2*(1 - sw^2)*(9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(-6 + 4*swC^2 + 16*swC^4 + 3*d^2*(-2 + sw^2 + swC^2) + 
            sw^2*(12 + 40*swC^2 - 64*swC^4) + 2*d*(3 - 4*swC^2 - 4*swC^4 + 
              2*sw^2*(-3 - 5*swC^2 + 8*swC^4))) + 
          s*(-15*d*(-1 + 2*sw^2 + 2*swC^2) + d^2*(-3 + 6*sw^2 + 6*swC^2) + 
            8*(-3 + 8*swC^2 - 4*swC^4 + 2*sw^2*(3 - 5*swC^2 + 8*swC^4)))*t + 
          2*(-3 + 8*swC^2)*(1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t^2)) + 
      mz^2*(1 - sw^2)*(-3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(-6 + 4*swC^2 + 16*swC^4 + 3*d^2*(sw^2 + swC^2) + 
            sw^2*(12 + 40*swC^2 - 64*swC^4) + 2*d*(3 - 4*swC^2 - 4*swC^4 + 
              2*sw^2*(-3 - 5*swC^2 + 8*swC^4))) + 
          s*(-15*d*(-1 + 2*sw^2 + 2*swC^2) + d^2*(-3 + 6*sw^2 + 6*swC^2) + 
            8*(-3 + 8*swC^2 - 4*swC^4 + 2*sw^2*(3 - 5*swC^2 + 8*swC^4)))*t + 
          2*(-3 + 8*swC^2)*(1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t^2))*
       GaugeXi[W]))/(cwC^2*(-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s^2*(-1 + sw^2)*
     swC^2), 0, 0, 0, 0, ((I/9)*4^(-3 - d)*EL^6*
     (-((-s - mz^2*(-1 + sw^2))*(-3*d^2*(2*Pi)^d*s^2 + 
         2^(1 + d)*Pi^d*(s^2*(-6 + 4*swC^2 + 16*swC^4 + 
             3*d^2*(sw^2 + swC^2) + sw^2*(12 + 40*swC^2 - 64*swC^4) + 
             2*d*(3 - 4*swC^2 - 4*swC^4 + 2*sw^2*(-3 - 5*swC^2 + 8*swC^4))) + 
           s*(-15*d*(-1 + 2*sw^2 + 2*swC^2) + d^2*(-3 + 6*sw^2 + 6*swC^2) + 
             8*(-3 + 8*swC^2 - 4*swC^4 + 2*sw^2*(3 - 5*swC^2 + 8*swC^4)))*t + 
           2*(-3 + 8*swC^2)*(1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t^2))) + 
      mz^2*(1 - sw^2)*(9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(-6 + 4*swC^2 + 16*swC^4 + 3*d^2*(-2 + sw^2 + swC^2) + 
            sw^2*(12 + 40*swC^2 - 64*swC^4) + 2*d*(3 - 4*swC^2 - 4*swC^4 + 
              2*sw^2*(-3 - 5*swC^2 + 8*swC^4))) + 
          s*(-15*d*(-1 + 2*sw^2 + 2*swC^2) + d^2*(-3 + 6*sw^2 + 6*swC^2) + 
            8*(-3 + 8*swC^2 - 4*swC^4 + 2*sw^2*(3 - 5*swC^2 + 8*swC^4)))*t + 
          2*(-3 + 8*swC^2)*(1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t^2))*
       GaugeXi[W]))/(cwC^2*(-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s^2*(-1 + sw^2)*
     swC^2), 
   ((I/9)*EL^6*
     (-(((2*Pi)^d*(s*(6 - 4*swC^2 - 16*swC^4 + d*(-3 + 6*sw^2 + 6*swC^2) + 
            4*sw^2*(-3 - 10*swC^2 + 16*swC^4)) - 2*(-3 + 8*swC^2)*
           (1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t)*
         (s + mz^2*(-1 + sw^2) + mz^2*(-1 + sw^2)*GaugeXi[W])^2)/s) - 
      ((-3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(3 + (-2 + 3*d)*swC^2 - 8*swC^4 + 
             sw^2*(-6 + 3*d - 20*swC^2 + 32*swC^4)) - (-3 + 8*swC^2)*
            (1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t))*
        (s + mz^2*(-1 + sw^2) + mz^2*(-1 + sw^2)*GaugeXi[W])^2)/s + 
      (2^(1 + d)*Pi^d*(-3 + 8*swC^2)*(1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*
        (d*(s + mz^2*(-1 + sw^2))^2 + 2*mz^2*(-1 + sw^2)*
          (d*s + (-2 + d)*mz^2*(-1 + sw^2))*GaugeXi[W] + 
         d*mz^4*(-1 + sw^2)^2*GaugeXi[W]^2))/(-1 + d) - 
      (2*(s^2*(-3*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(3 + (-2 + 3*d)*swC^2 - 
             8*swC^4 + sw^2*(-6 + 3*d - 20*swC^2 + 32*swC^4)))*t + 
         mz^4*(-1 + sw^2)^2*(-3*d*(2*Pi)^d + 2^(1 + d)*Pi^d*
            (3 + (-2 + 3*d)*swC^2 - 8*swC^4 + sw^2*(-6 + 3*d - 20*swC^2 + 32*
                swC^4)))*t + 2*mz^2*(1 - sw^2)*
          (-3*d*(2*Pi)^d*s*(d*s - 11*t) + 2^(1 + d)*Pi^d*
            (s^2*(-6 + 4*swC^2 + 16*swC^4 + 3*d^2*(sw^2 + swC^2) + sw^2*
                (12 + 40*swC^2 - 64*swC^4) + 2*d*(3 - 4*swC^2 - 4*swC^4 + 
                 2*sw^2*(-3 - 5*swC^2 + 8*swC^4))) + 3*s*(-9 + 22*swC^2 - 8*
                swC^4 - 11*d*(sw^2 + swC^2) + d^2*(-1 + 2*sw^2 + 2*swC^2) + 2*
                sw^2*(9 - 10*swC^2 + 16*swC^4))*t + 2*(-3 + 8*swC^2)*
              (1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t^2)) - 
         2*mz^2*(1 - sw^2)*(s*(-3*d*(2*Pi)^d + 2^(1 + d)*Pi^d*
              (3 + (-2 + 3*d)*swC^2 - 8*swC^4 + sw^2*(-6 + 3*d - 20*swC^2 + 
                 32*swC^4)))*t + mz^2*(1 - sw^2)*(-3*d*(2*Pi)^d*(s + t) + 
             2^(1 + d)*Pi^d*(s*(3 + (-2 + 3*d)*swC^2 - 8*swC^4 + 
                 sw^2*(-6 + 3*d - 20*swC^2 + 32*swC^4)) + (6 + (-16 + 3*d)*
                  swC^2 + 8*swC^4 + sw^2*(3*d - 4*(3 - 5*swC^2 + 8*swC^4)))*
                t)))*GaugeXi[W] + mz^4*(-1 + sw^2)^2*(-3*d*(2*Pi)^d + 
           2^(1 + d)*Pi^d*(3 + (-2 + 3*d)*swC^2 - 8*swC^4 + 
             sw^2*(-6 + 3*d - 20*swC^2 + 32*swC^4)))*t*GaugeXi[W]^2))/s + 
      ((2*Pi)^d*(s*(12 - 32*swC^2 + 16*swC^4 + d*(-3 + 6*sw^2 + 6*swC^2) - 
           8*sw^2*(3 - 5*swC^2 + 8*swC^4)) - 2*(-3 + 8*swC^2)*
          (1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t)*
        ((s + mz^2*(-1 + sw^2))^2*(d*s + 2*t) + 2*mz^2*(1 - sw^2)*
          (-(mz^2*(-1 + sw^2)*((-2 + d)*s - 2*t)) - s*(d*s + 2*t))*
          GaugeXi[W] + mz^4*(-1 + sw^2)^2*(d*s + 2*t)*GaugeXi[W]^2))/
       ((-1 + d)*s^2)))/(2^(2*(3 + d))*cwC^2*Pi^(2*d)*(mz^2 - s)^2*
     (-1 + sw^2)*swC^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, ((-I/9)*2^(-1 - d)*EL^6*(-1 + 4*sw^2)*((-2 + d)*s^2 + 4*s*t + 
      4*t^2))/((-1 + d)*Pi^d*s^2*(-mz^2 + s)*(-1 + sw^2)), 
   ((-I/9)*4^(-1 - d)*EL^6*(-(d*(2*Pi)^d*s^3) + 2^(1 + d)*Pi^d*s*
       (s^2*(1 + 2*(-2 + d)*sw^2) + 2*s*(-1 + 4*sw^2)*t + 
        2*(-1 + 4*sw^2)*t^2) + 2^(2 + d)*mz^2*Pi^d*(-1 + sw^2)*(-1 + 4*sw^2)*
       ((-2 + d)*s^2 + 4*s*t + 4*t^2)*GaugeXi[W]))/
    ((-1 + d)*Pi^(2*d)*(mz^2 - s)*s^2*(-1 + sw^2)), 
   ((I/9)*2^(-2 - d)*EL^6*(-1 + 4*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
     (s - mz^2*(-1 + sw^2) + mz^2*(-1 + sw^2)*GaugeXi[W]))/
    ((-1 + d)*Pi^d*s^3*(-mz^2 + s)*(-1 + sw^2)), 0, 0, 0, 0, 
   ((I/9)*2^(-2 - d)*EL^6*(-1 + 4*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
     (s + mz^2*(-1 + sw^2) - mz^2*(-1 + sw^2)*GaugeXi[W]))/
    ((-1 + d)*Pi^d*s^3*(-mz^2 + s)*(-1 + sw^2)), 
   ((I/9)*4^(-1 - d)*EL^6*(-(d*(2*Pi)^d*s^4) + 2^(1 + d)*(-3 + 2*d)*mz^2*Pi^d*
       s*(1 - sw^2)*(-1 + 4*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2) + 
      2^(1 + d)*Pi^d*s^2*(s^2*(1 + 2*(-2 + d)*sw^2) + 2*s*(-1 + 4*sw^2)*t + 
        2*(-1 + 4*sw^2)*t^2) + mz^4*(-1 + sw^2)^2*(d*(2*Pi)^d*s^2 + 
        2^(1 + d)*Pi^d*(s^2*(1 - d - 4*sw^2 + 2*d*sw^2) + 
          2*s*(-1 + 4*sw^2)*t + 2*(-1 + 4*sw^2)*t^2)) - 
      2*mz^2*(1 - sw^2)*(s - mz^2*(-1 + sw^2))*(-(d*(2*Pi)^d*s^2) + 
        2^(1 + d)*Pi^d*(s^2*(1 + 2*(-2 + d)*sw^2) + 2*s*(-1 + 4*sw^2)*t + 
          2*(-1 + 4*sw^2)*t^2))*GaugeXi[W] + mz^4*(-1 + sw^2)^2*
       (-(d*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*(s^2*(1 + 2*(-2 + d)*sw^2) + 
          2*s*(-1 + 4*sw^2)*t + 2*(-1 + 4*sw^2)*t^2))*GaugeXi[W]^2))/
    ((-1 + d)*Pi^(2*d)*(mz^2 - s)*s^3*(-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, ((-I/9)*2^(-5 - 2*d)*EL^6*
     (-3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
       (s^2*(-6 + 4*swC^2 + 16*swC^4 + 3*d^2*(sw^2 + swC^2) + 
          sw^2*(12 + 40*swC^2 - 64*swC^4) + 2*d*(3 - 4*swC^2 - 4*swC^4 + 
            2*sw^2*(-3 - 5*swC^2 + 8*swC^4))) + 
        s*(-15*d*(-1 + 2*sw^2 + 2*swC^2) + d^2*(-3 + 6*sw^2 + 6*swC^2) + 
          8*(-3 + 8*swC^2 - 4*swC^4 + 2*sw^2*(3 - 5*swC^2 + 8*swC^4)))*t + 
        2*(-3 + 8*swC^2)*(1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t^2)))/
    (cwC^2*(-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s*(-1 + sw^2)*swC^2), 
   ((I/9)*4^(-3 - d)*EL^6*(-3*d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
       (s^2*(-6 + 4*swC^2 + 16*swC^4 + 3*d^2*(sw^2 + swC^2) + 
          sw^2*(12 + 40*swC^2 - 64*swC^4) + 2*d*(3 - 4*swC^2 - 4*swC^4 + 
            2*sw^2*(-3 - 5*swC^2 + 8*swC^4))) + 
        s*(-15*d*(-1 + 2*sw^2 + 2*swC^2) + d^2*(-3 + 6*sw^2 + 6*swC^2) + 
          8*(-3 + 8*swC^2 - 4*swC^4 + 2*sw^2*(3 - 5*swC^2 + 8*swC^4)))*t + 
        2*(-3 + 8*swC^2)*(1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t^2) - 
      4*mz^2*(1 - sw^2)*(-3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(-6 + 4*swC^2 + 16*swC^4 + 3*d^2*(sw^2 + swC^2) + 
            sw^2*(12 + 40*swC^2 - 64*swC^4) + 2*d*(3 - 4*swC^2 - 4*swC^4 + 
              2*sw^2*(-3 - 5*swC^2 + 8*swC^4))) + 
          s*(-15*d*(-1 + 2*sw^2 + 2*swC^2) + d^2*(-3 + 6*sw^2 + 6*swC^2) + 
            8*(-3 + 8*swC^2 - 4*swC^4 + 2*sw^2*(3 - 5*swC^2 + 8*swC^4)))*t + 
          2*(-3 + 8*swC^2)*(1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t^2))*
       GaugeXi[W]))/(cwC^2*(-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s*(-1 + sw^2)*
     swC^2), ((-I/9)*4^(-3 - d)*EL^6*(3*d^2*(2*Pi)^d*s^3 - 
      2^(1 + d)*Pi^d*s*(s^2*(-6 + 4*swC^2 + 16*swC^4 + 3*d^2*(sw^2 + swC^2) + 
          sw^2*(12 + 40*swC^2 - 64*swC^4) + 2*d*(3 - 4*swC^2 - 4*swC^4 + 
            2*sw^2*(-3 - 5*swC^2 + 8*swC^4))) + 
        s*(-15*d*(-1 + 2*sw^2 + 2*swC^2) + d^2*(-3 + 6*sw^2 + 6*swC^2) + 
          8*(-3 + 8*swC^2 - 4*swC^4 + 2*sw^2*(3 - 5*swC^2 + 8*swC^4)))*t + 
        2*(-3 + 8*swC^2)*(1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t^2) - 
      mz^2*(1 - sw^2)*(9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(-6 + 4*swC^2 + 16*swC^4 + 3*d^2*(-2 + sw^2 + swC^2) + 
            sw^2*(12 + 40*swC^2 - 64*swC^4) + 2*d*(3 - 4*swC^2 - 4*swC^4 + 
              2*sw^2*(-3 - 5*swC^2 + 8*swC^4))) + 
          s*(-15*d*(-1 + 2*sw^2 + 2*swC^2) + d^2*(-3 + 6*sw^2 + 6*swC^2) + 
            8*(-3 + 8*swC^2 - 4*swC^4 + 2*sw^2*(3 - 5*swC^2 + 8*swC^4)))*t + 
          2*(-3 + 8*swC^2)*(1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t^2)) + 
      mz^2*(1 - sw^2)*(-3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(-6 + 4*swC^2 + 16*swC^4 + 3*d^2*(sw^2 + swC^2) + 
            sw^2*(12 + 40*swC^2 - 64*swC^4) + 2*d*(3 - 4*swC^2 - 4*swC^4 + 
              2*sw^2*(-3 - 5*swC^2 + 8*swC^4))) + 
          s*(-15*d*(-1 + 2*sw^2 + 2*swC^2) + d^2*(-3 + 6*sw^2 + 6*swC^2) + 
            8*(-3 + 8*swC^2 - 4*swC^4 + 2*sw^2*(3 - 5*swC^2 + 8*swC^4)))*t + 
          2*(-3 + 8*swC^2)*(1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t^2))*
       GaugeXi[W]))/(cwC^2*(-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s^2*(-1 + sw^2)*
     swC^2), 0, 0, 0, 0, ((I/9)*4^(-3 - d)*EL^6*
     (-((-s - mz^2*(-1 + sw^2))*(-3*d^2*(2*Pi)^d*s^2 + 
         2^(1 + d)*Pi^d*(s^2*(-6 + 4*swC^2 + 16*swC^4 + 
             3*d^2*(sw^2 + swC^2) + sw^2*(12 + 40*swC^2 - 64*swC^4) + 
             2*d*(3 - 4*swC^2 - 4*swC^4 + 2*sw^2*(-3 - 5*swC^2 + 8*swC^4))) + 
           s*(-15*d*(-1 + 2*sw^2 + 2*swC^2) + d^2*(-3 + 6*sw^2 + 6*swC^2) + 
             8*(-3 + 8*swC^2 - 4*swC^4 + 2*sw^2*(3 - 5*swC^2 + 8*swC^4)))*t + 
           2*(-3 + 8*swC^2)*(1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t^2))) + 
      mz^2*(1 - sw^2)*(9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(-6 + 4*swC^2 + 16*swC^4 + 3*d^2*(-2 + sw^2 + swC^2) + 
            sw^2*(12 + 40*swC^2 - 64*swC^4) + 2*d*(3 - 4*swC^2 - 4*swC^4 + 
              2*sw^2*(-3 - 5*swC^2 + 8*swC^4))) + 
          s*(-15*d*(-1 + 2*sw^2 + 2*swC^2) + d^2*(-3 + 6*sw^2 + 6*swC^2) + 
            8*(-3 + 8*swC^2 - 4*swC^4 + 2*sw^2*(3 - 5*swC^2 + 8*swC^4)))*t + 
          2*(-3 + 8*swC^2)*(1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t^2))*
       GaugeXi[W]))/(cwC^2*(-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s^2*(-1 + sw^2)*
     swC^2), 
   ((I/9)*EL^6*
     (-(((2*Pi)^d*(s*(6 - 4*swC^2 - 16*swC^4 + d*(-3 + 6*sw^2 + 6*swC^2) + 
            4*sw^2*(-3 - 10*swC^2 + 16*swC^4)) - 2*(-3 + 8*swC^2)*
           (1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t)*
         (s + mz^2*(-1 + sw^2) + mz^2*(-1 + sw^2)*GaugeXi[W])^2)/s) - 
      ((-3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(3 + (-2 + 3*d)*swC^2 - 8*swC^4 + 
             sw^2*(-6 + 3*d - 20*swC^2 + 32*swC^4)) - (-3 + 8*swC^2)*
            (1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t))*
        (s + mz^2*(-1 + sw^2) + mz^2*(-1 + sw^2)*GaugeXi[W])^2)/s + 
      (2^(1 + d)*Pi^d*(-3 + 8*swC^2)*(1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*
        (d*(s + mz^2*(-1 + sw^2))^2 + 2*mz^2*(-1 + sw^2)*
          (d*s + (-2 + d)*mz^2*(-1 + sw^2))*GaugeXi[W] + 
         d*mz^4*(-1 + sw^2)^2*GaugeXi[W]^2))/(-1 + d) - 
      (2*(s^2*(-3*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(3 + (-2 + 3*d)*swC^2 - 
             8*swC^4 + sw^2*(-6 + 3*d - 20*swC^2 + 32*swC^4)))*t + 
         mz^4*(-1 + sw^2)^2*(-3*d*(2*Pi)^d + 2^(1 + d)*Pi^d*
            (3 + (-2 + 3*d)*swC^2 - 8*swC^4 + sw^2*(-6 + 3*d - 20*swC^2 + 32*
                swC^4)))*t + 2*mz^2*(1 - sw^2)*
          (-3*d*(2*Pi)^d*s*(d*s - 11*t) + 2^(1 + d)*Pi^d*
            (s^2*(-6 + 4*swC^2 + 16*swC^4 + 3*d^2*(sw^2 + swC^2) + sw^2*
                (12 + 40*swC^2 - 64*swC^4) + 2*d*(3 - 4*swC^2 - 4*swC^4 + 
                 2*sw^2*(-3 - 5*swC^2 + 8*swC^4))) + 3*s*(-9 + 22*swC^2 - 8*
                swC^4 - 11*d*(sw^2 + swC^2) + d^2*(-1 + 2*sw^2 + 2*swC^2) + 2*
                sw^2*(9 - 10*swC^2 + 16*swC^4))*t + 2*(-3 + 8*swC^2)*
              (1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t^2)) - 
         2*mz^2*(1 - sw^2)*(s*(-3*d*(2*Pi)^d + 2^(1 + d)*Pi^d*
              (3 + (-2 + 3*d)*swC^2 - 8*swC^4 + sw^2*(-6 + 3*d - 20*swC^2 + 
                 32*swC^4)))*t + mz^2*(1 - sw^2)*(-3*d*(2*Pi)^d*(s + t) + 
             2^(1 + d)*Pi^d*(s*(3 + (-2 + 3*d)*swC^2 - 8*swC^4 + 
                 sw^2*(-6 + 3*d - 20*swC^2 + 32*swC^4)) + (6 + (-16 + 3*d)*
                  swC^2 + 8*swC^4 + sw^2*(3*d - 4*(3 - 5*swC^2 + 8*swC^4)))*
                t)))*GaugeXi[W] + mz^4*(-1 + sw^2)^2*(-3*d*(2*Pi)^d + 
           2^(1 + d)*Pi^d*(3 + (-2 + 3*d)*swC^2 - 8*swC^4 + 
             sw^2*(-6 + 3*d - 20*swC^2 + 32*swC^4)))*t*GaugeXi[W]^2))/s + 
      ((2*Pi)^d*(s*(12 - 32*swC^2 + 16*swC^4 + d*(-3 + 6*sw^2 + 6*swC^2) - 
           8*sw^2*(3 - 5*swC^2 + 8*swC^4)) - 2*(-3 + 8*swC^2)*
          (1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t)*
        ((s + mz^2*(-1 + sw^2))^2*(d*s + 2*t) + 2*mz^2*(1 - sw^2)*
          (-(mz^2*(-1 + sw^2)*((-2 + d)*s - 2*t)) - s*(d*s + 2*t))*
          GaugeXi[W] + mz^4*(-1 + sw^2)^2*(d*s + 2*t)*GaugeXi[W]^2))/
       ((-1 + d)*s^2)))/(2^(2*(3 + d))*cwC^2*Pi^(2*d)*(mz^2 - s)^2*
     (-1 + sw^2)*swC^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, ((-I/9)*2^(-2 - d)*EL^6*(-3 + 8*sw^2)*((-2 + d)*s^2 + 4*s*t + 
      4*t^2))/((-1 + d)*Pi^d*s^2*(-mz^2 + s)*(-1 + sw^2)), 
   ((-I/9)*2^(-3 - 2*d)*EL^6*(-3*d*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
       (s^2*(3 + 4*(-2 + d)*sw^2) + 2*s*(-3 + 8*sw^2)*t + 
        2*(-3 + 8*sw^2)*t^2) + 2^(2 + d)*mz^2*Pi^d*(-1 + sw^2)*(-3 + 8*sw^2)*
       ((-2 + d)*s^2 + 4*s*t + 4*t^2)*GaugeXi[W]))/
    ((-1 + d)*Pi^(2*d)*(mz^2 - s)*s^2*(-1 + sw^2)), 
   ((I/9)*2^(-3 - d)*EL^6*(-3 + 8*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
     (s - mz^2*(-1 + sw^2) + mz^2*(-1 + sw^2)*GaugeXi[W]))/
    ((-1 + d)*Pi^d*s^3*(-mz^2 + s)*(-1 + sw^2)), 0, 0, 0, 0, 
   ((I/9)*2^(-3 - d)*EL^6*(-3 + 8*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
     (s + mz^2*(-1 + sw^2) - mz^2*(-1 + sw^2)*GaugeXi[W]))/
    ((-1 + d)*Pi^d*s^3*(-mz^2 + s)*(-1 + sw^2)), 
   ((I/9)*2^(-3 - 2*d)*EL^6*(-3*d*(2*Pi)^d*s^4 + 2^(1 + d)*(-3 + 2*d)*mz^2*
       Pi^d*s*(1 - sw^2)*(-3 + 8*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2) + 
      2^(1 + d)*Pi^d*s^2*(s^2*(3 + 4*(-2 + d)*sw^2) + 2*s*(-3 + 8*sw^2)*t + 
        2*(-3 + 8*sw^2)*t^2) + mz^4*(-1 + sw^2)^2*(9*d*(2*Pi)^d*s^2 + 
        2^(1 + d)*Pi^d*(s^2*(3 - 6*d - 8*sw^2 + 4*d*sw^2) + 
          2*s*(-3 + 8*sw^2)*t + 2*(-3 + 8*sw^2)*t^2)) - 
      2*mz^2*(1 - sw^2)*(s - mz^2*(-1 + sw^2))*(-3*d*(2*Pi)^d*s^2 + 
        2^(1 + d)*Pi^d*(s^2*(3 + 4*(-2 + d)*sw^2) + 2*s*(-3 + 8*sw^2)*t + 
          2*(-3 + 8*sw^2)*t^2))*GaugeXi[W] + mz^4*(-1 + sw^2)^2*
       (-3*d*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*(s^2*(3 + 4*(-2 + d)*sw^2) + 
          2*s*(-3 + 8*sw^2)*t + 2*(-3 + 8*sw^2)*t^2))*GaugeXi[W]^2))/
    ((-1 + d)*Pi^(2*d)*(mz^2 - s)*s^3*(-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, ((-I/9)*2^(-6 - d)*EL^6*
     (s^2*(3*d^2*(-3 + 4*sw^2 + 4*swC^2) + 4*d*(-3*(-3 + swC^2 + 4*swC^4) + 
          4*sw^2*(-3 - 5*swC^2 + 8*swC^4)) - 4*(9 + 6*swC^2 - 24*swC^4 + 
          4*sw^2*(-3 - 10*swC^2 + 16*swC^4))) + 
      2*s*(-15*d*(-3 + 4*sw^2 + 4*swC^2) + 3*d^2*(-3 + 4*sw^2 + 4*swC^2) - 
        24*(3 - 7*swC^2 + 4*swC^4) + 32*sw^2*(3 - 5*swC^2 + 8*swC^4))*t + 
      4*(-1 + 4*swC^2)*(9 - 12*swC^2 + 4*sw^2*(-3 + 8*swC^2))*t^2))/
    (cwC^2*(-1 + d)*Pi^d*(mz^2 - s)^2*s*(-1 + sw^2)*swC^2), 
   ((I/9)*2^(-7 - d)*EL^6*(s^2*(3*d^2*(-3 + 4*sw^2 + 4*swC^2) + 
        4*d*(-3*(-3 + swC^2 + 4*swC^4) + 4*sw^2*(-3 - 5*swC^2 + 8*swC^4)) - 
        4*(9 + 6*swC^2 - 24*swC^4 + 4*sw^2*(-3 - 10*swC^2 + 16*swC^4))) + 
      2*s*(-15*d*(-3 + 4*sw^2 + 4*swC^2) + 3*d^2*(-3 + 4*sw^2 + 4*swC^2) - 
        24*(3 - 7*swC^2 + 4*swC^4) + 32*sw^2*(3 - 5*swC^2 + 8*swC^4))*t + 
      4*(-1 + 4*swC^2)*(9 - 12*swC^2 + 4*sw^2*(-3 + 8*swC^2))*t^2)*
     (s + 4*mz^2*(-1 + sw^2)*GaugeXi[W]))/(cwC^2*(-1 + d)*Pi^d*(mz^2 - s)^2*s*
     (-1 + sw^2)*swC^2), ((I/9)*2^(-7 - d)*EL^6*
     (s^2*(3*d^2*(-3 + 4*sw^2 + 4*swC^2) + 4*d*(-3*(-3 + swC^2 + 4*swC^4) + 
          4*sw^2*(-3 - 5*swC^2 + 8*swC^4)) - 4*(9 + 6*swC^2 - 24*swC^4 + 
          4*sw^2*(-3 - 10*swC^2 + 16*swC^4))) + 
      2*s*(-15*d*(-3 + 4*sw^2 + 4*swC^2) + 3*d^2*(-3 + 4*sw^2 + 4*swC^2) - 
        24*(3 - 7*swC^2 + 4*swC^4) + 32*sw^2*(3 - 5*swC^2 + 8*swC^4))*t + 
      4*(-1 + 4*swC^2)*(9 - 12*swC^2 + 4*sw^2*(-3 + 8*swC^2))*t^2)*
     (s - mz^2*(-1 + sw^2) + mz^2*(-1 + sw^2)*GaugeXi[W]))/
    (cwC^2*(-1 + d)*Pi^d*(mz^2 - s)^2*s^2*(-1 + sw^2)*swC^2), 0, 0, 0, 0, 
   ((I/9)*2^(-7 - d)*EL^6*(s^2*(3*d^2*(-3 + 4*sw^2 + 4*swC^2) + 
        4*d*(-3*(-3 + swC^2 + 4*swC^4) + 4*sw^2*(-3 - 5*swC^2 + 8*swC^4)) - 
        4*(9 + 6*swC^2 - 24*swC^4 + 4*sw^2*(-3 - 10*swC^2 + 16*swC^4))) + 
      2*s*(-15*d*(-3 + 4*sw^2 + 4*swC^2) + 3*d^2*(-3 + 4*sw^2 + 4*swC^2) - 
        24*(3 - 7*swC^2 + 4*swC^4) + 32*sw^2*(3 - 5*swC^2 + 8*swC^4))*t + 
      4*(-1 + 4*swC^2)*(9 - 12*swC^2 + 4*sw^2*(-3 + 8*swC^2))*t^2)*
     (s + mz^2*(-1 + sw^2) - mz^2*(-1 + sw^2)*GaugeXi[W]))/
    (cwC^2*(-1 + d)*Pi^d*(mz^2 - s)^2*s^2*(-1 + sw^2)*swC^2), 
   ((-I/9)*2^(-7 - d)*EL^6*(s^2*(3*d^2*(-3 + 4*sw^2 + 4*swC^2) + 
        4*d*(-3*(-3 + swC^2 + 4*swC^4) + 4*sw^2*(-3 - 5*swC^2 + 8*swC^4)) - 
        4*(9 + 6*swC^2 - 24*swC^4 + 4*sw^2*(-3 - 10*swC^2 + 16*swC^4))) + 
      2*s*(-15*d*(-3 + 4*sw^2 + 4*swC^2) + 3*d^2*(-3 + 4*sw^2 + 4*swC^2) - 
        24*(3 - 7*swC^2 + 4*swC^4) + 32*sw^2*(3 - 5*swC^2 + 8*swC^4))*t + 
      4*(-1 + 4*swC^2)*(9 - 12*swC^2 + 4*sw^2*(-3 + 8*swC^2))*t^2)*
     (s^2 - 2*(-3 + 2*d)*mz^2*s*(-1 + sw^2) + mz^4*(-1 + sw^2)^2 - 
      2*mz^2*(-1 + sw^2)*(-s + mz^2*(-1 + sw^2))*GaugeXi[W] + 
      mz^4*(-1 + sw^2)^2*GaugeXi[W]^2))/(cwC^2*(-1 + d)*Pi^d*(mz^2 - s)^2*s^2*
     (-1 + sw^2)*swC^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, ((-I/9)*2^(-2 - d)*EL^6*(-3 + 8*sw^2)*((-2 + d)*s^2 + 4*s*t + 
      4*t^2))/((-1 + d)*Pi^d*s^2*(-mz^2 + s)*(-1 + sw^2)), 
   ((-I/9)*2^(-3 - 2*d)*EL^6*(-3*d*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
       (s^2*(3 + 4*(-2 + d)*sw^2) + 2*s*(-3 + 8*sw^2)*t + 
        2*(-3 + 8*sw^2)*t^2) + 2^(2 + d)*mz^2*Pi^d*(-1 + sw^2)*(-3 + 8*sw^2)*
       ((-2 + d)*s^2 + 4*s*t + 4*t^2)*GaugeXi[W]))/
    ((-1 + d)*Pi^(2*d)*(mz^2 - s)*s^2*(-1 + sw^2)), 
   ((I/9)*2^(-3 - d)*EL^6*(-3 + 8*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
     (s - mz^2*(-1 + sw^2) + mz^2*(-1 + sw^2)*GaugeXi[W]))/
    ((-1 + d)*Pi^d*s^3*(-mz^2 + s)*(-1 + sw^2)), 0, 0, 0, 0, 
   ((I/9)*2^(-3 - d)*EL^6*(-3 + 8*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
     (s + mz^2*(-1 + sw^2) - mz^2*(-1 + sw^2)*GaugeXi[W]))/
    ((-1 + d)*Pi^d*s^3*(-mz^2 + s)*(-1 + sw^2)), 
   ((I/9)*2^(-3 - 2*d)*EL^6*(-3*d*(2*Pi)^d*s^4 + 2^(1 + d)*(-3 + 2*d)*mz^2*
       Pi^d*s*(1 - sw^2)*(-3 + 8*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2) + 
      2^(1 + d)*Pi^d*s^2*(s^2*(3 + 4*(-2 + d)*sw^2) + 2*s*(-3 + 8*sw^2)*t + 
        2*(-3 + 8*sw^2)*t^2) + mz^4*(-1 + sw^2)^2*(9*d*(2*Pi)^d*s^2 + 
        2^(1 + d)*Pi^d*(s^2*(3 - 6*d - 8*sw^2 + 4*d*sw^2) + 
          2*s*(-3 + 8*sw^2)*t + 2*(-3 + 8*sw^2)*t^2)) - 
      2*mz^2*(1 - sw^2)*(s - mz^2*(-1 + sw^2))*(-3*d*(2*Pi)^d*s^2 + 
        2^(1 + d)*Pi^d*(s^2*(3 + 4*(-2 + d)*sw^2) + 2*s*(-3 + 8*sw^2)*t + 
          2*(-3 + 8*sw^2)*t^2))*GaugeXi[W] + mz^4*(-1 + sw^2)^2*
       (-3*d*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*(s^2*(3 + 4*(-2 + d)*sw^2) + 
          2*s*(-3 + 8*sw^2)*t + 2*(-3 + 8*sw^2)*t^2))*GaugeXi[W]^2))/
    ((-1 + d)*Pi^(2*d)*(mz^2 - s)*s^3*(-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, ((-I/9)*2^(-6 - d)*EL^6*
     (s^2*(3*d^2*(-3 + 4*sw^2 + 4*swC^2) + 4*d*(-3*(-3 + swC^2 + 4*swC^4) + 
          4*sw^2*(-3 - 5*swC^2 + 8*swC^4)) - 4*(9 + 6*swC^2 - 24*swC^4 + 
          4*sw^2*(-3 - 10*swC^2 + 16*swC^4))) + 
      2*s*(-15*d*(-3 + 4*sw^2 + 4*swC^2) + 3*d^2*(-3 + 4*sw^2 + 4*swC^2) - 
        24*(3 - 7*swC^2 + 4*swC^4) + 32*sw^2*(3 - 5*swC^2 + 8*swC^4))*t + 
      4*(-1 + 4*swC^2)*(9 - 12*swC^2 + 4*sw^2*(-3 + 8*swC^2))*t^2))/
    (cwC^2*(-1 + d)*Pi^d*(mz^2 - s)^2*s*(-1 + sw^2)*swC^2), 
   ((I/9)*2^(-7 - d)*EL^6*(s^2*(3*d^2*(-3 + 4*sw^2 + 4*swC^2) + 
        4*d*(-3*(-3 + swC^2 + 4*swC^4) + 4*sw^2*(-3 - 5*swC^2 + 8*swC^4)) - 
        4*(9 + 6*swC^2 - 24*swC^4 + 4*sw^2*(-3 - 10*swC^2 + 16*swC^4))) + 
      2*s*(-15*d*(-3 + 4*sw^2 + 4*swC^2) + 3*d^2*(-3 + 4*sw^2 + 4*swC^2) - 
        24*(3 - 7*swC^2 + 4*swC^4) + 32*sw^2*(3 - 5*swC^2 + 8*swC^4))*t + 
      4*(-1 + 4*swC^2)*(9 - 12*swC^2 + 4*sw^2*(-3 + 8*swC^2))*t^2)*
     (s + 4*mz^2*(-1 + sw^2)*GaugeXi[W]))/(cwC^2*(-1 + d)*Pi^d*(mz^2 - s)^2*s*
     (-1 + sw^2)*swC^2), ((I/9)*2^(-7 - d)*EL^6*
     (s^2*(3*d^2*(-3 + 4*sw^2 + 4*swC^2) + 4*d*(-3*(-3 + swC^2 + 4*swC^4) + 
          4*sw^2*(-3 - 5*swC^2 + 8*swC^4)) - 4*(9 + 6*swC^2 - 24*swC^4 + 
          4*sw^2*(-3 - 10*swC^2 + 16*swC^4))) + 
      2*s*(-15*d*(-3 + 4*sw^2 + 4*swC^2) + 3*d^2*(-3 + 4*sw^2 + 4*swC^2) - 
        24*(3 - 7*swC^2 + 4*swC^4) + 32*sw^2*(3 - 5*swC^2 + 8*swC^4))*t + 
      4*(-1 + 4*swC^2)*(9 - 12*swC^2 + 4*sw^2*(-3 + 8*swC^2))*t^2)*
     (s - mz^2*(-1 + sw^2) + mz^2*(-1 + sw^2)*GaugeXi[W]))/
    (cwC^2*(-1 + d)*Pi^d*(mz^2 - s)^2*s^2*(-1 + sw^2)*swC^2), 0, 0, 0, 0, 
   ((I/9)*2^(-7 - d)*EL^6*(s^2*(3*d^2*(-3 + 4*sw^2 + 4*swC^2) + 
        4*d*(-3*(-3 + swC^2 + 4*swC^4) + 4*sw^2*(-3 - 5*swC^2 + 8*swC^4)) - 
        4*(9 + 6*swC^2 - 24*swC^4 + 4*sw^2*(-3 - 10*swC^2 + 16*swC^4))) + 
      2*s*(-15*d*(-3 + 4*sw^2 + 4*swC^2) + 3*d^2*(-3 + 4*sw^2 + 4*swC^2) - 
        24*(3 - 7*swC^2 + 4*swC^4) + 32*sw^2*(3 - 5*swC^2 + 8*swC^4))*t + 
      4*(-1 + 4*swC^2)*(9 - 12*swC^2 + 4*sw^2*(-3 + 8*swC^2))*t^2)*
     (s + mz^2*(-1 + sw^2) - mz^2*(-1 + sw^2)*GaugeXi[W]))/
    (cwC^2*(-1 + d)*Pi^d*(mz^2 - s)^2*s^2*(-1 + sw^2)*swC^2), 
   ((-I/9)*2^(-7 - d)*EL^6*(s^2*(3*d^2*(-3 + 4*sw^2 + 4*swC^2) + 
        4*d*(-3*(-3 + swC^2 + 4*swC^4) + 4*sw^2*(-3 - 5*swC^2 + 8*swC^4)) - 
        4*(9 + 6*swC^2 - 24*swC^4 + 4*sw^2*(-3 - 10*swC^2 + 16*swC^4))) + 
      2*s*(-15*d*(-3 + 4*sw^2 + 4*swC^2) + 3*d^2*(-3 + 4*sw^2 + 4*swC^2) - 
        24*(3 - 7*swC^2 + 4*swC^4) + 32*sw^2*(3 - 5*swC^2 + 8*swC^4))*t + 
      4*(-1 + 4*swC^2)*(9 - 12*swC^2 + 4*sw^2*(-3 + 8*swC^2))*t^2)*
     (s^2 - 2*(-3 + 2*d)*mz^2*s*(-1 + sw^2) + mz^4*(-1 + sw^2)^2 - 
      2*mz^2*(-1 + sw^2)*(-s + mz^2*(-1 + sw^2))*GaugeXi[W] + 
      mz^4*(-1 + sw^2)^2*GaugeXi[W]^2))/(cwC^2*(-1 + d)*Pi^d*(mz^2 - s)^2*s^2*
     (-1 + sw^2)*swC^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/9)*2^(-5 - 2*d)*EL^6*mz^2*(3*d^2*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(2*s^2*(3 + 10*sw^2 - 16*sw^4 + 
          d*(-3 - 5*sw^2 + 8*sw^4)) + s*(-15*d + 3*d^2 + 
          8*(3 - 5*sw^2 + 8*sw^4))*t + 2*(3 - 20*sw^2 + 32*sw^4)*t^2))*
     (-1 + GaugeXi[Z]))/((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s^2*sw^4*
     (-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((I/9)*2^(-5 - 2*d)*EL^6*(3*d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
       (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
        s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
        2*(3 - 20*sw^2 + 32*sw^4)*t^2) + mh^2*(-9*d^2*(2*Pi)^d*s^2 + 
        2^(1 + d)*Pi^d*(s^2*(-6 + 3*d^2 - 20*sw^2 + 32*sw^4 + 
            d*(6 + 10*sw^2 - 16*sw^4)) + s*(15*d - 3*d^2 - 
            8*(3 - 5*sw^2 + 8*sw^4))*t - 2*(3 - 20*sw^2 + 32*sw^4)*t^2)) + 
      mz^2*(-9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (2*s^2*(3 + 3*d^2 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
          s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[Z]))/
    ((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s^2*sw^4*(-1 + sw^2)^2), 
   ((-I/9)*2^(-5 - 2*d)*EL^6*mz^2*
     (((3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-3 - 10*sw^2 + 16*sw^4) + 
           (-3 + 20*sw^2 - 32*sw^4)*t))*(mh^2 - s + mz^2*GaugeXi[Z])^2)/s - 
      ((mh^2 - s + mz^2*GaugeXi[Z])*
        (s*(3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-3 - 10*sw^2 + 16*sw^4) + 
             (-3 + 20*sw^2 - 32*sw^4)*t)) + mh^2*(-9*d*(2*Pi)^d*s + 
           2^(1 + d)*Pi^d*(s*(3 + 3*d + 10*sw^2 - 16*sw^4) + 
             (3 - 20*sw^2 + 32*sw^4)*t)) - mz^2*(3*d*(2*Pi)^d*s + 
           2^(1 + d)*Pi^d*(s*(-3 - 10*sw^2 + 16*sw^4) + 
             (-3 + 20*sw^2 - 32*sw^4)*t))*GaugeXi[Z]))/s - 
      ((2*Pi)^d*(-1 + 4*sw^2)*(-3 + 8*sw^2)*(d*(mh^2 - s)^2 + 
         2*mz^2*((-2 + d)*mh^2 - d*s)*GaugeXi[Z] + d*mz^4*GaugeXi[Z]^2))/
       (-1 + d) - ((2*Pi)^d*(3 - 20*sw^2 + 32*sw^4)*(d*(mh^2 - s)^2 + 
         2*mz^2*((-2 + d)*mh^2 - d*s)*GaugeXi[Z] + d*mz^4*GaugeXi[Z]^2))/
       (-1 + d) + 
      (2*((-(2^(1 + d)*mh^2*Pi^d*s*(-6 + 3*d - 20*sw^2 + 32*sw^4)) + 
           mh^4*(3*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(-3 - 10*sw^2 + 16*sw^4)) + 
           s^2*(3*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(-3 - 10*sw^2 + 16*sw^4)))*t - 
         2^(1 + d)*mz^2*Pi^d*(s*(-6 + 3*d - 20*sw^2 + 32*sw^4)*t + 
           mh^2*(s*(-6 + 3*d - 20*sw^2 + 32*sw^4) + 3*d*t - 
             4*(3 - 5*sw^2 + 8*sw^4)*t))*GaugeXi[Z] + 
         mz^4*(3*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(-3 - 10*sw^2 + 16*sw^4))*t*
          GaugeXi[Z]^2))/s + ((-3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
          (2*s*(3 - 5*sw^2 + 8*sw^4) + (3 - 20*sw^2 + 32*sw^4)*t))*
        ((mh^2 - s)^2*(d*s + 2*t) + 2*mz^2*(mh^2*((-2 + d)*s - 2*t) - 
           s*(d*s + 2*t))*GaugeXi[Z] + mz^4*(d*s + 2*t)*GaugeXi[Z]^2))/
       ((-1 + d)*s^2)))/(Pi^(2*d)*(mz^3 - mz*s)^2*sw^4*(-1 + sw^2)^2), 
   ((-I/9)*2^(-5 - 2*d)*EL^6*(3*d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
       (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
        s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
        2*(3 - 20*sw^2 + 32*sw^4)*t^2) + mh^2*(-9*d^2*(2*Pi)^d*s^2 + 
        2^(1 + d)*Pi^d*(s^2*(-6 + 3*d^2 - 20*sw^2 + 32*sw^4 + 
            d*(6 + 10*sw^2 - 16*sw^4)) + s*(15*d - 3*d^2 - 
            8*(3 - 5*sw^2 + 8*sw^4))*t - 2*(3 - 20*sw^2 + 32*sw^4)*t^2)) + 
      mz^2*(-9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (2*s^2*(3 + 3*d^2 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
          s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          2*(3 - 20*sw^2 + 32*sw^4)*t^2))))/((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*
     s^2*sw^4*(-1 + sw^2)^2), ((-I/9)*2^(-5 - 2*d)*EL^6*mz^2*
     (((2*Pi)^d*(-4*mh^2*mz^2 + d*(mh^2 + mz^2 - s)^2)*(-1 + 4*sw^2)*
        (-3 + 8*sw^2))/(-1 + d) + 
      ((2*Pi)^d*(-4*mh^2*mz^2 + d*(mh^2 + mz^2 - s)^2)*
        (3 - 20*sw^2 + 32*sw^4))/(-1 + d) - 
      ((mh^2 + mz^2 - s)^2*(3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
          (s*(-3 - 10*sw^2 + 16*sw^4) + (-3 + 20*sw^2 - 32*sw^4)*t)))/s + 
      ((3*d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(2*s*(3 - 5*sw^2 + 8*sw^4) + 
           (3 - 20*sw^2 + 32*sw^4)*t))*(d*(mh^2 + mz^2 - s)^2*s + 2*mh^4*t + 
         2*(mz^2 - s)^2*t - 4*mh^2*(s*t + mz^2*(s + t))))/((-1 + d)*s^2) - 
      (2*(mh^4*(3*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(-3 - 10*sw^2 + 16*sw^4))*t + 
         mz^4*(3*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(-3 - 10*sw^2 + 16*sw^4))*t + 
         s^2*(3*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(-3 - 10*sw^2 + 16*sw^4))*t + 
         2^(1 + d)*mz^2*Pi^d*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
             4*d*(-3 - 5*sw^2 + 8*sw^4)) + 3*s*(18 - 11*d + 2*d^2 - 20*sw^2 + 
             32*sw^4)*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2) - 
         2^(1 + d)*mh^2*Pi^d*(s*(-6 + 3*d - 20*sw^2 + 32*sw^4)*t + 
           mz^2*(s*(-6 + 3*d - 20*sw^2 + 32*sw^4) + 3*d*t - 
             4*(3 - 5*sw^2 + 8*sw^4)*t))))/s + 
      ((mh^2 + mz^2 - s)*(-((mz^2 - s)*(3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
             (s*(-3 - 10*sw^2 + 16*sw^4) + (-3 + 20*sw^2 - 32*sw^4)*t))) + 
         mh^2*(-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (s*(3 + 3*d + 10*sw^2 - 16*sw^4) + (3 - 20*sw^2 + 32*sw^4)*t))))/
       s))/(Pi^(2*d)*(mz^3 - mz*s)^2*sw^4*(-1 + sw^2)^2)}, 
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ((I/9)*2^(-8 - d)*EL^6*mz^2*
     (s^2*(3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
        4*d*(-9 + 30*swC^2 - 24*swC^4 + sw^2*(30 - 22*swC^2 - 40*swC^4) + 
          8*sw^4*(-3 - 5*swC^2 + 8*swC^4)) - 4*(-9 + 30*swC^2 - 24*swC^4 + 
          sw^2*(30 + 4*swC^2 - 80*swC^4) + 8*sw^4*(-3 - 10*swC^2 + 
            16*swC^4))) + 2*s*(-15*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2)) + 3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
          sw^2*(-30 + 74*swC^2 - 40*swC^4) + 8*sw^4*(3 - 5*swC^2 + 8*swC^4)))*
       t + 4*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 
        2*sw^2*(15 - 76*swC^2 + 80*swC^4))*t^2)*(-1 + GaugeXi[Z]))/
    (cwC^2*(-1 + d)*Pi^d*(mz^2 - s)^3*s*sw^4*(-1 + sw^2)^2*swC^2), 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, ((-I/9)*2^(-8 - d)*EL^6*
     (s^2*(3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
        4*d*(-9 + 30*swC^2 - 24*swC^4 + sw^2*(30 - 22*swC^2 - 40*swC^4) + 
          8*sw^4*(-3 - 5*swC^2 + 8*swC^4)) - 4*(-9 + 30*swC^2 - 24*swC^4 + 
          sw^2*(30 + 4*swC^2 - 80*swC^4) + 8*sw^4*(-3 - 10*swC^2 + 
            16*swC^4))) + 2*s*(-15*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2)) + 3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
          sw^2*(-30 + 74*swC^2 - 40*swC^4) + 8*sw^4*(3 - 5*swC^2 + 8*swC^4)))*
       t + 4*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 
        2*sw^2*(15 - 76*swC^2 + 80*swC^4))*t^2)*
     (-mh^2 + s + mz^2*GaugeXi[Z]))/(cwC^2*(-1 + d)*Pi^d*(mz^2 - s)^3*s*sw^4*
     (-1 + sw^2)^2*swC^2), ((I/9)*2^(-8 - d)*EL^6*
     (s^2*(3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
        4*d*(-9 + 30*swC^2 - 24*swC^4 + sw^2*(30 - 22*swC^2 - 40*swC^4) + 
          8*sw^4*(-3 - 5*swC^2 + 8*swC^4)) - 4*(-9 + 30*swC^2 - 24*swC^4 + 
          sw^2*(30 + 4*swC^2 - 80*swC^4) + 8*sw^4*(-3 - 10*swC^2 + 
            16*swC^4))) + 2*s*(-15*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2)) + 3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
          sw^2*(-30 + 74*swC^2 - 40*swC^4) + 8*sw^4*(3 - 5*swC^2 + 8*swC^4)))*
       t + 4*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 
        2*sw^2*(15 - 76*swC^2 + 80*swC^4))*t^2)*((mh^2 - s)^2 - 
      2*mz^2*(mh^2 + s)*GaugeXi[Z] + mz^4*GaugeXi[Z]^2))/
    (cwC^2*(-1 + d)*Pi^d*(mz^2 - s)^3*s*sw^4*(-1 + sw^2)^2*swC^2), 
   ((I/9)*2^(-8 - d)*EL^6*(-mh^2 + mz^2 + s)*
     (s^2*(3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
        4*d*(-9 + 30*swC^2 - 24*swC^4 + sw^2*(30 - 22*swC^2 - 40*swC^4) + 
          8*sw^4*(-3 - 5*swC^2 + 8*swC^4)) - 4*(-9 + 30*swC^2 - 24*swC^4 + 
          sw^2*(30 + 4*swC^2 - 80*swC^4) + 8*sw^4*(-3 - 10*swC^2 + 
            16*swC^4))) + 2*s*(-15*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2)) + 3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
          sw^2*(-30 + 74*swC^2 - 40*swC^4) + 8*sw^4*(3 - 5*swC^2 + 8*swC^4)))*
       t + 4*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 
        2*sw^2*(15 - 76*swC^2 + 80*swC^4))*t^2))/(cwC^2*(-1 + d)*Pi^d*
     (mz^2 - s)^3*s*sw^4*(-1 + sw^2)^2*swC^2), 
   ((-I/9)*2^(-8 - d)*EL^6*(mh^4 + mz^4 + 2*(-3 + 2*d)*mz^2*s + s^2 - 
      2*mh^2*(mz^2 + s))*
     (s^2*(3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
        4*d*(-9 + 30*swC^2 - 24*swC^4 + sw^2*(30 - 22*swC^2 - 40*swC^4) + 
          8*sw^4*(-3 - 5*swC^2 + 8*swC^4)) - 4*(-9 + 30*swC^2 - 24*swC^4 + 
          sw^2*(30 + 4*swC^2 - 80*swC^4) + 8*sw^4*(-3 - 10*swC^2 + 
            16*swC^4))) + 2*s*(-15*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2)) + 3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
          sw^2*(-30 + 74*swC^2 - 40*swC^4) + 8*sw^4*(3 - 5*swC^2 + 8*swC^4)))*
       t + 4*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 
        2*sw^2*(15 - 76*swC^2 + 80*swC^4))*t^2))/(cwC^2*(-1 + d)*Pi^d*
     (mz^2 - s)^3*s*sw^4*(-1 + sw^2)^2*swC^2)}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((I/9)*4^(-2 - d)*EL^6*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
       (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
        s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
        2*(3 - 20*sw^2 + 32*sw^4)*t^2)))/((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s*
     (-1 + sw^2)^2), ((-I/9)*2^(-5 - 2*d)*EL^6*(3*d^2*(2*Pi)^d*s^3 + 
      2^(1 + d)*Pi^d*s*(2*s^2*(3 + 10*sw^2 - 16*sw^4 + 
          d*(-3 - 5*sw^2 + 8*sw^4)) + s*(-15*d + 3*d^2 + 
          8*(3 - 5*sw^2 + 8*sw^4))*t + 2*(3 - 20*sw^2 + 32*sw^4)*t^2) - 
      4*mz^2*(1 - sw^2)*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
          s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[W]))/
    ((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s*(-1 + sw^2)^2), 
   ((-I/9)*2^(-5 - 2*d)*EL^6*(9*d^2*(2*Pi)^d*s^3 - 2^(1 + d)*Pi^d*s*
       (s^2*(-6 + 3*d^2 - 20*sw^2 + 32*sw^4 + d*(6 + 10*sw^2 - 16*sw^4)) + 
        s*(15*d - 3*d^2 - 8*(3 - 5*sw^2 + 8*sw^4))*t - 
        2*(3 - 20*sw^2 + 32*sw^4)*t^2) + mz^2*(1 - sw^2)*
       (-3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(6 + 3*d^2 + 20*sw^2 - 32*sw^4 + 2*d*(-3 - 5*sw^2 + 8*sw^4)) + 
          s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          2*(3 - 20*sw^2 + 32*sw^4)*t^2)) - mz^2*(1 - sw^2)*
       (3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
          s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[W]))/
    ((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s^2*(-1 + sw^2)^2), 0, 0, 0, 0, 
   ((-I/9)*2^(-5 - 2*d)*EL^6*((-s - mz^2*(-1 + sw^2))*(-9*d^2*(2*Pi)^d*s^2 + 
        2^(1 + d)*Pi^d*(s^2*(-6 + 3*d^2 - 20*sw^2 + 32*sw^4 + 
            d*(6 + 10*sw^2 - 16*sw^4)) + s*(15*d - 3*d^2 - 
            8*(3 - 5*sw^2 + 8*sw^4))*t - 2*(3 - 20*sw^2 + 32*sw^4)*t^2)) + 
      mz^2*(1 - sw^2)*(-9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (2*s^2*(3 + 3*d^2 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
          s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[W]))/
    ((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s^2*(-1 + sw^2)^2), 
   ((I/9)*2^(-5 - 2*d)*EL^6*((1 - d)*s*(3*d*(2*Pi)^d*s + 
        2^(1 + d)*Pi^d*(s*(-3 - 10*sw^2 + 16*sw^4) + (-3 + 20*sw^2 - 32*sw^4)*
           t))*(s + mz^2*(-1 + sw^2) + mz^2*(-1 + sw^2)*GaugeXi[W])^2 + 
      (1 - d)*s*(s + mz^2*(-1 + sw^2) + mz^2*(-1 + sw^2)*GaugeXi[W])*
       ((-s - mz^2*(-1 + sw^2))*(-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
           (s*(3 + 3*d + 10*sw^2 - 16*sw^4) + (3 - 20*sw^2 + 32*sw^4)*t)) - 
        mz^2*(1 - sw^2)*(3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
           (s*(-3 - 10*sw^2 + 16*sw^4) + (-3 + 20*sw^2 - 32*sw^4)*t))*
         GaugeXi[W]) + (2*Pi)^d*s^2*(3 - 8*sw^2)*(1 - 4*sw^2)*
       (d*(s + mz^2*(-1 + sw^2))^2 + 2*mz^2*(-1 + sw^2)*
         (d*s + (-2 + d)*mz^2*(-1 + sw^2))*GaugeXi[W] + 
        d*mz^4*(-1 + sw^2)^2*GaugeXi[W]^2) + (2*Pi)^d*s^2*
       (3 - 20*sw^2 + 32*sw^4)*(d*(s + mz^2*(-1 + sw^2))^2 + 
        2*mz^2*(-1 + sw^2)*(d*s + (-2 + d)*mz^2*(-1 + sw^2))*GaugeXi[W] + 
        d*mz^4*(-1 + sw^2)^2*GaugeXi[W]^2) + 2*(1 - d)*s*
       (s^2*(3*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(-3 - 10*sw^2 + 16*sw^4))*t + 
        mz^4*(-1 + sw^2)^2*(3*d*(2*Pi)^d + 2^(1 + d)*Pi^d*
           (-3 - 10*sw^2 + 16*sw^4))*t + 2^(1 + d)*mz^2*Pi^d*(1 - sw^2)*
         (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
          3*s*(18 - 11*d + 2*d^2 - 20*sw^2 + 32*sw^4)*t + 
          4*(3 - 20*sw^2 + 32*sw^4)*t^2) - 2^(1 + d)*mz^2*Pi^d*(1 - sw^2)*
         (s*(-6 + 3*d - 20*sw^2 + 32*sw^4)*t + mz^2*(1 - sw^2)*
           (s*(-6 + 3*d - 20*sw^2 + 32*sw^4) + 3*d*t - 
            4*(3 - 5*sw^2 + 8*sw^4)*t))*GaugeXi[W] + mz^4*(-1 + sw^2)^2*
         (3*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(-3 - 10*sw^2 + 16*sw^4))*t*
         GaugeXi[W]^2) + (3*d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*
         (2*s*(3 - 5*sw^2 + 8*sw^4) + (3 - 20*sw^2 + 32*sw^4)*t))*
       ((s + mz^2*(-1 + sw^2))^2*(d*s + 2*t) + 2*mz^2*(1 - sw^2)*
         (-(mz^2*(-1 + sw^2)*((-2 + d)*s - 2*t)) - s*(d*s + 2*t))*
         GaugeXi[W] + mz^4*(-1 + sw^2)^2*(d*s + 2*t)*GaugeXi[W]^2)))/
    ((1 - d)*Pi^(2*d)*(mz^2 - s)^2*s^2*(-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/9)*2^(-7 - d)*EL^6*
     (s^2*(3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
        4*d*(-9 + 30*swC^2 - 24*swC^4 + sw^2*(30 - 22*swC^2 - 40*swC^4) + 
          8*sw^4*(-3 - 5*swC^2 + 8*swC^4)) - 4*(-9 + 30*swC^2 - 24*swC^4 + 
          sw^2*(30 + 4*swC^2 - 80*swC^4) + 8*sw^4*(-3 - 10*swC^2 + 
            16*swC^4))) + 2*s*(-15*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2)) + 3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
          sw^2*(-30 + 74*swC^2 - 40*swC^4) + 8*sw^4*(3 - 5*swC^2 + 8*swC^4)))*
       t + 4*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 
        2*sw^2*(15 - 76*swC^2 + 80*swC^4))*t^2))/(cwC^2*(-1 + d)*Pi^d*
     (mz^2 - s)^3*(-1 + sw^2)^2*swC^2), 
   ((I/9)*2^(-8 - d)*EL^6*
     (s^2*(3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
        4*d*(-9 + 30*swC^2 - 24*swC^4 + sw^2*(30 - 22*swC^2 - 40*swC^4) + 
          8*sw^4*(-3 - 5*swC^2 + 8*swC^4)) - 4*(-9 + 30*swC^2 - 24*swC^4 + 
          sw^2*(30 + 4*swC^2 - 80*swC^4) + 8*sw^4*(-3 - 10*swC^2 + 
            16*swC^4))) + 2*s*(-15*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2)) + 3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
          sw^2*(-30 + 74*swC^2 - 40*swC^4) + 8*sw^4*(3 - 5*swC^2 + 8*swC^4)))*
       t + 4*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 
        2*sw^2*(15 - 76*swC^2 + 80*swC^4))*t^2)*
     (s + 4*mz^2*(-1 + sw^2)*GaugeXi[W]))/(cwC^2*(-1 + d)*Pi^d*(mz^2 - s)^3*
     (-1 + sw^2)^2*swC^2), ((I/9)*2^(-8 - d)*EL^6*
     (s^2*(3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
        4*d*(-9 + 30*swC^2 - 24*swC^4 + sw^2*(30 - 22*swC^2 - 40*swC^4) + 
          8*sw^4*(-3 - 5*swC^2 + 8*swC^4)) - 4*(-9 + 30*swC^2 - 24*swC^4 + 
          sw^2*(30 + 4*swC^2 - 80*swC^4) + 8*sw^4*(-3 - 10*swC^2 + 
            16*swC^4))) + 2*s*(-15*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2)) + 3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
          sw^2*(-30 + 74*swC^2 - 40*swC^4) + 8*sw^4*(3 - 5*swC^2 + 8*swC^4)))*
       t + 4*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 
        2*sw^2*(15 - 76*swC^2 + 80*swC^4))*t^2)*(s - mz^2*(-1 + sw^2) + 
      mz^2*(-1 + sw^2)*GaugeXi[W]))/(cwC^2*(-1 + d)*Pi^d*(mz^2 - s)^3*s*
     (-1 + sw^2)^2*swC^2), 0, 0, 0, 0, 
   ((I/9)*2^(-8 - d)*EL^6*
     (s^2*(3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
        4*d*(-9 + 30*swC^2 - 24*swC^4 + sw^2*(30 - 22*swC^2 - 40*swC^4) + 
          8*sw^4*(-3 - 5*swC^2 + 8*swC^4)) - 4*(-9 + 30*swC^2 - 24*swC^4 + 
          sw^2*(30 + 4*swC^2 - 80*swC^4) + 8*sw^4*(-3 - 10*swC^2 + 
            16*swC^4))) + 2*s*(-15*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2)) + 3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
          sw^2*(-30 + 74*swC^2 - 40*swC^4) + 8*sw^4*(3 - 5*swC^2 + 8*swC^4)))*
       t + 4*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 
        2*sw^2*(15 - 76*swC^2 + 80*swC^4))*t^2)*(s + mz^2*(-1 + sw^2) - 
      mz^2*(-1 + sw^2)*GaugeXi[W]))/(cwC^2*(-1 + d)*Pi^d*(mz^2 - s)^3*s*
     (-1 + sw^2)^2*swC^2), ((-I/9)*2^(-8 - d)*EL^6*
     (s^2*(3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
        4*d*(-9 + 30*swC^2 - 24*swC^4 + sw^2*(30 - 22*swC^2 - 40*swC^4) + 
          8*sw^4*(-3 - 5*swC^2 + 8*swC^4)) - 4*(-9 + 30*swC^2 - 24*swC^4 + 
          sw^2*(30 + 4*swC^2 - 80*swC^4) + 8*sw^4*(-3 - 10*swC^2 + 
            16*swC^4))) + 2*s*(-15*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2)) + 3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
          sw^2*(-30 + 74*swC^2 - 40*swC^4) + 8*sw^4*(3 - 5*swC^2 + 8*swC^4)))*
       t + 4*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 
        2*sw^2*(15 - 76*swC^2 + 80*swC^4))*t^2)*
     (s^2 - 2*(-3 + 2*d)*mz^2*s*(-1 + sw^2) + mz^4*(-1 + sw^2)^2 - 
      2*mz^2*(-1 + sw^2)*(-s + mz^2*(-1 + sw^2))*GaugeXi[W] + 
      mz^4*(-1 + sw^2)^2*GaugeXi[W]^2))/(cwC^2*(-1 + d)*Pi^d*(mz^2 - s)^3*s*
     (-1 + sw^2)^2*swC^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, ((I/9)*4^(-2 - d)*EL^6*(3*d^2*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(2*s^2*(3 + 10*sw^2 - 16*sw^4 + 
          d*(-3 - 5*sw^2 + 8*sw^4)) + s*(-15*d + 3*d^2 + 
          8*(3 - 5*sw^2 + 8*sw^4))*t + 2*(3 - 20*sw^2 + 32*sw^4)*t^2)))/
    ((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s*(-1 + sw^2)^2), 
   ((-I/9)*2^(-5 - 2*d)*EL^6*(3*d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
       (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
        s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
        2*(3 - 20*sw^2 + 32*sw^4)*t^2) - 4*mz^2*(1 - sw^2)*
       (3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
          s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[W]))/
    ((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s*(-1 + sw^2)^2), 
   ((-I/9)*2^(-5 - 2*d)*EL^6*(9*d^2*(2*Pi)^d*s^3 - 2^(1 + d)*Pi^d*s*
       (s^2*(-6 + 3*d^2 - 20*sw^2 + 32*sw^4 + d*(6 + 10*sw^2 - 16*sw^4)) + 
        s*(15*d - 3*d^2 - 8*(3 - 5*sw^2 + 8*sw^4))*t - 
        2*(3 - 20*sw^2 + 32*sw^4)*t^2) + mz^2*(1 - sw^2)*
       (-3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(6 + 3*d^2 + 20*sw^2 - 32*sw^4 + 2*d*(-3 - 5*sw^2 + 8*sw^4)) + 
          s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          2*(3 - 20*sw^2 + 32*sw^4)*t^2)) - mz^2*(1 - sw^2)*
       (3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
          s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[W]))/
    ((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s^2*(-1 + sw^2)^2), 0, 0, 0, 0, 
   ((-I/9)*2^(-5 - 2*d)*EL^6*((-s - mz^2*(-1 + sw^2))*(-9*d^2*(2*Pi)^d*s^2 + 
        2^(1 + d)*Pi^d*(s^2*(-6 + 3*d^2 - 20*sw^2 + 32*sw^4 + 
            d*(6 + 10*sw^2 - 16*sw^4)) + s*(15*d - 3*d^2 - 
            8*(3 - 5*sw^2 + 8*sw^4))*t - 2*(3 - 20*sw^2 + 32*sw^4)*t^2)) + 
      mz^2*(1 - sw^2)*(-9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (2*s^2*(3 + 3*d^2 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
          s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[W]))/
    ((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s^2*(-1 + sw^2)^2), 
   ((I/9)*2^(-5 - 2*d)*EL^6*((1 - d)*s*(3*d*(2*Pi)^d*s + 
        2^(1 + d)*Pi^d*(s*(-3 - 10*sw^2 + 16*sw^4) + (-3 + 20*sw^2 - 32*sw^4)*
           t))*(s + mz^2*(-1 + sw^2) + mz^2*(-1 + sw^2)*GaugeXi[W])^2 + 
      (1 - d)*s*(s + mz^2*(-1 + sw^2) + mz^2*(-1 + sw^2)*GaugeXi[W])*
       ((-s - mz^2*(-1 + sw^2))*(-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
           (s*(3 + 3*d + 10*sw^2 - 16*sw^4) + (3 - 20*sw^2 + 32*sw^4)*t)) - 
        mz^2*(1 - sw^2)*(3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
           (s*(-3 - 10*sw^2 + 16*sw^4) + (-3 + 20*sw^2 - 32*sw^4)*t))*
         GaugeXi[W]) + (2*Pi)^d*s^2*(3 - 8*sw^2)*(1 - 4*sw^2)*
       (d*(s + mz^2*(-1 + sw^2))^2 + 2*mz^2*(-1 + sw^2)*
         (d*s + (-2 + d)*mz^2*(-1 + sw^2))*GaugeXi[W] + 
        d*mz^4*(-1 + sw^2)^2*GaugeXi[W]^2) + (2*Pi)^d*s^2*
       (3 - 20*sw^2 + 32*sw^4)*(d*(s + mz^2*(-1 + sw^2))^2 + 
        2*mz^2*(-1 + sw^2)*(d*s + (-2 + d)*mz^2*(-1 + sw^2))*GaugeXi[W] + 
        d*mz^4*(-1 + sw^2)^2*GaugeXi[W]^2) + 2*(1 - d)*s*
       (s^2*(3*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(-3 - 10*sw^2 + 16*sw^4))*t + 
        mz^4*(-1 + sw^2)^2*(3*d*(2*Pi)^d + 2^(1 + d)*Pi^d*
           (-3 - 10*sw^2 + 16*sw^4))*t + 2^(1 + d)*mz^2*Pi^d*(1 - sw^2)*
         (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
          3*s*(18 - 11*d + 2*d^2 - 20*sw^2 + 32*sw^4)*t + 
          4*(3 - 20*sw^2 + 32*sw^4)*t^2) - 2^(1 + d)*mz^2*Pi^d*(1 - sw^2)*
         (s*(-6 + 3*d - 20*sw^2 + 32*sw^4)*t + mz^2*(1 - sw^2)*
           (s*(-6 + 3*d - 20*sw^2 + 32*sw^4) + 3*d*t - 
            4*(3 - 5*sw^2 + 8*sw^4)*t))*GaugeXi[W] + mz^4*(-1 + sw^2)^2*
         (3*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(-3 - 10*sw^2 + 16*sw^4))*t*
         GaugeXi[W]^2) + (3*d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*
         (2*s*(3 - 5*sw^2 + 8*sw^4) + (3 - 20*sw^2 + 32*sw^4)*t))*
       ((s + mz^2*(-1 + sw^2))^2*(d*s + 2*t) + 2*mz^2*(1 - sw^2)*
         (-(mz^2*(-1 + sw^2)*((-2 + d)*s - 2*t)) - s*(d*s + 2*t))*
         GaugeXi[W] + mz^4*(-1 + sw^2)^2*(d*s + 2*t)*GaugeXi[W]^2)))/
    ((1 - d)*Pi^(2*d)*(mz^2 - s)^2*s^2*(-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((-I/9)*2^(-7 - d)*EL^6*
     (s^2*(3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
        4*d*(-9 + 30*swC^2 - 24*swC^4 + sw^2*(30 - 22*swC^2 - 40*swC^4) + 
          8*sw^4*(-3 - 5*swC^2 + 8*swC^4)) - 4*(-9 + 30*swC^2 - 24*swC^4 + 
          sw^2*(30 + 4*swC^2 - 80*swC^4) + 8*sw^4*(-3 - 10*swC^2 + 
            16*swC^4))) + 2*s*(-15*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2)) + 3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
          sw^2*(-30 + 74*swC^2 - 40*swC^4) + 8*sw^4*(3 - 5*swC^2 + 8*swC^4)))*
       t + 4*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 
        2*sw^2*(15 - 76*swC^2 + 80*swC^4))*t^2))/(cwC^2*(-1 + d)*Pi^d*
     (mz^2 - s)^3*(-1 + sw^2)^2*swC^2), 
   ((I/9)*2^(-8 - d)*EL^6*
     (s^2*(3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
        4*d*(-9 + 30*swC^2 - 24*swC^4 + sw^2*(30 - 22*swC^2 - 40*swC^4) + 
          8*sw^4*(-3 - 5*swC^2 + 8*swC^4)) - 4*(-9 + 30*swC^2 - 24*swC^4 + 
          sw^2*(30 + 4*swC^2 - 80*swC^4) + 8*sw^4*(-3 - 10*swC^2 + 
            16*swC^4))) + 2*s*(-15*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2)) + 3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
          sw^2*(-30 + 74*swC^2 - 40*swC^4) + 8*sw^4*(3 - 5*swC^2 + 8*swC^4)))*
       t + 4*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 
        2*sw^2*(15 - 76*swC^2 + 80*swC^4))*t^2)*
     (s + 4*mz^2*(-1 + sw^2)*GaugeXi[W]))/(cwC^2*(-1 + d)*Pi^d*(mz^2 - s)^3*
     (-1 + sw^2)^2*swC^2), ((I/9)*2^(-8 - d)*EL^6*
     (s^2*(3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
        4*d*(-9 + 30*swC^2 - 24*swC^4 + sw^2*(30 - 22*swC^2 - 40*swC^4) + 
          8*sw^4*(-3 - 5*swC^2 + 8*swC^4)) - 4*(-9 + 30*swC^2 - 24*swC^4 + 
          sw^2*(30 + 4*swC^2 - 80*swC^4) + 8*sw^4*(-3 - 10*swC^2 + 
            16*swC^4))) + 2*s*(-15*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2)) + 3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
          sw^2*(-30 + 74*swC^2 - 40*swC^4) + 8*sw^4*(3 - 5*swC^2 + 8*swC^4)))*
       t + 4*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 
        2*sw^2*(15 - 76*swC^2 + 80*swC^4))*t^2)*(s - mz^2*(-1 + sw^2) + 
      mz^2*(-1 + sw^2)*GaugeXi[W]))/(cwC^2*(-1 + d)*Pi^d*(mz^2 - s)^3*s*
     (-1 + sw^2)^2*swC^2), 0, 0, 0, 0, 
   ((I/9)*2^(-8 - d)*EL^6*
     (s^2*(3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
        4*d*(-9 + 30*swC^2 - 24*swC^4 + sw^2*(30 - 22*swC^2 - 40*swC^4) + 
          8*sw^4*(-3 - 5*swC^2 + 8*swC^4)) - 4*(-9 + 30*swC^2 - 24*swC^4 + 
          sw^2*(30 + 4*swC^2 - 80*swC^4) + 8*sw^4*(-3 - 10*swC^2 + 
            16*swC^4))) + 2*s*(-15*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2)) + 3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
          sw^2*(-30 + 74*swC^2 - 40*swC^4) + 8*sw^4*(3 - 5*swC^2 + 8*swC^4)))*
       t + 4*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 
        2*sw^2*(15 - 76*swC^2 + 80*swC^4))*t^2)*(s + mz^2*(-1 + sw^2) - 
      mz^2*(-1 + sw^2)*GaugeXi[W]))/(cwC^2*(-1 + d)*Pi^d*(mz^2 - s)^3*s*
     (-1 + sw^2)^2*swC^2), ((-I/9)*2^(-8 - d)*EL^6*
     (s^2*(3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
        4*d*(-9 + 30*swC^2 - 24*swC^4 + sw^2*(30 - 22*swC^2 - 40*swC^4) + 
          8*sw^4*(-3 - 5*swC^2 + 8*swC^4)) - 4*(-9 + 30*swC^2 - 24*swC^4 + 
          sw^2*(30 + 4*swC^2 - 80*swC^4) + 8*sw^4*(-3 - 10*swC^2 + 
            16*swC^4))) + 2*s*(-15*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2)) + 3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
          sw^2*(-30 + 74*swC^2 - 40*swC^4) + 8*sw^4*(3 - 5*swC^2 + 8*swC^4)))*
       t + 4*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 
        2*sw^2*(15 - 76*swC^2 + 80*swC^4))*t^2)*
     (s^2 - 2*(-3 + 2*d)*mz^2*s*(-1 + sw^2) + mz^4*(-1 + sw^2)^2 - 
      2*mz^2*(-1 + sw^2)*(-s + mz^2*(-1 + sw^2))*GaugeXi[W] + 
      mz^4*(-1 + sw^2)^2*GaugeXi[W]^2))/(cwC^2*(-1 + d)*Pi^d*(mz^2 - s)^3*s*
     (-1 + sw^2)^2*swC^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, ((-I/9)*2^(1 - d)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
    ((-1 + d)*mz^4*Pi^d*s*(-1 + sw^2)^2), 
   ((I/9)*EL^6*(d*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*(-s^2 + 2*s*t + 2*t^2) + 
      2^(2 + d)*mz^2*Pi^d*(-1 + sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
       GaugeXi[W]))/((-1 + d)*mz^4*(2*Pi)^(2*d)*s*(-1 + sw^2)^2), 
   ((I/9)*2^(1 - d)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
     (4*d^2*s^2 + 4*mz^2*s*(-1 + sw^2) - d*(7*s^2 + 5*mz^2*s*(-1 + sw^2) + 
        mz^4*(-1 + sw^2)^2) + d*(s + mz^2*(-1 + sw^2))^2*GaugeXi[W]))/
    ((-1 + d)*d*mz^2*Pi^d*s^4*(-1 + sw^2)), 
   ((-I/9)*EL^6*(-(d*(2*Pi)^d*s^5) + 2^(1 + d)*Pi^d*s^3*
       (s^2 - 2*s*t - 2*t^2) + 2^(4 + d)*(-1 + d)*mz^6*Pi^d*(1 - sw^2)^3*
       ((-2 + d)*s^2 + 4*s*t + 4*t^2) + 2^(3 + d)*(-2 + d)*mz^2*Pi^d*s^2*
       (-1 + sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2) + 2^(2 + d)*(-11 + 7*d)*
       mz^4*Pi^d*s*(-1 + sw^2)^2*((-2 + d)*s^2 + 4*s*t + 4*t^2)))/
    ((-1 + d)*mz^4*(2*Pi)^(2*d)*s^3*(-1 + sw^2)^2), 0, 0, 0, 
   ((I/9)*2^(1 - d)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
     (d*(s + mz^2*(-1 + sw^2))*(s^2 - 2*(-3 + 2*d)*mz^2*s*(-1 + sw^2) + 
        mz^4*(-1 + sw^2)^2) - mz^2*(-1 + sw^2)*(4*mz^2*s*(-1 + sw^2) + 
        4*d^2*mz^2*s*(-1 + sw^2) + d*(s^2 - 6*mz^2*s*(-1 + sw^2) + 
          mz^4*(-1 + sw^2)^2))*GaugeXi[W]))/((-1 + d)*d*mz^4*Pi^d*s^4*
     (-1 + sw^2)^2), ((-I/9)*2^(1 - d)*EL^6*(s + mz^2*(-1 + sw^2))^2*
     ((-2 + d)*s^2 + 4*s*t + 4*t^2)*(s^2 - 2*(-3 + 2*d)*mz^2*s*(-1 + sw^2) + 
      mz^4*(-1 + sw^2)^2 - 2*mz^2*(-1 + sw^2)*(-s + mz^2*(-1 + sw^2))*
       GaugeXi[W] + mz^4*(-1 + sw^2)^2*GaugeXi[W]^2))/
    ((-1 + d)*mz^4*Pi^d*s^4*(-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, ((-I/9)*4^(-2 - d)*EL^6*(-3*d^2*(2*Pi)^d*s^2 - 
      2^(1 + d)*Pi^d*(2*s^2*(3 + 10*swC^2 - 16*swC^4 + 
          d*(-3 - 5*swC^2 + 8*swC^4)) + s*(-15*d + 3*d^2 + 
          8*(3 - 5*swC^2 + 8*swC^4))*t + 2*(3 - 20*swC^2 + 32*swC^4)*t^2) + 
      2^(1 + d)*Pi^d*(s^2*(12 + 3*d^2 + 40*swC^2 - 64*swC^4 + 
          4*d*(-3 - 5*swC^2 + 8*swC^4)) + 2*s*(-15*d + 3*d^2 + 
          8*(3 - 5*swC^2 + 8*swC^4))*t + 4*(3 - 20*swC^2 + 32*swC^4)*t^2)*
       GaugeXi[W] - (3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (2*s^2*(3 + 10*swC^2 - 16*swC^4 + d*(-3 - 5*swC^2 + 8*swC^4)) + 
          s*(-15*d + 3*d^2 + 8*(3 - 5*swC^2 + 8*swC^4))*t + 
          2*(3 - 20*swC^2 + 32*swC^4)*t^2))*GaugeXi[W]^2))/
    (cwC^2*(-1 + d)*mz^4*Pi^(2*d)*(mz^2 - s)*(-1 + sw^2)^2*swC^2*
     (-1 + GaugeXi[W])^2), ((I/9)*2^(-5 - 2*d)*EL^6*
     (-(s*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
          (2*s^2*(3 + 10*swC^2 - 16*swC^4 + d*(-3 - 5*swC^2 + 8*swC^4)) + 
           s*(-15*d + 3*d^2 + 8*(3 - 5*swC^2 + 8*swC^4))*t + 
           2*(3 - 20*swC^2 + 32*swC^4)*t^2))) + 
      2*(3*d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
         (2*s^2*(3 + 10*swC^2 - 16*swC^4 + d*(-3 - 5*swC^2 + 8*swC^4)) + 
          s*(-15*d + 3*d^2 + 8*(3 - 5*swC^2 + 8*swC^4))*t + 
          2*(3 - 20*swC^2 + 32*swC^4)*t^2) + 2^(1 + d)*mz^2*Pi^d*(1 - sw^2)*
         (s^2*(12 + 3*d^2 + 40*swC^2 - 64*swC^4 + 4*d*(-3 - 5*swC^2 + 
              8*swC^4)) + 2*s*(-15*d + 3*d^2 + 8*(3 - 5*swC^2 + 8*swC^4))*t + 
          4*(3 - 20*swC^2 + 32*swC^4)*t^2))*GaugeXi[W] - 
      (3*d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
         (2*s^2*(3 + 10*swC^2 - 16*swC^4 + d*(-3 - 5*swC^2 + 8*swC^4)) + 
          s*(-15*d + 3*d^2 + 8*(3 - 5*swC^2 + 8*swC^4))*t + 
          2*(3 - 20*swC^2 + 32*swC^4)*t^2) + 2^(3 + d)*mz^2*Pi^d*(1 - sw^2)*
         (s^2*(12 + 3*d^2 + 40*swC^2 - 64*swC^4 + 4*d*(-3 - 5*swC^2 + 
              8*swC^4)) + 2*s*(-15*d + 3*d^2 + 8*(3 - 5*swC^2 + 8*swC^4))*t + 
          4*(3 - 20*swC^2 + 32*swC^4)*t^2))*GaugeXi[W]^2 + 
      4*mz^2*(1 - sw^2)*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (2*s^2*(3 + 10*swC^2 - 16*swC^4 + d*(-3 - 5*swC^2 + 8*swC^4)) + 
          s*(-15*d + 3*d^2 + 8*(3 - 5*swC^2 + 8*swC^4))*t + 
          2*(3 - 20*swC^2 + 32*swC^4)*t^2))*GaugeXi[W]^3))/
    (cwC^2*(-1 + d)*mz^4*Pi^(2*d)*(mz^2 - s)*(-1 + sw^2)^2*swC^2*
     (-1 + GaugeXi[W])^2), ((-I/9)*2^(-4 - d)*EL^6*
     (s^2*(12 + 3*d^2 + 40*swC^2 - 64*swC^4 + 4*d*(-3 - 5*swC^2 + 8*swC^4)) + 
      2*s*(-15*d + 3*d^2 + 8*(3 - 5*swC^2 + 8*swC^4))*t + 
      4*(3 - 20*swC^2 + 32*swC^4)*t^2)*(4*d^2*s^2 + 4*mz^2*s*(-1 + sw^2) - 
      d*(7*s^2 + 5*mz^2*s*(-1 + sw^2) + mz^4*(-1 + sw^2)^2) + 
      d*(s + mz^2*(-1 + sw^2))^2*GaugeXi[W]))/(cwC^2*(-1 + d)*d*mz^2*Pi^d*
     (mz^2 - s)*s^3*(-1 + sw^2)*swC^2), 
   ((-I/9)*2^(-5 - 6*d)*EL^6*
     (-(2^(1 + 5*d)*Pi^(5*d)*s*(s^2 + 4*mz^2*s*(-1 + sw^2) + 
         4*(-1 + d)*mz^4*(-1 + sw^2)^2)*(d*s^2 + 4*d*mz^2*s*(-1 + sw^2) + 
         4*(-1 + d)*mz^4*(-1 + sw^2)^2)*(3 - 20*swC^2 + 32*swC^4)*
        (-1 + GaugeXi[W])^2) - 2^(1 + d)*(1 - d)*Pi^d*
       ((2*Pi)^(4*d)*s^4*(-6 + 3*d - 20*swC^2 + 32*swC^4)*t - 
        2^(3 + 4*d)*(-1 + d)*mz^8*Pi^(4*d)*(-1 + sw^2)^4*
         (s*(-6 + 3*d - 20*swC^2 + 32*swC^4) - 2*(3 - 20*swC^2 + 32*swC^4)*
           t) + 2^(3 + 4*d)*mz^6*Pi^(4*d)*s*(1 - sw^2)^3*
         (s*(-6 + 3*d - 20*swC^2 + 32*swC^4) - 
          2*(9 + 3*d^2 + d*(-9 - 20*swC^2 + 32*swC^4))*t) + 
        4^(1 + 2*d)*mz^2*Pi^(4*d)*s^2*(1 - sw^2)*
         (s^2*(12 + 3*d^2 + 40*swC^2 - 64*swC^4 + 4*d*(-3 - 5*swC^2 + 
              8*swC^4)) + 2*s*(30 - 18*d + 3*d^2 - 20*swC^2 + 32*swC^4)*t + 
          4*(3 - 20*swC^2 + 32*swC^4)*t^2) - 2^(1 + 4*d)*mz^4*Pi^(4*d)*s*
         (-1 + sw^2)^2*(s^2*(90 + 24*d^2 + 300*swC^2 - 480*swC^4 + 
            d*(-93 - 160*swC^2 + 256*swC^4)) + 
          2*s*(21*d^2 + d*(-123 + 20*swC^2 - 32*swC^4) + 
            3*(69 - 80*swC^2 + 128*swC^4))*t + 32*(3 - 20*swC^2 + 32*swC^4)*
           t^2))*(-1 + GaugeXi[W])^2 + (-1 + d)*(2*Pi)^(3*d)*
       (s + 2*mz^2*(-1 + sw^2))^2*(s^2 + 4*mz^2*s*(-1 + sw^2) + 
        4*(-1 + d)*mz^4*(-1 + sw^2)^2)*(s*(-6 + 3*d - 20*swC^2 + 32*swC^4) - 
        2*(3 - 20*swC^2 + 32*swC^4)*t)*((2*Pi)^(2*d) - 2^(1 + 2*d)*Pi^(2*d)*
         GaugeXi[W] + (2*Pi)^(2*d)*GaugeXi[W]^2) - 
      (2*Pi)^(2*d)*(s^2 + 4*mz^2*s*(-1 + sw^2) + 4*(-1 + d)*mz^4*
         (-1 + sw^2)^2)*(3*d*s - 4*s*(3 - 5*swC^2 + 8*swC^4) - 
        2*(3 - 20*swC^2 + 32*swC^4)*t)*(4*(-1 + d)*mz^4*(-1 + sw^2)^2 + 
        s*(d*s + 2*t) + 4*mz^2*(-1 + sw^2)*(d*s + 2*t))*
       ((2*Pi)^(3*d) - 2^(1 + 3*d)*Pi^(3*d)*GaugeXi[W] + 
        (2*Pi)^(3*d)*GaugeXi[W]^2) + (-1 + d)*(s + 2*mz^2*(-1 + sw^2))^2*
       (s^2 + 4*mz^2*s*(-1 + sw^2) + 4*(-1 + d)*mz^4*(-1 + sw^2)^2)*
       (s*(-6 + 3*d - 20*swC^2 + 32*swC^4) - 2*(3 - 20*swC^2 + 32*swC^4)*t)*
       ((2*Pi)^(5*d) - 2^(1 + 5*d)*Pi^(5*d)*GaugeXi[W] + 
        (2*Pi)^(5*d)*GaugeXi[W]^2)))/(cwC^2*(-1 + d)*mz^4*Pi^(6*d)*(mz^2 - s)*
     s^2*(-1 + sw^2)^2*swC^2*(-1 + GaugeXi[W])^2), 0, 0, 0, 
   ((-I/9)*2^(-4 - 7*d)*EL^6*(d*(-s - mz^2*(-1 + sw^2))*
       ((2*Pi)^(6*d)*s^2*(s^2*(12 + 3*d^2 + 40*swC^2 - 64*swC^4 + 
            4*d*(-3 - 5*swC^2 + 8*swC^4)) + 2*s*(-15*d + 3*d^2 + 
            8*(3 - 5*swC^2 + 8*swC^4))*t + 4*(3 - 20*swC^2 + 32*swC^4)*t^2) + 
        mz^4*(2*Pi)^(6*d)*(-1 + sw^2)^2*(s^2*(12 + 3*d^2 + 40*swC^2 - 
            64*swC^4 + 4*d*(-3 - 5*swC^2 + 8*swC^4)) + 
          2*s*(-15*d + 3*d^2 + 8*(3 - 5*swC^2 + 8*swC^4))*t + 
          4*(3 - 20*swC^2 + 32*swC^4)*t^2) + 2*mz^2*s*(1 - sw^2)*
         (-33*d^2*(2*Pi)^(6*d)*s^2 + 2^(1 + 6*d)*Pi^(6*d)*
           (s^2*(-18 + 3*d^3 - 60*swC^2 + 96*swC^4 + 4*d^2*swC^2*(-5 + 
                8*swC^2) + d*(30 + 70*swC^2 - 112*swC^4)) + 
            s*(-39*d^2 + 6*d^3 - 24*(3 - 5*swC^2 + 8*swC^4) + 
              d*(93 - 80*swC^2 + 128*swC^4))*t + 2*(-3 + 2*d)*
             (3 - 20*swC^2 + 32*swC^4)*t^2))) + 
      (-3*4^(1 + 3*d)*d^4*mz^2*Pi^(6*d)*s^2*(-1 + sw^2)*
         (2*s + mz^2*(-1 + sw^2))*(s + 2*t) - 4^(2 + 3*d)*mz^4*Pi^(6*d)*s*
         (-1 + sw^2)^2*(s^2*(-3 - 10*swC^2 + 16*swC^4) - 
          4*s*(3 - 5*swC^2 + 8*swC^4)*t + (-3 + 20*swC^2 - 32*swC^4)*t^2) + 
        d^3*(2*Pi)^(6*d)*s*(mz^2*s^2*(1 - sw^2)*
           (s*(-141 - 160*swC^2 + 256*swC^4) - 330*t) + 6*s^3*(s + 2*t) + 
          9*mz^6*(-1 + sw^2)^3*(s + 2*t) + 8*mz^4*s*(-1 + sw^2)^2*
           (s*(9 + 10*swC^2 - 16*swC^4) + 21*t)) + 
        2*d^2*s*(2^(1 + 6*d)*Pi^(6*d)*s^3*(2*s*(-3 - 5*swC^2 + 8*swC^4) - 
            15*t) + 3*mz^6*(2*Pi)^(6*d)*(-1 + sw^2)^3*
           (2*s*(-3 - 5*swC^2 + 8*swC^4) - 15*t) - mz^2*(2*Pi)^(6*d)*s*
           (1 - sw^2)*(2*s^2*(-69 - 155*swC^2 + 248*swC^4) + 
            s*(-417 + 320*swC^2 - 512*swC^4)*t - 16*(3 - 20*swC^2 + 32*swC^4)*
             t^2) + 2^(1 + 6*d)*mz^4*Pi^(6*d)*(-1 + sw^2)^2*
           (s^2*(-33 - 80*swC^2 + 128*swC^4) - 2*s*(51 - 40*swC^2 + 64*swC^4)*
             t - 4*(3 - 20*swC^2 + 32*swC^4)*t^2)) + 
        4*d*(-(2^(1 + 6*d)*Pi^(6*d)*s^3*(s^2*(-3 - 10*swC^2 + 16*swC^4) - 
             4*s*(3 - 5*swC^2 + 8*swC^4)*t + (-3 + 20*swC^2 - 32*swC^4)*
              t^2)) - 2^(1 + 6*d)*mz^4*Pi^(6*d)*s*(-1 + sw^2)^2*
           (6*s^2*(-1 - 5*swC^2 + 8*swC^4) + s*(-33 + 80*swC^2 - 128*swC^4)*
             t - 4*(3 - 20*swC^2 + 32*swC^4)*t^2) - 15*mz^2*(2*Pi)^(6*d)*s^2*
           (1 - sw^2)*(s^2*(3 + 10*swC^2 - 16*swC^4) + 
            4*s*(3 - 5*swC^2 + 8*swC^4)*t + (3 - 20*swC^2 + 32*swC^4)*t^2) - 
          3*mz^6*(2*Pi)^(6*d)*(1 - sw^2)^3*(s^2*(3 + 10*swC^2 - 16*swC^4) + 
            4*s*(3 - 5*swC^2 + 8*swC^4)*t + (3 - 20*swC^2 + 32*swC^4)*t^2)))*
       GaugeXi[W] - (3*4^(1 + 3*d)*d^4*mz^2*Pi^(6*d)*s^2*(1 - sw^2)*
         (s - mz^2*(-1 + sw^2))*(s + 2*t) - 2^(5 + 6*d)*mz^4*Pi^(6*d)*s*
         (-1 + sw^2)^2*(s^2*(-3 - 10*swC^2 + 16*swC^4) - 
          4*s*(3 - 5*swC^2 + 8*swC^4)*t + (-3 + 20*swC^2 - 32*swC^4)*t^2) - 
        d^3*(2*Pi)^(6*d)*s*(-3*s^3*(s + 2*t) - 9*mz^6*(-1 + sw^2)^3*
           (s + 2*t) + mz^4*s*(-1 + sw^2)^2*(s*(63 + 80*swC^2 - 128*swC^4) + 
            150*t) + mz^2*s^2*(1 - sw^2)*(s*(75 + 80*swC^2 - 128*swC^4) + 
            174*t)) - 4^(1 + 3*d)*d*Pi^(6*d)*
         (-(s^3*(s^2*(3 + 10*swC^2 - 16*swC^4) + 4*s*(3 - 5*swC^2 + 8*swC^4)*
              t + (3 - 20*swC^2 + 32*swC^4)*t^2)) + 9*mz^2*s^2*(1 - sw^2)*
           (s^2*(3 + 10*swC^2 - 16*swC^4) + 4*s*(3 - 5*swC^2 + 8*swC^4)*t + 
            (3 - 20*swC^2 + 32*swC^4)*t^2) + 3*mz^6*(1 - sw^2)^3*
           (s^2*(3 + 10*swC^2 - 16*swC^4) + 4*s*(3 - 5*swC^2 + 8*swC^4)*t + 
            (3 - 20*swC^2 + 32*swC^4)*t^2) + mz^4*s*(-1 + sw^2)^2*
           (s^2*(39 + 90*swC^2 - 144*swC^4) + 20*s*(6 - 5*swC^2 + 8*swC^4)*
             t + 5*(3 - 20*swC^2 + 32*swC^4)*t^2)) + 2^(1 + 6*d)*d^2*Pi^(6*d)*
         s*(s^3*(2*s*(-3 - 5*swC^2 + 8*swC^4) - 15*t) + mz^6*(1 - sw^2)^3*
           (-6*s*(-3 - 5*swC^2 + 8*swC^4) + 45*t) + mz^4*(-1 + sw^2)^2*
           (s^2*(66 + 130*swC^2 - 208*swC^4) + s*(195 - 160*swC^2 + 
              256*swC^4)*t + 8*(3 - 20*swC^2 + 32*swC^4)*t^2) + 
          mz^2*s*(1 - sw^2)*(s^2*(78 + 170*swC^2 - 272*swC^4) + 
            s*(231 - 160*swC^2 + 256*swC^4)*t + 8*(3 - 20*swC^2 + 32*swC^4)*
             t^2)))*GaugeXi[W]^2 - mz^2*(1 - sw^2)*
       (3*4^(1 + 3*d)*d^4*mz^2*Pi^(6*d)*s^2*(-1 + sw^2)*(s + 2*t) + 
        4^(2 + 3*d)*mz^2*Pi^(6*d)*s*(1 - sw^2)*
         (s^2*(-3 - 10*swC^2 + 16*swC^4) - 4*s*(3 - 5*swC^2 + 8*swC^4)*t + 
          (-3 + 20*swC^2 - 32*swC^4)*t^2) + d^3*(2*Pi)^(6*d)*s*
         (3*s^2*(s + 2*t) + 3*mz^4*(-1 + sw^2)^2*(s + 2*t) + 
          2*mz^2*s*(1 - sw^2)*(s*(33 + 40*swC^2 - 64*swC^4) + 78*t)) + 
        2*d^2*s*((2*Pi)^(6*d)*s^2*(2*s*(-3 - 5*swC^2 + 8*swC^4) - 15*t) + 
          mz^4*(2*Pi)^(6*d)*(-1 + sw^2)^2*(2*s*(-3 - 5*swC^2 + 8*swC^4) - 
            15*t) + 2^(1 + 6*d)*mz^2*Pi^(6*d)*(1 - sw^2)*
           (s^2*(-33 - 70*swC^2 + 112*swC^4) + s*(-99 + 80*swC^2 - 128*swC^4)*
             t - 4*(3 - 20*swC^2 + 32*swC^4)*t^2)) + 
        4*d*(-(2^(1 + 6*d)*mz^2*Pi^(6*d)*s*(1 - sw^2)*
            (s^2*(-15 - 40*swC^2 + 64*swC^4) - 3*s*(17 - 20*swC^2 + 32*swC^4)*
              t - 3*(3 - 20*swC^2 + 32*swC^4)*t^2)) + (2*Pi)^(6*d)*s^2*
           (s^2*(3 + 10*swC^2 - 16*swC^4) + 4*s*(3 - 5*swC^2 + 8*swC^4)*t + 
            (3 - 20*swC^2 + 32*swC^4)*t^2) + mz^4*(2*Pi)^(6*d)*(-1 + sw^2)^2*
           (s^2*(3 + 10*swC^2 - 16*swC^4) + 4*s*(3 - 5*swC^2 + 8*swC^4)*t + 
            (3 - 20*swC^2 + 32*swC^4)*t^2)))*GaugeXi[W]^3))/
    (cwC^2*(-1 + d)*d*mz^4*Pi^(7*d)*s^3*(-mz^2 + s)*(-1 + sw^2)^2*swC^2*
     (-1 + GaugeXi[W])^2), ((-I/9)*2^(-4 - 5*d)*EL^6*
     ((2*Pi)^(4*d)*s^4*(s^2*(12 + 3*d^2 + 40*swC^2 - 64*swC^4 + 
          4*d*(-3 - 5*swC^2 + 8*swC^4)) + 2*s*(-15*d + 3*d^2 + 
          8*(3 - 5*swC^2 + 8*swC^4))*t + 4*(3 - 20*swC^2 + 32*swC^4)*t^2) + 
      mz^8*(2*Pi)^(4*d)*(-1 + sw^2)^4*
       (s^2*(12 + 3*d^2 + 40*swC^2 - 64*swC^4 + 
          4*d*(-3 - 5*swC^2 + 8*swC^4)) + 2*s*(-15*d + 3*d^2 + 
          8*(3 - 5*swC^2 + 8*swC^4))*t + 4*(3 - 20*swC^2 + 32*swC^4)*t^2) + 
      4*mz^2*s^3*(1 - sw^2)*(3*d^3*(2*Pi)^(4*d)*s^2 + 2^(1 + 4*d)*Pi^(4*d)*
         (s^2*(-12 - 40*swC^2 + 64*swC^4 + d*(18 + 40*swC^2 - 64*swC^4) + 
            d^2*(-9 - 10*swC^2 + 16*swC^4)) + s*(-21*d^2 + 3*d^3 - 
            16*(3 - 5*swC^2 + 8*swC^4) + d*(54 - 40*swC^2 + 64*swC^4))*t + 
          2*(-2 + d)*(3 - 20*swC^2 + 32*swC^4)*t^2)) + 
      4*mz^6*s*(1 - sw^2)^3*(3*d^3*(2*Pi)^(4*d)*s^2 + 2^(1 + 4*d)*Pi^(4*d)*
         (s^2*(-12 - 40*swC^2 + 64*swC^4 + d*(18 + 40*swC^2 - 64*swC^4) + 
            d^2*(-9 - 10*swC^2 + 16*swC^4)) + s*(-21*d^2 + 3*d^3 - 
            16*(3 - 5*swC^2 + 8*swC^4) + d*(54 - 40*swC^2 + 64*swC^4))*t + 
          2*(-2 + d)*(3 - 20*swC^2 + 32*swC^4)*t^2)) - 
      2*mz^4*(s - s*sw^2)^2*(-69*d^2*(2*Pi)^(4*d)*s^2 + 
        2^(1 + 4*d)*Pi^(4*d)*(2*s^2*(3*d^3 + 4*d^2*swC^2*(-5 + 8*swC^2) + 
            d*(33 + 75*swC^2 - 120*swC^4) + 7*(-3 - 10*swC^2 + 16*swC^4)) + 
          s*(-81*d^2 + 12*d^3 - 56*(3 - 5*swC^2 + 8*swC^4) + 
            d*(201 - 160*swC^2 + 256*swC^4))*t + 2*(-7 + 4*d)*
           (3 - 20*swC^2 + 32*swC^4)*t^2)) - 
      2*((2*Pi)^(4*d)*s^4*(s^2*(12 + 3*d^2 + 40*swC^2 - 64*swC^4 + 
            4*d*(-3 - 5*swC^2 + 8*swC^4)) + 2*s*(-15*d + 3*d^2 + 
            8*(3 - 5*swC^2 + 8*swC^4))*t + 4*(3 - 20*swC^2 + 32*swC^4)*t^2) + 
        2^(1 + 4*d)*mz^8*Pi^(4*d)*(-1 + sw^2)^4*
         (s^2*(12 + 3*d^2 + 40*swC^2 - 64*swC^4 + 4*d*(-3 - 5*swC^2 + 
              8*swC^4)) + 2*s*(-15*d + 3*d^2 + 8*(3 - 5*swC^2 + 8*swC^4))*t + 
          4*(3 - 20*swC^2 + 32*swC^4)*t^2) + mz^6*s*(1 - sw^2)^3*
         (-75*d^2*(2*Pi)^(4*d)*s^2 + 2^(1 + 4*d)*Pi^(4*d)*
           (2*s^2*(3*d^3 + 4*d^2*swC^2*(-5 + 8*swC^2) + d*(39 + 85*swC^2 - 
                136*swC^4) + 9*(-3 - 10*swC^2 + 16*swC^4)) + 
            s*(-87*d^2 + 12*d^3 - 72*(3 - 5*swC^2 + 8*swC^4) + 
              d*(231 - 160*swC^2 + 256*swC^4))*t + 2*(-9 + 4*d)*
             (3 - 20*swC^2 + 32*swC^4)*t^2)) + mz^2*s^3*(1 - sw^2)*
         (-69*d^2*(2*Pi)^(4*d)*s^2 + 2^(1 + 4*d)*Pi^(4*d)*
           (2*s^2*(3*d^3 + 4*d^2*swC^2*(-5 + 8*swC^2) + d*(33 + 75*swC^2 - 
                120*swC^4) + 7*(-3 - 10*swC^2 + 16*swC^4)) + 
            s*(-81*d^2 + 12*d^3 - 56*(3 - 5*swC^2 + 8*swC^4) + 
              d*(201 - 160*swC^2 + 256*swC^4))*t + 2*(-7 + 4*d)*
             (3 - 20*swC^2 + 32*swC^4)*t^2)) - mz^4*(s - s*sw^2)^2*
         (-135*d^2*(2*Pi)^(4*d)*s^2 + 2^(1 + 4*d)*Pi^(4*d)*
           (2*s^2*(6*d^3 + 8*d^2*swC^2*(-5 + 8*swC^2) + d*(63 + 145*swC^2 - 
                232*swC^4) + 13*(-3 - 10*swC^2 + 16*swC^4)) + 
            s*(-159*d^2 + 24*d^3 - 104*(3 - 5*swC^2 + 8*swC^4) + 
              d*(387 - 320*swC^2 + 512*swC^4))*t + 2*(-13 + 8*d)*
             (3 - 20*swC^2 + 32*swC^4)*t^2)))*GaugeXi[W] + 
      ((2*Pi)^(4*d)*s^4*(s^2*(12 + 3*d^2 + 40*swC^2 - 64*swC^4 + 
            4*d*(-3 - 5*swC^2 + 8*swC^4)) + 2*s*(-15*d + 3*d^2 + 
            8*(3 - 5*swC^2 + 8*swC^4))*t + 4*(3 - 20*swC^2 + 32*swC^4)*t^2) + 
        3*2^(1 + 4*d)*mz^8*Pi^(4*d)*(-1 + sw^2)^4*
         (s^2*(12 + 3*d^2 + 40*swC^2 - 64*swC^4 + 4*d*(-3 - 5*swC^2 + 
              8*swC^4)) + 2*s*(-15*d + 3*d^2 + 8*(3 - 5*swC^2 + 8*swC^4))*t + 
          4*(3 - 20*swC^2 + 32*swC^4)*t^2) + 4*mz^2*s^3*(1 - sw^2)*
         (3*(-5 + d)*d^2*(2*Pi)^(4*d)*s^2 + 2^(1 + 4*d)*Pi^(4*d)*
           (2*s^2*(-3 - 10*swC^2 + 16*swC^4 + d^2*swC^2*(-5 + 8*swC^2) + 
              d*(6 + 15*swC^2 - 24*swC^4)) + s*(-18*d^2 + 3*d^3 - 
              8*(3 - 5*swC^2 + 8*swC^4) + d*(39 - 40*swC^2 + 64*swC^4))*t + 
            2*(-1 + d)*(3 - 20*swC^2 + 32*swC^4)*t^2)) + 
        2*mz^6*s*(1 - sw^2)^3*(-45*d^2*(2*Pi)^(4*d)*s^2 + 
          2^(1 + 4*d)*Pi^(4*d)*(s^2*(3*d^3 + 4*d^2*swC^2*(-5 + 8*swC^2) + 
              d*(54 + 110*swC^2 - 176*swC^4) + 14*(-3 - 10*swC^2 + 
                16*swC^4)) + s*(-51*d^2 + 6*d^3 - 56*(3 - 5*swC^2 + 
                8*swC^4) + d*(153 - 80*swC^2 + 128*swC^4))*t + 
            2*(-7 + 2*d)*(3 - 20*swC^2 + 32*swC^4)*t^2)) - 
        mz^4*(s - s*sw^2)^2*(-129*d^2*(2*Pi)^(4*d)*s^2 + 2^(1 + 4*d)*Pi^(4*d)*
           (2*s^2*(6*d^3 + 8*d^2*swC^2*(-5 + 8*swC^2) + d*(57 + 135*swC^2 - 
                216*swC^4) + 11*(-3 - 10*swC^2 + 16*swC^4)) + 
            s*(-153*d^2 + 24*d^3 - 88*(3 - 5*swC^2 + 8*swC^4) + 
              d*(357 - 320*swC^2 + 512*swC^4))*t + 2*(-11 + 8*d)*
             (3 - 20*swC^2 + 32*swC^4)*t^2)))*GaugeXi[W]^2 - 
      2^(1 + 4*d)*mz^2*Pi^(4*d)*(1 - sw^2)*(s - 2*mz^2*(-1 + sw^2))*
       (s + mz^2*(-1 + sw^2))^2*(s^2*(12 + 3*d^2 + 40*swC^2 - 64*swC^4 + 
          4*d*(-3 - 5*swC^2 + 8*swC^4)) + 2*s*(-15*d + 3*d^2 + 
          8*(3 - 5*swC^2 + 8*swC^4))*t + 4*(3 - 20*swC^2 + 32*swC^4)*t^2)*
       GaugeXi[W]^3 + mz^4*(2*Pi)^(4*d)*(-1 + sw^2)^2*(s + mz^2*(-1 + sw^2))^
        2*(s^2*(12 + 3*d^2 + 40*swC^2 - 64*swC^4 + 
          4*d*(-3 - 5*swC^2 + 8*swC^4)) + 2*s*(-15*d + 3*d^2 + 
          8*(3 - 5*swC^2 + 8*swC^4))*t + 4*(3 - 20*swC^2 + 32*swC^4)*t^2)*
       GaugeXi[W]^4))/(cwC^2*(-1 + d)*mz^4*Pi^(5*d)*s^3*(-mz^2 + s)*
     (-1 + sw^2)^2*swC^2*(-1 + GaugeXi[W])^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ((-I/9)*2^(-1 - d)*EL^6*(-1 + 4*sw^2)*
     ((-2 + d)*s^2 + 4*s*t + 4*t^2))/((-1 + d)*mz^4*Pi^d*(mz^2 - s)*sw^2*
     (-1 + sw^2)^2), ((I/9)*4^(-1 - d)*EL^6*(-(d*(2*Pi)^d*s^3) + 
      2^(1 + d)*Pi^d*s*(s^2*(1 + 2*(-2 + d)*sw^2) + 2*s*(-1 + 4*sw^2)*t + 
        2*(-1 + 4*sw^2)*t^2) + 2^(2 + d)*mz^2*Pi^d*(-1 + sw^2)*(-1 + 4*sw^2)*
       ((-2 + d)*s^2 + 4*s*t + 4*t^2)*GaugeXi[W]))/
    ((-1 + d)*mz^4*Pi^(2*d)*(mz^2 - s)*(sw - sw^3)^2), 
   ((I/9)*2^(-1 - d)*EL^6*(-1 + 4*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
     (4*d^2*s^2 + 4*mz^2*s*(-1 + sw^2) - d*(7*s^2 + 5*mz^2*s*(-1 + sw^2) + 
        mz^4*(-1 + sw^2)^2) + d*(s + mz^2*(-1 + sw^2))^2*GaugeXi[W]))/
    ((-1 + d)*d*mz^2*Pi^d*(mz^2 - s)*s^3*sw^2*(-1 + sw^2)), 
   ((I/9)*2^(-2 - d)*EL^6*(-1 + 4*sw^2)*(s + 4*mz^2*(-1 + sw^2))*
     (s^2 - 4*(-3 + 2*d)*mz^2*s*(-1 + sw^2) + 4*(-1 + d)*mz^4*(-1 + sw^2)^2)*
     ((-2 + d)*s^2 + 4*s*t + 4*t^2))/((-1 + d)*mz^4*Pi^d*(mz^2 - s)*s^2*sw^2*
     (-1 + sw^2)^2), 0, 0, 0, ((-I/9)*2^(-1 - d)*EL^6*(-1 + 4*sw^2)*
     ((-2 + d)*s^2 + 4*s*t + 4*t^2)*
     (-(d*(s + mz^2*(-1 + sw^2))*(s^2 - 2*(-3 + 2*d)*mz^2*s*(-1 + sw^2) + 
         mz^4*(-1 + sw^2)^2)) + mz^2*(-1 + sw^2)*(4*mz^2*s*(-1 + sw^2) + 
        4*d^2*mz^2*s*(-1 + sw^2) + d*(s^2 - 6*mz^2*s*(-1 + sw^2) + 
          mz^4*(-1 + sw^2)^2))*GaugeXi[W]))/((-1 + d)*d*mz^4*Pi^d*(mz^2 - s)*
     s^3*sw^2*(-1 + sw^2)^2), ((-I/9)*2^(-1 - d)*EL^6*(-1 + 4*sw^2)*
     (s + mz^2*(-1 + sw^2))^2*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
     (s^2 - 2*(-3 + 2*d)*mz^2*s*(-1 + sw^2) + mz^4*(-1 + sw^2)^2 - 
      2*mz^2*(-1 + sw^2)*(-s + mz^2*(-1 + sw^2))*GaugeXi[W] + 
      mz^4*(-1 + sw^2)^2*GaugeXi[W]^2))/((-1 + d)*mz^4*Pi^d*(mz^2 - s)*s^3*
     sw^2*(-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((I/9)*2^(-5 - 2*d)*EL^6*s*(9*d^2*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(s^2*(-6 + 4*swC^2 + 16*swC^4 + 
          3*d^2*(-2 + sw^2 + swC^2) + sw^2*(12 + 40*swC^2 - 64*swC^4) + 
          2*d*(3 - 4*swC^2 - 4*swC^4 + 2*sw^2*(-3 - 5*swC^2 + 8*swC^4))) + 
        s*(-15*d*(-1 + 2*sw^2 + 2*swC^2) + d^2*(-3 + 6*sw^2 + 6*swC^2) + 
          8*(-3 + 8*swC^2 - 4*swC^4 + 2*sw^2*(3 - 5*swC^2 + 8*swC^4)))*t + 
        2*(-3 + 8*swC^2)*(1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t^2) - 
      2*(-3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(-6 + 4*swC^2 + 16*swC^4 + 3*d^2*(sw^2 + swC^2) + 
            sw^2*(12 + 40*swC^2 - 64*swC^4) + 2*d*(3 - 4*swC^2 - 4*swC^4 + 
              2*sw^2*(-3 - 5*swC^2 + 8*swC^4))) + 
          s*(-15*d*(-1 + 2*sw^2 + 2*swC^2) + d^2*(-3 + 6*sw^2 + 6*swC^2) + 
            8*(-3 + 8*swC^2 - 4*swC^4 + 2*sw^2*(3 - 5*swC^2 + 8*swC^4)))*t + 
          2*(-3 + 8*swC^2)*(1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t^2))*
       GaugeXi[W] + (9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(-6 + 4*swC^2 + 16*swC^4 + 3*d^2*(-2 + sw^2 + swC^2) + 
            sw^2*(12 + 40*swC^2 - 64*swC^4) + 2*d*(3 - 4*swC^2 - 4*swC^4 + 
              2*sw^2*(-3 - 5*swC^2 + 8*swC^4))) + 
          s*(-15*d*(-1 + 2*sw^2 + 2*swC^2) + d^2*(-3 + 6*sw^2 + 6*swC^2) + 
            8*(-3 + 8*swC^2 - 4*swC^4 + 2*sw^2*(3 - 5*swC^2 + 8*swC^4)))*t + 
          2*(-3 + 8*swC^2)*(1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t^2))*
       GaugeXi[W]^2))/(cwC^2*(-1 + d)*mz^4*Pi^(2*d)*(mz^2 - s)^2*sw^2*
     (-1 + sw^2)^2*swC^2*(-1 + GaugeXi[W])^2), 
   ((-I/9)*4^(-3 - d)*EL^6*s*(9*d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
       (s^2*(-6 + 4*swC^2 + 16*swC^4 + 3*d^2*(-2 + sw^2 + swC^2) + 
          sw^2*(12 + 40*swC^2 - 64*swC^4) + 2*d*(3 - 4*swC^2 - 4*swC^4 + 
            2*sw^2*(-3 - 5*swC^2 + 8*swC^4))) + 
        s*(-15*d*(-1 + 2*sw^2 + 2*swC^2) + d^2*(-3 + 6*sw^2 + 6*swC^2) + 
          8*(-3 + 8*swC^2 - 4*swC^4 + 2*sw^2*(3 - 5*swC^2 + 8*swC^4)))*t + 
        2*(-3 + 8*swC^2)*(1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t^2) - 
      2*(s - 2*mz^2*(-1 + sw^2))*(-3*d^2*(2*Pi)^d*s^2 + 
        2^(1 + d)*Pi^d*(s^2*(-6 + 4*swC^2 + 16*swC^4 + 3*d^2*(sw^2 + swC^2) + 
            sw^2*(12 + 40*swC^2 - 64*swC^4) + 2*d*(3 - 4*swC^2 - 4*swC^4 + 
              2*sw^2*(-3 - 5*swC^2 + 8*swC^4))) + 
          s*(-15*d*(-1 + 2*sw^2 + 2*swC^2) + d^2*(-3 + 6*sw^2 + 6*swC^2) + 
            8*(-3 + 8*swC^2 - 4*swC^4 + 2*sw^2*(3 - 5*swC^2 + 8*swC^4)))*t + 
          2*(-3 + 8*swC^2)*(1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t^2))*
       GaugeXi[W] + (9*d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
         (s^2*(-6 + 4*swC^2 + 16*swC^4 + 3*d^2*(-2 + sw^2 + swC^2) + 
            sw^2*(12 + 40*swC^2 - 64*swC^4) + 2*d*(3 - 4*swC^2 - 4*swC^4 + 
              2*sw^2*(-3 - 5*swC^2 + 8*swC^4))) + 
          s*(-15*d*(-1 + 2*sw^2 + 2*swC^2) + d^2*(-3 + 6*sw^2 + 6*swC^2) + 
            8*(-3 + 8*swC^2 - 4*swC^4 + 2*sw^2*(3 - 5*swC^2 + 8*swC^4)))*t + 
          2*(-3 + 8*swC^2)*(1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t^2) + 
        8*mz^2*(1 - sw^2)*(-3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
           (s^2*(-6 + 4*swC^2 + 16*swC^4 + 3*d^2*(sw^2 + swC^2) + 
              sw^2*(12 + 40*swC^2 - 64*swC^4) + 2*d*(3 - 4*swC^2 - 4*swC^4 + 
                2*sw^2*(-3 - 5*swC^2 + 8*swC^4))) + 
            s*(-15*d*(-1 + 2*sw^2 + 2*swC^2) + d^2*(-3 + 6*sw^2 + 6*swC^2) + 
              8*(-3 + 8*swC^2 - 4*swC^4 + 2*sw^2*(3 - 5*swC^2 + 8*swC^4)))*
             t + 2*(-3 + 8*swC^2)*(1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t^2)))*
       GaugeXi[W]^2 - 4*mz^2*(1 - sw^2)*(-3*d^2*(2*Pi)^d*s^2 + 
        2^(1 + d)*Pi^d*(s^2*(-6 + 4*swC^2 + 16*swC^4 + 3*d^2*(sw^2 + swC^2) + 
            sw^2*(12 + 40*swC^2 - 64*swC^4) + 2*d*(3 - 4*swC^2 - 4*swC^4 + 
              2*sw^2*(-3 - 5*swC^2 + 8*swC^4))) + 
          s*(-15*d*(-1 + 2*sw^2 + 2*swC^2) + d^2*(-3 + 6*sw^2 + 6*swC^2) + 
            8*(-3 + 8*swC^2 - 4*swC^4 + 2*sw^2*(3 - 5*swC^2 + 8*swC^4)))*t + 
          2*(-3 + 8*swC^2)*(1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t^2))*
       GaugeXi[W]^3))/(cwC^2*(-1 + d)*mz^4*Pi^(2*d)*(mz^2 - s)^2*sw^2*
     (-1 + sw^2)^2*swC^2*(-1 + GaugeXi[W])^2), 
   ((-I/9)*2^(-5 - d)*EL^6*(s^2*(d^2*(-3 + 6*sw^2 + 6*swC^2) + 
        4*(-3 + 2*swC^2 + 8*swC^4 + sw^2*(6 + 20*swC^2 - 32*swC^4)) + 
        4*d*(3 - 4*swC^2 - 4*swC^4 + 2*sw^2*(-3 - 5*swC^2 + 8*swC^4))) + 
      2*s*(-15*d*(-1 + 2*sw^2 + 2*swC^2) + d^2*(-3 + 6*sw^2 + 6*swC^2) + 
        8*(-3 + 8*swC^2 - 4*swC^4 + 2*sw^2*(3 - 5*swC^2 + 8*swC^4)))*t + 
      4*(-3 + 8*swC^2)*(1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t^2)*
     (4*d^2*s^2 + 4*mz^2*s*(-1 + sw^2) - d*(7*s^2 + 5*mz^2*s*(-1 + sw^2) + 
        mz^4*(-1 + sw^2)^2) + d*(s + mz^2*(-1 + sw^2))^2*GaugeXi[W]))/
    (cwC^2*(-1 + d)*d*mz^2*Pi^d*(mz^2 - s)^2*s^2*sw^2*(-1 + sw^2)*swC^2), 
   ((I/576)*EL^6*(((s^2 + 4*mz^2*s*(-1 + sw^2) + 4*(-1 + d)*mz^4*
          (-1 + sw^2)^2)*(d*s^2 + 4*d*mz^2*s*(-1 + sw^2) + 
         4*(-1 + d)*mz^4*(-1 + sw^2)^2)*(-3 + 8*swC^2)*
        (1 - 2*swC^2 + sw^2*(-2 + 8*swC^2)))/((-1 + d)*mz^4*(2*Pi)^d*
        (-1 + sw^2)^2) + ((d*s^2 + 4*d*mz^2*s*(-1 + sw^2) + 
         4*(-1 + d)*mz^4*(-1 + sw^2)^2)*((2*Pi)^d*s^2 + 2^(2 + d)*mz^2*Pi^d*s*
          (-1 + sw^2) + 2^(2 + d)*(-1 + d)*mz^4*Pi^d*(-1 + sw^2)^2)*
        (-3 + 8*swC^2)*(1 - 2*swC^2 + sw^2*(-2 + 8*swC^2)))/
       ((-1 + d)*mz^4*(2*Pi)^(2*d)*(-1 + sw^2)^2) + 
      ((4*(-1 + d)*mz^4*(-1 + sw^2)^2 + s*(d*s + 2*t) + 4*mz^2*(-1 + sw^2)*
          (d*s + 2*t))*((2*Pi)^(3*d)*s^2*(s*(12 - 32*swC^2 + 16*swC^4 + 
             d*(-3 + 6*sw^2 + 6*swC^2) - 8*sw^2*(3 - 5*swC^2 + 8*swC^4)) - 
           2*(-3 + 8*swC^2)*(1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t) - 
         2^(2 + 3*d)*mz^2*Pi^(3*d)*s*(1 - sw^2)*
          (s*(12 - 32*swC^2 + 16*swC^4 + d*(-3 + 6*sw^2 + 6*swC^2) - 
             8*sw^2*(3 - 5*swC^2 + 8*swC^4)) - 2*(-3 + 8*swC^2)*
            (1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t) + 4*mz^4*(-1 + sw^2)^2*
          (-3*(-5 + d)*d*(2*Pi)^(3*d)*s + 2^(1 + 3*d)*Pi^(3*d)*
            (s*(-6 + (16 - 19*d + 3*d^2)*swC^2 + 8*(-1 + d)*swC^4 + sw^2*
                (3*d^2 + d*(-15 + 20*swC^2 - 32*swC^4) + 4*(3 - 5*swC^2 + 
                   8*swC^4))) - (-1 + d)*(-3 + 8*swC^2)*(1 - 2*swC^2 + sw^2*
                (-2 + 8*swC^2))*t))))/((-1 + d)*mz^4*(2*Pi)^(4*d)*s*
        (-1 + sw^2)^2) - (2^(1 - 4*d)*(-s/2 - mz^2*(-1 + sw^2))*
        (-((2*Pi)^(3*d)*s^3*(s*(6 - 4*swC^2 - 16*swC^4 + d*(-3 + 6*sw^2 + 
                6*swC^2) + 4*sw^2*(-3 - 10*swC^2 + 16*swC^4)) - 
            2*(-3 + 8*swC^2)*(1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t)) + 
         3*2^(1 + 3*d)*mz^2*Pi^(3*d)*s^2*(1 - sw^2)*
          (s*(6 - 4*swC^2 - 16*swC^4 + d*(-3 + 6*sw^2 + 6*swC^2) + 
             4*sw^2*(-3 - 10*swC^2 + 16*swC^4)) - 2*(-3 + 8*swC^2)*
            (1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t) + 8*mz^6*(1 - sw^2)^3*
          (-3*(-3 + d)*d*(2*Pi)^(3*d)*s + 2^(1 + 3*d)*Pi^(3*d)*
            (s*(-3 + (2 - 5*d + 3*d^2)*swC^2 - 8*(-1 + d)*swC^4 + sw^2*
                (6 + 3*d^2 + 20*swC^2 - 32*swC^4 + d*(-9 - 20*swC^2 + 
                   32*swC^4))) - (-1 + d)*(-3 + 8*swC^2)*(1 - 2*swC^2 + sw^2*
                (-2 + 8*swC^2))*t)) - 4*mz^4*s*(-1 + sw^2)^2*
          (-3*(-1 + d)*d*(2*Pi)^(3*d)*s + 2^(1 + 3*d)*Pi^(3*d)*
            (s*(3 + (-2 + d + 3*d^2)*swC^2 - 8*(1 + d)*swC^4 + sw^2*
                (-6 + 3*d^2 - 20*swC^2 + 32*swC^4 + d*(-3 - 20*swC^2 + 
                   32*swC^4))) - (1 + d)*(-3 + 8*swC^2)*(1 - 2*swC^2 + sw^2*
                (-2 + 8*swC^2))*t))))/(mz^4*Pi^(4*d)*s*(-1 + sw^2)^2) + 
      (2^(1 - 4*d)*(-((2*Pi)^(3*d)*s^4*(6 - 4*swC^2 - 16*swC^4 + 
            d*(-3 + 6*sw^2 + 6*swC^2) + 4*sw^2*(-3 - 10*swC^2 + 16*swC^4))*
           t) + 8*mz^8*(-1 + sw^2)^4*(-3*(-3 + d)*d*(2*Pi)^(3*d)*s + 
           2^(1 + 3*d)*Pi^(3*d)*(s*(-3 + (2 - 5*d + 3*d^2)*swC^2 - 8*(-1 + d)*
                swC^4 + sw^2*(6 + 3*d^2 + 20*swC^2 - 32*swC^4 + 
                 d*(-9 - 20*swC^2 + 32*swC^4))) - (-1 + d)*(-3 + 8*swC^2)*
              (1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t)) - 8*mz^6*s*(1 - sw^2)^3*
          (-3*d*(2*Pi)^(3*d)*s + 2^(1 + 3*d)*Pi^(3*d)*
            (s*(3 + (-2 + 3*d)*swC^2 - 8*swC^4 + sw^2*(-6 + 3*d - 20*swC^2 + 
                 32*swC^4)) + (d^2*(3 - 6*sw^2 - 6*swC^2) - 9*(-1 + 2*sw^2 + 
                 2*swC^2) + d*(-9 + 10*swC^2 + 16*swC^4 + sw^2*(18 + 
                   40*swC^2 - 64*swC^4)))*t)) - 4*mz^2*(1 - sw^2)*
          (-3*d^2*(2*Pi)^(3*d)*s^4 + 2^(1 + 3*d)*Pi^(3*d)*s^2*
            (s^2*(-6 + 4*swC^2 + 16*swC^4 + 3*d^2*(sw^2 + swC^2) + sw^2*
                (12 + 40*swC^2 - 64*swC^4) + 2*d*(3 - 4*swC^2 - 4*swC^4 + 
                 2*sw^2*(-3 - 5*swC^2 + 8*swC^4))) + s*(-30 + 68*swC^2 - 16*
                swC^4 - 18*d*(-1 + 2*sw^2 + 2*swC^2) + d^2*(-3 + 6*sw^2 + 
                 6*swC^2) + sw^2*(60 - 40*swC^2 + 64*swC^4))*t + 
             2*(-3 + 8*swC^2)*(1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t^2)) + 
         2*mz^4*(-1 + sw^2)^2*(93*d*(2*Pi)^(3*d)*s^3 + 2^(1 + 3*d)*Pi^(3*d)*s*
            (s^2*(12*d^2*(-1 + 2*sw^2 + 2*swC^2) - 15*(3 - 2*swC^2 - 
                 8*swC^4 + sw^2*(-6 - 20*swC^2 + 32*swC^4)) + d*
                (-(swC^2*(61 + 64*swC^2)) + sw^2*(-93 - 160*swC^2 + 
                   256*swC^4))) + s*(21*d^2*(-1 + 2*sw^2 + 2*swC^2) + d*
                (123 - 254*swC^2 + 16*swC^4 + sw^2*(-246 + 40*swC^2 - 
                   64*swC^4)) + 3*(-69 + 170*swC^2 - 64*swC^4 + 
                 2*sw^2*(69 - 80*swC^2 + 128*swC^4)))*t + 16*(-3 + 8*swC^2)*
              (1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t^2))))/
       (mz^4*Pi^(4*d)*s*(-1 + sw^2)^2) - 2*(-s/2 - mz^2*(-1 + sw^2))*
       ((3*d*s)/(2*Pi)^d - (4^(1 - d)*(2^(1 + d)*Pi^d - (2*Pi)^d)*s*
          (-3 + 8*swC^2)*(1 - 2*swC^2 + sw^2*(-2 + 8*swC^2)))/Pi^(2*d) + 
        (2^(2 - d)*mz^2*(1 - sw^2)*(-3 + 8*swC^2)*(1 - 2*swC^2 + 
           sw^2*(-2 + 8*swC^2)))/Pi^d + (4^(1 - d)*mz^2*(2^(1 + d)*Pi^d - 
           (2*Pi)^d)*(1 - sw^2)*(-3 + 8*swC^2)*(1 - 2*swC^2 + 
           sw^2*(-2 + 8*swC^2)))/Pi^(2*d) - 
        (2^(2 - d)*(s^2 + 3*mz^2*s*(-1 + sw^2) + 2*(-3 + 2*d)*mz^4*
            (-1 + sw^2)^2)*(-3 + 8*swC^2)*(1 - 2*swC^2 + 
           sw^2*(-2 + 8*swC^2)))/(mz^2*Pi^d*(-1 + sw^2)) + 
        (2^(1 - d)*mz^2*(1 - sw^2)*(s*(12 - 32*swC^2 + 16*swC^4 + 
             d*(-3 + 6*sw^2 + 6*swC^2) - 8*sw^2*(3 - 5*swC^2 + 8*swC^4)) - 
           2*(-3 + 8*swC^2)*(1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t))/
         (Pi^d*s) + (2^(1 - d)*(-3 + 2*d)*mz^2*(1 - sw^2)*
          (s*(6 - 4*swC^2 - 16*swC^4 + d*(-3 + 6*sw^2 + 6*swC^2) + 
             4*sw^2*(-3 - 10*swC^2 + 16*swC^4)) - 2*(-3 + 8*swC^2)*
            (1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t))/(Pi^d*s) + 
        (2^(1 - d)*(-3 + 2*d)*mz^2*(1 - sw^2)*
          (3*s*(6 - 20*swC^2 + 16*swC^4 + d*(-1 + 2*sw^2 + 2*swC^2) - 
             4*sw^2*(3 - 10*swC^2 + 16*swC^4)) - 2*(-3 + 8*swC^2)*
            (1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t))/(Pi^d*s) + 
        (2^(1 - d)*(-3*s*(3 + (-10 + d)*swC^2 + 8*swC^4 + 
             sw^2*(-6 + d + 20*swC^2 - 32*swC^4)) + (-3 + 8*swC^2)*
            (1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t))/Pi^d + 
        (2^(1 - d)*(s*(d*(3 - 6*sw^2 - 6*swC^2) + 4*(-3 + 8*swC^2 - 4*swC^4 + 
               2*sw^2*(3 - 5*swC^2 + 8*swC^4))) + 2*(-3 + 8*swC^2)*
            (1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t))/Pi^d - 
        (2^(1 - 2*d)*(3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (3*s*(3 - 10*swC^2 + 8*swC^4 + d*(-1 + sw^2 + swC^2) + sw^2*
                (-6 + 20*swC^2 - 32*swC^4)) - (-3 + 8*swC^2)*
              (1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t)))/Pi^(2*d) + 
        (mz^2*(1 - sw^2)*(-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (3*s*(3 - 10*swC^2 + 8*swC^4 + d*(1 + sw^2 + swC^2) + sw^2*
                (-6 + 20*swC^2 - 32*swC^4)) - (-3 + 8*swC^2)*
              (1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t)))/((2*Pi)^(2*d)*s) - 
        (2^(1 - 2*d)*(3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (s*(3 - 2*swC^2 - 8*swC^4 + 3*d*(-1 + sw^2 + swC^2) + sw^2*
                (-6 - 20*swC^2 + 32*swC^4)) - (-3 + 8*swC^2)*
              (1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t)))/Pi^(2*d) + 
        (2^(1 - 2*d)*(3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (s*(-3 + (2 - 3*d)*swC^2 + 8*swC^4 + sw^2*(6 - 3*d + 20*swC^2 - 
                 32*swC^4)) + (-3 + 8*swC^2)*(1 - 2*swC^2 + sw^2*
                (-2 + 8*swC^2))*t)))/Pi^(2*d) + 
        (3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-3 + (2 - 3*d)*swC^2 + 8*swC^4 + 
              sw^2*(6 - 3*d + 20*swC^2 - 32*swC^4)) + (-3 + 8*swC^2)*
             (1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t))/(2*Pi)^(2*d) - 
        (s*(3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-3 + (2 - 3*d)*swC^2 + 8*
                swC^4 + sw^2*(6 - 3*d + 20*swC^2 - 32*swC^4)) + 
             (-3 + 8*swC^2)*(1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t)))/
         (mz^2*(2*Pi)^(2*d)*(1 - sw^2)) - 
        (mz^2*(1 - sw^2)*(3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (s*(-3 + (2 - 3*d)*swC^2 + 8*swC^4 + sw^2*(6 - 3*d + 20*swC^2 - 
                 32*swC^4)) + (-3 + 8*swC^2)*(1 - 2*swC^2 + sw^2*
                (-2 + 8*swC^2))*t)))/((2*Pi)^(2*d)*s) + 
        (s*(-3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(3*s*(3 + (-10 + d)*swC^2 + 8*
                swC^4 + sw^2*(-6 + d + 20*swC^2 - 32*swC^4)) - 
             (-3 + 8*swC^2)*(1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t) - 
           2^(1 + d)*Pi^d*(3*s*(6 - 20*swC^2 + 16*swC^4 + d*(-1 + 2*sw^2 + 
                 2*swC^2) - 4*sw^2*(3 - 10*swC^2 + 16*swC^4)) - 
             2*(-3 + 8*swC^2)*(1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t)*
            GaugeXi[W] + (-3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
              (3*s*(3 + (-10 + d)*swC^2 + 8*swC^4 + sw^2*(-6 + d + 20*swC^2 - 
                   32*swC^4)) - (-3 + 8*swC^2)*(1 - 2*swC^2 + 
                 sw^2*(-2 + 8*swC^2))*t))*GaugeXi[W]^2))/
         (mz^2*(2*Pi)^(2*d)*(1 - sw^2)*(-1 + GaugeXi[W])^2) + 
        (s*(-3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(3 + (-2 + 3*d)*swC^2 - 8*
                swC^4 + sw^2*(-6 + 3*d - 20*swC^2 + 32*swC^4)) - 
             (-3 + 8*swC^2)*(1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t) - 
           2^(1 + d)*Pi^d*(s*(6 - 4*swC^2 - 16*swC^4 + d*(-3 + 6*sw^2 + 
                 6*swC^2) + 4*sw^2*(-3 - 10*swC^2 + 16*swC^4)) - 
             2*(-3 + 8*swC^2)*(1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t)*
            GaugeXi[W] + (-3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
              (s*(3 + (-2 + 3*d)*swC^2 - 8*swC^4 + sw^2*(-6 + 3*d - 
                   20*swC^2 + 32*swC^4)) - (-3 + 8*swC^2)*(1 - 2*swC^2 + 
                 sw^2*(-2 + 8*swC^2))*t))*GaugeXi[W]^2))/
         (mz^2*(2*Pi)^(2*d)*(1 - sw^2)*(-1 + GaugeXi[W])^2) - 
        s*((2^(1 - d)*(-3 + 2*d)*(s*(6 - 4*swC^2 - 16*swC^4 + d*
                (-3 + 6*sw^2 + 6*swC^2) + 4*sw^2*(-3 - 10*swC^2 + 
                 16*swC^4)) - 2*(-3 + 8*swC^2)*(1 - 2*swC^2 + sw^2*
                (-2 + 8*swC^2))*t))/(Pi^d*s) + 
          (2^(1 - 2*d)*(3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(3 - 2*swC^2 - 
                 8*swC^4 + 3*d*(-1 + sw^2 + swC^2) + sw^2*(-6 - 20*swC^2 + 
                   32*swC^4)) - (-3 + 8*swC^2)*(1 - 2*swC^2 + 
                 sw^2*(-2 + 8*swC^2))*t)))/(mz^2*Pi^(2*d)*(-1 + sw^2)) + 
          (3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-3 + (2 - 3*d)*swC^2 + 
                8*swC^4 + sw^2*(6 - 3*d + 20*swC^2 - 32*swC^4)) + 
              (-3 + 8*swC^2)*(1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t))/
           (mz^2*(2*Pi)^(2*d)*(1 - sw^2)) + 
          (s*(-3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(3 + (-2 + 3*d)*swC^2 - 
                 8*swC^4 + sw^2*(-6 + 3*d - 20*swC^2 + 32*swC^4)) - 
               (-3 + 8*swC^2)*(1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t) - 
             2^(1 + d)*Pi^d*(s*(6 - 4*swC^2 - 16*swC^4 + d*(-3 + 6*sw^2 + 
                   6*swC^2) + 4*sw^2*(-3 - 10*swC^2 + 16*swC^4)) - 2*
                (-3 + 8*swC^2)*(1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t)*
              GaugeXi[W] + (-3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
                (s*(3 + (-2 + 3*d)*swC^2 - 8*swC^4 + sw^2*(-6 + 3*d - 
                     20*swC^2 + 32*swC^4)) - (-3 + 8*swC^2)*(1 - 2*swC^2 + 
                   sw^2*(-2 + 8*swC^2))*t))*GaugeXi[W]^2))/
           (mz^4*(2*Pi)^(2*d)*(-1 + sw^2)^2*(-1 + GaugeXi[W])^2)))))/
    (cwC^2*(mz^2 - s)^2*sw^2*swC^2), 0, 0, 0, 
   ((I/9)*2^(-5 - 6*d)*EL^6*(d*(-s - mz^2*(-1 + sw^2))*
       (-3*d^2*(2*Pi)^(5*d)*s^4 + 2^(1 + 5*d)*Pi^(5*d)*s^2*
         (s^2*(-6 + 4*swC^2 + 16*swC^4 + 3*d^2*(sw^2 + swC^2) + 
            sw^2*(12 + 40*swC^2 - 64*swC^4) + 2*d*(3 - 4*swC^2 - 4*swC^4 + 
              2*sw^2*(-3 - 5*swC^2 + 8*swC^4))) + 
          s*(-15*d*(-1 + 2*sw^2 + 2*swC^2) + d^2*(-3 + 6*sw^2 + 6*swC^2) + 
            8*(-3 + 8*swC^2 - 4*swC^4 + 2*sw^2*(3 - 5*swC^2 + 8*swC^4)))*t + 
          2*(-3 + 8*swC^2)*(1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t^2) + 
        mz^4*(-1 + sw^2)^2*(-3*d^2*(2*Pi)^(5*d)*s^2 + 2^(1 + 5*d)*Pi^(5*d)*
           (s^2*(-6 + 4*swC^2 + 16*swC^4 + 3*d^2*(sw^2 + swC^2) + 
              sw^2*(12 + 40*swC^2 - 64*swC^4) + 2*d*(3 - 4*swC^2 - 4*swC^4 + 
                2*sw^2*(-3 - 5*swC^2 + 8*swC^4))) + 
            s*(-15*d*(-1 + 2*sw^2 + 2*swC^2) + d^2*(-3 + 6*sw^2 + 6*swC^2) + 
              8*(-3 + 8*swC^2 - 4*swC^4 + 2*sw^2*(3 - 5*swC^2 + 8*swC^4)))*
             t + 2*(-3 + 8*swC^2)*(1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t^2)) + 
        2*mz^2*s*(1 - sw^2)*(33*d^2*(2*Pi)^(5*d)*s^2 + 2^(1 + 5*d)*Pi^(5*d)*
           (s^2*(d^3*(-3 + 6*sw^2 + 6*swC^2) + d*(-30 + 32*swC^2 + 56*swC^4 + 
                sw^2*(60 + 140*swC^2 - 224*swC^4)) + 6*(3 - 2*swC^2 - 
                8*swC^4 + sw^2*(-6 - 20*swC^2 + 32*swC^4)) + 
              d^2*(-(swC^2*(25 + 16*swC^2)) + sw^2*(-33 - 40*swC^2 + 
                  64*swC^4))) + (-3 + 2*d)*s*(-15*d*(-1 + 2*sw^2 + 2*swC^2) + 
              d^2*(-3 + 6*sw^2 + 6*swC^2) + 8*(-3 + 8*swC^2 - 4*swC^4 + 
                2*sw^2*(3 - 5*swC^2 + 8*swC^4)))*t + 2*(-3 + 2*d)*
             (-3 + 8*swC^2)*(1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t^2))) + 
      (-3*2^(2 + 5*d)*d^4*mz^2*Pi^(5*d)*s^2*(-1 + sw^2)*
         (2*s + mz^2*(-1 + sw^2))*(-1 + 2*sw^2 + 2*swC^2)*(s + 2*t) - 
        16*mz^4*s*(-1 + sw^2)^2*((2*Pi)^(5*d)*s^2*(3 - 2*swC^2 - 8*swC^4 + 
            sw^2*(-6 - 20*swC^2 + 32*swC^4)) - 2^(2 + 5*d)*Pi^(5*d)*s*
           (-3 + 8*swC^2 - 4*swC^4 + 2*sw^2*(3 - 5*swC^2 + 8*swC^4))*t - 
          (2*Pi)^(5*d)*(-3 + 8*swC^2)*(1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*
           t^2) + d^3*s*(3*2^(1 + 5*d)*Pi^(5*d)*s^3*(-1 + 2*sw^2 + 2*swC^2)*
           (s + 2*t) + 9*mz^6*(2*Pi)^(5*d)*(-1 + sw^2)^3*(-1 + 2*sw^2 + 
            2*swC^2)*(s + 2*t) + mz^2*(2*Pi)^(5*d)*s^2*(1 - sw^2)*
           (s*(141 - 218*swC^2 - 128*swC^4 + sw^2*(-282 - 320*swC^2 + 
                512*swC^4)) - 330*(-1 + 2*sw^2 + 2*swC^2)*t) - 
          2^(3 + 5*d)*mz^4*Pi^(5*d)*s*(-1 + sw^2)^2*
           (s*(9 - 14*swC^2 - 8*swC^4 + 2*sw^2*(-9 - 10*swC^2 + 16*swC^4)) - 
            21*(-1 + 2*sw^2 + 2*swC^2)*t)) - 
        2*d^2*s*(-(2^(1 + 5*d)*Pi^(5*d)*s^3*(2*s*(3 - 4*swC^2 - 4*swC^4 + 2*
                sw^2*(-3 - 5*swC^2 + 8*swC^4)) - 15*(-1 + 2*sw^2 + 2*swC^2)*
              t)) + 3*mz^6*(2*Pi)^(5*d)*(1 - sw^2)^3*
           (2*s*(3 - 4*swC^2 - 4*swC^4 + 2*sw^2*(-3 - 5*swC^2 + 8*swC^4)) - 
            15*(-1 + 2*sw^2 + 2*swC^2)*t) - 2*mz^4*(-1 + sw^2)^2*
           ((2*Pi)^(5*d)*s^2*(33 - 34*swC^2 - 64*swC^4 + 2*sw^2*(-33 - 
                80*swC^2 + 128*swC^4)) - 2^(1 + 5*d)*Pi^(5*d)*s*
             (-51 + 118*swC^2 - 32*swC^4 + 2*sw^2*(51 - 40*swC^2 + 64*swC^4))*
             t - 2^(2 + 5*d)*Pi^(5*d)*(-3 + 8*swC^2)*(1 - 2*swC^2 + 
              sw^2*(-2 + 8*swC^2))*t^2) + mz^2*s*(1 - sw^2)*
           (417*(2*Pi)^(5*d)*s*t + 2^(1 + 5*d)*Pi^(5*d)*
             (s^2*(69 - 76*swC^2 - 124*swC^4 + 2*sw^2*(-69 - 155*swC^2 + 
                  248*swC^4)) + s*(swC^2*(-481 + 128*swC^2) + 
                sw^2*(-417 + 320*swC^2 - 512*swC^4))*t - 8*(-3 + 8*swC^2)*(
                1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t^2))) + 
        4*d*(-2*s^3*((2*Pi)^(5*d)*s^2*(3 - 2*swC^2 - 8*swC^4 + 
              sw^2*(-6 - 20*swC^2 + 32*swC^4)) - 2^(2 + 5*d)*Pi^(5*d)*s*
             (-3 + 8*swC^2 - 4*swC^4 + 2*sw^2*(3 - 5*swC^2 + 8*swC^4))*t - 
            (2*Pi)^(5*d)*(-3 + 8*swC^2)*(1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*
             t^2) + 15*mz^2*s^2*(1 - sw^2)*((2*Pi)^(5*d)*s^2*
             (3 - 2*swC^2 - 8*swC^4 + sw^2*(-6 - 20*swC^2 + 32*swC^4)) - 
            2^(2 + 5*d)*Pi^(5*d)*s*(-3 + 8*swC^2 - 4*swC^4 + 
              2*sw^2*(3 - 5*swC^2 + 8*swC^4))*t - (2*Pi)^(5*d)*(-3 + 8*swC^2)*
             (1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t^2) + 3*mz^6*(1 - sw^2)^3*
           ((2*Pi)^(5*d)*s^2*(3 - 2*swC^2 - 8*swC^4 + sw^2*(-6 - 20*swC^2 + 
                32*swC^4)) - 2^(2 + 5*d)*Pi^(5*d)*s*(-3 + 8*swC^2 - 4*swC^4 + 
              2*sw^2*(3 - 5*swC^2 + 8*swC^4))*t - (2*Pi)^(5*d)*(-3 + 8*swC^2)*
             (1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t^2) - 
          2*mz^4*s*(-1 + sw^2)^2*(33*(2*Pi)^(5*d)*s*t + 2^(1 + 5*d)*Pi^(5*d)*
             (3*s^2*(1 - 4*swC^4 + 2*sw^2*(-1 - 5*swC^2 + 8*swC^4)) + 
              s*(swC^2*(-49 + 32*swC^2) + sw^2*(-33 + 80*swC^2 - 128*swC^4))*
               t - 2*(-3 + 8*swC^2)*(1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t^
                2))))*GaugeXi[W] - (3*2^(2 + 5*d)*d^4*mz^2*Pi^(5*d)*s^2*
         (1 - sw^2)*(s - mz^2*(-1 + sw^2))*(-1 + 2*sw^2 + 2*swC^2)*
         (s + 2*t) - 32*mz^4*s*(-1 + sw^2)^2*
         ((2*Pi)^(5*d)*s^2*(3 - 2*swC^2 - 8*swC^4 + 
            sw^2*(-6 - 20*swC^2 + 32*swC^4)) - 2^(2 + 5*d)*Pi^(5*d)*s*
           (-3 + 8*swC^2 - 4*swC^4 + 2*sw^2*(3 - 5*swC^2 + 8*swC^4))*t - 
          (2*Pi)^(5*d)*(-3 + 8*swC^2)*(1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*
           t^2) - d^3*(2*Pi)^(5*d)*s*(-3*s^3*(-1 + 2*sw^2 + 2*swC^2)*
           (s + 2*t) - 9*mz^6*(-1 + sw^2)^3*(-1 + 2*sw^2 + 2*swC^2)*
           (s + 2*t) + mz^4*s*(-1 + sw^2)^2*(s*(-63 + 94*swC^2 + 64*swC^4 + 
              sw^2*(126 + 160*swC^2 - 256*swC^4)) + 
            150*(-1 + 2*sw^2 + 2*swC^2)*t) + mz^2*s^2*(1 - sw^2)*
           (s*(-75 + 118*swC^2 + 64*swC^4 + sw^2*(150 + 160*swC^2 - 
                256*swC^4)) + 174*(-1 + 2*sw^2 + 2*swC^2)*t)) + 
        4*d*(mz^4*s*(-1 + sw^2)^2*(3*(2*Pi)^(5*d)*s^2*(13 - 14*swC^2 - 
              24*swC^4 + sw^2*(-26 - 60*swC^2 + 96*swC^4)) - 
            5*2^(3 + 5*d)*Pi^(5*d)*s*(-3 + 7*swC^2 - 2*swC^4 + 
              sw^2*(6 - 5*swC^2 + 8*swC^4))*t - 5*(2*Pi)^(5*d)*(-3 + 8*swC^2)*
             (1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t^2) + 9*mz^2*s^2*(1 - sw^2)*
           ((2*Pi)^(5*d)*s^2*(3 - 2*swC^2 - 8*swC^4 + sw^2*(-6 - 20*swC^2 + 
                32*swC^4)) - 2^(2 + 5*d)*Pi^(5*d)*s*(-3 + 8*swC^2 - 4*swC^4 + 
              2*sw^2*(3 - 5*swC^2 + 8*swC^4))*t - (2*Pi)^(5*d)*(-3 + 8*swC^2)*
             (1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t^2) + 3*mz^6*(1 - sw^2)^3*
           ((2*Pi)^(5*d)*s^2*(3 - 2*swC^2 - 8*swC^4 + sw^2*(-6 - 20*swC^2 + 
                32*swC^4)) - 2^(2 + 5*d)*Pi^(5*d)*s*(-3 + 8*swC^2 - 4*swC^4 + 
              2*sw^2*(3 - 5*swC^2 + 8*swC^4))*t - (2*Pi)^(5*d)*(-3 + 8*swC^2)*
             (1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t^2) + 
          s^3*((2*Pi)^(5*d)*s^2*(-3 + 2*swC^2 + 8*swC^4 + sw^2*(6 + 
                20*swC^2 - 32*swC^4)) + 2^(2 + 5*d)*Pi^(5*d)*s*
             (-3 + 8*swC^2 - 4*swC^4 + 2*sw^2*(3 - 5*swC^2 + 8*swC^4))*t + 
            (2*Pi)^(5*d)*(-3 + 8*swC^2)*(1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*
             t^2)) + 2*d^2*s*((2*Pi)^(5*d)*s^3*
           (2*s*(3 - 4*swC^2 - 4*swC^4 + 2*sw^2*(-3 - 5*swC^2 + 8*swC^4)) - 
            15*(-1 + 2*sw^2 + 2*swC^2)*t) + 3*mz^6*(2*Pi)^(5*d)*(1 - sw^2)^3*
           (s*(-6 + 8*swC^2 + 8*swC^4 - 4*sw^2*(-3 - 5*swC^2 + 8*swC^4)) + 
            15*(-1 + 2*sw^2 + 2*swC^2)*t) + mz^4*(-1 + sw^2)^2*
           (-195*(2*Pi)^(5*d)*s*t + 2^(1 + 5*d)*Pi^(5*d)*
             (s^2*(-33 + 40*swC^2 + 52*swC^4 + sw^2*(66 + 130*swC^2 - 
                  208*swC^4)) + s*(227*swC^2 - 64*swC^4 + sw^2*(195 - 
                  160*swC^2 + 256*swC^4))*t + 4*(-3 + 8*swC^2)*(1 - 2*swC^2 + 
                sw^2*(-2 + 8*swC^2))*t^2)) + mz^2*s*(1 - sw^2)*
           (-231*(2*Pi)^(5*d)*s*t + 2^(1 + 5*d)*Pi^(5*d)*
             (s^2*(-39 + 44*swC^2 + 68*swC^4 + sw^2*(78 + 170*swC^2 - 
                  272*swC^4)) + s*(263*swC^2 - 64*swC^4 + sw^2*(231 - 
                  160*swC^2 + 256*swC^4))*t + 4*(-3 + 8*swC^2)*(1 - 2*swC^2 + 
                sw^2*(-2 + 8*swC^2))*t^2))))*GaugeXi[W]^2 + 
      mz^2*(1 - sw^2)*(-3*2^(2 + 5*d)*d^4*mz^2*Pi^(5*d)*s^2*(-1 + sw^2)*
         (-1 + 2*sw^2 + 2*swC^2)*(s + 2*t) - 16*mz^2*s*(1 - sw^2)*
         ((2*Pi)^(5*d)*s^2*(3 - 2*swC^2 - 8*swC^4 + 
            sw^2*(-6 - 20*swC^2 + 32*swC^4)) - 2^(2 + 5*d)*Pi^(5*d)*s*
           (-3 + 8*swC^2 - 4*swC^4 + 2*sw^2*(3 - 5*swC^2 + 8*swC^4))*t - 
          (2*Pi)^(5*d)*(-3 + 8*swC^2)*(1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*
           t^2) + d^3*s*(-3*(2*Pi)^(5*d)*s^2*(-1 + 2*sw^2 + 2*swC^2)*
           (s + 2*t) - 3*mz^4*(2*Pi)^(5*d)*(-1 + sw^2)^2*(-1 + 2*sw^2 + 
            2*swC^2)*(s + 2*t) + 2^(1 + 5*d)*mz^2*Pi^(5*d)*s*(1 - sw^2)*
           (s*(33 - 50*swC^2 - 32*swC^4 + 2*sw^2*(-33 - 40*swC^2 + 
                64*swC^4)) - 78*(-1 + 2*sw^2 + 2*swC^2)*t)) - 
        2*d^2*s*((2*Pi)^(5*d)*s^2*(2*s*(3 - 4*swC^2 - 4*swC^4 + 
              2*sw^2*(-3 - 5*swC^2 + 8*swC^4)) - 15*(-1 + 2*sw^2 + 2*swC^2)*
             t) + mz^4*(2*Pi)^(5*d)*(-1 + sw^2)^2*
           (2*s*(3 - 4*swC^2 - 4*swC^4 + 2*sw^2*(-3 - 5*swC^2 + 8*swC^4)) - 
            15*(-1 + 2*sw^2 + 2*swC^2)*t) + 2*mz^2*(1 - sw^2)*
           ((2*Pi)^(5*d)*s^2*(33 - 38*swC^2 - 56*swC^4 + 2*sw^2*(-33 - 
                70*swC^2 + 112*swC^4)) + (2*Pi)^(5*d)*s*(99 - 230*swC^2 + 
              64*swC^4 - 2*sw^2*(99 - 80*swC^2 + 128*swC^4))*t - 
            2^(2 + 5*d)*Pi^(5*d)*(-3 + 8*swC^2)*(1 - 2*swC^2 + 
              sw^2*(-2 + 8*swC^2))*t^2)) + 
        4*d*(2^(1 + 5*d)*mz^2*Pi^(5*d)*s*(1 - sw^2)*
           (s^2*(15 - 14*swC^2 - 32*swC^4 + 2*sw^2*(-15 - 40*swC^2 + 
                64*swC^4)) + 3*s*(17 - 42*swC^2 + 16*swC^4 + 
              sw^2*(-34 + 40*swC^2 - 64*swC^4))*t - 3*(-3 + 8*swC^2)*
             (1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t^2) + 
          s^2*((2*Pi)^(5*d)*s^2*(3 - 2*swC^2 - 8*swC^4 + sw^2*(-6 - 
                20*swC^2 + 32*swC^4)) - 2^(2 + 5*d)*Pi^(5*d)*s*
             (-3 + 8*swC^2 - 4*swC^4 + 2*sw^2*(3 - 5*swC^2 + 8*swC^4))*t - 
            (2*Pi)^(5*d)*(-3 + 8*swC^2)*(1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*
             t^2) + mz^4*(-1 + sw^2)^2*((2*Pi)^(5*d)*s^2*(3 - 2*swC^2 - 
              8*swC^4 + sw^2*(-6 - 20*swC^2 + 32*swC^4)) - 
            2^(2 + 5*d)*Pi^(5*d)*s*(-3 + 8*swC^2 - 4*swC^4 + 
              2*sw^2*(3 - 5*swC^2 + 8*swC^4))*t - (2*Pi)^(5*d)*(-3 + 8*swC^2)*
             (1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t^2)))*GaugeXi[W]^3))/
    (cwC^2*(-1 + d)*d*mz^4*Pi^(6*d)*(mz^2 - s)^2*s^2*sw^2*(-1 + sw^2)^2*swC^2*
     (-1 + GaugeXi[W])^2), ((I/9)*2^(-5 - 6*d)*EL^6*
     (-3*d^2*(2*Pi)^(5*d)*s^6 + 2^(1 + 5*d)*Pi^(5*d)*s^4*
       (s^2*(-6 + 4*swC^2 + 16*swC^4 + 3*d^2*(sw^2 + swC^2) + 
          sw^2*(12 + 40*swC^2 - 64*swC^4) + 2*d*(3 - 4*swC^2 - 4*swC^4 + 
            2*sw^2*(-3 - 5*swC^2 + 8*swC^4))) + 
        s*(-15*d*(-1 + 2*sw^2 + 2*swC^2) + d^2*(-3 + 6*sw^2 + 6*swC^2) + 
          8*(-3 + 8*swC^2 - 4*swC^4 + 2*sw^2*(3 - 5*swC^2 + 8*swC^4)))*t + 
        2*(-3 + 8*swC^2)*(1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t^2) + 
      mz^8*(-1 + sw^2)^4*(-3*d^2*(2*Pi)^(5*d)*s^2 + 2^(1 + 5*d)*Pi^(5*d)*
         (s^2*(-6 + 4*swC^2 + 16*swC^4 + 3*d^2*(sw^2 + swC^2) + 
            sw^2*(12 + 40*swC^2 - 64*swC^4) + 2*d*(3 - 4*swC^2 - 4*swC^4 + 
              2*sw^2*(-3 - 5*swC^2 + 8*swC^4))) + 
          s*(-15*d*(-1 + 2*sw^2 + 2*swC^2) + d^2*(-3 + 6*sw^2 + 6*swC^2) + 
            8*(-3 + 8*swC^2 - 4*swC^4 + 2*sw^2*(3 - 5*swC^2 + 8*swC^4)))*t + 
          2*(-3 + 8*swC^2)*(1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t^2)) + 
      4*mz^2*s^3*(1 - sw^2)*(-3*d^3*(2*Pi)^(5*d)*s^2 + 2^(1 + 5*d)*Pi^(5*d)*
         (s^2*(3*d^3*(sw^2 + swC^2) + d*(-18 + 20*swC^2 + 32*swC^4 + 
              sw^2*(36 + 80*swC^2 - 128*swC^4)) + d^2*(9 - 14*swC^2 - 
              8*swC^4 + 2*sw^2*(-9 - 10*swC^2 + 16*swC^4)) + 
            4*(3 - 2*swC^2 - 8*swC^4 + sw^2*(-6 - 20*swC^2 + 32*swC^4))) + 
          (-2 + d)*s*(-15*d*(-1 + 2*sw^2 + 2*swC^2) + 
            d^2*(-3 + 6*sw^2 + 6*swC^2) + 8*(-3 + 8*swC^2 - 4*swC^4 + 
              2*sw^2*(3 - 5*swC^2 + 8*swC^4)))*t + 2*(-2 + d)*(-3 + 8*swC^2)*
           (1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t^2)) + 
      4*mz^6*s*(1 - sw^2)^3*(-3*d^3*(2*Pi)^(5*d)*s^2 + 2^(1 + 5*d)*Pi^(5*d)*
         (s^2*(3*d^3*(sw^2 + swC^2) + d*(-18 + 20*swC^2 + 32*swC^4 + 
              sw^2*(36 + 80*swC^2 - 128*swC^4)) + d^2*(9 - 14*swC^2 - 
              8*swC^4 + 2*sw^2*(-9 - 10*swC^2 + 16*swC^4)) + 
            4*(3 - 2*swC^2 - 8*swC^4 + sw^2*(-6 - 20*swC^2 + 32*swC^4))) + 
          (-2 + d)*s*(-15*d*(-1 + 2*sw^2 + 2*swC^2) + 
            d^2*(-3 + 6*sw^2 + 6*swC^2) + 8*(-3 + 8*swC^2 - 4*swC^4 + 
              2*sw^2*(3 - 5*swC^2 + 8*swC^4)))*t + 2*(-2 + d)*(-3 + 8*swC^2)*
           (1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t^2)) - 
      2*mz^4*(s - s*sw^2)^2*(69*d^2*(2*Pi)^(5*d)*s^2 + 2^(1 + 5*d)*Pi^(5*d)*
         (s^2*(6*d^3*(-1 + 2*sw^2 + 2*swC^2) + 14*(3 - 2*swC^2 - 8*swC^4 + 
              sw^2*(-6 - 20*swC^2 + 32*swC^4)) - 6*d*(11 - 12*swC^2 - 
              20*swC^4 + sw^2*(-22 - 50*swC^2 + 80*swC^4)) + 
            d^2*(-(swC^2*(53 + 32*swC^2)) + sw^2*(-69 - 80*swC^2 + 
                128*swC^4))) + (-7 + 4*d)*s*(-15*d*(-1 + 2*sw^2 + 2*swC^2) + 
            d^2*(-3 + 6*sw^2 + 6*swC^2) + 8*(-3 + 8*swC^2 - 4*swC^4 + 
              2*sw^2*(3 - 5*swC^2 + 8*swC^4)))*t + 2*(-7 + 4*d)*
           (-3 + 8*swC^2)*(1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t^2)) - 
      2*(s + mz^2*(-1 + sw^2))^2*(-3*d^2*(2*Pi)^(5*d)*s^4 + 
        2^(1 + 5*d)*Pi^(5*d)*s^2*(s^2*(-6 + 4*swC^2 + 16*swC^4 + 
            3*d^2*(sw^2 + swC^2) + sw^2*(12 + 40*swC^2 - 64*swC^4) + 
            2*d*(3 - 4*swC^2 - 4*swC^4 + 2*sw^2*(-3 - 5*swC^2 + 8*swC^4))) + 
          s*(-15*d*(-1 + 2*sw^2 + 2*swC^2) + d^2*(-3 + 6*sw^2 + 6*swC^2) + 
            8*(-3 + 8*swC^2 - 4*swC^4 + 2*sw^2*(3 - 5*swC^2 + 8*swC^4)))*t + 
          2*(-3 + 8*swC^2)*(1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t^2) + 
        2*mz^4*(-1 + sw^2)^2*(-3*d^2*(2*Pi)^(5*d)*s^2 + 2^(1 + 5*d)*Pi^(5*d)*
           (s^2*(-6 + 4*swC^2 + 16*swC^4 + 3*d^2*(sw^2 + swC^2) + 
              sw^2*(12 + 40*swC^2 - 64*swC^4) + 2*d*(3 - 4*swC^2 - 4*swC^4 + 
                2*sw^2*(-3 - 5*swC^2 + 8*swC^4))) + 
            s*(-15*d*(-1 + 2*sw^2 + 2*swC^2) + d^2*(-3 + 6*sw^2 + 6*swC^2) + 
              8*(-3 + 8*swC^2 - 4*swC^4 + 2*sw^2*(3 - 5*swC^2 + 8*swC^4)))*
             t + 2*(-3 + 8*swC^2)*(1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t^2)) + 
        mz^2*s*(1 - sw^2)*(63*d^2*(2*Pi)^(5*d)*s^2 + 2^(1 + 5*d)*Pi^(5*d)*
           (s^2*(6*d^3*(-1 + 2*sw^2 + 2*swC^2) + d*(-54 + 56*swC^2 + 
                104*swC^4 + sw^2*(108 + 260*swC^2 - 416*swC^4)) + 
              10*(3 - 2*swC^2 - 8*swC^4 + sw^2*(-6 - 20*swC^2 + 32*swC^4)) + 
              d^2*(-(swC^2*(47 + 32*swC^2)) + sw^2*(-63 - 80*swC^2 + 
                  128*swC^4))) + (-5 + 4*d)*s*(-15*d*(-1 + 2*sw^2 + 
                2*swC^2) + d^2*(-3 + 6*sw^2 + 6*swC^2) + 8*(-3 + 8*swC^2 - 
                4*swC^4 + 2*sw^2*(3 - 5*swC^2 + 8*swC^4)))*t + 
            2*(-5 + 4*d)*(-3 + 8*swC^2)*(1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*
             t^2)))*GaugeXi[W] + (-3*d^2*(2*Pi)^(5*d)*s^6 + 
        2^(1 + 5*d)*Pi^(5*d)*s^4*(s^2*(-6 + 4*swC^2 + 16*swC^4 + 
            3*d^2*(sw^2 + swC^2) + sw^2*(12 + 40*swC^2 - 64*swC^4) + 
            2*d*(3 - 4*swC^2 - 4*swC^4 + 2*sw^2*(-3 - 5*swC^2 + 8*swC^4))) + 
          s*(-15*d*(-1 + 2*sw^2 + 2*swC^2) + d^2*(-3 + 6*sw^2 + 6*swC^2) + 
            8*(-3 + 8*swC^2 - 4*swC^4 + 2*sw^2*(3 - 5*swC^2 + 8*swC^4)))*t + 
          2*(-3 + 8*swC^2)*(1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t^2) + 
        6*mz^8*(-1 + sw^2)^4*(-3*d^2*(2*Pi)^(5*d)*s^2 + 2^(1 + 5*d)*Pi^(5*d)*
           (s^2*(-6 + 4*swC^2 + 16*swC^4 + 3*d^2*(sw^2 + swC^2) + 
              sw^2*(12 + 40*swC^2 - 64*swC^4) + 2*d*(3 - 4*swC^2 - 4*swC^4 + 
                2*sw^2*(-3 - 5*swC^2 + 8*swC^4))) + 
            s*(-15*d*(-1 + 2*sw^2 + 2*swC^2) + d^2*(-3 + 6*sw^2 + 6*swC^2) + 
              8*(-3 + 8*swC^2 - 4*swC^4 + 2*sw^2*(3 - 5*swC^2 + 8*swC^4)))*
             t + 2*(-3 + 8*swC^2)*(1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t^2)) + 
        4*mz^2*s^3*(1 - sw^2)*(-3*(-5 + d)*d^2*(2*Pi)^(5*d)*s^2 + 
          2^(1 + 5*d)*Pi^(5*d)*(s^2*(3*d^3*(sw^2 + swC^2) - 12*d*(1 - swC^2 - 
                2*swC^4 + sw^2*(-2 - 5*swC^2 + 8*swC^4)) + 
              d^2*(-(swC^2*(11 + 8*swC^2)) + sw^2*(-15 - 20*swC^2 + 
                  32*swC^4)) + 2*(3 - 2*swC^2 - 8*swC^4 + sw^2*
                 (-6 - 20*swC^2 + 32*swC^4))) + (-1 + d)*s*
             (-15*d*(-1 + 2*sw^2 + 2*swC^2) + d^2*(-3 + 6*sw^2 + 6*swC^2) + 
              8*(-3 + 8*swC^2 - 4*swC^4 + 2*sw^2*(3 - 5*swC^2 + 8*swC^4)))*
             t + 2*(-1 + d)*(-3 + 8*swC^2)*(1 - 2*swC^2 + sw^2*(-2 + 
                8*swC^2))*t^2)) + 2*mz^6*s*(1 - sw^2)^3*
         (45*d^2*(2*Pi)^(5*d)*s^2 + 2^(1 + 5*d)*Pi^(5*d)*
           (s^2*(d^3*(-3 + 6*sw^2 + 6*swC^2) + 14*(3 - 2*swC^2 - 8*swC^4 + 
                sw^2*(-6 - 20*swC^2 + 32*swC^4)) + 
              d^2*(-(swC^2*(37 + 16*swC^2)) + sw^2*(-45 - 40*swC^2 + 
                  64*swC^4)) + d*(-54 + 64*swC^2 + 88*swC^4 - 4*sw^2*
                 (-27 - 55*swC^2 + 88*swC^4))) + (-7 + 2*d)*s*
             (-15*d*(-1 + 2*sw^2 + 2*swC^2) + d^2*(-3 + 6*sw^2 + 6*swC^2) + 
              8*(-3 + 8*swC^2 - 4*swC^4 + 2*sw^2*(3 - 5*swC^2 + 8*swC^4)))*
             t + 2*(-7 + 2*d)*(-3 + 8*swC^2)*(1 - 2*swC^2 + sw^2*(-2 + 
                8*swC^2))*t^2)) + mz^4*(s - s*sw^2)^2*
         (-129*d^2*(2*Pi)^(5*d)*s^2 + 2^(1 + 5*d)*Pi^(5*d)*
           (s^2*(-12*d^3*(-1 + 2*sw^2 + 2*swC^2) + d^2*(swC^2*(97 + 
                  64*swC^2) + sw^2*(129 + 160*swC^2 - 256*swC^4)) - 
              22*(3 - 2*swC^2 - 8*swC^4 + sw^2*(-6 - 20*swC^2 + 32*swC^4)) + 
              6*d*(19 - 20*swC^2 - 36*swC^4 + 2*sw^2*(-19 - 45*swC^2 + 
                  72*swC^4))) - (-11 + 8*d)*s*(-15*d*(-1 + 2*sw^2 + 
                2*swC^2) + d^2*(-3 + 6*sw^2 + 6*swC^2) + 8*(-3 + 8*swC^2 - 
                4*swC^4 + 2*sw^2*(3 - 5*swC^2 + 8*swC^4)))*t - 
            2*(-11 + 8*d)*(-3 + 8*swC^2)*(1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*
             t^2)))*GaugeXi[W]^2 - 2*mz^2*(1 - sw^2)*(s - 2*mz^2*(-1 + sw^2))*
       (s + mz^2*(-1 + sw^2))^2*(-3*d^2*(2*Pi)^(5*d)*s^2 + 
        2^(1 + 5*d)*Pi^(5*d)*(s^2*(-6 + 4*swC^2 + 16*swC^4 + 
            3*d^2*(sw^2 + swC^2) + sw^2*(12 + 40*swC^2 - 64*swC^4) + 
            2*d*(3 - 4*swC^2 - 4*swC^4 + 2*sw^2*(-3 - 5*swC^2 + 8*swC^4))) + 
          s*(-15*d*(-1 + 2*sw^2 + 2*swC^2) + d^2*(-3 + 6*sw^2 + 6*swC^2) + 
            8*(-3 + 8*swC^2 - 4*swC^4 + 2*sw^2*(3 - 5*swC^2 + 8*swC^4)))*t + 
          2*(-3 + 8*swC^2)*(1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t^2))*
       GaugeXi[W]^3 + mz^4*(-1 + sw^2)^2*(s + mz^2*(-1 + sw^2))^2*
       (-3*d^2*(2*Pi)^(5*d)*s^2 + 2^(1 + 5*d)*Pi^(5*d)*
         (s^2*(-6 + 4*swC^2 + 16*swC^4 + 3*d^2*(sw^2 + swC^2) + 
            sw^2*(12 + 40*swC^2 - 64*swC^4) + 2*d*(3 - 4*swC^2 - 4*swC^4 + 
              2*sw^2*(-3 - 5*swC^2 + 8*swC^4))) + 
          s*(-15*d*(-1 + 2*sw^2 + 2*swC^2) + d^2*(-3 + 6*sw^2 + 6*swC^2) + 
            8*(-3 + 8*swC^2 - 4*swC^4 + 2*sw^2*(3 - 5*swC^2 + 8*swC^4)))*t + 
          2*(-3 + 8*swC^2)*(1 - 2*swC^2 + sw^2*(-2 + 8*swC^2))*t^2))*
       GaugeXi[W]^4))/(cwC^2*(-1 + d)*mz^4*Pi^(6*d)*(mz^2 - s)^2*s^2*sw^2*
     (-1 + sw^2)^2*swC^2*(-1 + GaugeXi[W])^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ((-I/9)*2^(-2 - d)*EL^6*(-3 + 8*sw^2)*
     ((-2 + d)*s^2 + 4*s*t + 4*t^2))/((-1 + d)*mz^4*Pi^d*(mz^2 - s)*sw^2*
     (-1 + sw^2)^2), ((I/9)*2^(-3 - 2*d)*EL^6*(-3*d*(2*Pi)^d*s^3 + 
      2^(1 + d)*Pi^d*s*(s^2*(3 + 4*(-2 + d)*sw^2) + 2*s*(-3 + 8*sw^2)*t + 
        2*(-3 + 8*sw^2)*t^2) + 2^(2 + d)*mz^2*Pi^d*(-1 + sw^2)*(-3 + 8*sw^2)*
       ((-2 + d)*s^2 + 4*s*t + 4*t^2)*GaugeXi[W]))/
    ((-1 + d)*mz^4*Pi^(2*d)*(mz^2 - s)*(sw - sw^3)^2), 
   ((I/9)*2^(-2 - 3*d)*EL^6*(-3 + 8*sw^2)*(4^(1 + d)*d^3*Pi^(2*d)*s^4 - 
      d^2*(2*Pi)^(2*d)*s^2*(15*s^2 + 5*mz^2*s*(-1 + sw^2) + 
        mz^4*(-1 + sw^2)^2 - 16*s*t - 16*t^2) - 2^(3 + 2*d)*mz^2*Pi^(2*d)*s*
       (-1 + sw^2)*(s^2 - 2*s*t - 2*t^2) + 2^(1 + 2*d)*d*Pi^(2*d)*
       (mz^2*s*(-1 + sw^2)*(7*s^2 - 10*s*t - 10*t^2) + 
        7*s^2*(s^2 - 2*s*t - 2*t^2) + mz^4*(-1 + sw^2)^2*
         (s^2 - 2*s*t - 2*t^2)) + d*(2*Pi)^(2*d)*(s + mz^2*(-1 + sw^2))^2*
       ((-2 + d)*s^2 + 4*s*t + 4*t^2)*GaugeXi[W]))/
    ((-1 + d)*d*mz^2*Pi^(3*d)*(mz^2 - s)*s^3*sw^2*(-1 + sw^2)), 
   ((I/9)*2^(-3 - d)*EL^6*(-3 + 8*sw^2)*(s + 4*mz^2*(-1 + sw^2))*
     (s^2 - 4*(-3 + 2*d)*mz^2*s*(-1 + sw^2) + 4*(-1 + d)*mz^4*(-1 + sw^2)^2)*
     ((-2 + d)*s^2 + 4*s*t + 4*t^2))/((-1 + d)*mz^4*Pi^d*(mz^2 - s)*s^2*sw^2*
     (-1 + sw^2)^2), 0, 0, 0, ((I/9)*4^(-1 - 2*d)*EL^6*(-3 + 8*sw^2)*
     (d*(2*Pi)^(3*d)*(-s - mz^2*(-1 + sw^2))*
       (s^2 - 2*(-3 + 2*d)*mz^2*s*(-1 + sw^2) + mz^4*(-1 + sw^2)^2)*
       ((-2 + d)*s^2 + 4*s*t + 4*t^2) + mz^2*(1 - sw^2)*
       (-(2^(2 + 3*d)*d^3*mz^2*Pi^(3*d)*s^3*(-1 + sw^2)) + 
        8^(1 + d)*mz^2*Pi^(3*d)*s*(-1 + sw^2)*(s^2 - 2*s*t - 2*t^2) - 
        d^2*(2*Pi)^(3*d)*s*(s^3 + mz^4*s*(-1 + sw^2)^2 - 2*mz^2*(-1 + sw^2)*
           (7*s^2 - 8*s*t - 8*t^2)) + 2^(1 + 3*d)*d*Pi^(3*d)*
         (-4*mz^2*s*(-1 + sw^2)*(2*s^2 - 3*s*t - 3*t^2) + 
          s^2*(s^2 - 2*s*t - 2*t^2) + mz^4*(-1 + sw^2)^2*(s^2 - 2*s*t - 
            2*t^2)))*GaugeXi[W]))/((-1 + d)*d*mz^4*Pi^(4*d)*s^3*(-mz^2 + s)*
     (sw - sw^3)^2), ((-I/9)*2^(-2 - d)*EL^6*(-3 + 8*sw^2)*
     (s + mz^2*(-1 + sw^2))^2*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
     (s^2 - 2*(-3 + 2*d)*mz^2*s*(-1 + sw^2) + mz^4*(-1 + sw^2)^2 - 
      2*mz^2*(-1 + sw^2)*(-s + mz^2*(-1 + sw^2))*GaugeXi[W] + 
      mz^4*(-1 + sw^2)^2*GaugeXi[W]^2))/((-1 + d)*mz^4*Pi^d*(mz^2 - s)*s^3*
     sw^2*(-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((I/9)*4^(-3 - d)*EL^6*s*(9*d^2*(2*Pi)^d*s^2 + 
      2^(1 + d)*Pi^d*(s^2*(d^2*(-9 + 6*sw^2 + 6*swC^2) - 
          6*d*(-3 + swC^2 + 4*swC^4) + 8*d*sw^2*(-3 - 5*swC^2 + 8*swC^4) + 
          2*(-9 - 6*swC^2 + 24*swC^4 + sw^2*(12 + 40*swC^2 - 64*swC^4))) + 
        s*(-15*d*(-3 + 4*sw^2 + 4*swC^2) + 3*d^2*(-3 + 4*sw^2 + 4*swC^2) - 
          24*(3 - 7*swC^2 + 4*swC^4) + 32*sw^2*(3 - 5*swC^2 + 8*swC^4))*t + 
        2*(-1 + 4*swC^2)*(9 - 12*swC^2 + 4*sw^2*(-3 + 8*swC^2))*t^2) - 
      2*(-9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (2*s^2*(-9 - 6*swC^2 + 24*swC^4 + 3*d^2*(sw^2 + swC^2) + 
            sw^2*(12 + 40*swC^2 - 64*swC^4) - 3*d*(-3 + swC^2 + 4*swC^4) + 
            4*d*sw^2*(-3 - 5*swC^2 + 8*swC^4)) + 
          s*(-15*d*(-3 + 4*sw^2 + 4*swC^2) + 3*d^2*(-3 + 4*sw^2 + 4*swC^2) - 
            24*(3 - 7*swC^2 + 4*swC^4) + 32*sw^2*(3 - 5*swC^2 + 8*swC^4))*t + 
          2*(-1 + 4*swC^2)*(9 - 12*swC^2 + 4*sw^2*(-3 + 8*swC^2))*t^2))*
       GaugeXi[W] + (9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(d^2*(-9 + 6*sw^2 + 6*swC^2) - 6*d*(-3 + swC^2 + 4*swC^4) + 
            8*d*sw^2*(-3 - 5*swC^2 + 8*swC^4) + 2*(-9 - 6*swC^2 + 24*swC^4 + 
              sw^2*(12 + 40*swC^2 - 64*swC^4))) + 
          s*(-15*d*(-3 + 4*sw^2 + 4*swC^2) + 3*d^2*(-3 + 4*sw^2 + 4*swC^2) - 
            24*(3 - 7*swC^2 + 4*swC^4) + 32*sw^2*(3 - 5*swC^2 + 8*swC^4))*t + 
          2*(-1 + 4*swC^2)*(9 - 12*swC^2 + 4*sw^2*(-3 + 8*swC^2))*t^2))*
       GaugeXi[W]^2))/(cwC^2*(-1 + d)*mz^4*Pi^(2*d)*(mz^2 - s)^2*sw^2*
     (-1 + sw^2)^2*swC^2*(-1 + GaugeXi[W])^2), 
   ((I/9)*2^(-7 - 2*d)*EL^6*s*
     (2^(1 + d)*Pi^d*(s*(18 + 12*swC^2 - 48*swC^4 + 
          3*d*(-3 + 4*sw^2 + 4*swC^2) + 8*sw^2*(-3 - 10*swC^2 + 16*swC^4)) - 
        2*(-1 + 4*swC^2)*(9 - 12*swC^2 + 4*sw^2*(-3 + 8*swC^2))*t)*
       (-s/2 - mz^2*(-1 + sw^2)*GaugeXi[W])*
       (s + 2*mz^2*(-1 + sw^2)*GaugeXi[W]) + 
      (2^(1 + d)*Pi^d*s*(-1 + 4*swC^2)*(9 - 12*swC^2 + 4*sw^2*(-3 + 8*swC^2))*
        (d*s^2 + 4*d*mz^2*s*(-1 + sw^2)*GaugeXi[W] + 4*(-1 + d)*mz^4*
          (-1 + sw^2)^2*GaugeXi[W]^2))/(-1 + d) + 
      ((2*Pi)^d*(s*(3*d*(-3 + 4*sw^2 + 4*swC^2) + 
           12*(3 - 7*swC^2 + 4*swC^4) - 16*sw^2*(3 - 5*swC^2 + 8*swC^4)) - 
         2*(-1 + 4*swC^2)*(9 - 12*swC^2 + 4*sw^2*(-3 + 8*swC^2))*t)*
        (s*(d*s + 2*t) + 4*mz^2*(-1 + sw^2)*(d*s + 2*t)*GaugeXi[W] + 
         4*(-1 + d)*mz^4*(-1 + sw^2)^2*GaugeXi[W]^2))/(-1 + d) + 
      (2*(-s/2 - mz^2*(-1 + sw^2)*GaugeXi[W])*
        (s*(9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(9 + 6*swC^2 - 24*swC^4 + d*
                (-9 + 6*sw^2 + 6*swC^2) + 4*sw^2*(-3 - 10*swC^2 + 
                 16*swC^4)) - (-1 + 4*swC^2)*(9 - 12*swC^2 + 4*sw^2*
                (-3 + 8*swC^2))*t)) - 2*(s - mz^2*(-1 + sw^2))*
          (-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(9 + 6*(1 + d)*swC^2 - 24*
                swC^4 + 2*sw^2*(-6 + 3*d - 20*swC^2 + 32*swC^4)) - 
             (-1 + 4*swC^2)*(9 - 12*swC^2 + 4*sw^2*(-3 + 8*swC^2))*t))*
          GaugeXi[W] + (2^(2 + d)*mz^2*Pi^d*(1 - sw^2)*
            (s*(18 + 12*swC^2 - 48*swC^4 + 3*d*(-3 + 4*sw^2 + 4*swC^2) + 8*
                sw^2*(-3 - 10*swC^2 + 16*swC^4)) - 2*(-1 + 4*swC^2)*
              (9 - 12*swC^2 + 4*sw^2*(-3 + 8*swC^2))*t) + 
           s*(9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(9 + 6*swC^2 - 24*swC^4 + 
                 d*(-9 + 6*sw^2 + 6*swC^2) + 4*sw^2*(-3 - 10*swC^2 + 
                   16*swC^4)) - (-1 + 4*swC^2)*(9 - 12*swC^2 + 4*sw^2*
                  (-3 + 8*swC^2))*t)))*GaugeXi[W]^2 - 2^(1 + d)*mz^2*Pi^d*
          (1 - sw^2)*(s*(18 + 12*swC^2 - 48*swC^4 + 3*d*(-3 + 4*sw^2 + 4*
                swC^2) + 8*sw^2*(-3 - 10*swC^2 + 16*swC^4)) - 
           2*(-1 + 4*swC^2)*(9 - 12*swC^2 + 4*sw^2*(-3 + 8*swC^2))*t)*
          GaugeXi[W]^3))/(-1 + GaugeXi[W])^2 - 
      (2*(s^2*(-9*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(9 + 6*(1 + d)*swC^2 - 
             24*swC^4 + 2*sw^2*(-6 + 3*d - 20*swC^2 + 32*swC^4)))*t - 
         2*s*(2^(1 + d)*mz^2*Pi^d*(1 - sw^2)*(18 + 12*swC^2 - 48*swC^4 + 
             3*d*(-3 + 4*sw^2 + 4*swC^2) + 8*sw^2*(-3 - 10*swC^2 + 16*
                swC^4)) + s*(-9*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(9 + 6*(1 + d)*
                swC^2 - 24*swC^4 + 2*sw^2*(-6 + 3*d - 20*swC^2 + 32*swC^4))))*
          t*GaugeXi[W] + (2^(3 + d)*mz^2*Pi^d*s*(1 - sw^2)*(18 + 12*swC^2 - 
             48*swC^4 + 3*d*(-3 + 4*sw^2 + 4*swC^2) + 
             8*sw^2*(-3 - 10*swC^2 + 16*swC^4))*t + 
           s^2*(-9*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(9 + 6*(1 + d)*swC^2 - 24*
                swC^4 + 2*sw^2*(-6 + 3*d - 20*swC^2 + 32*swC^4)))*t - 
           2^(1 + d)*mz^4*Pi^d*(-1 + sw^2)^2*(s*(18 + 12*swC^2 - 48*swC^4 + 3*
                d*(-3 + 4*sw^2 + 4*swC^2) + 8*sw^2*(-3 - 10*swC^2 + 
                 16*swC^4)) - 2*(-1 + 4*swC^2)*(9 - 12*swC^2 + 4*sw^2*
                (-3 + 8*swC^2))*t))*GaugeXi[W]^2 + 4*mz^2*(1 - sw^2)*
          (-(s*(-9*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(9 + 6*(1 + d)*swC^2 - 
                24*swC^4 + 2*sw^2*(-6 + 3*d - 20*swC^2 + 32*swC^4)))*t) + 
           mz^2*(1 - sw^2)*(-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
              (s*(9 + 6*(1 + d)*swC^2 - 24*swC^4 + 2*sw^2*(-6 + 3*d - 
                   20*swC^2 + 32*swC^4)) - (-1 + 4*swC^2)*(9 - 12*swC^2 + 
                 4*sw^2*(-3 + 8*swC^2))*t)))*GaugeXi[W]^3 - 
         2^(1 + d)*mz^4*Pi^d*(-1 + sw^2)^2*(s*(18 + 12*swC^2 - 48*swC^4 + 
             3*d*(-3 + 4*sw^2 + 4*swC^2) + 8*sw^2*(-3 - 10*swC^2 + 16*
                swC^4)) - 2*(-1 + 4*swC^2)*(9 - 12*swC^2 + 
             4*sw^2*(-3 + 8*swC^2))*t)*GaugeXi[W]^4))/(-1 + GaugeXi[W])^2))/
    (cwC^2*mz^4*Pi^(2*d)*(mz^2 - s)^2*sw^2*(-1 + sw^2)^2*swC^2), 
   ((I/9)*4^(-3 - d)*EL^6*
     (s*(3*2^(2 + d)*d^4*Pi^d*s^3*(-3 + 4*sw^2 + 4*swC^2)*(s + 2*t) + 
        16*mz^2*s*(1 - sw^2)*(s^2*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*
             (3*swC^2 - 12*swC^4 + sw^2*(-6 - 20*swC^2 + 32*swC^4))) - 
          2^(2 + d)*Pi^d*s*(-3*(3 - 7*swC^2 + 4*swC^4) + 
            4*sw^2*(3 - 5*swC^2 + 8*swC^4))*t + 
          (9*(2*Pi)^d + 2^(2 + d)*Pi^d*(12*swC^2*(-1 + swC^2) + 
              sw^2*(-3 + 20*swC^2 - 32*swC^4)))*t^2) + 
        4*d*(mz^2*s*(1 - sw^2)*(s^2*(-81*(2*Pi)^d + 2^(1 + d)*Pi^d*(
                -9*swC^2 + 84*swC^4 + sw^2*(54 + 140*swC^2 - 224*swC^4))) + 
            5*2^(1 + d)*Pi^d*s*(-3*(9 - 18*swC^2 + 8*swC^4) + 
              4*sw^2*(9 - 10*swC^2 + 16*swC^4))*t - 
            5*(9*(2*Pi)^d + 2^(2 + d)*Pi^d*(12*swC^2*(-1 + swC^2) + 
                sw^2*(-3 + 20*swC^2 - 32*swC^4)))*t^2) + 
          7*s^2*(s^2*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*(3*swC^2 - 12*swC^4 + 
                sw^2*(-6 - 20*swC^2 + 32*swC^4))) - 2^(2 + d)*Pi^d*s*
             (-3*(3 - 7*swC^2 + 4*swC^4) + 4*sw^2*(3 - 5*swC^2 + 8*swC^4))*
             t + (9*(2*Pi)^d + 2^(2 + d)*Pi^d*(12*swC^2*(-1 + swC^2) + 
                sw^2*(-3 + 20*swC^2 - 32*swC^4)))*t^2) + mz^4*(-1 + sw^2)^2*
           (s^2*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*(3*swC^2 - 12*swC^4 + 
                sw^2*(-6 - 20*swC^2 + 32*swC^4))) - 2^(2 + d)*Pi^d*s*
             (-3*(3 - 7*swC^2 + 4*swC^4) + 4*sw^2*(3 - 5*swC^2 + 8*swC^4))*
             t + (9*(2*Pi)^d + 2^(2 + d)*Pi^d*(12*swC^2*(-1 + swC^2) + 
                sw^2*(-3 + 20*swC^2 - 32*swC^4)))*t^2)) + 
        d^3*s*(s^2*(45*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(81 - 66*swC^2 - 
                96*swC^4 + 2*sw^2*(-69 - 80*swC^2 + 128*swC^4)) - 
              81*(-3 + 4*sw^2 + 4*swC^2)*t)) - 3*mz^4*(-1 + sw^2)^2*
           (39*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-21 + 2*sw^2 + 2*swC^2) + 
              (-3 + 4*sw^2 + 4*swC^2)*t)) + 15*mz^2*s*(1 - sw^2)*
           (-45*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(21 + 2*sw^2 + 2*swC^2) + 
              (-3 + 4*sw^2 + 4*swC^2)*t))) - 
        2*d^2*s*(-(mz^2*s*(1 - sw^2)*(261*(2*Pi)^d*t + 2^(1 + d)*Pi^d*
              (s*(54 - 27*swC^2 - 60*swC^4 + 4*sw^2*(-18 - 25*swC^2 + 
                   40*swC^4)) - 174*(sw^2 + swC^2)*t))) + 
          mz^4*(-1 + sw^2)^2*(45*(2*Pi)^d*t + 2^(1 + d)*Pi^d*
             (-3*s*(-3 + swC^2 + 4*swC^4) + 4*s*sw^2*(-3 - 5*swC^2 + 
                8*swC^4) - 30*(sw^2 + swC^2)*t)) + 
          s*(603*(2*Pi)^d*s*t + 2^(1 + d)*Pi^d*(3*s^2*(33 + swC^2 - 
                60*swC^4 + 4*sw^2*(-11 - 25*swC^2 + 40*swC^4)) - 
              2*s*(273*swC^2 - 96*swC^4 + sw^2*(201 - 160*swC^2 + 256*swC^4))*
               t - 4*(-1 + 4*swC^2)*(9 - 12*swC^2 + 4*sw^2*(-3 + 8*swC^2))*t^
                2)))) + mz^2*(-3*2^(2 + d)*d^4*Pi^d*s^3*
         (-3 + 4*sw^2 + 4*swC^2)*(s + 2*t) - 16*mz^2*s*(1 - sw^2)*
         (s^2*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*(3*swC^2 - 12*swC^4 + 
              sw^2*(-6 - 20*swC^2 + 32*swC^4))) - 2^(2 + d)*Pi^d*s*
           (-3*(3 - 7*swC^2 + 4*swC^4) + 4*sw^2*(3 - 5*swC^2 + 8*swC^4))*t + 
          (9*(2*Pi)^d + 2^(2 + d)*Pi^d*(12*swC^2*(-1 + swC^2) + 
              sw^2*(-3 + 20*swC^2 - 32*swC^4)))*t^2) - 
        4*d*(mz^2*s*(1 - sw^2)*(s^2*(-81*(2*Pi)^d + 2^(1 + d)*Pi^d*(
                -9*swC^2 + 84*swC^4 + sw^2*(54 + 140*swC^2 - 224*swC^4))) + 
            5*2^(1 + d)*Pi^d*s*(-3*(9 - 18*swC^2 + 8*swC^4) + 
              4*sw^2*(9 - 10*swC^2 + 16*swC^4))*t - 
            5*(9*(2*Pi)^d + 2^(2 + d)*Pi^d*(12*swC^2*(-1 + swC^2) + 
                sw^2*(-3 + 20*swC^2 - 32*swC^4)))*t^2) + 
          7*s^2*(s^2*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*(3*swC^2 - 12*swC^4 + 
                sw^2*(-6 - 20*swC^2 + 32*swC^4))) - 2^(2 + d)*Pi^d*s*
             (-3*(3 - 7*swC^2 + 4*swC^4) + 4*sw^2*(3 - 5*swC^2 + 8*swC^4))*
             t + (9*(2*Pi)^d + 2^(2 + d)*Pi^d*(12*swC^2*(-1 + swC^2) + 
                sw^2*(-3 + 20*swC^2 - 32*swC^4)))*t^2) + mz^4*(-1 + sw^2)^2*
           (s^2*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*(3*swC^2 - 12*swC^4 + 
                sw^2*(-6 - 20*swC^2 + 32*swC^4))) - 2^(2 + d)*Pi^d*s*
             (-3*(3 - 7*swC^2 + 4*swC^4) + 4*sw^2*(3 - 5*swC^2 + 8*swC^4))*
             t + (9*(2*Pi)^d + 2^(2 + d)*Pi^d*(12*swC^2*(-1 + swC^2) + 
                sw^2*(-3 + 20*swC^2 - 32*swC^4)))*t^2)) + 
        d^3*s*(-(s^2*(63*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(2*s*(36 - 33*swC^2 - 
                 48*swC^4 + sw^2*(-69 - 80*swC^2 + 128*swC^4)) - 81*
                (-3 + 4*sw^2 + 4*swC^2)*t))) + 3*mz^4*(-1 + sw^2)^2*
           (3*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-3 + 2*sw^2 + 2*swC^2) + 
              (-3 + 4*sw^2 + 4*swC^2)*t)) - 15*mz^2*s*(1 - sw^2)*
           (-21*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(9 + 2*sw^2 + 2*swC^2) + 
              (-3 + 4*sw^2 + 4*swC^2)*t))) + 
        2*d^2*s*(-(mz^2*s*(1 - sw^2)*(261*(2*Pi)^d*t + 2^(1 + d)*Pi^d*
              (s*(54 - 27*swC^2 - 60*swC^4 + 4*sw^2*(-18 - 25*swC^2 + 
                   40*swC^4)) - 174*(sw^2 + swC^2)*t))) + 
          mz^4*(-1 + sw^2)^2*(45*(2*Pi)^d*t + 2^(1 + d)*Pi^d*
             (-3*s*(-3 + swC^2 + 4*swC^4) + 4*s*sw^2*(-3 - 5*swC^2 + 
                8*swC^4) - 30*(sw^2 + swC^2)*t)) + 
          s*(603*(2*Pi)^d*s*t + 2^(1 + d)*Pi^d*(3*s^2*(33 + swC^2 - 
                60*swC^4 + 4*sw^2*(-11 - 25*swC^2 + 40*swC^4)) - 
              2*s*(273*swC^2 - 96*swC^4 + sw^2*(201 - 160*swC^2 + 256*swC^4))*
               t - 4*(-1 + 4*swC^2)*(9 - 12*swC^2 + 4*sw^2*(-3 + 8*swC^2))*t^
                2))))*GaugeXi[Z] + d*GaugeXi[W]^3*
       (s*(9*d^2*(2*Pi)^d*s^4 + 2^(1 + d)*Pi^d*s^2*
           (s^2*(d^2*(-9 + 6*sw^2 + 6*swC^2) - 6*d*(-3 + swC^2 + 4*swC^4) + 
              8*d*sw^2*(-3 - 5*swC^2 + 8*swC^4) + 2*(-9 - 6*swC^2 + 
                24*swC^4 + sw^2*(12 + 40*swC^2 - 64*swC^4))) + 
            s*(-15*d*(-3 + 4*sw^2 + 4*swC^2) + 3*d^2*(-3 + 4*sw^2 + 
                4*swC^2) - 24*(3 - 7*swC^2 + 4*swC^4) + 32*sw^2*(3 - 
                5*swC^2 + 8*swC^4))*t + 2*(-1 + 4*swC^2)*(9 - 12*swC^2 + 
              4*sw^2*(-3 + 8*swC^2))*t^2) - 2*mz^2*s*(1 - sw^2)*
           (-9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*(2*s^2*(-9 - 6*swC^2 + 
                24*swC^4 + 3*d^2*(sw^2 + swC^2) + sw^2*(12 + 40*swC^2 - 
                  64*swC^4) - 3*d*(-3 + swC^2 + 4*swC^4) + 4*d*sw^2*
                 (-3 - 5*swC^2 + 8*swC^4)) + s*(-15*d*(-3 + 4*sw^2 + 
                  4*swC^2) + 3*d^2*(-3 + 4*sw^2 + 4*swC^2) - 
                24*(3 - 7*swC^2 + 4*swC^4) + 32*sw^2*(3 - 5*swC^2 + 8*swC^4))*
               t + 2*(-1 + 4*swC^2)*(9 - 12*swC^2 + 4*sw^2*(-3 + 8*swC^2))*t^
                2)) + mz^4*(-1 + sw^2)^2*(-81*d^2*(2*Pi)^d*s^2 + 
            2^(1 + d)*Pi^d*(2*s^2*(-9 - 6*swC^2 + 24*swC^4 + 
                3*d^2*(6 + sw^2 + swC^2) + sw^2*(12 + 40*swC^2 - 64*swC^4) - 
                3*d*(-3 + swC^2 + 4*swC^4) + 4*d*sw^2*(-3 - 5*swC^2 + 
                  8*swC^4)) + s*(-15*d*(-3 + 4*sw^2 + 4*swC^2) + 
                3*d^2*(-3 + 4*sw^2 + 4*swC^2) - 24*(3 - 7*swC^2 + 4*swC^4) + 
                32*sw^2*(3 - 5*swC^2 + 8*swC^4))*t + 2*(-1 + 4*swC^2)*(9 - 
                12*swC^2 + 4*sw^2*(-3 + 8*swC^2))*t^2))) - 
        mz^2*(-s - mz^2*(-1 + sw^2))*
         (-(s*(9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
              (s^2*(d^2*(-9 + 6*sw^2 + 6*swC^2) - 6*d*(-3 + swC^2 + 
                   4*swC^4) + 8*d*sw^2*(-3 - 5*swC^2 + 8*swC^4) + 
                 2*(-9 - 6*swC^2 + 24*swC^4 + sw^2*(12 + 40*swC^2 - 
                     64*swC^4))) + s*(-15*d*(-3 + 4*sw^2 + 4*swC^2) + 
                 3*d^2*(-3 + 4*sw^2 + 4*swC^2) - 24*(3 - 7*swC^2 + 4*swC^4) + 
                 32*sw^2*(3 - 5*swC^2 + 8*swC^4))*t + 2*(-1 + 4*swC^2)*
                (9 - 12*swC^2 + 4*sw^2*(-3 + 8*swC^2))*t^2))) + 
          mz^2*(1 - sw^2)*(-27*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
             (s^2*(d^2*(9 + 6*sw^2 + 6*swC^2) - 6*d*(-3 + swC^2 + 4*swC^4) + 
                8*d*sw^2*(-3 - 5*swC^2 + 8*swC^4) + 2*(-9 - 6*swC^2 + 
                  24*swC^4 + sw^2*(12 + 40*swC^2 - 64*swC^4))) + 
              s*(-15*d*(-3 + 4*sw^2 + 4*swC^2) + 3*d^2*(-3 + 4*sw^2 + 
                  4*swC^2) - 24*(3 - 7*swC^2 + 4*swC^4) + 32*sw^2*
                 (3 - 5*swC^2 + 8*swC^4))*t + 2*(-1 + 4*swC^2)*(9 - 
                12*swC^2 + 4*sw^2*(-3 + 8*swC^2))*t^2)))*GaugeXi[Z]) + 
      GaugeXi[W]*(s*(-3*2^(3 + d)*d^4*Pi^d*s^3*(-3 + 4*sw^2 + 4*swC^2)*
           (s + 2*t) - 32*mz^2*s*(1 - sw^2)*
           (s^2*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*(3*swC^2 - 12*swC^4 + 
                sw^2*(-6 - 20*swC^2 + 32*swC^4))) - 2^(2 + d)*Pi^d*s*
             (-3*(3 - 7*swC^2 + 4*swC^4) + 4*sw^2*(3 - 5*swC^2 + 8*swC^4))*
             t + (9*(2*Pi)^d + 2^(2 + d)*Pi^d*(12*swC^2*(-1 + swC^2) + 
                sw^2*(-3 + 20*swC^2 - 32*swC^4)))*t^2) - 
          4*d*(15*s^2*(s^2*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*(3*swC^2 - 12*swC^4 + 
                  sw^2*(-6 - 20*swC^2 + 32*swC^4))) - 2^(2 + d)*Pi^d*s*(
                -3*(3 - 7*swC^2 + 4*swC^4) + 4*sw^2*(3 - 5*swC^2 + 8*swC^4))*
               t + (9*(2*Pi)^d + 2^(2 + d)*Pi^d*(12*swC^2*(-1 + swC^2) + 
                  sw^2*(-3 + 20*swC^2 - 32*swC^4)))*t^2) + 
            3*mz^4*(-1 + sw^2)^2*(s^2*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*
                 (3*swC^2 - 12*swC^4 + sw^2*(-6 - 20*swC^2 + 32*swC^4))) - 
              2^(2 + d)*Pi^d*s*(-3*(3 - 7*swC^2 + 4*swC^4) + 4*sw^2*
                 (3 - 5*swC^2 + 8*swC^4))*t + (9*(2*Pi)^d + 2^(2 + d)*Pi^d*
                 (12*swC^2*(-1 + swC^2) + sw^2*(-3 + 20*swC^2 - 32*swC^4)))*t^
                2) - 4*mz^2*s*(1 - sw^2)*(s^2*(45*(2*Pi)^d + 2^(2 + d)*Pi^d*
                 (3*swC^2 - 24*swC^4 + sw^2*(-15 - 40*swC^2 + 64*swC^4))) + 
              3*s*(51*(2*Pi)^d + 2^(2 + d)*Pi^d*(2*swC^2*(-13 + 6*swC^2) + 
                  sw^2*(-17 + 20*swC^2 - 32*swC^4)))*t + 3*(9*(2*Pi)^d + 
                2^(2 + d)*Pi^d*(12*swC^2*(-1 + swC^2) + sw^2*(-3 + 20*swC^2 - 
                    32*swC^4)))*t^2)) + d^3*s*(9*2^(2 + d)*mz^2*Pi^d*s*
             (-1 + sw^2)*(-3 + 4*sw^2 + 4*swC^2)*(s + 2*t) - 
            s^2*(765*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(-3*s*(57 + 46*swC^2 + 
                  64*swC^4) + s*sw^2*(-282 - 320*swC^2 + 512*swC^4) - 
                165*(-3 + 4*sw^2 + 4*swC^2)*t)) + 9*mz^4*(-1 + sw^2)^2*
             (23*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-13 + 2*sw^2 + 2*swC^2) + 
                (-3 + 4*sw^2 + 4*swC^2)*t))) + 2*d^2*s*
           (-3*2^(2 + d)*mz^2*Pi^d*s*(1 - sw^2)*(s*(21 - 10*swC^2 - 
                24*swC^4 + 4*sw^2*(-7 - 10*swC^2 + 16*swC^4)) - 
              17*(-3 + 4*sw^2 + 4*swC^2)*t) + 3*mz^4*(-1 + sw^2)^2*
             (45*(2*Pi)^d*t + 2^(1 + d)*Pi^d*(-3*s*(-3 + swC^2 + 4*swC^4) + 
                4*s*sw^2*(-3 - 5*swC^2 + 8*swC^4) - 30*(sw^2 + swC^2)*t)) + 
            s*(1251*(2*Pi)^d*s*t + 2^(1 + d)*Pi^d*(s^2*(3*(69 + swC^2 - 
                    124*swC^4) + 4*sw^2*(-69 - 155*swC^2 + 248*swC^4)) - 
                2*s*(561*swC^2 - 192*swC^4 + sw^2*(417 - 320*swC^2 + 
                    512*swC^4))*t - 8*(-1 + 4*swC^2)*(9 - 12*swC^2 + 
                  4*sw^2*(-3 + 8*swC^2))*t^2)))) + 
        mz^2*(3*2^(3 + d)*d^4*Pi^d*s^3*(-3 + 4*sw^2 + 4*swC^2)*(s + 2*t) + 
          32*mz^2*s*(1 - sw^2)*(s^2*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*(3*swC^2 - 
                12*swC^4 + sw^2*(-6 - 20*swC^2 + 32*swC^4))) - 
            2^(2 + d)*Pi^d*s*(-3*(3 - 7*swC^2 + 4*swC^4) + 4*sw^2*(3 - 
                5*swC^2 + 8*swC^4))*t + (9*(2*Pi)^d + 2^(2 + d)*Pi^d*(
                12*swC^2*(-1 + swC^2) + sw^2*(-3 + 20*swC^2 - 32*swC^4)))*
             t^2) + 4*d*(15*s^2*(s^2*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*
                 (3*swC^2 - 12*swC^4 + sw^2*(-6 - 20*swC^2 + 32*swC^4))) - 
              2^(2 + d)*Pi^d*s*(-3*(3 - 7*swC^2 + 4*swC^4) + 4*sw^2*
                 (3 - 5*swC^2 + 8*swC^4))*t + (9*(2*Pi)^d + 2^(2 + d)*Pi^d*
                 (12*swC^2*(-1 + swC^2) + sw^2*(-3 + 20*swC^2 - 32*swC^4)))*t^
                2) + 3*mz^4*(-1 + sw^2)^2*(s^2*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*
                 (3*swC^2 - 12*swC^4 + sw^2*(-6 - 20*swC^2 + 32*swC^4))) - 
              2^(2 + d)*Pi^d*s*(-3*(3 - 7*swC^2 + 4*swC^4) + 4*sw^2*
                 (3 - 5*swC^2 + 8*swC^4))*t + (9*(2*Pi)^d + 2^(2 + d)*Pi^d*
                 (12*swC^2*(-1 + swC^2) + sw^2*(-3 + 20*swC^2 - 32*swC^4)))*t^
                2) - 4*mz^2*s*(1 - sw^2)*(s^2*(45*(2*Pi)^d + 2^(2 + d)*Pi^d*
                 (3*swC^2 - 24*swC^4 + sw^2*(-15 - 40*swC^2 + 64*swC^4))) + 
              3*s*(51*(2*Pi)^d + 2^(2 + d)*Pi^d*(2*swC^2*(-13 + 6*swC^2) + 
                  sw^2*(-17 + 20*swC^2 - 32*swC^4)))*t + 3*(9*(2*Pi)^d + 
                2^(2 + d)*Pi^d*(12*swC^2*(-1 + swC^2) + sw^2*(-3 + 20*swC^2 - 
                    32*swC^4)))*t^2)) - d^3*s*(9*2^(2 + d)*mz^2*Pi^d*s*
             (-1 + sw^2)*(-3 + 4*sw^2 + 4*swC^2)*(s + 2*t) - 
            s^2*(675*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(-6*s*(21 + 23*swC^2 + 
                  32*swC^4) + 2*s*sw^2*(-141 - 160*swC^2 + 256*swC^4) - 
                165*(-3 + 4*sw^2 + 4*swC^2)*t)) + 9*mz^4*(-1 + sw^2)^2*
             (25*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(2*s*(-7 + sw^2 + swC^2) + 
                (-3 + 4*sw^2 + 4*swC^2)*t))) - 2*d^2*s*
           (-3*2^(2 + d)*mz^2*Pi^d*s*(1 - sw^2)*(s*(21 - 10*swC^2 - 
                24*swC^4 + 4*sw^2*(-7 - 10*swC^2 + 16*swC^4)) - 
              17*(-3 + 4*sw^2 + 4*swC^2)*t) + 3*mz^4*(-1 + sw^2)^2*
             (45*(2*Pi)^d*t + 2^(1 + d)*Pi^d*(-3*s*(-3 + swC^2 + 4*swC^4) + 
                4*s*sw^2*(-3 - 5*swC^2 + 8*swC^4) - 30*(sw^2 + swC^2)*t)) + 
            s*(1251*(2*Pi)^d*s*t + 2^(1 + d)*Pi^d*(s^2*(3*(69 + swC^2 - 
                    124*swC^4) + 4*sw^2*(-69 - 155*swC^2 + 248*swC^4)) - 
                2*s*(561*swC^2 - 192*swC^4 + sw^2*(417 - 320*swC^2 + 
                    512*swC^4))*t - 8*(-1 + 4*swC^2)*(9 - 12*swC^2 + 
                  4*sw^2*(-3 + 8*swC^2))*t^2))))*GaugeXi[Z]) + 
      GaugeXi[W]^2*(s*(3*2^(2 + d)*d^4*Pi^d*s^3*(-3 + 4*sw^2 + 4*swC^2)*
           (s + 2*t) + 16*mz^2*s*(1 - sw^2)*
           (s^2*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*(3*swC^2 - 12*swC^4 + 
                sw^2*(-6 - 20*swC^2 + 32*swC^4))) - 2^(2 + d)*Pi^d*s*
             (-3*(3 - 7*swC^2 + 4*swC^4) + 4*sw^2*(3 - 5*swC^2 + 8*swC^4))*
             t + (9*(2*Pi)^d + 2^(2 + d)*Pi^d*(12*swC^2*(-1 + swC^2) + 
                sw^2*(-3 + 20*swC^2 - 32*swC^4)))*t^2) + 
          4*d*(mz^2*s*(1 - sw^2)*(s^2*(-117*(2*Pi)^d + 2^(1 + d)*Pi^d*
                 (3*swC^2*(-7 + 44*swC^2) + sw^2*(78 + 220*swC^2 - 
                    352*swC^4))) + 3*2^(1 + d)*Pi^d*s*(-69 + 146*swC^2 - 
                72*swC^4 + 4*sw^2*(23 - 30*swC^2 + 48*swC^4))*t - 
              9*(9*(2*Pi)^d + 2^(2 + d)*Pi^d*(12*swC^2*(-1 + swC^2) + 
                  sw^2*(-3 + 20*swC^2 - 32*swC^4)))*t^2) + 
            9*s^2*(s^2*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*(3*swC^2 - 12*swC^4 + 
                  sw^2*(-6 - 20*swC^2 + 32*swC^4))) - 2^(2 + d)*Pi^d*s*(
                -3*(3 - 7*swC^2 + 4*swC^4) + 4*sw^2*(3 - 5*swC^2 + 8*swC^4))*
               t + (9*(2*Pi)^d + 2^(2 + d)*Pi^d*(12*swC^2*(-1 + swC^2) + 
                  sw^2*(-3 + 20*swC^2 - 32*swC^4)))*t^2) + 
            3*mz^4*(-1 + sw^2)^2*(s^2*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*
                 (3*swC^2 - 12*swC^4 + sw^2*(-6 - 20*swC^2 + 32*swC^4))) - 
              2^(2 + d)*Pi^d*s*(-3*(3 - 7*swC^2 + 4*swC^4) + 4*sw^2*
                 (3 - 5*swC^2 + 8*swC^4))*t + (9*(2*Pi)^d + 2^(2 + d)*Pi^d*
                 (12*swC^2*(-1 + swC^2) + sw^2*(-3 + 20*swC^2 - 32*swC^4)))*t^
                2)) + d^3*s*(s^2*(171*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(
                s*(27 - 78*swC^2 - 96*swC^4 + 2*sw^2*(-75 - 80*swC^2 + 
                    128*swC^4)) - 87*(-3 + 4*sw^2 + 4*swC^2)*t)) + 
            27*mz^2*s*(1 - sw^2)*(-11*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(
                2*s*(2 + sw^2 + swC^2) + (-3 + 4*sw^2 + 4*swC^2)*t)) - 
            9*mz^4*(-1 + sw^2)^2*(-45*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(
                s*(21 + 2*sw^2 + 2*swC^2) + (-3 + 4*sw^2 + 4*swC^2)*t))) - 
          2*d^2*s*(-3*mz^2*s*(1 - sw^2)*(147*(2*Pi)^d*t + 2^(1 + d)*Pi^d*(
                s*(30 - 13*swC^2 - 36*swC^4 + sw^2*(-40 - 60*swC^2 + 
                    96*swC^4)) - 98*(sw^2 + swC^2)*t)) + 3*mz^4*(-1 + sw^2)^2*
             (45*(2*Pi)^d*t + 2^(1 + d)*Pi^d*(-3*s*(-3 + swC^2 + 4*swC^4) + 
                4*s*sw^2*(-3 - 5*swC^2 + 8*swC^4) - 30*(sw^2 + swC^2)*t)) + 
            s*(693*(2*Pi)^d*s*t + 2^(1 + d)*Pi^d*(s^2*(-3*(-39 + swC^2 + 
                    68*swC^4) + 4*sw^2*(-39 - 85*swC^2 + 136*swC^4)) - 
                2*s*(303*swC^2 - 96*swC^4 + sw^2*(231 - 160*swC^2 + 
                    256*swC^4))*t - 4*(-1 + 4*swC^2)*(9 - 12*swC^2 + 
                  4*sw^2*(-3 + 8*swC^2))*t^2)))) - 
        mz^2*(3*2^(2 + d)*d^4*Pi^d*s^3*(-3 + 4*sw^2 + 4*swC^2)*(s + 2*t) + 
          16*mz^2*s*(1 - sw^2)*(s^2*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*(3*swC^2 - 
                12*swC^4 + sw^2*(-6 - 20*swC^2 + 32*swC^4))) - 
            2^(2 + d)*Pi^d*s*(-3*(3 - 7*swC^2 + 4*swC^4) + 4*sw^2*(3 - 
                5*swC^2 + 8*swC^4))*t + (9*(2*Pi)^d + 2^(2 + d)*Pi^d*(
                12*swC^2*(-1 + swC^2) + sw^2*(-3 + 20*swC^2 - 32*swC^4)))*
             t^2) + 4*d*(mz^2*s*(1 - sw^2)*(s^2*(-117*(2*Pi)^d + 
                2^(1 + d)*Pi^d*(3*swC^2*(-7 + 44*swC^2) + sw^2*(78 + 
                    220*swC^2 - 352*swC^4))) + 3*2^(1 + d)*Pi^d*s*(-69 + 
                146*swC^2 - 72*swC^4 + 4*sw^2*(23 - 30*swC^2 + 48*swC^4))*t - 
              9*(9*(2*Pi)^d + 2^(2 + d)*Pi^d*(12*swC^2*(-1 + swC^2) + 
                  sw^2*(-3 + 20*swC^2 - 32*swC^4)))*t^2) + 
            9*s^2*(s^2*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*(3*swC^2 - 12*swC^4 + 
                  sw^2*(-6 - 20*swC^2 + 32*swC^4))) - 2^(2 + d)*Pi^d*s*(
                -3*(3 - 7*swC^2 + 4*swC^4) + 4*sw^2*(3 - 5*swC^2 + 8*swC^4))*
               t + (9*(2*Pi)^d + 2^(2 + d)*Pi^d*(12*swC^2*(-1 + swC^2) + 
                  sw^2*(-3 + 20*swC^2 - 32*swC^4)))*t^2) + 
            3*mz^4*(-1 + sw^2)^2*(s^2*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*
                 (3*swC^2 - 12*swC^4 + sw^2*(-6 - 20*swC^2 + 32*swC^4))) - 
              2^(2 + d)*Pi^d*s*(-3*(3 - 7*swC^2 + 4*swC^4) + 4*sw^2*
                 (3 - 5*swC^2 + 8*swC^4))*t + (9*(2*Pi)^d + 2^(2 + d)*Pi^d*
                 (12*swC^2*(-1 + swC^2) + sw^2*(-3 + 20*swC^2 - 32*swC^4)))*t^
                2)) + d^3*s*(s^2*(81*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(
                2*s*(36 - 39*swC^2 - 48*swC^4 + sw^2*(-75 - 80*swC^2 + 
                    128*swC^4)) - 87*(-3 + 4*sw^2 + 4*swC^2)*t)) + 
            27*mz^2*s*(1 - sw^2)*(-5*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(
                s*(1 + 2*sw^2 + 2*swC^2) + (-3 + 4*sw^2 + 4*swC^2)*t)) - 
            9*mz^4*(-1 + sw^2)^2*(-29*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(
                s*(13 + 2*sw^2 + 2*swC^2) + (-3 + 4*sw^2 + 4*swC^2)*t))) - 
          2*d^2*s*(-3*mz^2*s*(1 - sw^2)*(147*(2*Pi)^d*t + 2^(1 + d)*Pi^d*(
                s*(30 - 13*swC^2 - 36*swC^4 + sw^2*(-40 - 60*swC^2 + 
                    96*swC^4)) - 98*(sw^2 + swC^2)*t)) + 3*mz^4*(-1 + sw^2)^2*
             (45*(2*Pi)^d*t + 2^(1 + d)*Pi^d*(-3*s*(-3 + swC^2 + 4*swC^4) + 
                4*s*sw^2*(-3 - 5*swC^2 + 8*swC^4) - 30*(sw^2 + swC^2)*t)) + 
            s*(693*(2*Pi)^d*s*t + 2^(1 + d)*Pi^d*(s^2*(-3*(-39 + swC^2 + 
                    68*swC^4) + 4*sw^2*(-39 - 85*swC^2 + 136*swC^4)) - 
                2*s*(303*swC^2 - 96*swC^4 + sw^2*(231 - 160*swC^2 + 
                    256*swC^4))*t - 4*(-1 + 4*swC^2)*(9 - 12*swC^2 + 
                  4*sw^2*(-3 + 8*swC^2))*t^2))))*GaugeXi[Z])))/
    (cwC^2*(-1 + d)*d*mz^2*Pi^(2*d)*(mz^2 - s)^2*s^2*sw^2*(-1 + sw^2)*swC^2*
     (-1 + GaugeXi[W])^2*(-s + mz^2*GaugeXi[Z])), 
   ((I/9)*2^(-7 - 2*d)*EL^6*(((2*Pi)^d*(s^2 + 4*mz^2*s*(-1 + sw^2) + 
         4*(-1 + d)*mz^4*(-1 + sw^2)^2)*(d*s^2 + 4*d*mz^2*s*(-1 + sw^2) + 
         4*(-1 + d)*mz^4*(-1 + sw^2)^2)*(-1 + 4*swC^2)*
        (9 - 12*swC^2 + 4*sw^2*(-3 + 8*swC^2)))/(-1 + d) + 
      ((d*s^2 + 4*d*mz^2*s*(-1 + sw^2) + 4*(-1 + d)*mz^4*(-1 + sw^2)^2)*
        (2^(2 + d)*mz^2*Pi^d*s*(-1 + sw^2)*(-1 + 4*swC^2)*
          (9 - 12*swC^2 + 4*sw^2*(-3 + 8*swC^2)) + 2^(2 + d)*(-1 + d)*mz^4*
          Pi^d*(-1 + sw^2)^2*(-1 + 4*swC^2)*(9 - 12*swC^2 + 
           4*sw^2*(-3 + 8*swC^2)) - s^2*(9*(2*Pi)^d + 2^(2 + d)*Pi^d*
            (12*swC^2*(-1 + swC^2) + sw^2*(-3 + 20*swC^2 - 32*swC^4)))))/
       (-1 + d) + ((4*(-1 + d)*mz^4*(-1 + sw^2)^2 + s*(d*s + 2*t) + 
         4*mz^2*(-1 + sw^2)*(d*s + 2*t))*
        (-(2^(2 + d)*mz^2*Pi^d*s*(1 - sw^2)*(s*(3*d*(-3 + 4*sw^2 + 4*swC^2) + 
              12*(3 - 7*swC^2 + 4*swC^4) - 16*sw^2*(3 - 5*swC^2 + 8*swC^4)) - 
            2*(-1 + 4*swC^2)*(9 - 12*swC^2 + 4*sw^2*(-3 + 8*swC^2))*t)) + 
         s^2*(-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (2*s*(3*(3 + (-7 + d)*swC^2 + 4*swC^4) + sw^2*(3*d - 
                 4*(3 - 5*swC^2 + 8*swC^4))) - (-1 + 4*swC^2)*
              (9 - 12*swC^2 + 4*sw^2*(-3 + 8*swC^2))*t)) + 
         4*mz^4*(-1 + sw^2)^2*(-9*(-5 + d)*d*(2*Pi)^d*s + 
           2^(1 + d)*Pi^d*(2*s*(3*(-3 + (7 - 8*d + d^2)*swC^2 + 4*(-1 + d)*
                  swC^4) + sw^2*(3*d^2 + d*(-15 + 20*swC^2 - 32*swC^4) + 
                 4*(3 - 5*swC^2 + 8*swC^4))) - (-1 + d)*(-1 + 4*swC^2)*
              (9 - 12*swC^2 + 4*sw^2*(-3 + 8*swC^2))*t))))/((-1 + d)*s) - 
      (2*(-s/2 - mz^2*(-1 + sw^2))*(3*2^(1 + d)*mz^2*Pi^d*s^2*(1 - sw^2)*
          (s*(18 + 12*swC^2 - 48*swC^4 + 3*d*(-3 + 4*sw^2 + 4*swC^2) + 
             8*sw^2*(-3 - 10*swC^2 + 16*swC^4)) - 2*(-1 + 4*swC^2)*
            (9 - 12*swC^2 + 4*sw^2*(-3 + 8*swC^2))*t) - 
         s^3*(-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(9 + 6*(1 + d)*swC^2 - 24*
                swC^4 + 2*sw^2*(-6 + 3*d - 20*swC^2 + 32*swC^4)) - 
             (-1 + 4*swC^2)*(9 - 12*swC^2 + 4*sw^2*(-3 + 8*swC^2))*t)) + 
         8*mz^6*(1 - sw^2)^3*(-9*(-3 + d)*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (s*(-9 + 6*(-1 + d^2)*swC^2 - 24*(-1 + d)*swC^4 + 2*sw^2*
                (6 + 3*d^2 + 20*swC^2 - 32*swC^4 + d*(-9 - 20*swC^2 + 
                   32*swC^4))) - (-1 + d)*(-1 + 4*swC^2)*(9 - 12*swC^2 + 4*
                sw^2*(-3 + 8*swC^2))*t)) - 4*mz^4*s*(-1 + sw^2)^2*
          (-9*(-1 + d)*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (s*(9 + 6*(1 + d)^2*swC^2 - 24*(1 + d)*swC^4 + 2*sw^2*
                (-6 + 3*d^2 - 20*swC^2 + 32*swC^4 + d*(-3 - 20*swC^2 + 
                   32*swC^4))) - (1 + d)*(-1 + 4*swC^2)*(9 - 12*swC^2 + 4*
                sw^2*(-3 + 8*swC^2))*t))))/s - 
      (2*(-s/2 - mz^2*(-1 + sw^2))*(3*2^(1 + d)*mz^2*Pi^d*s^2*(1 - sw^2)*
          (s*(18 + 12*swC^2 - 48*swC^4 + 3*d*(-3 + 4*sw^2 + 4*swC^2) + 
             8*sw^2*(-3 - 10*swC^2 + 16*swC^4)) - 2*(-1 + 4*swC^2)*
            (9 - 12*swC^2 + 4*sw^2*(-3 + 8*swC^2))*t) - 
         s^3*(9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(9 + 6*swC^2 - 24*swC^4 + d*
                (-9 + 6*sw^2 + 6*swC^2) + 4*sw^2*(-3 - 10*swC^2 + 
                 16*swC^4)) - (-1 + 4*swC^2)*(9 - 12*swC^2 + 4*sw^2*
                (-3 + 8*swC^2))*t)) + 8*mz^6*(1 - sw^2)^3*
          (-9*(-3 + d)*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (s*(-9 + 6*(-1 + d^2)*swC^2 - 24*(-1 + d)*swC^4 + 2*sw^2*
                (6 + 3*d^2 + 20*swC^2 - 32*swC^4 + d*(-9 - 20*swC^2 + 
                   32*swC^4))) - (-1 + d)*(-1 + 4*swC^2)*(9 - 12*swC^2 + 4*
                sw^2*(-3 + 8*swC^2))*t)) - 4*mz^4*s*(-1 + sw^2)^2*
          (-9*(-1 + d)*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (s*(9 + 6*(1 + d)^2*swC^2 - 24*(1 + d)*swC^4 + 2*sw^2*
                (-6 + 3*d^2 - 20*swC^2 + 32*swC^4 + d*(-3 - 20*swC^2 + 
                   32*swC^4))) - (1 + d)*(-1 + 4*swC^2)*(9 - 12*swC^2 + 4*
                sw^2*(-3 + 8*swC^2))*t)) - 
         2*(3*2^(1 + d)*mz^2*Pi^d*s^2*(1 - sw^2)*
            (s*(18 + 12*swC^2 - 48*swC^4 + 3*d*(-3 + 4*sw^2 + 4*swC^2) + 8*
                sw^2*(-3 - 10*swC^2 + 16*swC^4)) - 2*(-1 + 4*swC^2)*
              (9 - 12*swC^2 + 4*sw^2*(-3 + 8*swC^2))*t) - 
           s^3*(-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(9 + 6*(1 + d)*swC^2 - 
                 24*swC^4 + 2*sw^2*(-6 + 3*d - 20*swC^2 + 32*swC^4)) - 
               (-1 + 4*swC^2)*(9 - 12*swC^2 + 4*sw^2*(-3 + 8*swC^2))*t)) + 
           8*mz^6*(1 - sw^2)^3*(-9*(-3 + d)*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
              (s*(-9 + 6*(-1 + d^2)*swC^2 - 24*(-1 + d)*swC^4 + 
                 2*sw^2*(6 + 3*d^2 + 20*swC^2 - 32*swC^4 + d*(-9 - 20*swC^2 + 
                     32*swC^4))) - (-1 + d)*(-1 + 4*swC^2)*(9 - 12*swC^2 + 
                 4*sw^2*(-3 + 8*swC^2))*t)) - 4*mz^4*s*(-1 + sw^2)^2*
            (-9*(-1 + d)*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
              (s*(9 + 6*(1 + d)^2*swC^2 - 24*(1 + d)*swC^4 + 2*sw^2*
                  (-6 + 3*d^2 - 20*swC^2 + 32*swC^4 + d*(-3 - 20*swC^2 + 
                     32*swC^4))) - (1 + d)*(-1 + 4*swC^2)*(9 - 12*swC^2 + 
                 4*sw^2*(-3 + 8*swC^2))*t)))*GaugeXi[W] + 
         (3*2^(1 + d)*mz^2*Pi^d*s^2*(1 - sw^2)*
            (s*(18 + 12*swC^2 - 48*swC^4 + 3*d*(-3 + 4*sw^2 + 4*swC^2) + 8*
                sw^2*(-3 - 10*swC^2 + 16*swC^4)) - 2*(-1 + 4*swC^2)*
              (9 - 12*swC^2 + 4*sw^2*(-3 + 8*swC^2))*t) - 
           s^3*(9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(9 + 6*swC^2 - 24*swC^4 + 
                 d*(-9 + 6*sw^2 + 6*swC^2) + 4*sw^2*(-3 - 10*swC^2 + 
                   16*swC^4)) - (-1 + 4*swC^2)*(9 - 12*swC^2 + 4*sw^2*
                  (-3 + 8*swC^2))*t)) + 8*mz^6*(1 - sw^2)^3*
            (-9*(-3 + d)*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
              (s*(-9 + 6*(-1 + d^2)*swC^2 - 24*(-1 + d)*swC^4 + 
                 2*sw^2*(6 + 3*d^2 + 20*swC^2 - 32*swC^4 + d*(-9 - 20*swC^2 + 
                     32*swC^4))) - (-1 + d)*(-1 + 4*swC^2)*(9 - 12*swC^2 + 
                 4*sw^2*(-3 + 8*swC^2))*t)) - 4*mz^4*s*(-1 + sw^2)^2*
            (-9*(-1 + d)*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
              (s*(9 + 6*(1 + d)^2*swC^2 - 24*(1 + d)*swC^4 + 2*sw^2*
                  (-6 + 3*d^2 - 20*swC^2 + 32*swC^4 + d*(-3 - 20*swC^2 + 
                     32*swC^4))) - (1 + d)*(-1 + 4*swC^2)*(9 - 12*swC^2 + 
                 4*sw^2*(-3 + 8*swC^2))*t)))*GaugeXi[W]^2))/
       (s*(-1 + GaugeXi[W])^2) - 
      (2*(-(s^4*(-9*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(9 + 6*(1 + d)*swC^2 - 
              24*swC^4 + 2*sw^2*(-6 + 3*d - 20*swC^2 + 32*swC^4)))*t) + 
         8*mz^8*(-1 + sw^2)^4*(-9*(-3 + d)*d*(2*Pi)^d*s + 
           2^(1 + d)*Pi^d*(s*(-9 + 6*(-1 + d^2)*swC^2 - 24*(-1 + d)*swC^4 + 2*
                sw^2*(6 + 3*d^2 + 20*swC^2 - 32*swC^4 + d*(-9 - 20*swC^2 + 
                   32*swC^4))) - (-1 + d)*(-1 + 4*swC^2)*(9 - 12*swC^2 + 4*
                sw^2*(-3 + 8*swC^2))*t)) - 8*mz^6*s*(1 - sw^2)^3*
          (-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(9 + 6*(1 + d)*swC^2 - 24*
                swC^4 + 2*sw^2*(-6 + 3*d - 20*swC^2 + 32*swC^4)) + 
             (-9*(-3 + 4*sw^2 + 4*swC^2) - 3*d^2*(-3 + 4*sw^2 + 4*swC^2) + d*
                (-27 + 48*swC^4 + sw^2*(36 + 80*swC^2 - 128*swC^4)))*t)) - 
         4*mz^2*(1 - sw^2)*(-9*d^2*(2*Pi)^d*s^4 + 2^(1 + d)*Pi^d*s^2*
            (2*s^2*(-9 - 6*swC^2 + 24*swC^4 + 3*d^2*(sw^2 + swC^2) + sw^2*
                (12 + 40*swC^2 - 64*swC^4) - 3*d*(-3 + swC^2 + 4*swC^4) + 4*d*
                sw^2*(-3 - 5*swC^2 + 8*swC^4)) + s*(-90 + 156*swC^2 - 48*
                swC^4 - 18*d*(-3 + 4*sw^2 + 4*swC^2) + 3*d^2*(-3 + 4*sw^2 + 
                 4*swC^2) + 8*sw^2*(15 - 10*swC^2 + 16*swC^4))*t + 
             2*(-1 + 4*swC^2)*(9 - 12*swC^2 + 4*sw^2*(-3 + 8*swC^2))*t^2)) + 
         2*mz^4*(-1 + sw^2)^2*(279*d*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
            (s^2*(12*d^2*(-3 + 4*sw^2 + 4*swC^2) - 15*(9 + 6*swC^2 - 
                 24*swC^4 + 4*sw^2*(-3 - 10*swC^2 + 16*swC^4)) + 2*d*
                (-3*swC^2*(7 + 32*swC^2) + sw^2*(-93 - 160*swC^2 + 
                   256*swC^4))) + s*(21*d^2*(-3 + 4*sw^2 + 4*swC^2) - 9*
                (69 - 140*swC^2 + 64*swC^4) + 12*sw^2*(69 - 80*swC^2 + 
                 128*swC^4) + d*(369 - 528*swC^2 + 48*swC^4 - 4*sw^2*
                  (123 - 20*swC^2 + 32*swC^4)))*t + 16*(-1 + 4*swC^2)*
              (9 - 12*swC^2 + 4*sw^2*(-3 + 8*swC^2))*t^2)))*
        (s - mz^2*GaugeXi[Z]))/(s*(-s + mz^2*GaugeXi[Z]))))/
    (cwC^2*mz^4*Pi^(2*d)*(mz^2 - s)^2*sw^2*(-1 + sw^2)^2*swC^2), 0, 0, 0, 
   ((-I/9)*4^(-3 - d)*EL^6*
     (d*(s*(9*d^2*(2*Pi)^d*s^5 + 2^(1 + d)*Pi^d*s^3*
           (-2*s^2*(-9 - 6*swC^2 + 24*swC^4 + 3*d^2*(sw^2 + swC^2) + 
              sw^2*(12 + 40*swC^2 - 64*swC^4) - 3*d*(-3 + swC^2 + 4*swC^4) + 
              4*d*sw^2*(-3 - 5*swC^2 + 8*swC^4)) + 
            s*(15*d*(-3 + 4*sw^2 + 4*swC^2) - 3*d^2*(-3 + 4*sw^2 + 4*swC^2) + 
              24*(3 - 7*swC^2 + 4*swC^4) - 32*sw^2*(3 - 5*swC^2 + 8*swC^4))*
             t - 2*(-1 + 4*swC^2)*(9 - 12*swC^2 + 4*sw^2*(-3 + 8*swC^2))*
             t^2) + mz^6*(1 - sw^2)^3*(171*d^2*(2*Pi)^d*s^2 + 
            2^(1 + d)*Pi^d*(2*s^2*(-9 - 6*swC^2 + 24*swC^4 + 
                3*d^2*(-15 + sw^2 + swC^2) + sw^2*(12 + 40*swC^2 - 
                  64*swC^4) - 3*d*(-3 + swC^2 + 4*swC^4) + 4*d*sw^2*
                 (-3 - 5*swC^2 + 8*swC^4)) + s*(-15*d*(-3 + 4*sw^2 + 
                  4*swC^2) + 3*d^2*(-3 + 4*sw^2 + 4*swC^2) - 
                24*(3 - 7*swC^2 + 4*swC^4) + 32*sw^2*(3 - 5*swC^2 + 8*swC^4))*
               t + 2*(-1 + 4*swC^2)*(9 - 12*swC^2 + 4*sw^2*(-3 + 8*swC^2))*t^
                2)) + mz^2*s^2*(1 - sw^2)*(27*d^2*(2*Pi)^d*s^2 + 
            2^(1 + d)*Pi^d*(s^2*(-6*d^3*(-3 + 4*sw^2 + 4*swC^2) + 
                d^2*(-117 + 66*swC^2 + 96*swC^4 + sw^2*(138 + 160*swC^2 - 
                    256*swC^4)) - 14*(9 + 6*swC^2 - 24*swC^4 + 4*sw^2*
                   (-3 - 10*swC^2 + 16*swC^4)) + 6*d*(33 + swC^2 - 60*swC^4 + 
                  4*sw^2*(-11 - 25*swC^2 + 40*swC^4))) - (-7 + 4*d)*s*(
                -15*d*(-3 + 4*sw^2 + 4*swC^2) + 3*d^2*(-3 + 4*sw^2 + 
                  4*swC^2) - 24*(3 - 7*swC^2 + 4*swC^4) + 32*sw^2*
                 (3 - 5*swC^2 + 8*swC^4))*t - 2*(-7 + 4*d)*(-1 + 4*swC^2)*(
                9 - 12*swC^2 + 4*sw^2*(-3 + 8*swC^2))*t^2)) + 
          mz^4*s*(-1 + sw^2)^2*(387*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
             (2*s^2*(3*d^3*(-3 + 4*sw^2 + 4*swC^2) + 7*(9 + 6*swC^2 - 
                  24*swC^4 + 4*sw^2*(-3 - 10*swC^2 + 16*swC^4)) - 
                3*d*(33 + swC^2 - 60*swC^4 + 4*sw^2*(-11 - 25*swC^2 + 
                    40*swC^4)) + d^2*(-3*(15 + 11*swC^2 + 16*swC^4) + 
                  sw^2*(-69 - 80*swC^2 + 128*swC^4))) + (-7 + 4*d)*s*(
                -15*d*(-3 + 4*sw^2 + 4*swC^2) + 3*d^2*(-3 + 4*sw^2 + 
                  4*swC^2) - 24*(3 - 7*swC^2 + 4*swC^4) + 32*sw^2*
                 (3 - 5*swC^2 + 8*swC^4))*t + 2*(-7 + 4*d)*(-1 + 4*swC^2)*(
                9 - 12*swC^2 + 4*sw^2*(-3 + 8*swC^2))*t^2))) + 
        mz^2*(-9*d^2*(2*Pi)^d*s^5 + 2^(1 + d)*Pi^d*s^3*
           (2*s^2*(-9 - 6*swC^2 + 24*swC^4 + 3*d^2*(sw^2 + swC^2) + 
              sw^2*(12 + 40*swC^2 - 64*swC^4) - 3*d*(-3 + swC^2 + 4*swC^4) + 
              4*d*sw^2*(-3 - 5*swC^2 + 8*swC^4)) + 
            s*(-15*d*(-3 + 4*sw^2 + 4*swC^2) + 3*d^2*(-3 + 4*sw^2 + 
                4*swC^2) - 24*(3 - 7*swC^2 + 4*swC^4) + 32*sw^2*(3 - 
                5*swC^2 + 8*swC^4))*t + 2*(-1 + 4*swC^2)*(9 - 12*swC^2 + 
              4*sw^2*(-3 + 8*swC^2))*t^2) - mz^6*(1 - sw^2)^3*
           (81*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
             (s^2*(d^2*(-45 + 6*sw^2 + 6*swC^2) - 6*d*(-3 + swC^2 + 
                  4*swC^4) + 8*d*sw^2*(-3 - 5*swC^2 + 8*swC^4) + 
                2*(-9 - 6*swC^2 + 24*swC^4 + sw^2*(12 + 40*swC^2 - 
                    64*swC^4))) + s*(-15*d*(-3 + 4*sw^2 + 4*swC^2) + 
                3*d^2*(-3 + 4*sw^2 + 4*swC^2) - 24*(3 - 7*swC^2 + 4*swC^4) + 
                32*sw^2*(3 - 5*swC^2 + 8*swC^4))*t + 2*(-1 + 4*swC^2)*(9 - 
                12*swC^2 + 4*sw^2*(-3 + 8*swC^2))*t^2)) + 
          mz^4*s*(-1 + sw^2)^2*(-297*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
             (s^2*(-6*d^3*(-3 + 4*sw^2 + 4*swC^2) + d^2*(45 + 66*swC^2 + 
                  96*swC^4 + sw^2*(138 + 160*swC^2 - 256*swC^4)) - 
                14*(9 + 6*swC^2 - 24*swC^4 + 4*sw^2*(-3 - 10*swC^2 + 
                    16*swC^4)) + 6*d*(33 + swC^2 - 60*swC^4 + 4*sw^2*
                   (-11 - 25*swC^2 + 40*swC^4))) - (-7 + 4*d)*s*(
                -15*d*(-3 + 4*sw^2 + 4*swC^2) + 3*d^2*(-3 + 4*sw^2 + 
                  4*swC^2) - 24*(3 - 7*swC^2 + 4*swC^4) + 32*sw^2*
                 (3 - 5*swC^2 + 8*swC^4))*t - 2*(-7 + 4*d)*(-1 + 4*swC^2)*(
                9 - 12*swC^2 + 4*sw^2*(-3 + 8*swC^2))*t^2)) + 
          mz^2*s^2*(1 - sw^2)*(27*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
             (2*s^2*(3*d^3*(-3 + 4*sw^2 + 4*swC^2) + 7*(9 + 6*swC^2 - 
                  24*swC^4 + 4*sw^2*(-3 - 10*swC^2 + 16*swC^4)) - 
                3*d*(33 + swC^2 - 60*swC^4 + 4*sw^2*(-11 - 25*swC^2 + 
                    40*swC^4)) + d^2*(45 - 33*swC^2 - 48*swC^4 + 
                  sw^2*(-69 - 80*swC^2 + 128*swC^4))) + (-7 + 4*d)*s*(
                -15*d*(-3 + 4*sw^2 + 4*swC^2) + 3*d^2*(-3 + 4*sw^2 + 
                  4*swC^2) - 24*(3 - 7*swC^2 + 4*swC^4) + 32*sw^2*
                 (3 - 5*swC^2 + 8*swC^4))*t + 2*(-7 + 4*d)*(-1 + 4*swC^2)*(
                9 - 12*swC^2 + 4*sw^2*(-3 + 8*swC^2))*t^2)))*GaugeXi[Z]) + 
      mz^2*(1 - sw^2)*GaugeXi[W]^3*
       (s*(-3*2^(2 + d)*d^4*mz^2*Pi^d*s^2*(-1 + sw^2)*(-3 + 4*sw^2 + 4*swC^2)*
           (s + 2*t) - 16*mz^2*s*(1 - sw^2)*
           (s^2*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*(3*swC^2 - 12*swC^4 + 
                sw^2*(-6 - 20*swC^2 + 32*swC^4))) - 2^(2 + d)*Pi^d*s*
             (-3*(3 - 7*swC^2 + 4*swC^4) + 4*sw^2*(3 - 5*swC^2 + 8*swC^4))*
             t + (9*(2*Pi)^d + 2^(2 + d)*Pi^d*(12*swC^2*(-1 + swC^2) + 
                sw^2*(-3 + 20*swC^2 - 32*swC^4)))*t^2) + 2^(1 + d)*d^2*Pi^d*s*
           (s^2*(6*s*(-3 + swC^2 + 4*swC^4) - 8*s*sw^2*(-3 - 5*swC^2 + 
                8*swC^4) + 15*(-3 + 4*sw^2 + 4*swC^2)*t) + mz^4*(-1 + sw^2)^2*
             (6*s*(-3 + swC^2 + 4*swC^4) - 8*s*sw^2*(-3 - 5*swC^2 + 
                8*swC^4) + 15*(-3 + 4*sw^2 + 4*swC^2)*t) - 2*mz^2*(1 - sw^2)*
             (s^2*(99 - 6*swC^2 - 168*swC^4 + 4*sw^2*(-33 - 70*swC^2 + 
                  112*swC^4)) + s*(3*(99 - 180*swC^2 + 64*swC^4) - 
                4*sw^2*(99 - 80*swC^2 + 128*swC^4))*t - 4*(-1 + 4*swC^2)*(9 - 
                12*swC^2 + 4*sw^2*(-3 + 8*swC^2))*t^2)) + 
          4*d*(s^2*(s^2*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*(3*swC^2 - 12*swC^4 + 
                  sw^2*(-6 - 20*swC^2 + 32*swC^4))) - 2^(2 + d)*Pi^d*s*(
                -3*(3 - 7*swC^2 + 4*swC^4) + 4*sw^2*(3 - 5*swC^2 + 8*swC^4))*
               t + (9*(2*Pi)^d + 2^(2 + d)*Pi^d*(12*swC^2*(-1 + swC^2) + 
                  sw^2*(-3 + 20*swC^2 - 32*swC^4)))*t^2) + mz^4*(-1 + sw^2)^2*
             (s^2*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*(3*swC^2 - 12*swC^4 + 
                  sw^2*(-6 - 20*swC^2 + 32*swC^4))) - 2^(2 + d)*Pi^d*s*(
                -3*(3 - 7*swC^2 + 4*swC^4) + 4*sw^2*(3 - 5*swC^2 + 8*swC^4))*
               t + (9*(2*Pi)^d + 2^(2 + d)*Pi^d*(12*swC^2*(-1 + swC^2) + 
                  sw^2*(-3 + 20*swC^2 - 32*swC^4)))*t^2) + 
            2*mz^2*s*(1 - sw^2)*(s^2*(45*(2*Pi)^d + 2^(2 + d)*Pi^d*
                 (3*swC^2 - 24*swC^4 + sw^2*(-15 - 40*swC^2 + 64*swC^4))) + 
              3*s*(51*(2*Pi)^d + 2^(2 + d)*Pi^d*(2*swC^2*(-13 + 6*swC^2) + 
                  sw^2*(-17 + 20*swC^2 - 32*swC^4)))*t + 3*(9*(2*Pi)^d + 
                2^(2 + d)*Pi^d*(12*swC^2*(-1 + swC^2) + sw^2*(-3 + 20*swC^2 - 
                    32*swC^4)))*t^2)) - 
          d^3*s*(-(2^(1 + d)*mz^2*Pi^d*s*(1 - sw^2)*(s*(99 - 60*swC^2 - 
                 96*swC^4 + 4*sw^2*(-33 - 40*swC^2 + 64*swC^4)) - 78*
                (-3 + 4*sw^2 + 4*swC^2)*t)) + 3*s^2*(-15*(2*Pi)^d*s + 
              2^(1 + d)*Pi^d*(2*s*(3 + sw^2 + swC^2) + (-3 + 4*sw^2 + 
                  4*swC^2)*t)) + 3*mz^4*(-1 + sw^2)^2*(-27*(2*Pi)^d*s + 
              2^(1 + d)*Pi^d*(2*s*(6 + sw^2 + swC^2) + (-3 + 4*sw^2 + 
                  4*swC^2)*t)))) - mz^2*(-3*2^(2 + d)*d^4*mz^2*Pi^d*s^2*
           (-1 + sw^2)*(-3 + 4*sw^2 + 4*swC^2)*(s + 2*t) - 
          16*mz^2*s*(1 - sw^2)*(s^2*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*(3*swC^2 - 
                12*swC^4 + sw^2*(-6 - 20*swC^2 + 32*swC^4))) - 
            2^(2 + d)*Pi^d*s*(-3*(3 - 7*swC^2 + 4*swC^4) + 4*sw^2*(3 - 
                5*swC^2 + 8*swC^4))*t + (9*(2*Pi)^d + 2^(2 + d)*Pi^d*(
                12*swC^2*(-1 + swC^2) + sw^2*(-3 + 20*swC^2 - 32*swC^4)))*
             t^2) + 2^(1 + d)*d^2*Pi^d*s*(s^2*(6*s*(-3 + swC^2 + 4*swC^4) - 
              8*s*sw^2*(-3 - 5*swC^2 + 8*swC^4) + 15*(-3 + 4*sw^2 + 4*swC^2)*
               t) + mz^4*(-1 + sw^2)^2*(6*s*(-3 + swC^2 + 4*swC^4) - 
              8*s*sw^2*(-3 - 5*swC^2 + 8*swC^4) + 15*(-3 + 4*sw^2 + 4*swC^2)*
               t) - 2*mz^2*(1 - sw^2)*(s^2*(99 - 6*swC^2 - 168*swC^4 + 
                4*sw^2*(-33 - 70*swC^2 + 112*swC^4)) + 
              s*(3*(99 - 180*swC^2 + 64*swC^4) - 4*sw^2*(99 - 80*swC^2 + 
                  128*swC^4))*t - 4*(-1 + 4*swC^2)*(9 - 12*swC^2 + 
                4*sw^2*(-3 + 8*swC^2))*t^2)) + 
          4*d*(s^2*(s^2*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*(3*swC^2 - 12*swC^4 + 
                  sw^2*(-6 - 20*swC^2 + 32*swC^4))) - 2^(2 + d)*Pi^d*s*(
                -3*(3 - 7*swC^2 + 4*swC^4) + 4*sw^2*(3 - 5*swC^2 + 8*swC^4))*
               t + (9*(2*Pi)^d + 2^(2 + d)*Pi^d*(12*swC^2*(-1 + swC^2) + 
                  sw^2*(-3 + 20*swC^2 - 32*swC^4)))*t^2) + mz^4*(-1 + sw^2)^2*
             (s^2*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*(3*swC^2 - 12*swC^4 + 
                  sw^2*(-6 - 20*swC^2 + 32*swC^4))) - 2^(2 + d)*Pi^d*s*(
                -3*(3 - 7*swC^2 + 4*swC^4) + 4*sw^2*(3 - 5*swC^2 + 8*swC^4))*
               t + (9*(2*Pi)^d + 2^(2 + d)*Pi^d*(12*swC^2*(-1 + swC^2) + 
                  sw^2*(-3 + 20*swC^2 - 32*swC^4)))*t^2) + 
            2*mz^2*s*(1 - sw^2)*(s^2*(45*(2*Pi)^d + 2^(2 + d)*Pi^d*
                 (3*swC^2 - 24*swC^4 + sw^2*(-15 - 40*swC^2 + 64*swC^4))) + 
              3*s*(51*(2*Pi)^d + 2^(2 + d)*Pi^d*(2*swC^2*(-13 + 6*swC^2) + 
                  sw^2*(-17 + 20*swC^2 - 32*swC^4)))*t + 3*(9*(2*Pi)^d + 
                2^(2 + d)*Pi^d*(12*swC^2*(-1 + swC^2) + sw^2*(-3 + 20*swC^2 - 
                    32*swC^4)))*t^2)) - 
          d^3*s*(-(2^(1 + d)*mz^2*Pi^d*s*(1 - sw^2)*(s*(99 - 60*swC^2 - 
                 96*swC^4 + 4*sw^2*(-33 - 40*swC^2 + 64*swC^4)) - 78*
                (-3 + 4*sw^2 + 4*swC^2)*t)) + 3*s^2*(-15*(2*Pi)^d*s + 
              2^(1 + d)*Pi^d*(2*s*(3 + sw^2 + swC^2) + (-3 + 4*sw^2 + 
                  4*swC^2)*t)) + 3*mz^4*(-1 + sw^2)^2*(159*(2*Pi)^d*s + 
              2^(1 + d)*Pi^d*(s*(-81 + 2*sw^2 + 2*swC^2) + (-3 + 4*sw^2 + 
                  4*swC^2)*t))))*GaugeXi[Z]) + GaugeXi[W]^2*
       (-(s*(3*2^(2 + d)*d^4*mz^2*Pi^d*s^2*(1 - sw^2)*(s - mz^2*(-1 + sw^2))*
            (-3 + 4*sw^2 + 4*swC^2)*(s + 2*t) - 32*mz^4*s*(-1 + sw^2)^2*
            (s^2*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*(3*swC^2 - 12*swC^4 + 
                 sw^2*(-6 - 20*swC^2 + 32*swC^4))) - 2^(2 + d)*Pi^d*s*
              (-3*(3 - 7*swC^2 + 4*swC^4) + 4*sw^2*(3 - 5*swC^2 + 8*swC^4))*
              t + (9*(2*Pi)^d + 2^(2 + d)*Pi^d*(12*swC^2*(-1 + swC^2) + 
                 sw^2*(-3 + 20*swC^2 - 32*swC^4)))*t^2) + 
           4*d*(s^3*(s^2*(-9*(2*Pi)^d + 2^(1 + d)*Pi^d*(3*swC^2*(-1 + 
                     4*swC^2) + sw^2*(6 + 20*swC^2 - 32*swC^4))) + 2^(2 + d)*
                Pi^d*s*(-3*(3 - 7*swC^2 + 4*swC^4) + 4*sw^2*(3 - 5*swC^2 + 
                   8*swC^4))*t - (9*(2*Pi)^d + 2^(2 + d)*Pi^d*
                  (12*swC^2*(-1 + swC^2) + sw^2*(-3 + 20*swC^2 - 32*swC^4)))*
                t^2) + 9*mz^2*s^2*(1 - sw^2)*(s^2*(9*(2*Pi)^d + 2^(1 + d)*
                  Pi^d*(3*swC^2 - 12*swC^4 + sw^2*(-6 - 20*swC^2 + 
                     32*swC^4))) - 2^(2 + d)*Pi^d*s*(-3*(3 - 7*swC^2 + 
                   4*swC^4) + 4*sw^2*(3 - 5*swC^2 + 8*swC^4))*t + 
               (9*(2*Pi)^d + 2^(2 + d)*Pi^d*(12*swC^2*(-1 + swC^2) + 
                   sw^2*(-3 + 20*swC^2 - 32*swC^4)))*t^2) + 
             3*mz^6*(1 - sw^2)^3*(s^2*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*
                  (3*swC^2 - 12*swC^4 + sw^2*(-6 - 20*swC^2 + 32*swC^4))) - 
               2^(2 + d)*Pi^d*s*(-3*(3 - 7*swC^2 + 4*swC^4) + 4*sw^2*
                  (3 - 5*swC^2 + 8*swC^4))*t + (9*(2*Pi)^d + 2^(2 + d)*Pi^d*
                  (12*swC^2*(-1 + swC^2) + sw^2*(-3 + 20*swC^2 - 32*swC^4)))*
                t^2) + mz^4*s*(-1 + sw^2)^2*(3*s^2*(39*(2*Pi)^d + 
                 2^(1 + d)*Pi^d*(swC^2 - 36*swC^4 + sw^2*(-26 - 60*swC^2 + 
                     96*swC^4))) - 5*2^(2 + d)*Pi^d*s*(-3*(6 - 11*swC^2 + 
                   4*swC^4) + 4*sw^2*(6 - 5*swC^2 + 8*swC^4))*t + 5*
                (9*(2*Pi)^d + 2^(2 + d)*Pi^d*(12*swC^2*(-1 + swC^2) + 
                   sw^2*(-3 + 20*swC^2 - 32*swC^4)))*t^2)) - 
           d^3*s*(-(mz^2*s^2*(1 - sw^2)*(225*(2*Pi)^d*s + 2^(2 + d)*Pi^d*s*
                 (-3*swC^2*(13 + 16*swC^2) + sw^2*(-75 - 80*swC^2 + 
                    128*swC^4)) - 87*2^(1 + d)*Pi^d*(-3 + 4*sw^2 + 4*swC^2)*
                 t)) + 3*s^3*(3*(2*Pi)^d*s - 2^(2 + d)*Pi^d*s*(sw^2 + 
                 swC^2) - 2^(1 + d)*Pi^d*(-3 + 4*sw^2 + 4*swC^2)*t) - 
             mz^4*s*(-1 + sw^2)^2*(63*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
                (s*(63 - 54*swC^2 - 96*swC^4 + 2*sw^2*(-63 - 80*swC^2 + 
                     128*swC^4)) - 75*(-3 + 4*sw^2 + 4*swC^2)*t)) + 
             9*mz^6*(1 - sw^2)^3*(-5*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
                (s*(1 + 2*sw^2 + 2*swC^2) + (-3 + 4*sw^2 + 4*swC^2)*t))) + 
           2*d^2*s*(s^3*(45*(2*Pi)^d*t + 2^(1 + d)*Pi^d*(-3*s*(-3 + swC^2 + 
                   4*swC^4) + 4*s*sw^2*(-3 - 5*swC^2 + 8*swC^4) - 
                 30*(sw^2 + swC^2)*t)) + 3*mz^6*(1 - sw^2)^3*(-45*(2*Pi)^d*
                t + 2^(1 + d)*Pi^d*(3*s*(-3 + swC^2 + 4*swC^4) - 
                 4*s*sw^2*(-3 - 5*swC^2 + 8*swC^4) + 30*(sw^2 + swC^2)*t)) + 
             mz^4*(-1 + sw^2)^2*(-585*(2*Pi)^d*s*t + 2^(1 + d)*Pi^d*
                (s^2*(sw^2*(132 + 260*swC^2 - 416*swC^4) + 3*(-33 + 5*swC^2 + 
                     52*swC^4)) + 2*s*(267*swC^2 - 96*swC^4 + sw^2*
                    (195 - 160*swC^2 + 256*swC^4))*t + 4*(-1 + 4*swC^2)*
                  (9 - 12*swC^2 + 4*sw^2*(-3 + 8*swC^2))*t^2)) + 
             mz^2*s*(1 - sw^2)*(-693*(2*Pi)^d*s*t + 2^(1 + d)*Pi^d*
                (s^2*(sw^2*(156 + 340*swC^2 - 544*swC^4) + 3*(-39 + swC^2 + 
                     68*swC^4)) + 2*s*(303*swC^2 - 96*swC^4 + sw^2*
                    (231 - 160*swC^2 + 256*swC^4))*t + 4*(-1 + 4*swC^2)*
                  (9 - 12*swC^2 + 4*sw^2*(-3 + 8*swC^2))*t^2))))) + 
        mz^2*(3*2^(2 + d)*d^4*mz^2*Pi^d*s^2*(1 - sw^2)*(s - mz^2*(-1 + sw^2))*
           (-3 + 4*sw^2 + 4*swC^2)*(s + 2*t) - 32*mz^4*s*(-1 + sw^2)^2*
           (s^2*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*(3*swC^2 - 12*swC^4 + 
                sw^2*(-6 - 20*swC^2 + 32*swC^4))) - 2^(2 + d)*Pi^d*s*
             (-3*(3 - 7*swC^2 + 4*swC^4) + 4*sw^2*(3 - 5*swC^2 + 8*swC^4))*
             t + (9*(2*Pi)^d + 2^(2 + d)*Pi^d*(12*swC^2*(-1 + swC^2) + 
                sw^2*(-3 + 20*swC^2 - 32*swC^4)))*t^2) + 
          4*d*(s^3*(s^2*(-9*(2*Pi)^d + 2^(1 + d)*Pi^d*(3*swC^2*(-1 + 
                    4*swC^2) + sw^2*(6 + 20*swC^2 - 32*swC^4))) + 
              2^(2 + d)*Pi^d*s*(-3*(3 - 7*swC^2 + 4*swC^4) + 4*sw^2*
                 (3 - 5*swC^2 + 8*swC^4))*t - (9*(2*Pi)^d + 2^(2 + d)*Pi^d*
                 (12*swC^2*(-1 + swC^2) + sw^2*(-3 + 20*swC^2 - 32*swC^4)))*t^
                2) + 9*mz^2*s^2*(1 - sw^2)*(s^2*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*
                 (3*swC^2 - 12*swC^4 + sw^2*(-6 - 20*swC^2 + 32*swC^4))) - 
              2^(2 + d)*Pi^d*s*(-3*(3 - 7*swC^2 + 4*swC^4) + 4*sw^2*
                 (3 - 5*swC^2 + 8*swC^4))*t + (9*(2*Pi)^d + 2^(2 + d)*Pi^d*
                 (12*swC^2*(-1 + swC^2) + sw^2*(-3 + 20*swC^2 - 32*swC^4)))*t^
                2) + 3*mz^6*(1 - sw^2)^3*(s^2*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*
                 (3*swC^2 - 12*swC^4 + sw^2*(-6 - 20*swC^2 + 32*swC^4))) - 
              2^(2 + d)*Pi^d*s*(-3*(3 - 7*swC^2 + 4*swC^4) + 4*sw^2*
                 (3 - 5*swC^2 + 8*swC^4))*t + (9*(2*Pi)^d + 2^(2 + d)*Pi^d*
                 (12*swC^2*(-1 + swC^2) + sw^2*(-3 + 20*swC^2 - 32*swC^4)))*t^
                2) + mz^4*s*(-1 + sw^2)^2*(3*s^2*(39*(2*Pi)^d + 2^(1 + d)*
                 Pi^d*(swC^2 - 36*swC^4 + sw^2*(-26 - 60*swC^2 + 
                    96*swC^4))) - 5*2^(2 + d)*Pi^d*s*(-3*(6 - 11*swC^2 + 
                  4*swC^4) + 4*sw^2*(6 - 5*swC^2 + 8*swC^4))*t + 
              5*(9*(2*Pi)^d + 2^(2 + d)*Pi^d*(12*swC^2*(-1 + swC^2) + 
                  sw^2*(-3 + 20*swC^2 - 32*swC^4)))*t^2)) - 
          d^3*s*(3*s^3*(3*(2*Pi)^d*s - 2^(2 + d)*Pi^d*s*(sw^2 + swC^2) - 
              2^(1 + d)*Pi^d*(-3 + 4*sw^2 + 4*swC^2)*t) - mz^2*s^2*(1 - sw^2)*
             (45*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(2*s*(45 - 39*swC^2 - 48*swC^4 + 
                  sw^2*(-75 - 80*swC^2 + 128*swC^4)) - 87*(-3 + 4*sw^2 + 
                  4*swC^2)*t)) - mz^4*s*(-1 + sw^2)^2*(369*(2*Pi)^d*s + 
              2^(1 + d)*Pi^d*(-6*s*(15 + 9*swC^2 + 16*swC^4) + 2*s*sw^2*
                 (-63 - 80*swC^2 + 128*swC^4) - 75*(-3 + 4*sw^2 + 4*swC^2)*
                 t)) + 9*mz^6*(1 - sw^2)^3*(-35*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(
                2*s*(8 + sw^2 + swC^2) + (-3 + 4*sw^2 + 4*swC^2)*t))) + 
          2*d^2*s*(s^3*(45*(2*Pi)^d*t + 2^(1 + d)*Pi^d*(-3*s*(-3 + swC^2 + 
                  4*swC^4) + 4*s*sw^2*(-3 - 5*swC^2 + 8*swC^4) - 
                30*(sw^2 + swC^2)*t)) + 3*mz^6*(1 - sw^2)^3*(-45*(2*Pi)^d*t + 
              2^(1 + d)*Pi^d*(3*s*(-3 + swC^2 + 4*swC^4) - 4*s*sw^2*
                 (-3 - 5*swC^2 + 8*swC^4) + 30*(sw^2 + swC^2)*t)) + 
            mz^4*(-1 + sw^2)^2*(-585*(2*Pi)^d*s*t + 2^(1 + d)*Pi^d*(
                s^2*(sw^2*(132 + 260*swC^2 - 416*swC^4) + 3*(-33 + 5*swC^2 + 
                    52*swC^4)) + 2*s*(267*swC^2 - 96*swC^4 + sw^2*
                   (195 - 160*swC^2 + 256*swC^4))*t + 4*(-1 + 4*swC^2)*
                 (9 - 12*swC^2 + 4*sw^2*(-3 + 8*swC^2))*t^2)) + 
            mz^2*s*(1 - sw^2)*(-693*(2*Pi)^d*s*t + 2^(1 + d)*Pi^d*(
                s^2*(sw^2*(156 + 340*swC^2 - 544*swC^4) + 3*(-39 + swC^2 + 
                    68*swC^4)) + 2*s*(303*swC^2 - 96*swC^4 + sw^2*
                   (231 - 160*swC^2 + 256*swC^4))*t + 4*(-1 + 4*swC^2)*
                 (9 - 12*swC^2 + 4*sw^2*(-3 + 8*swC^2))*t^2))))*GaugeXi[Z]) + 
      GaugeXi[W]*(s*(-3*2^(2 + d)*d^4*mz^2*Pi^d*s^2*(-1 + sw^2)*
           (2*s + mz^2*(-1 + sw^2))*(-3 + 4*sw^2 + 4*swC^2)*(s + 2*t) - 
          16*mz^4*s*(-1 + sw^2)^2*(s^2*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*(
                3*swC^2 - 12*swC^4 + sw^2*(-6 - 20*swC^2 + 32*swC^4))) - 
            2^(2 + d)*Pi^d*s*(-3*(3 - 7*swC^2 + 4*swC^4) + 4*sw^2*(3 - 
                5*swC^2 + 8*swC^4))*t + (9*(2*Pi)^d + 2^(2 + d)*Pi^d*(
                12*swC^2*(-1 + swC^2) + sw^2*(-3 + 20*swC^2 - 32*swC^4)))*
             t^2) + d^3*s*(3*2^(1 + d)*Pi^d*s^3*(-3 + 4*sw^2 + 4*swC^2)*
             (s + 2*t) - 2^(3 + d)*mz^4*Pi^d*s*(-1 + sw^2)^2*
             (-3*s*(-9 + 6*swC^2 + 8*swC^4) + 4*s*sw^2*(-9 - 10*swC^2 + 
                16*swC^4) - 21*(-3 + 4*sw^2 + 4*swC^2)*t) + 
            mz^2*s^2*(1 - sw^2)*(9*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(
                -3*s*(-69 + 46*swC^2 + 64*swC^4) + s*sw^2*(-282 - 320*swC^2 + 
                  512*swC^4) - 165*(-3 + 4*sw^2 + 4*swC^2)*t)) - 
            9*mz^6*(1 - sw^2)^3*(-39*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(
                2*s*(9 + sw^2 + swC^2) + (-3 + 4*sw^2 + 4*swC^2)*t))) + 
          4*d*(-2*s^3*(s^2*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*(3*swC^2 - 12*swC^4 + 
                  sw^2*(-6 - 20*swC^2 + 32*swC^4))) - 2^(2 + d)*Pi^d*s*(
                -3*(3 - 7*swC^2 + 4*swC^4) + 4*sw^2*(3 - 5*swC^2 + 8*swC^4))*
               t + (9*(2*Pi)^d + 2^(2 + d)*Pi^d*(12*swC^2*(-1 + swC^2) + 
                  sw^2*(-3 + 20*swC^2 - 32*swC^4)))*t^2) + 
            15*mz^2*s^2*(1 - sw^2)*(s^2*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*
                 (3*swC^2 - 12*swC^4 + sw^2*(-6 - 20*swC^2 + 32*swC^4))) - 
              2^(2 + d)*Pi^d*s*(-3*(3 - 7*swC^2 + 4*swC^4) + 4*sw^2*
                 (3 - 5*swC^2 + 8*swC^4))*t + (9*(2*Pi)^d + 2^(2 + d)*Pi^d*
                 (12*swC^2*(-1 + swC^2) + sw^2*(-3 + 20*swC^2 - 32*swC^4)))*t^
                2) + 3*mz^6*(1 - sw^2)^3*(s^2*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*
                 (3*swC^2 - 12*swC^4 + sw^2*(-6 - 20*swC^2 + 32*swC^4))) - 
              2^(2 + d)*Pi^d*s*(-3*(3 - 7*swC^2 + 4*swC^4) + 4*sw^2*
                 (3 - 5*swC^2 + 8*swC^4))*t + (9*(2*Pi)^d + 2^(2 + d)*Pi^d*
                 (12*swC^2*(-1 + swC^2) + sw^2*(-3 + 20*swC^2 - 32*swC^4)))*t^
                2) - 2*mz^4*s*(-1 + sw^2)^2*(99*(2*Pi)^d*s*t + 
              2^(1 + d)*Pi^d*(3*s^2*(3 + 5*swC^2 - 12*swC^4 + 4*sw^2*
                   (-1 - 5*swC^2 + 8*swC^4)) - 2*s*(69*swC^2 - 48*swC^4 + 
                  sw^2*(33 - 80*swC^2 + 128*swC^4))*t - 2*(-1 + 4*swC^2)*
                 (9 - 12*swC^2 + 4*sw^2*(-3 + 8*swC^2))*t^2))) + 
          2*d^2*s*(2^(1 + d)*Pi^d*s^3*(-6*s*(-3 + swC^2 + 4*swC^4) + 
              8*s*sw^2*(-3 - 5*swC^2 + 8*swC^4) - 15*(-3 + 4*sw^2 + 4*swC^2)*
               t) + 2*mz^4*(-1 + sw^2)^2*(s^2*(99*(2*Pi)^d + 2^(2 + d)*Pi^d*
                 (3*swC^2 - 48*swC^4 + sw^2*(-33 - 80*swC^2 + 128*swC^4))) - 
              2^(1 + d)*Pi^d*s*(-3*(51 - 92*swC^2 + 32*swC^4) + 
                4*sw^2*(51 - 40*swC^2 + 64*swC^4))*t - 2^(2 + d)*Pi^d*(-1 + 
                4*swC^2)*(9 - 12*swC^2 + 4*sw^2*(-3 + 8*swC^2))*t^2) + 
            3*mz^6*(1 - sw^2)^3*(-45*(2*Pi)^d*t + 2^(1 + d)*Pi^d*(
                3*s*(-3 + swC^2 + 4*swC^4) - 4*s*sw^2*(-3 - 5*swC^2 + 
                  8*swC^4) + 30*(sw^2 + swC^2)*t)) + mz^2*s*(1 - sw^2)*
             (-1251*(2*Pi)^d*s*t + 2^(1 + d)*Pi^d*(s^2*(-207 - 3*swC^2 + 
                  372*swC^4 + sw^2*(276 + 620*swC^2 - 992*swC^4)) + 
                2*s*(561*swC^2 - 192*swC^4 + sw^2*(417 - 320*swC^2 + 
                    512*swC^4))*t + 8*(-1 + 4*swC^2)*(9 - 12*swC^2 + 
                  4*sw^2*(-3 + 8*swC^2))*t^2)))) + 
        mz^2*(3*2^(2 + d)*d^4*mz^2*Pi^d*s^2*(-1 + sw^2)*
           (2*s + mz^2*(-1 + sw^2))*(-3 + 4*sw^2 + 4*swC^2)*(s + 2*t) + 
          16*mz^4*s*(-1 + sw^2)^2*(s^2*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*(
                3*swC^2 - 12*swC^4 + sw^2*(-6 - 20*swC^2 + 32*swC^4))) - 
            2^(2 + d)*Pi^d*s*(-3*(3 - 7*swC^2 + 4*swC^4) + 4*sw^2*(3 - 
                5*swC^2 + 8*swC^4))*t + (9*(2*Pi)^d + 2^(2 + d)*Pi^d*(
                12*swC^2*(-1 + swC^2) + sw^2*(-3 + 20*swC^2 - 32*swC^4)))*
             t^2) + d^3*s*(-3*2^(1 + d)*Pi^d*s^3*(-3 + 4*sw^2 + 4*swC^2)*
             (s + 2*t) + 2^(3 + d)*mz^4*Pi^d*s*(-1 + sw^2)^2*
             (-3*s*(-9 + 6*swC^2 + 8*swC^4) + 4*s*sw^2*(-9 - 10*swC^2 + 
                16*swC^4) - 21*(-3 + 4*sw^2 + 4*swC^2)*t) - 
            mz^2*s^2*(1 - sw^2)*(-45*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(
                2*s*(117 - 69*swC^2 - 96*swC^4 + sw^2*(-141 - 160*swC^2 + 
                    256*swC^4)) - 165*(-3 + 4*sw^2 + 4*swC^2)*t)) + 
            9*mz^6*(1 - sw^2)^3*(-49*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(
                s*(23 + 2*sw^2 + 2*swC^2) + (-3 + 4*sw^2 + 4*swC^2)*t))) - 
          4*d*(-2*s^3*(s^2*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*(3*swC^2 - 12*swC^4 + 
                  sw^2*(-6 - 20*swC^2 + 32*swC^4))) - 2^(2 + d)*Pi^d*s*(
                -3*(3 - 7*swC^2 + 4*swC^4) + 4*sw^2*(3 - 5*swC^2 + 8*swC^4))*
               t + (9*(2*Pi)^d + 2^(2 + d)*Pi^d*(12*swC^2*(-1 + swC^2) + 
                  sw^2*(-3 + 20*swC^2 - 32*swC^4)))*t^2) + 
            15*mz^2*s^2*(1 - sw^2)*(s^2*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*
                 (3*swC^2 - 12*swC^4 + sw^2*(-6 - 20*swC^2 + 32*swC^4))) - 
              2^(2 + d)*Pi^d*s*(-3*(3 - 7*swC^2 + 4*swC^4) + 4*sw^2*
                 (3 - 5*swC^2 + 8*swC^4))*t + (9*(2*Pi)^d + 2^(2 + d)*Pi^d*
                 (12*swC^2*(-1 + swC^2) + sw^2*(-3 + 20*swC^2 - 32*swC^4)))*t^
                2) + 3*mz^6*(1 - sw^2)^3*(s^2*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*
                 (3*swC^2 - 12*swC^4 + sw^2*(-6 - 20*swC^2 + 32*swC^4))) - 
              2^(2 + d)*Pi^d*s*(-3*(3 - 7*swC^2 + 4*swC^4) + 4*sw^2*
                 (3 - 5*swC^2 + 8*swC^4))*t + (9*(2*Pi)^d + 2^(2 + d)*Pi^d*
                 (12*swC^2*(-1 + swC^2) + sw^2*(-3 + 20*swC^2 - 32*swC^4)))*t^
                2) - 2*mz^4*s*(-1 + sw^2)^2*(99*(2*Pi)^d*s*t + 
              2^(1 + d)*Pi^d*(3*s^2*(3 + 5*swC^2 - 12*swC^4 + 4*sw^2*
                   (-1 - 5*swC^2 + 8*swC^4)) - 2*s*(69*swC^2 - 48*swC^4 + 
                  sw^2*(33 - 80*swC^2 + 128*swC^4))*t - 2*(-1 + 4*swC^2)*
                 (9 - 12*swC^2 + 4*sw^2*(-3 + 8*swC^2))*t^2))) - 
          2*d^2*s*(2^(1 + d)*Pi^d*s^3*(-6*s*(-3 + swC^2 + 4*swC^4) + 
              8*s*sw^2*(-3 - 5*swC^2 + 8*swC^4) - 15*(-3 + 4*sw^2 + 4*swC^2)*
               t) + 2*mz^4*(-1 + sw^2)^2*(s^2*(99*(2*Pi)^d + 2^(2 + d)*Pi^d*
                 (3*swC^2 - 48*swC^4 + sw^2*(-33 - 80*swC^2 + 128*swC^4))) - 
              2^(1 + d)*Pi^d*s*(-3*(51 - 92*swC^2 + 32*swC^4) + 
                4*sw^2*(51 - 40*swC^2 + 64*swC^4))*t - 2^(2 + d)*Pi^d*(-1 + 
                4*swC^2)*(9 - 12*swC^2 + 4*sw^2*(-3 + 8*swC^2))*t^2) + 
            3*mz^6*(1 - sw^2)^3*(-45*(2*Pi)^d*t + 2^(1 + d)*Pi^d*(
                3*s*(-3 + swC^2 + 4*swC^4) - 4*s*sw^2*(-3 - 5*swC^2 + 
                  8*swC^4) + 30*(sw^2 + swC^2)*t)) + mz^2*s*(1 - sw^2)*
             (-1251*(2*Pi)^d*s*t + 2^(1 + d)*Pi^d*(s^2*(-207 - 3*swC^2 + 
                  372*swC^4 + sw^2*(276 + 620*swC^2 - 992*swC^4)) + 
                2*s*(561*swC^2 - 192*swC^4 + sw^2*(417 - 320*swC^2 + 
                    512*swC^4))*t + 8*(-1 + 4*swC^2)*(9 - 12*swC^2 + 
                  4*sw^2*(-3 + 8*swC^2))*t^2))))*GaugeXi[Z])))/
    (cwC^2*(-1 + d)*d*mz^4*Pi^(2*d)*(mz^2 - s)^2*s^2*sw^2*(-1 + sw^2)^2*swC^2*
     (-1 + GaugeXi[W])^2*(-s + mz^2*GaugeXi[Z])), 
   ((I/9)*2^(-6 - d)*EL^6*(s + mz^2*(-1 + sw^2))^2*
     (s^2*(3*d^2*(-3 + 4*sw^2 + 4*swC^2) + 4*d*(-3*(-3 + swC^2 + 4*swC^4) + 
          4*sw^2*(-3 - 5*swC^2 + 8*swC^4)) - 4*(9 + 6*swC^2 - 24*swC^4 + 
          4*sw^2*(-3 - 10*swC^2 + 16*swC^4))) + 
      2*s*(-15*d*(-3 + 4*sw^2 + 4*swC^2) + 3*d^2*(-3 + 4*sw^2 + 4*swC^2) - 
        24*(3 - 7*swC^2 + 4*swC^4) + 32*sw^2*(3 - 5*swC^2 + 8*swC^4))*t + 
      4*(-1 + 4*swC^2)*(9 - 12*swC^2 + 4*sw^2*(-3 + 8*swC^2))*t^2)*
     (s^2 - 2*(-3 + 2*d)*mz^2*s*(-1 + sw^2) + mz^4*(-1 + sw^2)^2 - 
      2*mz^2*(-1 + sw^2)*(-s + mz^2*(-1 + sw^2))*GaugeXi[W] + 
      mz^4*(-1 + sw^2)^2*GaugeXi[W]^2))/(cwC^2*(-1 + d)*mz^4*Pi^d*
     (mz^2 - s)^2*s^2*sw^2*(-1 + sw^2)^2*swC^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}, 
 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   ((I/9)*4^(-2 - d)*EL^6*s*(-3*d^2*(2*Pi)^d*s^2 - 
      2^(1 + d)*Pi^d*(2*s^2*(3 + 10*sw^2 - 16*sw^4 + 
          d*(-3 - 5*sw^2 + 8*sw^4)) + s*(-15*d + 3*d^2 + 
          8*(3 - 5*sw^2 + 8*sw^4))*t + 2*(3 - 20*sw^2 + 32*sw^4)*t^2) + 
      2^(1 + d)*Pi^d*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
          4*d*(-3 - 5*sw^2 + 8*sw^4)) + 2*s*(-15*d + 3*d^2 + 
          8*(3 - 5*sw^2 + 8*sw^4))*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2)*
       GaugeXi[W] - (3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
          s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[W]^2))/
    ((-1 + d)*mz^4*Pi^(2*d)*(mz^2 - s)^2*sw^4*(-1 + sw^2)^2*
     (-1 + GaugeXi[W])^2), ((-I/9)*2^(-5 - 2*d)*EL^6*s*
     (-(s*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
          (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
           s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
           2*(3 - 20*sw^2 + 32*sw^4)*t^2))) + 
      2*(3*d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
         (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
          s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          2*(3 - 20*sw^2 + 32*sw^4)*t^2) + 2^(1 + d)*mz^2*Pi^d*(1 - sw^2)*
         (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
          2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          4*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[W] - 
      (3*d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
         (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
          s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          2*(3 - 20*sw^2 + 32*sw^4)*t^2) + 2^(3 + d)*mz^2*Pi^d*(1 - sw^2)*
         (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
          2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          4*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[W]^2 + 
      4*mz^2*(1 - sw^2)*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
          s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[W]^3))/
    ((-1 + d)*mz^4*Pi^(2*d)*(mz^2 - s)^2*sw^4*(-1 + sw^2)^2*
     (-1 + GaugeXi[W])^2), ((I/9)*2^(-4 - 8*d)*EL^6*
     (3*2^(2 + 7*d)*d^4*Pi^(7*d)*s^3*(s + 2*t) + 2^(4 + 7*d)*mz^2*Pi^(7*d)*s*
       (1 - sw^2)*(s^2*(-3 - 10*sw^2 + 16*sw^4) - 4*s*(3 - 5*sw^2 + 8*sw^4)*
         t + (-3 + 20*sw^2 - 32*sw^4)*t^2) + d^3*(2*Pi)^(7*d)*s*
       (s^2*(s*(-69 - 80*sw^2 + 128*sw^4) - 162*t) - 15*mz^2*s*(-1 + sw^2)*
         (s + 2*t) - 3*mz^4*(-1 + sw^2)^2*(s + 2*t)) - 
      2^(1 + 7*d)*d^2*Pi^(7*d)*s*(mz^2*s*(-1 + sw^2)*
         (s*(-36 - 50*sw^2 + 80*sw^4) - 87*t) + mz^4*(-1 + sw^2)^2*
         (2*s*(-3 - 5*sw^2 + 8*sw^4) - 15*t) + 
        s*(6*s^2*(-11 - 25*sw^2 + 40*sw^4) + s*(-201 + 160*sw^2 - 256*sw^4)*
           t - 8*(3 - 20*sw^2 + 32*sw^4)*t^2)) - 2^(2 + 7*d)*d*Pi^(7*d)*
       (7*s^2*(s^2*(3 + 10*sw^2 - 16*sw^4) + 4*s*(3 - 5*sw^2 + 8*sw^4)*t + 
          (3 - 20*sw^2 + 32*sw^4)*t^2) + mz^4*(-1 + sw^2)^2*
         (s^2*(3 + 10*sw^2 - 16*sw^4) + 4*s*(3 - 5*sw^2 + 8*sw^4)*t + 
          (3 - 20*sw^2 + 32*sw^4)*t^2) - mz^2*s*(1 - sw^2)*
         (s^2*(27 + 70*sw^2 - 112*sw^4) + 10*s*(9 - 10*sw^2 + 16*sw^4)*t + 
          5*(3 - 20*sw^2 + 32*sw^4)*t^2)) + 
      (-3*2^(3 + 7*d)*d^4*Pi^(7*d)*s^3*(s + 2*t) - 2^(5 + 7*d)*mz^2*Pi^(7*d)*
         s*(1 - sw^2)*(s^2*(-3 - 10*sw^2 + 16*sw^4) - 
          4*s*(3 - 5*sw^2 + 8*sw^4)*t + (-3 + 20*sw^2 - 32*sw^4)*t^2) + 
        d^3*(2*Pi)^(7*d)*s*(36*mz^2*s*(-1 + sw^2)*(s + 2*t) + 
          9*mz^4*(-1 + sw^2)^2*(s + 2*t) + 
          s^2*(s*(141 + 160*sw^2 - 256*sw^4) + 330*t)) + 
        2*d^2*s*(3*2^(2 + 7*d)*mz^2*Pi^(7*d)*s*(-1 + sw^2)*
           (s*(-7 - 10*sw^2 + 16*sw^4) - 17*t) + 3*mz^4*(2*Pi)^(7*d)*
           (-1 + sw^2)^2*(2*s*(-3 - 5*sw^2 + 8*sw^4) - 15*t) + 
          (2*Pi)^(7*d)*s*(2*s^2*(-69 - 155*sw^2 + 248*sw^4) + 
            s*(-417 + 320*sw^2 - 512*sw^4)*t - 16*(3 - 20*sw^2 + 32*sw^4)*
             t^2)) + 4*d*(2^(2 + 7*d)*mz^2*Pi^(7*d)*s*(1 - sw^2)*
           (s^2*(-15 - 40*sw^2 + 64*sw^4) - 3*s*(17 - 20*sw^2 + 32*sw^4)*t - 
            3*(3 - 20*sw^2 + 32*sw^4)*t^2) + 15*(2*Pi)^(7*d)*s^2*
           (s^2*(3 + 10*sw^2 - 16*sw^4) + 4*s*(3 - 5*sw^2 + 8*sw^4)*t + 
            (3 - 20*sw^2 + 32*sw^4)*t^2) + 3*mz^4*(2*Pi)^(7*d)*(-1 + sw^2)^2*
           (s^2*(3 + 10*sw^2 - 16*sw^4) + 4*s*(3 - 5*sw^2 + 8*sw^4)*t + 
            (3 - 20*sw^2 + 32*sw^4)*t^2)))*GaugeXi[W] + 
      (3*2^(2 + 7*d)*d^4*Pi^(7*d)*s^3*(s + 2*t) + 2^(4 + 7*d)*mz^2*Pi^(7*d)*s*
         (1 - sw^2)*(s^2*(-3 - 10*sw^2 + 16*sw^4) - 4*s*(3 - 5*sw^2 + 8*sw^4)*
           t + (-3 + 20*sw^2 - 32*sw^4)*t^2) + d^3*(2*Pi)^(7*d)*s*
         (s^2*(s*(-75 - 80*sw^2 + 128*sw^4) - 174*t) - 27*mz^2*s*(-1 + sw^2)*
           (s + 2*t) - 9*mz^4*(-1 + sw^2)^2*(s + 2*t)) - 
        2^(1 + 7*d)*d^2*Pi^(7*d)*s*(3*mz^2*s*(-1 + sw^2)*
           (s*(-20 - 30*sw^2 + 48*sw^4) - 49*t) + 3*mz^4*(-1 + sw^2)^2*
           (2*s*(-3 - 5*sw^2 + 8*sw^4) - 15*t) + 
          s*(2*s^2*(-39 - 85*sw^2 + 136*sw^4) + s*(-231 + 160*sw^2 - 
              256*sw^4)*t - 8*(3 - 20*sw^2 + 32*sw^4)*t^2)) - 
        2^(2 + 7*d)*d*Pi^(7*d)*(9*s^2*(s^2*(3 + 10*sw^2 - 16*sw^4) + 
            4*s*(3 - 5*sw^2 + 8*sw^4)*t + (3 - 20*sw^2 + 32*sw^4)*t^2) + 
          3*mz^4*(-1 + sw^2)^2*(s^2*(3 + 10*sw^2 - 16*sw^4) + 
            4*s*(3 - 5*sw^2 + 8*sw^4)*t + (3 - 20*sw^2 + 32*sw^4)*t^2) - 
          mz^2*s*(1 - sw^2)*(s^2*(39 + 110*sw^2 - 176*sw^4) + 
            6*s*(23 - 30*sw^2 + 48*sw^4)*t + 9*(3 - 20*sw^2 + 32*sw^4)*t^2)))*
       GaugeXi[W]^2 + d*(2*Pi)^(7*d)*(s + mz^2*(-1 + sw^2))^2*
       (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
        2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
        4*(3 - 20*sw^2 + 32*sw^4)*t^2)*GaugeXi[W]^3))/
    ((-1 + d)*d*mz^2*Pi^(8*d)*(mz^2 - s)^2*s^2*sw^4*(-1 + sw^2)*
     (-1 + GaugeXi[W])^2), ((-I/9)*2^(-5 - 6*d)*EL^6*
     ((2^(1 + 5*d)*Pi^(5*d)*(3 - 20*sw^2 + 32*sw^4)*
        (s^2 + 4*mz^2*s*(-1 + sw^2) + 4*(-1 + d)*mz^4*(-1 + sw^2)^2)*
        (d*s^2 + 4*d*mz^2*s*(-1 + sw^2) + 4*(-1 + d)*mz^4*(-1 + sw^2)^2))/
       (-1 + d) + 2^(1 + 5*d)*Pi^(5*d)*(s^3*(6 - 3*d + 20*sw^2 - 32*sw^4)*t + 
        (8*(-1 + d)*mz^8*(-1 + sw^2)^4*(s*(-6 + 3*d - 20*sw^2 + 32*sw^4) - 
           2*(3 - 20*sw^2 + 32*sw^4)*t))/s - 8*mz^6*(1 - sw^2)^3*
         (s*(-6 + 3*d - 20*sw^2 + 32*sw^4) - 
          2*(9 + 3*d^2 + d*(-9 - 20*sw^2 + 32*sw^4))*t) - 
        4*mz^2*s*(1 - sw^2)*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
            4*d*(-3 - 5*sw^2 + 8*sw^4)) + 2*s*(30 - 18*d + 3*d^2 - 20*sw^2 + 
            32*sw^4)*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2) + 
        2*mz^4*(-1 + sw^2)^2*(s^2*(90 + 24*d^2 + 300*sw^2 - 480*sw^4 + 
            d*(-93 - 160*sw^2 + 256*sw^4)) + 
          2*s*(21*d^2 + d*(-123 + 20*sw^2 - 32*sw^4) + 
            3*(69 - 80*sw^2 + 128*sw^4))*t + 32*(3 - 20*sw^2 + 32*sw^4)*
           t^2)) - ((2*Pi)^(3*d)*(s + 2*mz^2*(-1 + sw^2))^2*
        (s^2 + 4*mz^2*s*(-1 + sw^2) + 4*(-1 + d)*mz^4*(-1 + sw^2)^2)*
        (s*(-6 + 3*d - 20*sw^2 + 32*sw^4) - 2*(3 - 20*sw^2 + 32*sw^4)*t)*
        ((2*Pi)^(2*d) - 2^(1 + 2*d)*Pi^(2*d)*GaugeXi[W] + 
         (2*Pi)^(2*d)*GaugeXi[W]^2))/(s*(-1 + GaugeXi[W])^2) + 
      ((2*Pi)^(2*d)*(s^2 + 4*mz^2*s*(-1 + sw^2) + 4*(-1 + d)*mz^4*
          (-1 + sw^2)^2)*(3*d*s - 4*s*(3 - 5*sw^2 + 8*sw^4) - 
         2*(3 - 20*sw^2 + 32*sw^4)*t)*(4*(-1 + d)*mz^4*(-1 + sw^2)^2 + 
         s*(d*s + 2*t) + 4*mz^2*(-1 + sw^2)*(d*s + 2*t))*
        ((2*Pi)^(3*d) - 2^(1 + 3*d)*Pi^(3*d)*GaugeXi[W] + 
         (2*Pi)^(3*d)*GaugeXi[W]^2))/((-1 + d)*s*(-1 + GaugeXi[W])^2) - 
      ((s + 2*mz^2*(-1 + sw^2))^2*(s^2 + 4*mz^2*s*(-1 + sw^2) + 
         4*(-1 + d)*mz^4*(-1 + sw^2)^2)*(s*(-6 + 3*d - 20*sw^2 + 32*sw^4) - 
         2*(3 - 20*sw^2 + 32*sw^4)*t)*((2*Pi)^(5*d) - 2^(1 + 5*d)*Pi^(5*d)*
          GaugeXi[W] + (2*Pi)^(5*d)*GaugeXi[W]^2))/(s*(-1 + GaugeXi[W])^2)))/
    (mz^4*Pi^(6*d)*(mz^2 - s)^2*sw^4*(-1 + sw^2)^2), 0, 0, 0, 
   ((-I/9)*2^(-4 - 7*d)*EL^6*(d*(-s - mz^2*(-1 + sw^2))*
       ((2*Pi)^(6*d)*s^2*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
            4*d*(-3 - 5*sw^2 + 8*sw^4)) + 2*s*(-15*d + 3*d^2 + 
            8*(3 - 5*sw^2 + 8*sw^4))*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2) + 
        mz^4*(2*Pi)^(6*d)*(-1 + sw^2)^2*(s^2*(12 + 3*d^2 + 40*sw^2 - 
            64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
          2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          4*(3 - 20*sw^2 + 32*sw^4)*t^2) + 2*mz^2*s*(1 - sw^2)*
         (-33*d^2*(2*Pi)^(6*d)*s^2 + 2^(1 + 6*d)*Pi^(6*d)*
           (s^2*(-18 + 3*d^3 - 60*sw^2 + 96*sw^4 + 4*d^2*sw^2*(-5 + 8*sw^2) + 
              d*(30 + 70*sw^2 - 112*sw^4)) + s*(-39*d^2 + 6*d^3 - 
              24*(3 - 5*sw^2 + 8*sw^4) + d*(93 - 80*sw^2 + 128*sw^4))*t + 
            2*(-3 + 2*d)*(3 - 20*sw^2 + 32*sw^4)*t^2))) + 
      (-3*4^(1 + 3*d)*d^4*mz^2*Pi^(6*d)*s^2*(-1 + sw^2)*
         (2*s + mz^2*(-1 + sw^2))*(s + 2*t) - 4^(2 + 3*d)*mz^4*Pi^(6*d)*s*
         (-1 + sw^2)^2*(s^2*(-3 - 10*sw^2 + 16*sw^4) - 
          4*s*(3 - 5*sw^2 + 8*sw^4)*t + (-3 + 20*sw^2 - 32*sw^4)*t^2) + 
        d^3*(2*Pi)^(6*d)*s*(mz^2*s^2*(1 - sw^2)*
           (s*(-141 - 160*sw^2 + 256*sw^4) - 330*t) + 6*s^3*(s + 2*t) + 
          9*mz^6*(-1 + sw^2)^3*(s + 2*t) + 8*mz^4*s*(-1 + sw^2)^2*
           (s*(9 + 10*sw^2 - 16*sw^4) + 21*t)) + 
        2*d^2*s*(2^(1 + 6*d)*Pi^(6*d)*s^3*(2*s*(-3 - 5*sw^2 + 8*sw^4) - 
            15*t) + 3*mz^6*(2*Pi)^(6*d)*(-1 + sw^2)^3*
           (2*s*(-3 - 5*sw^2 + 8*sw^4) - 15*t) - mz^2*(2*Pi)^(6*d)*s*
           (1 - sw^2)*(2*s^2*(-69 - 155*sw^2 + 248*sw^4) + 
            s*(-417 + 320*sw^2 - 512*sw^4)*t - 16*(3 - 20*sw^2 + 32*sw^4)*
             t^2) + 2^(1 + 6*d)*mz^4*Pi^(6*d)*(-1 + sw^2)^2*
           (s^2*(-33 - 80*sw^2 + 128*sw^4) - 2*s*(51 - 40*sw^2 + 64*sw^4)*t - 
            4*(3 - 20*sw^2 + 32*sw^4)*t^2)) + 
        4*d*(-(2^(1 + 6*d)*Pi^(6*d)*s^3*(s^2*(-3 - 10*sw^2 + 16*sw^4) - 
             4*s*(3 - 5*sw^2 + 8*sw^4)*t + (-3 + 20*sw^2 - 32*sw^4)*t^2)) - 
          2^(1 + 6*d)*mz^4*Pi^(6*d)*s*(-1 + sw^2)^2*
           (6*s^2*(-1 - 5*sw^2 + 8*sw^4) + s*(-33 + 80*sw^2 - 128*sw^4)*t - 
            4*(3 - 20*sw^2 + 32*sw^4)*t^2) - 15*mz^2*(2*Pi)^(6*d)*s^2*
           (1 - sw^2)*(s^2*(3 + 10*sw^2 - 16*sw^4) + 
            4*s*(3 - 5*sw^2 + 8*sw^4)*t + (3 - 20*sw^2 + 32*sw^4)*t^2) - 
          3*mz^6*(2*Pi)^(6*d)*(1 - sw^2)^3*(s^2*(3 + 10*sw^2 - 16*sw^4) + 
            4*s*(3 - 5*sw^2 + 8*sw^4)*t + (3 - 20*sw^2 + 32*sw^4)*t^2)))*
       GaugeXi[W] - (3*4^(1 + 3*d)*d^4*mz^2*Pi^(6*d)*s^2*(1 - sw^2)*
         (s - mz^2*(-1 + sw^2))*(s + 2*t) - 2^(5 + 6*d)*mz^4*Pi^(6*d)*s*
         (-1 + sw^2)^2*(s^2*(-3 - 10*sw^2 + 16*sw^4) - 
          4*s*(3 - 5*sw^2 + 8*sw^4)*t + (-3 + 20*sw^2 - 32*sw^4)*t^2) - 
        d^3*(2*Pi)^(6*d)*s*(-3*s^3*(s + 2*t) - 9*mz^6*(-1 + sw^2)^3*
           (s + 2*t) + mz^4*s*(-1 + sw^2)^2*(s*(63 + 80*sw^2 - 128*sw^4) + 
            150*t) + mz^2*s^2*(1 - sw^2)*(s*(75 + 80*sw^2 - 128*sw^4) + 
            174*t)) - 4^(1 + 3*d)*d*Pi^(6*d)*
         (-(s^3*(s^2*(3 + 10*sw^2 - 16*sw^4) + 4*s*(3 - 5*sw^2 + 8*sw^4)*t + 
             (3 - 20*sw^2 + 32*sw^4)*t^2)) + 9*mz^2*s^2*(1 - sw^2)*
           (s^2*(3 + 10*sw^2 - 16*sw^4) + 4*s*(3 - 5*sw^2 + 8*sw^4)*t + 
            (3 - 20*sw^2 + 32*sw^4)*t^2) + 3*mz^6*(1 - sw^2)^3*
           (s^2*(3 + 10*sw^2 - 16*sw^4) + 4*s*(3 - 5*sw^2 + 8*sw^4)*t + 
            (3 - 20*sw^2 + 32*sw^4)*t^2) + mz^4*s*(-1 + sw^2)^2*
           (s^2*(39 + 90*sw^2 - 144*sw^4) + 20*s*(6 - 5*sw^2 + 8*sw^4)*t + 
            5*(3 - 20*sw^2 + 32*sw^4)*t^2)) + 2^(1 + 6*d)*d^2*Pi^(6*d)*s*
         (s^3*(2*s*(-3 - 5*sw^2 + 8*sw^4) - 15*t) + mz^6*(1 - sw^2)^3*
           (-6*s*(-3 - 5*sw^2 + 8*sw^4) + 45*t) + mz^4*(-1 + sw^2)^2*
           (s^2*(66 + 130*sw^2 - 208*sw^4) + s*(195 - 160*sw^2 + 256*sw^4)*
             t + 8*(3 - 20*sw^2 + 32*sw^4)*t^2) + mz^2*s*(1 - sw^2)*
           (s^2*(78 + 170*sw^2 - 272*sw^4) + s*(231 - 160*sw^2 + 256*sw^4)*
             t + 8*(3 - 20*sw^2 + 32*sw^4)*t^2)))*GaugeXi[W]^2 - 
      mz^2*(1 - sw^2)*(3*4^(1 + 3*d)*d^4*mz^2*Pi^(6*d)*s^2*(-1 + sw^2)*
         (s + 2*t) + 4^(2 + 3*d)*mz^2*Pi^(6*d)*s*(1 - sw^2)*
         (s^2*(-3 - 10*sw^2 + 16*sw^4) - 4*s*(3 - 5*sw^2 + 8*sw^4)*t + 
          (-3 + 20*sw^2 - 32*sw^4)*t^2) + d^3*(2*Pi)^(6*d)*s*
         (3*s^2*(s + 2*t) + 3*mz^4*(-1 + sw^2)^2*(s + 2*t) + 
          2*mz^2*s*(1 - sw^2)*(s*(33 + 40*sw^2 - 64*sw^4) + 78*t)) + 
        2*d^2*s*((2*Pi)^(6*d)*s^2*(2*s*(-3 - 5*sw^2 + 8*sw^4) - 15*t) + 
          mz^4*(2*Pi)^(6*d)*(-1 + sw^2)^2*(2*s*(-3 - 5*sw^2 + 8*sw^4) - 
            15*t) + 2^(1 + 6*d)*mz^2*Pi^(6*d)*(1 - sw^2)*
           (s^2*(-33 - 70*sw^2 + 112*sw^4) + s*(-99 + 80*sw^2 - 128*sw^4)*t - 
            4*(3 - 20*sw^2 + 32*sw^4)*t^2)) + 
        4*d*(-(2^(1 + 6*d)*mz^2*Pi^(6*d)*s*(1 - sw^2)*
            (s^2*(-15 - 40*sw^2 + 64*sw^4) - 3*s*(17 - 20*sw^2 + 32*sw^4)*t - 
             3*(3 - 20*sw^2 + 32*sw^4)*t^2)) + (2*Pi)^(6*d)*s^2*
           (s^2*(3 + 10*sw^2 - 16*sw^4) + 4*s*(3 - 5*sw^2 + 8*sw^4)*t + 
            (3 - 20*sw^2 + 32*sw^4)*t^2) + mz^4*(2*Pi)^(6*d)*(-1 + sw^2)^2*
           (s^2*(3 + 10*sw^2 - 16*sw^4) + 4*s*(3 - 5*sw^2 + 8*sw^4)*t + 
            (3 - 20*sw^2 + 32*sw^4)*t^2)))*GaugeXi[W]^3))/
    ((-1 + d)*d*mz^4*Pi^(7*d)*(mz^2 - s)^2*s^2*sw^4*(-1 + sw^2)^2*
     (-1 + GaugeXi[W])^2), 
   ((-I/9)*EL^6*((2*Pi)^(3*d)*s^4*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
          4*d*(-3 - 5*sw^2 + 8*sw^4)) + 2*s*(-15*d + 3*d^2 + 
          8*(3 - 5*sw^2 + 8*sw^4))*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2) + 
      mz^8*(2*Pi)^(3*d)*(-1 + sw^2)^4*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
          4*d*(-3 - 5*sw^2 + 8*sw^4)) + 2*s*(-15*d + 3*d^2 + 
          8*(3 - 5*sw^2 + 8*sw^4))*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2) + 
      4*mz^2*s^3*(1 - sw^2)*(3*d^3*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
         (s^2*(-12 - 40*sw^2 + 64*sw^4 + d*(18 + 40*sw^2 - 64*sw^4) + 
            d^2*(-9 - 10*sw^2 + 16*sw^4)) + s*(-21*d^2 + 3*d^3 - 
            16*(3 - 5*sw^2 + 8*sw^4) + d*(54 - 40*sw^2 + 64*sw^4))*t + 
          2*(-2 + d)*(3 - 20*sw^2 + 32*sw^4)*t^2)) + 
      4*mz^6*s*(1 - sw^2)^3*(3*d^3*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
         (s^2*(-12 - 40*sw^2 + 64*sw^4 + d*(18 + 40*sw^2 - 64*sw^4) + 
            d^2*(-9 - 10*sw^2 + 16*sw^4)) + s*(-21*d^2 + 3*d^3 - 
            16*(3 - 5*sw^2 + 8*sw^4) + d*(54 - 40*sw^2 + 64*sw^4))*t + 
          2*(-2 + d)*(3 - 20*sw^2 + 32*sw^4)*t^2)) - 
      2*mz^4*(s - s*sw^2)^2*(-69*d^2*(2*Pi)^(3*d)*s^2 + 
        2^(1 + 3*d)*Pi^(3*d)*(2*s^2*(3*d^3 + 4*d^2*sw^2*(-5 + 8*sw^2) + 
            d*(33 + 75*sw^2 - 120*sw^4) + 7*(-3 - 10*sw^2 + 16*sw^4)) + 
          s*(-81*d^2 + 12*d^3 - 56*(3 - 5*sw^2 + 8*sw^4) + 
            d*(201 - 160*sw^2 + 256*sw^4))*t + 2*(-7 + 4*d)*
           (3 - 20*sw^2 + 32*sw^4)*t^2)) - 
      2*((2*Pi)^(3*d)*s^4*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
            4*d*(-3 - 5*sw^2 + 8*sw^4)) + 2*s*(-15*d + 3*d^2 + 
            8*(3 - 5*sw^2 + 8*sw^4))*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2) + 
        2^(1 + 3*d)*mz^8*Pi^(3*d)*(-1 + sw^2)^4*
         (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
          2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          4*(3 - 20*sw^2 + 32*sw^4)*t^2) + mz^6*s*(1 - sw^2)^3*
         (-75*d^2*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
           (2*s^2*(3*d^3 + 4*d^2*sw^2*(-5 + 8*sw^2) + d*(39 + 85*sw^2 - 
                136*sw^4) + 9*(-3 - 10*sw^2 + 16*sw^4)) + 
            s*(-87*d^2 + 12*d^3 - 72*(3 - 5*sw^2 + 8*sw^4) + 
              d*(231 - 160*sw^2 + 256*sw^4))*t + 2*(-9 + 4*d)*
             (3 - 20*sw^2 + 32*sw^4)*t^2)) + mz^2*s^3*(1 - sw^2)*
         (-69*d^2*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
           (2*s^2*(3*d^3 + 4*d^2*sw^2*(-5 + 8*sw^2) + d*(33 + 75*sw^2 - 
                120*sw^4) + 7*(-3 - 10*sw^2 + 16*sw^4)) + 
            s*(-81*d^2 + 12*d^3 - 56*(3 - 5*sw^2 + 8*sw^4) + 
              d*(201 - 160*sw^2 + 256*sw^4))*t + 2*(-7 + 4*d)*
             (3 - 20*sw^2 + 32*sw^4)*t^2)) - mz^4*(s - s*sw^2)^2*
         (-135*d^2*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
           (2*s^2*(6*d^3 + 8*d^2*sw^2*(-5 + 8*sw^2) + d*(63 + 145*sw^2 - 
                232*sw^4) + 13*(-3 - 10*sw^2 + 16*sw^4)) + 
            s*(-159*d^2 + 24*d^3 - 104*(3 - 5*sw^2 + 8*sw^4) + 
              d*(387 - 320*sw^2 + 512*sw^4))*t + 2*(-13 + 8*d)*
             (3 - 20*sw^2 + 32*sw^4)*t^2)))*GaugeXi[W] + 
      ((2*Pi)^(3*d)*s^4*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
            4*d*(-3 - 5*sw^2 + 8*sw^4)) + 2*s*(-15*d + 3*d^2 + 
            8*(3 - 5*sw^2 + 8*sw^4))*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2) + 
        3*2^(1 + 3*d)*mz^8*Pi^(3*d)*(-1 + sw^2)^4*
         (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
          2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          4*(3 - 20*sw^2 + 32*sw^4)*t^2) + 4*mz^2*s^3*(1 - sw^2)*
         (3*(-5 + d)*d^2*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
           (2*s^2*(-3 - 10*sw^2 + 16*sw^4 + d^2*sw^2*(-5 + 8*sw^2) + 
              d*(6 + 15*sw^2 - 24*sw^4)) + s*(-18*d^2 + 3*d^3 - 
              8*(3 - 5*sw^2 + 8*sw^4) + d*(39 - 40*sw^2 + 64*sw^4))*t + 
            2*(-1 + d)*(3 - 20*sw^2 + 32*sw^4)*t^2)) + 2*mz^6*s*(1 - sw^2)^3*
         (-45*d^2*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
           (s^2*(3*d^3 + 4*d^2*sw^2*(-5 + 8*sw^2) + d*(54 + 110*sw^2 - 
                176*sw^4) + 14*(-3 - 10*sw^2 + 16*sw^4)) + 
            s*(-51*d^2 + 6*d^3 - 56*(3 - 5*sw^2 + 8*sw^4) + 
              d*(153 - 80*sw^2 + 128*sw^4))*t + 2*(-7 + 2*d)*
             (3 - 20*sw^2 + 32*sw^4)*t^2)) - mz^4*(s - s*sw^2)^2*
         (-129*d^2*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
           (2*s^2*(6*d^3 + 8*d^2*sw^2*(-5 + 8*sw^2) + d*(57 + 135*sw^2 - 
                216*sw^4) + 11*(-3 - 10*sw^2 + 16*sw^4)) + 
            s*(-153*d^2 + 24*d^3 - 88*(3 - 5*sw^2 + 8*sw^4) + 
              d*(357 - 320*sw^2 + 512*sw^4))*t + 2*(-11 + 8*d)*
             (3 - 20*sw^2 + 32*sw^4)*t^2)))*GaugeXi[W]^2 - 
      2^(1 + 3*d)*mz^2*Pi^(3*d)*(1 - sw^2)*(s - 2*mz^2*(-1 + sw^2))*
       (s + mz^2*(-1 + sw^2))^2*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
          4*d*(-3 - 5*sw^2 + 8*sw^4)) + 2*s*(-15*d + 3*d^2 + 
          8*(3 - 5*sw^2 + 8*sw^4))*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2)*
       GaugeXi[W]^3 + mz^4*(2*Pi)^(3*d)*(-1 + sw^2)^2*(s + mz^2*(-1 + sw^2))^
        2*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
          4*d*(-3 - 5*sw^2 + 8*sw^4)) + 2*s*(-15*d + 3*d^2 + 
          8*(3 - 5*sw^2 + 8*sw^4))*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2)*
       GaugeXi[W]^4))/(2^(4*(1 + d))*(-1 + d)*mz^4*Pi^(4*d)*(mz^2 - s)^2*s^2*
     sw^4*(-1 + sw^2)^2*(-1 + GaugeXi[W])^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, ((I/9)*2^(-7 - d)*EL^6*s^2*
     (s^2*(3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
        4*d*(-9 + 30*swC^2 - 24*swC^4 + sw^2*(30 - 22*swC^2 - 40*swC^4) + 
          8*sw^4*(-3 - 5*swC^2 + 8*swC^4)) - 4*(-9 + 30*swC^2 - 24*swC^4 + 
          sw^2*(30 + 4*swC^2 - 80*swC^4) + 8*sw^4*(-3 - 10*swC^2 + 
            16*swC^4))) + 2*s*(-15*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2)) + 3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
          sw^2*(-30 + 74*swC^2 - 40*swC^4) + 8*sw^4*(3 - 5*swC^2 + 8*swC^4)))*
       t + 4*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 
        2*sw^2*(15 - 76*swC^2 + 80*swC^4))*t^2))/(cwC^2*(-1 + d)*mz^4*Pi^d*
     (mz^2 - s)^3*sw^4*(-1 + sw^2)^2*swC^2), 
   ((-I/9)*2^(-8 - d)*EL^6*s^2*
     (s^2*(3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
        4*d*(-9 + 30*swC^2 - 24*swC^4 + sw^2*(30 - 22*swC^2 - 40*swC^4) + 
          8*sw^4*(-3 - 5*swC^2 + 8*swC^4)) - 4*(-9 + 30*swC^2 - 24*swC^4 + 
          sw^2*(30 + 4*swC^2 - 80*swC^4) + 8*sw^4*(-3 - 10*swC^2 + 
            16*swC^4))) + 2*s*(-15*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2)) + 3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
          sw^2*(-30 + 74*swC^2 - 40*swC^4) + 8*sw^4*(3 - 5*swC^2 + 8*swC^4)))*
       t + 4*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 
        2*sw^2*(15 - 76*swC^2 + 80*swC^4))*t^2)*
     (s + 4*mz^2*(-1 + sw^2)*GaugeXi[W]))/(cwC^2*(-1 + d)*mz^4*Pi^d*
     (mz^2 - s)^3*sw^4*(-1 + sw^2)^2*swC^2), 
   ((I/9)*2^(-7 - 2*d)*EL^6*
     (s*(3*2^(2 + d)*d^4*Pi^d*s^3*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2))*(s + 2*t) - 16*mz^2*s*(1 - sw^2)*
         (s^2*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*(3*swC^2*(-5 + 4*swC^2) + 
              sw^4*(12 + 40*swC^2 - 64*swC^4) + sw^2*(-15 - 2*swC^2 + 
                40*swC^4))) + 2^(2 + d)*Pi^d*s*(9 - 30*swC^2 + 24*swC^4 + 
            sw^2*(-30 + 74*swC^2 - 40*swC^4) + 8*sw^4*(3 - 5*swC^2 + 
              8*swC^4))*t + (9*(2*Pi)^d + 2^(1 + d)*Pi^d*
             (3*swC^2*(-5 + 4*swC^2) + sw^2*(-15 + 76*swC^2 - 80*swC^4) + 
              4*sw^4*(3 - 20*swC^2 + 32*swC^4)))*t^2) - 
        4*d*(7*s^2*(s^2*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*(3*swC^2*(-5 + 
                  4*swC^2) + sw^4*(12 + 40*swC^2 - 64*swC^4) + 
                sw^2*(-15 - 2*swC^2 + 40*swC^4))) + 2^(2 + d)*Pi^d*s*
             (9 - 30*swC^2 + 24*swC^4 + sw^2*(-30 + 74*swC^2 - 40*swC^4) + 
              8*sw^4*(3 - 5*swC^2 + 8*swC^4))*t + 
            (9*(2*Pi)^d + 2^(1 + d)*Pi^d*(3*swC^2*(-5 + 4*swC^2) + 
                sw^2*(-15 + 76*swC^2 - 80*swC^4) + 4*sw^4*(3 - 20*swC^2 + 
                  32*swC^4)))*t^2) + mz^4*(-1 + sw^2)^2*
           (s^2*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*(3*swC^2*(-5 + 4*swC^2) + 
                sw^4*(12 + 40*swC^2 - 64*swC^4) + sw^2*(-15 - 2*swC^2 + 
                  40*swC^4))) + 2^(2 + d)*Pi^d*s*(9 - 30*swC^2 + 24*swC^4 + 
              sw^2*(-30 + 74*swC^2 - 40*swC^4) + 8*sw^4*(3 - 5*swC^2 + 
                8*swC^4))*t + (9*(2*Pi)^d + 2^(1 + d)*Pi^d*(3*swC^2*
                 (-5 + 4*swC^2) + sw^2*(-15 + 76*swC^2 - 80*swC^4) + 
                4*sw^4*(3 - 20*swC^2 + 32*swC^4)))*t^2) - 
          mz^2*s*(1 - sw^2)*(s^2*(81*(2*Pi)^d + 2^(1 + d)*Pi^d*(
                27*swC^2*(-5 + 4*swC^2) + sw^4*(108 + 280*swC^2 - 
                  448*swC^4) + sw^2*(-135 + 34*swC^2 + 280*swC^4))) + 
            5*2^(1 + d)*Pi^d*s*(9*(3 - 10*swC^2 + 8*swC^4) + 
              8*sw^4*(9 - 10*swC^2 + 16*swC^4) - 2*sw^2*(45 - 98*swC^2 + 
                40*swC^4))*t + 5*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*(3*swC^2*
                 (-5 + 4*swC^2) + sw^2*(-15 + 76*swC^2 - 80*swC^4) + 
                4*sw^4*(3 - 20*swC^2 + 32*swC^4)))*t^2)) - 
        d^3*s*(-(s^2*(-99*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-54 + 345*swC^2 - 
                 276*swC^4 + sw^2*(345 - 344*swC^2 - 320*swC^4) + 
                 4*sw^4*(-69 - 80*swC^2 + 128*swC^4)) - 81*(3 + 8*sw^4 - 
                 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2))*t))) + 
          3*mz^4*(-1 + sw^2)^2*(-33*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
             (s*(18 + 4*sw^4 - 5*swC^2 + 4*swC^4 + sw^2*(-5 + 8*swC^2)) + 
              (3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2))*t)) - 
          3*mz^2*s*(1 - sw^2)*(129*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
             (s*(-57 + 20*sw^4 - 25*swC^2 + 20*swC^4 + 5*sw^2*(-5 + 
                  8*swC^2)) + 5*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
                2*sw^2*(-5 + 8*swC^2))*t))) - 
        2*d^2*s*(-(mz^2*s*(1 - sw^2)*(-261*(2*Pi)^d*t + 2^(1 + d)*Pi^d*
              (2*s*(sw^2*(90 - 79*swC^2 - 100*swC^4) - 9*(3 - 10*swC^2 + 
                   8*swC^4) + 4*sw^4*(-18 - 25*swC^2 + 40*swC^4)) - 87*
                (4*sw^4 + swC^2*(-5 + 4*swC^2) + sw^2*(-5 + 8*swC^2))*t))) + 
          mz^4*(-1 + sw^2)^2*(-45*(2*Pi)^d*t + 2^(1 + d)*Pi^d*
             (s*(-9 + 30*swC^2 - 24*swC^4 + sw^2*(30 - 22*swC^2 - 40*swC^4) + 
                8*sw^4*(-3 - 5*swC^2 + 8*swC^4)) - 15*(4*sw^4 + 
                swC^2*(-5 + 4*swC^2) + sw^2*(-5 + 8*swC^2))*t)) + 
          s*(-603*(2*Pi)^d*s*t + 2^(1 + d)*Pi^d*
             (3*s^2*(-11*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(-11 - 25*swC^2 + 
                  40*swC^4) - 2*sw^2*(-55 + 23*swC^2 + 100*swC^4)) + 
              s*(201*swC^2*(5 - 4*swC^2) - 4*sw^4*(201 - 160*swC^2 + 
                  256*swC^4) + sw^2*(1005 - 2024*swC^2 + 640*swC^4))*t - 
              4*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 
                2*sw^2*(15 - 76*swC^2 + 80*swC^4))*t^2)))) + 
      mz^2*(-3*2^(2 + d)*d^4*Pi^d*s^3*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
          2*sw^2*(-5 + 8*swC^2))*(s + 2*t) + 16*mz^2*s*(1 - sw^2)*
         (s^2*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*(3*swC^2*(-5 + 4*swC^2) + 
              sw^4*(12 + 40*swC^2 - 64*swC^4) + sw^2*(-15 - 2*swC^2 + 
                40*swC^4))) + 2^(2 + d)*Pi^d*s*(9 - 30*swC^2 + 24*swC^4 + 
            sw^2*(-30 + 74*swC^2 - 40*swC^4) + 8*sw^4*(3 - 5*swC^2 + 
              8*swC^4))*t + (9*(2*Pi)^d + 2^(1 + d)*Pi^d*
             (3*swC^2*(-5 + 4*swC^2) + sw^2*(-15 + 76*swC^2 - 80*swC^4) + 
              4*sw^4*(3 - 20*swC^2 + 32*swC^4)))*t^2) + 
        4*d*(7*s^2*(s^2*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*(3*swC^2*(-5 + 
                  4*swC^2) + sw^4*(12 + 40*swC^2 - 64*swC^4) + 
                sw^2*(-15 - 2*swC^2 + 40*swC^4))) + 2^(2 + d)*Pi^d*s*
             (9 - 30*swC^2 + 24*swC^4 + sw^2*(-30 + 74*swC^2 - 40*swC^4) + 
              8*sw^4*(3 - 5*swC^2 + 8*swC^4))*t + 
            (9*(2*Pi)^d + 2^(1 + d)*Pi^d*(3*swC^2*(-5 + 4*swC^2) + 
                sw^2*(-15 + 76*swC^2 - 80*swC^4) + 4*sw^4*(3 - 20*swC^2 + 
                  32*swC^4)))*t^2) + mz^4*(-1 + sw^2)^2*
           (s^2*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*(3*swC^2*(-5 + 4*swC^2) + 
                sw^4*(12 + 40*swC^2 - 64*swC^4) + sw^2*(-15 - 2*swC^2 + 
                  40*swC^4))) + 2^(2 + d)*Pi^d*s*(9 - 30*swC^2 + 24*swC^4 + 
              sw^2*(-30 + 74*swC^2 - 40*swC^4) + 8*sw^4*(3 - 5*swC^2 + 
                8*swC^4))*t + (9*(2*Pi)^d + 2^(1 + d)*Pi^d*(3*swC^2*
                 (-5 + 4*swC^2) + sw^2*(-15 + 76*swC^2 - 80*swC^4) + 
                4*sw^4*(3 - 20*swC^2 + 32*swC^4)))*t^2) - 
          mz^2*s*(1 - sw^2)*(s^2*(81*(2*Pi)^d + 2^(1 + d)*Pi^d*(
                27*swC^2*(-5 + 4*swC^2) + sw^4*(108 + 280*swC^2 - 
                  448*swC^4) + sw^2*(-135 + 34*swC^2 + 280*swC^4))) + 
            5*2^(1 + d)*Pi^d*s*(9*(3 - 10*swC^2 + 8*swC^4) + 
              8*sw^4*(9 - 10*swC^2 + 16*swC^4) - 2*sw^2*(45 - 98*swC^2 + 
                40*swC^4))*t + 5*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*(3*swC^2*
                 (-5 + 4*swC^2) + sw^2*(-15 + 76*swC^2 - 80*swC^4) + 
                4*sw^4*(3 - 20*swC^2 + 32*swC^4)))*t^2)) + 
        d^3*s*(-(s^2*(-99*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-54 + 345*swC^2 - 
                 276*swC^4 + sw^2*(345 - 344*swC^2 - 320*swC^4) + 
                 4*sw^4*(-69 - 80*swC^2 + 128*swC^4)) - 81*(3 + 8*sw^4 - 
                 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2))*t))) - 
          15*mz^2*s*(1 - sw^2)*(15*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
             (s*(-6 + 4*sw^4 - 5*swC^2 + 4*swC^4 + sw^2*(-5 + 8*swC^2)) + 
              (3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2))*t)) + 
          3*mz^4*(-1 + sw^2)^2*(-21*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
             (s*(12 + 4*sw^4 - 5*swC^2 + 4*swC^4 + sw^2*(-5 + 8*swC^2)) + 
              (3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2))*
               t))) + 2*d^2*s*(-(mz^2*s*(1 - sw^2)*(-261*(2*Pi)^d*t + 
             2^(1 + d)*Pi^d*(2*s*(sw^2*(90 - 79*swC^2 - 100*swC^4) - 
                 9*(3 - 10*swC^2 + 8*swC^4) + 4*sw^4*(-18 - 25*swC^2 + 
                   40*swC^4)) - 87*(4*sw^4 + swC^2*(-5 + 4*swC^2) + 
                 sw^2*(-5 + 8*swC^2))*t))) + mz^4*(-1 + sw^2)^2*
           (-45*(2*Pi)^d*t + 2^(1 + d)*Pi^d*(s*(-9 + 30*swC^2 - 24*swC^4 + 
                sw^2*(30 - 22*swC^2 - 40*swC^4) + 8*sw^4*(-3 - 5*swC^2 + 
                  8*swC^4)) - 15*(4*sw^4 + swC^2*(-5 + 4*swC^2) + 
                sw^2*(-5 + 8*swC^2))*t)) + s*(-603*(2*Pi)^d*s*t + 
            2^(1 + d)*Pi^d*(3*s^2*(-11*(3 - 10*swC^2 + 8*swC^4) + 
                8*sw^4*(-11 - 25*swC^2 + 40*swC^4) - 2*sw^2*(-55 + 23*swC^2 + 
                  100*swC^4)) + s*(201*swC^2*(5 - 4*swC^2) - 4*sw^4*
                 (201 - 160*swC^2 + 256*swC^4) + sw^2*(1005 - 2024*swC^2 + 
                  640*swC^4))*t - 4*(9 - 30*swC^2 + 24*swC^4 + 
                8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
                  80*swC^4))*t^2))))*GaugeXi[Z] + d*(s + mz^2*(-1 + sw^2))^2*
       (9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(3*d^2*(4*sw^4 + swC^2*(-5 + 4*swC^2) + sw^2*(-5 + 8*swC^2)) + 
            2*d*(-9 + 30*swC^2 - 24*swC^4 + sw^2*(30 - 22*swC^2 - 40*swC^4) + 
              8*sw^4*(-3 - 5*swC^2 + 8*swC^4)) + 2*(9 - 30*swC^2 + 24*swC^4 + 
              sw^4*(24 + 80*swC^2 - 128*swC^4) + sw^2*(-30 - 4*swC^2 + 
                80*swC^4))) + s*(-15*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
              2*sw^2*(-5 + 8*swC^2)) + 3*d^2*(3 + 8*sw^4 - 10*swC^2 + 
              8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
              sw^2*(-30 + 74*swC^2 - 40*swC^4) + 8*sw^4*(3 - 5*swC^2 + 
                8*swC^4)))*t + 2*(9 - 30*swC^2 + 24*swC^4 + 
            8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
              80*swC^4))*t^2))*GaugeXi[W]*(s - mz^2*GaugeXi[Z])))/
    (cwC^2*(-1 + d)*d*mz^2*Pi^(2*d)*(mz^2 - s)^2*s*(-mz^2 + s)*sw^4*
     (-1 + sw^2)*swC^2*(s - mz^2*GaugeXi[Z])), 
   ((-I/9)*EL^6*((2^(1 + d)*Pi^d*s*(s^2 + 4*mz^2*s*(-1 + sw^2) + 
         4*(-1 + d)*mz^4*(-1 + sw^2)^2)*(d*s^2 + 4*d*mz^2*s*(-1 + sw^2) + 
         4*(-1 + d)*mz^4*(-1 + sw^2)^2)*(9 - 30*swC^2 + 24*swC^4 + 
         8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
           80*swC^4)))/(-1 + d) - 2^(1 + d)*Pi^d*(-s - 2*mz^2*(-1 + sw^2))*
       (-s/2 - mz^2*(-1 + sw^2))*(s^2 + 4*mz^2*s*(-1 + sw^2) + 
        4*(-1 + d)*mz^4*(-1 + sw^2)^2)*
       (s*(3*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
          2*(-9 + 30*swC^2 - 24*swC^4 + sw^2*(30 + 4*swC^2 - 80*swC^4) + 
            8*sw^4*(-3 - 10*swC^2 + 16*swC^4))) - 
        2*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 
          2*sw^2*(15 - 76*swC^2 + 80*swC^4))*t) + 
      ((2*Pi)^d*(s^2 + 4*mz^2*s*(-1 + sw^2) + 4*(-1 + d)*mz^4*(-1 + sw^2)^2)*
        (s*(3*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) - 
           4*(9 - 30*swC^2 + 24*swC^4 + sw^2*(-30 + 74*swC^2 - 40*swC^4) + 
             8*sw^4*(3 - 5*swC^2 + 8*swC^4))) - 2*(9 - 30*swC^2 + 24*swC^4 + 
           8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
             80*swC^4))*t)*(4*(-1 + d)*mz^4*(-1 + sw^2)^2 + s*(d*s + 2*t) + 
         4*mz^2*(-1 + sw^2)*(d*s + 2*t)))/(-1 + d) - 
      2*(-s/2 - mz^2*(-1 + sw^2))*
       (s^3*(9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(9 - 30*swC^2 + 24*swC^4 + 
              sw^4*(24 + 80*swC^2 - 128*swC^4) + sw^2*(-30 - 4*swC^2 + 
                80*swC^4) - 3*d*(3 + 4*sw^4 - 5*swC^2 + 4*swC^4 + 
                sw^2*(-5 + 8*swC^2))) + (9 - 30*swC^2 + 24*swC^4 + 
              8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
                80*swC^4))*t)) + 8*mz^6*(1 - sw^2)^3*
         (9*(-3 + d)*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
           (s*(3*(3 - 5*(2 - 3*d + d^2)*swC^2 + 4*(2 - 3*d + d^2)*swC^4) + 
              sw^2*(-30 - 4*swC^2 + 80*swC^4 + 3*d^2*(-5 + 8*swC^2) - 
                5*d*(-9 + 4*swC^2 + 16*swC^4)) + 4*sw^4*(6 + 3*d^2 + 
                20*swC^2 - 32*swC^4 + d*(-9 - 20*swC^2 + 32*swC^4))) - 
            (-1 + d)*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 
                32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 80*swC^4))*t)) - 
        4*mz^4*s*(-1 + sw^2)^2*(9*(-1 + d)*d*(2*Pi)^d*s + 
          2^(1 + d)*Pi^d*(s*(3*(-3 - 5*(-2 - d + d^2)*swC^2 + 
                4*(-2 - d + d^2)*swC^4) + sw^2*(30 + 4*swC^2 - 80*swC^4 + 
                3*d^2*(-5 + 8*swC^2) + d*(15 + 28*swC^2 - 80*swC^4)) + 
              4*sw^4*(-6 + 3*d^2 - 20*swC^2 + 32*swC^4 + d*(-3 - 20*swC^2 + 
                  32*swC^4))) - (1 + d)*(9 - 30*swC^2 + 24*swC^4 + 
              8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
                80*swC^4))*t)) + 6*mz^2*s^2*(1 - sw^2)*(9*d*(2*Pi)^d*s + 
          2^(1 + d)*Pi^d*(s*(4*sw^4*(-6 + 3*d - 20*swC^2 + 32*swC^4) + 
              3*(-3 - 5*(-2 + d)*swC^2 + 4*(-2 + d)*swC^4) + 
              sw^2*(30 + 4*swC^2 - 80*swC^4 + 3*d*(-5 + 8*swC^2))) + 
            (-9 + 30*swC^2 - 24*swC^4 - 8*sw^4*(3 - 20*swC^2 + 32*swC^4) + 
              2*sw^2*(15 - 76*swC^2 + 80*swC^4))*t))) + 
      2*(-(s^4*(9*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(4*sw^4*(-6 + 3*d - 20*swC^2 + 
               32*swC^4) + 3*(-3 - 5*(-2 + d)*swC^2 + 4*(-2 + d)*swC^4) + 
             sw^2*(30 + 4*swC^2 - 80*swC^4 + 3*d*(-5 + 8*swC^2))))*t) + 
        8*mz^8*(-1 + sw^2)^4*(9*(-3 + d)*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
           (s*(3*(3 - 5*(2 - 3*d + d^2)*swC^2 + 4*(2 - 3*d + d^2)*swC^4) + 
              sw^2*(-30 - 4*swC^2 + 80*swC^4 + 3*d^2*(-5 + 8*swC^2) - 
                5*d*(-9 + 4*swC^2 + 16*swC^4)) + 4*sw^4*(6 + 3*d^2 + 
                20*swC^2 - 32*swC^4 + d*(-9 - 20*swC^2 + 32*swC^4))) - 
            (-1 + d)*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 
                32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 80*swC^4))*t)) - 
        8*mz^6*s*(1 - sw^2)^3*(9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
           (s*(4*sw^4*(-6 + 3*d - 20*swC^2 + 32*swC^4) + 3*(-3 - 
                5*(-2 + d)*swC^2 + 4*(-2 + d)*swC^4) + sw^2*(30 + 4*swC^2 - 
                80*swC^4 + 3*d*(-5 + 8*swC^2))) + 
            (-9*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) - 
              3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 
                  8*swC^2)) + d*(9*(3 - 10*swC^2 + 8*swC^4) + 10*sw^2*
                 (-9 + 4*swC^2 + 16*swC^4) - 8*sw^4*(-9 - 20*swC^2 + 
                  32*swC^4)))*t)) - 4*mz^2*(1 - sw^2)*(9*d^2*(2*Pi)^d*s^4 + 
          2^(1 + d)*Pi^d*s^2*(s^2*(3*d^2*(4*sw^4 + swC^2*(-5 + 4*swC^2) + 
                sw^2*(-5 + 8*swC^2)) + 2*d*(-9 + 30*swC^2 - 24*swC^4 + 
                sw^2*(30 - 22*swC^2 - 40*swC^4) + 8*sw^4*(-3 - 5*swC^2 + 
                  8*swC^4)) + 2*(9 - 30*swC^2 + 24*swC^4 + 
                sw^4*(24 + 80*swC^2 - 128*swC^4) + sw^2*(-30 - 4*swC^2 + 
                  80*swC^4))) + s*(30*(3 - 10*swC^2 + 8*swC^4) + 
              16*sw^4*(15 - 10*swC^2 + 16*swC^4) - 4*sw^2*(75 - 146*swC^2 + 
                40*swC^4) - 18*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
                2*sw^2*(-5 + 8*swC^2)) + 3*d^2*(3 + 8*sw^4 - 10*swC^2 + 
                8*swC^4 + 2*sw^2*(-5 + 8*swC^2)))*t + 
            2*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 
              2*sw^2*(15 - 76*swC^2 + 80*swC^4))*t^2)) + 
        2*mz^4*(-1 + sw^2)^2*(-279*d*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
           (s^2*(12*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*
                 (-5 + 8*swC^2)) - 15*(-9 + 30*swC^2 - 24*swC^4 + 
                sw^2*(30 + 4*swC^2 - 80*swC^4) + 8*sw^4*(-3 - 10*swC^2 + 
                  16*swC^4)) + d*(93*swC^2*(5 - 4*swC^2) + 
                sw^2*(465 - 328*swC^2 - 640*swC^4) + 4*sw^4*(-93 - 
                  160*swC^2 + 256*swC^4))) + s*(21*d^2*(3 + 8*sw^4 - 
                10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
              d*(-123*(3 - 10*swC^2 + 8*swC^4) - 8*sw^4*(123 - 20*swC^2 + 
                  32*swC^4) + 2*sw^2*(615 - 1036*swC^2 + 80*swC^4)) + 
              3*(69*(3 - 10*swC^2 + 8*swC^4) - 10*sw^2*(69 - 152*swC^2 + 
                  64*swC^4) + 8*sw^4*(69 - 80*swC^2 + 128*swC^4)))*t + 
            16*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 
              2*sw^2*(15 - 76*swC^2 + 80*swC^4))*t^2)))))/
    (2^(2*(4 + d))*cwC^2*mz^4*Pi^(2*d)*(mz^2 - s)^2*(-mz^2 + s)*sw^4*
     (-1 + sw^2)^2*swC^2), 0, 0, 0, 
   ((I/9)*2^(-7 - 2*d)*EL^6*(d*(-s - mz^2*(-1 + sw^2))*
       (9*d^2*(2*Pi)^d*s^4 + 2^(1 + d)*Pi^d*s^2*
         (s^2*(3*d^2*(4*sw^4 + swC^2*(-5 + 4*swC^2) + sw^2*(-5 + 8*swC^2)) + 
            2*d*(-9 + 30*swC^2 - 24*swC^4 + sw^2*(30 - 22*swC^2 - 40*swC^4) + 
              8*sw^4*(-3 - 5*swC^2 + 8*swC^4)) + 2*(9 - 30*swC^2 + 24*swC^4 + 
              sw^4*(24 + 80*swC^2 - 128*swC^4) + sw^2*(-30 - 4*swC^2 + 
                80*swC^4))) + s*(-15*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
              2*sw^2*(-5 + 8*swC^2)) + 3*d^2*(3 + 8*sw^4 - 10*swC^2 + 
              8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
              sw^2*(-30 + 74*swC^2 - 40*swC^4) + 8*sw^4*(3 - 5*swC^2 + 
                8*swC^4)))*t + 2*(9 - 30*swC^2 + 24*swC^4 + 
            8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
              80*swC^4))*t^2) + mz^4*(-1 + sw^2)^2*(9*d^2*(2*Pi)^d*s^2 + 
          2^(1 + d)*Pi^d*(s^2*(3*d^2*(4*sw^4 + swC^2*(-5 + 4*swC^2) + 
                sw^2*(-5 + 8*swC^2)) + 2*d*(-9 + 30*swC^2 - 24*swC^4 + 
                sw^2*(30 - 22*swC^2 - 40*swC^4) + 8*sw^4*(-3 - 5*swC^2 + 
                  8*swC^4)) + 2*(9 - 30*swC^2 + 24*swC^4 + 
                sw^4*(24 + 80*swC^2 - 128*swC^4) + sw^2*(-30 - 4*swC^2 + 
                  80*swC^4))) + s*(-15*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
                2*sw^2*(-5 + 8*swC^2)) + 3*d^2*(3 + 8*sw^4 - 10*swC^2 + 
                8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 8*(9 - 30*swC^2 + 
                24*swC^4 + sw^2*(-30 + 74*swC^2 - 40*swC^4) + 8*sw^4*
                 (3 - 5*swC^2 + 8*swC^4)))*t + 2*(9 - 30*swC^2 + 24*swC^4 + 
              8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
                80*swC^4))*t^2)) + 2*mz^2*s*(1 - sw^2)*
         (-99*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
           (s^2*(3*d^3*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*
                 (-5 + 8*swC^2)) + 6*(-9 + 30*swC^2 - 24*swC^4 + 
                sw^2*(30 + 4*swC^2 - 80*swC^4) + 8*sw^4*(-3 - 10*swC^2 + 
                  16*swC^4)) + d^2*(33*swC^2*(5 - 4*swC^2) - 5*sw^2*
                 (-33 + 32*swC^2 + 32*swC^4) + 4*sw^4*(-33 - 40*swC^2 + 
                  64*swC^4)) + d*(sw^4*(240 + 560*swC^2 - 896*swC^4) + 
                30*(3 - 10*swC^2 + 8*swC^4) + 4*sw^2*(-75 + 29*swC^2 + 
                  140*swC^4))) + s*(-39*d^2*(3 + 8*sw^4 - 10*swC^2 + 
                8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 6*d^3*(3 + 8*sw^4 - 
                10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) - 
              24*(9 - 30*swC^2 + 24*swC^4 + sw^2*(-30 + 74*swC^2 - 
                  40*swC^4) + 8*sw^4*(3 - 5*swC^2 + 8*swC^4)) + 
              d*(93*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(93 - 80*swC^2 + 
                  128*swC^4) - 2*sw^2*(465 - 952*swC^2 + 320*swC^4)))*t + 
            2*(-3 + 2*d)*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 
                32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 80*swC^4))*t^2))) + 
      mz^2*(1 - sw^2)*(3*2^(2 + d)*d^4*mz^2*Pi^d*s^2*(1 - sw^2)*
         (3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2))*
         (s + 2*t) + 16*mz^2*s*(1 - sw^2)*
         (s^2*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*(3*swC^2*(-5 + 4*swC^2) + 
              sw^4*(12 + 40*swC^2 - 64*swC^4) + sw^2*(-15 - 2*swC^2 + 
                40*swC^4))) + 2^(2 + d)*Pi^d*s*(9 - 30*swC^2 + 24*swC^4 + 
            sw^2*(-30 + 74*swC^2 - 40*swC^4) + 8*sw^4*(3 - 5*swC^2 + 
              8*swC^4))*t + (9*(2*Pi)^d + 2^(1 + d)*Pi^d*
             (3*swC^2*(-5 + 4*swC^2) + sw^2*(-15 + 76*swC^2 - 80*swC^4) + 
              4*sw^4*(3 - 20*swC^2 + 32*swC^4)))*t^2) - 
        d^3*s*(-(2^(1 + d)*mz^2*Pi^d*s*(1 - sw^2)*
            (s*(-33*(3 - 10*swC^2 + 8*swC^4) - 10*sw^2*(-33 + 32*swC^2 + 
                 32*swC^4) + 8*sw^4*(-33 - 40*swC^2 + 64*swC^4)) - 
             78*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2))*
              t)) + 3*s^2*(s*(3*(2*Pi)^d + 2^(1 + d)*Pi^d*(4*sw^4 + 
                swC^2*(-5 + 4*swC^2) + sw^2*(-5 + 8*swC^2))) + 
            2^(1 + d)*Pi^d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
              2*sw^2*(-5 + 8*swC^2))*t) + 3*mz^4*(-1 + sw^2)^2*
           (s*(3*(2*Pi)^d + 2^(1 + d)*Pi^d*(4*sw^4 + swC^2*(-5 + 4*swC^2) + 
                sw^2*(-5 + 8*swC^2))) + 2^(1 + d)*Pi^d*(3 + 8*sw^4 - 
              10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2))*t)) + 
        2^(1 + d)*d^2*Pi^d*s*(s^2*(s*(6*(3 - 10*swC^2 + 8*swC^4) - 
              16*sw^4*(-3 - 5*swC^2 + 8*swC^4) + sw^2*(-60 + 44*swC^2 + 
                80*swC^4)) + 15*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
              2*sw^2*(-5 + 8*swC^2))*t) + mz^4*(-1 + sw^2)^2*
           (s*(6*(3 - 10*swC^2 + 8*swC^4) - 16*sw^4*(-3 - 5*swC^2 + 
                8*swC^4) + sw^2*(-60 + 44*swC^2 + 80*swC^4)) + 
            15*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2))*t) - 
          2*mz^2*(1 - sw^2)*(s^2*(-33*(3 - 10*swC^2 + 8*swC^4) + 
              8*sw^4*(-33 - 70*swC^2 + 112*swC^4) - 2*sw^2*(-165 + 82*swC^2 + 
                280*swC^4)) + s*(-99*(3 - 10*swC^2 + 8*swC^4) + 
              10*sw^2*(99 - 200*swC^2 + 64*swC^4) - 8*sw^4*(99 - 80*swC^2 + 
                128*swC^4))*t - 4*(9 - 30*swC^2 + 24*swC^4 + 
              8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
                80*swC^4))*t^2)) - 
        4*d*(s^2*(s^2*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*(3*swC^2*(-5 + 4*swC^2) + 
                sw^4*(12 + 40*swC^2 - 64*swC^4) + sw^2*(-15 - 2*swC^2 + 
                  40*swC^4))) + 2^(2 + d)*Pi^d*s*(9 - 30*swC^2 + 24*swC^4 + 
              sw^2*(-30 + 74*swC^2 - 40*swC^4) + 8*sw^4*(3 - 5*swC^2 + 
                8*swC^4))*t + (9*(2*Pi)^d + 2^(1 + d)*Pi^d*(3*swC^2*
                 (-5 + 4*swC^2) + sw^2*(-15 + 76*swC^2 - 80*swC^4) + 
                4*sw^4*(3 - 20*swC^2 + 32*swC^4)))*t^2) + 
          mz^4*(-1 + sw^2)^2*(s^2*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*(
                3*swC^2*(-5 + 4*swC^2) + sw^4*(12 + 40*swC^2 - 64*swC^4) + 
                sw^2*(-15 - 2*swC^2 + 40*swC^4))) + 2^(2 + d)*Pi^d*s*
             (9 - 30*swC^2 + 24*swC^4 + sw^2*(-30 + 74*swC^2 - 40*swC^4) + 
              8*sw^4*(3 - 5*swC^2 + 8*swC^4))*t + 
            (9*(2*Pi)^d + 2^(1 + d)*Pi^d*(3*swC^2*(-5 + 4*swC^2) + 
                sw^2*(-15 + 76*swC^2 - 80*swC^4) + 4*sw^4*(3 - 20*swC^2 + 
                  32*swC^4)))*t^2) + 2*mz^2*s*(1 - sw^2)*
           (s^2*(45*(2*Pi)^d + 2^(1 + d)*Pi^d*(15*swC^2*(-5 + 4*swC^2) + 
                sw^4*(60 + 160*swC^2 - 256*swC^4) + sw^2*(-75 + 16*swC^2 + 
                  160*swC^4))) + 3*s*(51*(2*Pi)^d + 2^(1 + d)*Pi^d*(
                17*swC^2*(-5 + 4*swC^2) + sw^2*(-85 + 188*swC^2 - 80*swC^4) + 
                4*sw^4*(17 - 20*swC^2 + 32*swC^4)))*t + 
            3*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*(3*swC^2*(-5 + 4*swC^2) + 
                sw^2*(-15 + 76*swC^2 - 80*swC^4) + 4*sw^4*(3 - 20*swC^2 + 
                  32*swC^4)))*t^2)))*GaugeXi[W]))/(cwC^2*(-1 + d)*d*mz^4*
     Pi^(2*d)*(mz^2 - s)^3*s*sw^4*(-1 + sw^2)^2*swC^2), 
   ((I/9)*EL^6*(-(2^(1 + d)*(1 - d)*Pi^d*s*(s + mz^2*(-1 + sw^2))^2*
        (s*(3*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
           2*(-9 + 30*swC^2 - 24*swC^4 + sw^2*(30 + 4*swC^2 - 80*swC^4) + 
             8*sw^4*(-3 - 10*swC^2 + 16*swC^4))) - 
         2*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 
           2*sw^2*(15 - 76*swC^2 + 80*swC^4))*t)*
        (s + mz^2*(-1 + sw^2) + mz^2*(-1 + sw^2)*GaugeXi[W])^2*
        (s - mz^2*GaugeXi[Z])) - 2^(2 + d)*Pi^d*s^2*(s + mz^2*(-1 + sw^2))^2*
       (9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 
        2*sw^2*(15 - 76*swC^2 + 80*swC^4))*(d*(s + mz^2*(-1 + sw^2))^2 + 
        2*mz^2*(1 - sw^2)*(-(d*s) - (-2 + d)*mz^2*(-1 + sw^2))*GaugeXi[W] + 
        d*mz^4*(-1 + sw^2)^2*GaugeXi[W]^2)*(s - mz^2*GaugeXi[Z]) - 
      2*(1 - d)*s*(s^4*(9*d*(2*Pi)^d + 2^(1 + d)*Pi^d*
           (4*sw^4*(-6 + 3*d - 20*swC^2 + 32*swC^4) + 
            3*(-3 - 5*(-2 + d)*swC^2 + 4*(-2 + d)*swC^4) + 
            sw^2*(30 + 4*swC^2 - 80*swC^4 + 3*d*(-5 + 8*swC^2))))*t + 
        mz^8*(-1 + sw^2)^4*(9*d*(2*Pi)^d + 2^(1 + d)*Pi^d*
           (4*sw^4*(-6 + 3*d - 20*swC^2 + 32*swC^4) + 
            3*(-3 - 5*(-2 + d)*swC^2 + 4*(-2 + d)*swC^4) + 
            sw^2*(30 + 4*swC^2 - 80*swC^4 + 3*d*(-5 + 8*swC^2))))*t + 
        2*mz^2*s^2*(1 - sw^2)*(9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
           (s^2*(3*d^2*(4*sw^4 + swC^2*(-5 + 4*swC^2) + sw^2*(-5 + 
                  8*swC^2)) + 2*d*(-9 + 30*swC^2 - 24*swC^4 + 
                sw^2*(30 - 22*swC^2 - 40*swC^4) + 8*sw^4*(-3 - 5*swC^2 + 
                  8*swC^4)) + 2*(9 - 30*swC^2 + 24*swC^4 + 
                sw^4*(24 + 80*swC^2 - 128*swC^4) + sw^2*(-30 - 4*swC^2 + 
                  80*swC^4))) + s*(30*(3 - 10*swC^2 + 8*swC^4) + 
              16*sw^4*(15 - 10*swC^2 + 16*swC^4) - 4*sw^2*(75 - 146*swC^2 + 
                40*swC^4) - 18*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
                2*sw^2*(-5 + 8*swC^2)) + 3*d^2*(3 + 8*sw^4 - 10*swC^2 + 
                8*swC^4 + 2*sw^2*(-5 + 8*swC^2)))*t + 
            2*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 
              2*sw^2*(15 - 76*swC^2 + 80*swC^4))*t^2)) + 
        2*mz^6*(1 - sw^2)^3*(9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
           (s^2*(3*d^2*(4*sw^4 + swC^2*(-5 + 4*swC^2) + sw^2*(-5 + 
                  8*swC^2)) + 2*d*(-9 + 30*swC^2 - 24*swC^4 + 
                sw^2*(30 - 22*swC^2 - 40*swC^4) + 8*sw^4*(-3 - 5*swC^2 + 
                  8*swC^4)) + 2*(9 - 30*swC^2 + 24*swC^4 + 
                sw^4*(24 + 80*swC^2 - 128*swC^4) + sw^2*(-30 - 4*swC^2 + 
                  80*swC^4))) + s*(30*(3 - 10*swC^2 + 8*swC^4) + 
              16*sw^4*(15 - 10*swC^2 + 16*swC^4) - 4*sw^2*(75 - 146*swC^2 + 
                40*swC^4) - 18*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
                2*sw^2*(-5 + 8*swC^2)) + 3*d^2*(3 + 8*sw^4 - 10*swC^2 + 
                8*swC^4 + 2*sw^2*(-5 + 8*swC^2)))*t + 
            2*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 
              2*sw^2*(15 - 76*swC^2 + 80*swC^4))*t^2)) - 
        2*mz^4*s*(-1 + sw^2)^2*(-207*d*(2*Pi)^d*s*t + 2^(1 + d)*Pi^d*
           (s^2*(3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*
                 (-5 + 8*swC^2)) + 4*d*(-9 + 30*swC^2 - 24*swC^4 + 
                sw^2*(30 - 22*swC^2 - 40*swC^4) + 8*sw^4*(-3 - 5*swC^2 + 
                  8*swC^4)) - 4*(-9 + 30*swC^2 - 24*swC^4 + 
                sw^2*(30 + 4*swC^2 - 80*swC^4) + 8*sw^4*(-3 - 10*swC^2 + 
                  16*swC^4))) + s*(57*(3 - 10*swC^2 + 8*swC^4) + 
              8*sw^4*(57 - 50*swC^2 + 80*swC^4) - 2*sw^2*(285 - 586*swC^2 + 
                200*swC^4) - 69*d*(4*sw^4 + swC^2*(-5 + 4*swC^2) + 
                sw^2*(-5 + 8*swC^2)) + 6*d^2*(3 + 8*sw^4 - 10*swC^2 + 
                8*swC^4 + 2*sw^2*(-5 + 8*swC^2)))*t + 
            4*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 
              2*sw^2*(15 - 76*swC^2 + 80*swC^4))*t^2)) - 
        2*mz^2*(1 - sw^2)*(s^3*(9*d*(2*Pi)^d + 2^(1 + d)*Pi^d*
             (4*sw^4*(-6 + 3*d - 20*swC^2 + 32*swC^4) + 3*(-3 - 5*(-2 + d)*
                 swC^2 + 4*(-2 + d)*swC^4) + sw^2*(30 + 4*swC^2 - 80*swC^4 + 
                3*d*(-5 + 8*swC^2))))*t - mz^4*s*(-1 + sw^2)^2*
           (9*d*(2*Pi)^d*t + 2^(1 + d)*Pi^d*(s*(3*d*(3 + 8*sw^4 - 10*swC^2 + 
                  8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 2*(-9 + 30*swC^2 - 
                  24*swC^4 + sw^2*(30 + 4*swC^2 - 80*swC^4) + 8*sw^4*
                   (-3 - 10*swC^2 + 16*swC^4))) + 3*(-9 - 5*(-6 + d)*swC^2 + 
                4*(-6 + d)*swC^4 + 4*sw^4*(-6 + d + 20*swC^2 - 32*swC^4) + 
                sw^2*(30 - 5*d - 100*swC^2 + 8*d*swC^2 + 80*swC^4))*t)) + 
          mz^2*s^2*(1 - sw^2)*(9*d*(2*Pi)^d*(s - t) + 2^(1 + d)*Pi^d*
             (s*(4*sw^4*(-6 + 3*d - 20*swC^2 + 32*swC^4) + 
                3*(-3 - 5*(-2 + d)*swC^2 + 4*(-2 + d)*swC^4) + 
                sw^2*(30 + 4*swC^2 - 80*swC^4 + 3*d*(-5 + 8*swC^2))) - 
              3*(d*(4*sw^4 + swC^2*(-5 + 4*swC^2) + sw^2*(-5 + 8*swC^2)) + 
                4*sw^2*swC^2*(13 - 20*swC^2 + 4*sw^2*(-5 + 8*swC^2)))*t)) + 
          mz^6*(1 - sw^2)^3*(9*d*(2*Pi)^d*(s + t) + 2^(1 + d)*Pi^d*
             (s*(4*sw^4*(-6 + 3*d - 20*swC^2 + 32*swC^4) + 
                3*(-3 - 5*(-2 + d)*swC^2 + 4*(-2 + d)*swC^4) + 
                sw^2*(30 + 4*swC^2 - 80*swC^4 + 3*d*(-5 + 8*swC^2))) + 
              (3*(-6 - 5*(-4 + d)*swC^2 + 4*(-4 + d)*swC^4) + 
                sw^2*(60 - 148*swC^2 + 80*swC^4 + 3*d*(-5 + 8*swC^2)) + 
                4*sw^4*(3*d - 4*(3 - 5*swC^2 + 8*swC^4)))*t)))*GaugeXi[W] + 
        mz^4*(-1 + sw^2)^2*(-(2^(1 + d)*mz^2*Pi^d*s*(1 - sw^2)*
            (3*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
             2*(-9 + 30*swC^2 - 24*swC^4 + sw^2*(30 + 4*swC^2 - 80*swC^4) + 8*
                sw^4*(-3 - 10*swC^2 + 16*swC^4)))) + 
          s^2*(9*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(4*sw^4*(-6 + 3*d - 20*swC^2 + 
                32*swC^4) + 3*(-3 - 5*(-2 + d)*swC^2 + 4*(-2 + d)*swC^4) + 
              sw^2*(30 + 4*swC^2 - 80*swC^4 + 3*d*(-5 + 8*swC^2)))) + 
          mz^4*(-1 + sw^2)^2*(9*d*(2*Pi)^d + 2^(1 + d)*Pi^d*
             (4*sw^4*(-6 + 3*d - 20*swC^2 + 32*swC^4) + 3*(-3 - 5*(-2 + d)*
                 swC^2 + 4*(-2 + d)*swC^4) + sw^2*(30 + 4*swC^2 - 80*swC^4 + 
                3*d*(-5 + 8*swC^2)))))*t*GaugeXi[W]^2)*
       (s - mz^2*GaugeXi[Z]) - 2^(1 + d)*Pi^d*(s + mz^2*(-1 + sw^2))^2*
       (s*(3*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) - 
          4*(9 - 30*swC^2 + 24*swC^4 + sw^2*(-30 + 74*swC^2 - 40*swC^4) + 
            8*sw^4*(3 - 5*swC^2 + 8*swC^4))) - 
        2*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 
          2*sw^2*(15 - 76*swC^2 + 80*swC^4))*t)*
       ((s + mz^2*(-1 + sw^2))^2*(d*s + 2*t) + 2*mz^2*(1 - sw^2)*
         (-(mz^2*(-1 + sw^2)*((-2 + d)*s - 2*t)) - s*(d*s + 2*t))*
         GaugeXi[W] + mz^4*(-1 + sw^2)^2*(d*s + 2*t)*GaugeXi[W]^2)*
       (s - mz^2*GaugeXi[Z]) - (1 - d)*s*(s + mz^2*(-1 + sw^2) + 
         mz^2*(-1 + sw^2)*GaugeXi[W])^2*
       (s*(s^2*(9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
             (s*(4*sw^4*(-6 + 3*d - 20*swC^2 + 32*swC^4) + 
                3*(-3 - 5*(-2 + d)*swC^2 + 4*(-2 + d)*swC^4) + 
                sw^2*(30 + 4*swC^2 - 80*swC^4 + 3*d*(-5 + 8*swC^2))) + 
              (-9 + 30*swC^2 - 24*swC^4 - 8*sw^4*(3 - 20*swC^2 + 32*swC^4) + 
                2*sw^2*(15 - 76*swC^2 + 80*swC^4))*t)) - 2*mz^2*s*(1 - sw^2)*
           (9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(4*sw^4*(-6 + 3*d - 20*swC^2 + 
                  32*swC^4) + 3*(-3 - 5*(-2 + d)*swC^2 + 4*(-2 + d)*swC^4) + 
                sw^2*(30 + 4*swC^2 - 80*swC^4 + 3*d*(-5 + 8*swC^2))) + 
              (-9 + 30*swC^2 - 24*swC^4 - 8*sw^4*(3 - 20*swC^2 + 32*swC^4) + 
                2*sw^2*(15 - 76*swC^2 + 80*swC^4))*t)) + mz^4*(-1 + sw^2)^2*
           (-63*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-9 + 30*swC^2 - 24*swC^4 + 
                sw^2*(30 + 4*swC^2 - 80*swC^4) + 8*sw^4*(-3 - 10*swC^2 + 
                  16*swC^4) + 3*d*(12 + 4*sw^4 - 5*swC^2 + 4*swC^4 + 
                  sw^2*(-5 + 8*swC^2))) + (-9 + 30*swC^2 - 24*swC^4 - 
                8*sw^4*(3 - 20*swC^2 + 32*swC^4) + 2*sw^2*(15 - 76*swC^2 + 
                  80*swC^4))*t))) - mz^2*(s + mz^2*(-1 + sw^2))^2*
         (9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
           (s*(4*sw^4*(-6 + 3*d - 20*swC^2 + 32*swC^4) + 3*(-3 - 
                5*(-2 + d)*swC^2 + 4*(-2 + d)*swC^4) + sw^2*(30 + 4*swC^2 - 
                80*swC^4 + 3*d*(-5 + 8*swC^2))) + (-9 + 30*swC^2 - 24*swC^4 - 
              8*sw^4*(3 - 20*swC^2 + 32*swC^4) + 2*sw^2*(15 - 76*swC^2 + 
                80*swC^4))*t))*GaugeXi[Z]) + 2*(1 - d)*s*
       (2^(1 + d)*mz^8*Pi^d*s*(-1 + sw^2)^4*(9 - 30*swC^2 + 24*swC^4 + 
          8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
            80*swC^4))*(s - mz^2*GaugeXi[Z]) - 2^(1 + d)*mz^4*Pi^d*
         (s - s*sw^2)^2*(-s - 2*mz^2*(-1 + sw^2))*(9 - 30*swC^2 + 24*swC^4 + 
          8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
            80*swC^4))*(s - mz^2*GaugeXi[Z]) - mz^4*(2*Pi)^d*(s - s*sw^2)^2*
         (3*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
          2*(-9 + 30*swC^2 - 24*swC^4 + sw^2*(30 + 4*swC^2 - 80*swC^4) + 
            8*sw^4*(-3 - 10*swC^2 + 16*swC^4)))*t*(s - mz^2*GaugeXi[Z]) + 
        (2*Pi)^d*s^3*(-s - 2*mz^2*(-1 + sw^2))*
         (3*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
          2*(-9 + 30*swC^2 - 24*swC^4 + sw^2*(30 + 4*swC^2 - 80*swC^4) + 
            8*sw^4*(-3 - 10*swC^2 + 16*swC^4)))*t*(s - mz^2*GaugeXi[Z]) - 
        mz^8*(2*Pi)^d*(-1 + sw^2)^4*(3*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
            2*sw^2*(-5 + 8*swC^2)) - 4*(9 - 30*swC^2 + 24*swC^4 + 
            sw^2*(-30 + 74*swC^2 - 40*swC^4) + 8*sw^4*(3 - 5*swC^2 + 
              8*swC^4)))*(s + t)*(s - mz^2*GaugeXi[Z]) + 
        mz^8*(2*Pi)^d*(-1 + sw^2)^4*(3*d*s*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
            2*sw^2*(-5 + 8*swC^2)) - 6*s*(9 - 30*swC^2 + 24*swC^4 - 
            10*sw^2*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(3 - 10*swC^2 + 
              16*swC^4)) - 2*(9 - 30*swC^2 + 24*swC^4 + 
            8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
              80*swC^4))*t)*(s - mz^2*GaugeXi[Z]) - mz^4*(2*Pi)^d*s*
         (-1 + sw^2)^2*(-s - 2*mz^2*(-1 + sw^2))*
         (3*d*s*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) - 
          6*s*(9 - 30*swC^2 + 24*swC^4 - 10*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
            8*sw^4*(3 - 10*swC^2 + 16*swC^4)) - 2*(9 - 30*swC^2 + 24*swC^4 + 
            8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
              80*swC^4))*t)*(s - mz^2*GaugeXi[Z]) + mz^6*(2*Pi)^d*
         (1 - sw^2)^3*t*(3*d*s*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
            2*sw^2*(-5 + 8*swC^2)) - 6*s*(9 - 30*swC^2 + 24*swC^4 - 
            10*sw^2*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(3 - 10*swC^2 + 
              16*swC^4)) - 2*(9 - 30*swC^2 + 24*swC^4 + 
            8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
              80*swC^4))*t)*(s - mz^2*GaugeXi[Z]) - mz^6*(2*Pi)^d*s*
         (1 - sw^2)^3*(s*(3*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
              2*sw^2*(-5 + 8*swC^2)) + 2*(-9 + 30*swC^2 - 24*swC^4 + 
              sw^2*(30 + 4*swC^2 - 80*swC^4) + 8*sw^4*(-3 - 10*swC^2 + 
                16*swC^4))) - 2*(9 - 30*swC^2 + 24*swC^4 + 
            8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
              80*swC^4))*t)*(s - mz^2*GaugeXi[Z]) + mz^2*(2*Pi)^d*s^2*
         (1 - sw^2)*(-s - 2*mz^2*(-1 + sw^2))*
         (s*(3*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
            2*(-9 + 30*swC^2 - 24*swC^4 + sw^2*(30 + 4*swC^2 - 80*swC^4) + 
              8*sw^4*(-3 - 10*swC^2 + 16*swC^4))) - 
          2*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 
            2*sw^2*(15 - 76*swC^2 + 80*swC^4))*t)*(s - mz^2*GaugeXi[Z]) - 
        mz^6*(2*Pi)^d*(1 - sw^2)^3*t*
         (3*s*(d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) - 
            2*(9 - 30*swC^2 + 24*swC^4 - 10*sw^2*(3 - 10*swC^2 + 8*swC^4) + 
              8*sw^4*(3 - 10*swC^2 + 16*swC^4))) - 
          2*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 
            2*sw^2*(15 - 76*swC^2 + 80*swC^4))*t)*(s - mz^2*GaugeXi[Z]) - 
        2^(1 + d)*mz^2*Pi^d*s^2*(1 - sw^2)*
         (s^2*(3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 
                8*swC^2)) + 4*d*(-9 + 30*swC^2 - 24*swC^4 + sw^2*(30 - 
                22*swC^2 - 40*swC^4) + 8*sw^4*(-3 - 5*swC^2 + 8*swC^4)) - 
            4*(-9 + 30*swC^2 - 24*swC^4 + sw^2*(30 + 4*swC^2 - 80*swC^4) + 
              8*sw^4*(-3 - 10*swC^2 + 16*swC^4))) + 
          2*s*(-15*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 
                8*swC^2)) + 3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
              2*sw^2*(-5 + 8*swC^2)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
              sw^2*(-30 + 74*swC^2 - 40*swC^4) + 8*sw^4*(3 - 5*swC^2 + 
                8*swC^4)))*t + 4*(9 - 30*swC^2 + 24*swC^4 + 
            8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
              80*swC^4))*t^2)*(s - mz^2*GaugeXi[Z]) + 2^(1 + d)*mz^2*Pi^d*
         (1 - sw^2)*(s^3*(s*(3*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
                2*sw^2*(-5 + 8*swC^2)) + 2*(-9 + 30*swC^2 - 24*swC^4 + 
                sw^2*(30 + 4*swC^2 - 80*swC^4) + 8*sw^4*(-3 - 10*swC^2 + 
                  16*swC^4))) + 6*(-3 + d)*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
              2*sw^2*(-5 + 8*swC^2))*t) + 2*mz^2*s*(1 - sw^2)*
           (s^2*(3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*
                 (-5 + 8*swC^2)) - 6*(-9 + 30*swC^2 - 24*swC^4 + 
                sw^2*(30 + 4*swC^2 - 80*swC^4) + 8*sw^4*(-3 - 10*swC^2 + 
                  16*swC^4)) + d*(-15*(3 - 10*swC^2 + 8*swC^4) + 
                8*sw^4*(-15 - 20*swC^2 + 32*swC^4) - 2*sw^2*(-75 + 68*swC^2 + 
                  80*swC^4))) + 2*s*(sw^2*(-330 + 736*swC^2 - 320*swC^4) + 
              33*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(33 - 40*swC^2 + 
                64*swC^4) - 18*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
                2*sw^2*(-5 + 8*swC^2)) + 3*d^2*(3 + 8*sw^4 - 10*swC^2 + 
                8*swC^4 + 2*sw^2*(-5 + 8*swC^2)))*t + 
            4*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 
              2*sw^2*(15 - 76*swC^2 + 80*swC^4))*t^2))*
         (s - mz^2*GaugeXi[Z]) - mz^4*(2*Pi)^d*(-1 + sw^2)^2*
         (s^2*(3*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 
                8*swC^2)) - 4*(9 - 30*swC^2 + 24*swC^4 + sw^2*(-30 + 
                74*swC^2 - 40*swC^4) + 8*sw^4*(3 - 5*swC^2 + 8*swC^4)))*
           (s + t) + 2*mz^2*(1 - sw^2)*(s^2*(sw^4*(240 + 320*swC^2 - 
                512*swC^4) + 30*(3 - 10*swC^2 + 8*swC^4) + 4*sw^2*(-75 + 
                68*swC^2 + 80*swC^4) + 3*d^2*(3 + 8*sw^4 - 10*swC^2 + 
                8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 2*d*(sw^2*(90 - 92*swC^2 - 
                  80*swC^4) - 9*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*
                 (-9 - 10*swC^2 + 16*swC^4))) + 
            s*(-39*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*
                 (-5 + 8*swC^2)) + 6*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
                2*sw^2*(-5 + 8*swC^2)) + 2*(sw^2*(-390 + 884*swC^2 - 
                  400*swC^4) + 39*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*
                 (39 - 50*swC^2 + 80*swC^4)))*t + 4*(9 - 30*swC^2 + 
              24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 
                76*swC^2 + 80*swC^4))*t^2))*(s - mz^2*GaugeXi[Z]) - 
        mz^2*s^2*(1 - sw^2)*((2*Pi)^d*s*(s*(3*d*(3 + 8*sw^4 - 10*swC^2 + 
                8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 2*(-9 + 30*swC^2 - 
                24*swC^4 + sw^2*(30 + 4*swC^2 - 80*swC^4) + 8*sw^4*
                 (-3 - 10*swC^2 + 16*swC^4))) + 6*(-3 + d)*(3 + 8*sw^4 - 
              10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2))*t) - 
          2*mz^2*(1 - sw^2)*(9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
             (s*(4*sw^4*(-6 + 3*d - 20*swC^2 + 32*swC^4) + 
                3*(-3 - 5*(-2 + d)*swC^2 + 4*(-2 + d)*swC^4) + 
                sw^2*(30 + 4*swC^2 - 80*swC^4 + 3*d*(-5 + 8*swC^2))) + 
              3*(-3 + d)*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*
                 (-5 + 8*swC^2))*t)))*(s - mz^2*GaugeXi[Z]) + 
        2^(1 + d)*mz^6*Pi^d*s*(1 - sw^2)^3*
         (3*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
          2*(-9 + 30*swC^2 - 24*swC^4 + sw^2*(30 + 4*swC^2 - 80*swC^4) + 
            8*sw^4*(-3 - 10*swC^2 + 16*swC^4)))*t*GaugeXi[W]*
         (s - mz^2*GaugeXi[Z]) - 2^(1 + d)*mz^2*Pi^d*s^2*(1 - sw^2)*
         (-s - 2*mz^2*(-1 + sw^2))*(3*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
            2*sw^2*(-5 + 8*swC^2)) + 2*(-9 + 30*swC^2 - 24*swC^4 + 
            sw^2*(30 + 4*swC^2 - 80*swC^4) + 8*sw^4*(-3 - 10*swC^2 + 
              16*swC^4)))*t*GaugeXi[W]*(s - mz^2*GaugeXi[Z]) + 
        mz^8*(2*Pi)^d*(-1 + sw^2)^4*
         (s*(3*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
            2*(-9 + 30*swC^2 - 24*swC^4 + sw^2*(30 + 4*swC^2 - 80*swC^4) + 
              8*sw^4*(-3 - 10*swC^2 + 16*swC^4))) - 
          2*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 
            2*sw^2*(15 - 76*swC^2 + 80*swC^4))*t)*GaugeXi[W]*
         (s - mz^2*GaugeXi[Z]) - mz^4*(2*Pi)^d*s*(-1 + sw^2)^2*
         (-s - 2*mz^2*(-1 + sw^2))*
         (s*(3*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
            2*(-9 + 30*swC^2 - 24*swC^4 + sw^2*(30 + 4*swC^2 - 80*swC^4) + 
              8*sw^4*(-3 - 10*swC^2 + 16*swC^4))) - 
          2*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 
            2*sw^2*(15 - 76*swC^2 + 80*swC^4))*t)*GaugeXi[W]*
         (s - mz^2*GaugeXi[Z]) + mz^4*s*(-1 + sw^2)^2*
         ((2*Pi)^d*s*(s*(3*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
                2*sw^2*(-5 + 8*swC^2)) + 2*(-9 + 30*swC^2 - 24*swC^4 + 
                sw^2*(30 + 4*swC^2 - 80*swC^4) + 8*sw^4*(-3 - 10*swC^2 + 
                  16*swC^4))) + 6*(-3 + d)*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
              2*sw^2*(-5 + 8*swC^2))*t) - 2*mz^2*(1 - sw^2)*
           (9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(4*sw^4*(-6 + 3*d - 20*swC^2 + 
                  32*swC^4) + 3*(-3 - 5*(-2 + d)*swC^2 + 4*(-2 + d)*swC^4) + 
                sw^2*(30 + 4*swC^2 - 80*swC^4 + 3*d*(-5 + 8*swC^2))) + 
              3*(-3 + d)*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*
                 (-5 + 8*swC^2))*t)))*GaugeXi[W]*(s - mz^2*GaugeXi[Z]) - 
        mz^8*(2*Pi)^d*(-1 + sw^2)^4*(3*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
            2*sw^2*(-5 + 8*swC^2)) + 2*(-9 + 30*swC^2 - 24*swC^4 + 
            sw^2*(30 + 4*swC^2 - 80*swC^4) + 8*sw^4*(-3 - 10*swC^2 + 
              16*swC^4)))*t*GaugeXi[W]^2*(s - mz^2*GaugeXi[Z]) + 
        mz^4*(2*Pi)^d*s*(-1 + sw^2)^2*(-s - 2*mz^2*(-1 + sw^2))*
         (3*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
          2*(-9 + 30*swC^2 - 24*swC^4 + sw^2*(30 + 4*swC^2 - 80*swC^4) + 
            8*sw^4*(-3 - 10*swC^2 + 16*swC^4)))*t*GaugeXi[W]^2*
         (s - mz^2*GaugeXi[Z]) - mz^6*s*(1 - sw^2)^3*
         (s*(-63*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-9 + 30*swC^2 - 24*swC^4 + 
                sw^2*(30 + 4*swC^2 - 80*swC^4) + 8*sw^4*(-3 - 10*swC^2 + 
                  16*swC^4) + 3*d*(12 + 4*sw^4 - 5*swC^2 + 4*swC^4 + 
                  sw^2*(-5 + 8*swC^2))) + 3*(-3 + d)*(3 + 8*sw^4 - 10*swC^2 + 
                8*swC^4 + 2*sw^2*(-5 + 8*swC^2))*t)) - 
          mz^2*(9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
             (s*(4*sw^4*(-6 + 3*d - 20*swC^2 + 32*swC^4) + 
                3*(-3 - 5*(-2 + d)*swC^2 + 4*(-2 + d)*swC^4) + 
                sw^2*(30 + 4*swC^2 - 80*swC^4 + 3*d*(-5 + 8*swC^2))) + 
              3*(-3 + d)*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*
                 (-5 + 8*swC^2))*t))*GaugeXi[Z]) + mz^8*(-1 + sw^2)^4*
         GaugeXi[W]*(s*(-63*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
             (s*(-9 + 30*swC^2 - 24*swC^4 + sw^2*(30 + 4*swC^2 - 80*swC^4) + 
                8*sw^4*(-3 - 10*swC^2 + 16*swC^4) + 3*d*(12 + 4*sw^4 - 
                  5*swC^2 + 4*swC^4 + sw^2*(-5 + 8*swC^2))) + 
              3*(-3 + d)*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*
                 (-5 + 8*swC^2))*t)) - mz^2*(9*d*(2*Pi)^d*s + 
            2^(1 + d)*Pi^d*(s*(4*sw^4*(-6 + 3*d - 20*swC^2 + 32*swC^4) + 
                3*(-3 - 5*(-2 + d)*swC^2 + 4*(-2 + d)*swC^4) + 
                sw^2*(30 + 4*swC^2 - 80*swC^4 + 3*d*(-5 + 8*swC^2))) + 
              3*(-3 + d)*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*
                 (-5 + 8*swC^2))*t))*GaugeXi[Z])) - 
      (1 - d)*s*(-s - mz^2*(-1 + sw^2) - mz^2*(-1 + sw^2)*GaugeXi[W])*
       ((s^3*(-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
             (s*(-4*sw^4*(-6 + 3*d - 20*swC^2 + 32*swC^4) + 
                3*(3 + 5*(-2 + d)*swC^2 - 4*(-2 + d)*swC^4) + 
                sw^2*(-30 - 4*swC^2 + 80*swC^4 - 3*d*(-5 + 8*swC^2))) + 
              (9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 
                2*sw^2*(15 - 76*swC^2 + 80*swC^4))*t)) + mz^6*(1 - sw^2)^3*
           (9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(4*sw^4*(-6 + 3*d - 20*swC^2 + 
                  32*swC^4) + 3*(-3 - 5*(-2 + d)*swC^2 + 4*(-2 + d)*swC^4) + 
                sw^2*(30 + 4*swC^2 - 80*swC^4 + 3*d*(-5 + 8*swC^2))) + 
              (-9 + 30*swC^2 - 24*swC^4 - 8*sw^4*(3 - 20*swC^2 + 32*swC^4) + 
                2*sw^2*(15 - 76*swC^2 + 80*swC^4))*t)) - 
          3*mz^4*s*(-1 + sw^2)^2*(51*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
             (s*(-9 + 30*swC^2 - 24*swC^4 + sw^2*(30 + 4*swC^2 - 80*swC^4) + 
                8*sw^4*(-3 - 10*swC^2 + 16*swC^4) + 3*d*(-7 + 4*sw^4 - 
                  5*swC^2 + 4*swC^4 + sw^2*(-5 + 8*swC^2))) + 
              (-9 + 30*swC^2 - 24*swC^4 - 8*sw^4*(3 - 20*swC^2 + 32*swC^4) + 
                2*sw^2*(15 - 76*swC^2 + 80*swC^4))*t)) + 
          3*mz^2*s^2*(1 - sw^2)*(-45*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
             (s*(-9 + 30*swC^2 - 24*swC^4 + sw^2*(30 + 4*swC^2 - 80*swC^4) + 
                8*sw^4*(-3 - 10*swC^2 + 16*swC^4) + 3*d*(9 + 4*sw^4 - 
                  5*swC^2 + 4*swC^4 + sw^2*(-5 + 8*swC^2))) + 
              (-9 + 30*swC^2 - 24*swC^4 - 8*sw^4*(3 - 20*swC^2 + 32*swC^4) + 
                2*sw^2*(15 - 76*swC^2 + 80*swC^4))*t)))*
         (s - mz^2*GaugeXi[Z]) + mz^2*(1 - sw^2)*GaugeXi[W]*
         (s*(s^2*(9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(4*sw^4*(-6 + 3*d - 
                    20*swC^2 + 32*swC^4) + 3*(-3 - 5*(-2 + d)*swC^2 + 
                    4*(-2 + d)*swC^4) + sw^2*(30 + 4*swC^2 - 80*swC^4 + 
                    3*d*(-5 + 8*swC^2))) + (-9 + 30*swC^2 - 24*swC^4 - 
                  8*sw^4*(3 - 20*swC^2 + 32*swC^4) + 2*sw^2*(15 - 76*swC^2 + 
                    80*swC^4))*t)) - 2*mz^2*s*(1 - sw^2)*(9*d*(2*Pi)^d*s + 
              2^(1 + d)*Pi^d*(s*(4*sw^4*(-6 + 3*d - 20*swC^2 + 32*swC^4) + 
                  3*(-3 - 5*(-2 + d)*swC^2 + 4*(-2 + d)*swC^4) + 
                  sw^2*(30 + 4*swC^2 - 80*swC^4 + 3*d*(-5 + 8*swC^2))) + 
                (-9 + 30*swC^2 - 24*swC^4 - 8*sw^4*(3 - 20*swC^2 + 
                    32*swC^4) + 2*sw^2*(15 - 76*swC^2 + 80*swC^4))*t)) + 
            mz^4*(-1 + sw^2)^2*(63*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(
                s*(-9 + 30*swC^2 - 24*swC^4 + sw^2*(30 + 4*swC^2 - 
                    80*swC^4) + 8*sw^4*(-3 - 10*swC^2 + 16*swC^4) + 
                  3*d*(-9 + 4*sw^4 - 5*swC^2 + 4*swC^4 + sw^2*(-5 + 
                      8*swC^2))) + (-9 + 30*swC^2 - 24*swC^4 - 8*sw^4*
                   (3 - 20*swC^2 + 32*swC^4) + 2*sw^2*(15 - 76*swC^2 + 
                    80*swC^4))*t))) - mz^2*(-s - mz^2*(-1 + sw^2))*
           (s*(-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-4*sw^4*(-6 + 3*d - 
                    20*swC^2 + 32*swC^4) + 3*(3 + 5*(-2 + d)*swC^2 - 
                    4*(-2 + d)*swC^4) + sw^2*(-30 - 4*swC^2 + 80*swC^4 - 
                    3*d*(-5 + 8*swC^2))) + (9 - 30*swC^2 + 24*swC^4 + 
                  8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
                    80*swC^4))*t)) + mz^2*(1 - sw^2)*(-9*d*(2*Pi)^d*s + 
              2^(1 + d)*Pi^d*(s*(-9 + 30*swC^2 - 24*swC^4 + sw^2*
                   (30 + 4*swC^2 - 80*swC^4) + 8*sw^4*(-3 - 10*swC^2 + 
                    16*swC^4) + 3*d*(3 + 4*sw^4 - 5*swC^2 + 4*swC^4 + 
                    sw^2*(-5 + 8*swC^2))) + (-9 + 30*swC^2 - 24*swC^4 - 
                  8*sw^4*(3 - 20*swC^2 + 32*swC^4) + 2*sw^2*(15 - 76*swC^2 + 
                    80*swC^4))*t)))*GaugeXi[Z]))))/
    (2^(2*(4 + d))*cwC^2*(-1 + d)*mz^4*Pi^(2*d)*(mz^2 - s)^3*s*sw^4*
     (-1 + sw^2)^2*swC^2*(s - mz^2*GaugeXi[Z])), 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}}
