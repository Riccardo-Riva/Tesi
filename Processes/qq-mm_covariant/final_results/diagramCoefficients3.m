{{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {((-I/27)*2^(1 - d)*EL^6*((224 - 232*d + 74*d^2 - 7*d^3)*s^2 - 
     4*(144 - 76*d + 9*d^2)*s*t - 4*(176 - 80*d + 7*d^2)*t^2 + 
     2*(32 - 20*d + 3*d^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2)*GaugeXi[A] + 
     (-4 + d)^2*((-2 + d)*s^2 + 4*s*t + 4*t^2)*GaugeXi[A]^2))/
   ((-4 + d)*Pi^d*s^2), ((-I/27)*2^(3 - d)*(32 - 14*d + d^2)*EL^6*(s + 2*t))/
   ((-4 + d)*Pi^d*s), ((-I/27)*2^(2 - d)*EL^6*t*((-8 + 3*d)*s^2 + 8*s*t + 
     16*t^2))/(Pi^d*s), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0}, 
 {0, ((I/27)*2^(-2 - d)*EL^6*
    (mz^2*(33*d^3 - 3*d^4 + d*(84 + 340*sw^2 - 544*sw^4) + 
       12*d^2*(-9 - 5*sw^2 + 8*sw^4) + 24*(3 - 20*sw^2 + 32*sw^4)) + 
     s*(-57*d^3 + 6*d^4 + d^2*(156 + 40*sw^2 - 64*sw^4) - 
       8*(39 - 80*sw^2 + 128*sw^4) + 4*d*(-3 - 85*sw^2 + 136*sw^4)) + 
     2*(-36*d^3 + 3*d^4 + 8*(33 + 50*sw^2 - 80*sw^4) - 
       4*d^2*(-42 - 5*sw^2 + 8*sw^4) + 4*d*(-87 - 50*sw^2 + 80*sw^4))*t))/
   (cw^2*(-4 + d)*Pi^d*s*sw^2), 0, 
  ((-I/432)*EL^6*((2^(2 - d)*(-24*d^2 + 3*d^3 + d*(36 + 60*sw^2 - 96*sw^4) + 
        8*(3 - 20*sw^2 + 32*sw^4)))/Pi^d - 
     (2^(4 - d)*(156 + 36*d^2 - 3*d^3 + 40*sw^2 - 64*sw^4 + 
        4*d*(-33 - 5*sw^2 + 8*sw^4))*t)/((-4 + d)*Pi^d*s) - 
     (2^(2 - d)*(s*(-24*d^2 + 3*d^3 + d*(36 + 60*sw^2 - 96*sw^4) + 
          8*(3 - 20*sw^2 + 32*sw^4)) + 2*(156 + 36*d^2 - 3*d^3 + 40*sw^2 - 
          64*sw^4 + 4*d*(-33 - 5*sw^2 + 8*sw^4))*t))/(Pi^d*s) - 
     (4^(1 - d)*(2 - d)*(-3*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (2*s^2*(-6 + 6*d^2 + 40*sw^2 - 64*sw^4 + 3*d*(-3 - 5*sw^2 + 
              8*sw^4)) + s*(-36*d^2 + 3*d^3 - 4*d*(-36 - 5*sw^2 + 8*sw^4) + 
            12*(-15 - 10*sw^2 + 16*sw^4))*t + 8*(3 - 20*sw^2 + 32*sw^4)*
           t^2) + mz^2*(3*d^3*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
           (-2*s*(-6 + 6*d^2 + 40*sw^2 - 64*sw^4 + 3*d*(-3 - 5*sw^2 + 
                8*sw^4)) + (156 + 36*d^2 - 3*d^3 + 40*sw^2 - 64*sw^4 + 
              4*d*(-33 - 5*sw^2 + 8*sw^4))*t))))/((-4 + d)*Pi^(2*d)*
       (mz^2 - s)*s) + (d*(-1 + 4*sw^2)*(-3 + 8*sw^2)*(-1 + GaugeXi[A]))/
      (2*Pi)^d + (d*(3 - 20*sw^2 + 32*sw^4)*(-1 + GaugeXi[A]))/(2*Pi)^d - 
     (2^(1 - d)*(-6 + 3*d - 20*sw^2 + 32*sw^4)*t*(-1 + GaugeXi[A]))/
      (Pi^d*s) + ((d*s + 2*t)*(3*d*s - 4*s*(3 - 5*sw^2 + 8*sw^4) - 
        2*(3 - 20*sw^2 + 32*sw^4)*t)*(-1 + GaugeXi[A]))/((2*Pi)^d*s^2) - 
     (2^(1 - d)*(s*(-6 + 3*d - 20*sw^2 + 32*sw^4) - 2*(3 - 20*sw^2 + 32*sw^4)*
         t)*(-1 + GaugeXi[A]))/(Pi^d*s) - 
     ((-2 + d)*(s*(-6 + 3*d - 20*sw^2 + 32*sw^4) - 2*(3 - 20*sw^2 + 32*sw^4)*
         t)*(-1 + GaugeXi[A]))/((2*Pi)^d*s) - 
     (2^(1 - 4*d)*(-2 + d)*(mz^4*(2*Pi)^(3*d)*(-6 + 3*d - 20*sw^2 + 32*sw^4)*
         t + (2*Pi)^(3*d)*s^2*(-6 + 3*d - 20*sw^2 + 32*sw^4)*t + 
        2^(1 + 3*d)*mz^2*Pi^(3*d)*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
            4*d*(-3 - 5*sw^2 + 8*sw^4)) + 3*s*(18 - 11*d + 2*d^2 - 20*sw^2 + 
            32*sw^4)*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2))*(-1 + GaugeXi[A]))/
      (Pi^(4*d)*(mz^2 - s)^2*s) - 
     ((-2 + d)*(mz^2*(3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
           (s*(-3 - 10*sw^2 + 16*sw^4) + (-3 + 20*sw^2 - 32*sw^4)*t)) + 
        s*(-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
           (s*(3 + 3*d + 10*sw^2 - 16*sw^4) + (3 - 20*sw^2 + 32*sw^4)*t)))*
       (-1 + GaugeXi[A]))/((2*Pi)^(2*d)*(mz^2 - s)*s)))/(cw^2*mz^2*sw^2), 
  ((I/27)*EL^6*(8^(1 + d)*Pi^(3*d)*(156 + 36*d^2 - 3*d^3 + 40*sw^2 - 
       64*sw^4 + 4*d*(-33 - 5*sw^2 + 8*sw^4))*(1 - (2*t)/((-4 + d)*s)) + 
     (2^(3 + 2*d)*(-3 + d)*Pi^(2*d)*(-3*d^3*(2*Pi)^d*s^2 + 
        2^(1 + d)*Pi^d*(2*s^2*(-6 + 6*d^2 + 40*sw^2 - 64*sw^4 + 
            3*d*(-3 - 5*sw^2 + 8*sw^4)) + s*(-36*d^2 + 3*d^3 - 
            4*d*(-36 - 5*sw^2 + 8*sw^4) + 12*(-15 - 10*sw^2 + 16*sw^4))*t + 
          8*(3 - 20*sw^2 + 32*sw^4)*t^2) + mz^2*(3*d^3*(2*Pi)^d*s + 
          2^(1 + d)*Pi^d*(-2*s*(-6 + 6*d^2 + 40*sw^2 - 64*sw^4 + 
              3*d*(-3 - 5*sw^2 + 8*sw^4)) + (156 + 36*d^2 - 3*d^3 + 40*sw^2 - 
              64*sw^4 + 4*d*(-33 - 5*sw^2 + 8*sw^4))*t))))/
      ((-4 + d)*(mz^2 - s)*s) - (4^(1 + d)*Pi^(2*d)*(3*d^2*(2*Pi)^d*s^2 + 
        2^(1 + d)*Pi^d*(2*s^2*(3 + 10*sw^2 - 16*sw^4 + 
            d*(-3 - 5*sw^2 + 8*sw^4)) + s*(-15*d + 3*d^2 + 
            8*(3 - 5*sw^2 + 8*sw^4))*t + 2*(3 - 20*sw^2 + 32*sw^4)*t^2) + 
        mz^2*(-3*d^3*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
           (2*s*(12*d^2 + d*(-57 + 5*sw^2 - 8*sw^4) + 4*(21 - 5*sw^2 + 
                8*sw^4)) + (156 + 36*d^2 - 3*d^3 + 40*sw^2 - 64*sw^4 + 
              4*d*(-33 - 5*sw^2 + 8*sw^4))*t))))/(mz^2*s) + 
     ((2*Pi)^(3*d)*((-4 + d)*mz^2 + d*s)*(-1 + 4*sw^2)*(-3 + 8*sw^2)*
       (-1 + GaugeXi[A]))/mz^2 + ((2*Pi)^(3*d)*((-4 + d)*mz^2 + d*s)*
       (3 - 20*sw^2 + 32*sw^4)*(-1 + GaugeXi[A]))/mz^2 + 
     (2^(1 + 3*d)*Pi^(3*d)*(mz^2 - s)*(s*(-6 + 3*d - 20*sw^2 + 32*sw^4) - 
        2*(3 - 20*sw^2 + 32*sw^4)*t)*(-1 + GaugeXi[A]))/(mz^2*s) - 
     ((2*Pi)^(3*d)*((-4 + d)*mz^2 + (-2 + d)*s)*
       (s*(-6 + 3*d - 20*sw^2 + 32*sw^4) - 2*(3 - 20*sw^2 + 32*sw^4)*t)*
       (-1 + GaugeXi[A]))/(mz^2*s) + 
     ((2*Pi)^(3*d)*(3*d*s - 4*s*(3 - 5*sw^2 + 8*sw^4) - 
        2*(3 - 20*sw^2 + 32*sw^4)*t)*(mz^2*((-4 + d)*s + 2*t) + 
        s*(d*s + 2*t))*(-1 + GaugeXi[A]))/(mz^2*s^2) - 
     (2^(2 + 3*d)*Pi^(3*d)*(s*(-6 + 3*d - 20*sw^2 + 32*sw^4)*t + 
        mz^2*(s*(-6 + 3*d - 20*sw^2 + 32*sw^4) + 3*d*t - 
          4*(3 - 5*sw^2 + 8*sw^4)*t))*(-1 + GaugeXi[A]))/(mz^2*s) - 
     (2*(-3 + d)*(mz^2 + s)*(mz^4*(2*Pi)^(3*d)*(-6 + 3*d - 20*sw^2 + 32*sw^4)*
         t + (2*Pi)^(3*d)*s^2*(-6 + 3*d - 20*sw^2 + 32*sw^4)*t + 
        2^(1 + 3*d)*mz^2*Pi^(3*d)*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
            4*d*(-3 - 5*sw^2 + 8*sw^4)) + 3*s*(18 - 11*d + 2*d^2 - 20*sw^2 + 
            32*sw^4)*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2))*(-1 + GaugeXi[A]))/
      (s*(mz^3 - mz*s)^2) - ((2*Pi)^(2*d)*((-4 + d)*mz^2 + (-2 + d)*s)*
       (mz^2*(3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-3 - 10*sw^2 + 16*sw^4) + 
            (-3 + 20*sw^2 - 32*sw^4)*t)) + s*(-9*d*(2*Pi)^d*s + 
          2^(1 + d)*Pi^d*(s*(3 + 3*d + 10*sw^2 - 16*sw^4) + 
            (3 - 20*sw^2 + 32*sw^4)*t)))*(-1 + GaugeXi[A]))/
      (mz^2*(mz^2 - s)*s)))/(2^(4*(1 + d))*cw^2*Pi^(4*d)*sw^2), 
  ((-I/27)*2^(-3 - d)*EL^6*t*(mz^2*(648 + 120*d^2 - 9*d^3 + 
       4*d*(-123 - 5*sw^2 + 8*sw^4)) + s*(72 - 12*d^2 + 3*d^3 + 
       4*d*(-3 - 5*sw^2 + 8*sw^4)) + 8*(30 - 18*d + 3*d^2 - 20*sw^2 + 
       32*sw^4)*t))/(cw^2*Pi^d*s*sw^2), 
  ((-I/27)*2^(-3 - 2*d)*EL^6*t*(-3*d^3*(2*Pi)^d*s^2 + 
     mz^4*(-3*d^3*(2*Pi)^d + 2^(2 + d)*Pi^d*(-6 + 6*d^2 + 40*sw^2 - 64*sw^4 + 
         3*d*(-3 - 5*sw^2 + 8*sw^4))) + 2^(1 + d)*mz^2*Pi^d*
      (s*(-18*d^2 + 3*d^3 - 4*d*(-3 - 5*sw^2 + 8*sw^4) + 
         16*(3 - 5*sw^2 + 8*sw^4)) + 4*(30 - 18*d + 3*d^2 - 20*sw^2 + 
         32*sw^4)*t) + 2^(2 + d)*Pi^d*
      (s^2*(-6 + 6*d^2 + 40*sw^2 - 64*sw^4 + 3*d*(-3 - 5*sw^2 + 8*sw^4)) + 
       2*s*(-6 + 3*d - 20*sw^2 + 32*sw^4)*t + 4*(3 - 20*sw^2 + 32*sw^4)*
        t^2)))/(cw^2*Pi^(2*d)*s*sw^2), 
  ((I/27)*4^(-2 - d)*EL^6*(-3*s^2*(d^2*(2*Pi)^d*s^2 + 
       2^(1 + d)*Pi^d*(s^2*(6 + d^2 + 20*sw^2 - 32*sw^4 + 
           2*d*(-3 - 5*sw^2 + 8*sw^4)) + s*(-15*d + 3*d^2 + 
           8*(3 - 5*sw^2 + 8*sw^4))*t + 2*(3 - 20*sw^2 + 32*sw^4)*t^2)) + 
     4*mz^2*s*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
         s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
         2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[Z] - 
     mz^4*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
         s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
         2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[Z]^2 + 
     GaugeXi[A]*(-9*d^2*(2*Pi)^d*s^4 + 2^(1 + d)*Pi^d*s^2*
        (s^2*(-6 + 3*d^2 - 20*sw^2 + 32*sw^4 + d*(6 + 10*sw^2 - 16*sw^4)) + 
         s*(15*d - 3*d^2 - 8*(3 - 5*sw^2 + 8*sw^4))*t - 
         2*(3 - 20*sw^2 + 32*sw^4)*t^2) + mz^4*(3*d^2*(2*Pi)^d*s^2 + 
         2^(1 + d)*Pi^d*(2*s^2*(3 + 10*sw^2 - 16*sw^4 + 
             d*(-3 - 5*sw^2 + 8*sw^4)) + s*(-15*d + 3*d^2 + 
             8*(3 - 5*sw^2 + 8*sw^4))*t + 2*(3 - 20*sw^2 + 32*sw^4)*t^2))*
        GaugeXi[Z]^2)))/(cw^2*mz^2*Pi^(2*d)*s^2*sw^2*(-s + mz^2*GaugeXi[Z])), 
  ((-I/27)*4^(-2 - d)*EL^6*(-1 + GaugeXi[A])*(-9*d^2*(2*Pi)^d*s^3 + 
     2^(1 + d)*Pi^d*s*(s^2*(-6 + 3*d^2 - 20*sw^2 + 32*sw^4 + 
         d*(6 + 10*sw^2 - 16*sw^4)) + s*(15*d - 3*d^2 - 
         8*(3 - 5*sw^2 + 8*sw^4))*t - 2*(3 - 20*sw^2 + 32*sw^4)*t^2) + 
     mz^2*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
         s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
         2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[Z]))/
   (cw^2*mz^2*Pi^(2*d)*s^2*sw^2*(-s + mz^2*GaugeXi[Z])), 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, ((I/27)*2^(-2 - d)*EL^6*
    (mz^2*(33*d^3 - 3*d^4 + d*(84 + 340*sw^2 - 544*sw^4) + 
       12*d^2*(-9 - 5*sw^2 + 8*sw^4) + 24*(3 - 20*sw^2 + 32*sw^4)) + 
     s*(-57*d^3 + 6*d^4 + d^2*(156 + 40*sw^2 - 64*sw^4) - 
       8*(39 - 80*sw^2 + 128*sw^4) + 4*d*(-3 - 85*sw^2 + 136*sw^4)) + 
     2*(-36*d^3 + 3*d^4 + 8*(33 + 50*sw^2 - 80*sw^4) - 
       4*d^2*(-42 - 5*sw^2 + 8*sw^4) + 4*d*(-87 - 50*sw^2 + 80*sw^4))*t))/
   (cw^2*(-4 + d)*Pi^d*s*sw^2), 0, 
  ((-I/432)*EL^6*((2^(2 - d)*(-24*d^2 + 3*d^3 + d*(36 + 60*sw^2 - 96*sw^4) + 
        8*(3 - 20*sw^2 + 32*sw^4)))/Pi^d - 
     (2^(4 - d)*(156 + 36*d^2 - 3*d^3 + 40*sw^2 - 64*sw^4 + 
        4*d*(-33 - 5*sw^2 + 8*sw^4))*t)/((-4 + d)*Pi^d*s) - 
     (2^(2 - d)*(s*(-24*d^2 + 3*d^3 + d*(36 + 60*sw^2 - 96*sw^4) + 
          8*(3 - 20*sw^2 + 32*sw^4)) + 2*(156 + 36*d^2 - 3*d^3 + 40*sw^2 - 
          64*sw^4 + 4*d*(-33 - 5*sw^2 + 8*sw^4))*t))/(Pi^d*s) - 
     (4^(1 - d)*(2 - d)*(-3*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (2*s^2*(-6 + 6*d^2 + 40*sw^2 - 64*sw^4 + 3*d*(-3 - 5*sw^2 + 
              8*sw^4)) + s*(-36*d^2 + 3*d^3 - 4*d*(-36 - 5*sw^2 + 8*sw^4) + 
            12*(-15 - 10*sw^2 + 16*sw^4))*t + 8*(3 - 20*sw^2 + 32*sw^4)*
           t^2) + mz^2*(3*d^3*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
           (-2*s*(-6 + 6*d^2 + 40*sw^2 - 64*sw^4 + 3*d*(-3 - 5*sw^2 + 
                8*sw^4)) + (156 + 36*d^2 - 3*d^3 + 40*sw^2 - 64*sw^4 + 
              4*d*(-33 - 5*sw^2 + 8*sw^4))*t))))/((-4 + d)*Pi^(2*d)*
       (mz^2 - s)*s) + (d*(-1 + 4*sw^2)*(-3 + 8*sw^2)*(-1 + GaugeXi[A]))/
      (2*Pi)^d + (d*(3 - 20*sw^2 + 32*sw^4)*(-1 + GaugeXi[A]))/(2*Pi)^d - 
     (2^(1 - d)*(-6 + 3*d - 20*sw^2 + 32*sw^4)*t*(-1 + GaugeXi[A]))/
      (Pi^d*s) + ((d*s + 2*t)*(3*d*s - 4*s*(3 - 5*sw^2 + 8*sw^4) - 
        2*(3 - 20*sw^2 + 32*sw^4)*t)*(-1 + GaugeXi[A]))/((2*Pi)^d*s^2) - 
     (2^(1 - d)*(s*(-6 + 3*d - 20*sw^2 + 32*sw^4) - 2*(3 - 20*sw^2 + 32*sw^4)*
         t)*(-1 + GaugeXi[A]))/(Pi^d*s) - 
     ((-2 + d)*(s*(-6 + 3*d - 20*sw^2 + 32*sw^4) - 2*(3 - 20*sw^2 + 32*sw^4)*
         t)*(-1 + GaugeXi[A]))/((2*Pi)^d*s) - 
     (2^(1 - 4*d)*(-2 + d)*(mz^4*(2*Pi)^(3*d)*(-6 + 3*d - 20*sw^2 + 32*sw^4)*
         t + (2*Pi)^(3*d)*s^2*(-6 + 3*d - 20*sw^2 + 32*sw^4)*t + 
        2^(1 + 3*d)*mz^2*Pi^(3*d)*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
            4*d*(-3 - 5*sw^2 + 8*sw^4)) + 3*s*(18 - 11*d + 2*d^2 - 20*sw^2 + 
            32*sw^4)*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2))*(-1 + GaugeXi[A]))/
      (Pi^(4*d)*(mz^2 - s)^2*s) - 
     ((-2 + d)*(mz^2*(3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
           (s*(-3 - 10*sw^2 + 16*sw^4) + (-3 + 20*sw^2 - 32*sw^4)*t)) + 
        s*(-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
           (s*(3 + 3*d + 10*sw^2 - 16*sw^4) + (3 - 20*sw^2 + 32*sw^4)*t)))*
       (-1 + GaugeXi[A]))/((2*Pi)^(2*d)*(mz^2 - s)*s)))/(cw^2*mz^2*sw^2), 
  ((I/27)*EL^6*(8^(1 + d)*Pi^(3*d)*(156 + 36*d^2 - 3*d^3 + 40*sw^2 - 
       64*sw^4 + 4*d*(-33 - 5*sw^2 + 8*sw^4))*(1 - (2*t)/((-4 + d)*s)) + 
     (2^(3 + 2*d)*(-3 + d)*Pi^(2*d)*(-3*d^3*(2*Pi)^d*s^2 + 
        2^(1 + d)*Pi^d*(2*s^2*(-6 + 6*d^2 + 40*sw^2 - 64*sw^4 + 
            3*d*(-3 - 5*sw^2 + 8*sw^4)) + s*(-36*d^2 + 3*d^3 - 
            4*d*(-36 - 5*sw^2 + 8*sw^4) + 12*(-15 - 10*sw^2 + 16*sw^4))*t + 
          8*(3 - 20*sw^2 + 32*sw^4)*t^2) + mz^2*(3*d^3*(2*Pi)^d*s + 
          2^(1 + d)*Pi^d*(-2*s*(-6 + 6*d^2 + 40*sw^2 - 64*sw^4 + 
              3*d*(-3 - 5*sw^2 + 8*sw^4)) + (156 + 36*d^2 - 3*d^3 + 40*sw^2 - 
              64*sw^4 + 4*d*(-33 - 5*sw^2 + 8*sw^4))*t))))/
      ((-4 + d)*(mz^2 - s)*s) - (4^(1 + d)*Pi^(2*d)*(3*d^2*(2*Pi)^d*s^2 + 
        2^(1 + d)*Pi^d*(2*s^2*(3 + 10*sw^2 - 16*sw^4 + 
            d*(-3 - 5*sw^2 + 8*sw^4)) + s*(-15*d + 3*d^2 + 
            8*(3 - 5*sw^2 + 8*sw^4))*t + 2*(3 - 20*sw^2 + 32*sw^4)*t^2) + 
        mz^2*(-3*d^3*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
           (2*s*(12*d^2 + d*(-57 + 5*sw^2 - 8*sw^4) + 4*(21 - 5*sw^2 + 
                8*sw^4)) + (156 + 36*d^2 - 3*d^3 + 40*sw^2 - 64*sw^4 + 
              4*d*(-33 - 5*sw^2 + 8*sw^4))*t))))/(mz^2*s) + 
     ((2*Pi)^(3*d)*((-4 + d)*mz^2 + d*s)*(-1 + 4*sw^2)*(-3 + 8*sw^2)*
       (-1 + GaugeXi[A]))/mz^2 + ((2*Pi)^(3*d)*((-4 + d)*mz^2 + d*s)*
       (3 - 20*sw^2 + 32*sw^4)*(-1 + GaugeXi[A]))/mz^2 + 
     (2^(1 + 3*d)*Pi^(3*d)*(mz^2 - s)*(s*(-6 + 3*d - 20*sw^2 + 32*sw^4) - 
        2*(3 - 20*sw^2 + 32*sw^4)*t)*(-1 + GaugeXi[A]))/(mz^2*s) - 
     ((2*Pi)^(3*d)*((-4 + d)*mz^2 + (-2 + d)*s)*
       (s*(-6 + 3*d - 20*sw^2 + 32*sw^4) - 2*(3 - 20*sw^2 + 32*sw^4)*t)*
       (-1 + GaugeXi[A]))/(mz^2*s) + 
     ((2*Pi)^(3*d)*(3*d*s - 4*s*(3 - 5*sw^2 + 8*sw^4) - 
        2*(3 - 20*sw^2 + 32*sw^4)*t)*(mz^2*((-4 + d)*s + 2*t) + 
        s*(d*s + 2*t))*(-1 + GaugeXi[A]))/(mz^2*s^2) - 
     (2^(2 + 3*d)*Pi^(3*d)*(s*(-6 + 3*d - 20*sw^2 + 32*sw^4)*t + 
        mz^2*(s*(-6 + 3*d - 20*sw^2 + 32*sw^4) + 3*d*t - 
          4*(3 - 5*sw^2 + 8*sw^4)*t))*(-1 + GaugeXi[A]))/(mz^2*s) - 
     (2*(-3 + d)*(mz^2 + s)*(mz^4*(2*Pi)^(3*d)*(-6 + 3*d - 20*sw^2 + 32*sw^4)*
         t + (2*Pi)^(3*d)*s^2*(-6 + 3*d - 20*sw^2 + 32*sw^4)*t + 
        2^(1 + 3*d)*mz^2*Pi^(3*d)*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
            4*d*(-3 - 5*sw^2 + 8*sw^4)) + 3*s*(18 - 11*d + 2*d^2 - 20*sw^2 + 
            32*sw^4)*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2))*(-1 + GaugeXi[A]))/
      (s*(mz^3 - mz*s)^2) - ((2*Pi)^(2*d)*((-4 + d)*mz^2 + (-2 + d)*s)*
       (mz^2*(3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-3 - 10*sw^2 + 16*sw^4) + 
            (-3 + 20*sw^2 - 32*sw^4)*t)) + s*(-9*d*(2*Pi)^d*s + 
          2^(1 + d)*Pi^d*(s*(3 + 3*d + 10*sw^2 - 16*sw^4) + 
            (3 - 20*sw^2 + 32*sw^4)*t)))*(-1 + GaugeXi[A]))/
      (mz^2*(mz^2 - s)*s)))/(2^(4*(1 + d))*cw^2*Pi^(4*d)*sw^2), 
  ((-I/27)*2^(-3 - 2*d)*EL^6*t*(-3*d^3*(2*Pi)^d*s + 
     mz^2*(-3*d^3*(2*Pi)^d + 2^(1 + d)*Pi^d*(324 + 60*d^2 - 3*d^3 + 
         2*d*(-123 - 5*sw^2 + 8*sw^4))) + 2^(1 + d)*Pi^d*
      (s*(36 - 6*d^2 + 3*d^3 + 2*d*(-3 - 5*sw^2 + 8*sw^4)) + 
       4*(30 - 18*d + 3*d^2 - 20*sw^2 + 32*sw^4)*t)))/(cw^2*Pi^(2*d)*s*sw^2), 
  ((-I/27)*2^(-3 - 2*d)*EL^6*t*(-3*d^3*(2*Pi)^d*s^2 + 
     mz^4*(-3*d^3*(2*Pi)^d + 2^(2 + d)*Pi^d*(-6 + 6*d^2 + 40*sw^2 - 64*sw^4 + 
         3*d*(-3 - 5*sw^2 + 8*sw^4))) + 2^(1 + d)*mz^2*Pi^d*
      (s*(-18*d^2 + 3*d^3 - 4*d*(-3 - 5*sw^2 + 8*sw^4) + 
         16*(3 - 5*sw^2 + 8*sw^4)) + 4*(30 - 18*d + 3*d^2 - 20*sw^2 + 
         32*sw^4)*t) + 2^(2 + d)*Pi^d*
      (s^2*(-6 + 6*d^2 + 40*sw^2 - 64*sw^4 + 3*d*(-3 - 5*sw^2 + 8*sw^4)) + 
       2*s*(-6 + 3*d - 20*sw^2 + 32*sw^4)*t + 4*(3 - 20*sw^2 + 32*sw^4)*
        t^2)))/(cw^2*Pi^(2*d)*s*sw^2), 
  ((I/27)*4^(-2 - d)*EL^6*(-3*s^2*(d^2*(2*Pi)^d*s^2 + 
       2^(1 + d)*Pi^d*(s^2*(6 + d^2 + 20*sw^2 - 32*sw^4 + 
           2*d*(-3 - 5*sw^2 + 8*sw^4)) + s*(-15*d + 3*d^2 + 
           8*(3 - 5*sw^2 + 8*sw^4))*t + 2*(3 - 20*sw^2 + 32*sw^4)*t^2)) + 
     4*mz^2*s*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
         s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
         2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[Z] - 
     mz^4*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
         s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
         2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[Z]^2 + 
     GaugeXi[A]*(-9*d^2*(2*Pi)^d*s^4 + 2^(1 + d)*Pi^d*s^2*
        (s^2*(-6 + 3*d^2 - 20*sw^2 + 32*sw^4 + d*(6 + 10*sw^2 - 16*sw^4)) + 
         s*(15*d - 3*d^2 - 8*(3 - 5*sw^2 + 8*sw^4))*t - 
         2*(3 - 20*sw^2 + 32*sw^4)*t^2) + mz^4*(3*d^2*(2*Pi)^d*s^2 + 
         2^(1 + d)*Pi^d*(2*s^2*(3 + 10*sw^2 - 16*sw^4 + 
             d*(-3 - 5*sw^2 + 8*sw^4)) + s*(-15*d + 3*d^2 + 
             8*(3 - 5*sw^2 + 8*sw^4))*t + 2*(3 - 20*sw^2 + 32*sw^4)*t^2))*
        GaugeXi[Z]^2)))/(cw^2*mz^2*Pi^(2*d)*s^2*sw^2*(-s + mz^2*GaugeXi[Z])), 
  ((-I/27)*4^(-2 - d)*EL^6*(-1 + GaugeXi[A])*(-9*d^2*(2*Pi)^d*s^3 + 
     2^(1 + d)*Pi^d*s*(s^2*(-6 + 3*d^2 - 20*sw^2 + 32*sw^4 + 
         d*(6 + 10*sw^2 - 16*sw^4)) + s*(15*d - 3*d^2 - 
         8*(3 - 5*sw^2 + 8*sw^4))*t - 2*(3 - 20*sw^2 + 32*sw^4)*t^2) + 
     mz^2*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
         s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
         2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[Z]))/
   (cw^2*mz^2*Pi^(2*d)*s^2*sw^2*(-s + mz^2*GaugeXi[Z])), 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, ((I/27)*2^(-5 - d)*EL^6*(s*(-24*d^2*(3 - 20*sw^2 + 32*sw^4) + 
       d^3*(9 - 60*sw^2 + 96*sw^4) - 12*d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
         64*sw^8) + 8*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)) + 
     2*(-468 + 3120*sw^2 - 4784*sw^4 - 640*sw^6 + 512*sw^8 - 
       36*d^2*(3 - 20*sw^2 + 32*sw^4) + d^3*(9 - 60*sw^2 + 96*sw^4) - 
       4*d*(-99 + 660*sw^2 - 1030*sw^4 - 80*sw^6 + 64*sw^8))*t))/
   (cw^4*Pi^d*s*sw^4), 0, ((I/27)*2^(-7 - 2*d)*EL^6*
    (9*d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
      (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
         3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
           64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
         d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 
           64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*
        t^2) - mz^2*(-117*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (s^2*(18 - 120*sw^2 + 88*sw^4 + 320*sw^6 - 256*sw^8 + 
           d^2*(63 - 30*sw^2 + 48*sw^4) + 2*d*(-9 + 60*sw^2 - 70*sw^4 - 
             80*sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
           d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
             80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
           256*sw^8)*t^2)) + 
     (-2*s*(9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
          (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
             3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
               64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
             d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*
                sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
             256*sw^8)*t^2)) + 3*mz^2*(-51*d^2*(2*Pi)^d*s^2 + 
         2^(1 + d)*Pi^d*(2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
             3*d^2*(5 - 5*sw^2 + 8*sw^4) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*
                sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
             d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*
                sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
             256*sw^8)*t^2)))*GaugeXi[Z] + 
     (9*d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
        (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
           3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
             64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
           d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
             80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
           256*sw^8)*t^2) - 3*mz^2*(-39*d^2*(2*Pi)^d*s^2 + 
         2^(1 + d)*Pi^d*(2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
             3*d^2*(4 - 5*sw^2 + 8*sw^4) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*
                sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
             d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*
                sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
             256*sw^8)*t^2)))*GaugeXi[Z]^2 + 
     mz^2*(-9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (s^2*(18 - 120*sw^2 + 88*sw^4 + 320*sw^6 - 256*sw^8 + 
           d^2*(9 - 30*sw^2 + 48*sw^4) + 2*d*(-9 + 60*sw^2 - 70*sw^4 - 
             80*sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
           d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
             80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
           256*sw^8)*t^2))*GaugeXi[Z]^3))/(cw^4*(-1 + d)*mz^4*Pi^(2*d)*s^2*
    sw^4*(-1 + GaugeXi[Z])^2), 0, 
  ((-I/27)*2^(-5 - d)*EL^6*t*(-4*mz^2*(-468 + 3120*sw^2 - 4784*sw^4 - 
       640*sw^6 + 512*sw^8 - 36*d^2*(3 - 20*sw^2 + 32*sw^4) + 
       d^3*(9 - 60*sw^2 + 96*sw^4) - 4*d*(-99 + 660*sw^2 - 1030*sw^4 - 
         80*sw^6 + 64*sw^8)) + s*(72*(3 - 20*sw^2 + 32*sw^4) - 
       12*d^2*(3 - 20*sw^2 + 32*sw^4) + d^3*(9 - 60*sw^2 + 96*sw^4) + 
       4*d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 64*sw^8)) + 
     8*(90 - 600*sw^2 + 1064*sw^4 - 320*sw^6 + 256*sw^8 - 
       18*d*(3 - 20*sw^2 + 32*sw^4) + d^2*(9 - 60*sw^2 + 96*sw^4))*t))/
   (cw^4*Pi^d*s*sw^4), 0, 0, ((-I/27)*2^(-7 - 2*d)*EL^6*
    (9*d^2*mz^2*(2*Pi)^d*s^2 - 9*d^2*(2*Pi)^d*s^3 - 
     2^(1 + d)*Pi^d*s*(2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
         3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
           64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
         d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 
           64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*
        t^2) - 2^(1 + d)*mz^2*Pi^d*(s^2*(18 - 120*sw^2 + 88*sw^4 + 320*sw^6 - 
         256*sw^8 + d^2*(9 - 30*sw^2 + 48*sw^4) + 
         2*d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 64*sw^8)) + 
       s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + d^2*(9 - 60*sw^2 + 96*sw^4) + 
         8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8))*t + 
       2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^2) + 
     (2*s*(9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
          (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
             3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
               64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
             d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*
                sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
             256*sw^8)*t^2)) + 3*mz^2*(-15*d^2*(2*Pi)^d*s^2 + 
         2^(1 + d)*Pi^d*(2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
             3*d^2*(2 - 5*sw^2 + 8*sw^4) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*
                sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
             d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*
                sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
             256*sw^8)*t^2)))*GaugeXi[Z] - 
     (9*d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
        (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
           3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
             64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
           d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
             80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
           256*sw^8)*t^2) + 3*mz^2*(-3*d^2*(2*Pi)^d*s^2 + 
         2^(1 + d)*Pi^d*(2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
             3*d^2*(1 - 5*sw^2 + 8*sw^4) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*
                sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
             d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*
                sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
             256*sw^8)*t^2)))*GaugeXi[Z]^2 + 
     mz^2*(-117*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (s^2*(18 - 120*sw^2 + 88*sw^4 + 320*sw^6 - 256*sw^8 + 
           d^2*(63 - 30*sw^2 + 48*sw^4) + 2*d*(-9 + 60*sw^2 - 70*sw^4 - 
             80*sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
           d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
             80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
           256*sw^8)*t^2))*GaugeXi[Z]^3))/(cw^4*(-1 + d)*mz^4*Pi^(2*d)*s^2*
    sw^4*(-1 + GaugeXi[Z])^2), ((-I/27)*2^(-7 - 2*d)*EL^6*
    (9*d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
      (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
         3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
           64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
         d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 
           64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*
        t^2) - mz^2*(27*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (s^2*(18 - 120*sw^2 + 88*sw^4 + 320*sw^6 - 256*sw^8 + 
           d^2*(-9 - 30*sw^2 + 48*sw^4) + 2*d*(-9 + 60*sw^2 - 70*sw^4 - 
             80*sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
           d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
             80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
           256*sw^8)*t^2)) + 
     (-2*s*(9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
          (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
             3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
               64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
             d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*
                sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
             256*sw^8)*t^2)) + 3*mz^2*(-3*d^2*(2*Pi)^d*s^2 + 
         2^(1 + d)*Pi^d*(2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
             3*d^2*(1 - 5*sw^2 + 8*sw^4) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*
                sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
             d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*
                sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
             256*sw^8)*t^2)))*GaugeXi[Z] - (3*mz^2 - s)*
      (9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
           3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
             64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
           d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
             80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
           256*sw^8)*t^2))*GaugeXi[Z]^2 + 
     mz^2*(-9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (s^2*(18 - 120*sw^2 + 88*sw^4 + 320*sw^6 - 256*sw^8 + 
           d^2*(9 - 30*sw^2 + 48*sw^4) + 2*d*(-9 + 60*sw^2 - 70*sw^4 - 
             80*sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
           d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
             80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
           256*sw^8)*t^2))*GaugeXi[Z]^3))/(cw^4*(-1 + d)*mz^4*Pi^(2*d)*s^2*
    sw^4*(-1 + GaugeXi[Z])^2), ((I/27)*2^(-7 - 2*d)*EL^6*
    ((2*Pi)^d*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*
      (s - s*GaugeXi[Z])^2*(d*(mz^2 - s)^2 + 2*((-2 + d)*mz^4 - d*mz^2*s)*
        GaugeXi[Z] + d*mz^4*GaugeXi[Z]^2) + 
     s^2*(d*(mz^2 - s)^2 + 2*((-2 + d)*mz^4 - d*mz^2*s)*GaugeXi[Z] + 
       d*mz^4*GaugeXi[Z]^2)*(9*(2*Pi)^d + 2^(2 + d)*Pi^d*sw^2*
        (-15 + 50*sw^2 - 80*sw^4 + 64*sw^6) - 2^(1 + d)*Pi^d*
        (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*GaugeXi[Z] + 
       (9*(2*Pi)^d + 2^(2 + d)*Pi^d*sw^2*(-15 + 50*sw^2 - 80*sw^4 + 64*sw^6))*
        GaugeXi[Z]^2) + (1 - d)*s*(mz^2 - s + mz^2*GaugeXi[Z])^2*
      (9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
        (s*(-9 - 30*(-2 + d)*sw^2 + (-44 + 48*d)*sw^4 - 160*sw^6 + 
           128*sw^8) + (-9 + 60*sw^2 - 200*sw^4 + 320*sw^6 - 256*sw^8)*t) - 
       2^(1 + d)*Pi^d*(d*s*(9 - 60*sw^2 + 96*sw^4) + 
         2*s*(-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 128*sw^8) - 
         2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t)*GaugeXi[Z] + 
       (9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-9 - 30*(-2 + d)*sw^2 + 
             (-44 + 48*d)*sw^4 - 160*sw^6 + 128*sw^8) + 
           (-9 + 60*sw^2 - 200*sw^4 + 320*sw^6 - 256*sw^8)*t))*
        GaugeXi[Z]^2) + ((mz^2 - s)^2*(d*s + 2*t) + 
       2*(mz^4*((-2 + d)*s - 2*t) - mz^2*s*(d*s + 2*t))*GaugeXi[Z] + 
       mz^4*(d*s + 2*t)*GaugeXi[Z]^2)*(9*d*(2*Pi)^d*s - 
       2^(1 + d)*Pi^d*(2*s*(9 + 15*(-4 + d)*sw^2 + (122 - 24*d)*sw^4 - 
           80*sw^6 + 64*sw^8) + (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
           256*sw^8)*t) - 2^(1 + d)*Pi^d*(d*s*(9 - 60*sw^2 + 96*sw^4) - 
         4*s*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8) - 
         2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t)*GaugeXi[Z] - 
       (-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(2*s*(9 + 15*(-4 + d)*sw^2 + 
             (122 - 24*d)*sw^4 - 80*sw^6 + 64*sw^8) + 
           (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t))*GaugeXi[Z]^2) - 
     (1 - d)*s*(mz^2 - s + mz^2*GaugeXi[Z])*
      (s*(9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-9 - 30*(-2 + d)*sw^2 + 
             (-44 + 48*d)*sw^4 - 160*sw^6 + 128*sw^8) + 
           (-9 + 60*sw^2 - 200*sw^4 + 320*sw^6 - 256*sw^8)*t)) - 
       mz^2*(27*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
          (s*(-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 128*sw^8 + 
             d*(-9 - 30*sw^2 + 48*sw^4)) + (-9 + 60*sw^2 - 200*sw^4 + 
             320*sw^6 - 256*sw^8)*t)) - 
       (2^(1 + d)*Pi^d*s*(d*s*(9 - 60*sw^2 + 96*sw^4) + 
           2*s*(-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 128*sw^8) - 
           2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t) + 
         mz^2*(-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (s*(9 + 30*(-2 + d)*sw^2 + (44 - 48*d)*sw^4 + 160*sw^6 - 128*
                sw^8) + (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t)))*
        GaugeXi[Z] - (-(s*(9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
             (s*(-9 - 30*(-2 + d)*sw^2 + (-44 + 48*d)*sw^4 - 160*sw^6 + 
                128*sw^8) + (-9 + 60*sw^2 - 200*sw^4 + 320*sw^6 - 256*sw^8)*
               t))) + mz^2*(27*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (s*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 - 6*d*
                (3 - 5*sw^2 + 8*sw^4)) + (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
               256*sw^8)*t)))*GaugeXi[Z]^2 - 
       mz^2*(-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
          (s*(-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 128*sw^8 + 
             d*(9 - 30*sw^2 + 48*sw^4)) + (-9 + 60*sw^2 - 200*sw^4 + 
             320*sw^6 - 256*sw^8)*t))*GaugeXi[Z]^3) + 
     2*(1 - d)*s*(mz^4*(9*d*(2*Pi)^d + 2^(1 + d)*Pi^d*
          (-9 - 30*(-2 + d)*sw^2 + (-44 + 48*d)*sw^4 - 160*sw^6 + 128*sw^8))*
        t + s^2*(-27*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(-9 + 60*sw^2 - 44*sw^4 - 
           160*sw^6 + 128*sw^8 + 6*d*(3 - 5*sw^2 + 8*sw^4)))*t + 
       2*mz^2*(9*d*(2*Pi)^d*s*(d*s - 11*t) + 2^(1 + d)*Pi^d*
          (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
             3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
               64*sw^8)) + 3*s*(27 - 180*sw^2 + 340*sw^4 - 160*sw^6 + 
             128*sw^8 - 22*d*sw^2*(-5 + 8*sw^2) + d^2*(3 - 20*sw^2 + 32*
                sw^4))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*
            t^2)) - 2*(s^2*(9*d*(2*Pi)^d + 2^(1 + d)*Pi^d*
            (-9 - 30*(-2 + d)*sw^2 + (-44 + 48*d)*sw^4 - 160*sw^6 + 
             128*sw^8))*t + mz^4*(9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (s*(-9 - 30*(-2 + d)*sw^2 + (-44 + 48*d)*sw^4 - 160*sw^6 + 128*
                sw^8) + 3*(-3 + d)*(3 - 20*sw^2 + 32*sw^4)*t)) + 
         mz^2*(-189*d*(2*Pi)^d*s*t + 2^(1 + d)*Pi^d*
            (s^2*(d^2*(9 - 60*sw^2 + 96*sw^4) + 4*(9 - 60*sw^2 + 44*sw^4 + 
                 160*sw^6 - 128*sw^8) + 4*d*(-9 + 60*sw^2 - 70*sw^4 - 
                 80*sw^6 + 64*sw^8)) + s*(153 - 1020*sw^2 + 1996*sw^4 - 1120*
                sw^6 + 896*sw^8 - 126*d*sw^2*(-5 + 8*sw^2) + 6*d^2*
                (3 - 20*sw^2 + 32*sw^4))*t + 4*(9 - 60*sw^2 + 200*sw^4 - 320*
                sw^6 + 256*sw^8)*t^2)))*GaugeXi[Z] + 
       (s^2*(-27*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(-9 + 60*sw^2 - 44*sw^4 - 
             160*sw^6 + 128*sw^8 + 6*d*(3 - 5*sw^2 + 8*sw^4)))*t + 
         2^(1 + d)*mz^4*Pi^d*(2*s*(d*(9 - 60*sw^2 + 96*sw^4) + 
             2*(-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 128*sw^8)) + 
           (-90 + 600*sw^2 - 1064*sw^4 + 320*sw^6 - 256*sw^8 + 
             9*d*(3 - 20*sw^2 + 32*sw^4))*t) + 
         2*mz^2*(9*d*(2*Pi)^d*s*(d*s - 9*t) + 2^(1 + d)*Pi^d*
            (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 3*d^2*sw^2*
                (-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
                 64*sw^8)) + s*(63 - 420*sw^2 + 932*sw^4 - 800*sw^6 + 640*
                sw^8 - 54*d*sw^2*(-5 + 8*sw^2) + d^2*(9 - 60*sw^2 + 96*sw^4))*
              t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^2)))*
        GaugeXi[Z]^2 - 2*(mz^2*s*(9*d*(2*Pi)^d + 2^(1 + d)*Pi^d*
            (-9 - 30*(-2 + d)*sw^2 + (-44 + 48*d)*sw^4 - 160*sw^6 + 
             128*sw^8))*t + mz^4*(9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (s*(-9 - 30*(-2 + d)*sw^2 + (-44 + 48*d)*sw^4 - 160*sw^6 + 128*
                sw^8) + 3*(-3 + d)*(3 - 20*sw^2 + 32*sw^4)*t)))*
        GaugeXi[Z]^3 + mz^4*(9*d*(2*Pi)^d + 2^(1 + d)*Pi^d*
          (-9 - 30*(-2 + d)*sw^2 + (-44 + 48*d)*sw^4 - 160*sw^6 + 128*sw^8))*
        t*GaugeXi[Z]^4)))/(cw^4*(1 - d)*mz^4*Pi^(2*d)*sw^4*
    (s - s*GaugeXi[Z])^2), ((I/27)*2^(-7 - 2*d)*EL^6*
    (9*d^2*mz^2*(2*Pi)^d*s^2 - 9*d^2*(2*Pi)^d*s^3 - 
     2^(1 + d)*Pi^d*s*(2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
         3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
           64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
         d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 
           64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*
        t^2) - 2^(1 + d)*mz^2*Pi^d*(s^2*(18 - 120*sw^2 + 88*sw^4 + 320*sw^6 - 
         256*sw^8 + d^2*(9 - 30*sw^2 + 48*sw^4) + 
         2*d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 64*sw^8)) + 
       s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + d^2*(9 - 60*sw^2 + 96*sw^4) + 
         8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8))*t + 
       2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^2) + 
     (3*mz^2 + 2*s)*(9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
           3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
             64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
           d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
             80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
           256*sw^8)*t^2))*GaugeXi[Z] - 
     (9*d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
        (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
           3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
             64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
           d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
             80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
           256*sw^8)*t^2) + 3*mz^2*(-3*d^2*(2*Pi)^d*s^2 + 
         2^(1 + d)*Pi^d*(2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
             3*d^2*(1 - 5*sw^2 + 8*sw^4) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*
                sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
             d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*
                sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
             256*sw^8)*t^2)))*GaugeXi[Z]^2 + 
     mz^2*(27*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (s^2*(18 - 120*sw^2 + 88*sw^4 + 320*sw^6 - 256*sw^8 + 
           d^2*(-9 - 30*sw^2 + 48*sw^4) + 2*d*(-9 + 60*sw^2 - 70*sw^4 - 
             80*sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
           d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
             80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
           256*sw^8)*t^2))*GaugeXi[Z]^3))/(cw^4*(-1 + d)*mz^4*Pi^(2*d)*s^2*
    sw^4*(-1 + GaugeXi[Z])^2), ((I/27)*2^(-7 - 2*d)*EL^6*
    ((2*Pi)^d*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*
      (s - s*GaugeXi[Z])^2*(d*(mz^2 - s)^2 + 2*((-2 + d)*mz^4 - d*mz^2*s)*
        GaugeXi[Z] + d*mz^4*GaugeXi[Z]^2) + 
     s^2*(d*(mz^2 - s)^2 + 2*((-2 + d)*mz^4 - d*mz^2*s)*GaugeXi[Z] + 
       d*mz^4*GaugeXi[Z]^2)*(9*(2*Pi)^d + 2^(2 + d)*Pi^d*sw^2*
        (-15 + 50*sw^2 - 80*sw^4 + 64*sw^6) - 2^(1 + d)*Pi^d*
        (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*GaugeXi[Z] + 
       (9*(2*Pi)^d + 2^(2 + d)*Pi^d*sw^2*(-15 + 50*sw^2 - 80*sw^4 + 64*sw^6))*
        GaugeXi[Z]^2) + (1 - d)*s*(mz^2 - s + mz^2*GaugeXi[Z])^2*
      (9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
        (s*(-9 - 30*(-2 + d)*sw^2 + (-44 + 48*d)*sw^4 - 160*sw^6 + 
           128*sw^8) + (-9 + 60*sw^2 - 200*sw^4 + 320*sw^6 - 256*sw^8)*t) - 
       2^(1 + d)*Pi^d*(d*s*(9 - 60*sw^2 + 96*sw^4) + 
         2*s*(-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 128*sw^8) - 
         2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t)*GaugeXi[Z] + 
       (9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-9 - 30*(-2 + d)*sw^2 + 
             (-44 + 48*d)*sw^4 - 160*sw^6 + 128*sw^8) + 
           (-9 + 60*sw^2 - 200*sw^4 + 320*sw^6 - 256*sw^8)*t))*
        GaugeXi[Z]^2) + ((mz^2 - s)^2*(d*s + 2*t) + 
       2*(mz^4*((-2 + d)*s - 2*t) - mz^2*s*(d*s + 2*t))*GaugeXi[Z] + 
       mz^4*(d*s + 2*t)*GaugeXi[Z]^2)*(9*d*(2*Pi)^d*s - 
       2^(1 + d)*Pi^d*(2*s*(9 + 15*(-4 + d)*sw^2 + (122 - 24*d)*sw^4 - 
           80*sw^6 + 64*sw^8) + (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
           256*sw^8)*t) - 2^(1 + d)*Pi^d*(d*s*(9 - 60*sw^2 + 96*sw^4) - 
         4*s*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8) - 
         2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t)*GaugeXi[Z] - 
       (-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(2*s*(9 + 15*(-4 + d)*sw^2 + 
             (122 - 24*d)*sw^4 - 80*sw^6 + 64*sw^8) + 
           (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t))*GaugeXi[Z]^2) - 
     (1 - d)*s*(mz^2 - s + mz^2*GaugeXi[Z])*
      (s*(9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-9 - 30*(-2 + d)*sw^2 + 
             (-44 + 48*d)*sw^4 - 160*sw^6 + 128*sw^8) + 
           (-9 + 60*sw^2 - 200*sw^4 + 320*sw^6 - 256*sw^8)*t)) - 
       mz^2*(-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
          (s*(-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 128*sw^8 + 
             d*(9 - 30*sw^2 + 48*sw^4)) + (-9 + 60*sw^2 - 200*sw^4 + 
             320*sw^6 - 256*sw^8)*t)) - 
       (2^(1 + d)*Pi^d*s*(d*s*(9 - 60*sw^2 + 96*sw^4) + 
           2*s*(-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 128*sw^8) - 
           2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t) + 
         mz^2*(27*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (s*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 - 6*d*
                (3 - 5*sw^2 + 8*sw^4)) + (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
               256*sw^8)*t)))*GaugeXi[Z] + (mz^2 + s)*(9*d*(2*Pi)^d*s + 
         2^(1 + d)*Pi^d*(s*(-9 - 30*(-2 + d)*sw^2 + (-44 + 48*d)*sw^4 - 
             160*sw^6 + 128*sw^8) + (-9 + 60*sw^2 - 200*sw^4 + 320*sw^6 - 
             256*sw^8)*t))*GaugeXi[Z]^2 - mz^2*(27*d*(2*Pi)^d*s + 
         2^(1 + d)*Pi^d*(s*(-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 128*sw^8 + 
             d*(-9 - 30*sw^2 + 48*sw^4)) + (-9 + 60*sw^2 - 200*sw^4 + 
             320*sw^6 - 256*sw^8)*t))*GaugeXi[Z]^3) + 
     2*(1 - d)*s*(mz^4*(9*d*(2*Pi)^d + 2^(1 + d)*Pi^d*
          (-9 - 30*(-2 + d)*sw^2 + (-44 + 48*d)*sw^4 - 160*sw^6 + 128*sw^8))*
        t + s^2*(-27*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(-9 + 60*sw^2 - 44*sw^4 - 
           160*sw^6 + 128*sw^8 + 6*d*(3 - 5*sw^2 + 8*sw^4)))*t + 
       2*mz^2*(9*d*(2*Pi)^d*s*(d*s - 11*t) + 2^(1 + d)*Pi^d*
          (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
             3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
               64*sw^8)) + 3*s*(27 - 180*sw^2 + 340*sw^4 - 160*sw^6 + 
             128*sw^8 - 22*d*sw^2*(-5 + 8*sw^2) + d^2*(3 - 20*sw^2 + 32*
                sw^4))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*
            t^2)) - 2*(s^2*(9*d*(2*Pi)^d + 2^(1 + d)*Pi^d*
            (-9 - 30*(-2 + d)*sw^2 + (-44 + 48*d)*sw^4 - 160*sw^6 + 
             128*sw^8))*t + mz^4*(9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (s*(-9 - 30*(-2 + d)*sw^2 + (-44 + 48*d)*sw^4 - 160*sw^6 + 128*
                sw^8) + 3*(-3 + d)*(3 - 20*sw^2 + 32*sw^4)*t)) + 
         mz^2*(-189*d*(2*Pi)^d*s*t + 2^(1 + d)*Pi^d*
            (s^2*(d^2*(9 - 60*sw^2 + 96*sw^4) + 4*(9 - 60*sw^2 + 44*sw^4 + 
                 160*sw^6 - 128*sw^8) + 4*d*(-9 + 60*sw^2 - 70*sw^4 - 
                 80*sw^6 + 64*sw^8)) + s*(153 - 1020*sw^2 + 1996*sw^4 - 1120*
                sw^6 + 896*sw^8 - 126*d*sw^2*(-5 + 8*sw^2) + 6*d^2*
                (3 - 20*sw^2 + 32*sw^4))*t + 4*(9 - 60*sw^2 + 200*sw^4 - 320*
                sw^6 + 256*sw^8)*t^2)))*GaugeXi[Z] + 
       (s^2*(-27*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(-9 + 60*sw^2 - 44*sw^4 - 
             160*sw^6 + 128*sw^8 + 6*d*(3 - 5*sw^2 + 8*sw^4)))*t + 
         2^(1 + d)*mz^4*Pi^d*(2*s*(d*(9 - 60*sw^2 + 96*sw^4) + 
             2*(-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 128*sw^8)) + 
           (-90 + 600*sw^2 - 1064*sw^4 + 320*sw^6 - 256*sw^8 + 
             9*d*(3 - 20*sw^2 + 32*sw^4))*t) + 
         2*mz^2*(9*d*(2*Pi)^d*s*(d*s - 9*t) + 2^(1 + d)*Pi^d*
            (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 3*d^2*sw^2*
                (-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
                 64*sw^8)) + s*(63 - 420*sw^2 + 932*sw^4 - 800*sw^6 + 640*
                sw^8 - 54*d*sw^2*(-5 + 8*sw^2) + d^2*(9 - 60*sw^2 + 96*sw^4))*
              t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^2)))*
        GaugeXi[Z]^2 - 2*(mz^2*s*(9*d*(2*Pi)^d + 2^(1 + d)*Pi^d*
            (-9 - 30*(-2 + d)*sw^2 + (-44 + 48*d)*sw^4 - 160*sw^6 + 
             128*sw^8))*t + mz^4*(9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (s*(-9 - 30*(-2 + d)*sw^2 + (-44 + 48*d)*sw^4 - 160*sw^6 + 128*
                sw^8) + 3*(-3 + d)*(3 - 20*sw^2 + 32*sw^4)*t)))*
        GaugeXi[Z]^3 + mz^4*(9*d*(2*Pi)^d + 2^(1 + d)*Pi^d*
          (-9 - 30*(-2 + d)*sw^2 + (-44 + 48*d)*sw^4 - 160*sw^6 + 128*sw^8))*
        t*GaugeXi[Z]^4)))/(cw^4*(1 - d)*mz^4*Pi^(2*d)*sw^4*
    (s - s*GaugeXi[Z])^2), ((-I/27)*2^(-7 - 2*d)*EL^6*
    (9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
      (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
         3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
           64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
         d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 
           64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*
        t^2))*(s - 4*mz^2*GaugeXi[Z]))/(cw^4*(-1 + d)*mz^4*Pi^(2*d)*s*sw^4), 
  ((I/27)*2^(-7 - 2*d)*EL^6*(((2*Pi)^d*(4*(-1 + d)*mz^4 - 4*d*mz^2*s + d*s^2)*
       (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8))/((-1 + d)*mz^4) + 
     2^(2 + d)*Pi^d*(468 - 3120*sw^2 + 4784*sw^4 + 640*sw^6 - 512*sw^8 + 
       d^3*(-9 + 60*sw^2 - 96*sw^4) + 36*d^2*(3 - 20*sw^2 + 32*sw^4) + 
       4*d*(-99 + 660*sw^2 - 1030*sw^4 - 80*sw^6 + 64*sw^8))*(1 + (2*t)/s) + 
     4*(-9*d^3*(2*Pi)^d + 2^(2 + d)*Pi^d*(117 - 780*sw^2 + 1196*sw^4 + 
         160*sw^6 - 128*sw^8 - 3*d^3*sw^2*(-5 + 8*sw^2) + 
         9*d^2*(3 - 20*sw^2 + 32*sw^4) + d*(-99 + 660*sw^2 - 1030*sw^4 - 
           80*sw^6 + 64*sw^8)))*(1 + (2*t)/s) - 
     (4*(mz^2 - s/2)*(2^(1 + d)*mz^2*Pi^d*(d*s*(9 - 60*sw^2 + 96*sw^4) + 
          2*s*(-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 128*sw^8) - 
          2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t) - 
        s*(9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-9 - 30*(-2 + d)*sw^2 + 
              (-44 + 48*d)*sw^4 - 160*sw^6 + 128*sw^8) + 
            (-9 + 60*sw^2 - 200*sw^4 + 320*sw^6 - 256*sw^8)*t))))/(mz^4*s) + 
     ((4*(-1 + d)*mz^4 - 4*d*mz^2*s + d*s^2)*(9*(2*Pi)^d + 
        2^(2 + d)*Pi^d*sw^2*(-15 + 50*sw^2 - 80*sw^4 + 64*sw^6) - 
        2^(1 + d)*Pi^d*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*
         GaugeXi[Z] + (9*(2*Pi)^d + 2^(2 + d)*Pi^d*sw^2*(-15 + 50*sw^2 - 
            80*sw^4 + 64*sw^6))*GaugeXi[Z]^2))/((-1 + d)*mz^4*
       (-1 + GaugeXi[Z])^2) - ((4*(-1 + d)*mz^4 - 4*mz^2*(d*s + 2*t) + 
        s*(d*s + 2*t))*(-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
         (2*s*(9 + 15*(-4 + d)*sw^2 + (122 - 24*d)*sw^4 - 80*sw^6 + 
            64*sw^8) + (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t) + 
        2^(1 + d)*Pi^d*(d*s*(9 - 60*sw^2 + 96*sw^4) - 
          4*s*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8) - 
          2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t)*GaugeXi[Z] + 
        (-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(2*s*(9 + 15*(-4 + d)*sw^2 + 
              (122 - 24*d)*sw^4 - 80*sw^6 + 64*sw^8) + 
            (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t))*GaugeXi[Z]^2))/
      ((-1 + d)*mz^4*s*(-1 + GaugeXi[Z])^2) + 
     (2*(-(s^2*(-27*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(-9 + 60*sw^2 - 44*sw^4 - 
             160*sw^6 + 128*sw^8 + 6*d*(3 - 5*sw^2 + 8*sw^4)))*t) + 
        2*mz^4*(9*d*(77 + d^2)*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
           (s*(-513 + 3420*sw^2 - 5628*sw^4 + 480*sw^6 - 384*sw^8 + 
              6*d^3*sw^2*(-5 + 8*sw^2) - 24*d^2*(3 - 20*sw^2 + 32*sw^4) + 
              2*d*sw^2*(-1155 + 1874*sw^2 - 80*sw^4 + 64*sw^6)) + 
            (-477 + 3180*sw^2 - 4984*sw^4 - 320*sw^6 + 256*sw^8 - 
              36*d^2*(3 - 20*sw^2 + 32*sw^4) + d^3*(9 - 60*sw^2 + 96*sw^4) - 
              4*d*(-99 + 660*sw^2 - 1030*sw^4 - 80*sw^6 + 64*sw^8))*t)) - 
        4*mz^2*(9*d*(2*Pi)^d*s*(d*s - 11*t) + 2^(1 + d)*Pi^d*
           (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
              3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 
                80*sw^6 + 64*sw^8)) + 3*s*(27 - 180*sw^2 + 340*sw^4 - 
              160*sw^6 + 128*sw^8 - 22*d*sw^2*(-5 + 8*sw^2) + 
              d^2*(3 - 20*sw^2 + 32*sw^4))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 
              320*sw^6 + 256*sw^8)*t^2)) - 
        2*(-(s^2*(9*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(-9 - 30*(-2 + d)*sw^2 + 
               (-44 + 48*d)*sw^4 - 160*sw^6 + 128*sw^8))*t) + 
          2*mz^4*(9*d*(77 + d^2)*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
             (s*(-513 + 3420*sw^2 - 5628*sw^4 + 480*sw^6 - 384*sw^8 + 
                6*d^3*sw^2*(-5 + 8*sw^2) - 24*d^2*(3 - 20*sw^2 + 32*sw^4) + 
                2*d*sw^2*(-1155 + 1874*sw^2 - 80*sw^4 + 64*sw^6)) + 
              (-477 + 3180*sw^2 - 4984*sw^4 - 320*sw^6 + 256*sw^8 - 
                36*d^2*(3 - 20*sw^2 + 32*sw^4) + d^3*(9 - 60*sw^2 + 
                  96*sw^4) - 4*d*(-99 + 660*sw^2 - 1030*sw^4 - 80*sw^6 + 
                  64*sw^8))*t)) - 4*mz^2*(9*d*(2*Pi)^d*s*(d*s - 11*t) + 
            2^(1 + d)*Pi^d*(2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 
                128*sw^8 + 3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 
                  70*sw^4 - 80*sw^6 + 64*sw^8)) + 3*s*(27 - 180*sw^2 + 
                340*sw^4 - 160*sw^6 + 128*sw^8 - 22*d*sw^2*(-5 + 8*sw^2) + 
                d^2*(3 - 20*sw^2 + 32*sw^4))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 
                320*sw^6 + 256*sw^8)*t^2)))*GaugeXi[Z] + 
        (-(s^2*(-27*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(-9 + 60*sw^2 - 44*sw^4 - 160*
                sw^6 + 128*sw^8 + 6*d*(3 - 5*sw^2 + 8*sw^4)))*t) + 
          2*mz^4*(9*d*(77 + d^2)*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
             (s*(-513 + 3420*sw^2 - 5628*sw^4 + 480*sw^6 - 384*sw^8 + 
                6*d^3*sw^2*(-5 + 8*sw^2) - 24*d^2*(3 - 20*sw^2 + 32*sw^4) + 
                2*d*sw^2*(-1155 + 1874*sw^2 - 80*sw^4 + 64*sw^6)) + 
              (-477 + 3180*sw^2 - 4984*sw^4 - 320*sw^6 + 256*sw^8 - 
                36*d^2*(3 - 20*sw^2 + 32*sw^4) + d^3*(9 - 60*sw^2 + 
                  96*sw^4) - 4*d*(-99 + 660*sw^2 - 1030*sw^4 - 80*sw^6 + 
                  64*sw^8))*t)) - 4*mz^2*(9*d*(2*Pi)^d*s*(d*s - 11*t) + 
            2^(1 + d)*Pi^d*(2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 
                128*sw^8 + 3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 
                  70*sw^4 - 80*sw^6 + 64*sw^8)) + 3*s*(27 - 180*sw^2 + 
                340*sw^4 - 160*sw^6 + 128*sw^8 - 22*d*sw^2*(-5 + 8*sw^2) + 
                d^2*(3 - 20*sw^2 + 32*sw^4))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 
                320*sw^6 + 256*sw^8)*t^2)))*GaugeXi[Z]^2))/
      (mz^4*s*(-1 + GaugeXi[Z])^2)))/(cw^4*Pi^(2*d)*sw^4), 
  ((I/27)*2^(-5 - 2*d)*EL^6*(-9*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*mz^2*Pi^d*s*
      (-24*d^2*(3 - 20*sw^2 + 32*sw^4) + d^3*(9 - 60*sw^2 + 96*sw^4) - 
       12*d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 64*sw^8) + 
       8*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)) + 
     2^(2 + d)*Pi^d*(s^2*(-3*d^3*sw^2*(-5 + 8*sw^2) + 
         6*d^2*(3 - 20*sw^2 + 32*sw^4) + 3*d*(-9 + 60*sw^2 - 70*sw^4 - 
           80*sw^6 + 64*sw^8) - 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
           256*sw^8)) + 2*s*(d*(9 - 60*sw^2 + 96*sw^4) + 
         2*(-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 128*sw^8))*t + 
       4*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^2)))/
   (cw^4*Pi^(2*d)*s*sw^4), ((-I/27)*4^(-3 - d)*EL^6*
    (4*mz^2*t*(9*d^3*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
        (s*(6*d^3*sw^2*(-5 + 8*sw^2) - 9*d^2*(3 - 20*sw^2 + 32*sw^4) - 
           2*d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 64*sw^8) + 
           8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8)) + 
         2*(90 - 600*sw^2 + 1064*sw^4 - 320*sw^6 + 256*sw^8 - 
           18*d*(3 - 20*sw^2 + 32*sw^4) + d^2*(9 - 60*sw^2 + 96*sw^4))*t)) + 
     2*mz^4*(9*d^3*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
        (2*s*(3*d^3*sw^2*(-5 + 8*sw^2) - 6*d^2*(3 - 20*sw^2 + 32*sw^4) - 
           3*d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 64*sw^8) + 
           2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)) + 
         (468 - 3120*sw^2 + 4784*sw^4 + 640*sw^6 - 512*sw^8 + 
           d^3*(-9 + 60*sw^2 - 96*sw^4) + 36*d^2*(3 - 20*sw^2 + 32*sw^4) + 
           4*d*(-99 + 660*sw^2 - 1030*sw^4 - 80*sw^6 + 64*sw^8))*t)) + 
     t*(-9*d^3*(2*Pi)^d*s^2 + 2^(2 + d)*Pi^d*
        (s^2*(-3*d^3*sw^2*(-5 + 8*sw^2) + 6*d^2*(3 - 20*sw^2 + 32*sw^4) + 
           3*d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 64*sw^8) - 
           2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)) + 
         2*s*(d*(9 - 60*sw^2 + 96*sw^4) + 2*(-9 + 60*sw^2 - 44*sw^4 - 
             160*sw^6 + 128*sw^8))*t + 4*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
           256*sw^8)*t^2))))/(cw^4*Pi^(2*d)*s*sw^4), 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {((I/27)*2^(1 - d)*EL^6*((96 - 216*d + 82*d^2 - 7*d^3)*s^2 - 
     4*(208 - 84*d + 5*d^2)*s*t - 4*(176 - 80*d + 7*d^2)*t^2 + 
     2*(32 - 20*d + 3*d^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2)*GaugeXi[A] + 
     (-4 + d)^2*((-2 + d)*s^2 + 4*s*t + 4*t^2)*GaugeXi[A]^2))/
   ((-4 + d)*Pi^d*s^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  ((-I/27)*2^(3 - d)*(32 - 14*d + d^2)*EL^6*(s + 2*t))/((-4 + d)*Pi^d*s), 
  ((-I/27)*2^(2 - d)*EL^6*(s + t)*(3*d*s^2 + 8*t*(3*s + 2*t)))/(Pi^d*s), 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0}, {0, 0, 0, 
  ((-I/432)*EL^6*((2^(2 - d)*(-54*d^2 + 3*d^3 - 32*(12 - 5*sw^2 + 8*sw^4) + 
        12*d*(22 - 5*sw^2 + 8*sw^4)))/Pi^d - 
     (2^(4 - d)*(-36*d^2 + 3*d^3 - 8*(21 - 5*sw^2 + 8*sw^4) + 
        2*d*(69 - 10*sw^2 + 16*sw^4))*(s + t))/((-4 + d)*Pi^d*s) - 
     (2^(2 - d)*(s*(-126*d^2 + 9*d^3 - 48*(15 - 5*sw^2 + 8*sw^4) + 
          20*d*(27 - 5*sw^2 + 8*sw^4)) + 2*(-36*d^2 + 3*d^3 - 
          8*(21 - 5*sw^2 + 8*sw^4) + 2*d*(69 - 10*sw^2 + 16*sw^4))*t))/
      (Pi^d*s) + (2^(1 - 2*d)*(2 - d)*(3*d^3*(2*Pi)^d*s^2 + 
        2^(1 + d)*Pi^d*(s^2*(-63*d^2 + 3*d^3 - 8*(48 - 5*sw^2 + 8*sw^4) + 
            d*(282 - 50*sw^2 + 80*sw^4)) + s*(-36*d^2 + 3*d^3 + 
            2*d*(75 - 10*sw^2 + 16*sw^4) + 8*(-21 - 25*sw^2 + 40*sw^4))*t + 
          8*(3 - 20*sw^2 + 32*sw^4)*t^2) + mz^2*(-9*d^3*(2*Pi)^d*s + 
          2^(1 + d)*Pi^d*(s*(63*d^2 + 24*(15 - 5*sw^2 + 8*sw^4) - 
              10*d*(27 - 5*sw^2 + 8*sw^4)) + (36*d^2 - 3*d^3 + 
              8*(21 - 5*sw^2 + 8*sw^4) - 2*d*(69 - 10*sw^2 + 16*sw^4))*t))))/
      ((-4 + d)*Pi^(2*d)*(mz^2 - s)*s) + 
     (2^(1 - 2*d)*(-2 + d)*(3*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(63*d^2 - 6*d^3 + d*(-282 + 50*sw^2 - 80*sw^4) + 
            8*(48 - 5*sw^2 + 8*sw^4)) + s*(36*d^2 - 3*d^3 + 
            8*(21 + 25*sw^2 - 40*sw^4) - 2*d*(75 - 10*sw^2 + 16*sw^4))*t - 
          8*(3 - 20*sw^2 + 32*sw^4)*t^2) + mz^2*(9*d^3*(2*Pi)^d*s + 
          2^(1 + d)*Pi^d*(s*(-63*d^2 - 24*(15 - 5*sw^2 + 8*sw^4) + 
              10*d*(27 - 5*sw^2 + 8*sw^4)) + (-36*d^2 + 3*d^3 - 
              8*(21 - 5*sw^2 + 8*sw^4) + 2*d*(69 - 10*sw^2 + 16*sw^4))*t))))/
      ((-4 + d)*Pi^(2*d)*(mz^2 - s)*s) - (d*(-1 + 4*sw^2)*(-3 + 8*sw^2)*
       (-1 + GaugeXi[A]))/(2*Pi)^d - (d*(3 - 20*sw^2 + 32*sw^4)*
       (-1 + GaugeXi[A]))/(2*Pi)^d + 
     (2^(1 - d)*(3*d - 4*(3 - 5*sw^2 + 8*sw^4))*(s + t)*(-1 + GaugeXi[A]))/
      (Pi^d*s) - (2^(1 - d)*(3*s*(-6 + d + 20*sw^2 - 32*sw^4) - 
        2*(3 - 20*sw^2 + 32*sw^4)*t)*(-1 + GaugeXi[A]))/(Pi^d*s) - 
     ((-2 + d)*(3*s*(-6 + d + 20*sw^2 - 32*sw^4) - 2*(3 - 20*sw^2 + 32*sw^4)*
         t)*(-1 + GaugeXi[A]))/((2*Pi)^d*s) + 
     (((-2 + d)*s - 2*t)*(3*d*s - 4*s*(3 - 5*sw^2 + 8*sw^4) - 
        2*(3 - 20*sw^2 + 32*sw^4)*t)*(-1 + GaugeXi[A]))/((2*Pi)^d*s^2) - 
     (2^(1 - 3*d)*(-2 + d)*(-((2*Pi)^(2*d)*s^2*
          (3*d - 4*(3 - 5*sw^2 + 8*sw^4))*(s + t)) + mz^4*(2*Pi)^(2*d)*
         (-3*d + 4*(3 - 5*sw^2 + 8*sw^4))*(s + t) - 2^(1 + 2*d)*mz^2*Pi^(2*d)*
         (s^2*(3*d^2 + 4*(6 + 5*sw^2 - 8*sw^4) + d*(-15 - 20*sw^2 + 
              32*sw^4)) + s*(-33*d + 6*d^2 + 20*(3 - 5*sw^2 + 8*sw^4))*t + 
          4*(3 - 20*sw^2 + 32*sw^4)*t^2))*(-1 + GaugeXi[A]))/
      (Pi^(3*d)*(mz^2 - s)^2*s) + 
     ((-2 + d)*(s*(-3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
           (3*s*(-3 + d + 10*sw^2 - 16*sw^4) + (-3 + 20*sw^2 - 32*sw^4)*t)) + 
        mz^2*(-3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(9 - 30*sw^2 + 48*sw^4) + 
            (3 - 20*sw^2 + 32*sw^4)*t)))*(-1 + GaugeXi[A]))/
      ((2*Pi)^(2*d)*(mz^2 - s)*s)))/(cw^2*mz^2*sw^2), 
  ((-I/27)*2^(-4 - 3*d)*EL^6*
    ((2^(3 + 2*d)*Pi^(2*d)*(-36*d^2 + 3*d^3 - 8*(21 - 5*sw^2 + 8*sw^4) + 
        2*d*(69 - 10*sw^2 + 16*sw^4))*((-2 + d)*s + 2*t))/((-4 + d)*s) - 
     (2^(2 + d)*Pi^d*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
          s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          2*(3 - 20*sw^2 + 32*sw^4)*t^2) + mz^2*(-3*d^3*(2*Pi)^d*s + 
          2^(1 + d)*Pi^d*(s*(27*d^2 + 16*(12 - 5*sw^2 + 8*sw^4) - 
              6*d*(22 - 5*sw^2 + 8*sw^4)) + (36*d^2 - 3*d^3 + 
              8*(21 - 5*sw^2 + 8*sw^4) - 2*d*(69 - 10*sw^2 + 16*sw^4))*t))))/
      (mz^2*s) + (2^(2 + d)*(-3 + d)*Pi^d*(3*d^3*(2*Pi)^d*s^2 + 
        2^(1 + d)*Pi^d*(s^2*(-63*d^2 + 3*d^3 - 8*(48 - 5*sw^2 + 8*sw^4) + 
            d*(282 - 50*sw^2 + 80*sw^4)) + s*(-36*d^2 + 3*d^3 + 
            2*d*(75 - 10*sw^2 + 16*sw^4) + 8*(-21 - 25*sw^2 + 40*sw^4))*t + 
          8*(3 - 20*sw^2 + 32*sw^4)*t^2) + mz^2*(-9*d^3*(2*Pi)^d*s + 
          2^(1 + d)*Pi^d*(s*(63*d^2 + 24*(15 - 5*sw^2 + 8*sw^4) - 
              10*d*(27 - 5*sw^2 + 8*sw^4)) + (36*d^2 - 3*d^3 + 
              8*(21 - 5*sw^2 + 8*sw^4) - 2*d*(69 - 10*sw^2 + 16*sw^4))*t))))/
      ((-4 + d)*(mz^2 - s)*s) + (2^(2 + d)*(-3 + d)*Pi^d*
       (-3*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(-63*d^2 + 6*d^3 - 8*(48 - 5*sw^2 + 8*sw^4) + 
            d*(282 - 50*sw^2 + 80*sw^4)) + s*(-36*d^2 + 3*d^3 + 
            2*d*(75 - 10*sw^2 + 16*sw^4) + 8*(-21 - 25*sw^2 + 40*sw^4))*t + 
          8*(3 - 20*sw^2 + 32*sw^4)*t^2) + mz^2*(-9*d^3*(2*Pi)^d*s + 
          2^(1 + d)*Pi^d*(s*(63*d^2 + 24*(15 - 5*sw^2 + 8*sw^4) - 
              10*d*(27 - 5*sw^2 + 8*sw^4)) + (36*d^2 - 3*d^3 + 
              8*(21 - 5*sw^2 + 8*sw^4) - 2*d*(69 - 10*sw^2 + 16*sw^4))*t))))/
      ((-4 + d)*(mz^2 - s)*s) + ((2*Pi)^(2*d)*((-4 + d)*mz^2 + d*s)*
       (-1 + 4*sw^2)*(-3 + 8*sw^2)*(-1 + GaugeXi[A]))/mz^2 + 
     ((2*Pi)^(2*d)*((-4 + d)*mz^2 + d*s)*(3 - 20*sw^2 + 32*sw^4)*
       (-1 + GaugeXi[A]))/mz^2 - (2^(1 + 2*d)*Pi^(2*d)*(mz^2 - s)*
       (3*s*(-6 + d + 20*sw^2 - 32*sw^4) - 2*(3 - 20*sw^2 + 32*sw^4)*t)*
       (-1 + GaugeXi[A]))/(mz^2*s) + 
     ((2*Pi)^(2*d)*((-4 + d)*mz^2 + (-2 + d)*s)*
       (3*s*(-6 + d + 20*sw^2 - 32*sw^4) - 2*(3 - 20*sw^2 + 32*sw^4)*t)*
       (-1 + GaugeXi[A]))/(mz^2*s) - 
     ((2*Pi)^(2*d)*(mz^2*((-6 + d)*s - 2*t) + s*((-2 + d)*s - 2*t))*
       (3*d*s - 4*s*(3 - 5*sw^2 + 8*sw^4) - 2*(3 - 20*sw^2 + 32*sw^4)*t)*
       (-1 + GaugeXi[A]))/(mz^2*s^2) + ((2*Pi)^d*((-4 + d)*mz^2 + (-2 + d)*s)*
       (3*d*mz^2*(2*Pi)^d*s + 3*d*(2*Pi)^d*s^2 - 2^(1 + d)*Pi^d*s*
         (3*s*(-3 + d + 10*sw^2 - 16*sw^4) + (-3 + 20*sw^2 - 32*sw^4)*t) - 
        2^(1 + d)*mz^2*Pi^d*(s*(9 - 30*sw^2 + 48*sw^4) + 
          (3 - 20*sw^2 + 32*sw^4)*t))*(-1 + GaugeXi[A]))/
      (mz^2*(mz^2 - s)*s) - (4^(1 + d)*Pi^(2*d)*
       (s*(3*d - 4*(3 - 5*sw^2 + 8*sw^4))*(s + t) + 
        mz^2*(s*(6 - 40*sw^2 + 64*sw^4) + (-6 + 3*d - 20*sw^2 + 32*sw^4)*t))*
       (-1 + GaugeXi[A]))/(mz^2*s) + (2*(-3 + d)*(mz^2 + s)*
       (-((2*Pi)^(2*d)*s^2*(3*d - 4*(3 - 5*sw^2 + 8*sw^4))*(s + t)) + 
        mz^4*(2*Pi)^(2*d)*(-3*d + 4*(3 - 5*sw^2 + 8*sw^4))*(s + t) - 
        2^(1 + 2*d)*mz^2*Pi^(2*d)*(s^2*(3*d^2 + 4*(6 + 5*sw^2 - 8*sw^4) + 
            d*(-15 - 20*sw^2 + 32*sw^4)) + s*(-33*d + 6*d^2 + 
            20*(3 - 5*sw^2 + 8*sw^4))*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2))*
       (-1 + GaugeXi[A]))/(s*(mz^3 - mz*s)^2)))/(cw^2*Pi^(3*d)*sw^2), 0, 0, 
  ((-I/27)*EL^6*((2^(2 + d)*Pi^d*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
          4*d*(-3 - 5*sw^2 + 8*sw^4)) + 2*s*(-15*d + 3*d^2 + 
          8*(3 - 5*sw^2 + 8*sw^4))*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2))/s - 
     (2^(1 + d)*Pi^d*(3*s*(-6 + d + 20*sw^2 - 32*sw^4) - 
        2*(3 - 20*sw^2 + 32*sw^4)*t)*(-1 + GaugeXi[A])*(s - mz^2*GaugeXi[Z]))/
      s + (2*Pi)^d*(-1 + 4*sw^2)*(-3 + 8*sw^2)*(-1 + GaugeXi[A])*
      (-(d*s) - (-4 + d)*mz^2*GaugeXi[Z]) + (2*Pi)^d*(3 - 20*sw^2 + 32*sw^4)*
      (-1 + GaugeXi[A])*(-(d*s) - (-4 + d)*mz^2*GaugeXi[Z]) - 
     ((2*Pi)^d*(3*s*(-6 + d + 20*sw^2 - 32*sw^4) - 2*(3 - 20*sw^2 + 32*sw^4)*
         t)*(-1 + GaugeXi[A])*((-2 + d)*s + (-4 + d)*mz^2*GaugeXi[Z]))/s + 
     ((2*Pi)^d*(3*d*s - 4*s*(3 - 5*sw^2 + 8*sw^4) - 2*(3 - 20*sw^2 + 32*sw^4)*
         t)*(-1 + GaugeXi[A])*(s*((-2 + d)*s - 2*t) + mz^2*((-6 + d)*s - 2*t)*
         GaugeXi[Z]))/s^2 + (2^(2 + d)*Pi^d*(-1 + GaugeXi[A])*
       (s*(3*d - 4*(3 - 5*sw^2 + 8*sw^4))*(s + t) + 
        mz^2*(s*(6 - 40*sw^2 + 64*sw^4) + (-6 + 3*d - 20*sw^2 + 32*sw^4)*t)*
         GaugeXi[Z]))/s - ((-1 + GaugeXi[A])*((-2 + d)*s + 
        (-4 + d)*mz^2*GaugeXi[Z])*
       (s*(-3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(3*s*(-3 + d + 10*sw^2 - 
              16*sw^4) + (-3 + 20*sw^2 - 32*sw^4)*t)) + 
        mz^2*(-3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(9 - 30*sw^2 + 48*sw^4) + 
            (3 - 20*sw^2 + 32*sw^4)*t))*GaugeXi[Z]))/
      (s*(s - mz^2*GaugeXi[Z])) - (2*(-3 + d)*(-1 + GaugeXi[A])*
       (s + mz^2*GaugeXi[Z])*(s^2*(-3*d*(2*Pi)^d*(s - 3*t) + 
          2^(2 + d)*Pi^d*(s*(3 - 5*sw^2 + 8*sw^4) + 
            (3 - 3*d - 5*sw^2 + 8*sw^4)*t)) + 2^(1 + d)*mz^2*Pi^d*s*
         (3*d - 4*(3 - 5*sw^2 + 8*sw^4))*(s + t)*GaugeXi[Z] + 
        mz^4*(-3*d*(2*Pi)^d + 2^(2 + d)*Pi^d*(3 - 5*sw^2 + 8*sw^4))*(s + t)*
         GaugeXi[Z]^2))/(s*(s - mz^2*GaugeXi[Z])^2)))/
   (2^(2*(2 + d))*cw^2*mz^2*Pi^(2*d)*sw^2), 
  ((-I/27)*4^(-2 - d)*EL^6*(-1 + GaugeXi[A])*(-9*d^2*(2*Pi)^d*s^4 + 
     2^(1 + d)*Pi^d*s^2*(s^2*(-6 + 3*d^2 - 20*sw^2 + 32*sw^4 + 
         d*(6 + 10*sw^2 - 16*sw^4)) + s*(15*d - 3*d^2 - 
         8*(3 - 5*sw^2 + 8*sw^4))*t - 2*(3 - 20*sw^2 + 32*sw^4)*t^2) + 
     2*mz^2*s*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
         s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
         2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[Z] - 
     mz^4*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
         s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
         2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[Z]^2))/
   (cw^2*mz^2*Pi^(2*d)*s^2*sw^2*(s - mz^2*GaugeXi[Z])^2), 0, 0, 0, 0, 0, 0, 
  0, 0, ((-I/27)*2^(-2 - d)*EL^6*
    (s*(-450*d^2 + 45*d^3 + d*(1488 + 60*sw^2 - 96*sw^4) + 
       32*(-51 - 5*sw^2 + 8*sw^4)) + mz^2*(-63*d^3 + 3*d^4 + 
       96*(12 - 5*sw^2 + 8*sw^4) + 6*d^2*(71 - 10*sw^2 + 16*sw^4) - 
       4*d*(294 - 85*sw^2 + 136*sw^4)) + 
     2*(-36*d^3 + 3*d^4 + 2*d^2*(87 - 10*sw^2 + 16*sw^4) + 
       16*(24 - 25*sw^2 + 40*sw^4) - 8*d*(51 - 25*sw^2 + 40*sw^4))*t))/
   (cw^2*(-4 + d)*Pi^d*s*sw^2), 0, ((-I/27)*2^(-3 - d)*EL^6*(s + t)*
    (s*(66*d^2 - 3*d^3 + 32*(15 + 5*sw^2 - 8*sw^4) + 
       4*d*(-84 - 5*sw^2 + 8*sw^4)) + mz^2*(-288 - 90*d^2 + 9*d^3 + 
       4*d*(72 - 5*sw^2 + 8*sw^4)) + 
     8*(-18*d + 3*d^2 + 4*(6 + 5*sw^2 - 8*sw^4))*t))/(cw^2*Pi^d*s*sw^2), 
  ((I/27)*2^(-3 - 2*d)*EL^6*(s + t)*(3*d^3*(2*Pi)^d*s^2 + 
     mz^4*(-3*d^3*(2*Pi)^d + 2^(1 + d)*Pi^d*(27*d^2 + 
         16*(12 - 5*sw^2 + 8*sw^4) - 6*d*(22 - 5*sw^2 + 8*sw^4))) + 
     2^(1 + d)*mz^2*Pi^d*(s*(-432 - 60*d^2 + 3*d^3 + 
         4*d*(75 - 5*sw^2 + 8*sw^4)) - 4*(-18*d + 3*d^2 + 
         4*(6 + 5*sw^2 - 8*sw^4))*t) - 2^(1 + d)*Pi^d*
      (3*s^2*(-72 - 9*d^2 + d^3 + 2*d*(24 - 5*sw^2 + 8*sw^4)) + 
       12*s*(d + 4*sw^2*(-5 + 8*sw^2))*t + 8*(3 - 20*sw^2 + 32*sw^4)*t^2)))/
   (cw^2*Pi^(2*d)*s*sw^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, ((-I/432)*EL^6*
    ((2^(2 - d)*(-54*d^2 + 3*d^3 - 32*(12 - 5*sw^2 + 8*sw^4) + 
        12*d*(22 - 5*sw^2 + 8*sw^4)))/Pi^d - 
     (2^(4 - d)*(-36*d^2 + 3*d^3 - 8*(21 - 5*sw^2 + 8*sw^4) + 
        2*d*(69 - 10*sw^2 + 16*sw^4))*(s + t))/((-4 + d)*Pi^d*s) - 
     (2^(2 - d)*(s*(-126*d^2 + 9*d^3 - 48*(15 - 5*sw^2 + 8*sw^4) + 
          20*d*(27 - 5*sw^2 + 8*sw^4)) + 2*(-36*d^2 + 3*d^3 - 
          8*(21 - 5*sw^2 + 8*sw^4) + 2*d*(69 - 10*sw^2 + 16*sw^4))*t))/
      (Pi^d*s) + (2^(1 - 2*d)*(2 - d)*(3*d^3*(2*Pi)^d*s^2 + 
        2^(1 + d)*Pi^d*(s^2*(-63*d^2 + 3*d^3 - 8*(48 - 5*sw^2 + 8*sw^4) + 
            d*(282 - 50*sw^2 + 80*sw^4)) + s*(-36*d^2 + 3*d^3 + 
            2*d*(75 - 10*sw^2 + 16*sw^4) + 8*(-21 - 25*sw^2 + 40*sw^4))*t + 
          8*(3 - 20*sw^2 + 32*sw^4)*t^2) + mz^2*(-9*d^3*(2*Pi)^d*s + 
          2^(1 + d)*Pi^d*(s*(63*d^2 + 24*(15 - 5*sw^2 + 8*sw^4) - 
              10*d*(27 - 5*sw^2 + 8*sw^4)) + (36*d^2 - 3*d^3 + 
              8*(21 - 5*sw^2 + 8*sw^4) - 2*d*(69 - 10*sw^2 + 16*sw^4))*t))))/
      ((-4 + d)*Pi^(2*d)*(mz^2 - s)*s) + 
     (2^(1 - 2*d)*(-2 + d)*(3*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(63*d^2 - 6*d^3 + d*(-282 + 50*sw^2 - 80*sw^4) + 
            8*(48 - 5*sw^2 + 8*sw^4)) + s*(36*d^2 - 3*d^3 + 
            8*(21 + 25*sw^2 - 40*sw^4) - 2*d*(75 - 10*sw^2 + 16*sw^4))*t - 
          8*(3 - 20*sw^2 + 32*sw^4)*t^2) + mz^2*(9*d^3*(2*Pi)^d*s + 
          2^(1 + d)*Pi^d*(s*(-63*d^2 - 24*(15 - 5*sw^2 + 8*sw^4) + 
              10*d*(27 - 5*sw^2 + 8*sw^4)) + (-36*d^2 + 3*d^3 - 
              8*(21 - 5*sw^2 + 8*sw^4) + 2*d*(69 - 10*sw^2 + 16*sw^4))*t))))/
      ((-4 + d)*Pi^(2*d)*(mz^2 - s)*s) - (d*(-1 + 4*sw^2)*(-3 + 8*sw^2)*
       (-1 + GaugeXi[A]))/(2*Pi)^d - (d*(3 - 20*sw^2 + 32*sw^4)*
       (-1 + GaugeXi[A]))/(2*Pi)^d + 
     (2^(1 - d)*(3*d - 4*(3 - 5*sw^2 + 8*sw^4))*(s + t)*(-1 + GaugeXi[A]))/
      (Pi^d*s) - (2^(1 - d)*(3*s*(-6 + d + 20*sw^2 - 32*sw^4) - 
        2*(3 - 20*sw^2 + 32*sw^4)*t)*(-1 + GaugeXi[A]))/(Pi^d*s) - 
     ((-2 + d)*(3*s*(-6 + d + 20*sw^2 - 32*sw^4) - 2*(3 - 20*sw^2 + 32*sw^4)*
         t)*(-1 + GaugeXi[A]))/((2*Pi)^d*s) + 
     (((-2 + d)*s - 2*t)*(3*d*s - 4*s*(3 - 5*sw^2 + 8*sw^4) - 
        2*(3 - 20*sw^2 + 32*sw^4)*t)*(-1 + GaugeXi[A]))/((2*Pi)^d*s^2) - 
     (2^(1 - 3*d)*(-2 + d)*(-((2*Pi)^(2*d)*s^2*
          (3*d - 4*(3 - 5*sw^2 + 8*sw^4))*(s + t)) + mz^4*(2*Pi)^(2*d)*
         (-3*d + 4*(3 - 5*sw^2 + 8*sw^4))*(s + t) - 2^(1 + 2*d)*mz^2*Pi^(2*d)*
         (s^2*(3*d^2 + 4*(6 + 5*sw^2 - 8*sw^4) + d*(-15 - 20*sw^2 + 
              32*sw^4)) + s*(-33*d + 6*d^2 + 20*(3 - 5*sw^2 + 8*sw^4))*t + 
          4*(3 - 20*sw^2 + 32*sw^4)*t^2))*(-1 + GaugeXi[A]))/
      (Pi^(3*d)*(mz^2 - s)^2*s) + 
     ((-2 + d)*(s*(-3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
           (3*s*(-3 + d + 10*sw^2 - 16*sw^4) + (-3 + 20*sw^2 - 32*sw^4)*t)) + 
        mz^2*(-3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(9 - 30*sw^2 + 48*sw^4) + 
            (3 - 20*sw^2 + 32*sw^4)*t)))*(-1 + GaugeXi[A]))/
      ((2*Pi)^(2*d)*(mz^2 - s)*s)))/(cw^2*mz^2*sw^2), 
  ((-I/27)*2^(-4 - 3*d)*EL^6*
    ((2^(3 + 2*d)*Pi^(2*d)*(-36*d^2 + 3*d^3 - 8*(21 - 5*sw^2 + 8*sw^4) + 
        2*d*(69 - 10*sw^2 + 16*sw^4))*((-2 + d)*s + 2*t))/((-4 + d)*s) - 
     (2^(2 + d)*Pi^d*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
          s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          2*(3 - 20*sw^2 + 32*sw^4)*t^2) + mz^2*(-3*d^3*(2*Pi)^d*s + 
          2^(1 + d)*Pi^d*(s*(27*d^2 + 16*(12 - 5*sw^2 + 8*sw^4) - 
              6*d*(22 - 5*sw^2 + 8*sw^4)) + (36*d^2 - 3*d^3 + 
              8*(21 - 5*sw^2 + 8*sw^4) - 2*d*(69 - 10*sw^2 + 16*sw^4))*t))))/
      (mz^2*s) + (2^(2 + d)*(-3 + d)*Pi^d*(3*d^3*(2*Pi)^d*s^2 + 
        2^(1 + d)*Pi^d*(s^2*(-63*d^2 + 3*d^3 - 8*(48 - 5*sw^2 + 8*sw^4) + 
            d*(282 - 50*sw^2 + 80*sw^4)) + s*(-36*d^2 + 3*d^3 + 
            2*d*(75 - 10*sw^2 + 16*sw^4) + 8*(-21 - 25*sw^2 + 40*sw^4))*t + 
          8*(3 - 20*sw^2 + 32*sw^4)*t^2) + mz^2*(-9*d^3*(2*Pi)^d*s + 
          2^(1 + d)*Pi^d*(s*(63*d^2 + 24*(15 - 5*sw^2 + 8*sw^4) - 
              10*d*(27 - 5*sw^2 + 8*sw^4)) + (36*d^2 - 3*d^3 + 
              8*(21 - 5*sw^2 + 8*sw^4) - 2*d*(69 - 10*sw^2 + 16*sw^4))*t))))/
      ((-4 + d)*(mz^2 - s)*s) + (2^(2 + d)*(-3 + d)*Pi^d*
       (-3*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(-63*d^2 + 6*d^3 - 8*(48 - 5*sw^2 + 8*sw^4) + 
            d*(282 - 50*sw^2 + 80*sw^4)) + s*(-36*d^2 + 3*d^3 + 
            2*d*(75 - 10*sw^2 + 16*sw^4) + 8*(-21 - 25*sw^2 + 40*sw^4))*t + 
          8*(3 - 20*sw^2 + 32*sw^4)*t^2) + mz^2*(-9*d^3*(2*Pi)^d*s + 
          2^(1 + d)*Pi^d*(s*(63*d^2 + 24*(15 - 5*sw^2 + 8*sw^4) - 
              10*d*(27 - 5*sw^2 + 8*sw^4)) + (36*d^2 - 3*d^3 + 
              8*(21 - 5*sw^2 + 8*sw^4) - 2*d*(69 - 10*sw^2 + 16*sw^4))*t))))/
      ((-4 + d)*(mz^2 - s)*s) + ((2*Pi)^(2*d)*((-4 + d)*mz^2 + d*s)*
       (-1 + 4*sw^2)*(-3 + 8*sw^2)*(-1 + GaugeXi[A]))/mz^2 + 
     ((2*Pi)^(2*d)*((-4 + d)*mz^2 + d*s)*(3 - 20*sw^2 + 32*sw^4)*
       (-1 + GaugeXi[A]))/mz^2 - (2^(1 + 2*d)*Pi^(2*d)*(mz^2 - s)*
       (3*s*(-6 + d + 20*sw^2 - 32*sw^4) - 2*(3 - 20*sw^2 + 32*sw^4)*t)*
       (-1 + GaugeXi[A]))/(mz^2*s) + 
     ((2*Pi)^(2*d)*((-4 + d)*mz^2 + (-2 + d)*s)*
       (3*s*(-6 + d + 20*sw^2 - 32*sw^4) - 2*(3 - 20*sw^2 + 32*sw^4)*t)*
       (-1 + GaugeXi[A]))/(mz^2*s) - 
     ((2*Pi)^(2*d)*(mz^2*((-6 + d)*s - 2*t) + s*((-2 + d)*s - 2*t))*
       (3*d*s - 4*s*(3 - 5*sw^2 + 8*sw^4) - 2*(3 - 20*sw^2 + 32*sw^4)*t)*
       (-1 + GaugeXi[A]))/(mz^2*s^2) + ((2*Pi)^d*((-4 + d)*mz^2 + (-2 + d)*s)*
       (3*d*mz^2*(2*Pi)^d*s + 3*d*(2*Pi)^d*s^2 - 2^(1 + d)*Pi^d*s*
         (3*s*(-3 + d + 10*sw^2 - 16*sw^4) + (-3 + 20*sw^2 - 32*sw^4)*t) - 
        2^(1 + d)*mz^2*Pi^d*(s*(9 - 30*sw^2 + 48*sw^4) + 
          (3 - 20*sw^2 + 32*sw^4)*t))*(-1 + GaugeXi[A]))/
      (mz^2*(mz^2 - s)*s) - (4^(1 + d)*Pi^(2*d)*
       (s*(3*d - 4*(3 - 5*sw^2 + 8*sw^4))*(s + t) + 
        mz^2*(s*(6 - 40*sw^2 + 64*sw^4) + (-6 + 3*d - 20*sw^2 + 32*sw^4)*t))*
       (-1 + GaugeXi[A]))/(mz^2*s) + (2*(-3 + d)*(mz^2 + s)*
       (-((2*Pi)^(2*d)*s^2*(3*d - 4*(3 - 5*sw^2 + 8*sw^4))*(s + t)) + 
        mz^4*(2*Pi)^(2*d)*(-3*d + 4*(3 - 5*sw^2 + 8*sw^4))*(s + t) - 
        2^(1 + 2*d)*mz^2*Pi^(2*d)*(s^2*(3*d^2 + 4*(6 + 5*sw^2 - 8*sw^4) + 
            d*(-15 - 20*sw^2 + 32*sw^4)) + s*(-33*d + 6*d^2 + 
            20*(3 - 5*sw^2 + 8*sw^4))*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2))*
       (-1 + GaugeXi[A]))/(s*(mz^3 - mz*s)^2)))/(cw^2*Pi^(3*d)*sw^2), 0, 0, 
  ((-I/27)*EL^6*((2^(2 + d)*Pi^d*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
          4*d*(-3 - 5*sw^2 + 8*sw^4)) + 2*s*(-15*d + 3*d^2 + 
          8*(3 - 5*sw^2 + 8*sw^4))*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2))/s - 
     (2^(1 + d)*Pi^d*(3*s*(-6 + d + 20*sw^2 - 32*sw^4) - 
        2*(3 - 20*sw^2 + 32*sw^4)*t)*(-1 + GaugeXi[A])*(s - mz^2*GaugeXi[Z]))/
      s + (2*Pi)^d*(-1 + 4*sw^2)*(-3 + 8*sw^2)*(-1 + GaugeXi[A])*
      (-(d*s) - (-4 + d)*mz^2*GaugeXi[Z]) + (2*Pi)^d*(3 - 20*sw^2 + 32*sw^4)*
      (-1 + GaugeXi[A])*(-(d*s) - (-4 + d)*mz^2*GaugeXi[Z]) - 
     ((2*Pi)^d*(3*s*(-6 + d + 20*sw^2 - 32*sw^4) - 2*(3 - 20*sw^2 + 32*sw^4)*
         t)*(-1 + GaugeXi[A])*((-2 + d)*s + (-4 + d)*mz^2*GaugeXi[Z]))/s + 
     ((2*Pi)^d*(3*d*s - 4*s*(3 - 5*sw^2 + 8*sw^4) - 2*(3 - 20*sw^2 + 32*sw^4)*
         t)*(-1 + GaugeXi[A])*(s*((-2 + d)*s - 2*t) + mz^2*((-6 + d)*s - 2*t)*
         GaugeXi[Z]))/s^2 + (2^(2 + d)*Pi^d*(-1 + GaugeXi[A])*
       (s*(3*d - 4*(3 - 5*sw^2 + 8*sw^4))*(s + t) + 
        mz^2*(s*(6 - 40*sw^2 + 64*sw^4) + (-6 + 3*d - 20*sw^2 + 32*sw^4)*t)*
         GaugeXi[Z]))/s - ((-1 + GaugeXi[A])*((-2 + d)*s + 
        (-4 + d)*mz^2*GaugeXi[Z])*
       (s*(-3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(3*s*(-3 + d + 10*sw^2 - 
              16*sw^4) + (-3 + 20*sw^2 - 32*sw^4)*t)) + 
        mz^2*(-3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(9 - 30*sw^2 + 48*sw^4) + 
            (3 - 20*sw^2 + 32*sw^4)*t))*GaugeXi[Z]))/
      (s*(s - mz^2*GaugeXi[Z])) - (2*(-3 + d)*(-1 + GaugeXi[A])*
       (s + mz^2*GaugeXi[Z])*(s^2*(-3*d*(2*Pi)^d*(s - 3*t) + 
          2^(2 + d)*Pi^d*(s*(3 - 5*sw^2 + 8*sw^4) + 
            (3 - 3*d - 5*sw^2 + 8*sw^4)*t)) + 2^(1 + d)*mz^2*Pi^d*s*
         (3*d - 4*(3 - 5*sw^2 + 8*sw^4))*(s + t)*GaugeXi[Z] + 
        mz^4*(-3*d*(2*Pi)^d + 2^(2 + d)*Pi^d*(3 - 5*sw^2 + 8*sw^4))*(s + t)*
         GaugeXi[Z]^2))/(s*(s - mz^2*GaugeXi[Z])^2)))/
   (2^(2*(2 + d))*cw^2*mz^2*Pi^(2*d)*sw^2), 
  ((-I/27)*4^(-2 - d)*EL^6*(-1 + GaugeXi[A])*(-9*d^2*(2*Pi)^d*s^4 + 
     2^(1 + d)*Pi^d*s^2*(s^2*(-6 + 3*d^2 - 20*sw^2 + 32*sw^4 + 
         d*(6 + 10*sw^2 - 16*sw^4)) + s*(15*d - 3*d^2 - 
         8*(3 - 5*sw^2 + 8*sw^4))*t - 2*(3 - 20*sw^2 + 32*sw^4)*t^2) + 
     2*mz^2*s*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
         s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
         2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[Z] - 
     mz^4*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
         s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
         2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[Z]^2))/
   (cw^2*mz^2*Pi^(2*d)*s^2*sw^2*(s - mz^2*GaugeXi[Z])^2), 0, 0, 0, 0, 0, 0, 
  0, 0, ((-I/27)*4^(-1 - d)*EL^6*(27*d^3*(2*Pi)^d*s + 
     mz^2*(-3*d^3*(15 + d)*(2*Pi)^d + 2^(1 + d)*Pi^d*(-9*d^3 + 3*d^4 + 
         48*(12 - 5*sw^2 + 8*sw^4) + 3*d^2*(71 - 10*sw^2 + 16*sw^4) - 
         2*d*(294 - 85*sw^2 + 136*sw^4))) + 2^(1 + d)*Pi^d*
      (s*(-225*d^2 + 9*d^3 + d*(744 + 30*sw^2 - 48*sw^4) + 
         16*(-51 - 5*sw^2 + 8*sw^4)) + (-36*d^3 + 3*d^4 + 
         2*d^2*(87 - 10*sw^2 + 16*sw^4) + 16*(24 - 25*sw^2 + 40*sw^4) - 
         8*d*(51 - 25*sw^2 + 40*sw^4))*t)))/(cw^2*(-4 + d)*Pi^(2*d)*s*sw^2), 
  0, ((-I/27)*2^(-3 - d)*EL^6*(s + t)*
    (s*(66*d^2 - 3*d^3 + 32*(15 + 5*sw^2 - 8*sw^4) + 
       4*d*(-84 - 5*sw^2 + 8*sw^4)) + mz^2*(-288 - 90*d^2 + 9*d^3 + 
       4*d*(72 - 5*sw^2 + 8*sw^4)) + 
     8*(-18*d + 3*d^2 + 4*(6 + 5*sw^2 - 8*sw^4))*t))/(cw^2*Pi^d*s*sw^2), 
  ((I/27)*2^(-3 - 2*d)*EL^6*(s + t)*(3*d^3*(2*Pi)^d*s^2 + 
     mz^4*(-3*d^3*(2*Pi)^d + 2^(1 + d)*Pi^d*(27*d^2 + 
         16*(12 - 5*sw^2 + 8*sw^4) - 6*d*(22 - 5*sw^2 + 8*sw^4))) + 
     2^(1 + d)*mz^2*Pi^d*(s*(-432 - 60*d^2 + 3*d^3 + 
         4*d*(75 - 5*sw^2 + 8*sw^4)) - 4*(-18*d + 3*d^2 + 
         4*(6 + 5*sw^2 - 8*sw^4))*t) - 2^(1 + d)*Pi^d*
      (3*s^2*(-72 - 9*d^2 + d^3 + 2*d*(24 - 5*sw^2 + 8*sw^4)) + 
       12*s*(d + 4*sw^2*(-5 + 8*sw^2))*t + 8*(3 - 20*sw^2 + 32*sw^4)*t^2)))/
   (cw^2*Pi^(2*d)*s*sw^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, ((-I/27)*2^(-7 - 2*d)*EL^6*
    (s*(s + t)*(-9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (s^2*(18 - 120*sw^2 + 88*sw^4 + 320*sw^6 - 256*sw^8 + 
           d^2*(9 - 30*sw^2 + 48*sw^4) + 2*d*(-9 + 60*sw^2 - 70*sw^4 - 
             80*sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
           d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
             80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
           256*sw^8)*t^2)) - mz^2*(9*d^2*(2*Pi)^d*s^2*(5*s + 7*t) + 
       2^(1 + d)*Pi^d*(2*s^3*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
           3*d^2*(-3 - 5*sw^2 + 8*sw^4) + d*(-9 + 60*sw^2 - 70*sw^4 - 
             80*sw^6 + 64*sw^8)) + s^2*(90 - 600*sw^2 + 1064*sw^4 - 
           320*sw^6 + 256*sw^8 + 18*d^2*(-1 - 5*sw^2 + 8*sw^4) + 
           d*(-63 + 420*sw^2 - 620*sw^4 - 160*sw^6 + 128*sw^8))*t + 
         s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + d^2*(9 - 60*sw^2 + 96*sw^4) + 
           2*(45 - 300*sw^2 + 688*sw^4 - 640*sw^6 + 512*sw^8))*t^2 + 
         2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^3)) + 
     (-2*s*(9*d^2*(2*Pi)^d*s^2*(s + 3*t) + 2^(1 + d)*Pi^d*
          (2*s^3*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
             3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
               64*sw^8)) + s^2*(90 - 600*sw^2 + 1064*sw^4 - 320*sw^6 + 
             256*sw^8 + 18*d^2*sw^2*(-5 + 8*sw^2) + d*(-63 + 420*sw^2 - 620*
                sw^4 - 160*sw^6 + 128*sw^8))*t + 
           s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + d^2*(9 - 60*sw^2 + 96*sw^4) + 
             2*(45 - 300*sw^2 + 688*sw^4 - 640*sw^6 + 512*sw^8))*t^2 + 
           2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^3)) + 
       3*mz^2*(3*d^2*(2*Pi)^d*s^2*(9*s + 11*t) + 2^(1 + d)*Pi^d*
          (s^3*(18 - 120*sw^2 + 88*sw^4 + 320*sw^6 - 256*sw^8 + 
             d^2*(-9 - 30*sw^2 + 48*sw^4) + 2*d*(-9 + 60*sw^2 - 70*sw^4 - 80*
                sw^6 + 64*sw^8)) + s^2*(90 - 600*sw^2 + 1064*sw^4 - 
             320*sw^6 + 256*sw^8 + 3*d^2*(-1 - 30*sw^2 + 48*sw^4) + 
             d*(-63 + 420*sw^2 - 620*sw^4 - 160*sw^6 + 128*sw^8))*t + 
           s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + d^2*(9 - 60*sw^2 + 96*sw^4) + 
             2*(45 - 300*sw^2 + 688*sw^4 - 640*sw^6 + 512*sw^8))*t^2 + 
           2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^3)))*
      GaugeXi[Z] + (s*(s + t)*(-9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
          (s^2*(18 - 120*sw^2 + 88*sw^4 + 320*sw^6 - 256*sw^8 + 
             d^2*(9 - 30*sw^2 + 48*sw^4) + 2*d*(-9 + 60*sw^2 - 70*sw^4 - 80*
                sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
             d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*
                sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
             256*sw^8)*t^2)) - 3*mz^2*(15*d^2*(2*Pi)^d*s^2*(s + 3*t) + 
         2^(1 + d)*Pi^d*(s^3*(18 - 120*sw^2 + 88*sw^4 + 320*sw^6 - 256*sw^8 + 
             d^2*(-3 - 30*sw^2 + 48*sw^4) + 2*d*(-9 + 60*sw^2 - 70*sw^4 - 80*
                sw^6 + 64*sw^8)) + s^2*(90 - 600*sw^2 + 1064*sw^4 - 
             320*sw^6 + 256*sw^8 + 9*d^2*(-1 - 10*sw^2 + 16*sw^4) + 
             d*(-63 + 420*sw^2 - 620*sw^4 - 160*sw^6 + 128*sw^8))*t + 
           s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + d^2*(9 - 60*sw^2 + 96*sw^4) + 
             2*(45 - 300*sw^2 + 688*sw^4 - 640*sw^6 + 512*sw^8))*t^2 + 
           2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^3)))*
      GaugeXi[Z]^2 + mz^2*(9*d^2*(2*Pi)^d*s^2*(3*s + 5*t) + 
       2^(1 + d)*Pi^d*(s^3*(18 - 120*sw^2 + 88*sw^4 + 320*sw^6 - 256*sw^8 + 
           d^2*(-9 - 30*sw^2 + 48*sw^4) + 2*d*(-9 + 60*sw^2 - 70*sw^4 - 
             80*sw^6 + 64*sw^8)) + s^2*(90 - 600*sw^2 + 1064*sw^4 - 
           320*sw^6 + 256*sw^8 + 9*d^2*(-1 - 10*sw^2 + 16*sw^4) + 
           d*(-63 + 420*sw^2 - 620*sw^4 - 160*sw^6 + 128*sw^8))*t + 
         s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + d^2*(9 - 60*sw^2 + 96*sw^4) + 
           2*(45 - 300*sw^2 + 688*sw^4 - 640*sw^6 + 512*sw^8))*t^2 + 
         2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^3))*
      GaugeXi[Z]^3))/(cw^4*(-1 + d)*mz^4*Pi^(2*d)*s^2*sw^4*(s + t)*
    (-1 + GaugeXi[Z])^2), 0, 0, 0, 0, 
  ((I/27)*2^(-7 - 2*d)*EL^6*(9*d^2*(2*Pi)^d*s^3 - 
     2^(1 + d)*Pi^d*s*(s^2*(18 - 120*sw^2 + 88*sw^4 + 320*sw^6 - 256*sw^8 + 
         d^2*(9 - 30*sw^2 + 48*sw^4) + 2*d*(-9 + 60*sw^2 - 70*sw^4 - 
           80*sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
         d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 
           64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*
        t^2) - mz^2*(27*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (s^2*(18 - 120*sw^2 + 88*sw^4 + 320*sw^6 - 256*sw^8 + 
           d^2*(-9 - 30*sw^2 + 48*sw^4) + 2*d*(-9 + 60*sw^2 - 70*sw^4 - 
             80*sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
           d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
             80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
           256*sw^8)*t^2)) + 
     (2*s*(9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
          (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
             3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
               64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
             d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*
                sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
             256*sw^8)*t^2)) + 3*mz^2*(3*d^2*(2*Pi)^d*s^2 + 
         2^(1 + d)*Pi^d*(s^2*(18 - 120*sw^2 + 88*sw^4 + 320*sw^6 - 256*sw^8 + 
             d^2*(3 - 30*sw^2 + 48*sw^4) + 2*d*(-9 + 60*sw^2 - 70*sw^4 - 80*
                sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
             d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*
                sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
             256*sw^8)*t^2)))*GaugeXi[Z] - 
     (-9*d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
        (s^2*(18 - 120*sw^2 + 88*sw^4 + 320*sw^6 - 256*sw^8 + 
           d^2*(9 - 30*sw^2 + 48*sw^4) + 2*d*(-9 + 60*sw^2 - 70*sw^4 - 
             80*sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
           d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
             80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
           256*sw^8)*t^2) + 3*mz^2*(3*d^2*(2*Pi)^d*s^2 + 
         2^(1 + d)*Pi^d*(s^2*(18 - 120*sw^2 + 88*sw^4 + 320*sw^6 - 256*sw^8 + 
             d^2*(3 - 30*sw^2 + 48*sw^4) + 2*d*(-9 + 60*sw^2 - 70*sw^4 - 80*
                sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
             d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*
                sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
             256*sw^8)*t^2)))*GaugeXi[Z]^2 + 
     mz^2*(45*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
           3*d^2*(-3 - 5*sw^2 + 8*sw^4) + d*(-9 + 60*sw^2 - 70*sw^4 - 
             80*sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
           d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
             80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
           256*sw^8)*t^2))*GaugeXi[Z]^3))/(cw^4*(-1 + d)*mz^4*Pi^(2*d)*s^2*
    sw^4*(-1 + GaugeXi[Z])^2), ((-I/27)*2^(-7 - 2*d)*EL^6*
    (-3*2^(1 + d)*Pi^d*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*
      (s + t) + (mz^2*(2*Pi)^d*(d*s*(-9 + 60*sw^2 - 96*sw^4) + 
        6*s*(9 - 60*sw^2 + 148*sw^4 - 160*sw^6 + 128*sw^8) + 
        2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t))/s + 
     (2*Pi)^d*(24*s*sw^4*(13 - 40*sw^2 + 32*sw^4) + 
       3*d*s*(3 - 20*sw^2 + 32*sw^4) + 4*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
         256*sw^8)*t) + 3*2^(1 + d)*mz^2*Pi^d*(9 - 60*sw^2 + 200*sw^4 - 
       320*sw^6 + 256*sw^8)*GaugeXi[Z] + 
     (2^(1 + d)*mz^2*Pi^d*(d*s*(-9 + 60*sw^2 - 96*sw^4) + 
        6*s*(9 - 60*sw^2 + 148*sw^4 - 160*sw^6 + 128*sw^8) + 
        2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t)*GaugeXi[Z])/s + 
     (2^(1 + d)*Pi^d*(d*(9 - 60*sw^2 + 96*sw^4) - 
        4*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8))*(s + t)*
       (-mz^2 + s + mz^2*GaugeXi[Z]))/s - 
     (2^(1 + d)*Pi^d*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*
       (d*(mz^2 - s) + (-4 + 3*d)*mz^2*GaugeXi[Z]))/(-1 + d) - 
     (2^(2 + d)*Pi^d*(-((mz^2 - s)*(d*(9 - 60*sw^2 + 96*sw^4) - 
           4*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8))*(s + t)) + 
        mz^2*(2*s*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8) + 
          d*(9 - 60*sw^2 + 96*sw^4)*t + 2*(-9 + 60*sw^2 - 44*sw^4 - 
            160*sw^6 + 128*sw^8)*t)*GaugeXi[Z]))/s - 
     (mz^2*GaugeXi[Z]*(3*d*s*(3*(2*Pi)^d + 2^(2 + d)*Pi^d*sw^2*
           (-5 + 8*sw^2)) + 2^(1 + d)*Pi^d*
         (12*s*sw^4*(13 - 40*sw^2 + 32*sw^4) + (-9 + 60*sw^2 - 200*sw^4 + 
            320*sw^6 - 256*sw^8)*t) - 2^(1 + d)*Pi^d*
         (24*s*sw^4*(13 - 40*sw^2 + 32*sw^4) + 3*d*s*(3 - 20*sw^2 + 
            32*sw^4) - 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t)*
         GaugeXi[Z] + (3*d*s*(3*(2*Pi)^d + 2^(2 + d)*Pi^d*sw^2*
             (-5 + 8*sw^2)) + 2^(1 + d)*Pi^d*
           (12*s*sw^4*(13 - 40*sw^2 + 32*sw^4) + (-9 + 60*sw^2 - 200*sw^4 + 
              320*sw^6 - 256*sw^8)*t))*GaugeXi[Z]^2))/
      (s*(-1 + GaugeXi[Z])^2) - (((mz^2 - s)*((-2 + d)*s - 2*t) + 
        mz^2*((-2 + 3*d)*s + 2*t)*GaugeXi[Z])*(-9*d*(2*Pi)^d*s + 
        2^(1 + d)*Pi^d*(2*s*(9 + 15*(-4 + d)*sw^2 + (122 - 24*d)*sw^4 - 
            80*sw^6 + 64*sw^8) + (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
            256*sw^8)*t) + 2^(1 + d)*Pi^d*(d*s*(9 - 60*sw^2 + 96*sw^4) - 
          4*s*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8) - 
          2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t)*GaugeXi[Z] + 
        (-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(2*s*(9 + 15*(-4 + d)*sw^2 + 
              (122 - 24*d)*sw^4 - 80*sw^6 + 64*sw^8) + 
            (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t))*GaugeXi[Z]^2))/
      ((-1 + d)*s^2*(-1 + GaugeXi[Z])^2) + 
     (2*mz^2*GaugeXi[Z]*(9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
         (3*s*(9 - 60*sw^2 + 148*sw^4 - 160*sw^6 + 128*sw^8 + 
            d*(-3 + 10*sw^2 - 16*sw^4)) + (9 - 60*sw^2 + 200*sw^4 - 
            320*sw^6 + 256*sw^8)*t) + 2^(1 + d)*Pi^d*
         (d*s*(9 - 60*sw^2 + 96*sw^4) - 6*s*(9 - 60*sw^2 + 148*sw^4 - 
            160*sw^6 + 128*sw^8) - 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
            256*sw^8)*t)*GaugeXi[Z] + (9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
           (3*s*(9 - 60*sw^2 + 148*sw^4 - 160*sw^6 + 128*sw^8 + 
              d*(-3 + 10*sw^2 - 16*sw^4)) + (9 - 60*sw^2 + 200*sw^4 - 
              320*sw^6 + 256*sw^8)*t))*GaugeXi[Z]^2))/
      (s*(-1 + GaugeXi[Z])^2) - 
     (mz^2*(-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
          (3*s*(-9 + 60*sw^2 - 148*sw^4 + 160*sw^6 - 128*sw^8 + 
             d*(3 - 10*sw^2 + 16*sw^4)) + (-9 + 60*sw^2 - 200*sw^4 + 
             320*sw^6 - 256*sw^8)*t)) + s*(-9*d*(2*Pi)^d*s + 
         2^(1 + d)*Pi^d*(3*s*(9 + 10*(-6 + d)*sw^2 - 4*(-37 + 4*d)*sw^4 - 
             160*sw^6 + 128*sw^8) + (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
             256*sw^8)*t)) + (2^(1 + d)*Pi^d*s*(d*s*(9 - 60*sw^2 + 96*sw^4) - 
           6*s*(9 - 60*sw^2 + 148*sw^4 - 160*sw^6 + 128*sw^8) - 
           2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t) + 
         mz^2*(-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (3*s*(9 + 10*(-6 + d)*sw^2 - 4*(-37 + 4*d)*sw^4 - 160*sw^6 + 128*
                sw^8) + (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t)))*
        GaugeXi[Z] - (mz^2 + s)*(9*d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*
          (3*s*(9 + 10*(-6 + d)*sw^2 - 4*(-37 + 4*d)*sw^4 - 160*sw^6 + 
             128*sw^8) + (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t))*
        GaugeXi[Z]^2 + mz^2*(-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
          (3*s*(-9 + 60*sw^2 - 148*sw^4 + 160*sw^6 - 128*sw^8 + 
             d*(3 - 10*sw^2 + 16*sw^4)) + (-9 + 60*sw^2 - 200*sw^4 + 
             320*sw^6 - 256*sw^8)*t))*GaugeXi[Z]^3)/(s*(-1 + GaugeXi[Z])^2)))/
   (cw^4*mz^4*Pi^(2*d)*sw^4), ((I/27)*2^(-7 - 2*d)*EL^6*
    ((2^(1 + d)*Pi^d*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*
       (d*(mz^2 - s)^2 + 2*((-2 + d)*mz^4 - d*mz^2*s)*GaugeXi[Z] + 
        d*mz^4*GaugeXi[Z]^2))/(-1 + d) + 
     (((mz^2 - s)^2*((-2 + d)*s - 2*t) + 2*mz^2*(d*(mz^2 - s)*s + 
          2*(s^2 + mz^2*t + s*t))*GaugeXi[Z] + mz^4*((-2 + d)*s - 2*t)*
         GaugeXi[Z]^2)*(-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
         (2*s*(9 + 15*(-4 + d)*sw^2 + (122 - 24*d)*sw^4 - 80*sw^6 + 
            64*sw^8) + (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t) + 
        2^(1 + d)*Pi^d*(d*s*(9 - 60*sw^2 + 96*sw^4) - 
          4*s*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8) - 
          2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t)*GaugeXi[Z] + 
        (-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(2*s*(9 + 15*(-4 + d)*sw^2 + 
              (122 - 24*d)*sw^4 - 80*sw^6 + 64*sw^8) + 
            (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t))*GaugeXi[Z]^2))/
      ((-1 + d)*s^2*(-1 + GaugeXi[Z])^2) + 
     ((mz^2 - s + mz^2*GaugeXi[Z])*
       (mz^2*(-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
           (3*s*(-9 + 60*sw^2 - 148*sw^4 + 160*sw^6 - 128*sw^8 + 
              d*(3 - 10*sw^2 + 16*sw^4)) + (-9 + 60*sw^2 - 200*sw^4 + 
              320*sw^6 - 256*sw^8)*t)) + s*(-9*d*(2*Pi)^d*s + 
          2^(1 + d)*Pi^d*(3*s*(9 + 10*(-6 + d)*sw^2 - 4*(-37 + 4*d)*sw^4 - 
              160*sw^6 + 128*sw^8) + (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
              256*sw^8)*t)) + 
        (2^(1 + d)*Pi^d*s*(d*s*(9 - 60*sw^2 + 96*sw^4) - 
            6*s*(9 - 60*sw^2 + 148*sw^4 - 160*sw^6 + 128*sw^8) - 
            2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t) + 
          mz^2*(-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(3*s*(9 + 10*(-6 + d)*sw^2 - 
                4*(-37 + 4*d)*sw^4 - 160*sw^6 + 128*sw^8) + (9 - 60*sw^2 + 
                200*sw^4 - 320*sw^6 + 256*sw^8)*t)))*GaugeXi[Z] - 
        (mz^2 + s)*(9*d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*
           (3*s*(9 + 10*(-6 + d)*sw^2 - 4*(-37 + 4*d)*sw^4 - 160*sw^6 + 
              128*sw^8) + (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t))*
         GaugeXi[Z]^2 + mz^2*(-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
           (3*s*(-9 + 60*sw^2 - 148*sw^4 + 160*sw^6 - 128*sw^8 + 
              d*(3 - 10*sw^2 + 16*sw^4)) + (-9 + 60*sw^2 - 200*sw^4 + 
              320*sw^6 - 256*sw^8)*t))*GaugeXi[Z]^3))/
      (s*(-1 + GaugeXi[Z])^2) - 
     (2*(mz^4*(9*d*(2*Pi)^d - 2^(2 + d)*Pi^d*(9 + 15*(-4 + d)*sw^2 + 
            (122 - 24*d)*sw^4 - 80*sw^6 + 64*sw^8))*(s + t) + 
        s^2*(9*d*(2*Pi)^d*(s + 3*t) - 2^(1 + d)*Pi^d*
           (2*s*(9 + 15*(-4 + d)*sw^2 + (122 - 24*d)*sw^4 - 80*sw^6 + 
              64*sw^8) + (d*(9 + 30*sw^2 - 48*sw^4) + 2*(9 - 60*sw^2 + 
                122*sw^4 - 80*sw^6 + 64*sw^8))*t)) + 
        2*mz^2*(9*d*(2*Pi)^d*s*((-5 + d)*s - 11*t) + 2^(1 + d)*Pi^d*
           (2*s^2*(18 - 15*(8 - 5*d + d^2)*sw^2 + 2*(83 - 47*d + 12*d^2)*sw^
                4 - 80*(-1 + d)*sw^6 + 64*(-1 + d)*sw^8) + 
            s*(-66*d*sw^2*(-5 + 8*sw^2) + d^2*(9 - 60*sw^2 + 96*sw^4) + 
              10*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8))*t + 
            2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^2)) - 
        2*(s^2*(9*d*(2*Pi)^d - 2^(2 + d)*Pi^d*(9 + 15*(-4 + d)*sw^2 + 
              (122 - 24*d)*sw^4 - 80*sw^6 + 64*sw^8))*(s + t) + 
          mz^4*(9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-9 - 30*(-2 + d)*sw^2 + 
                (-44 + 48*d)*sw^4 - 160*sw^6 + 128*sw^8) + 3*(-3 + d)*(3 - 
                20*sw^2 + 32*sw^4)*t)) + mz^2*(-27*d*(2*Pi)^d*s*(3*s + 7*t) + 
            2^(1 + d)*Pi^d*(s^2*(d^2*(9 - 60*sw^2 + 96*sw^4) - 
                6*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 64*sw^8) + 
                d*(270*sw^2 - 328*sw^4 - 320*sw^6 + 256*sw^8)) + 
              6*s*(-21*d*sw^2*(-5 + 8*sw^2) + d^2*(3 - 20*sw^2 + 32*sw^4) + 
                3*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8))*t + 
              4*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^2)))*
         GaugeXi[Z] + (-4*s^3*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*sw^2*
             (-30 + 61*sw^2 - 40*sw^4 + 32*sw^6)) + 3*2^(1 + d)*d^2*mz^2*Pi^d*
           s*(3 - 20*sw^2 + 32*sw^4)*(s + 2*t) - 
          4*s^2*(3*2^(2 + d)*mz^2*Pi^d*sw^4*(13 - 40*sw^2 + 32*sw^4) + 
            9*(2*Pi)^d*t + 2^(1 + d)*Pi^d*sw^2*(-30 + 61*sw^2 - 40*sw^4 + 
              32*sw^6)*t) + 3*2^(3 + d)*mz^2*Pi^d*s*
           (mz^2*(26*sw^4 - 80*sw^6 + 64*sw^8) + (9 - 60*sw^2 + 122*sw^4 - 
              80*sw^6 + 64*sw^8)*t) + 2^(3 + d)*mz^2*Pi^d*t*
           (2*mz^2*(-9 + 60*sw^2 - 83*sw^4 - 40*sw^6 + 32*sw^8) + 
            (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t) + 
          d*(3*2^(1 + d)*mz^4*Pi^d*(3 - 20*sw^2 + 32*sw^4)*(s + 3*t) + 
            3*s^2*(3*(2*Pi)^d*s + 2^(2 + d)*Pi^d*s*sw^2*(-5 + 8*sw^2) + 
              9*(2*Pi)^d*t + 2^(1 + d)*Pi^d*(-3 - 10*sw^2 + 16*sw^4)*t) + 
            2^(1 + d)*mz^2*Pi^d*s*(s*(-27 + 180*sw^2 - 184*sw^4 - 320*sw^6 + 
                256*sw^8) - 27*(3 - 20*sw^2 + 32*sw^4)*t)))*GaugeXi[Z]^2 - 
        2*(mz^2*s*(9*d*(2*Pi)^d - 2^(2 + d)*Pi^d*(9 + 15*(-4 + d)*sw^2 + 
              (122 - 24*d)*sw^4 - 80*sw^6 + 64*sw^8))*(s + t) + 
          mz^4*(9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-9 - 30*(-2 + d)*sw^2 + 
                (-44 + 48*d)*sw^4 - 160*sw^6 + 128*sw^8) + 3*(-3 + d)*(3 - 
                20*sw^2 + 32*sw^4)*t)))*GaugeXi[Z]^3 + 
        mz^4*(9*d*(2*Pi)^d - 2^(2 + d)*Pi^d*(9 + 15*(-4 + d)*sw^2 + 
            (122 - 24*d)*sw^4 - 80*sw^6 + 64*sw^8))*(s + t)*GaugeXi[Z]^4))/
      (s*(-1 + GaugeXi[Z])^2) - (mz^2 - s + mz^2*GaugeXi[Z])*
      (-3*2^(1 + d)*Pi^d*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*
        (s + t) + (mz^2*(2*Pi)^d*(d*s*(-9 + 60*sw^2 - 96*sw^4) + 
          6*s*(9 - 60*sw^2 + 148*sw^4 - 160*sw^6 + 128*sw^8) + 
          2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t))/s + 
       (2*Pi)^d*(24*s*sw^4*(13 - 40*sw^2 + 32*sw^4) + 
         3*d*s*(3 - 20*sw^2 + 32*sw^4) + 4*(9 - 60*sw^2 + 200*sw^4 - 
           320*sw^6 + 256*sw^8)*t) + 3*2^(1 + d)*mz^2*Pi^d*
        (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*GaugeXi[Z] - 
       (mz^2*GaugeXi[Z]*(3*d*s*(3*(2*Pi)^d + 2^(2 + d)*Pi^d*sw^2*
             (-5 + 8*sw^2)) + 2^(1 + d)*Pi^d*
           (12*s*sw^4*(13 - 40*sw^2 + 32*sw^4) + (-9 + 60*sw^2 - 200*sw^4 + 
              320*sw^6 - 256*sw^8)*t) - 2^(1 + d)*Pi^d*
           (24*s*sw^4*(13 - 40*sw^2 + 32*sw^4) + 3*d*s*(3 - 20*sw^2 + 
              32*sw^4) - 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t)*
           GaugeXi[Z] + (3*d*s*(3*(2*Pi)^d + 2^(2 + d)*Pi^d*sw^2*(-5 + 
                8*sw^2)) + 2^(1 + d)*Pi^d*(12*s*sw^4*(13 - 40*sw^2 + 
                32*sw^4) + (-9 + 60*sw^2 - 200*sw^4 + 320*sw^6 - 256*sw^8)*
               t))*GaugeXi[Z]^2))/(s*(-1 + GaugeXi[Z])^2))))/
   (cw^4*mz^4*Pi^(2*d)*sw^4), ((-I/27)*2^(-7 - 2*d)*EL^6*
    (3*2^(1 + d)*Pi^d*(mz^2 - s)*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
       256*sw^8) - 3*2^(1 + d)*Pi^d*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
       256*sw^8)*t + (2^(1 + d)*mz^2*Pi^d*(d*s*(-9 + 60*sw^2 - 96*sw^4) + 
        6*s*(9 - 60*sw^2 + 148*sw^4 - 160*sw^6 + 128*sw^8) + 
        2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t))/s + 
     (2*Pi)^d*(24*s*sw^4*(13 - 40*sw^2 + 32*sw^4) + 
       3*d*s*(3 - 20*sw^2 + 32*sw^4) + 4*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
         256*sw^8)*t) + (mz^2*(2*Pi)^d*(d*s*(-9 + 60*sw^2 - 96*sw^4) + 
        6*s*(9 - 60*sw^2 + 148*sw^4 - 160*sw^6 + 128*sw^8) + 
        2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t)*GaugeXi[Z])/s + 
     (2^(1 + d)*Pi^d*(d*(9 - 60*sw^2 + 96*sw^4) - 
        4*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8))*(s + t)*
       (mz^2 + s - mz^2*GaugeXi[Z]))/s - 
     (2^(1 + d)*Pi^d*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*
       ((-4 + 3*d)*mz^2 - d*s + d*mz^2*GaugeXi[Z]))/(-1 + d) - 
     (2^(2 + d)*Pi^d*(s*(d*(9 - 60*sw^2 + 96*sw^4) - 
          4*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8))*(s + t) + 
        mz^2*(2*s*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8) + 
          d*(9 - 60*sw^2 + 96*sw^4)*t + 2*(-9 + 60*sw^2 - 44*sw^4 - 
            160*sw^6 + 128*sw^8)*t) - mz^2*(d*(9 - 60*sw^2 + 96*sw^4) - 
          4*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8))*(s + t)*
         GaugeXi[Z]))/s - 
     (mz^2*(3*d*s*(3*(2*Pi)^d + 2^(2 + d)*Pi^d*sw^2*(-5 + 8*sw^2)) + 
        2^(1 + d)*Pi^d*(12*s*sw^4*(13 - 40*sw^2 + 32*sw^4) + 
          (-9 + 60*sw^2 - 200*sw^4 + 320*sw^6 - 256*sw^8)*t) - 
        2^(1 + d)*Pi^d*(24*s*sw^4*(13 - 40*sw^2 + 32*sw^4) + 
          3*d*s*(3 - 20*sw^2 + 32*sw^4) - 2*(9 - 60*sw^2 + 200*sw^4 - 
            320*sw^6 + 256*sw^8)*t)*GaugeXi[Z] + 
        (3*d*s*(3*(2*Pi)^d + 2^(2 + d)*Pi^d*sw^2*(-5 + 8*sw^2)) + 
          2^(1 + d)*Pi^d*(12*s*sw^4*(13 - 40*sw^2 + 32*sw^4) + 
            (-9 + 60*sw^2 - 200*sw^4 + 320*sw^6 - 256*sw^8)*t))*
         GaugeXi[Z]^2))/(s*(-1 + GaugeXi[Z])^2) - 
     ((s*(2*s - d*s + 2*t) + mz^2*(-2*s + 3*d*s + 2*t) + 
        mz^2*((-2 + d)*s - 2*t)*GaugeXi[Z])*(-9*d*(2*Pi)^d*s + 
        2^(1 + d)*Pi^d*(2*s*(9 + 15*(-4 + d)*sw^2 + (122 - 24*d)*sw^4 - 
            80*sw^6 + 64*sw^8) + (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
            256*sw^8)*t) + 2^(1 + d)*Pi^d*(d*s*(9 - 60*sw^2 + 96*sw^4) - 
          4*s*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8) - 
          2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t)*GaugeXi[Z] + 
        (-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(2*s*(9 + 15*(-4 + d)*sw^2 + 
              (122 - 24*d)*sw^4 - 80*sw^6 + 64*sw^8) + 
            (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t))*GaugeXi[Z]^2))/
      ((-1 + d)*s^2*(-1 + GaugeXi[Z])^2) + 
     (2*mz^2*(9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
         (3*s*(9 - 60*sw^2 + 148*sw^4 - 160*sw^6 + 128*sw^8 + 
            d*(-3 + 10*sw^2 - 16*sw^4)) + (9 - 60*sw^2 + 200*sw^4 - 
            320*sw^6 + 256*sw^8)*t) + 2^(1 + d)*Pi^d*
         (d*s*(9 - 60*sw^2 + 96*sw^4) - 6*s*(9 - 60*sw^2 + 148*sw^4 - 
            160*sw^6 + 128*sw^8) - 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
            256*sw^8)*t)*GaugeXi[Z] + (9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
           (3*s*(9 - 60*sw^2 + 148*sw^4 - 160*sw^6 + 128*sw^8 + 
              d*(-3 + 10*sw^2 - 16*sw^4)) + (9 - 60*sw^2 + 200*sw^4 - 
              320*sw^6 + 256*sw^8)*t))*GaugeXi[Z]^2))/
      (s*(-1 + GaugeXi[Z])^2) - 
     (mz^2*(-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
          (3*s*(-9 + 60*sw^2 - 148*sw^4 + 160*sw^6 - 128*sw^8 + 
             d*(3 - 10*sw^2 + 16*sw^4)) + (-9 + 60*sw^2 - 200*sw^4 + 
             320*sw^6 - 256*sw^8)*t)) + s*(-9*d*(2*Pi)^d*s + 
         2^(1 + d)*Pi^d*(3*s*(9 + 10*(-6 + d)*sw^2 - 4*(-37 + 4*d)*sw^4 - 
             160*sw^6 + 128*sw^8) + (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
             256*sw^8)*t)) + (2^(1 + d)*Pi^d*s*(d*s*(9 - 60*sw^2 + 96*sw^4) - 
           6*s*(9 - 60*sw^2 + 148*sw^4 - 160*sw^6 + 128*sw^8) - 
           2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t) + 
         mz^2*(-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (3*s*(9 + 10*(-6 + d)*sw^2 - 4*(-37 + 4*d)*sw^4 - 160*sw^6 + 128*
                sw^8) + (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t)))*
        GaugeXi[Z] - (mz^2 + s)*(9*d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*
          (3*s*(9 + 10*(-6 + d)*sw^2 - 4*(-37 + 4*d)*sw^4 - 160*sw^6 + 
             128*sw^8) + (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t))*
        GaugeXi[Z]^2 + mz^2*(-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
          (3*s*(-9 + 60*sw^2 - 148*sw^4 + 160*sw^6 - 128*sw^8 + 
             d*(3 - 10*sw^2 + 16*sw^4)) + (-9 + 60*sw^2 - 200*sw^4 + 
             320*sw^6 - 256*sw^8)*t))*GaugeXi[Z]^3)/(s*(-1 + GaugeXi[Z])^2)))/
   (cw^4*mz^4*Pi^(2*d)*sw^4), ((I/27)*2^(-7 - 2*d)*EL^6*
    ((2^(1 + d)*Pi^d*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*
       (d*(mz^2 - s)^2 + 2*((-2 + d)*mz^4 - d*mz^2*s)*GaugeXi[Z] + 
        d*mz^4*GaugeXi[Z]^2))/(-1 + d) + 
     (((mz^2 - s)^2*((-2 + d)*s - 2*t) + 2*mz^2*(d*(mz^2 - s)*s + 
          2*(s^2 + mz^2*t + s*t))*GaugeXi[Z] + mz^4*((-2 + d)*s - 2*t)*
         GaugeXi[Z]^2)*(-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
         (2*s*(9 + 15*(-4 + d)*sw^2 + (122 - 24*d)*sw^4 - 80*sw^6 + 
            64*sw^8) + (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t) + 
        2^(1 + d)*Pi^d*(d*s*(9 - 60*sw^2 + 96*sw^4) - 
          4*s*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8) - 
          2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t)*GaugeXi[Z] + 
        (-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(2*s*(9 + 15*(-4 + d)*sw^2 + 
              (122 - 24*d)*sw^4 - 80*sw^6 + 64*sw^8) + 
            (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t))*GaugeXi[Z]^2))/
      ((-1 + d)*s^2*(-1 + GaugeXi[Z])^2) + 
     ((mz^2 - s + mz^2*GaugeXi[Z])*
       (mz^2*(-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
           (3*s*(-9 + 60*sw^2 - 148*sw^4 + 160*sw^6 - 128*sw^8 + 
              d*(3 - 10*sw^2 + 16*sw^4)) + (-9 + 60*sw^2 - 200*sw^4 + 
              320*sw^6 - 256*sw^8)*t)) + s*(-9*d*(2*Pi)^d*s + 
          2^(1 + d)*Pi^d*(3*s*(9 + 10*(-6 + d)*sw^2 - 4*(-37 + 4*d)*sw^4 - 
              160*sw^6 + 128*sw^8) + (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
              256*sw^8)*t)) + 
        (2^(1 + d)*Pi^d*s*(d*s*(9 - 60*sw^2 + 96*sw^4) - 
            6*s*(9 - 60*sw^2 + 148*sw^4 - 160*sw^6 + 128*sw^8) - 
            2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t) + 
          mz^2*(-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(3*s*(9 + 10*(-6 + d)*sw^2 - 
                4*(-37 + 4*d)*sw^4 - 160*sw^6 + 128*sw^8) + (9 - 60*sw^2 + 
                200*sw^4 - 320*sw^6 + 256*sw^8)*t)))*GaugeXi[Z] - 
        (mz^2 + s)*(9*d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*
           (3*s*(9 + 10*(-6 + d)*sw^2 - 4*(-37 + 4*d)*sw^4 - 160*sw^6 + 
              128*sw^8) + (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t))*
         GaugeXi[Z]^2 + mz^2*(-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
           (3*s*(-9 + 60*sw^2 - 148*sw^4 + 160*sw^6 - 128*sw^8 + 
              d*(3 - 10*sw^2 + 16*sw^4)) + (-9 + 60*sw^2 - 200*sw^4 + 
              320*sw^6 - 256*sw^8)*t))*GaugeXi[Z]^3))/
      (s*(-1 + GaugeXi[Z])^2) - 
     (2*(mz^4*(9*d*(2*Pi)^d - 2^(2 + d)*Pi^d*(9 + 15*(-4 + d)*sw^2 + 
            (122 - 24*d)*sw^4 - 80*sw^6 + 64*sw^8))*(s + t) + 
        s^2*(9*d*(2*Pi)^d*(s + 3*t) - 2^(1 + d)*Pi^d*
           (2*s*(9 + 15*(-4 + d)*sw^2 + (122 - 24*d)*sw^4 - 80*sw^6 + 
              64*sw^8) + (d*(9 + 30*sw^2 - 48*sw^4) + 2*(9 - 60*sw^2 + 
                122*sw^4 - 80*sw^6 + 64*sw^8))*t)) + 
        2*mz^2*(9*d*(2*Pi)^d*s*((-5 + d)*s - 11*t) + 2^(1 + d)*Pi^d*
           (2*s^2*(18 - 15*(8 - 5*d + d^2)*sw^2 + 2*(83 - 47*d + 12*d^2)*sw^
                4 - 80*(-1 + d)*sw^6 + 64*(-1 + d)*sw^8) + 
            s*(-66*d*sw^2*(-5 + 8*sw^2) + d^2*(9 - 60*sw^2 + 96*sw^4) + 
              10*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8))*t + 
            2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^2)) - 
        2*(s^2*(9*d*(2*Pi)^d - 2^(2 + d)*Pi^d*(9 + 15*(-4 + d)*sw^2 + 
              (122 - 24*d)*sw^4 - 80*sw^6 + 64*sw^8))*(s + t) + 
          mz^4*(9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-9 - 30*(-2 + d)*sw^2 + 
                (-44 + 48*d)*sw^4 - 160*sw^6 + 128*sw^8) + 3*(-3 + d)*(3 - 
                20*sw^2 + 32*sw^4)*t)) + mz^2*(-27*d*(2*Pi)^d*s*(3*s + 7*t) + 
            2^(1 + d)*Pi^d*(s^2*(d^2*(9 - 60*sw^2 + 96*sw^4) - 
                6*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 64*sw^8) + 
                d*(270*sw^2 - 328*sw^4 - 320*sw^6 + 256*sw^8)) + 
              6*s*(-21*d*sw^2*(-5 + 8*sw^2) + d^2*(3 - 20*sw^2 + 32*sw^4) + 
                3*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8))*t + 
              4*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^2)))*
         GaugeXi[Z] + (-4*s^3*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*sw^2*
             (-30 + 61*sw^2 - 40*sw^4 + 32*sw^6)) + 3*2^(1 + d)*d^2*mz^2*Pi^d*
           s*(3 - 20*sw^2 + 32*sw^4)*(s + 2*t) - 
          4*s^2*(3*2^(2 + d)*mz^2*Pi^d*sw^4*(13 - 40*sw^2 + 32*sw^4) + 
            9*(2*Pi)^d*t + 2^(1 + d)*Pi^d*sw^2*(-30 + 61*sw^2 - 40*sw^4 + 
              32*sw^6)*t) + 3*2^(3 + d)*mz^2*Pi^d*s*
           (mz^2*(26*sw^4 - 80*sw^6 + 64*sw^8) + (9 - 60*sw^2 + 122*sw^4 - 
              80*sw^6 + 64*sw^8)*t) + 2^(3 + d)*mz^2*Pi^d*t*
           (2*mz^2*(-9 + 60*sw^2 - 83*sw^4 - 40*sw^6 + 32*sw^8) + 
            (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t) + 
          d*(3*2^(1 + d)*mz^4*Pi^d*(3 - 20*sw^2 + 32*sw^4)*(s + 3*t) + 
            3*s^2*(3*(2*Pi)^d*s + 2^(2 + d)*Pi^d*s*sw^2*(-5 + 8*sw^2) + 
              9*(2*Pi)^d*t + 2^(1 + d)*Pi^d*(-3 - 10*sw^2 + 16*sw^4)*t) + 
            2^(1 + d)*mz^2*Pi^d*s*(s*(-27 + 180*sw^2 - 184*sw^4 - 320*sw^6 + 
                256*sw^8) - 27*(3 - 20*sw^2 + 32*sw^4)*t)))*GaugeXi[Z]^2 - 
        2*(mz^2*s*(9*d*(2*Pi)^d - 2^(2 + d)*Pi^d*(9 + 15*(-4 + d)*sw^2 + 
              (122 - 24*d)*sw^4 - 80*sw^6 + 64*sw^8))*(s + t) + 
          mz^4*(9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-9 - 30*(-2 + d)*sw^2 + 
                (-44 + 48*d)*sw^4 - 160*sw^6 + 128*sw^8) + 3*(-3 + d)*(3 - 
                20*sw^2 + 32*sw^4)*t)))*GaugeXi[Z]^3 + 
        mz^4*(9*d*(2*Pi)^d - 2^(2 + d)*Pi^d*(9 + 15*(-4 + d)*sw^2 + 
            (122 - 24*d)*sw^4 - 80*sw^6 + 64*sw^8))*(s + t)*GaugeXi[Z]^4))/
      (s*(-1 + GaugeXi[Z])^2) - (mz^2 - s + mz^2*GaugeXi[Z])*
      (3*2^(1 + d)*Pi^d*(mz^2 - s)*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
         256*sw^8) - 3*2^(1 + d)*Pi^d*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
         256*sw^8)*t + (2*Pi)^d*(24*s*sw^4*(13 - 40*sw^2 + 32*sw^4) + 
         3*d*s*(3 - 20*sw^2 + 32*sw^4) + 4*(9 - 60*sw^2 + 200*sw^4 - 
           320*sw^6 + 256*sw^8)*t) + 
       (mz^2*(2*Pi)^d*(d*s*(-9 + 60*sw^2 - 96*sw^4) + 
          6*s*(9 - 60*sw^2 + 148*sw^4 - 160*sw^6 + 128*sw^8) + 
          2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t)*GaugeXi[Z])/s - 
       (mz^2*(3*d*s*(3*(2*Pi)^d + 2^(2 + d)*Pi^d*sw^2*(-5 + 8*sw^2)) + 
          2^(1 + d)*Pi^d*(12*s*sw^4*(13 - 40*sw^2 + 32*sw^4) + 
            (-9 + 60*sw^2 - 200*sw^4 + 320*sw^6 - 256*sw^8)*t) - 
          2^(1 + d)*Pi^d*(24*s*sw^4*(13 - 40*sw^2 + 32*sw^4) + 
            3*d*s*(3 - 20*sw^2 + 32*sw^4) - 2*(9 - 60*sw^2 + 200*sw^4 - 
              320*sw^6 + 256*sw^8)*t)*GaugeXi[Z] + 
          (3*d*s*(3*(2*Pi)^d + 2^(2 + d)*Pi^d*sw^2*(-5 + 8*sw^2)) + 
            2^(1 + d)*Pi^d*(12*s*sw^4*(13 - 40*sw^2 + 32*sw^4) + 
              (-9 + 60*sw^2 - 200*sw^4 + 320*sw^6 - 256*sw^8)*t))*
           GaugeXi[Z]^2))/(s*(-1 + GaugeXi[Z])^2))))/
   (cw^4*mz^4*Pi^(2*d)*sw^4), ((I/27)*2^(-7 - 2*d)*EL^6*
    (9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
      (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
         3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
           64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
         d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 
           64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*
        t^2))*(s - 4*mz^2*GaugeXi[Z]))/(cw^4*(-1 + d)*mz^4*Pi^(2*d)*s*sw^4), 
  ((-I/27)*2^(-7 - 2*d)*EL^6*
    ((2^(1 + d)*Pi^d*(4*(-1 + d)*mz^4 - 4*d*mz^2*s + d*s^2)*
       (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8))/((-1 + d)*mz^4) - 
     (4*(9*d^3*(2*Pi)^d + 2^(1 + d)*Pi^d*(6*d^3*sw^2*(-5 + 8*sw^2) - 
          18*d^2*(3 - 20*sw^2 + 32*sw^4) - 4*(63 - 420*sw^2 + 698*sw^4 - 
            80*sw^6 + 64*sw^8) + d*(207 - 1380*sw^2 + 2260*sw^4 - 160*sw^6 + 
            128*sw^8)))*(s + 2*t))/s + 2^(2 + d)*Pi^d*
      (-36*d^2*(3 - 20*sw^2 + 32*sw^4) + d^3*(9 - 60*sw^2 + 96*sw^4) - 
       8*(63 - 420*sw^2 + 698*sw^4 - 80*sw^6 + 64*sw^8) + 
       d*(414 - 2760*sw^2 + 4520*sw^4 - 320*sw^6 + 256*sw^8))*
      (-1 - (2*t)/s) + (2*(mz^2 - s/2)*(2^(1 + d)*mz^2*Pi^d*
         (d*s*(9 - 60*sw^2 + 96*sw^4) - 6*s*(9 - 60*sw^2 + 148*sw^4 - 
            160*sw^6 + 128*sw^8) - 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
            256*sw^8)*t) + s*(-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
           (3*s*(9 + 10*(-6 + d)*sw^2 - 4*(-37 + 4*d)*sw^4 - 160*sw^6 + 
              128*sw^8) + (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*
             t))))/(mz^4*s) + ((4*(-1 + d)*mz^4 + s*((-2 + d)*s - 2*t) + 
        mz^2*(-4*(-2 + d)*s + 8*t))*(-9*d*(2*Pi)^d*s + 
        2^(1 + d)*Pi^d*(2*s*(9 + 15*(-4 + d)*sw^2 + (122 - 24*d)*sw^4 - 
            80*sw^6 + 64*sw^8) + (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
            256*sw^8)*t) + 2^(1 + d)*Pi^d*(d*s*(9 - 60*sw^2 + 96*sw^4) - 
          4*s*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8) - 
          2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t)*GaugeXi[Z] + 
        (-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(2*s*(9 + 15*(-4 + d)*sw^2 + 
              (122 - 24*d)*sw^4 - 80*sw^6 + 64*sw^8) + 
            (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t))*GaugeXi[Z]^2))/
      ((-1 + d)*mz^4*s*(-1 + GaugeXi[Z])^2) + 
     (2*(s^2*(-9*d*(2*Pi)^d*(s + 3*t) + 2^(1 + d)*Pi^d*
           (2*s*(9 + 15*(-4 + d)*sw^2 + (122 - 24*d)*sw^4 - 80*sw^6 + 
              64*sw^8) + (d*(9 + 30*sw^2 - 48*sw^4) + 2*(9 - 60*sw^2 + 
                122*sw^4 - 80*sw^6 + 64*sw^8))*t)) + 
        2*mz^4*(9*d*(87 + d^2)*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
           (s*(-549 + 3660*sw^2 - 6116*sw^4 + 800*sw^6 - 640*sw^8 + 
              6*d^3*sw^2*(-5 + 8*sw^2) - 27*d^2*(3 - 20*sw^2 + 32*sw^4) + 
              6*d*sw^2*(-435 + 722*sw^2 - 80*sw^4 + 64*sw^6)) + 
            (-495 + 3300*sw^2 - 5384*sw^4 + 320*sw^6 - 256*sw^8 - 
              36*d^2*(3 - 20*sw^2 + 32*sw^4) + d^3*(9 - 60*sw^2 + 96*sw^4) + 
              d*(414 - 2760*sw^2 + 4520*sw^4 - 320*sw^6 + 256*sw^8))*t)) - 
        4*mz^2*(9*d*(2*Pi)^d*s*((-5 + d)*s - 11*t) + 2^(1 + d)*Pi^d*
           (2*s^2*(18 - 15*(8 - 5*d + d^2)*sw^2 + 2*(83 - 47*d + 12*d^2)*sw^
                4 - 80*(-1 + d)*sw^6 + 64*(-1 + d)*sw^8) + 
            s*(-66*d*sw^2*(-5 + 8*sw^2) + d^2*(9 - 60*sw^2 + 96*sw^4) + 
              10*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8))*t + 
            2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^2)) - 
        2*(-(s^2*(9*d*(2*Pi)^d - 2^(2 + d)*Pi^d*(9 + 15*(-4 + d)*sw^2 + 
               (122 - 24*d)*sw^4 - 80*sw^6 + 64*sw^8))*(s + t)) + 
          2*mz^4*(9*d*(87 + d^2)*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
             (s*(-549 + 3660*sw^2 - 6116*sw^4 + 800*sw^6 - 640*sw^8 + 
                6*d^3*sw^2*(-5 + 8*sw^2) - 27*d^2*(3 - 20*sw^2 + 32*sw^4) + 
                6*d*sw^2*(-435 + 722*sw^2 - 80*sw^4 + 64*sw^6)) + 
              (-495 + 3300*sw^2 - 5384*sw^4 + 320*sw^6 - 256*sw^8 - 
                36*d^2*(3 - 20*sw^2 + 32*sw^4) + d^3*(9 - 60*sw^2 + 
                  96*sw^4) + d*(414 - 2760*sw^2 + 4520*sw^4 - 320*sw^6 + 
                  256*sw^8))*t)) - 4*mz^2*(9*d*(2*Pi)^d*s*((-5 + d)*s - 
              11*t) + 2^(1 + d)*Pi^d*(2*s^2*(18 - 15*(8 - 5*d + d^2)*sw^2 + 
                2*(83 - 47*d + 12*d^2)*sw^4 - 80*(-1 + d)*sw^6 + 
                64*(-1 + d)*sw^8) + s*(-66*d*sw^2*(-5 + 8*sw^2) + 
                d^2*(9 - 60*sw^2 + 96*sw^4) + 10*(9 - 60*sw^2 + 122*sw^4 - 
                  80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 
                320*sw^6 + 256*sw^8)*t^2)))*GaugeXi[Z] + 
        (s^2*(-9*d*(2*Pi)^d*(s + 3*t) + 2^(1 + d)*Pi^d*
             (2*s*(9 + 15*(-4 + d)*sw^2 + (122 - 24*d)*sw^4 - 80*sw^6 + 
                64*sw^8) + (d*(9 + 30*sw^2 - 48*sw^4) + 2*(9 - 60*sw^2 + 
                  122*sw^4 - 80*sw^6 + 64*sw^8))*t)) + 
          2*mz^4*(9*d*(87 + d^2)*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
             (s*(-549 + 3660*sw^2 - 6116*sw^4 + 800*sw^6 - 640*sw^8 + 
                6*d^3*sw^2*(-5 + 8*sw^2) - 27*d^2*(3 - 20*sw^2 + 32*sw^4) + 
                6*d*sw^2*(-435 + 722*sw^2 - 80*sw^4 + 64*sw^6)) + 
              (-495 + 3300*sw^2 - 5384*sw^4 + 320*sw^6 - 256*sw^8 - 
                36*d^2*(3 - 20*sw^2 + 32*sw^4) + d^3*(9 - 60*sw^2 + 
                  96*sw^4) + d*(414 - 2760*sw^2 + 4520*sw^4 - 320*sw^6 + 
                  256*sw^8))*t)) - 4*mz^2*(9*d*(2*Pi)^d*s*((-5 + d)*s - 
              11*t) + 2^(1 + d)*Pi^d*(2*s^2*(18 - 15*(8 - 5*d + d^2)*sw^2 + 
                2*(83 - 47*d + 12*d^2)*sw^4 - 80*(-1 + d)*sw^6 + 
                64*(-1 + d)*sw^8) + s*(-66*d*sw^2*(-5 + 8*sw^2) + 
                d^2*(9 - 60*sw^2 + 96*sw^4) + 10*(9 - 60*sw^2 + 122*sw^4 - 
                  80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 
                320*sw^6 + 256*sw^8)*t^2)))*GaugeXi[Z]^2))/
      (mz^4*s*(-1 + GaugeXi[Z])^2) - 
     (2*(mz^2 - s/2)*(3*2^(1 + d)*Pi^d*(mz^2 - s)*(9 - 60*sw^2 + 200*sw^4 - 
          320*sw^6 + 256*sw^8) - 3*2^(1 + d)*Pi^d*(9 - 60*sw^2 + 200*sw^4 - 
          320*sw^6 + 256*sw^8)*t - (mz^2*(2*Pi)^d*
          (d*s*(9 - 60*sw^2 + 96*sw^4) - 6*s*(9 - 60*sw^2 + 148*sw^4 - 
             160*sw^6 + 128*sw^8) - 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
             256*sw^8)*t))/s + (2*Pi)^d*(24*s*sw^4*(13 - 40*sw^2 + 32*sw^4) + 
          3*d*s*(3 - 20*sw^2 + 32*sw^4) + 4*(9 - 60*sw^2 + 200*sw^4 - 
            320*sw^6 + 256*sw^8)*t) - 
        (mz^2*(3*d*s*(3*(2*Pi)^d + 2^(2 + d)*Pi^d*sw^2*(-5 + 8*sw^2)) + 
           2^(1 + d)*Pi^d*(12*s*sw^4*(13 - 40*sw^2 + 32*sw^4) + 
             (-9 + 60*sw^2 - 200*sw^4 + 320*sw^6 - 256*sw^8)*t) - 
           2^(1 + d)*Pi^d*(24*s*sw^4*(13 - 40*sw^2 + 32*sw^4) + 
             3*d*s*(3 - 20*sw^2 + 32*sw^4) - 2*(9 - 60*sw^2 + 200*sw^4 - 320*
                sw^6 + 256*sw^8)*t)*GaugeXi[Z] + 
           (3*d*s*(3*(2*Pi)^d + 2^(2 + d)*Pi^d*sw^2*(-5 + 8*sw^2)) + 
             2^(1 + d)*Pi^d*(12*s*sw^4*(13 - 40*sw^2 + 32*sw^4) + 
               (-9 + 60*sw^2 - 200*sw^4 + 320*sw^6 - 256*sw^8)*t))*
            GaugeXi[Z]^2))/(s*(-1 + GaugeXi[Z])^2)))/mz^4))/
   (cw^4*Pi^(2*d)*sw^4), ((-I/27)*2^(-5 - 2*d)*EL^6*
    (9*d^3*(2*Pi)^d*s^2 - 2^(1 + d)*mz^2*Pi^d*s*
      (-54*d^2*(3 - 20*sw^2 + 32*sw^4) + d^3*(9 - 60*sw^2 + 96*sw^4) - 
       64*(18 - 120*sw^2 + 205*sw^4 - 40*sw^6 + 32*sw^8) + 
       24*d*(33 - 220*sw^2 + 365*sw^4 - 40*sw^6 + 32*sw^8)) + 
     2^(1 + d)*Pi^d*(3*s^2*(2*d^3*sw^2*(-5 + 8*sw^2) - 
         72*(3 - 20*sw^2 + 32*sw^4) - 9*d^2*(3 - 20*sw^2 + 32*sw^4) + 
         4*d*(36 - 240*sw^2 + 397*sw^4 - 40*sw^6 + 32*sw^8)) + 
       12*s*(8*sw^4*(13 - 40*sw^2 + 32*sw^4) + d*(3 - 20*sw^2 + 32*sw^4))*t + 
       8*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^2)))/
   (cw^4*Pi^(2*d)*s*sw^4), 0, ((-I/27)*2^(-5 - 2*d)*EL^6*
    (-9*d^3*(2*Pi)^d*s*(s - t) + 2^(1 + d)*Pi^d*
      (s^2*(-9*d^2*(3 - 20*sw^2 + 32*sw^4) + d^3*(9 - 30*sw^2 + 48*sw^4) - 
         2*d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 64*sw^8) + 
         8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8)) + 
       s*(9*d^3*(1 - 10*sw^2 + 16*sw^4) - 144*(3 - 20*sw^2 + 32*sw^4) - 
         45*d^2*(3 - 20*sw^2 + 32*sw^4) + 4*d*(108 - 720*sw^2 + 1165*sw^4 - 
           40*sw^6 + 32*sw^8))*t + (-36*d^2*(3 - 20*sw^2 + 32*sw^4) + 
         d^3*(9 - 60*sw^2 + 96*sw^4) - 8*(63 - 420*sw^2 + 698*sw^4 - 
           80*sw^6 + 64*sw^8) + d*(414 - 2760*sw^2 + 4520*sw^4 - 320*sw^6 + 
           256*sw^8))*t^2)))/(cw^4*Pi^(2*d)*s*sw^4*(s + t)), 0, 
  ((-I/27)*2^(-5 - 2*d)*EL^6*(-9*d^3*(2*Pi)^d*s*(s^2 + t^2) + 
     2^(1 + d)*Pi^d*(s^3*(-6*d^3*sw^2*(-5 + 8*sw^2) + 
         33*d^2*(3 - 20*sw^2 + 32*sw^4) + 4*d*(-126 + 840*sw^2 - 1331*sw^4 - 
           40*sw^6 + 32*sw^8) - 16*(-45 + 300*sw^2 - 454*sw^4 - 80*sw^6 + 
           64*sw^8)) + s^2*(d^3*(-9 + 60*sw^2 - 96*sw^4) + 
         78*d^2*(3 - 20*sw^2 + 32*sw^4) + 8*d*(-153 + 1020*sw^2 - 1619*sw^4 - 
           40*sw^6 + 32*sw^8) - 96*(-18 + 120*sw^2 - 179*sw^4 - 40*sw^6 + 
           32*sw^8))*t + s*(-6*d^3*sw^2*(-5 + 8*sw^2) + 
         57*d^2*(3 - 20*sw^2 + 32*sw^4) + 4*d*(-234 + 1560*sw^2 - 2483*sw^4 - 
           40*sw^6 + 32*sw^8) - 48*(-27 + 180*sw^2 - 262*sw^4 - 80*sw^6 + 
           64*sw^8))*t^2 + 4*(-18*d*(3 - 20*sw^2 + 32*sw^4) + 
         d^2*(9 - 60*sw^2 + 96*sw^4) - 8*(-9 + 60*sw^2 - 83*sw^4 - 40*sw^6 + 
           32*sw^8))*t^3) + 4*mz^2*(9*d^3*(2*Pi)^d*(s^2 + t^2) + 
       2^(1 + d)*Pi^d*(s^2*(6*d^3*sw^2*(-5 + 8*sw^2) - 
           18*d^2*(3 - 20*sw^2 + 32*sw^4) - 4*(63 - 420*sw^2 + 698*sw^4 - 
             80*sw^6 + 64*sw^8) + d*(207 - 1380*sw^2 + 2260*sw^4 - 160*sw^6 + 
             128*sw^8)) + s*(-36*d^2*(3 - 20*sw^2 + 32*sw^4) + 
           d^3*(9 - 60*sw^2 + 96*sw^4) - 8*(63 - 420*sw^2 + 698*sw^4 - 
             80*sw^6 + 64*sw^8) + d*(414 - 2760*sw^2 + 4520*sw^4 - 320*sw^6 + 
             256*sw^8))*t + (6*d^3*sw^2*(-5 + 8*sw^2) - 
           18*d^2*(3 - 20*sw^2 + 32*sw^4) - 4*(63 - 420*sw^2 + 698*sw^4 - 
             80*sw^6 + 64*sw^8) + d*(207 - 1380*sw^2 + 2260*sw^4 - 160*sw^6 + 
             128*sw^8))*t^2))))/(cw^4*Pi^(2*d)*s*sw^4*(s + t)), 0, 
  ((-I/27)*4^(-3 - d)*EL^6*(-9*d^3*(2*Pi)^d*s^2*(s + 3*t) + 
     2^(1 + d)*Pi^d*(3*s^3*(d^3*(3 - 10*sw^2 + 16*sw^4) - 
         72*(3 - 20*sw^2 + 32*sw^4) - 9*d^2*(3 - 20*sw^2 + 32*sw^4) + 
         4*d*(36 - 240*sw^2 + 397*sw^4 - 40*sw^6 + 32*sw^8)) + 
       3*s^2*(2*d^3*(3 - 5*sw^2 + 8*sw^4) - 9*d^2*(3 - 20*sw^2 + 32*sw^4) + 
         4*d*(39 - 260*sw^2 + 429*sw^4 - 40*sw^6 + 32*sw^8) + 
         8*(-27 + 180*sw^2 - 236*sw^4 - 160*sw^6 + 128*sw^8))*t + 
       4*s*(d*(9 - 60*sw^2 + 96*sw^4) + 2*(9 - 60*sw^2 + 356*sw^4 - 
           800*sw^6 + 640*sw^8))*t^2 + 8*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
         256*sw^8)*t^3) - 4*mz^2*(s + t)*(9*d^3*(2*Pi)^d*s + 
       2^(2 + d)*Pi^d*(s*(3*d^3*sw^2*(-5 + 8*sw^2) - 
           108*(3 - 20*sw^2 + 32*sw^4) - 15*d^2*(3 - 20*sw^2 + 32*sw^4) + 
           d*(225 - 1500*sw^2 + 2426*sw^4 - 80*sw^6 + 64*sw^8)) + 
         (d^2*(-9 + 60*sw^2 - 96*sw^4) + 18*d*(3 - 20*sw^2 + 32*sw^4) + 
           8*(-9 + 60*sw^2 - 83*sw^4 - 40*sw^6 + 32*sw^8))*t)) + 
     2*mz^4*(27*d^3*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
        (s*(18*d^3*sw^2*(-5 + 8*sw^2) - 63*d^2*(3 - 20*sw^2 + 32*sw^4) - 
           24*(45 - 300*sw^2 + 506*sw^4 - 80*sw^6 + 64*sw^8) + 
           10*d*(81 - 540*sw^2 + 890*sw^4 - 80*sw^6 + 64*sw^8)) + 
         (-36*d^2*(3 - 20*sw^2 + 32*sw^4) + d^3*(9 - 60*sw^2 + 96*sw^4) - 
           8*(63 - 420*sw^2 + 698*sw^4 - 80*sw^6 + 64*sw^8) + 
           d*(414 - 2760*sw^2 + 4520*sw^4 - 320*sw^6 + 256*sw^8))*t))))/
   (cw^4*Pi^(2*d)*s*sw^4), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, ((-I/3)*2^(-3 - d)*(-4 + d)*EL^6*((-4 - 2*d + d^2)*s + 
     2*(14 - 8*d + d^2)*t))/(Pi^d*s*sw^4), 0, 0, 0, 0, 
  ((I/3)*2^(-5 - 2*d)*EL^6*(-(d^2*(2*Pi)^d*s^3) + 
     2^(1 + d)*Pi^d*s*(2*(-1 + d)*s^2 - (8 - 5*d + d^2)*s*t - 2*t^2) - 
     mw^2*(-(d^2*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*((2 - 2*d + d^2)*s^2 + 
         (8 - 5*d + d^2)*s*t + 2*t^2)) + 
     (2^(1 + d)*Pi^d*s*((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 4*t^2) + 
       mw^2*(-5*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*((6 - 6*d + 4*d^2)*s^2 + 
           3*(8 - 5*d + d^2)*s*t + 6*t^2)))*GaugeXi[W] - 
     (d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*(-2*(-1 + d)*s^2 + 
         (8 - 5*d + d^2)*s*t + 2*t^2) + mw^2*(-7*d^2*(2*Pi)^d*s^2 + 
         2^(1 + d)*Pi^d*((6 - 6*d + 5*d^2)*s^2 + 3*(8 - 5*d + d^2)*s*t + 
           6*t^2)))*GaugeXi[W]^2 + mw^2*(-3*d^2*(2*Pi)^d*s^2 + 
       2^(1 + d)*Pi^d*(2*(1 - d + d^2)*s^2 + (8 - 5*d + d^2)*s*t + 2*t^2))*
      GaugeXi[W]^3))/((-1 + d)*mw^4*Pi^(2*d)*s^2*sw^4*(-1 + GaugeXi[W])^2), 
  ((I/3)*2^(-5 - 2*d)*EL^6*(-(d^2*(2*Pi)^d*s^3) + 
     2^(1 + d)*Pi^d*s*((2 - 2*d + d^2)*s^2 + (8 - 5*d + d^2)*s*t + 2*t^2) - 
     2^(1 + d)*Pi^d*(2*mw^2 + s)*((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 
       4*t^2)*GaugeXi[W] + (-(d^2*(2*Pi)^d*s^3) + 2^(1 + d)*Pi^d*s*
        ((2 - 2*d + d^2)*s^2 + (8 - 5*d + d^2)*s*t + 2*t^2) + 
       2^(3 + d)*mw^2*Pi^d*((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 4*t^2))*
      GaugeXi[W]^2 - 2^(2 + d)*mw^2*Pi^d*((-2 + d)^2*s^2 + 
       2*(8 - 5*d + d^2)*s*t + 4*t^2)*GaugeXi[W]^3))/
   ((-1 + d)*mw^4*Pi^(2*d)*s*sw^4*(-1 + GaugeXi[W])^2), 
  ((-I/3)*2^(-5 - 2*d)*EL^6*(d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
      (-2*(-1 + d)*s^2 + (8 - 5*d + d^2)*s*t + 2*t^2) - 
     mw^2*(-3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*(2*(1 - d + d^2)*s^2 + 
         (8 - 5*d + d^2)*s*t + 2*t^2)) + 
     (-(2^(1 + d)*Pi^d*s*((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 4*t^2)) + 
       mw^2*(-7*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*((6 - 6*d + 5*d^2)*s^2 + 
           3*(8 - 5*d + d^2)*s*t + 6*t^2)))*GaugeXi[W] + 
     (d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*(-2*(-1 + d)*s^2 + 
         (8 - 5*d + d^2)*s*t + 2*t^2) - mw^2*(-5*d^2*(2*Pi)^d*s^2 + 
         2^(1 + d)*Pi^d*((6 - 6*d + 4*d^2)*s^2 + 3*(8 - 5*d + d^2)*s*t + 
           6*t^2)))*GaugeXi[W]^2 + mw^2*(-(d^2*(2*Pi)^d*s^2) + 
       2^(1 + d)*Pi^d*((2 - 2*d + d^2)*s^2 + (8 - 5*d + d^2)*s*t + 2*t^2))*
      GaugeXi[W]^3))/((-1 + d)*mw^4*Pi^(2*d)*s^2*sw^4*(-1 + GaugeXi[W])^2), 
  ((-I/3)*2^(-5 - 2*d)*EL^6*
    ((2^(1 + d)*Pi^d*(4*(-1 + d)*mw^4 - 4*d*mw^2*s + d*s^2))/
      ((-1 + d)*mw^4) - (2^(3 + d)*(-56 + 46*d - 12*d^2 + d^3)*Pi^d*
       (s + 2*t))/s - ((2*Pi)^d*((-4 + d)*s - 2*t)*(4*(-1 + d)*mw^4 + 
        s*((-2 + d)*s - 2*t) + mw^2*(-4*(-2 + d)*s + 8*t)))/
      ((-1 + d)*mw^4*s) + ((2*mw^2 - s)*(2^(1 + d)*mw^2*Pi^d*
         ((-6 + d)*s - 2*t) + s*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*
           (3*s + t))))/(mw^4*s) + 
     (2*((2^(2 + d)*Pi^d - d*(2*Pi)^d)*s^2*(s + t) + 2^(1 + d)*mw^4*Pi^d*
         ((-122 + 87*d - 18*d^2 + d^3)*s + 2*(-55 + 46*d - 12*d^2 + d^3)*t) - 
        2^(2 + d)*mw^2*Pi^d*((8 - 5*d + d^2)*s^2 + (20 - 11*d + 2*d^2)*s*t + 
          4*t^2) + 2^(1 + d)*Pi^d*((-4 + d)*s^2*(s + t) - 
          2*mw^4*((-122 + 87*d - 18*d^2 + d^3)*s + 2*(-55 + 46*d - 12*d^2 + 
              d^3)*t) + 4*mw^2*((8 - 5*d + d^2)*s^2 + (20 - 11*d + 2*d^2)*s*
             t + 4*t^2))*GaugeXi[W] + ((2^(2 + d)*Pi^d - d*(2*Pi)^d)*s^2*
           (s + t) + 2^(1 + d)*mw^4*Pi^d*((-122 + 87*d - 18*d^2 + d^3)*s + 
            2*(-55 + 46*d - 12*d^2 + d^3)*t) - 2^(2 + d)*mw^2*Pi^d*
           ((8 - 5*d + d^2)*s^2 + (20 - 11*d + 2*d^2)*s*t + 4*t^2))*
         GaugeXi[W]^2))/(mw^4*s*(-1 + GaugeXi[W])^2) + 
     ((2*mw^2 - s)*(2^(1 + d)*mw^2*Pi^d*((-6 + d)*s - 2*t) + 
        s*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(-((-3 + d)*s) + t)) - 
        2^(1 + d)*Pi^d*(2*mw^2 - s)*((-6 + d)*s - 2*t)*GaugeXi[W] + 
        (2^(1 + d)*mw^2*Pi^d*((-6 + d)*s - 2*t) + 
          s*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(3*s - d*s + t)))*GaugeXi[W]^2))/
      (mw^4*s*(-1 + GaugeXi[W])^2)))/(Pi^(2*d)*sw^4), 
  ((I/3)*2^(-3 - 4*d)*EL^6*(2*(-128 + 88*d - 18*d^2 + d^3)*mw^2*s - 
     (-144 + 96*d - 18*d^2 + d^3)*s^2 - 8*d*s*t - 16*t^2)*
    ((2*Pi)^(3*d) - 2^(1 + 3*d)*Pi^(3*d)*GaugeXi[W] + 
     (2*Pi)^(3*d)*GaugeXi[W]^2))/(Pi^(4*d)*s*sw^4*(-1 + GaugeXi[W])^2), 
  ((I/3)*2^(-3 - d)*(-4 + d)*EL^6*(s + t)*(-4*(14 - 8*d + d^2)*mw^2 + 
     (40 - 18*d + d^2)*s - 8*(-2 + d)*t))/(Pi^d*s*sw^4), 
  ((-I/3)*4^(-2 - d)*EL^6*(-(2^(2 + d)*(-4 + d)*mw^2*Pi^d*(s + t)*
       ((36 - 16*d + d^2)*s - 4*(-2 + d)*t)) + 2^(1 + d)*(-4 + d)*mw^4*Pi^d*
      (3*(20 - 10*d + d^2)*s + 2*(14 - 8*d + d^2)*t) + 
     (s + t)*(-(d^3*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*
        ((-72 + 48*d - 9*d^2 + d^3)*s^2 + 4*d*s*t + 8*t^2))))/
   (Pi^(2*d)*s*sw^4), ((I/3)*2^(-5 - 2*d)*EL^6*(d^2*(2*Pi)^d*s^3 + 
     2^(1 + d)*Pi^d*s*(-2*(-1 + d)*s^2 + (8 - 5*d + d^2)*s*t + 2*t^2) + 
     mw^2*(-3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*((-2 + 2*d + d^2)*s^2 - 
         (8 - 5*d + d^2)*s*t - 2*t^2)) - 
     (2^(1 + d)*Pi^d*s*((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 4*t^2) + 
       3*mw^2*(-(d^2*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*(2*(-1 + d)*s^2 - 
           (8 - 5*d + d^2)*s*t - 2*t^2)))*GaugeXi[W] + 
     (d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*(-2*(-1 + d)*s^2 + 
         (8 - 5*d + d^2)*s*t + 2*t^2) - 3*mw^2*(-(d^2*(2*Pi)^d*s^2) + 
         2^(1 + d)*Pi^d*((2 - 2*d + d^2)*s^2 + (8 - 5*d + d^2)*s*t + 2*t^2)))*
      GaugeXi[W]^2 + mw^2*(-3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (2*(1 - d + d^2)*s^2 + (8 - 5*d + d^2)*s*t + 2*t^2))*GaugeXi[W]^3))/
   ((-1 + d)*mw^4*Pi^(2*d)*s^2*sw^4*(-1 + GaugeXi[W])^2), 
  ((-I/3)*2^(-5 - 4*d)*EL^6*
    (((2*Pi)^(2*d)*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(3*s + t))*
       (mw^2 - s + mw^2*GaugeXi[W])^2)/s - 
     (2^(1 + 3*d)*Pi^(3*d)*(d*(mw^2 - s)^2 + 2*((-2 + d)*mw^4 - d*mw^2*s)*
         GaugeXi[W] + d*mw^4*GaugeXi[W]^2))/(-1 + d) + 
     ((2*Pi)^(3*d)*((-4 + d)*s - 2*t)*((mw^2 - s)^2*((-2 + d)*s - 2*t) + 
        2*mw^2*(d*(mw^2 - s)*s + 2*(s^2 + mw^2*t + s*t))*GaugeXi[W] + 
        mw^4*((-2 + d)*s - 2*t)*GaugeXi[W]^2))/((-1 + d)*s^2) - 
     ((2*Pi)^(2*d)*(mw^2 - s + mw^2*GaugeXi[W])*
       (mw^2*(d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(3*s + t)) + 
        s*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(3*s - d*s + t)) + 
        (2^(1 + d)*Pi^d*s*((-6 + d)*s - 2*t) + mw^2*(-(d*(2*Pi)^d*s) + 
            2^(1 + d)*Pi^d*(3*s + t)))*GaugeXi[W] + 
        (mw^2*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(3*s + t)) + 
          s*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(3*s - d*s + t)))*GaugeXi[W]^2 - 
        mw^2*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(3*s + t))*GaugeXi[W]^3))/
      (s*(-1 + GaugeXi[W])^2) - 
     (2*(-((2*Pi)^(3*d)*((-4 + d)*mw^4*(s + t) + (-4 + d)*s^2*(s + t) + 
           2*mw^2*((8 - 5*d + d^2)*s^2 + (20 - 11*d + 2*d^2)*s*t + 4*t^2))) + 
        2^(1 + 3*d)*Pi^(3*d)*((-4 + d)*s^2*(s + t) + 
          mw^4*((-2 + d)*s + 2*(-3 + d)*t) + mw^2*((12 - 9*d + 2*d^2)*s^2 + 
            (36 - 21*d + 4*d^2)*s*t + 8*t^2))*GaugeXi[W] - 
        (2*Pi)^(3*d)*(2*d^2*mw^2*s*(s + 2*t) - 4*(s^3 + 4*mw^4*t - 
            6*mw^2*s*t + s^2*t - 2*mw^2*t^2) + 
          d*(s^2*(s + t) + 2*mw^4*(s + 3*t) - 6*mw^2*s*(s + 3*t)))*
         GaugeXi[W]^2 + 2^(1 + 3*d)*mw^2*Pi^(3*d)*((-4 + d)*s*(s + t) + 
          mw^2*((-2 + d)*s + 2*(-3 + d)*t))*GaugeXi[W]^3 - 
        (-4 + d)*mw^4*(2*Pi)^(3*d)*(s + t)*GaugeXi[W]^4))/
      (s*(-1 + GaugeXi[W])^2)))/(mw^4*Pi^(4*d)*sw^4), 
  ((I/3)*2^(-5 - 2*d)*EL^6*(d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
      (-2*(-1 + d)*s^2 + (8 - 5*d + d^2)*s*t + 2*t^2) + 
     mw^2*(-3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*(2*(1 - d + d^2)*s^2 + 
         (8 - 5*d + d^2)*s*t + 2*t^2)) - 
     (2^(1 + d)*Pi^d*s*((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 4*t^2) + 
       3*mw^2*(-(d^2*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*((2 - 2*d + d^2)*s^2 + 
           (8 - 5*d + d^2)*s*t + 2*t^2)))*GaugeXi[W] - 
     (3*mw^2 + s)*(-(d^2*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*
        (2*(-1 + d)*s^2 - (8 - 5*d + d^2)*s*t - 2*t^2))*GaugeXi[W]^2 + 
     mw^2*(-3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*((-2 + 2*d + d^2)*s^2 - 
         (8 - 5*d + d^2)*s*t - 2*t^2))*GaugeXi[W]^3))/
   ((-1 + d)*mw^4*Pi^(2*d)*s^2*sw^4*(-1 + GaugeXi[W])^2), 
  ((-I/3)*2^(-5 - 4*d)*EL^6*
    (((2*Pi)^(2*d)*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(3*s + t))*
       (mw^2 - s + mw^2*GaugeXi[W])^2)/s - 
     (2^(1 + 3*d)*Pi^(3*d)*(d*(mw^2 - s)^2 + 2*((-2 + d)*mw^4 - d*mw^2*s)*
         GaugeXi[W] + d*mw^4*GaugeXi[W]^2))/(-1 + d) + 
     ((2*Pi)^(3*d)*((-4 + d)*s - 2*t)*((mw^2 - s)^2*((-2 + d)*s - 2*t) + 
        2*mw^2*(d*(mw^2 - s)*s + 2*(s^2 + mw^2*t + s*t))*GaugeXi[W] + 
        mw^4*((-2 + d)*s - 2*t)*GaugeXi[W]^2))/((-1 + d)*s^2) - 
     ((2*Pi)^(2*d)*(mw^2 - s + mw^2*GaugeXi[W])*
       (mw^2*(d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(3*s + t)) + 
        s*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(3*s - d*s + t)) + 
        (2^(1 + d)*Pi^d*s*((-6 + d)*s - 2*t) + mw^2*(-(d*(2*Pi)^d*s) + 
            2^(1 + d)*Pi^d*(3*s + t)))*GaugeXi[W] + 
        (mw^2*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(3*s + t)) + 
          s*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(3*s - d*s + t)))*GaugeXi[W]^2 - 
        mw^2*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(3*s + t))*GaugeXi[W]^3))/
      (s*(-1 + GaugeXi[W])^2) - 
     (2*(-((2*Pi)^(3*d)*((-4 + d)*mw^4*(s + t) + (-4 + d)*s^2*(s + t) + 
           2*mw^2*((8 - 5*d + d^2)*s^2 + (20 - 11*d + 2*d^2)*s*t + 4*t^2))) + 
        2^(1 + 3*d)*Pi^(3*d)*((-4 + d)*s^2*(s + t) + 
          mw^4*((-2 + d)*s + 2*(-3 + d)*t) + mw^2*((12 - 9*d + 2*d^2)*s^2 + 
            (36 - 21*d + 4*d^2)*s*t + 8*t^2))*GaugeXi[W] - 
        (2*Pi)^(3*d)*(2*d^2*mw^2*s*(s + 2*t) - 4*(s^3 + 4*mw^4*t - 
            6*mw^2*s*t + s^2*t - 2*mw^2*t^2) + 
          d*(s^2*(s + t) + 2*mw^4*(s + 3*t) - 6*mw^2*s*(s + 3*t)))*
         GaugeXi[W]^2 + 2^(1 + 3*d)*mw^2*Pi^(3*d)*((-4 + d)*s*(s + t) + 
          mw^2*((-2 + d)*s + 2*(-3 + d)*t))*GaugeXi[W]^3 - 
        (-4 + d)*mw^4*(2*Pi)^(3*d)*(s + t)*GaugeXi[W]^4))/
      (s*(-1 + GaugeXi[W])^2)))/(mw^4*Pi^(4*d)*sw^4), 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {((-I/9)*2^(2 - d)*(16 - 7*d + d^2)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
   ((-4 + d)*Pi^d*s^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0}, {((I/9)*2^(-1 - 2*d)*EL^6*(1 - 4*sw^2 + 8*sw^4)*
    (-(d*(1 + d)*(2*Pi)^d*s^3) + 2^(1 + d)*mz^2*Pi^d*
      ((-2 + d)*s^2 + 4*s*t + 4*t^2) + 2^(1 + d)*Pi^d*s*
      ((-7 + 5*d)*s^2 - 2*(-7 + d)*s*t - 2*(-7 + d)*t^2)))/
   (cw^2*Pi^(2*d)*s^3*sw^2), 0, 0, ((-I/9)*2^(-1 - d)*EL^6*(2*mz^2 + 3*s)*
    (1 - 4*sw^2 + 8*sw^4)*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
   (cw^2*mz^2*Pi^d*s^3*sw^2), 0, 0, 0, 0, 
  ((-I/9)*2^(-1 - d)*EL^6*(1 - 4*sw^2 + 8*sw^4)*((-2 + d)*s^2 + 4*s*t + 
     4*t^2))/(cw^2*mz^2*Pi^d*s^2*sw^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  ((I/9)*2^(-1 - 2*d)*EL^6*(1 - 4*sw^2 + 8*sw^4)*
    (2^(1 + d)*mz^4*Pi^d*((-2 + d)*s^2 + 4*s*t + 4*t^2) + 
     2^(1 + d)*Pi^d*s^2*((-2 + d)*s^2 + 4*s*t + 4*t^2) + 
     mz^2*s*(-(d^2*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*((-8 + 5*d)*s^2 - 
         2*(-8 + d)*s*t - 2*(-8 + d)*t^2))))/(cw^2*Pi^(2*d)*s^3*sw^2), 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {((I/9)*2^(-3 - d)*(16 - 7*d + d^2)*EL^6*
    (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
     2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
     4*(3 - 20*sw^2 + 32*sw^4)*t^2))/(cw^2*(-4 + d)*Pi^d*(mz^2 - s)*s*sw^2), 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {((-I/9)*2^(-5 - 3*d)*EL^6*(2*mz^2*(3*d^2*(2*Pi)^(2*d)*s^2 + 
       2^(1 + 2*d)*Pi^(2*d)*(s^2*(6 - 28*sw^2 + 24*sw^4 + 144*sw^6 - 
           128*sw^8 + 9*d^2*sw^2*(-1 + 2*sw^2) + d*(-6 + 32*sw^2 - 48*sw^4 - 
             72*sw^6 + 64*sw^8)) + s*(-15*d*(1 - 6*sw^2 + 12*sw^4) + 
           3*d^2*(1 - 6*sw^2 + 12*sw^4) + 8*(3 - 20*sw^2 + 48*sw^4 - 
             36*sw^6 + 32*sw^8))*t + 2*(3 - 26*sw^2 + 84*sw^4 - 144*sw^6 + 
           128*sw^8)*t^2)) - s*(3*d^2*(1 + d)*(2*Pi)^(2*d)*s^2 + 
       2^(1 + 2*d)*Pi^(2*d)*(s^2*(9*d^3*sw^2*(-1 + 2*sw^2) - 
           12*d*(-4 + 21*sw^2 - 30*sw^4 - 54*sw^6 + 48*sw^8) + 
           d^2*(-18 + 95*sw^2 - 174*sw^4 - 72*sw^6 + 64*sw^8) + 
           14*(-3 + 14*sw^2 - 12*sw^4 - 72*sw^6 + 64*sw^8)) + 
         s*(-36*d^2*(1 - 6*sw^2 + 12*sw^4) + 3*d^3*(1 - 6*sw^2 + 12*sw^4) - 
           56*(3 - 20*sw^2 + 48*sw^4 - 36*sw^6 + 32*sw^8) + 
           d*(129 - 790*sw^2 + 1644*sw^4 - 288*sw^6 + 256*sw^8))*t + 
         2*(-7 + d)*(3 - 26*sw^2 + 84*sw^4 - 144*sw^6 + 128*sw^8)*t^2))))/
   (cw^4*Pi^(3*d)*(mz^2 - s)*s^2*sw^4), 0, 0, 
  ((I/9)*2^(-5 - 3*d)*EL^6*(-3*d^2*(2*Pi)^(2*d)*s^3 + 
     3*2^(1 + 2*d)*Pi^(2*d)*s*(s^2*(6 - 28*sw^2 + 24*sw^4 + 144*sw^6 - 
         128*sw^8 + d^2*(2 - 9*sw^2 + 18*sw^4) + 
         d*(-6 + 32*sw^2 - 48*sw^4 - 72*sw^6 + 64*sw^8)) + 
       s*(-15*d*(1 - 6*sw^2 + 12*sw^4) + 3*d^2*(1 - 6*sw^2 + 12*sw^4) + 
         8*(3 - 20*sw^2 + 48*sw^4 - 36*sw^6 + 32*sw^8))*t + 
       2*(3 - 26*sw^2 + 84*sw^4 - 144*sw^6 + 128*sw^8)*t^2) + 
     2*mz^2*(3*d^2*(2*Pi)^(2*d)*s^2 + 2^(1 + 2*d)*Pi^(2*d)*
        (s^2*(6 - 28*sw^2 + 24*sw^4 + 144*sw^6 - 128*sw^8 + 
           9*d^2*sw^2*(-1 + 2*sw^2) + d*(-6 + 32*sw^2 - 48*sw^4 - 72*sw^6 + 
             64*sw^8)) + s*(-15*d*(1 - 6*sw^2 + 12*sw^4) + 
           3*d^2*(1 - 6*sw^2 + 12*sw^4) + 8*(3 - 20*sw^2 + 48*sw^4 - 
             36*sw^6 + 32*sw^8))*t + 2*(3 - 26*sw^2 + 84*sw^4 - 144*sw^6 + 
           128*sw^8)*t^2))))/(cw^4*mz^2*Pi^(3*d)*(mz^2 - s)*s^2*sw^4), 0, 0, 
  0, 0, ((I/9)*2^(-5 - d)*EL^6*(s^2*(3*d^2*(1 - 6*sw^2 + 12*sw^4) + 
       4*(3 - 14*sw^2 + 12*sw^4 + 72*sw^6 - 64*sw^8) + 
       4*d*(-3 + 16*sw^2 - 24*sw^4 - 36*sw^6 + 32*sw^8)) + 
     2*s*(-15*d*(1 - 6*sw^2 + 12*sw^4) + 3*d^2*(1 - 6*sw^2 + 12*sw^4) + 
       8*(3 - 20*sw^2 + 48*sw^4 - 36*sw^6 + 32*sw^8))*t + 
     4*(3 - 26*sw^2 + 84*sw^4 - 144*sw^6 + 128*sw^8)*t^2))/
   (cw^4*mz^2*Pi^d*(mz^2 - s)*s*sw^4), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  ((-I/9)*2^(-5 - 3*d)*EL^6*(2^(1 + 2*d)*(-2 + d)*mz^4*Pi^(2*d)*
      (3 - 26*sw^2 + 84*sw^4 - 144*sw^6 + 128*sw^8) - 
     mz^2*(3*d^3*(2*Pi)^(2*d)*s + 2^(1 + 2*d)*Pi^(2*d)*
        (s*(9*d^3*sw^2*(-1 + 2*sw^2) + 2*d^2*(-9 + 52*sw^2 - 96*sw^4 - 
             36*sw^6 + 32*sw^8) - 20*d*(-3 + 16*sw^2 - 24*sw^4 - 36*sw^6 + 
             32*sw^8) + 20*(-3 + 14*sw^2 - 12*sw^4 - 72*sw^6 + 64*sw^8)) + 
         (-36*d^2*(1 - 6*sw^2 + 12*sw^4) + 3*d^3*(1 - 6*sw^2 + 12*sw^4) - 
           8*(21 - 128*sw^2 + 264*sw^4 - 36*sw^6 + 32*sw^8) + 
           2*d*(69 - 418*sw^2 + 852*sw^4 - 72*sw^6 + 64*sw^8))*t)) + 
     2*(3*d*(2*Pi)^(2*d)*(d*s^2 + t^2) + 2^(1 + 2*d)*Pi^(2*d)*
        (s^2*(6 - 28*sw^2 + 24*sw^4 + 144*sw^6 - 128*sw^8 + 
           9*d^2*sw^2*(-1 + 2*sw^2) + d*(-6 + 32*sw^2 - 48*sw^4 - 72*sw^6 + 
             64*sw^8)) + s*(-18*d*(1 - 6*sw^2 + 12*sw^4) + 
           3*d^2*(1 - 6*sw^2 + 12*sw^4) + 2*(15 - 94*sw^2 + 204*sw^4 - 
             72*sw^6 + 64*sw^8))*t + (-3 - 13*(-2 + d)*sw^2 + 
           42*(-2 + d)*sw^4 - 72*(-2 + d)*sw^6 + 64*(-2 + d)*sw^8)*t^2)) + 
     (2^(1 + 2*d)*Pi^(2*d)*(3 - 26*sw^2 + 84*sw^4 - 144*sw^6 + 128*sw^8)*
       ((-2 + d)*s^2*t^2 + mz^4*((-2 + d)*s^2 + 4*(-1 + d)*s*t + 
          4*(-1 + d)*t^2) + 2*mz^2*s*t*(-2*t + d*(s + 2*t))))/s^2 + 
     (2^(1 + d)*Pi^d*(t + (mz^2*(s + 2*t))/s)*
       (mz^2*(3*d^2*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
           (s*(9*d^2*sw^2*(-1 + 2*sw^2) + d*(-9 + 58*sw^2 - 132*sw^4 + 
                72*sw^6 - 64*sw^8) + 4*(3 - 20*sw^2 + 48*sw^4 - 36*sw^6 + 
                32*sw^8)) - (-2 + d)*(3 - 26*sw^2 + 84*sw^4 - 144*sw^6 + 
              128*sw^8)*t)) + 2*s*(3*d*(2*Pi)^d*(s - t) + 
          2^(1 + d)*Pi^d*(s*(-3 + (14 - 9*d)*sw^2 + 6*(-2 + 3*d)*sw^4 - 
              72*sw^6 + 64*sw^8) + (6 + 13*(-4 + d)*sw^2 - 42*(-4 + d)*sw^4 + 
              72*(-4 + d)*sw^6 - 64*(-4 + d)*sw^8)*t))))/s))/
   (cw^4*Pi^(3*d)*(mz^2 - s)*sw^4), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0}, {((I/9)*4^(-2 - d)*EL^6*(-3*d^2*(1 + d)*(2*Pi)^d*s^3 + 
     2^(1 + d)*mw^2*Pi^d*(s^2*(3*d^2 - 4*d*(3 + 2*sw^2) + 4*(3 + 4*sw^2)) + 
       2*s*(24 - 15*d + 3*d^2 - 16*sw^2)*t + 4*(3 - 8*sw^2)*t^2) + 
     2^(1 + d)*Pi^d*s*(2*s^2*(d^2*(9 + 2*sw^2) - 6*d*(4 + 3*sw^2) + 
         7*(3 + 4*sw^2)) - (-7 + d)*s*(24 - 15*d + 3*d^2 - 16*sw^2)*t + 
       2*(-7 + d)*(-3 + 8*sw^2)*t^2)))/(cw^2*Pi^(2*d)*(mz^2 - s)*s^2*sw^4), 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  ((I/9)*2^(-4 - d)*EL^6*(s^2*(3*d^2 - 4*d*(3 + 2*sw^2) + 4*(3 + 4*sw^2)) + 
     2*s*(24 - 15*d + 3*d^2 - 16*sw^2)*t + 4*(3 - 8*sw^2)*t^2))/
   (cw^2*mw^2*Pi^d*s*(-mz^2 + s)*sw^4), 0, 
  ((I/9)*4^(-2 - d)*EL^6*(-3*d^2*(2*Pi)^d*s^3 + 3*2^(1 + d)*Pi^d*s*
      (2*s^2*(3 + d^2 + 4*sw^2 - d*(3 + 2*sw^2)) + 
       s*(24 - 15*d + 3*d^2 - 16*sw^2)*t + 2*(3 - 8*sw^2)*t^2) + 
     2^(1 + d)*mw^2*Pi^d*(s^2*(3*d^2 - 4*d*(3 + 2*sw^2) + 4*(3 + 4*sw^2)) + 
       2*s*(24 - 15*d + 3*d^2 - 16*sw^2)*t + 4*(3 - 8*sw^2)*t^2)))/
   (cw^2*mw^2*Pi^(2*d)*s^2*(-mz^2 + s)*sw^4), 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  ((-I/9)*4^(-2 - d)*EL^6*(2^(1 + d)*mw^4*Pi^d*
      (s^2*(3*d^2 - 4*d*(3 + 2*sw^2) + 4*(3 + 4*sw^2)) + 
       2*s*(24 - 15*d + 3*d^2 - 16*sw^2)*t + 4*(3 - 8*sw^2)*t^2) + 
     2^(1 + d)*Pi^d*s^2*(s^2*(3*d^2 - 4*d*(3 + 2*sw^2) + 4*(3 + 4*sw^2)) + 
       2*s*(24 - 15*d + 3*d^2 - 16*sw^2)*t + 4*(3 - 8*sw^2)*t^2) + 
     mw^2*(-3*d^3*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
        (2*s^2*(d^2*(9 + 2*sw^2) + 8*(3 + 4*sw^2) - d*(27 + 20*sw^2)) - 
         (-8 + d)*s*(24 - 15*d + 3*d^2 - 16*sw^2)*t + 
         2*(-8 + d)*(-3 + 8*sw^2)*t^2))))/(cw^2*Pi^(2*d)*s^2*(-mz^2 + s)*
    sw^4), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  ((I/9)*2^(-1 - d)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
   ((-1 + d)*mw^4*Pi^d*s*sw^2), 
  ((I/9)*4^(-1 - d)*EL^6*(-3*d*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
      ((1 + d)*s^2 - 2*s*t - 2*t^2) + 2^(2 + d)*mw^2*Pi^d*
      ((-2 + d)*s^2 + 4*s*t + 4*t^2)*GaugeXi[W]))/
   ((-1 + d)*mw^4*Pi^(2*d)*s*sw^2), 
  ((-I/9)*2^(-1 - d)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
    ((-5 + 4*d)*mw^2 + 2*(-1 + 2*d)*s + (mw^2 - s)*GaugeXi[W]))/
   ((-1 + d)*mw^2*Pi^d*s^3*sw^2), ((I/9)*2^(-2 - d)*EL^6*(2*mw^2 - s)*
    (4*(-1 + d)*mw^4 + 4*(-3 + 2*d)*mw^2*s + s^2)*((-2 + d)*s^2 + 4*s*t + 
     4*t^2))/((-1 + d)*mw^4*Pi^d*s^3*sw^2), 
  ((I/9)*2^(1 - 2*d)*EL^6*mw^2*
    (-(2^(1 + d)*Pi^d*s*((-2 + d)*s^2 + 4*s*t + 4*t^2)) + 
     mw^2*(-(d*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*(s^2 - 2*s*t - 2*t^2))))/
   (Pi^(2*d)*s^3*sw^2), 0, 0, 
  ((-I/9)*2^(-1 - d)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
    (mw^4 + 2*(-3 + 2*d)*mw^2*s + s^2 + (-mw^4 + mw^2*s)*GaugeXi[W]))/
   ((-1 + d)*mw^4*Pi^d*s^3*sw^2), ((-I/9)*2^(-1 - d)*EL^6*(mw^2 - s)*
    ((-2 + d)*s^2 + 4*s*t + 4*t^2)*(mw^4 + 2*(-3 + 2*d)*mw^2*s + s^2 - 
     2*mw^2*(mw^2 + s)*GaugeXi[W] + mw^4*GaugeXi[W]^2))/
   ((-1 + d)*mw^4*Pi^d*s^3*sw^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, ((I/9)*4^(-2 - d)*EL^6*(-3*d^2*(2*Pi)^d*s^2 + 
     2^(1 + d)*Pi^d*(s^2*(-6 - 8*sw^2 + d*(6 + 4*sw^2)) + 
       s*(-24 + 15*d - 3*d^2 + 16*sw^2)*t + 2*(-3 + 8*sw^2)*t^2) + 
     2^(1 + d)*Pi^d*(s^2*(3*d^2 - 4*d*(3 + 2*sw^2) + 4*(3 + 4*sw^2)) + 
       2*s*(24 - 15*d + 3*d^2 - 16*sw^2)*t + 4*(3 - 8*sw^2)*t^2)*GaugeXi[W] + 
     (-3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (s^2*(-6 + 6*d - 8*sw^2 + 4*d*sw^2) + s*(-24 + 15*d - 3*d^2 + 
           16*sw^2)*t + 2*(-3 + 8*sw^2)*t^2))*GaugeXi[W]^2))/
   ((-1 + d)*mw^4*Pi^(2*d)*(mz^2 - s)*sw^4*(-1 + GaugeXi[W])^2), 
  ((I/9)*2^(-5 - d)*EL^6*(s^2*(3*d^2 - 4*d*(3 + 2*sw^2) + 4*(3 + 4*sw^2)) + 
     2*s*(24 - 15*d + 3*d^2 - 16*sw^2)*t + 4*(3 - 8*sw^2)*t^2)*
    (s - 4*mw^2*GaugeXi[W]))/((-1 + d)*mw^4*Pi^d*(mz^2 - s)*sw^4), 
  ((-I/9)*2^(-4 - d)*EL^6*(s^2*(3*d^2 - 4*d*(3 + 2*sw^2) + 4*(3 + 4*sw^2)) + 
     2*s*(24 - 15*d + 3*d^2 - 16*sw^2)*t + 4*(3 - 8*sw^2)*t^2)*
    ((-5 + 4*d)*mw^2 + 2*(-1 + 2*d)*s + (mw^2 - s)*GaugeXi[W]))/
   ((-1 + d)*mw^2*Pi^d*s^2*(-mz^2 + s)*sw^4), 
  ((-I/9)*2^(-5 - 6*d)*EL^6*(2^(1 + 5*d)*Pi^(5*d)*(2*mw^2 - s)*s^2*
      (4*(-1 + d)*mw^4 - 4*d*mw^2*s + d*s^2)*(-3 + 8*sw^2)*
      (-1 + GaugeXi[W])^2 + 2^(2 + 5*d)*(1 - d)*mw^4*Pi^(5*d)*(2*mw^2 - s)*
      (3 - 8*sw^2)*((-2 + d)*s^2 - 4*s*t - 4*(-1 + d)*t^2)*
      (-1 + GaugeXi[W])^2 + 2*(1 - d)*(mw^2 - s/2)*s*
      (2^(2 + 5*d)*mw^2*Pi^(5*d)*s*(s*(-6 + 3*d - 8*sw^2) + 
         2*(-3 + 8*sw^2)*t) - (2*Pi)^(5*d)*s^2*(s*(-6 + 3*d - 8*sw^2) + 
         2*(-3 + 8*sw^2)*t) + 2^(2 + 5*d)*mw^4*Pi^(5*d)*
        (s*(30 + 3*d^2 - 8*sw^2 + d*(-21 + 8*sw^2)) + 
         2*(-3 + d)*(-3 + 8*sw^2)*t))*(-1 + GaugeXi[W])^2 - 
     2^(2 + 5*d)*(1 - d)*mw^4*Pi^(5*d)*(s + 2*t)*
      (2*(-2 + d)*mw^2*(s*(-6 + 3*d - 8*sw^2) + 2*(-3 + 8*sw^2)*t) + 
       s*(s*(-3*d^2 + 8*d*(3 + sw^2) - 12*(3 + 4*sw^2)) - 
         2*(2 + d)*(-3 + 8*sw^2)*t))*(-1 + GaugeXi[W])^2 - 
     2*(1 - d)*s*((2*Pi)^(5*d)*s^3*(6 - 3*d + 8*sw^2)*t + 
       2^(2 + 5*d)*(-3 + d)*mw^6*Pi^(5*d)*(s*(-6 + 3*d - 8*sw^2) + 
         2*(-3 + 8*sw^2)*t) + 2^(1 + 5*d)*mw^4*Pi^(5*d)*s*
        (3*s*(18 - 15*d + 3*d^2 + 24*sw^2 - 8*d*sw^2) + 
         2*(111 + 12*d^2 + 40*sw^2 - d*(75 + 8*sw^2))*t) - 
       2^(1 + 5*d)*mw^2*Pi^(5*d)*s*(2*s^2*(3*d^2 - 4*d*(3 + 2*sw^2) + 
           4*(3 + 4*sw^2)) + s*(114 - 69*d + 12*d^2 - 40*sw^2)*t + 
         8*(3 - 8*sw^2)*t^2))*(-1 + GaugeXi[W])^2 - 
     (2*Pi)^(2*d)*(2*mw^2 - s)*s*(s*(-12 + 3*d + 8*sw^2) + 2*(-3 + 8*sw^2)*t)*
      (4*(-1 + d)*mw^4 - 4*mw^2*(d*s + 2*t) + s*(d*s + 2*t))*
      ((2*Pi)^(3*d) - 2^(1 + 3*d)*Pi^(3*d)*GaugeXi[W] + 
       (2*Pi)^(3*d)*GaugeXi[W]^2) - 2^(1 + 2*d)*(1 - d)*Pi^(2*d)*(mw^2 - s/2)*
      s*(8*mw^4*(4*(-3 + d)*s*sw^2 + (-3 + 8*sw^2)*t) - 
       4*mw^2*s*(s*(-6 + 3*d - 8*sw^2) + 2*(-3 + 8*sw^2)*t) + 
       s^2*(s*(-6 + 3*d - 8*sw^2) + 2*(-3 + 8*sw^2)*t))*
      ((2*Pi)^(3*d) - 2^(1 + 3*d)*Pi^(3*d)*GaugeXi[W] + 
       (2*Pi)^(3*d)*GaugeXi[W]^2)))/((-1 + d)*mw^4*Pi^(6*d)*(mz^2 - s)*sw^4*
    (s - s*GaugeXi[W])^2), ((-I/9)*2^(-2 - d)*EL^6*mw^2*(mw^2 + 2*s)*
    (s^2*(3*d^2 - 4*d*(3 + 2*sw^2) + 4*(3 + 4*sw^2)) + 
     2*s*(24 - 15*d + 3*d^2 - 16*sw^2)*t + 4*(3 - 8*sw^2)*t^2))/
   (Pi^d*s^2*(-mz^2 + s)*sw^4), 0, 0, 
  ((I/9)*2^(-4 - d)*EL^6*(s^2*(3*d^2 - 4*d*(3 + 2*sw^2) + 4*(3 + 4*sw^2)) + 
     2*s*(24 - 15*d + 3*d^2 - 16*sw^2)*t + 4*(3 - 8*sw^2)*t^2)*
    (mw^4 + 2*(-3 + 2*d)*mw^2*s + s^2 + (-mw^4 + mw^2*s)*GaugeXi[W]))/
   ((-1 + d)*mw^4*Pi^d*(mz^2 - s)*s^2*sw^4), 
  ((I/9)*2^(-4 - d)*EL^6*(mw^2 - s)*
    (s^2*(3*d^2 - 4*d*(3 + 2*sw^2) + 4*(3 + 4*sw^2)) + 
     2*s*(24 - 15*d + 3*d^2 - 16*sw^2)*t + 4*(3 - 8*sw^2)*t^2)*
    (mw^4 + 2*(-3 + 2*d)*mw^2*s + s^2 - 2*mw^2*(mw^2 + s)*GaugeXi[W] + 
     mw^4*GaugeXi[W]^2))/((-1 + d)*mw^4*Pi^d*(mz^2 - s)*s^2*sw^4), 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {((-I/81)*2^(4 - d)*(16 - 7*d + d^2)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
   ((-4 + d)*Pi^d*s^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0}, {((I/81)*2^(-1 - 2*d)*EL^6*(9 - 24*sw^2 + 32*sw^4)*
    (-(d*(1 + d)*(2*Pi)^d*s^3) + 2^(1 + d)*mz^2*Pi^d*
      ((-2 + d)*s^2 + 4*s*t + 4*t^2) + 2^(1 + d)*Pi^d*s*
      ((-7 + 5*d)*s^2 - 2*(-7 + d)*s*t - 2*(-7 + d)*t^2)))/
   (cw^2*Pi^(2*d)*s^3*sw^2), 0, 0, ((-I/81)*2^(-1 - d)*EL^6*(2*mz^2 + 3*s)*
    (9 - 24*sw^2 + 32*sw^4)*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
   (cw^2*mz^2*Pi^d*s^3*sw^2), 0, 0, 0, 0, 
  ((-I/81)*2^(-1 - d)*EL^6*(9 - 24*sw^2 + 32*sw^4)*
    ((-2 + d)*s^2 + 4*s*t + 4*t^2))/(cw^2*mz^2*Pi^d*s^2*sw^2), 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  ((I/81)*2^(-1 - 2*d)*EL^6*(9 - 24*sw^2 + 32*sw^4)*
    (2^(1 + d)*mz^4*Pi^d*((-2 + d)*s^2 + 4*s*t + 4*t^2) + 
     2^(1 + d)*Pi^d*s^2*((-2 + d)*s^2 + 4*s*t + 4*t^2) + 
     mz^2*s*(-(d^2*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*((-8 + 5*d)*s^2 - 
         2*(-8 + d)*s*t - 2*(-8 + d)*t^2))))/(cw^2*Pi^(2*d)*s^3*sw^2), 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {((I/9)*2^(-1 - d)*EL^6*(-2*mw^2 + (-7 + d)*s)*((-2 + d)*s^2 + 4*s*t + 
     4*t^2))/(Pi^d*s^3*sw^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, ((I/9)*2^(-1 - d)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
   (mw^2*Pi^d*s^2*sw^2), 0, ((I/9)*2^(-1 - d)*EL^6*(2*mw^2 + 3*s)*
    ((-2 + d)*s^2 + 4*s*t + 4*t^2))/(mw^2*Pi^d*s^3*sw^2), 0, 0, 0, 0, 0, 0, 
  0, 0, 0, ((-I/9)*2^(-1 - d)*EL^6*(2*mw^4 - (-8 + d)*mw^2*s + 2*s^2)*
    ((-2 + d)*s^2 + 4*s*t + 4*t^2))/(Pi^d*s^3*sw^2), 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0}, 
 {((-I/81)*2^(-1 - 4*d)*EL^6*(3*(-11 + d)*d^3*(2*Pi)^(3*d)*s^2 + 
     2^(1 + 3*d)*Pi^(3*d)*(2*s^2*(48 + 160*sw^2 - 256*sw^4 + 
         d^3*sw^2*(-5 + 8*sw^2) - 9*d^2*(-4 - 5*sw^2 + 8*sw^4) + 
         3*d*(-23 - 50*sw^2 + 80*sw^4)) + 
       s*(-36*d^3 + 3*d^4 + 128*(3 - 5*sw^2 + 8*sw^4) - 
         8*d*(51 - 35*sw^2 + 56*sw^4) + d^2*(177 - 40*sw^2 + 64*sw^4))*t + 
       2*(16 - 7*d + d^2)*(3 - 20*sw^2 + 32*sw^4)*t^2)))/
   (cw^2*(-4 + d)*Pi^(4*d)*s*(-mz^2 + s)*sw^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {((-I/81)*2^(-5 - 2*d)*EL^6*(2*mz^2*(27*d^2*(2*Pi)^d*s^2 + 
       2^(1 + d)*Pi^d*(2*s^2*(27 - 54*sw^2 - 72*sw^4 + 352*sw^6 - 256*sw^8 + 
           9*d^2*sw^2*(-3 + 4*sw^2) + d*(-27 + 81*sw^2 - 36*sw^4 - 176*sw^6 + 
             128*sw^8)) + s*(-45*d*(3 - 12*sw^2 + 16*sw^4) + 
           9*d^2*(3 - 12*sw^2 + 16*sw^4) + 8*(27 - 135*sw^2 + 252*sw^4 - 
             176*sw^6 + 128*sw^8))*t + 2*(27 - 216*sw^2 + 576*sw^4 - 
           704*sw^6 + 512*sw^8)*t^2)) - s*(27*d^2*(1 + d)*(2*Pi)^d*s^2 + 
       2^(1 + d)*Pi^d*(2*s^2*(9*d^3*sw^2*(-3 + 4*sw^2) + 
           d^2*(-81 + 270*sw^2 - 288*sw^4 - 176*sw^6 + 128*sw^8) - 
           9*d*(-24 + 69*sw^2 - 20*sw^4 - 176*sw^6 + 128*sw^8) + 
           7*(-27 + 54*sw^2 + 72*sw^4 - 352*sw^6 + 256*sw^8)) + 
         s*(-108*d^2*(3 - 12*sw^2 + 16*sw^4) + 9*d^3*(3 - 12*sw^2 + 
             16*sw^4) - 56*(27 - 135*sw^2 + 252*sw^4 - 176*sw^6 + 128*sw^8) + 
           d*(1161 - 4860*sw^2 + 7056*sw^4 - 1408*sw^6 + 1024*sw^8))*t + 
         2*(-7 + d)*(27 - 216*sw^2 + 576*sw^4 - 704*sw^6 + 512*sw^8)*t^2))))/
   (cw^4*Pi^(2*d)*(mz^2 - s)*s^2*sw^4), 0, 0, 
  ((I/81)*2^(-5 - 2*d)*EL^6*(2*mz^2*(27*d^2*(2*Pi)^d*s^2 + 
       2^(1 + d)*Pi^d*(2*s^2*(27 - 54*sw^2 - 72*sw^4 + 352*sw^6 - 256*sw^8 + 
           9*d^2*sw^2*(-3 + 4*sw^2) + d*(-27 + 81*sw^2 - 36*sw^4 - 176*sw^6 + 
             128*sw^8)) + s*(-45*d*(3 - 12*sw^2 + 16*sw^4) + 
           9*d^2*(3 - 12*sw^2 + 16*sw^4) + 8*(27 - 135*sw^2 + 252*sw^4 - 
             176*sw^6 + 128*sw^8))*t + 2*(27 - 216*sw^2 + 576*sw^4 - 
           704*sw^6 + 512*sw^8)*t^2)) + 
     3*(-9*d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
        (2*s^2*(27 - 54*sw^2 - 72*sw^4 + 352*sw^6 - 256*sw^8 + 
           9*d^2*(1 - 3*sw^2 + 4*sw^4) + d*(-27 + 81*sw^2 - 36*sw^4 - 
             176*sw^6 + 128*sw^8)) + s*(-45*d*(3 - 12*sw^2 + 16*sw^4) + 
           9*d^2*(3 - 12*sw^2 + 16*sw^4) + 8*(27 - 135*sw^2 + 252*sw^4 - 
             176*sw^6 + 128*sw^8))*t + 2*(27 - 216*sw^2 + 576*sw^4 - 
           704*sw^6 + 512*sw^8)*t^2))))/(cw^4*mz^2*Pi^(2*d)*(mz^2 - s)*s^2*
    sw^4), 0, 0, 0, 0, ((I/81)*2^(-5 - d)*EL^6*
    (s^2*(9*d^2*(3 - 12*sw^2 + 16*sw^4) + 4*d*(-27 + 81*sw^2 - 36*sw^4 - 
         176*sw^6 + 128*sw^8) - 4*(-27 + 54*sw^2 + 72*sw^4 - 352*sw^6 + 
         256*sw^8)) + 2*s*(-45*d*(3 - 12*sw^2 + 16*sw^4) + 
       9*d^2*(3 - 12*sw^2 + 16*sw^4) + 8*(27 - 135*sw^2 + 252*sw^4 - 
         176*sw^6 + 128*sw^8))*t + 4*(27 - 216*sw^2 + 576*sw^4 - 704*sw^6 + 
       512*sw^8)*t^2))/(cw^4*mz^2*Pi^d*(mz^2 - s)*s*sw^4), 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  ((-I/81)*2^(-5 - 2*d)*EL^6*(2*mz^4*(27*d^2*(2*Pi)^d*s^2 + 
       2^(1 + d)*Pi^d*(2*s^2*(27 - 54*sw^2 - 72*sw^4 + 352*sw^6 - 256*sw^8 + 
           9*d^2*sw^2*(-3 + 4*sw^2) + d*(-27 + 81*sw^2 - 36*sw^4 - 176*sw^6 + 
             128*sw^8)) + s*(-45*d*(3 - 12*sw^2 + 16*sw^4) + 
           9*d^2*(3 - 12*sw^2 + 16*sw^4) + 8*(27 - 135*sw^2 + 252*sw^4 - 
             176*sw^6 + 128*sw^8))*t + 2*(27 - 216*sw^2 + 576*sw^4 - 
           704*sw^6 + 512*sw^8)*t^2)) + 
     2*(27*d^2*(2*Pi)^d*s^4 + 2^(1 + d)*Pi^d*s^2*
        (2*s^2*(27 - 54*sw^2 - 72*sw^4 + 352*sw^6 - 256*sw^8 + 
           9*d^2*sw^2*(-3 + 4*sw^2) + d*(-27 + 81*sw^2 - 36*sw^4 - 176*sw^6 + 
             128*sw^8)) + s*(-45*d*(3 - 12*sw^2 + 16*sw^4) + 
           9*d^2*(3 - 12*sw^2 + 16*sw^4) + 8*(27 - 135*sw^2 + 252*sw^4 - 
             176*sw^6 + 128*sw^8))*t + 2*(27 - 216*sw^2 + 576*sw^4 - 
           704*sw^6 + 512*sw^8)*t^2)) - mz^2*(27*d^3*(2*Pi)^d*s^3 + 
       2^(1 + d)*Pi^d*s*(2*s^2*(9*d^3*sw^2*(-3 + 4*sw^2) + 
           d*(243 - 702*sw^2 + 216*sw^4 + 1760*sw^6 - 1280*sw^8) + 
           d^2*(-81 + 297*sw^2 - 324*sw^4 - 176*sw^6 + 128*sw^8) + 
           8*(-27 + 54*sw^2 + 72*sw^4 - 352*sw^6 + 256*sw^8)) + 
         s*(-117*d^2*(3 - 12*sw^2 + 16*sw^4) + 9*d^3*(3 - 12*sw^2 + 
             16*sw^4) - 64*(27 - 135*sw^2 + 252*sw^4 - 176*sw^6 + 128*sw^8) + 
           8*d*(162 - 675*sw^2 + 972*sw^4 - 176*sw^6 + 128*sw^8))*t + 
         2*(-8 + d)*(27 - 216*sw^2 + 576*sw^4 - 704*sw^6 + 512*sw^8)*t^2))))/
   (cw^4*Pi^(2*d)*(mz^2 - s)*s^2*sw^4), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0}, {((I/9)*EL^6*(-3*d^2*(2*Pi)^d*s - 3*d^3*(2*Pi)^d*s + 
     2^(2 + d)*(-2 + d)*mw^2*Pi^d*(3 - 14*sw^2 + 8*sw^4) + 
     2*(-mw^2 - s/2)*(3*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(-3 - 7*(-2 + d)*sw^2 + 
         4*(-2 + d)*sw^4)) + 2^(1 + d)*Pi^d*
      (s*(d^2*sw^2 + d*(3 - 2*sw^2)^2 - 4*(3 - 5*sw^2 + 2*sw^4)) + 
       (-2 + d)*(3 - 14*sw^2 + 8*sw^4)*t) + 2^(1 + d)*Pi^d*
      (s*(60 + 80*sw^2 + d^3*sw^2 - 80*sw^4 + 20*d*(-3 - sw^2 + 2*sw^4) - 
         2*d^2*(-9 + 3*sw^2 + 2*sw^4)) + (-3 + 2*sw^2)*
        (-12*d^2 + d^3 + d*(46 - 4*sw^2) + 8*(-7 + sw^2))*t) + 
     ((-(2^(1 + d)*Pi^d) + d*(2*Pi)^d)*(-3 + 2*sw^2)*(-1 + 4*sw^2)*
       (s*(-((-2 + d)*s^2) + 4*s*t + 4*(-1 + d)*t^2) + 
        2*mw^2*((-2 + d)*s^2 + 4*(-1 + d)*s*t + 4*(-1 + d)*t^2)))/
      ((-2 + d)*s^2) - (2*(1 + (2*t)/s)*(2^(1 + d)*Pi^d*s*(-3 + 2*sw^2)*
         (s*(-2 + d - 4*sw^2) + (-4 + d)*(-1 + 4*sw^2)*t) + 
        mw^2*(-3*d^2*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
           (s*(d^2*sw^2 + d*(3 - 2*sw^2)^2 - 4*(3 - 5*sw^2 + 2*sw^4)) + 
            (-2 + d)*(3 - 14*sw^2 + 8*sw^4)*t))))/s))/
   (2^(2*(2 + d))*cw^2*Pi^(2*d)*(mz^2 - s)*sw^4), 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  ((I/9)*EL^6*(3*d^2*(2*Pi)^d*s^2 - 2^(1 + d)*Pi^d*
      (s^2*(-6 - 8*sw^2 + d^2*sw^2 + 8*sw^4 + d*(6 + 2*sw^2 - 4*sw^4)) + 
       s*(8 - 5*d + d^2 - 8*sw^2)*(-3 + 2*sw^2)*t - 2*(3 - 14*sw^2 + 8*sw^4)*
        t^2)))/(2^(2*(2 + d))*cw^2*mw^2*Pi^(2*d)*s*(-mz^2 + s)*sw^4), 0, 
  ((-I/9)*4^(-2 - d)*EL^6*(2*mw^2*(-3*d^3*(2*Pi)^d*s^2 + 
       2^(1 + d)*Pi^d*(s^2*(d^3*sw^2 + d^2*(9 - 4*sw^4) + 
           4*(3 + 4*sw^2 - 4*sw^4) + 2*d*(-9 - 6*sw^2 + 8*sw^4)) + 
         (-2 + d)*s*(8 - 5*d + d^2 - 8*sw^2)*(-3 + 2*sw^2)*t - 
         2*(-2 + d)*(3 - 14*sw^2 + 8*sw^4)*t^2)) + 
     3*(d^3*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
        (s^2*(d^3*(-2 + sw^2) + d^2*(9 - 4*sw^4) + 4*(3 + 4*sw^2 - 4*sw^4) + 
           2*d*(-9 - 6*sw^2 + 8*sw^4)) + (-2 + d)*s*(8 - 5*d + d^2 - 8*sw^2)*
          (-3 + 2*sw^2)*t - 2*(-2 + d)*(3 - 14*sw^2 + 8*sw^4)*t^2))))/
   (cw^2*(-2 + d)*mw^2*Pi^(2*d)*s^2*(-mz^2 + s)*sw^4), 0, 0, 0, 0, 0, 0, 0, 
  0, 0, ((-I/9)*EL^6*(-(2^(1 + d)*(-2 + d)*mw^4*Pi^d*
       (3 - 14*sw^2 + 8*sw^4)) - mw^2*(-3*d^3*(2*Pi)^d*s + 
       2^(1 + d)*Pi^d*(s*(60 + 80*sw^2 + d^3*sw^2 - 80*sw^4 + 
           20*d*(-3 - sw^2 + 2*sw^4) - 2*d^2*(-9 + 3*sw^2 + 2*sw^4)) + 
         (-3 + 2*sw^2)*(-12*d^2 + d^3 + d*(46 - 4*sw^2) + 8*(-7 + sw^2))*
          t)) + 2*(-3*d*(2*Pi)^d*(d*s^2 + t^2) + 2^(1 + d)*Pi^d*
        (s^2*(-6 - 8*sw^2 + d^2*sw^2 + 8*sw^4 + d*(6 + 2*sw^2 - 4*sw^4)) + 
         s*(10 - 6*d + d^2 - 4*sw^2)*(-3 + 2*sw^2)*t + 
         (3 + 7*(-2 + d)*sw^2 - 4*(-2 + d)*sw^4)*t^2)) + 
     (2*(2^(1 + d)*Pi^d - d*(2*Pi)^d)*(-3 + 2*sw^2)*(-1 + 4*sw^2)*
       ((-2 + d)*s^2*t^2 + mw^4*((-2 + d)*s^2 + 4*(-1 + d)*s*t + 
          4*(-1 + d)*t^2) + 2*mw^2*s*t*(-2*t + d*(s + 2*t))))/
      ((-2 + d)*s^2) + (2*(t + (mw^2*(s + 2*t))/s)*
       (2^(1 + d)*Pi^d*s*(-3 + 2*sw^2)*(s*(-2 + d - 4*sw^2) + 
          (-4 + d)*(-1 + 4*sw^2)*t) + mw^2*(-3*d^2*(2*Pi)^d*s + 
          2^(1 + d)*Pi^d*(s*(d^2*sw^2 + d*(3 - 2*sw^2)^2 - 4*(3 - 5*sw^2 + 
                2*sw^4)) + (-2 + d)*(3 - 14*sw^2 + 8*sw^4)*t))))/s))/
   (2^(2*(2 + d))*cw^2*Pi^(2*d)*(mz^2 - s)*sw^4), 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  ((I/3)*2^(-3 - d)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
    (-mw^4 + (6 - 4*d)*mw^2*s + s^2 + (mw^4 - mw^2*s)*GaugeXi[W]))/
   ((-1 + d)*mw^4*Pi^d*s^3*sw^2), 
  ((I/3)*2^(-3 - 2*d)*EL^6*(-(d*(2*Pi)^d*s^3) + 2^(1 + d)*Pi^d*s*
      (s^2 - 2*s*t - 2*t^2) + 2^(2 + d)*mw^2*Pi^d*((-2 + d)*s^2 + 4*s*t + 
       4*t^2)*GaugeXi[W]))/((-1 + d)*mw^4*Pi^(2*d)*s*sw^2), 
  ((I/3)*2^(-3 - d)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
    ((9 - 8*d)*mw^4 + (4 - 8*d)*mw^2*s + s^2 + (-mw^4 + mw^2*s)*GaugeXi[W]))/
   ((-1 + d)*mw^4*Pi^d*s^3*sw^2), 
  ((I/3)*2^(-3 - 2*d)*EL^6*(-(d*(2*Pi)^d*s^5) + 2^(1 + d)*Pi^d*s^3*
      (s^2 - 2*s*t - 2*t^2) + 2^(3 + d)*(-1 + d)*mw^6*Pi^d*
      ((-2 + d)*s^2 + 4*s*t + 4*t^2) + 2^(2 + d)*(-5 + 3*d)*mw^4*Pi^d*s*
      ((-2 + d)*s^2 + 4*s*t + 4*t^2) - 2^(1 + d)*(-7 + 4*d)*mw^2*Pi^d*s^2*
      ((-2 + d)*s^2 + 4*s*t + 4*t^2)))/((-1 + d)*mw^4*Pi^(2*d)*s^3*sw^2), 
  ((-I/3)*EL^6*mw^2*(mw^2 + 2*s)*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
   ((2*Pi)^d*s^3*sw^2), 0, 0, 
  ((-I/3)*2^(-3 - d)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
    (mw^4 + 2*(-3 + 2*d)*mw^2*s + s^2 + (-mw^4 + mw^2*s)*GaugeXi[W]))/
   ((-1 + d)*mw^4*Pi^d*s^3*sw^2), ((-I/3)*2^(-3 - 2*d)*EL^6*(mw^2 - s)*
    (d*(2*Pi)^d*s^4 + 2^(1 + d)*Pi^d*s^2*(-s^2 + 2*s*t + 2*t^2) + 
     2^(1 + d)*(-3 + 2*d)*mw^2*Pi^d*s*((-2 + d)*s^2 + 4*s*t + 4*t^2) + 
     mw^4*(-3*d*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*((-1 + 2*d)*s^2 + 2*s*t + 
         2*t^2)) - 2^(1 + d)*mw^2*Pi^d*(mw^2 + s)*((-2 + d)*s^2 + 4*s*t + 
       4*t^2)*GaugeXi[W] - mw^4*(-(d*(2*Pi)^d*s^2) + 
       2^(1 + d)*Pi^d*(s^2 - 2*s*t - 2*t^2))*GaugeXi[W]^2))/
   ((-1 + d)*mw^4*Pi^(2*d)*s^3*sw^2), 
  ((I/3)*2^(-3 - d)*EL^6*(mw^2 - s)*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
    (mw^2 + s - mw^2*GaugeXi[W]))/((-1 + d)*mw^4*Pi^d*s^3*sw^2), 
  ((-I/3)*2^(-3 - 2*d)*EL^6*(mw^2 - s)*(d*(2*Pi)^d*s^4 + 
     2^(1 + d)*Pi^d*s^2*(-s^2 + 2*s*t + 2*t^2) + 2^(1 + d)*(-3 + 2*d)*mw^2*
      Pi^d*s*((-2 + d)*s^2 + 4*s*t + 4*t^2) + 
     mw^4*(d*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*(-s^2 + 2*s*t + 2*t^2)) - 
     2^(1 + d)*mw^2*Pi^d*(mw^2 + s)*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
      GaugeXi[W] + mw^4*(-3*d*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        ((-1 + 2*d)*s^2 + 2*s*t + 2*t^2))*GaugeXi[W]^2))/
   ((-1 + d)*mw^4*Pi^(2*d)*s^3*sw^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, ((-I/3)*2^(-5 - 2*d)*EL^6*(-3*d^2*(2*Pi)^d*s^4 + 
     2^(1 + d)*Pi^d*s^2*(2*s^2*(1 + d^2 + 2*sw^2 - d*(1 + sw^2)) + 
       s*(8 - 5*d + d^2 - 8*sw^2)*t + 2*(1 - 4*sw^2)*t^2) + 
     mw^4*(-(d^2*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*
        (2*s^2*(-1 + d - 2*sw^2 + d*sw^2) - s*(8 - 5*d + d^2 - 8*sw^2)*t + 
         2*(-1 + 4*sw^2)*t^2)) - 2*mw^2*s*(-11*d^2*(2*Pi)^d*s^2 + 
       2^(1 + d)*Pi^d*(s^2*(d^3 - 4*d^2*sw^2 - 6*(1 + 2*sw^2) + 
           2*d*(5 + 7*sw^2)) + (-3 + 2*d)*s*(8 - 5*d + d^2 - 8*sw^2)*t - 
         2*(-3 + 2*d)*(-1 + 4*sw^2)*t^2)) + 
     (-(2^(1 + d)*Pi^d*s^2*(s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2)) + 
          2*s*(8 - 5*d + d^2 - 8*sw^2)*t + 4*(1 - 4*sw^2)*t^2)) - 
       3*mw^4*(-(d^2*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*
          (2*s^2*(-1 + d - 2*sw^2 + d*sw^2) - s*(8 - 5*d + d^2 - 8*sw^2)*t + 
           2*(-1 + 4*sw^2)*t^2)) + mw^2*s*(d^2*(2*Pi)^d*s^2 + 
         2^(1 + d)*Pi^d*(s^2*(4*d^3 - 26*(1 + 2*sw^2) - d^2*(23 + 16*sw^2) + 
             d*(42 + 58*sw^2)) + (-13 + 8*d)*s*(8 - 5*d + d^2 - 8*sw^2)*t - 
           2*(-13 + 8*d)*(-1 + 4*sw^2)*t^2)))*GaugeXi[W] + 
     (-3*d^2*(2*Pi)^d*s^4 + 2^(1 + d)*Pi^d*s^2*
        (2*s^2*(1 + d^2 + 2*sw^2 - d*(1 + sw^2)) + s*(8 - 5*d + d^2 - 8*sw^2)*
          t + 2*(1 - 4*sw^2)*t^2) - 2^(2 + d)*(-2 + d)*mw^2*Pi^d*s*
        (s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2)) + 
         2*s*(8 - 5*d + d^2 - 8*sw^2)*t + 4*(1 - 4*sw^2)*t^2) - 
       3*mw^4*(-5*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
          (s^2*(2 + 3*d^2 + 4*sw^2 - 2*d*(1 + sw^2)) + 
           s*(8 - 5*d + d^2 - 8*sw^2)*t + 2*(1 - 4*sw^2)*t^2)))*
      GaugeXi[W]^2 + mw^2*(-7*d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
        (s^2*(-2 + 3*d^2 - 4*sw^2 + 2*d*(1 + sw^2)) - 
         s*(8 - 5*d + d^2 - 8*sw^2)*t + 2*(-1 + 4*sw^2)*t^2) + 
       mw^2*(-(d^2*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*
          (s^2*(2 + d^2 + 4*sw^2 - 2*d*(1 + sw^2)) + 
           s*(8 - 5*d + d^2 - 8*sw^2)*t + 2*(1 - 4*sw^2)*t^2)))*
      GaugeXi[W]^3))/((-1 + d)*mw^4*Pi^(2*d)*(mz^2 - s)*s^2*sw^4*
    (-1 + GaugeXi[W])^2), ((I/3)*2^(-5 - 2*d)*EL^6*
    (-(d^2*(2*Pi)^d*s^3) + 2^(1 + d)*Pi^d*s*
      (s^2*(2 + d^2 + 4*sw^2 - 2*d*(1 + sw^2)) + s*(8 - 5*d + d^2 - 8*sw^2)*
        t + 2*(1 - 4*sw^2)*t^2) - 2*(d^2*(2*Pi)^d*s^3 + 
       2^(1 + d)*mw^2*Pi^d*(s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2)) + 
         2*s*(8 - 5*d + d^2 - 8*sw^2)*t + 4*(1 - 4*sw^2)*t^2) - 
       2^(1 + d)*Pi^d*s*(2*s^2*(-1 + d - 2*sw^2 + d*sw^2) - 
         s*(8 - 5*d + d^2 - 8*sw^2)*t + 2*(-1 + 4*sw^2)*t^2))*GaugeXi[W] + 
     (-(d^2*(2*Pi)^d*s^3) + 2^(1 + d)*Pi^d*s*
        (s^2*(2 + d^2 + 4*sw^2 - 2*d*(1 + sw^2)) + s*(8 - 5*d + d^2 - 8*sw^2)*
          t + 2*(1 - 4*sw^2)*t^2) + 2^(3 + d)*mw^2*Pi^d*
        (s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2)) + 
         2*s*(8 - 5*d + d^2 - 8*sw^2)*t + 4*(1 - 4*sw^2)*t^2))*GaugeXi[W]^2 - 
     2^(2 + d)*mw^2*Pi^d*(s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2)) + 
       2*s*(8 - 5*d + d^2 - 8*sw^2)*t + 4*(1 - 4*sw^2)*t^2)*GaugeXi[W]^3))/
   ((-1 + d)*mw^4*Pi^(2*d)*(mz^2 - s)*sw^4*(-1 + GaugeXi[W])^2), 
  ((I/3)*2^(-5 - d)*EL^6*(s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2)) + 
     2*s*(8 - 5*d + d^2 - 8*sw^2)*t + 4*(1 - 4*sw^2)*t^2)*
    ((9 - 8*d)*mw^4 + (4 - 8*d)*mw^2*s + s^2 + (-mw^4 + mw^2*s)*GaugeXi[W]))/
   ((-1 + d)*mw^4*Pi^d*s^2*(-mz^2 + s)*sw^4), 
  ((-I/3)*2^(-5 - 4*d)*EL^6*(2^(1 + 3*d)*Pi^(3*d)*(2*mw^2 - s)*s^2*
      (4*(-1 + d)*mw^4 - 4*d*mw^2*s + d*s^2)*(-1 + 4*sw^2)*
      (-1 + GaugeXi[W])^2 + 2^(2 + 3*d)*(1 - d)*mw^4*Pi^(3*d)*(2*mw^2 - s)*
      (1 - 4*sw^2)*((-2 + d)*s^2 - 4*s*t - 4*(-1 + d)*t^2)*
      (-1 + GaugeXi[W])^2 + 2*(1 - d)*(mw^2 - s/2)*s*
      (2^(2 + 3*d)*mw^2*Pi^(3*d)*s*(s*(-2 + d - 4*sw^2) + 
         2*(-1 + 4*sw^2)*t) - (2*Pi)^(3*d)*s^2*(s*(-2 + d - 4*sw^2) + 
         2*(-1 + 4*sw^2)*t) + 2^(2 + 3*d)*mw^4*Pi^(3*d)*
        (s*(10 + d^2 - 4*sw^2 + d*(-7 + 4*sw^2)) + 2*(-3 + d)*(-1 + 4*sw^2)*
          t))*(-1 + GaugeXi[W])^2 - 2*(1 - d)*s*
      ((2*Pi)^(3*d)*s^3*(2 - d + 4*sw^2)*t + 2^(2 + 3*d)*(-3 + d)*mw^6*
        Pi^(3*d)*(s*(-2 + d - 4*sw^2) + 2*(-1 + 4*sw^2)*t) + 
       2^(1 + 3*d)*mw^4*Pi^(3*d)*s*(3*s*(6 + d^2 + 12*sw^2 - 
           d*(5 + 4*sw^2)) + 2*(37 + 4*d^2 + 20*sw^2 - d*(25 + 4*sw^2))*t) - 
       2^(1 + 3*d)*mw^2*Pi^(3*d)*s*(2*s^2*(4 + d^2 + 8*sw^2 - 
           4*d*(1 + sw^2)) + s*(38 - 23*d + 4*d^2 - 20*sw^2)*t + 
         8*(1 - 4*sw^2)*t^2))*(-1 + GaugeXi[W])^2 - 
     4^(1 + d)*(1 - d)*mw^4*Pi^(2*d)*(s + 2*t)*
      (2^(1 + d)*(-2 + d)*mw^2*Pi^d*(s*(-2 + d - 4*sw^2) + 
         2*(-1 + 4*sw^2)*t) + s*(-(d^2*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*
          (2*s*(-3 - 6*sw^2 + d*(2 + sw^2)) - (2 + d)*(-1 + 4*sw^2)*t)))*
      (-1 + GaugeXi[W])^2 - (2*mw^2 - s)*s*(s*(-4 + d + 4*sw^2) + 
       2*(-1 + 4*sw^2)*t)*(4*(-1 + d)*mw^4 - 4*mw^2*(d*s + 2*t) + 
       s*(d*s + 2*t))*((2*Pi)^(3*d) - 2^(1 + 3*d)*Pi^(3*d)*GaugeXi[W] + 
       (2*Pi)^(3*d)*GaugeXi[W]^2) - 2*(1 - d)*(mw^2 - s/2)*s*
      (8*mw^4*(2*(-3 + d)*s*sw^2 + (-1 + 4*sw^2)*t) - 
       4*mw^2*s*(s*(-2 + d - 4*sw^2) + 2*(-1 + 4*sw^2)*t) + 
       s^2*(s*(-2 + d - 4*sw^2) + 2*(-1 + 4*sw^2)*t))*
      ((2*Pi)^(3*d) - 2^(1 + 3*d)*Pi^(3*d)*GaugeXi[W] + 
       (2*Pi)^(3*d)*GaugeXi[W]^2)))/((-1 + d)*mw^4*Pi^(4*d)*(mz^2 - s)*sw^4*
    (s - s*GaugeXi[W])^2), ((-I/3)*4^(-1 - d)*EL^6*mw^2*
    (-(2^(1 + d)*Pi^d*s*(s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2)) + 
        2*s*(8 - 5*d + d^2 - 8*sw^2)*t + 4*(1 - 4*sw^2)*t^2)) + 
     mw^2*(-(d^2*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*
        (2*s^2*(-1 + d - 2*sw^2 + d*sw^2) - s*(8 - 5*d + d^2 - 8*sw^2)*t + 
         2*(-1 + 4*sw^2)*t^2))))/(Pi^(2*d)*(mz^2 - s)*s^2*sw^4), 0, 0, 
  ((I/3)*2^(-5 - 2*d)*EL^6*(-(d^2*(2*Pi)^d*s^4) + 2^(1 + d)*Pi^d*s^2*
      (2*s^2*(-1 + d - 2*sw^2 + d*sw^2) - s*(8 - 5*d + d^2 - 8*sw^2)*t + 
       2*(-1 + 4*sw^2)*t^2) + mw^4*(-3*d^2*(2*Pi)^d*s^2 + 
       2^(1 + d)*Pi^d*(s^2*(-2 + d^2 - 4*sw^2 + 2*d*(1 + sw^2)) - 
         s*(8 - 5*d + d^2 - 8*sw^2)*t + 2*(-1 + 4*sw^2)*t^2)) - 
     2*mw^2*s*(-11*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (s^2*(d^3 - 4*d^2*sw^2 - 6*(1 + 2*sw^2) + 2*d*(5 + 7*sw^2)) + 
         (-3 + 2*d)*s*(8 - 5*d + d^2 - 8*sw^2)*t - 2*(-3 + 2*d)*(-1 + 4*sw^2)*
          t^2)) + (2^(1 + d)*Pi^d*s^2*
        (s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2)) + 
         2*s*(8 - 5*d + d^2 - 8*sw^2)*t + 4*(1 - 4*sw^2)*t^2) + 
       3*mw^4*(-(d^2*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*
          (s^2*(2 + d^2 + 4*sw^2 - 2*d*(1 + sw^2)) + 
           s*(8 - 5*d + d^2 - 8*sw^2)*t + 2*(1 - 4*sw^2)*t^2)) + 
       mw^2*s*(-45*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
          (2*s^2*(-13 + 21*d + 2*d^3 - 26*sw^2 + 29*d*sw^2 - 8*d^2*sw^2) + 
           (-13 + 8*d)*s*(8 - 5*d + d^2 - 8*sw^2)*t - 2*(-13 + 8*d)*
            (-1 + 4*sw^2)*t^2)))*GaugeXi[W] + 
     (-(d^2*(2*Pi)^d*s^4) - 2^(2 + d)*(-2 + d)*mw^2*Pi^d*s*
        (s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2)) + 
         2*s*(8 - 5*d + d^2 - 8*sw^2)*t + 4*(1 - 4*sw^2)*t^2) + 
       2^(1 + d)*Pi^d*s^2*(2*s^2*(-1 + d - 2*sw^2 + d*sw^2) - 
         s*(8 - 5*d + d^2 - 8*sw^2)*t + 2*(-1 + 4*sw^2)*t^2) + 
       mw^4*(d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
          (-2*s^2*(3 + d^2 + 6*sw^2 - 3*d*(1 + sw^2)) - 
           3*s*(8 - 5*d + d^2 - 8*sw^2)*t + 6*(-1 + 4*sw^2)*t^2)))*
      GaugeXi[W]^2 + mw^2*(mw^2 - s)*(-3*d^2*(2*Pi)^d*s^2 + 
       2^(1 + d)*Pi^d*(2*s^2*(1 + d^2 + 2*sw^2 - d*(1 + sw^2)) + 
         s*(8 - 5*d + d^2 - 8*sw^2)*t + 2*(1 - 4*sw^2)*t^2))*GaugeXi[W]^3))/
   ((-1 + d)*mw^4*Pi^(2*d)*s^2*(-mz^2 + s)*sw^4*(-1 + GaugeXi[W])^2), 
  ((-I/3)*2^(-5 - 2*d)*EL^6*(2^(1 + d)*Pi^d*(mw^2 - s)*(1 - 4*sw^2)*
      (s - s*GaugeXi[W])^2*(d*(mw^2 - s)^2 + 2*((-2 + d)*mw^4 - d*mw^2*s)*
        GaugeXi[W] + d*mw^4*GaugeXi[W]^2) + 
     (mw^2 - s)*((mw^2 - s)^2*(d*s + 2*t) + 2*(mw^4*((-2 + d)*s - 2*t) - 
         mw^2*s*(d*s + 2*t))*GaugeXi[W] + mw^4*(d*s + 2*t)*GaugeXi[W]^2)*
      (d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(2*s*(-1 + sw^2) + (-1 + 4*sw^2)*t) - 
       2^(1 + d)*Pi^d*(s*(-4 + d + 4*sw^2) + 2*(-1 + 4*sw^2)*t)*GaugeXi[W] + 
       (d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(2*s*(-1 + sw^2) + (-1 + 4*sw^2)*t))*
        GaugeXi[W]^2) - (1 - d)*s*(mw^2 - s + mw^2*GaugeXi[W])*
      (2^(1 + d)*mw^2*Pi^d*s*(s*(-2 + d - 4*sw^2) + 2*(-1 + 4*sw^2)*t) + 
       mw^4*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(s + 2*s*sw^2 + t - 
           4*sw^2*t)) + s^2*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*
          (s + 2*s*sw^2 + t - 4*sw^2*t)) - 
       (-(2^(1 + d)*Pi^d*s^2*(s*(-2 + d - 4*sw^2) + 2*(-1 + 4*sw^2)*t)) + 
         mw^4*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(s + 2*s*sw^2 + t - 
             4*sw^2*t)) + 3*mw^2*s*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*
            (s*(-1 + d - 2*sw^2) + (-1 + 4*sw^2)*t)))*GaugeXi[W] - 
       (mw^4 - s^2)*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(s + 2*s*sw^2 + t - 
           4*sw^2*t))*GaugeXi[W]^2 + mw^2*(mw^2 - s)*(-(d*(2*Pi)^d*s) + 
         2^(1 + d)*Pi^d*(s + 2*s*sw^2 + t - 4*sw^2*t))*GaugeXi[W]^3) - 
     (1 - d)*s*(mw^2 - s + mw^2*GaugeXi[W])*
      (2^(1 + d)*mw^2*Pi^d*s*(s*(-2 + d - 4*sw^2) + 2*(-1 + 4*sw^2)*t) + 
       s^2*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(s + 2*s*sw^2 + t - 4*sw^2*t)) + 
       mw^4*(-3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(1 + d + 2*sw^2) + t - 
           4*sw^2*t)) - (-(2^(1 + d)*Pi^d*s^2*(s*(-2 + d - 4*sw^2) + 
            2*(-1 + 4*sw^2)*t)) + mw^4*(-5*d*(2*Pi)^d*s + 
           2^(1 + d)*Pi^d*(s + 2*d*s + 2*s*sw^2 + t - 4*sw^2*t)) + 
         mw^2*s*(-7*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-3 + 5*d - 6*sw^2) + 
             3*(-1 + 4*sw^2)*t)))*GaugeXi[W] + 
       (s^2*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(s + 2*s*sw^2 + t - 
             4*sw^2*t)) + mw^4*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*
            (s*(-1 + d - 2*sw^2) + (-1 + 4*sw^2)*t)))*GaugeXi[W]^2 + 
       mw^2*(mw^2 - s)*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(s + 2*s*sw^2 + t - 
           4*sw^2*t))*GaugeXi[W]^3) - 2*(1 - d)*s*
      (mw^6*(-(d*(2*Pi)^d) + 2^(1 + d)*Pi^d*(1 + 2*sw^2))*t - 
       s^3*(-(d*(2*Pi)^d) + 2^(1 + d)*Pi^d*(1 + 2*sw^2))*t - 
       mw^4*(d*(2*Pi)^d*s*t + 2^(1 + d)*Pi^d*
          (s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2)) + 
           s*(19 - 12*d + 2*d^2 - 10*sw^2)*t + 4*(1 - 4*sw^2)*t^2)) + 
       mw^2*s*(-(d*(2*Pi)^d*s*t) + 2^(1 + d)*Pi^d*
          (s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2)) + 
           s*(19 - 11*d + 2*d^2 - 10*sw^2)*t + 4*(1 - 4*sw^2)*t^2)) + 
       2*(s^3*(-(d*(2*Pi)^d) + 2^(1 + d)*Pi^d*(1 + 2*sw^2))*t - 
         2^(1 + d)*mw^2*Pi^d*s*(s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2)) + 
           s*(18 - 11*d + 2*d^2 - 12*sw^2)*t + 4*(1 - 4*sw^2)*t^2) + 
         mw^6*(d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(s + 2*s*sw^2 - (-3 + d)*t)) + 
         mw^4*(-(d*(2*Pi)^d*s*(9*s + 23*t)) + 2^(1 + d)*Pi^d*
            (s^2*(5 + d^2 + 10*sw^2 - 4*d*sw^2) + 2*s*(10 + d^2 - 7*sw^2)*t + 
             4*(1 - 4*sw^2)*t^2)))*GaugeXi[W] + 
       (-(s^3*(-(d*(2*Pi)^d) + 2^(1 + d)*Pi^d*(1 + 2*sw^2))*t) - 
         2^(1 + d)*mw^6*Pi^d*(2*s*(-2 + d - 4*sw^2) + (-10 + 3*d + 4*sw^2)*
            t) - 2^(1 + d)*mw^4*Pi^d*(s^2*(8 + d^2 + 16*sw^2 - 
             2*d*(3 + 2*sw^2)) + 2*s*(12 - 6*d + d^2 - 12*sw^2)*t + 
           4*(1 - 4*sw^2)*t^2) + mw^2*s*(d*(2*Pi)^d*s*t + 
           2^(1 + d)*Pi^d*(s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2)) + 
             s*(15 - 10*d + 2*d^2 - 18*sw^2)*t + 4*(1 - 4*sw^2)*t^2)))*
        GaugeXi[W]^2 + 2^(1 + d)*mw^2*Pi^d*(mw^2 - s)*
        (s*(-2 + d - 4*sw^2)*t + mw^2*(s*(-2 + d - 4*sw^2) + 2*(-3 + d)*t))*
        GaugeXi[W]^3 - mw^4*(mw^2*(-(d*(2*Pi)^d) + 2^(1 + d)*Pi^d*
            (-1 + d - 2*sw^2)) + s*(-(d*(2*Pi)^d) + 2^(1 + d)*Pi^d*
            (1 + 2*sw^2)))*t*GaugeXi[W]^4)))/((-1 + d)*mw^4*Pi^(2*d)*
    (mz^2 - s)*sw^4*(s - s*GaugeXi[W])^2), 
  ((I/3)*2^(-5 - 2*d)*EL^6*(-(d^2*(2*Pi)^d*s^4) + 2^(1 + d)*Pi^d*s^2*
      (2*s^2*(-1 + d - 2*sw^2 + d*sw^2) - s*(8 - 5*d + d^2 - 8*sw^2)*t + 
       2*(-1 + 4*sw^2)*t^2) + mw^4*(-3*d^2*(2*Pi)^d*s^2 + 
       2^(1 + d)*Pi^d*(2*s^2*(1 + d^2 + 2*sw^2 - d*(1 + sw^2)) + 
         s*(8 - 5*d + d^2 - 8*sw^2)*t + 2*(1 - 4*sw^2)*t^2)) + 
     (2^(1 + d)*Pi^d*s^2*(s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2)) + 
         2*s*(8 - 5*d + d^2 - 8*sw^2)*t + 4*(1 - 4*sw^2)*t^2) - 
       mw^2*s*(-11*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
          (s^2*(-2 + 5*d^2 - 4*sw^2 + 2*d*(1 + sw^2)) - 
           s*(8 - 5*d + d^2 - 8*sw^2)*t + 2*(-1 + 4*sw^2)*t^2)) + 
       mw^4*(d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
          (-2*s^2*(3 + d^2 + 6*sw^2 - 3*d*(1 + sw^2)) - 
           3*s*(8 - 5*d + d^2 - 8*sw^2)*t + 6*(-1 + 4*sw^2)*t^2)))*
      GaugeXi[W] + (-(d^2*(2*Pi)^d*s^4) - 2^(1 + d)*mw^2*Pi^d*s*
        (s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2)) + 
         2*s*(8 - 5*d + d^2 - 8*sw^2)*t + 4*(1 - 4*sw^2)*t^2) + 
       2^(1 + d)*Pi^d*s^2*(2*s^2*(-1 + d - 2*sw^2 + d*sw^2) - 
         s*(8 - 5*d + d^2 - 8*sw^2)*t + 2*(-1 + 4*sw^2)*t^2) + 
       3*mw^4*(-(d^2*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*
          (s^2*(2 + d^2 + 4*sw^2 - 2*d*(1 + sw^2)) + 
           s*(8 - 5*d + d^2 - 8*sw^2)*t + 2*(1 - 4*sw^2)*t^2)))*
      GaugeXi[W]^2 + mw^2*(mw^2 - s)*(-3*d^2*(2*Pi)^d*s^2 + 
       2^(1 + d)*Pi^d*(s^2*(-2 + d^2 - 4*sw^2 + 2*d*(1 + sw^2)) - 
         s*(8 - 5*d + d^2 - 8*sw^2)*t + 2*(-1 + 4*sw^2)*t^2))*GaugeXi[W]^3))/
   ((-1 + d)*mw^4*Pi^(2*d)*s^2*(-mz^2 + s)*sw^4*(-1 + GaugeXi[W])^2), 
  ((-I/3)*2^(-5 - 2*d)*EL^6*(2^(1 + d)*Pi^d*(mw^2 - s)*(1 - 4*sw^2)*
      (s - s*GaugeXi[W])^2*(d*(mw^2 - s)^2 + 2*((-2 + d)*mw^4 - d*mw^2*s)*
        GaugeXi[W] + d*mw^4*GaugeXi[W]^2) + 
     (mw^2 - s)*((mw^2 - s)^2*(d*s + 2*t) + 2*(mw^4*((-2 + d)*s - 2*t) - 
         mw^2*s*(d*s + 2*t))*GaugeXi[W] + mw^4*(d*s + 2*t)*GaugeXi[W]^2)*
      (d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(2*s*(-1 + sw^2) + (-1 + 4*sw^2)*t) - 
       2^(1 + d)*Pi^d*(s*(-4 + d + 4*sw^2) + 2*(-1 + 4*sw^2)*t)*GaugeXi[W] + 
       (d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(2*s*(-1 + sw^2) + (-1 + 4*sw^2)*t))*
        GaugeXi[W]^2) - (1 - d)*s*(mw^2 - s + mw^2*GaugeXi[W])*
      (2^(1 + d)*mw^2*Pi^d*s*(s*(-2 + d - 4*sw^2) + 2*(-1 + 4*sw^2)*t) + 
       mw^4*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(s + 2*s*sw^2 + t - 
           4*sw^2*t)) + s^2*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*
          (s + 2*s*sw^2 + t - 4*sw^2*t)) - 
       (-(2^(1 + d)*Pi^d*s^2*(s*(-2 + d - 4*sw^2) + 2*(-1 + 4*sw^2)*t)) + 
         mw^4*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(s + 2*s*sw^2 + t - 
             4*sw^2*t)) + mw^2*s*(-19*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (s*(-3 + 11*d - 6*sw^2) + 3*(-1 + 4*sw^2)*t)))*GaugeXi[W] - 
       (mw^4 - s^2)*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(s + 2*s*sw^2 + t - 
           4*sw^2*t))*GaugeXi[W]^2 + mw^2*(mw^2 - s)*(-(d*(2*Pi)^d*s) + 
         2^(1 + d)*Pi^d*(s + 2*s*sw^2 + t - 4*sw^2*t))*GaugeXi[W]^3) - 
     (1 - d)*s*(mw^2 - s + mw^2*GaugeXi[W])*
      (2^(1 + d)*mw^2*Pi^d*s*(s*(-2 + d - 4*sw^2) + 2*(-1 + 4*sw^2)*t) + 
       mw^4*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(s + 2*s*sw^2 + t - 
           4*sw^2*t)) + s^2*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*
          (s + 2*s*sw^2 + t - 4*sw^2*t)) + 
       (2^(1 + d)*Pi^d*s^2*(s*(-2 + d - 4*sw^2) + 2*(-1 + 4*sw^2)*t) + 
         mw^2*s*(-7*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(3 + 2*d + 6*sw^2) + 
             3*(1 - 4*sw^2)*t)) + mw^4*(-(d*(2*Pi)^d*s) + 
           2^(1 + d)*Pi^d*(s*(-1 + d - 2*sw^2) + (-1 + 4*sw^2)*t)))*
        GaugeXi[W] - (s^2*(d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(s + 2*s*sw^2 + t - 
             4*sw^2*t)) + mw^4*(-5*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (s + 2*d*s + 2*s*sw^2 + t - 4*sw^2*t)))*GaugeXi[W]^2 + 
       mw^2*(mw^2 - s)*(-3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
          (s*(1 + d + 2*sw^2) + t - 4*sw^2*t))*GaugeXi[W]^3) + 
     2*(1 - d)*s*(s^3*(-(d*(2*Pi)^d) + 2^(1 + d)*Pi^d*(1 + 2*sw^2))*t - 
       mw^6*(d*(2*Pi)^d + 2^(1 + d)*Pi^d*(1 - d + 2*sw^2))*t - 
       mw^2*s*(7*d*(2*Pi)^d*s*t + 2^(1 + d)*Pi^d*
          (s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2)) + 
           s*(19 - 15*d + 2*d^2 - 10*sw^2)*t + 4*(1 - 4*sw^2)*t^2)) + 
       mw^4*(-11*d*(2*Pi)^d*s*t + 2^(1 + d)*Pi^d*
          (s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2)) + 
           s*(19 - 6*d + 2*d^2 - 10*sw^2)*t + 4*(1 - 4*sw^2)*t^2)) - 
       2*(s^3*(-(d*(2*Pi)^d) + 2^(1 + d)*Pi^d*(1 + 2*sw^2))*t - 
         2^(1 + d)*mw^2*Pi^d*s*(s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2)) + 
           s*(18 - 11*d + 2*d^2 - 12*sw^2)*t + 4*(1 - 4*sw^2)*t^2) + 
         mw^6*(d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(s + 2*s*sw^2 - (-3 + d)*t)) + 
         mw^4*(-(d*(2*Pi)^d*s*(9*s + 23*t)) + 2^(1 + d)*Pi^d*
            (s^2*(5 + d^2 + 10*sw^2 - 4*d*sw^2) + 2*s*(10 + d^2 - 7*sw^2)*t + 
             4*(1 - 4*sw^2)*t^2)))*GaugeXi[W] + 
       (s^3*(-(d*(2*Pi)^d) + 2^(1 + d)*Pi^d*(1 + 2*sw^2))*t + 
         2^(1 + d)*mw^6*Pi^d*(2*s*(-2 + d - 4*sw^2) + (-10 + 3*d + 4*sw^2)*
            t) + 2^(1 + d)*mw^4*Pi^d*(s^2*(8 + d^2 + 16*sw^2 - 
             2*d*(3 + 2*sw^2)) + 2*s*(12 - 6*d + d^2 - 12*sw^2)*t + 
           4*(1 - 4*sw^2)*t^2) - mw^2*s*(7*d*(2*Pi)^d*s*t + 
           2^(1 + d)*Pi^d*(s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2)) + 
             s*(15 - 13*d + 2*d^2 - 18*sw^2)*t + 4*(1 - 4*sw^2)*t^2)))*
        GaugeXi[W]^2 - 2^(1 + d)*mw^2*Pi^d*(mw^2 - s)*
        (s*(-2 + d - 4*sw^2)*t + mw^2*(s*(-2 + d - 4*sw^2) + 2*(-3 + d)*t))*
        GaugeXi[W]^3 - mw^4*(mw^2 - s)*(-(d*(2*Pi)^d) + 
         2^(1 + d)*Pi^d*(1 + 2*sw^2))*t*GaugeXi[W]^4)))/
   ((-1 + d)*mw^4*Pi^(2*d)*(mz^2 - s)*sw^4*(s - s*GaugeXi[W])^2), 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  ((I/9)*2^(3 - d)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2))/(Pi^d*s^3), 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  ((I/9)*EL^6*(cw^2 - sw^2)*(-1 + 4*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
   (cw^2*(2*Pi)^d*(mz^2 - s)*s^2*sw^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  ((I/9)*2^(-1 - d)*EL^6*(cw^2 - sw^2)*(-3 + 8*sw^2)*
    ((-2 + d)*s^2 + 4*s*t + 4*t^2))/(cw^2*Pi^d*(mz^2 - s)*s^2*sw^2), 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  ((I/9)*2^(-5 - 2*d)*EL^6*(3*d^2*(2*Pi)^d*s^2 + 
     2^(1 + d)*Pi^d*(2*s^2*(3 + 10*sw^2 - 16*sw^4 + 
         d*(-3 - 5*sw^2 + 8*sw^4)) + s*(-15*d + 3*d^2 + 
         8*(3 - 5*sw^2 + 8*sw^4))*t + 2*(3 - 20*sw^2 + 32*sw^4)*t^2)))/
   (cw^4*Pi^(2*d)*(mz^2 - s)^2*s*sw^4), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 
  ((I/9)*2^(-5 - 2*d)*EL^6*(3*d^2*(2*Pi)^d*s^2 + 
     2^(1 + d)*Pi^d*(2*s^2*(3 + 10*sw^2 - 16*sw^4 + 
         d*(-3 - 5*sw^2 + 8*sw^4)) + s*(-15*d + 3*d^2 + 
         8*(3 - 5*sw^2 + 8*sw^4))*t + 2*(3 - 20*sw^2 + 32*sw^4)*t^2)))/
   (cw^4*Pi^(2*d)*(mz^2 - s)^2*s*sw^4), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, ((I/9)*4^(-2 - d)*EL^6*(cw^2 - sw^2)^2*(3*d^2*(2*Pi)^d*s^2 + 
     2^(1 + d)*Pi^d*(2*s^2*(3 + 10*sw^2 - 16*sw^4 + 
         d*(-3 - 5*sw^2 + 8*sw^4)) + s*(-15*d + 3*d^2 + 
         8*(3 - 5*sw^2 + 8*sw^4))*t + 2*(3 - 20*sw^2 + 32*sw^4)*t^2)))/
   (cw^4*Pi^(2*d)*(mz^2 - s)^2*s*sw^4), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  ((I/9)*2^(3 - d)*(-1 + d)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2)*GaugeXi[W])/
   (d*Pi^d*s^3), 0, ((I/9)*2^(3 - d)*(-1 + d)^2*EL^6*
    ((-2 + d)*s^2 + 4*s*t + 4*t^2))/(d*Pi^d*s^3), 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  ((-I/9)*2^(1 - d)*(-1 + d)*EL^6*(-1 + 4*sw^2)*((-2 + d)*s^2 + 4*s*t + 
     4*t^2)*GaugeXi[W])/(d*Pi^d*s^2*(-mz^2 + s)*sw^2), 0, 
  ((-I/9)*2^(1 - 4*d)*EL^6*(-(d*(5 + d^2)*(2*Pi)^(3*d)*s^2) + 
     2^(1 + 3*d)*Pi^(3*d)*(s^2*(1 - 4*sw^2 + 10*d*sw^2 + 2*d^3*sw^2 + 
         d^2*(2 - 8*sw^2)) + 2*(-1 + d)^2*s*(-1 + 4*sw^2)*t + 
       2*(-1 + d)^2*(-1 + 4*sw^2)*t^2)))/(d*Pi^(4*d)*s^2*(-mz^2 + s)*sw^2), 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  ((-I/9)*(-1 + d)*EL^6*(-3 + 8*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
    GaugeXi[W])/(d*(2*Pi)^d*s^2*(-mz^2 + s)*sw^2), 0, 
  ((-I/9)*EL^6*(-3*d*(5 + d^2)*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
      (s^2*(3 - 8*sw^2 + 20*d*sw^2 + 4*d^3*sw^2 + d^2*(6 - 16*sw^2)) + 
       2*(-1 + d)^2*s*(-3 + 8*sw^2)*t + 2*(-1 + d)^2*(-3 + 8*sw^2)*t^2)))/
   (d*(2*Pi)^(4*d)*s^2*(-mz^2 + s)*sw^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  ((I/9)*2^(-2 - d)*(-1 + d)*EL^6*
    (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
     2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
     4*(3 - 20*sw^2 + 32*sw^4)*t^2)*GaugeXi[W])/(d*Pi^d*(mz^2 - s)^2*s*sw^4), 
  0, ((I/9)*2^(-2 - d)*(-1 + d)^2*EL^6*
    (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
     2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
     4*(3 - 20*sw^2 + 32*sw^4)*t^2))/(d*Pi^d*(mz^2 - s)^2*s*sw^4), 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {((I/9)*2^(3 - d)*(-2 + d)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
   ((-1 + d)*Pi^d*s^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0}, 
 {((I/9)*2^(3 - d)*(-2 + d)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
   ((-1 + d)*Pi^d*s^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  ((-I/9)*2^(4 - d)*(-2 + d)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
   ((-1 + d)*Pi^d*s^3), ((I/9)*2^(3 - d)*EL^6*(4*ml^2 + (-2 + d)*s)*
    ((-2 + d)*s^2 + 4*s*t + 4*t^2))/((-1 + d)*Pi^d*s^3), 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0}, {((I/27)*2^(5 - d)*(-2 + d)*EL^6*
    ((-2 + d)*s^2 + 4*s*t + 4*t^2))/((-1 + d)*Pi^d*s^2), 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  ((-I/27)*2^(6 - d)*(-2 + d)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
   ((-1 + d)*Pi^d*s^3), ((I/27)*2^(5 - d)*EL^6*(4*mc^2 + (-2 + d)*s)*
    ((-2 + d)*s^2 + 4*s*t + 4*t^2))/((-1 + d)*Pi^d*s^3), 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  ((-I/27)*2^(6 - d)*(-2 + d)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
   ((-1 + d)*Pi^d*s^3), ((I/27)*2^(5 - d)*EL^6*(4*mt^2 + (-2 + d)*s)*
    ((-2 + d)*s^2 + 4*s*t + 4*t^2))/((-1 + d)*Pi^d*s^3), 0, 0, 0, 0, 0, 0, 0, 
  0}, {((I/27)*2^(3 - d)*(-2 + d)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
   ((-1 + d)*Pi^d*s^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  ((-I/27)*2^(4 - d)*(-2 + d)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
   ((-1 + d)*Pi^d*s^3), ((I/27)*2^(3 - d)*EL^6*(4*ms^2 + (-2 + d)*s)*
    ((-2 + d)*s^2 + 4*s*t + 4*t^2))/((-1 + d)*Pi^d*s^3), 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  ((-I/27)*2^(4 - d)*(-2 + d)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
   ((-1 + d)*Pi^d*s^3), ((I/27)*2^(3 - d)*EL^6*(4*mb^2 + (-2 + d)*s)*
    ((-2 + d)*s^2 + 4*s*t + 4*t^2))/((-1 + d)*Pi^d*s^3), 0, 0, 0, 0}, 
 {((I/9)*2^(-1 - 2*d)*EL^6*(d^2*(2*Pi)^d*s^2 + 2^(2 + d)*Pi^d*
      (s^2*((1 - 4*sw^2)^2 - d*(1 - 4*sw^2)^2 + d^2*(-2*sw^2 + 4*sw^4)) + 
       (-2 + d)*s*(1 - 4*sw^2)^2*t + (-2 + d)*(1 - 4*sw^2)^2*t^2)))/
   (cw^2*(-1 + d)*Pi^(2*d)*s*(-mz^2 + s)*sw^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {((I/9)*2^(-1 - 2*d)*EL^6*(d^2*(2*Pi)^d*s^2 + 2^(2 + d)*Pi^d*
      (s^2*((1 - 4*sw^2)^2 - d*(1 - 4*sw^2)^2 + d^2*(-2*sw^2 + 4*sw^4)) + 
       (-2 + d)*s*(1 - 4*sw^2)^2*t + (-2 + d)*(1 - 4*sw^2)^2*t^2)))/
   (cw^2*(-1 + d)*Pi^(2*d)*s*(-mz^2 + s)*sw^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, ((-I/9)*EL^6*(d^2*(2*Pi)^(3*d)*s^2 + 2^(2 + 3*d)*Pi^(3*d)*
      (s^2*((1 - 4*sw^2)^2 - d*(1 - 4*sw^2)^2 + d^2*(-2*sw^2 + 4*sw^4)) + 
       (-2 + d)*s*(1 - 4*sw^2)^2*t + (-2 + d)*(1 - 4*sw^2)^2*t^2)))/
   (cw^2*(-1 + d)*(2*Pi)^(4*d)*s^2*(-mz^2 + s)*sw^2), 
  ((I/9)*2^(-1 - 4*d)*EL^6*(d^2*(2*Pi)^(3*d)*s^3 + 2^(2 + 3*d)*Pi^(3*d)*
      (ml - 4*ml*sw^2)^2*((-2 + d)*s^2 + 4*s*t + 4*t^2) + 
     2^(2 + 3*d)*Pi^(3*d)*s*(s^2*((1 - 4*sw^2)^2 - d*(1 - 4*sw^2)^2 + 
         d^2*(-2*sw^2 + 4*sw^4)) + (-2 + d)*s*(1 - 4*sw^2)^2*t + 
       (-2 + d)*(1 - 4*sw^2)^2*t^2)))/(cw^2*(-1 + d)*Pi^(4*d)*s^2*(-mz^2 + s)*
    sw^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {((I/9)*4^(-1 - d)*EL^6*(3*d^2*(2*Pi)^d*s^2 + 2^(2 + d)*Pi^d*
      (s^2*(3 - 20*sw^2 + 32*sw^4 + d^2*sw^2*(-5 + 8*sw^2) + 
         d*(-3 + 20*sw^2 - 32*sw^4)) + (-2 + d)*s*(3 - 20*sw^2 + 32*sw^4)*t + 
       (-2 + d)*(3 - 20*sw^2 + 32*sw^4)*t^2)))/(cw^2*(-1 + d)*Pi^(2*d)*s*
    (-mz^2 + s)*sw^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0}, 
 {((I/9)*4^(-1 - d)*EL^6*(3*d^2*(2*Pi)^d*s^2 + 2^(2 + d)*Pi^d*
      (s^2*(3 - 20*sw^2 + 32*sw^4 + d^2*sw^2*(-5 + 8*sw^2) + 
         d*(-3 + 20*sw^2 - 32*sw^4)) + (-2 + d)*s*(3 - 20*sw^2 + 32*sw^4)*t + 
       (-2 + d)*(3 - 20*sw^2 + 32*sw^4)*t^2)))/(cw^2*(-1 + d)*Pi^(2*d)*s*
    (-mz^2 + s)*sw^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  ((-I/9)*2^(-1 - 3*d)*EL^6*(3*d^2*(2*Pi)^(2*d)*s^2 + 
     4^(1 + d)*Pi^(2*d)*(s^2*(3 - 20*sw^2 + 32*sw^4 + 
         d^2*sw^2*(-5 + 8*sw^2) + d*(-3 + 20*sw^2 - 32*sw^4)) + 
       (-2 + d)*s*(3 - 20*sw^2 + 32*sw^4)*t + 
       (-2 + d)*(3 - 20*sw^2 + 32*sw^4)*t^2)))/(cw^2*(-1 + d)*Pi^(3*d)*s^2*
    (-mz^2 + s)*sw^2), ((I/9)*4^(-1 - d)*EL^6*(3*d^2*(2*Pi)^d*s^3 + 
     2^(2 + d)*ml^2*Pi^d*(3 - 20*sw^2 + 32*sw^4)*((-2 + d)*s^2 + 4*s*t + 
       4*t^2) + 2^(2 + d)*Pi^d*s*(s^2*(3 - 20*sw^2 + 32*sw^4 + 
         d^2*sw^2*(-5 + 8*sw^2) + d*(-3 + 20*sw^2 - 32*sw^4)) + 
       (-2 + d)*s*(3 - 20*sw^2 + 32*sw^4)*t + 
       (-2 + d)*(3 - 20*sw^2 + 32*sw^4)*t^2)))/(cw^2*(-1 + d)*Pi^(2*d)*s^2*
    (-mz^2 + s)*sw^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {((I/27)*EL^6*(-15*d^2*(2*Pi)^(2*d)*s^2 + 2^(1 + 2*d)*Pi^(2*d)*
      (s^2*(6 - 40*sw^2 + 64*sw^4 + d*(-6 + 40*sw^2 - 64*sw^4) + 
         d^2*(9 - 10*sw^2 + 16*sw^4)) + 2*(-2 + d)*s*(3 - 20*sw^2 + 32*sw^4)*
        t + 2*(-2 + d)*(3 - 20*sw^2 + 32*sw^4)*t^2)))/
   (cw^2*(-1 + d)*(2*Pi)^(3*d)*s*(-mz^2 + s)*sw^2), 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  ((-I/27)*2^(1 - 4*d)*EL^6*(3*d^2*(2*Pi)^(3*d)*s^2 + 
     2^(2 + 3*d)*Pi^(3*d)*(s^2*(3 - 20*sw^2 + 32*sw^4 + 
         d^2*sw^2*(-5 + 8*sw^2) + d*(-3 + 20*sw^2 - 32*sw^4)) + 
       (-2 + d)*s*(3 - 20*sw^2 + 32*sw^4)*t + 
       (-2 + d)*(3 - 20*sw^2 + 32*sw^4)*t^2)))/(cw^2*(-1 + d)*Pi^(4*d)*s^2*
    (-mz^2 + s)*sw^2), ((I/27)*EL^6*(3*d^2*(2*Pi)^(3*d)*s^3 + 
     2^(2 + 3*d)*mc^2*Pi^(3*d)*(3 - 20*sw^2 + 32*sw^4)*
      ((-2 + d)*s^2 + 4*s*t + 4*t^2) + 2^(2 + 3*d)*Pi^(3*d)*s*
      (s^2*(3 - 20*sw^2 + 32*sw^4 + d^2*sw^2*(-5 + 8*sw^2) + 
         d*(-3 + 20*sw^2 - 32*sw^4)) + (-2 + d)*s*(3 - 20*sw^2 + 32*sw^4)*t + 
       (-2 + d)*(3 - 20*sw^2 + 32*sw^4)*t^2)))/(cw^2*(-1 + d)*(2*Pi)^(4*d)*
    s^2*(-mz^2 + s)*sw^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  ((-I/27)*2^(1 - 4*d)*EL^6*(3*d^2*(2*Pi)^(3*d)*s^2 + 
     2^(2 + 3*d)*Pi^(3*d)*(s^2*(3 - 20*sw^2 + 32*sw^4 + 
         d^2*sw^2*(-5 + 8*sw^2) + d*(-3 + 20*sw^2 - 32*sw^4)) + 
       (-2 + d)*s*(3 - 20*sw^2 + 32*sw^4)*t + 
       (-2 + d)*(3 - 20*sw^2 + 32*sw^4)*t^2)))/(cw^2*(-1 + d)*Pi^(4*d)*s^2*
    (-mz^2 + s)*sw^2), ((I/27)*EL^6*(3*d^2*(2*Pi)^(3*d)*s^3 + 
     2^(2 + 3*d)*mt^2*Pi^(3*d)*(3 - 20*sw^2 + 32*sw^4)*
      ((-2 + d)*s^2 + 4*s*t + 4*t^2) + 2^(2 + 3*d)*Pi^(3*d)*s*
      (s^2*(3 - 20*sw^2 + 32*sw^4 + d^2*sw^2*(-5 + 8*sw^2) + 
         d*(-3 + 20*sw^2 - 32*sw^4)) + (-2 + d)*s*(3 - 20*sw^2 + 32*sw^4)*t + 
       (-2 + d)*(3 - 20*sw^2 + 32*sw^4)*t^2)))/(cw^2*(-1 + d)*(2*Pi)^(4*d)*
    s^2*(-mz^2 + s)*sw^2), 0, 0, 0, 0, 0, 0, 0, 0}, 
 {((I/27)*2^(-1 - 2*d)*EL^6*(9*d^2*(2*Pi)^d*s^2 + 
     2^(2 + d)*Pi^d*(s^2*((3 - 8*sw^2)^2 - d*(3 - 8*sw^2)^2 + 
         4*d^2*sw^2*(-3 + 4*sw^2)) + (-2 + d)*s*(3 - 8*sw^2)^2*t + 
       (-2 + d)*(3 - 8*sw^2)^2*t^2)))/(cw^2*(-1 + d)*Pi^(2*d)*s*(-mz^2 + s)*
    sw^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  ((-I/27)*EL^6*(9*d^2*(2*Pi)^(3*d)*s^2 + 2^(2 + 3*d)*Pi^(3*d)*
      (s^2*((3 - 8*sw^2)^2 - d*(3 - 8*sw^2)^2 + 4*d^2*sw^2*(-3 + 4*sw^2)) + 
       (-2 + d)*s*(3 - 8*sw^2)^2*t + (-2 + d)*(3 - 8*sw^2)^2*t^2)))/
   (cw^2*(-1 + d)*(2*Pi)^(4*d)*s^2*(-mz^2 + s)*sw^2), 
  ((I/27)*2^(-1 - 4*d)*EL^6*(9*d^2*(2*Pi)^(3*d)*s^3 + 
     2^(2 + 3*d)*mc^2*Pi^(3*d)*(3 - 8*sw^2)^2*((-2 + d)*s^2 + 4*s*t + 
       4*t^2) + 2^(2 + 3*d)*Pi^(3*d)*s*
      (s^2*((3 - 8*sw^2)^2 - d*(3 - 8*sw^2)^2 + 4*d^2*sw^2*(-3 + 4*sw^2)) + 
       (-2 + d)*s*(3 - 8*sw^2)^2*t + (-2 + d)*(3 - 8*sw^2)^2*t^2)))/
   (cw^2*(-1 + d)*Pi^(4*d)*s^2*(-mz^2 + s)*sw^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  ((-I/27)*EL^6*(9*d^2*(2*Pi)^(3*d)*s^2 + 2^(2 + 3*d)*Pi^(3*d)*
      (s^2*((3 - 8*sw^2)^2 - d*(3 - 8*sw^2)^2 + 4*d^2*sw^2*(-3 + 4*sw^2)) + 
       (-2 + d)*s*(3 - 8*sw^2)^2*t + (-2 + d)*(3 - 8*sw^2)^2*t^2)))/
   (cw^2*(-1 + d)*(2*Pi)^(4*d)*s^2*(-mz^2 + s)*sw^2), 
  ((I/27)*2^(-1 - 4*d)*EL^6*(9*d^2*(2*Pi)^(3*d)*s^3 + 
     2^(2 + 3*d)*mt^2*Pi^(3*d)*(3 - 8*sw^2)^2*((-2 + d)*s^2 + 4*s*t + 
       4*t^2) + 2^(2 + 3*d)*Pi^(3*d)*s*
      (s^2*((3 - 8*sw^2)^2 - d*(3 - 8*sw^2)^2 + 4*d^2*sw^2*(-3 + 4*sw^2)) + 
       (-2 + d)*s*(3 - 8*sw^2)^2*t + (-2 + d)*(3 - 8*sw^2)^2*t^2)))/
   (cw^2*(-1 + d)*Pi^(4*d)*s^2*(-mz^2 + s)*sw^2), 0, 0, 0, 0, 0, 0, 0, 0}, 
 {((I/27)*2^(-1 - 2*d)*EL^6*(3*d^2*(2*Pi)^d*s^2 + 
     2^(2 + d)*Pi^d*(s^2*(3 - 16*sw^2 + 16*sw^4 + 4*d^2*sw^2*(-1 + sw^2) + 
         d*(-3 + 16*sw^2 - 16*sw^4)) + (-2 + d)*s*(3 - 16*sw^2 + 16*sw^4)*t + 
       (-2 + d)*(3 - 16*sw^2 + 16*sw^4)*t^2)))/(cw^2*(-1 + d)*Pi^(2*d)*s*
    (-mz^2 + s)*sw^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  ((-I/27)*EL^6*(3*d^2*(2*Pi)^(3*d)*s^2 + 2^(2 + 3*d)*Pi^(3*d)*
      (s^2*(3 - 16*sw^2 + 16*sw^4 + 4*d^2*sw^2*(-1 + sw^2) + 
         d*(-3 + 16*sw^2 - 16*sw^4)) + (-2 + d)*s*(3 - 16*sw^2 + 16*sw^4)*t + 
       (-2 + d)*(3 - 16*sw^2 + 16*sw^4)*t^2)))/(cw^2*(-1 + d)*(2*Pi)^(4*d)*
    s^2*(-mz^2 + s)*sw^2), ((I/27)*2^(-1 - 4*d)*EL^6*
    (3*d^2*(2*Pi)^(3*d)*s^3 + 2^(2 + 3*d)*ms^2*Pi^(3*d)*
      (3 - 16*sw^2 + 16*sw^4)*((-2 + d)*s^2 + 4*s*t + 4*t^2) + 
     2^(2 + 3*d)*Pi^(3*d)*s*(s^2*(3 - 16*sw^2 + 16*sw^4 + 
         4*d^2*sw^2*(-1 + sw^2) + d*(-3 + 16*sw^2 - 16*sw^4)) + 
       (-2 + d)*s*(3 - 16*sw^2 + 16*sw^4)*t + 
       (-2 + d)*(3 - 16*sw^2 + 16*sw^4)*t^2)))/(cw^2*(-1 + d)*Pi^(4*d)*s^2*
    (-mz^2 + s)*sw^2), 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, ((-I/27)*EL^6*(3*d^2*(2*Pi)^(3*d)*s^2 + 
     2^(2 + 3*d)*Pi^(3*d)*(s^2*(3 - 16*sw^2 + 16*sw^4 + 
         4*d^2*sw^2*(-1 + sw^2) + d*(-3 + 16*sw^2 - 16*sw^4)) + 
       (-2 + d)*s*(3 - 16*sw^2 + 16*sw^4)*t + 
       (-2 + d)*(3 - 16*sw^2 + 16*sw^4)*t^2)))/(cw^2*(-1 + d)*(2*Pi)^(4*d)*
    s^2*(-mz^2 + s)*sw^2), ((I/27)*2^(-1 - 4*d)*EL^6*
    (3*d^2*(2*Pi)^(3*d)*s^3 + 2^(2 + 3*d)*mb^2*Pi^(3*d)*
      (3 - 16*sw^2 + 16*sw^4)*((-2 + d)*s^2 + 4*s*t + 4*t^2) + 
     2^(2 + 3*d)*Pi^(3*d)*s*(s^2*(3 - 16*sw^2 + 16*sw^4 + 
         4*d^2*sw^2*(-1 + sw^2) + d*(-3 + 16*sw^2 - 16*sw^4)) + 
       (-2 + d)*s*(3 - 16*sw^2 + 16*sw^4)*t + 
       (-2 + d)*(3 - 16*sw^2 + 16*sw^4)*t^2)))/(cw^2*(-1 + d)*Pi^(4*d)*s^2*
    (-mz^2 + s)*sw^2), 0, 0, 0, 0}, 
 {((I/27)*4^(-1 - d)*EL^6*(9*d^2*(2*Pi)^d*s^2 + 
     2^(2 + d)*Pi^d*(s^2*(9 - 36*sw^2 + 32*sw^4 + d^2*sw^2*(-9 + 8*sw^2) + 
         d*(-9 + 36*sw^2 - 32*sw^4)) + (-2 + d)*s*(9 - 36*sw^2 + 32*sw^4)*t + 
       (-2 + d)*(9 - 36*sw^2 + 32*sw^4)*t^2)))/(cw^2*(-1 + d)*Pi^(2*d)*s*
    (-mz^2 + s)*sw^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  ((-I/27)*2^(-1 - 3*d)*EL^6*(9*d^2*(2*Pi)^(2*d)*s^2 + 
     4^(1 + d)*Pi^(2*d)*(s^2*(9 - 36*sw^2 + 32*sw^4 + 
         d^2*sw^2*(-9 + 8*sw^2) + d*(-9 + 36*sw^2 - 32*sw^4)) + 
       (-2 + d)*s*(9 - 36*sw^2 + 32*sw^4)*t + 
       (-2 + d)*(9 - 36*sw^2 + 32*sw^4)*t^2)))/(cw^2*(-1 + d)*Pi^(3*d)*s^2*
    (-mz^2 + s)*sw^2), ((I/27)*4^(-1 - d)*EL^6*(9*d^2*(2*Pi)^d*s^3 + 
     2^(2 + d)*ms^2*Pi^d*(9 - 36*sw^2 + 32*sw^4)*((-2 + d)*s^2 + 4*s*t + 
       4*t^2) + 2^(2 + d)*Pi^d*s*(s^2*(9 - 36*sw^2 + 32*sw^4 + 
         d^2*sw^2*(-9 + 8*sw^2) + d*(-9 + 36*sw^2 - 32*sw^4)) + 
       (-2 + d)*s*(9 - 36*sw^2 + 32*sw^4)*t + 
       (-2 + d)*(9 - 36*sw^2 + 32*sw^4)*t^2)))/(cw^2*(-1 + d)*Pi^(2*d)*s^2*
    (-mz^2 + s)*sw^2), 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, ((-I/27)*2^(-1 - 3*d)*EL^6*
    (9*d^2*(2*Pi)^(2*d)*s^2 + 4^(1 + d)*Pi^(2*d)*
      (s^2*(9 - 36*sw^2 + 32*sw^4 + d^2*sw^2*(-9 + 8*sw^2) + 
         d*(-9 + 36*sw^2 - 32*sw^4)) + (-2 + d)*s*(9 - 36*sw^2 + 32*sw^4)*t + 
       (-2 + d)*(9 - 36*sw^2 + 32*sw^4)*t^2)))/(cw^2*(-1 + d)*Pi^(3*d)*s^2*
    (-mz^2 + s)*sw^2), ((I/27)*4^(-1 - d)*EL^6*(9*d^2*(2*Pi)^d*s^3 + 
     2^(2 + d)*mb^2*Pi^d*(9 - 36*sw^2 + 32*sw^4)*((-2 + d)*s^2 + 4*s*t + 
       4*t^2) + 2^(2 + d)*Pi^d*s*(s^2*(9 - 36*sw^2 + 32*sw^4 + 
         d^2*sw^2*(-9 + 8*sw^2) + d*(-9 + 36*sw^2 - 32*sw^4)) + 
       (-2 + d)*s*(9 - 36*sw^2 + 32*sw^4)*t + 
       (-2 + d)*(9 - 36*sw^2 + 32*sw^4)*t^2)))/(cw^2*(-1 + d)*Pi^(2*d)*s^2*
    (-mz^2 + s)*sw^2), 0, 0, 0, 0}, 
 {((-I/9)*2^(-5 - 2*d)*EL^6*(-9*d^3*(2*Pi)^d*s^2 + 
     2^(1 + d)*Pi^d*(s^2*(12 + 3*d^3 + 40*sw^2 - 64*sw^4 + 
         d^2*(9 + 10*sw^2 - 16*sw^4) + 2*d*(-9 - 20*sw^2 + 32*sw^4)) + 
       s*(21*d^2 - 3*d^3 + d*(-54 + 40*sw^2 - 64*sw^4) + 
         16*(3 - 5*sw^2 + 8*sw^4))*t - 2*(-2 + d)*(3 - 20*sw^2 + 32*sw^4)*
        t^2)))/(cw^4*(-1 + d)*Pi^(2*d)*(mz^2 - s)^2*sw^4), 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {((-I/9)*2^(-5 - 2*d)*EL^6*(-9*d^3*(2*Pi)^d*s^2 + 
     2^(1 + d)*Pi^d*(s^2*(12 + 3*d^3 + 40*sw^2 - 64*sw^4 + 
         d^2*(9 + 10*sw^2 - 16*sw^4) + 2*d*(-9 - 20*sw^2 + 32*sw^4)) + 
       s*(21*d^2 - 3*d^3 + d*(-54 + 40*sw^2 - 64*sw^4) + 
         16*(3 - 5*sw^2 + 8*sw^4))*t - 2*(-2 + d)*(3 - 20*sw^2 + 32*sw^4)*
        t^2)))/(cw^4*(-1 + d)*Pi^(2*d)*(mz^2 - s)^2*sw^4), 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {((-I/9)*2^(-5 - 2*d)*EL^6*(-9*d^3*(2*Pi)^d*s^2 + 
     2^(1 + d)*Pi^d*(s^2*(12 + 3*d^3 + 40*sw^2 - 64*sw^4 + 
         d^2*(9 + 10*sw^2 - 16*sw^4) + 2*d*(-9 - 20*sw^2 + 32*sw^4)) + 
       s*(21*d^2 - 3*d^3 + d*(-54 + 40*sw^2 - 64*sw^4) + 
         16*(3 - 5*sw^2 + 8*sw^4))*t - 2*(-2 + d)*(3 - 20*sw^2 + 32*sw^4)*
        t^2)))/(cw^4*(-1 + d)*Pi^(2*d)*(mz^2 - s)^2*sw^4), 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {((I/9)*2^(-5 - 2*d)*EL^6*(9*d^3*(2*Pi)^d*s^2 + 
     2^(1 + d)*Pi^d*(s^2*(3*d^3*(-1 - 2*sw^2 + 4*sw^4) + 
         d^2*(-9 + 26*sw^2 - 16*sw^4 - 144*sw^6 + 128*sw^8) + 
         4*(-3 + 2*sw^2 + 32*sw^4 - 144*sw^6 + 128*sw^8) - 
         2*d*(-9 + 16*sw^2 + 40*sw^4 - 288*sw^6 + 256*sw^8)) + 
       s*(1 - 4*sw^2 + 8*sw^4)*(-21*d^2 + 3*d^3 - 16*(3 - 5*sw^2 + 8*sw^4) + 
         d*(54 - 40*sw^2 + 64*sw^4))*t + 2*(-2 + d)*(3 - 32*sw^2 + 136*sw^4 - 
         288*sw^6 + 256*sw^8)*t^2)))/(cw^4*(-1 + d)*Pi^(2*d)*(mz^2 - s)^2*
    sw^4), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0}, {((I/9)*2^(-5 - 2*d)*EL^6*(9*d^3*(2*Pi)^d*s^2 + 
     2^(1 + d)*Pi^d*(s^2*(3*d^3*(-1 - 2*sw^2 + 4*sw^4) + 
         d^2*(-9 + 26*sw^2 - 16*sw^4 - 144*sw^6 + 128*sw^8) + 
         4*(-3 + 2*sw^2 + 32*sw^4 - 144*sw^6 + 128*sw^8) - 
         2*d*(-9 + 16*sw^2 + 40*sw^4 - 288*sw^6 + 256*sw^8)) + 
       s*(1 - 4*sw^2 + 8*sw^4)*(-21*d^2 + 3*d^3 - 16*(3 - 5*sw^2 + 8*sw^4) + 
         d*(54 - 40*sw^2 + 64*sw^4))*t + 2*(-2 + d)*(3 - 32*sw^2 + 136*sw^4 - 
         288*sw^6 + 256*sw^8)*t^2)))/(cw^4*(-1 + d)*Pi^(2*d)*(mz^2 - s)^2*
    sw^4), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  ((-I/9)*4^(-2 - d)*EL^6*(-3*d^3*(2*Pi)^d*s^2 + 
     2^(1 + d)*Pi^d*(s^2*(3*d^3*(1 - 2*sw^2 + 4*sw^4) + 
         d^2*(-9 + 26*sw^2 - 16*sw^4 - 144*sw^6 + 128*sw^8) + 
         4*(-3 + 2*sw^2 + 32*sw^4 - 144*sw^6 + 128*sw^8) - 
         2*d*(-9 + 16*sw^2 + 40*sw^4 - 288*sw^6 + 256*sw^8)) + 
       s*(1 - 4*sw^2 + 8*sw^4)*(-21*d^2 + 3*d^3 - 16*(3 - 5*sw^2 + 8*sw^4) + 
         d*(54 - 40*sw^2 + 64*sw^4))*t + 2*(-2 + d)*(3 - 32*sw^2 + 136*sw^4 - 
         288*sw^6 + 256*sw^8)*t^2)))/(cw^4*(-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s*
    sw^4), ((-I/9)*2^(-5 - 2*d)*EL^6*(-9*d^3*(2*Pi)^d*s^3 + 
     2^(1 + d)*Pi^d*s*(s^2*(d^3*(3 + 6*sw^2 - 12*sw^4) + 
         d^2*(9 - 26*sw^2 + 16*sw^4 + 144*sw^6 - 128*sw^8) - 
         4*(-3 + 2*sw^2 + 32*sw^4 - 144*sw^6 + 128*sw^8) + 
         2*d*(-9 + 16*sw^2 + 40*sw^4 - 288*sw^6 + 256*sw^8)) - 
       s*(1 - 4*sw^2 + 8*sw^4)*(-21*d^2 + 3*d^3 - 16*(3 - 5*sw^2 + 8*sw^4) + 
         d*(54 - 40*sw^2 + 64*sw^4))*t - 2*(-2 + d)*(3 - 32*sw^2 + 136*sw^4 - 
         288*sw^6 + 256*sw^8)*t^2) - 2*ml^2*(-3*(-7 + d)*d^2*(2*Pi)^d*s^2 + 
       2^(1 + d)*Pi^d*(2*s^2*(9 + 6*sw^2 - 80*sw^4 + 288*sw^6 - 256*sw^8 + 
           d^2*sw^2*(-1 + 4*sw^2) + d*(-12 - sw^2 + 32*sw^4 - 144*sw^6 + 
             128*sw^8)) + s*(-3*d^3 + d*(-69 + 160*sw^2 - 304*sw^4) + 
           24*d^2*(1 - sw^2 + 2*sw^4) + 8*(9 - 39*sw^2 + 112*sw^4 - 
             144*sw^6 + 128*sw^8))*t - 2*(-3 + d + 8*sw^2 - 16*sw^4)*
          (3 - 20*sw^2 + 32*sw^4)*t^2))))/(cw^4*(-1 + d)*Pi^(2*d)*
    (mz^2 - s)^2*s*sw^4), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {((I/27)*2^(-5 - 2*d)*EL^6*(9*d^3*(2*Pi)^d*s^2 + 
     2^(1 + d)*Pi^d*(s^2*(d^3*(9 - 36*sw^2 + 48*sw^4) + 
         d^2*(-81 + 126*sw^2 + 96*sw^4 - 704*sw^6 + 512*sw^8) + 
         4*(-27 - 18*sw^2 + 288*sw^4 - 704*sw^6 + 512*sw^8) - 
         2*d*(-81 + 36*sw^2 + 480*sw^4 - 1408*sw^6 + 1024*sw^8)) + 
       s*(9 - 24*sw^2 + 32*sw^4)*(-21*d^2 + 3*d^3 - 
         16*(3 - 5*sw^2 + 8*sw^4) + d*(54 - 40*sw^2 + 64*sw^4))*t + 
       2*(-2 + d)*(27 - 252*sw^2 + 864*sw^4 - 1408*sw^6 + 1024*sw^8)*t^2)))/
   (cw^4*(-1 + d)*Pi^(2*d)*(mz^2 - s)^2*sw^4), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, ((-I/27)*4^(-2 - d)*EL^6*(27*d^3*(2*Pi)^d*s^2 + 
     2^(1 + d)*Pi^d*(s^2*(12*d^3*sw^2*(-3 + 4*sw^2) + 
         d^2*(-81 + 126*sw^2 + 96*sw^4 - 704*sw^6 + 512*sw^8) + 
         4*(-27 - 18*sw^2 + 288*sw^4 - 704*sw^6 + 512*sw^8) - 
         2*d*(-81 + 36*sw^2 + 480*sw^4 - 1408*sw^6 + 1024*sw^8)) + 
       s*(9 - 24*sw^2 + 32*sw^4)*(-21*d^2 + 3*d^3 - 
         16*(3 - 5*sw^2 + 8*sw^4) + d*(54 - 40*sw^2 + 64*sw^4))*t + 
       2*(-2 + d)*(27 - 252*sw^2 + 864*sw^4 - 1408*sw^6 + 1024*sw^8)*t^2)))/
   (cw^4*(-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s*sw^4), 
  ((-I/27)*2^(-5 - 2*d)*EL^6*(2*mc^2*(27*(-7 + d)*d^2*(2*Pi)^d*s^2 + 
       2^(1 + d)*Pi^d*(2*s^2*(-81 - 126*sw^2 + 720*sw^4 - 1408*sw^6 + 
           1024*sw^8 + 3*d^2*sw^2*(-3 + 8*sw^2) + 
           d*(108 + 81*sw^2 - 408*sw^4 + 704*sw^6 - 512*sw^8)) + 
         s*(27*d^3 - 24*d^2*(9 - 6*sw^2 + 8*sw^4) + 
           3*d*(207 - 360*sw^2 + 512*sw^4) - 8*(81 - 279*sw^2 + 648*sw^4 - 
             704*sw^6 + 512*sw^8))*t + 2*(-27 + 9*d + 48*sw^2 - 64*sw^4)*
          (3 - 20*sw^2 + 32*sw^4)*t^2)) - 
     s*(9*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (s^2*(d^3*(9 - 36*sw^2 + 48*sw^4) + d^2*(-81 + 126*sw^2 + 96*sw^4 - 
             704*sw^6 + 512*sw^8) + 4*(-27 - 18*sw^2 + 288*sw^4 - 704*sw^6 + 
             512*sw^8) - 2*d*(-81 + 36*sw^2 + 480*sw^4 - 1408*sw^6 + 
             1024*sw^8)) + s*(9 - 24*sw^2 + 32*sw^4)*(-21*d^2 + 3*d^3 - 
           16*(3 - 5*sw^2 + 8*sw^4) + d*(54 - 40*sw^2 + 64*sw^4))*t + 
         2*(-2 + d)*(27 - 252*sw^2 + 864*sw^4 - 1408*sw^6 + 1024*sw^8)*
          t^2))))/(cw^4*(-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s*sw^4), 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  ((-I/27)*4^(-2 - d)*EL^6*(27*d^3*(2*Pi)^d*s^2 + 
     2^(1 + d)*Pi^d*(s^2*(12*d^3*sw^2*(-3 + 4*sw^2) + 
         d^2*(-81 + 126*sw^2 + 96*sw^4 - 704*sw^6 + 512*sw^8) + 
         4*(-27 - 18*sw^2 + 288*sw^4 - 704*sw^6 + 512*sw^8) - 
         2*d*(-81 + 36*sw^2 + 480*sw^4 - 1408*sw^6 + 1024*sw^8)) + 
       s*(9 - 24*sw^2 + 32*sw^4)*(-21*d^2 + 3*d^3 - 
         16*(3 - 5*sw^2 + 8*sw^4) + d*(54 - 40*sw^2 + 64*sw^4))*t + 
       2*(-2 + d)*(27 - 252*sw^2 + 864*sw^4 - 1408*sw^6 + 1024*sw^8)*t^2)))/
   (cw^4*(-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s*sw^4), 
  ((-I/27)*2^(-5 - 2*d)*EL^6*(2*mt^2*(27*(-7 + d)*d^2*(2*Pi)^d*s^2 + 
       2^(1 + d)*Pi^d*(2*s^2*(-81 - 126*sw^2 + 720*sw^4 - 1408*sw^6 + 
           1024*sw^8 + 3*d^2*sw^2*(-3 + 8*sw^2) + 
           d*(108 + 81*sw^2 - 408*sw^4 + 704*sw^6 - 512*sw^8)) + 
         s*(27*d^3 - 24*d^2*(9 - 6*sw^2 + 8*sw^4) + 
           3*d*(207 - 360*sw^2 + 512*sw^4) - 8*(81 - 279*sw^2 + 648*sw^4 - 
             704*sw^6 + 512*sw^8))*t + 2*(-27 + 9*d + 48*sw^2 - 64*sw^4)*
          (3 - 20*sw^2 + 32*sw^4)*t^2)) - 
     s*(9*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (s^2*(d^3*(9 - 36*sw^2 + 48*sw^4) + d^2*(-81 + 126*sw^2 + 96*sw^4 - 
             704*sw^6 + 512*sw^8) + 4*(-27 - 18*sw^2 + 288*sw^4 - 704*sw^6 + 
             512*sw^8) - 2*d*(-81 + 36*sw^2 + 480*sw^4 - 1408*sw^6 + 
             1024*sw^8)) + s*(9 - 24*sw^2 + 32*sw^4)*(-21*d^2 + 3*d^3 - 
           16*(3 - 5*sw^2 + 8*sw^4) + d*(54 - 40*sw^2 + 64*sw^4))*t + 
         2*(-2 + d)*(27 - 252*sw^2 + 864*sw^4 - 1408*sw^6 + 1024*sw^8)*
          t^2))))/(cw^4*(-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s*sw^4), 0, 0, 0, 0, 
  0, 0, 0, 0}, {((I/27)*2^(-5 - 2*d)*EL^6*(9*d^3*(2*Pi)^d*s^2 + 
     2^(1 + d)*Pi^d*(s^2*(3*d^3*(3 - 6*sw^2 + 4*sw^4) + 
         d^2*(-81 + 18*sw^2 + 192*sw^4 - 272*sw^6 + 128*sw^8) + 
         4*(-27 - 54*sw^2 + 240*sw^4 - 272*sw^6 + 128*sw^8) - 
         2*d*(-81 - 72*sw^2 + 456*sw^4 - 544*sw^6 + 256*sw^8)) + 
       s*(9 - 12*sw^2 + 8*sw^4)*(-21*d^2 + 3*d^3 - 16*(3 - 5*sw^2 + 8*sw^4) + 
         d*(54 - 40*sw^2 + 64*sw^4))*t + 2*(-2 + d)*(27 - 216*sw^2 + 
         552*sw^4 - 544*sw^6 + 256*sw^8)*t^2)))/(cw^4*(-1 + d)*Pi^(2*d)*
    (mz^2 - s)^2*sw^4), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  ((-I/27)*4^(-2 - d)*EL^6*(27*d^3*(2*Pi)^d*s^2 + 
     2^(1 + d)*Pi^d*(s^2*(6*d^3*sw^2*(-3 + 2*sw^2) + 
         d^2*(-81 + 18*sw^2 + 192*sw^4 - 272*sw^6 + 128*sw^8) + 
         4*(-27 - 54*sw^2 + 240*sw^4 - 272*sw^6 + 128*sw^8) - 
         2*d*(-81 - 72*sw^2 + 456*sw^4 - 544*sw^6 + 256*sw^8)) + 
       s*(9 - 12*sw^2 + 8*sw^4)*(-21*d^2 + 3*d^3 - 16*(3 - 5*sw^2 + 8*sw^4) + 
         d*(54 - 40*sw^2 + 64*sw^4))*t + 2*(-2 + d)*(27 - 216*sw^2 + 
         552*sw^4 - 544*sw^6 + 256*sw^8)*t^2)))/(cw^4*(-1 + d)*Pi^(2*d)*
    (mz^2 - s)^2*s*sw^4), ((-I/27)*2^(-5 - 2*d)*EL^6*
    (2*ms^2*(27*(-7 + d)*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (2*s^2*(-81 - 198*sw^2 + 624*sw^4 - 544*sw^6 + 256*sw^8 + 
           3*d^2*sw^2*(-9 + 20*sw^2) + d*(108 + 153*sw^2 - 432*sw^4 + 
             272*sw^6 - 128*sw^8)) + 
         s*(27*d^3 - 24*d^2*(9 - 3*sw^2 + 2*sw^4) + 
           d*(621 - 720*sw^2 + 816*sw^4) - 8*(81 - 207*sw^2 + 384*sw^4 - 
             272*sw^6 + 128*sw^8))*t + 2*(-27 + 9*d + 24*sw^2 - 16*sw^4)*
          (3 - 20*sw^2 + 32*sw^4)*t^2)) - 
     s*(9*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (s^2*(3*d^3*(3 - 6*sw^2 + 4*sw^4) + d^2*(-81 + 18*sw^2 + 192*sw^4 - 
             272*sw^6 + 128*sw^8) + 4*(-27 - 54*sw^2 + 240*sw^4 - 272*sw^6 + 
             128*sw^8) - 2*d*(-81 - 72*sw^2 + 456*sw^4 - 544*sw^6 + 
             256*sw^8)) + s*(9 - 12*sw^2 + 8*sw^4)*(-21*d^2 + 3*d^3 - 
           16*(3 - 5*sw^2 + 8*sw^4) + d*(54 - 40*sw^2 + 64*sw^4))*t + 
         2*(-2 + d)*(27 - 216*sw^2 + 552*sw^4 - 544*sw^6 + 256*sw^8)*t^2))))/
   (cw^4*(-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s*sw^4), 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  ((-I/27)*4^(-2 - d)*EL^6*(27*d^3*(2*Pi)^d*s^2 + 
     2^(1 + d)*Pi^d*(s^2*(6*d^3*sw^2*(-3 + 2*sw^2) + 
         d^2*(-81 + 18*sw^2 + 192*sw^4 - 272*sw^6 + 128*sw^8) + 
         4*(-27 - 54*sw^2 + 240*sw^4 - 272*sw^6 + 128*sw^8) - 
         2*d*(-81 - 72*sw^2 + 456*sw^4 - 544*sw^6 + 256*sw^8)) + 
       s*(9 - 12*sw^2 + 8*sw^4)*(-21*d^2 + 3*d^3 - 16*(3 - 5*sw^2 + 8*sw^4) + 
         d*(54 - 40*sw^2 + 64*sw^4))*t + 2*(-2 + d)*(27 - 216*sw^2 + 
         552*sw^4 - 544*sw^6 + 256*sw^8)*t^2)))/(cw^4*(-1 + d)*Pi^(2*d)*
    (mz^2 - s)^2*s*sw^4), ((-I/27)*2^(-5 - 2*d)*EL^6*
    (2*mb^2*(27*(-7 + d)*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (2*s^2*(-81 - 198*sw^2 + 624*sw^4 - 544*sw^6 + 256*sw^8 + 
           3*d^2*sw^2*(-9 + 20*sw^2) + d*(108 + 153*sw^2 - 432*sw^4 + 
             272*sw^6 - 128*sw^8)) + 
         s*(27*d^3 - 24*d^2*(9 - 3*sw^2 + 2*sw^4) + 
           d*(621 - 720*sw^2 + 816*sw^4) - 8*(81 - 207*sw^2 + 384*sw^4 - 
             272*sw^6 + 128*sw^8))*t + 2*(-27 + 9*d + 24*sw^2 - 16*sw^4)*
          (3 - 20*sw^2 + 32*sw^4)*t^2)) - 
     s*(9*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (s^2*(3*d^3*(3 - 6*sw^2 + 4*sw^4) + d^2*(-81 + 18*sw^2 + 192*sw^4 - 
             272*sw^6 + 128*sw^8) + 4*(-27 - 54*sw^2 + 240*sw^4 - 272*sw^6 + 
             128*sw^8) - 2*d*(-81 - 72*sw^2 + 456*sw^4 - 544*sw^6 + 
             256*sw^8)) + s*(9 - 12*sw^2 + 8*sw^4)*(-21*d^2 + 3*d^3 - 
           16*(3 - 5*sw^2 + 8*sw^4) + d*(54 - 40*sw^2 + 64*sw^4))*t + 
         2*(-2 + d)*(27 - 216*sw^2 + 552*sw^4 - 544*sw^6 + 256*sw^8)*t^2))))/
   (cw^4*(-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s*sw^4), 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  ((-I/9)*2^(3 - d)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2))/((-1 + d)*Pi^d*s^3), 
  ((I/9)*2^(2 - d)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
    (s - 4*mw^2*GaugeXi[W]))/((-1 + d)*Pi^d*s^3), 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  ((I/9)*EL^6*(cw^2 - sw^2)*(-1 + 4*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
   (cw^2*(-1 + d)*(2*Pi)^d*s^2*(-mz^2 + s)*sw^2), 
  ((-I/9)*2^(-1 - d)*EL^6*(cw^2 - sw^2)*(-1 + 4*sw^2)*
    ((-2 + d)*s^2 + 4*s*t + 4*t^2)*(s - 4*mw^2*GaugeXi[W]))/
   (cw^2*(-1 + d)*Pi^d*s^2*(-mz^2 + s)*sw^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  ((I/9)*2^(-1 - d)*EL^6*(cw^2 - sw^2)*(-3 + 8*sw^2)*
    ((-2 + d)*s^2 + 4*s*t + 4*t^2))/(cw^2*(-1 + d)*Pi^d*s^2*(-mz^2 + s)*
    sw^2), ((-I/9)*4^(-1 - d)*EL^6*(cw^2 - sw^2)*(-3*d*(2*Pi)^d*s^3 + 
     2^(1 + d)*Pi^d*s*(s^2*(3 + 4*(-2 + d)*sw^2) + 2*s*(-3 + 8*sw^2)*t + 
       2*(-3 + 8*sw^2)*t^2) - 2^(2 + d)*mw^2*Pi^d*(-3 + 8*sw^2)*
      ((-2 + d)*s^2 + 4*s*t + 4*t^2)*GaugeXi[W]))/
   (cw^2*(-1 + d)*Pi^(2*d)*s^2*(-mz^2 + s)*sw^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  ((-I/9)*2^(-5 - 2*d)*EL^6*(3*d^2*(2*Pi)^d*s^3 + 
     2^(1 + d)*Pi^d*s*(2*s^2*(3 + 10*sw^2 - 16*sw^4 + 
         d*(-3 - 5*sw^2 + 8*sw^4)) + s*(-15*d + 3*d^2 + 
         8*(3 - 5*sw^2 + 8*sw^4))*t + 2*(3 - 20*sw^2 + 32*sw^4)*t^2) + 
     mh^2*(-3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (s^2*(6 + 3*d^2 + 20*sw^2 - 32*sw^4 + 2*d*(-3 - 5*sw^2 + 8*sw^4)) + 
         s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
         2*(3 - 20*sw^2 + 32*sw^4)*t^2)) - 
     mz^2*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
         s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
         2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[Z]))/
   (cw^4*(-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s^2*sw^4), 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, ((-I/9)*2^(-5 - 2*d)*EL^6*(3*d^2*(2*Pi)^d*s^3 + 
     2^(1 + d)*Pi^d*s*(2*s^2*(3 + 10*sw^2 - 16*sw^4 + 
         d*(-3 - 5*sw^2 + 8*sw^4)) + s*(-15*d + 3*d^2 + 
         8*(3 - 5*sw^2 + 8*sw^4))*t + 2*(3 - 20*sw^2 + 32*sw^4)*t^2) + 
     mh^2*(-9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (s^2*(-6 + 3*d^2 - 20*sw^2 + 32*sw^4 + d*(6 + 10*sw^2 - 16*sw^4)) + 
         s*(15*d - 3*d^2 - 8*(3 - 5*sw^2 + 8*sw^4))*t - 
         2*(3 - 20*sw^2 + 32*sw^4)*t^2)) + 
     mz^2*(-9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (2*s^2*(3 + 3*d^2 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
         s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
         2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[Z]))/
   (cw^4*(-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s^2*sw^4), 
  ((I/9)*2^(-5 - 2*d)*EL^6*
    (((3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-3 - 10*sw^2 + 16*sw^4) + 
          (-3 + 20*sw^2 - 32*sw^4)*t))*(mh^2 - s + mz^2*GaugeXi[Z])^2)/s - 
     ((mh^2 - s + mz^2*GaugeXi[Z])*
       (s*(3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-3 - 10*sw^2 + 16*sw^4) + 
            (-3 + 20*sw^2 - 32*sw^4)*t)) + mh^2*(-9*d*(2*Pi)^d*s + 
          2^(1 + d)*Pi^d*(s*(3 + 3*d + 10*sw^2 - 16*sw^4) + 
            (3 - 20*sw^2 + 32*sw^4)*t)) - mz^2*(3*d*(2*Pi)^d*s + 
          2^(1 + d)*Pi^d*(s*(-3 - 10*sw^2 + 16*sw^4) + 
            (-3 + 20*sw^2 - 32*sw^4)*t))*GaugeXi[Z]))/s - 
     ((2*Pi)^d*(-1 + 4*sw^2)*(-3 + 8*sw^2)*(d*(mh^2 - s)^2 + 
        2*mz^2*((-2 + d)*mh^2 - d*s)*GaugeXi[Z] + d*mz^4*GaugeXi[Z]^2))/
      (-1 + d) - ((2*Pi)^d*(3 - 20*sw^2 + 32*sw^4)*(d*(mh^2 - s)^2 + 
        2*mz^2*((-2 + d)*mh^2 - d*s)*GaugeXi[Z] + d*mz^4*GaugeXi[Z]^2))/
      (-1 + d) + 
     (2*((-(2^(1 + d)*mh^2*Pi^d*s*(-6 + 3*d - 20*sw^2 + 32*sw^4)) + 
          mh^4*(3*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(-3 - 10*sw^2 + 16*sw^4)) + 
          s^2*(3*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(-3 - 10*sw^2 + 16*sw^4)))*t - 
        2^(1 + d)*mz^2*Pi^d*(s*(-6 + 3*d - 20*sw^2 + 32*sw^4)*t + 
          mh^2*(s*(-6 + 3*d - 20*sw^2 + 32*sw^4) + 3*d*t - 
            4*(3 - 5*sw^2 + 8*sw^4)*t))*GaugeXi[Z] + 
        mz^4*(3*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(-3 - 10*sw^2 + 16*sw^4))*t*
         GaugeXi[Z]^2))/s + 
     ((-3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(2*s*(3 - 5*sw^2 + 8*sw^4) + 
          (3 - 20*sw^2 + 32*sw^4)*t))*((mh^2 - s)^2*(d*s + 2*t) + 
        2*mz^2*(mh^2*((-2 + d)*s - 2*t) - s*(d*s + 2*t))*GaugeXi[Z] + 
        mz^4*(d*s + 2*t)*GaugeXi[Z]^2))/((-1 + d)*s^2)))/
   (cw^4*Pi^(2*d)*(mz^2 - s)^2*sw^4), 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  ((-I/9)*4^(-2 - d)*EL^6*(-(2^(1 + d)*cw^2*Pi^d*sw^2*
       (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
        2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
        4*(3 - 20*sw^2 + 32*sw^4)*t^2)) + 
     cw^4*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
         s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
         2*(3 - 20*sw^2 + 32*sw^4)*t^2)) + 
     sw^4*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
         s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
         2*(3 - 20*sw^2 + 32*sw^4)*t^2))))/(cw^4*(-1 + d)*Pi^(2*d)*
    (mz^2 - s)^2*s*sw^4), ((I/9)*2^(-5 - 2*d)*EL^6*
    (-(2^(1 + d)*cw^2*Pi^d*sw^2*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
          4*d*(-3 - 5*sw^2 + 8*sw^4)) + 2*s*(-15*d + 3*d^2 + 
          8*(3 - 5*sw^2 + 8*sw^4))*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2)) + 
     cw^4*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
         s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
         2*(3 - 20*sw^2 + 32*sw^4)*t^2)) + 
     sw^4*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
         s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
         2*(3 - 20*sw^2 + 32*sw^4)*t^2)))*(s - 4*mw^2*GaugeXi[W]))/
   (cw^4*(-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s*sw^4), 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  ((I/9)*2^(1 - d)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2))/((-1 + d)*Pi^d*s^3), 
  ((I/9)*EL^6*(-(d*(2*Pi)^d*s^3) + 2^(1 + d)*Pi^d*s*(s^2 - 2*s*t - 2*t^2) + 
     2^(2 + d)*mw^2*Pi^d*((-2 + d)*s^2 + 4*s*t + 4*t^2)*GaugeXi[W]))/
   ((-1 + d)*(2*Pi)^(2*d)*s^3), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 
  ((I/9)*2^(1 - d)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2))/((-1 + d)*Pi^d*s^3), 
  ((I/9)*EL^6*(-(d*(2*Pi)^d*s^3) + 2^(1 + d)*Pi^d*s*(s^2 - 2*s*t - 2*t^2) + 
     2^(2 + d)*mw^2*Pi^d*((-2 + d)*s^2 + 4*s*t + 4*t^2)*GaugeXi[W]))/
   ((-1 + d)*(2*Pi)^(2*d)*s^3), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, ((-I/9)*2^(-1 - d)*EL^6*(-1 + 4*sw^2)*
    ((-2 + d)*s^2 + 4*s*t + 4*t^2))/((-1 + d)*Pi^d*s^2*(-mz^2 + s)*sw^2), 
  ((I/9)*4^(-1 - d)*EL^6*(-(d*(2*Pi)^d*s^3) + 2^(1 + d)*Pi^d*s*
      (s^2*(1 + 2*(-2 + d)*sw^2) + 2*s*(-1 + 4*sw^2)*t + 
       2*(-1 + 4*sw^2)*t^2) - 2^(2 + d)*mw^2*Pi^d*(-1 + 4*sw^2)*
      ((-2 + d)*s^2 + 4*s*t + 4*t^2)*GaugeXi[W]))/
   ((-1 + d)*Pi^(2*d)*s^2*(-mz^2 + s)*sw^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  ((-I/9)*2^(-2 - d)*EL^6*(-3 + 8*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
   ((-1 + d)*Pi^d*s^2*(-mz^2 + s)*sw^2), 
  ((-I/9)*2^(-3 - 2*d)*EL^6*(-3*d*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
      (s^2*(3 + 4*(-2 + d)*sw^2) + 2*s*(-3 + 8*sw^2)*t + 
       2*(-3 + 8*sw^2)*t^2) - 2^(2 + d)*mw^2*Pi^d*(-3 + 8*sw^2)*
      ((-2 + d)*s^2 + 4*s*t + 4*t^2)*GaugeXi[W]))/
   ((-1 + d)*Pi^(2*d)*(mz^2 - s)*s^2*sw^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  ((-I/9)*2^(-1 - d)*EL^6*(-1 + 4*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
   ((-1 + d)*Pi^d*s^2*(-mz^2 + s)*sw^2), 
  ((I/9)*4^(-1 - d)*EL^6*(-(d*(2*Pi)^d*s^3) + 2^(1 + d)*Pi^d*s*
      (s^2*(1 + 2*(-2 + d)*sw^2) + 2*s*(-1 + 4*sw^2)*t + 
       2*(-1 + 4*sw^2)*t^2) - 2^(2 + d)*mw^2*Pi^d*(-1 + 4*sw^2)*
      ((-2 + d)*s^2 + 4*s*t + 4*t^2)*GaugeXi[W]))/
   ((-1 + d)*Pi^(2*d)*s^2*(-mz^2 + s)*sw^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  ((-I/9)*2^(-2 - d)*EL^6*(-3 + 8*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
   ((-1 + d)*Pi^d*s^2*(-mz^2 + s)*sw^2), 
  ((-I/9)*2^(-3 - 2*d)*EL^6*(-3*d*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
      (s^2*(3 + 4*(-2 + d)*sw^2) + 2*s*(-3 + 8*sw^2)*t + 
       2*(-3 + 8*sw^2)*t^2) - 2^(2 + d)*mw^2*Pi^d*(-3 + 8*sw^2)*
      ((-2 + d)*s^2 + 4*s*t + 4*t^2)*GaugeXi[W]))/
   ((-1 + d)*Pi^(2*d)*(mz^2 - s)*s^2*sw^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  ((I/9)*4^(-2 - d)*EL^6*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
      (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
       s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
       2*(3 - 20*sw^2 + 32*sw^4)*t^2)))/((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s*
    sw^4), ((-I/9)*2^(-5 - 2*d)*EL^6*(3*d^2*(2*Pi)^d*s^3 + 
     2^(1 + d)*Pi^d*s*(2*s^2*(3 + 10*sw^2 - 16*sw^4 + 
         d*(-3 - 5*sw^2 + 8*sw^4)) + s*(-15*d + 3*d^2 + 
         8*(3 - 5*sw^2 + 8*sw^4))*t + 2*(3 - 20*sw^2 + 32*sw^4)*t^2) - 
     4*mw^2*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
         s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
         2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[W]))/
   ((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s*sw^4), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  ((I/9)*4^(-2 - d)*EL^6*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
      (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
       s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
       2*(3 - 20*sw^2 + 32*sw^4)*t^2)))/((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s*
    sw^4), ((-I/9)*2^(-5 - 2*d)*EL^6*(3*d^2*(2*Pi)^d*s^3 + 
     2^(1 + d)*Pi^d*s*(2*s^2*(3 + 10*sw^2 - 16*sw^4 + 
         d*(-3 - 5*sw^2 + 8*sw^4)) + s*(-15*d + 3*d^2 + 
         8*(3 - 5*sw^2 + 8*sw^4))*t + 2*(3 - 20*sw^2 + 32*sw^4)*t^2) - 
     4*mw^2*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
         s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
         2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[W]))/
   ((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s*sw^4), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  ((I/9)*2^(1 - d)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2))/((-1 + d)*Pi^d*s^3), 
  ((I/9)*EL^6*(-(d*(2*Pi)^d*s^3) + 2^(1 + d)*Pi^d*s*(s^2 - 2*s*t - 2*t^2) + 
     2^(2 + d)*mw^2*Pi^d*((-2 + d)*s^2 + 4*s*t + 4*t^2)*GaugeXi[W]))/
   ((-1 + d)*(2*Pi)^(2*d)*s^3), 
  ((-I/9)*EL^6*(d*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*(-s^2 + 2*s*t + 2*t^2) + 
     mw^2*(-3*d*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*((-1 + 2*d)*s^2 + 2*s*t + 
         2*t^2)) + mw^2*(-(d*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*
        (s^2 - 2*s*t - 2*t^2))*GaugeXi[W]))/((-1 + d)*(2*Pi)^(2*d)*s^4), 0, 
  0, 0, 0, ((-I/9)*EL^6*((mw^2 - s)*(-(d*(2*Pi)^d*s^2) + 
       2^(1 + d)*Pi^d*(s^2 - 2*s*t - 2*t^2)) + 
     mw^2*(-3*d*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*((-1 + 2*d)*s^2 + 2*s*t + 
         2*t^2))*GaugeXi[W]))/((-1 + d)*(2*Pi)^(2*d)*s^4), 
  ((-I/9)*EL^6*(-(d*(2*Pi)^d*s^4) + 2^(1 + d)*Pi^d*s^2*
      (s^2 - 2*s*t - 2*t^2) - 2^(1 + d)*(-3 + 2*d)*mw^2*Pi^d*s*
      ((-2 + d)*s^2 + 4*s*t + 4*t^2) + mw^4*(-(d*(2*Pi)^d*s^2) + 
       2^(1 + d)*Pi^d*(s^2 - 2*s*t - 2*t^2)) + 2^(1 + d)*mw^2*Pi^d*(mw^2 + s)*
      ((-2 + d)*s^2 + 4*s*t + 4*t^2)*GaugeXi[W] + 
     mw^4*(-(d*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*(s^2 - 2*s*t - 2*t^2))*
      GaugeXi[W]^2))/((-1 + d)*(2*Pi)^(2*d)*s^4), 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, ((I/9)*2^(1 - d)*EL^6*((-2 + d)*s^2 + 4*s*t + 
     4*t^2))/((-1 + d)*Pi^d*s^3), 
  ((I/9)*EL^6*(-(d*(2*Pi)^d*s^3) + 2^(1 + d)*Pi^d*s*(s^2 - 2*s*t - 2*t^2) + 
     2^(2 + d)*mw^2*Pi^d*((-2 + d)*s^2 + 4*s*t + 4*t^2)*GaugeXi[W]))/
   ((-1 + d)*(2*Pi)^(2*d)*s^3), 
  ((-I/9)*EL^6*(d*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*(-s^2 + 2*s*t + 2*t^2) + 
     mw^2*(-3*d*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*((-1 + 2*d)*s^2 + 2*s*t + 
         2*t^2)) + mw^2*(-(d*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*
        (s^2 - 2*s*t - 2*t^2))*GaugeXi[W]))/((-1 + d)*(2*Pi)^(2*d)*s^4), 0, 
  0, 0, 0, ((-I/9)*EL^6*((mw^2 - s)*(-(d*(2*Pi)^d*s^2) + 
       2^(1 + d)*Pi^d*(s^2 - 2*s*t - 2*t^2)) + 
     mw^2*(-3*d*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*((-1 + 2*d)*s^2 + 2*s*t + 
         2*t^2))*GaugeXi[W]))/((-1 + d)*(2*Pi)^(2*d)*s^4), 
  ((-I/9)*EL^6*(-(d*(2*Pi)^d*s^4) + 2^(1 + d)*Pi^d*s^2*
      (s^2 - 2*s*t - 2*t^2) - 2^(1 + d)*(-3 + 2*d)*mw^2*Pi^d*s*
      ((-2 + d)*s^2 + 4*s*t + 4*t^2) + mw^4*(-(d*(2*Pi)^d*s^2) + 
       2^(1 + d)*Pi^d*(s^2 - 2*s*t - 2*t^2)) + 2^(1 + d)*mw^2*Pi^d*(mw^2 + s)*
      ((-2 + d)*s^2 + 4*s*t + 4*t^2)*GaugeXi[W] + 
     mw^4*(-(d*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*(s^2 - 2*s*t - 2*t^2))*
      GaugeXi[W]^2))/((-1 + d)*(2*Pi)^(2*d)*s^4), 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, ((I/9)*2^(-1 - d)*EL^6*(-1 + 4*sw^2)*
    ((-2 + d)*s^2 + 4*s*t + 4*t^2))/(cw^2*(-1 + d)*Pi^d*s^2*(-mz^2 + s)), 
  ((-I/9)*4^(-1 - d)*EL^6*(-(d*(2*Pi)^d*s^3) + 2^(1 + d)*Pi^d*s*
      (s^2*(1 + 2*(-2 + d)*sw^2) + 2*s*(-1 + 4*sw^2)*t + 
       2*(-1 + 4*sw^2)*t^2) - 2^(2 + d)*mw^2*Pi^d*(-1 + 4*sw^2)*
      ((-2 + d)*s^2 + 4*s*t + 4*t^2)*GaugeXi[W]))/
   (cw^2*(-1 + d)*Pi^(2*d)*s^2*(-mz^2 + s)), 
  ((-I/9)*2^(-2 - d)*EL^6*(-1 + 4*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
    (mw^2 + s - mw^2*GaugeXi[W]))/(cw^2*(-1 + d)*Pi^d*s^3*(-mz^2 + s)), 0, 0, 
  0, 0, ((-I/9)*2^(-2 - d)*EL^6*(-1 + 4*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
    (-mw^2 + s + mw^2*GaugeXi[W]))/(cw^2*(-1 + d)*Pi^d*s^3*(-mz^2 + s)), 
  ((I/9)*4^(-1 - d)*EL^6*(-(d*(2*Pi)^d*s^4) + 2^(1 + d)*(-3 + 2*d)*mw^2*Pi^d*
      s*(-1 + 4*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2) + 
     2^(1 + d)*Pi^d*s^2*(s^2*(1 + 2*(-2 + d)*sw^2) + 2*s*(-1 + 4*sw^2)*t + 
       2*(-1 + 4*sw^2)*t^2) + mw^4*(d*(2*Pi)^d*s^2 + 
       2^(1 + d)*Pi^d*(s^2*(1 - d - 4*sw^2 + 2*d*sw^2) + 
         2*s*(-1 + 4*sw^2)*t + 2*(-1 + 4*sw^2)*t^2)) - 
     2*mw^2*(mw^2 + s)*(-(d*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*
        (s^2*(1 + 2*(-2 + d)*sw^2) + 2*s*(-1 + 4*sw^2)*t + 
         2*(-1 + 4*sw^2)*t^2))*GaugeXi[W] + 
     mw^4*(-(d*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*(s^2*(1 + 2*(-2 + d)*sw^2) + 
         2*s*(-1 + 4*sw^2)*t + 2*(-1 + 4*sw^2)*t^2))*GaugeXi[W]^2))/
   (cw^2*(-1 + d)*Pi^(2*d)*s^3*(-mz^2 + s)), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, ((I/9)*2^(-1 - d)*EL^6*(-1 + 4*sw^2)*
    ((-2 + d)*s^2 + 4*s*t + 4*t^2))/(cw^2*(-1 + d)*Pi^d*s^2*(-mz^2 + s)), 
  ((-I/9)*4^(-1 - d)*EL^6*(-(d*(2*Pi)^d*s^3) + 2^(1 + d)*Pi^d*s*
      (s^2*(1 + 2*(-2 + d)*sw^2) + 2*s*(-1 + 4*sw^2)*t + 
       2*(-1 + 4*sw^2)*t^2) - 2^(2 + d)*mw^2*Pi^d*(-1 + 4*sw^2)*
      ((-2 + d)*s^2 + 4*s*t + 4*t^2)*GaugeXi[W]))/
   (cw^2*(-1 + d)*Pi^(2*d)*s^2*(-mz^2 + s)), 
  ((-I/9)*2^(-2 - d)*EL^6*(-1 + 4*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
    (mw^2 + s - mw^2*GaugeXi[W]))/(cw^2*(-1 + d)*Pi^d*s^3*(-mz^2 + s)), 0, 0, 
  0, 0, ((-I/9)*2^(-2 - d)*EL^6*(-1 + 4*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
    (-mw^2 + s + mw^2*GaugeXi[W]))/(cw^2*(-1 + d)*Pi^d*s^3*(-mz^2 + s)), 
  ((I/9)*4^(-1 - d)*EL^6*(-(d*(2*Pi)^d*s^4) + 2^(1 + d)*(-3 + 2*d)*mw^2*Pi^d*
      s*(-1 + 4*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2) + 
     2^(1 + d)*Pi^d*s^2*(s^2*(1 + 2*(-2 + d)*sw^2) + 2*s*(-1 + 4*sw^2)*t + 
       2*(-1 + 4*sw^2)*t^2) + mw^4*(d*(2*Pi)^d*s^2 + 
       2^(1 + d)*Pi^d*(s^2*(1 - d - 4*sw^2 + 2*d*sw^2) + 
         2*s*(-1 + 4*sw^2)*t + 2*(-1 + 4*sw^2)*t^2)) - 
     2*mw^2*(mw^2 + s)*(-(d*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*
        (s^2*(1 + 2*(-2 + d)*sw^2) + 2*s*(-1 + 4*sw^2)*t + 
         2*(-1 + 4*sw^2)*t^2))*GaugeXi[W] + 
     mw^4*(-(d*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*(s^2*(1 + 2*(-2 + d)*sw^2) + 
         2*s*(-1 + 4*sw^2)*t + 2*(-1 + 4*sw^2)*t^2))*GaugeXi[W]^2))/
   (cw^2*(-1 + d)*Pi^(2*d)*s^3*(-mz^2 + s)), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, ((I/9)*2^(-2 - d)*EL^6*(-3 + 8*sw^2)*
    ((-2 + d)*s^2 + 4*s*t + 4*t^2))/(cw^2*(-1 + d)*Pi^d*s^2*(-mz^2 + s)), 
  ((I/9)*2^(-3 - 2*d)*EL^6*(-3*d*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
      (s^2*(3 + 4*(-2 + d)*sw^2) + 2*s*(-3 + 8*sw^2)*t + 
       2*(-3 + 8*sw^2)*t^2) - 2^(2 + d)*mw^2*Pi^d*(-3 + 8*sw^2)*
      ((-2 + d)*s^2 + 4*s*t + 4*t^2)*GaugeXi[W]))/
   (cw^2*(-1 + d)*Pi^(2*d)*(mz^2 - s)*s^2), 
  ((-I/9)*2^(-3 - d)*EL^6*(-3 + 8*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
    (mw^2 + s - mw^2*GaugeXi[W]))/(cw^2*(-1 + d)*Pi^d*s^3*(-mz^2 + s)), 0, 0, 
  0, 0, ((-I/9)*2^(-3 - d)*EL^6*(-3 + 8*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
    (-mw^2 + s + mw^2*GaugeXi[W]))/(cw^2*(-1 + d)*Pi^d*s^3*(-mz^2 + s)), 
  ((-I/9)*2^(-3 - 2*d)*EL^6*(-3*d*(2*Pi)^d*s^4 + 2^(1 + d)*(-3 + 2*d)*mw^2*
      Pi^d*s*(-3 + 8*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2) + 
     2^(1 + d)*Pi^d*s^2*(s^2*(3 + 4*(-2 + d)*sw^2) + 2*s*(-3 + 8*sw^2)*t + 
       2*(-3 + 8*sw^2)*t^2) + mw^4*(9*d*(2*Pi)^d*s^2 + 
       2^(1 + d)*Pi^d*(s^2*(3 - 6*d - 8*sw^2 + 4*d*sw^2) + 
         2*s*(-3 + 8*sw^2)*t + 2*(-3 + 8*sw^2)*t^2)) - 
     2*mw^2*(mw^2 + s)*(-3*d*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (s^2*(3 + 4*(-2 + d)*sw^2) + 2*s*(-3 + 8*sw^2)*t + 
         2*(-3 + 8*sw^2)*t^2))*GaugeXi[W] + 
     mw^4*(-3*d*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*(s^2*(3 + 4*(-2 + d)*sw^2) + 
         2*s*(-3 + 8*sw^2)*t + 2*(-3 + 8*sw^2)*t^2))*GaugeXi[W]^2))/
   (cw^2*(-1 + d)*Pi^(2*d)*(mz^2 - s)*s^3), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, ((I/9)*2^(-2 - d)*EL^6*(-3 + 8*sw^2)*
    ((-2 + d)*s^2 + 4*s*t + 4*t^2))/(cw^2*(-1 + d)*Pi^d*s^2*(-mz^2 + s)), 
  ((I/9)*2^(-3 - 2*d)*EL^6*(-3*d*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
      (s^2*(3 + 4*(-2 + d)*sw^2) + 2*s*(-3 + 8*sw^2)*t + 
       2*(-3 + 8*sw^2)*t^2) - 2^(2 + d)*mw^2*Pi^d*(-3 + 8*sw^2)*
      ((-2 + d)*s^2 + 4*s*t + 4*t^2)*GaugeXi[W]))/
   (cw^2*(-1 + d)*Pi^(2*d)*(mz^2 - s)*s^2), 
  ((-I/9)*2^(-3 - d)*EL^6*(-3 + 8*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
    (mw^2 + s - mw^2*GaugeXi[W]))/(cw^2*(-1 + d)*Pi^d*s^3*(-mz^2 + s)), 0, 0, 
  0, 0, ((-I/9)*2^(-3 - d)*EL^6*(-3 + 8*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
    (-mw^2 + s + mw^2*GaugeXi[W]))/(cw^2*(-1 + d)*Pi^d*s^3*(-mz^2 + s)), 
  ((-I/9)*2^(-3 - 2*d)*EL^6*(-3*d*(2*Pi)^d*s^4 + 2^(1 + d)*(-3 + 2*d)*mw^2*
      Pi^d*s*(-3 + 8*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2) + 
     2^(1 + d)*Pi^d*s^2*(s^2*(3 + 4*(-2 + d)*sw^2) + 2*s*(-3 + 8*sw^2)*t + 
       2*(-3 + 8*sw^2)*t^2) + mw^4*(9*d*(2*Pi)^d*s^2 + 
       2^(1 + d)*Pi^d*(s^2*(3 - 6*d - 8*sw^2 + 4*d*sw^2) + 
         2*s*(-3 + 8*sw^2)*t + 2*(-3 + 8*sw^2)*t^2)) - 
     2*mw^2*(mw^2 + s)*(-3*d*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (s^2*(3 + 4*(-2 + d)*sw^2) + 2*s*(-3 + 8*sw^2)*t + 
         2*(-3 + 8*sw^2)*t^2))*GaugeXi[W] + 
     mw^4*(-3*d*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*(s^2*(3 + 4*(-2 + d)*sw^2) + 
         2*s*(-3 + 8*sw^2)*t + 2*(-3 + 8*sw^2)*t^2))*GaugeXi[W]^2))/
   (cw^2*(-1 + d)*Pi^(2*d)*(mz^2 - s)*s^3), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  ((-I/9)*2^(-5 - 2*d)*EL^6*mw^2*(3*d^2*(2*Pi)^d*s^2 + 
     2^(1 + d)*Pi^d*(2*s^2*(3 + 10*sw^2 - 16*sw^4 + 
         d*(-3 - 5*sw^2 + 8*sw^4)) + s*(-15*d + 3*d^2 + 
         8*(3 - 5*sw^2 + 8*sw^4))*t + 2*(3 - 20*sw^2 + 32*sw^4)*t^2))*
    (-1 + GaugeXi[Z]))/(cw^6*(-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s^2*sw^4), 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, ((I/9)*2^(-5 - 2*d)*EL^6*mw^2*
    (3*d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
      (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
       s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
       2*(3 - 20*sw^2 + 32*sw^4)*t^2) + mh^2*(-9*d^2*(2*Pi)^d*s^2 + 
       2^(1 + d)*Pi^d*(s^2*(-6 + 3*d^2 - 20*sw^2 + 32*sw^4 + 
           d*(6 + 10*sw^2 - 16*sw^4)) + s*(15*d - 3*d^2 - 
           8*(3 - 5*sw^2 + 8*sw^4))*t - 2*(3 - 20*sw^2 + 32*sw^4)*t^2)) + 
     mz^2*(-9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (2*s^2*(3 + 3*d^2 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
         s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
         2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[Z]))/
   (cw^6*(-1 + d)*mz^2*Pi^(2*d)*(mz^2 - s)^2*s^2*sw^4), 
  ((-I/9)*2^(-5 - 2*d)*EL^6*mw^2*
    (((3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-3 - 10*sw^2 + 16*sw^4) + 
          (-3 + 20*sw^2 - 32*sw^4)*t))*(mh^2 - s + mz^2*GaugeXi[Z])^2)/s - 
     ((mh^2 - s + mz^2*GaugeXi[Z])*
       (s*(3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-3 - 10*sw^2 + 16*sw^4) + 
            (-3 + 20*sw^2 - 32*sw^4)*t)) + mh^2*(-9*d*(2*Pi)^d*s + 
          2^(1 + d)*Pi^d*(s*(3 + 3*d + 10*sw^2 - 16*sw^4) + 
            (3 - 20*sw^2 + 32*sw^4)*t)) - mz^2*(3*d*(2*Pi)^d*s + 
          2^(1 + d)*Pi^d*(s*(-3 - 10*sw^2 + 16*sw^4) + 
            (-3 + 20*sw^2 - 32*sw^4)*t))*GaugeXi[Z]))/s - 
     ((2*Pi)^d*(-1 + 4*sw^2)*(-3 + 8*sw^2)*(d*(mh^2 - s)^2 + 
        2*mz^2*((-2 + d)*mh^2 - d*s)*GaugeXi[Z] + d*mz^4*GaugeXi[Z]^2))/
      (-1 + d) - ((2*Pi)^d*(3 - 20*sw^2 + 32*sw^4)*(d*(mh^2 - s)^2 + 
        2*mz^2*((-2 + d)*mh^2 - d*s)*GaugeXi[Z] + d*mz^4*GaugeXi[Z]^2))/
      (-1 + d) + 
     (2*((-(2^(1 + d)*mh^2*Pi^d*s*(-6 + 3*d - 20*sw^2 + 32*sw^4)) + 
          mh^4*(3*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(-3 - 10*sw^2 + 16*sw^4)) + 
          s^2*(3*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(-3 - 10*sw^2 + 16*sw^4)))*t - 
        2^(1 + d)*mz^2*Pi^d*(s*(-6 + 3*d - 20*sw^2 + 32*sw^4)*t + 
          mh^2*(s*(-6 + 3*d - 20*sw^2 + 32*sw^4) + 3*d*t - 
            4*(3 - 5*sw^2 + 8*sw^4)*t))*GaugeXi[Z] + 
        mz^4*(3*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(-3 - 10*sw^2 + 16*sw^4))*t*
         GaugeXi[Z]^2))/s + 
     ((-3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(2*s*(3 - 5*sw^2 + 8*sw^4) + 
          (3 - 20*sw^2 + 32*sw^4)*t))*((mh^2 - s)^2*(d*s + 2*t) + 
        2*mz^2*(mh^2*((-2 + d)*s - 2*t) - s*(d*s + 2*t))*GaugeXi[Z] + 
        mz^4*(d*s + 2*t)*GaugeXi[Z]^2))/((-1 + d)*s^2)))/
   (cw^6*Pi^(2*d)*(mz^3 - mz*s)^2*sw^4), 
  ((-I/9)*2^(-5 - 2*d)*EL^6*mw^2*(3*d^2*(2*Pi)^d*s^3 + 
     2^(1 + d)*Pi^d*s*(2*s^2*(3 + 10*sw^2 - 16*sw^4 + 
         d*(-3 - 5*sw^2 + 8*sw^4)) + s*(-15*d + 3*d^2 + 
         8*(3 - 5*sw^2 + 8*sw^4))*t + 2*(3 - 20*sw^2 + 32*sw^4)*t^2) + 
     mh^2*(-9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (s^2*(-6 + 3*d^2 - 20*sw^2 + 32*sw^4 + d*(6 + 10*sw^2 - 16*sw^4)) + 
         s*(15*d - 3*d^2 - 8*(3 - 5*sw^2 + 8*sw^4))*t - 
         2*(3 - 20*sw^2 + 32*sw^4)*t^2)) + 
     mz^2*(-9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (2*s^2*(3 + 3*d^2 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
         s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
         2*(3 - 20*sw^2 + 32*sw^4)*t^2))))/(cw^6*(-1 + d)*mz^2*Pi^(2*d)*
    (mz^2 - s)^2*s^2*sw^4), ((-I/9)*2^(-5 - 2*d)*EL^6*mw^2*
    (((2*Pi)^d*(-4*mh^2*mz^2 + d*(mh^2 + mz^2 - s)^2)*(-1 + 4*sw^2)*
       (-3 + 8*sw^2))/(-1 + d) + 
     ((2*Pi)^d*(-4*mh^2*mz^2 + d*(mh^2 + mz^2 - s)^2)*
       (3 - 20*sw^2 + 32*sw^4))/(-1 + d) - 
     ((mh^2 + mz^2 - s)^2*(3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
         (s*(-3 - 10*sw^2 + 16*sw^4) + (-3 + 20*sw^2 - 32*sw^4)*t)))/s + 
     ((3*d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(2*s*(3 - 5*sw^2 + 8*sw^4) + 
          (3 - 20*sw^2 + 32*sw^4)*t))*(d*(mh^2 + mz^2 - s)^2*s + 2*mh^4*t + 
        2*(mz^2 - s)^2*t - 4*mh^2*(s*t + mz^2*(s + t))))/((-1 + d)*s^2) - 
     (2*(mh^4*(3*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(-3 - 10*sw^2 + 16*sw^4))*t + 
        mz^4*(3*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(-3 - 10*sw^2 + 16*sw^4))*t + 
        s^2*(3*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(-3 - 10*sw^2 + 16*sw^4))*t + 
        2^(1 + d)*mz^2*Pi^d*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
            4*d*(-3 - 5*sw^2 + 8*sw^4)) + 3*s*(18 - 11*d + 2*d^2 - 20*sw^2 + 
            32*sw^4)*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2) - 
        2^(1 + d)*mh^2*Pi^d*(s*(-6 + 3*d - 20*sw^2 + 32*sw^4)*t + 
          mz^2*(s*(-6 + 3*d - 20*sw^2 + 32*sw^4) + 3*d*t - 
            4*(3 - 5*sw^2 + 8*sw^4)*t))))/s + 
     ((mh^2 + mz^2 - s)*(-((mz^2 - s)*(3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (s*(-3 - 10*sw^2 + 16*sw^4) + (-3 + 20*sw^2 - 32*sw^4)*t))) + 
        mh^2*(-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
           (s*(3 + 3*d + 10*sw^2 - 16*sw^4) + (3 - 20*sw^2 + 32*sw^4)*t))))/
      s))/(cw^6*Pi^(2*d)*(mz^3 - mz*s)^2*sw^4)}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  ((I/9)*4^(-2 - d)*EL^6*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
      (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
       s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
       2*(3 - 20*sw^2 + 32*sw^4)*t^2)))/(cw^4*(-1 + d)*Pi^(2*d)*(mz^2 - s)^2*
    s), ((-I/9)*2^(-5 - 2*d)*EL^6*(3*d^2*(2*Pi)^d*s^3 + 
     2^(1 + d)*Pi^d*s*(2*s^2*(3 + 10*sw^2 - 16*sw^4 + 
         d*(-3 - 5*sw^2 + 8*sw^4)) + s*(-15*d + 3*d^2 + 
         8*(3 - 5*sw^2 + 8*sw^4))*t + 2*(3 - 20*sw^2 + 32*sw^4)*t^2) - 
     4*mw^2*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
         s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
         2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[W]))/
   (cw^4*(-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s), 
  ((-I/9)*2^(-5 - 2*d)*EL^6*(9*d^2*(2*Pi)^d*s^3 - 
     2^(1 + d)*Pi^d*s*(s^2*(-6 + 3*d^2 - 20*sw^2 + 32*sw^4 + 
         d*(6 + 10*sw^2 - 16*sw^4)) + s*(15*d - 3*d^2 - 
         8*(3 - 5*sw^2 + 8*sw^4))*t - 2*(3 - 20*sw^2 + 32*sw^4)*t^2) + 
     mw^2*(-3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (s^2*(6 + 3*d^2 + 20*sw^2 - 32*sw^4 + 2*d*(-3 - 5*sw^2 + 8*sw^4)) + 
         s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
         2*(3 - 20*sw^2 + 32*sw^4)*t^2)) - 
     mw^2*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
         s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
         2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[W]))/
   (cw^4*(-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s^2), 0, 0, 0, 0, 
  ((-I/9)*2^(-5 - 2*d)*EL^6*((mw^2 - s)*(-9*d^2*(2*Pi)^d*s^2 + 
       2^(1 + d)*Pi^d*(s^2*(-6 + 3*d^2 - 20*sw^2 + 32*sw^4 + 
           d*(6 + 10*sw^2 - 16*sw^4)) + s*(15*d - 3*d^2 - 
           8*(3 - 5*sw^2 + 8*sw^4))*t - 2*(3 - 20*sw^2 + 32*sw^4)*t^2)) + 
     mw^2*(-9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (2*s^2*(3 + 3*d^2 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
         s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
         2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[W]))/
   (cw^4*(-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s^2), 
  ((I/9)*2^(-5 - 2*d)*EL^6*
    (((3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-3 - 10*sw^2 + 16*sw^4) + 
          (-3 + 20*sw^2 - 32*sw^4)*t))*(mw^2 - s + mw^2*GaugeXi[W])^2)/s - 
     ((mw^2 - s + mw^2*GaugeXi[W])*((mw^2 - s)*(-9*d*(2*Pi)^d*s + 
          2^(1 + d)*Pi^d*(s*(3 + 3*d + 10*sw^2 - 16*sw^4) + 
            (3 - 20*sw^2 + 32*sw^4)*t)) - mw^2*(3*d*(2*Pi)^d*s + 
          2^(1 + d)*Pi^d*(s*(-3 - 10*sw^2 + 16*sw^4) + 
            (-3 + 20*sw^2 - 32*sw^4)*t))*GaugeXi[W]))/s - 
     ((2*Pi)^d*(-1 + 4*sw^2)*(-3 + 8*sw^2)*(d*(mw^2 - s)^2 + 
        2*((-2 + d)*mw^4 - d*mw^2*s)*GaugeXi[W] + d*mw^4*GaugeXi[W]^2))/
      (-1 + d) - ((2*Pi)^d*(3 - 20*sw^2 + 32*sw^4)*(d*(mw^2 - s)^2 + 
        2*((-2 + d)*mw^4 - d*mw^2*s)*GaugeXi[W] + d*mw^4*GaugeXi[W]^2))/
      (-1 + d) + (2*(mw^4*(3*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(-3 - 10*sw^2 + 
            16*sw^4))*t + s^2*(3*d*(2*Pi)^d + 2^(1 + d)*Pi^d*
           (-3 - 10*sw^2 + 16*sw^4))*t + 2^(1 + d)*mw^2*Pi^d*
         (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
          3*s*(18 - 11*d + 2*d^2 - 20*sw^2 + 32*sw^4)*t + 
          4*(3 - 20*sw^2 + 32*sw^4)*t^2) - 2^(1 + d)*mw^2*Pi^d*
         (s*(-6 + 3*d - 20*sw^2 + 32*sw^4)*t + 
          mw^2*(s*(-6 + 3*d - 20*sw^2 + 32*sw^4) + 3*d*t - 
            4*(3 - 5*sw^2 + 8*sw^4)*t))*GaugeXi[W] + 
        mw^4*(3*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(-3 - 10*sw^2 + 16*sw^4))*t*
         GaugeXi[W]^2))/s + 
     ((-3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(2*s*(3 - 5*sw^2 + 8*sw^4) + 
          (3 - 20*sw^2 + 32*sw^4)*t))*((mw^2 - s)^2*(d*s + 2*t) + 
        2*(mw^4*((-2 + d)*s - 2*t) - mw^2*s*(d*s + 2*t))*GaugeXi[W] + 
        mw^4*(d*s + 2*t)*GaugeXi[W]^2))/((-1 + d)*s^2)))/
   (cw^4*Pi^(2*d)*(mz^2 - s)^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, ((I/9)*4^(-2 - d)*EL^6*(3*d^2*(2*Pi)^d*s^2 + 
     2^(1 + d)*Pi^d*(2*s^2*(3 + 10*sw^2 - 16*sw^4 + 
         d*(-3 - 5*sw^2 + 8*sw^4)) + s*(-15*d + 3*d^2 + 
         8*(3 - 5*sw^2 + 8*sw^4))*t + 2*(3 - 20*sw^2 + 32*sw^4)*t^2)))/
   (cw^4*(-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s), 
  ((-I/9)*2^(-5 - 2*d)*EL^6*(3*d^2*(2*Pi)^d*s^3 + 
     2^(1 + d)*Pi^d*s*(2*s^2*(3 + 10*sw^2 - 16*sw^4 + 
         d*(-3 - 5*sw^2 + 8*sw^4)) + s*(-15*d + 3*d^2 + 
         8*(3 - 5*sw^2 + 8*sw^4))*t + 2*(3 - 20*sw^2 + 32*sw^4)*t^2) - 
     4*mw^2*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
         s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
         2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[W]))/
   (cw^4*(-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s), 
  ((-I/9)*2^(-5 - 2*d)*EL^6*(9*d^2*(2*Pi)^d*s^3 - 
     2^(1 + d)*Pi^d*s*(s^2*(-6 + 3*d^2 - 20*sw^2 + 32*sw^4 + 
         d*(6 + 10*sw^2 - 16*sw^4)) + s*(15*d - 3*d^2 - 
         8*(3 - 5*sw^2 + 8*sw^4))*t - 2*(3 - 20*sw^2 + 32*sw^4)*t^2) + 
     mw^2*(-3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (s^2*(6 + 3*d^2 + 20*sw^2 - 32*sw^4 + 2*d*(-3 - 5*sw^2 + 8*sw^4)) + 
         s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
         2*(3 - 20*sw^2 + 32*sw^4)*t^2)) - 
     mw^2*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
         s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
         2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[W]))/
   (cw^4*(-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s^2), 0, 0, 0, 0, 
  ((-I/9)*2^(-5 - 2*d)*EL^6*((mw^2 - s)*(-9*d^2*(2*Pi)^d*s^2 + 
       2^(1 + d)*Pi^d*(s^2*(-6 + 3*d^2 - 20*sw^2 + 32*sw^4 + 
           d*(6 + 10*sw^2 - 16*sw^4)) + s*(15*d - 3*d^2 - 
           8*(3 - 5*sw^2 + 8*sw^4))*t - 2*(3 - 20*sw^2 + 32*sw^4)*t^2)) + 
     mw^2*(-9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (2*s^2*(3 + 3*d^2 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
         s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
         2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[W]))/
   (cw^4*(-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s^2), 
  ((I/9)*2^(-5 - 2*d)*EL^6*
    (((3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-3 - 10*sw^2 + 16*sw^4) + 
          (-3 + 20*sw^2 - 32*sw^4)*t))*(mw^2 - s + mw^2*GaugeXi[W])^2)/s - 
     ((mw^2 - s + mw^2*GaugeXi[W])*((mw^2 - s)*(-9*d*(2*Pi)^d*s + 
          2^(1 + d)*Pi^d*(s*(3 + 3*d + 10*sw^2 - 16*sw^4) + 
            (3 - 20*sw^2 + 32*sw^4)*t)) - mw^2*(3*d*(2*Pi)^d*s + 
          2^(1 + d)*Pi^d*(s*(-3 - 10*sw^2 + 16*sw^4) + 
            (-3 + 20*sw^2 - 32*sw^4)*t))*GaugeXi[W]))/s - 
     ((2*Pi)^d*(-1 + 4*sw^2)*(-3 + 8*sw^2)*(d*(mw^2 - s)^2 + 
        2*((-2 + d)*mw^4 - d*mw^2*s)*GaugeXi[W] + d*mw^4*GaugeXi[W]^2))/
      (-1 + d) - ((2*Pi)^d*(3 - 20*sw^2 + 32*sw^4)*(d*(mw^2 - s)^2 + 
        2*((-2 + d)*mw^4 - d*mw^2*s)*GaugeXi[W] + d*mw^4*GaugeXi[W]^2))/
      (-1 + d) + (2*(mw^4*(3*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(-3 - 10*sw^2 + 
            16*sw^4))*t + s^2*(3*d*(2*Pi)^d + 2^(1 + d)*Pi^d*
           (-3 - 10*sw^2 + 16*sw^4))*t + 2^(1 + d)*mw^2*Pi^d*
         (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
          3*s*(18 - 11*d + 2*d^2 - 20*sw^2 + 32*sw^4)*t + 
          4*(3 - 20*sw^2 + 32*sw^4)*t^2) - 2^(1 + d)*mw^2*Pi^d*
         (s*(-6 + 3*d - 20*sw^2 + 32*sw^4)*t + 
          mw^2*(s*(-6 + 3*d - 20*sw^2 + 32*sw^4) + 3*d*t - 
            4*(3 - 5*sw^2 + 8*sw^4)*t))*GaugeXi[W] + 
        mw^4*(3*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(-3 - 10*sw^2 + 16*sw^4))*t*
         GaugeXi[W]^2))/s + 
     ((-3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(2*s*(3 - 5*sw^2 + 8*sw^4) + 
          (3 - 20*sw^2 + 32*sw^4)*t))*((mw^2 - s)^2*(d*s + 2*t) + 
        2*(mw^4*((-2 + d)*s - 2*t) - mw^2*s*(d*s + 2*t))*GaugeXi[W] + 
        mw^4*(d*s + 2*t)*GaugeXi[W]^2))/((-1 + d)*s^2)))/
   (cw^4*Pi^(2*d)*(mz^2 - s)^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, ((-I/9)*2^(1 - d)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
   ((-1 + d)*mw^4*Pi^d*s), 
  ((I/9)*EL^6*(d*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*(-s^2 + 2*s*t + 2*t^2) - 
     2^(2 + d)*mw^2*Pi^d*((-2 + d)*s^2 + 4*s*t + 4*t^2)*GaugeXi[W]))/
   ((-1 + d)*mw^4*(2*Pi)^(2*d)*s), 
  ((-I/9)*2^(1 - d)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
    (-4*mw^2*s + 4*d^2*s^2 - d*(mw^4 - 5*mw^2*s + 7*s^2) + 
     d*(mw^2 - s)^2*GaugeXi[W]))/((-1 + d)*d*mw^2*Pi^d*s^4), 
  ((-I/9)*EL^6*(-(d*(2*Pi)^d*s^5) + 2^(1 + d)*Pi^d*s^3*
      (s^2 - 2*s*t - 2*t^2) + 2^(4 + d)*(-1 + d)*mw^6*Pi^d*
      ((-2 + d)*s^2 + 4*s*t + 4*t^2) + 2^(2 + d)*(-11 + 7*d)*mw^4*Pi^d*s*
      ((-2 + d)*s^2 + 4*s*t + 4*t^2) - 2^(3 + d)*(-2 + d)*mw^2*Pi^d*s^2*
      ((-2 + d)*s^2 + 4*s*t + 4*t^2)))/((-1 + d)*mw^4*(2*Pi)^(2*d)*s^3), 0, 
  0, 0, ((I/9)*2^(1 - d)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
    (-(d*(mw^2 - s)*(mw^4 + 2*(-3 + 2*d)*mw^2*s + s^2)) + 
     (-4*mw^4*s - 4*d^2*mw^4*s + d*mw^2*(mw^4 + 6*mw^2*s + s^2))*GaugeXi[W]))/
   ((-1 + d)*d*mw^4*Pi^d*s^4), ((-I/9)*2^(1 - d)*EL^6*(mw^2 - s)^2*
    ((-2 + d)*s^2 + 4*s*t + 4*t^2)*(mw^4 + 2*(-3 + 2*d)*mw^2*s + s^2 - 
     2*mw^2*(mw^2 + s)*GaugeXi[W] + mw^4*GaugeXi[W]^2))/
   ((-1 + d)*mw^4*Pi^d*s^4), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, ((-I/9)*2^(-1 - d)*EL^6*(-1 + 4*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
   ((-1 + d)*mw^4*Pi^d*(mz^2 - s)*sw^2), 
  ((I/9)*4^(-1 - d)*EL^6*(-(d*(2*Pi)^d*s^3) + 2^(1 + d)*Pi^d*s*
      (s^2*(1 + 2*(-2 + d)*sw^2) + 2*s*(-1 + 4*sw^2)*t + 
       2*(-1 + 4*sw^2)*t^2) - 2^(2 + d)*mw^2*Pi^d*(-1 + 4*sw^2)*
      ((-2 + d)*s^2 + 4*s*t + 4*t^2)*GaugeXi[W]))/
   ((-1 + d)*mw^4*Pi^(2*d)*(mz^2 - s)*sw^2), 
  ((I/9)*2^(-1 - d)*EL^6*(-1 + 4*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
    (-4*mw^2*s + 4*d^2*s^2 - d*(mw^4 - 5*mw^2*s + 7*s^2) + 
     d*(mw^2 - s)^2*GaugeXi[W]))/((-1 + d)*d*mw^2*Pi^d*s^3*(-mz^2 + s)*sw^2), 
  ((I/9)*2^(-2 - d)*EL^6*(4*mw^2 - s)*(4*(-1 + d)*mw^4 + 
     4*(-3 + 2*d)*mw^2*s + s^2)*(-1 + 4*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
   ((-1 + d)*mw^4*Pi^d*s^2*(-mz^2 + s)*sw^2), 0, 0, 0, 
  ((-I/9)*2^(-1 - d)*EL^6*(-1 + 4*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
    (-(d*(mw^2 - s)*(mw^4 + 2*(-3 + 2*d)*mw^2*s + s^2)) + 
     (-4*mw^4*s - 4*d^2*mw^4*s + d*mw^2*(mw^4 + 6*mw^2*s + s^2))*GaugeXi[W]))/
   ((-1 + d)*d*mw^4*Pi^d*s^3*(-mz^2 + s)*sw^2), 
  ((I/9)*2^(-1 - d)*EL^6*(mw^2 - s)^2*(-1 + 4*sw^2)*
    ((-2 + d)*s^2 + 4*s*t + 4*t^2)*(mw^4 + 2*(-3 + 2*d)*mw^2*s + s^2 - 
     2*mw^2*(mw^2 + s)*GaugeXi[W] + mw^4*GaugeXi[W]^2))/
   ((-1 + d)*mw^4*Pi^d*s^3*(-mz^2 + s)*sw^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, ((-I/9)*2^(-2 - d)*EL^6*(-3 + 8*sw^2)*
    ((-2 + d)*s^2 + 4*s*t + 4*t^2))/((-1 + d)*mw^4*Pi^d*(mz^2 - s)*sw^2), 
  ((I/9)*2^(-3 - 2*d)*EL^6*(-3*d*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
      (s^2*(3 + 4*(-2 + d)*sw^2) + 2*s*(-3 + 8*sw^2)*t + 
       2*(-3 + 8*sw^2)*t^2) - 2^(2 + d)*mw^2*Pi^d*(-3 + 8*sw^2)*
      ((-2 + d)*s^2 + 4*s*t + 4*t^2)*GaugeXi[W]))/
   ((-1 + d)*mw^4*Pi^(2*d)*(mz^2 - s)*sw^2), 
  ((I/9)*2^(-2 - 3*d)*EL^6*(-3 + 8*sw^2)*(4^(1 + d)*d^3*Pi^(2*d)*s^4 - 
     d^2*(2*Pi)^(2*d)*s^2*(mw^4 - 5*mw^2*s + 15*s^2 - 16*s*t - 16*t^2) + 
     2^(3 + 2*d)*mw^2*Pi^(2*d)*s*(s^2 - 2*s*t - 2*t^2) + 
     2^(1 + 2*d)*d*Pi^(2*d)*(mw^4*(s^2 - 2*s*t - 2*t^2) + 
       7*s^2*(s^2 - 2*s*t - 2*t^2) + mw^2*s*(-7*s^2 + 10*s*t + 10*t^2)) + 
     d*(2*Pi)^(2*d)*(mw^2 - s)^2*((-2 + d)*s^2 + 4*s*t + 4*t^2)*GaugeXi[W]))/
   ((-1 + d)*d*mw^2*Pi^(3*d)*s^3*(-mz^2 + s)*sw^2), 
  ((I/9)*2^(-3 - d)*EL^6*(4*mw^2 - s)*(4*(-1 + d)*mw^4 + 
     4*(-3 + 2*d)*mw^2*s + s^2)*(-3 + 8*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
   ((-1 + d)*mw^4*Pi^d*s^2*(-mz^2 + s)*sw^2), 0, 0, 0, 
  ((I/9)*4^(-1 - 2*d)*EL^6*(-3 + 8*sw^2)*
    (d*(2*Pi)^(3*d)*(mw^2 - s)*(mw^4 + 2*(-3 + 2*d)*mw^2*s + s^2)*
      ((-2 + d)*s^2 + 4*s*t + 4*t^2) + 
     mw^2*(2^(2 + 3*d)*d^3*mw^2*Pi^(3*d)*s^3 - 8^(1 + d)*mw^2*Pi^(3*d)*s*
        (s^2 - 2*s*t - 2*t^2) - d^2*(2*Pi)^(3*d)*s*(mw^4*s + s^3 + 
         2*mw^2*(7*s^2 - 8*s*t - 8*t^2)) + 2^(1 + 3*d)*d*Pi^(3*d)*
        (4*mw^2*s*(2*s^2 - 3*s*t - 3*t^2) + mw^4*(s^2 - 2*s*t - 2*t^2) + 
         s^2*(s^2 - 2*s*t - 2*t^2)))*GaugeXi[W]))/
   ((-1 + d)*d*mw^4*Pi^(4*d)*s^3*(-mz^2 + s)*sw^2), 
  ((I/9)*2^(-2 - d)*EL^6*(mw^2 - s)^2*(-3 + 8*sw^2)*
    ((-2 + d)*s^2 + 4*s*t + 4*t^2)*(mw^4 + 2*(-3 + 2*d)*mw^2*s + s^2 - 
     2*mw^2*(mw^2 + s)*GaugeXi[W] + mw^4*GaugeXi[W]^2))/
   ((-1 + d)*mw^4*Pi^d*s^3*(-mz^2 + s)*sw^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, ((I/9)*4^(-2 - d)*EL^6*s*(-3*d^2*(2*Pi)^d*s^2 - 
     2^(1 + d)*Pi^d*(2*s^2*(3 + 10*sw^2 - 16*sw^4 + 
         d*(-3 - 5*sw^2 + 8*sw^4)) + s*(-15*d + 3*d^2 + 
         8*(3 - 5*sw^2 + 8*sw^4))*t + 2*(3 - 20*sw^2 + 32*sw^4)*t^2) + 
     2^(1 + d)*Pi^d*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
         4*d*(-3 - 5*sw^2 + 8*sw^4)) + 2*s*(-15*d + 3*d^2 + 
         8*(3 - 5*sw^2 + 8*sw^4))*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2)*
      GaugeXi[W] - (3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
         s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
         2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[W]^2))/
   ((-1 + d)*mw^4*Pi^(2*d)*(mz^2 - s)^2*sw^4*(-1 + GaugeXi[W])^2), 
  ((-I/9)*2^(-5 - 2*d)*EL^6*s*
    (-(s*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
          s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          2*(3 - 20*sw^2 + 32*sw^4)*t^2))) + 
     2*(3*d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
        (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
         s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
         2*(3 - 20*sw^2 + 32*sw^4)*t^2) + 2^(1 + d)*mw^2*Pi^d*
        (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
         2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
         4*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[W] - 
     (3*d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
        (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
         s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
         2*(3 - 20*sw^2 + 32*sw^4)*t^2) + 2^(3 + d)*mw^2*Pi^d*
        (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
         2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
         4*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[W]^2 + 
     4*mw^2*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
         s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
         2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[W]^3))/
   ((-1 + d)*mw^4*Pi^(2*d)*(mz^2 - s)^2*sw^4*(-1 + GaugeXi[W])^2), 
  ((-I/9)*2^(-4 - 8*d)*EL^6*(3*2^(2 + 7*d)*d^4*Pi^(7*d)*s^3*(s + 2*t) + 
     2^(4 + 7*d)*mw^2*Pi^(7*d)*s*(s^2*(-3 - 10*sw^2 + 16*sw^4) - 
       4*s*(3 - 5*sw^2 + 8*sw^4)*t + (-3 + 20*sw^2 - 32*sw^4)*t^2) + 
     d^3*(2*Pi)^(7*d)*s*(s^2*(s*(-69 - 80*sw^2 + 128*sw^4) - 162*t) - 
       3*mw^4*(s + 2*t) + 15*mw^2*s*(s + 2*t)) - 2^(1 + 7*d)*d^2*Pi^(7*d)*s*
      (mw^4*(2*s*(-3 - 5*sw^2 + 8*sw^4) - 15*t) + 
       mw^2*s*(s*(36 + 50*sw^2 - 80*sw^4) + 87*t) + 
       s*(6*s^2*(-11 - 25*sw^2 + 40*sw^4) + s*(-201 + 160*sw^2 - 256*sw^4)*
          t - 8*(3 - 20*sw^2 + 32*sw^4)*t^2)) - 2^(2 + 7*d)*d*Pi^(7*d)*
      (mw^4*(s^2*(3 + 10*sw^2 - 16*sw^4) + 4*s*(3 - 5*sw^2 + 8*sw^4)*t + 
         (3 - 20*sw^2 + 32*sw^4)*t^2) + 7*s^2*(s^2*(3 + 10*sw^2 - 16*sw^4) + 
         4*s*(3 - 5*sw^2 + 8*sw^4)*t + (3 - 20*sw^2 + 32*sw^4)*t^2) - 
       mw^2*s*(s^2*(27 + 70*sw^2 - 112*sw^4) + 10*s*(9 - 10*sw^2 + 16*sw^4)*
          t + 5*(3 - 20*sw^2 + 32*sw^4)*t^2)) + 
     (-3*2^(3 + 7*d)*d^4*Pi^(7*d)*s^3*(s + 2*t) - 2^(5 + 7*d)*mw^2*Pi^(7*d)*s*
        (s^2*(-3 - 10*sw^2 + 16*sw^4) - 4*s*(3 - 5*sw^2 + 8*sw^4)*t + 
         (-3 + 20*sw^2 - 32*sw^4)*t^2) + d^3*(2*Pi)^(7*d)*s*
        (9*mw^4*(s + 2*t) - 36*mw^2*s*(s + 2*t) + 
         s^2*(s*(141 + 160*sw^2 - 256*sw^4) + 330*t)) + 
       2*d^2*s*(-3*2^(2 + 7*d)*mw^2*Pi^(7*d)*s*(s*(-7 - 10*sw^2 + 16*sw^4) - 
           17*t) + 3*mw^4*(2*Pi)^(7*d)*(2*s*(-3 - 5*sw^2 + 8*sw^4) - 15*t) + 
         (2*Pi)^(7*d)*s*(2*s^2*(-69 - 155*sw^2 + 248*sw^4) + 
           s*(-417 + 320*sw^2 - 512*sw^4)*t - 16*(3 - 20*sw^2 + 32*sw^4)*
            t^2)) + 4*d*(2^(2 + 7*d)*mw^2*Pi^(7*d)*s*
          (s^2*(-15 - 40*sw^2 + 64*sw^4) - 3*s*(17 - 20*sw^2 + 32*sw^4)*t - 
           3*(3 - 20*sw^2 + 32*sw^4)*t^2) + 3*mw^4*(2*Pi)^(7*d)*
          (s^2*(3 + 10*sw^2 - 16*sw^4) + 4*s*(3 - 5*sw^2 + 8*sw^4)*t + 
           (3 - 20*sw^2 + 32*sw^4)*t^2) + 15*(2*Pi)^(7*d)*s^2*
          (s^2*(3 + 10*sw^2 - 16*sw^4) + 4*s*(3 - 5*sw^2 + 8*sw^4)*t + 
           (3 - 20*sw^2 + 32*sw^4)*t^2)))*GaugeXi[W] + 
     (3*2^(2 + 7*d)*d^4*Pi^(7*d)*s^3*(s + 2*t) + 2^(4 + 7*d)*mw^2*Pi^(7*d)*s*
        (s^2*(-3 - 10*sw^2 + 16*sw^4) - 4*s*(3 - 5*sw^2 + 8*sw^4)*t + 
         (-3 + 20*sw^2 - 32*sw^4)*t^2) + d^3*(2*Pi)^(7*d)*s*
        (s^2*(s*(-75 - 80*sw^2 + 128*sw^4) - 174*t) - 9*mw^4*(s + 2*t) + 
         27*mw^2*s*(s + 2*t)) - 2^(1 + 7*d)*d^2*Pi^(7*d)*s*
        (3*mw^4*(2*s*(-3 - 5*sw^2 + 8*sw^4) - 15*t) + 
         3*mw^2*s*(s*(20 + 30*sw^2 - 48*sw^4) + 49*t) + 
         s*(2*s^2*(-39 - 85*sw^2 + 136*sw^4) + s*(-231 + 160*sw^2 - 256*sw^4)*
            t - 8*(3 - 20*sw^2 + 32*sw^4)*t^2)) - 2^(2 + 7*d)*d*Pi^(7*d)*
        (3*mw^4*(s^2*(3 + 10*sw^2 - 16*sw^4) + 4*s*(3 - 5*sw^2 + 8*sw^4)*t + 
           (3 - 20*sw^2 + 32*sw^4)*t^2) + 
         9*s^2*(s^2*(3 + 10*sw^2 - 16*sw^4) + 4*s*(3 - 5*sw^2 + 8*sw^4)*t + 
           (3 - 20*sw^2 + 32*sw^4)*t^2) - 
         mw^2*s*(s^2*(39 + 110*sw^2 - 176*sw^4) + 
           6*s*(23 - 30*sw^2 + 48*sw^4)*t + 9*(3 - 20*sw^2 + 32*sw^4)*t^2)))*
      GaugeXi[W]^2 + d*(2*Pi)^(7*d)*(mw^2 - s)^2*
      (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
       2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
       4*(3 - 20*sw^2 + 32*sw^4)*t^2)*GaugeXi[W]^3))/
   ((-1 + d)*d*mw^2*Pi^(8*d)*(mz^2 - s)^2*s^2*sw^4*(-1 + GaugeXi[W])^2), 
  ((-I/9)*2^(-5 - 6*d)*EL^6*
    ((2^(1 + 5*d)*Pi^(5*d)*(4*(-1 + d)*mw^4 - 4*mw^2*s + s^2)*
       (4*(-1 + d)*mw^4 - 4*d*mw^2*s + d*s^2)*(3 - 20*sw^2 + 32*sw^4))/
      (-1 + d) + 2^(1 + 5*d)*Pi^(5*d)*(s^3*(6 - 3*d + 20*sw^2 - 32*sw^4)*t + 
       (8*(-1 + d)*mw^8*(s*(-6 + 3*d - 20*sw^2 + 32*sw^4) - 
          2*(3 - 20*sw^2 + 32*sw^4)*t))/s - 
       8*mw^6*(s*(-6 + 3*d - 20*sw^2 + 32*sw^4) - 
         2*(9 + 3*d^2 + d*(-9 - 20*sw^2 + 32*sw^4))*t) - 
       4*mw^2*s*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
           4*d*(-3 - 5*sw^2 + 8*sw^4)) + 2*s*(30 - 18*d + 3*d^2 - 20*sw^2 + 
           32*sw^4)*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2) + 
       2*mw^4*(s^2*(90 + 24*d^2 + 300*sw^2 - 480*sw^4 + 
           d*(-93 - 160*sw^2 + 256*sw^4)) + 
         2*s*(21*d^2 + d*(-123 + 20*sw^2 - 32*sw^4) + 
           3*(69 - 80*sw^2 + 128*sw^4))*t + 32*(3 - 20*sw^2 + 32*sw^4)*
          t^2)) - ((2*Pi)^(3*d)*(-2*mw^2 + s)^2*(4*(-1 + d)*mw^4 - 4*mw^2*s + 
        s^2)*(s*(-6 + 3*d - 20*sw^2 + 32*sw^4) - 2*(3 - 20*sw^2 + 32*sw^4)*t)*
       ((2*Pi)^(2*d) - 2^(1 + 2*d)*Pi^(2*d)*GaugeXi[W] + 
        (2*Pi)^(2*d)*GaugeXi[W]^2))/(s*(-1 + GaugeXi[W])^2) + 
     ((2*Pi)^(2*d)*(4*(-1 + d)*mw^4 - 4*mw^2*s + s^2)*
       (3*d*s - 4*s*(3 - 5*sw^2 + 8*sw^4) - 2*(3 - 20*sw^2 + 32*sw^4)*t)*
       (4*(-1 + d)*mw^4 - 4*mw^2*(d*s + 2*t) + s*(d*s + 2*t))*
       ((2*Pi)^(3*d) - 2^(1 + 3*d)*Pi^(3*d)*GaugeXi[W] + 
        (2*Pi)^(3*d)*GaugeXi[W]^2))/((-1 + d)*s*(-1 + GaugeXi[W])^2) - 
     ((-2*mw^2 + s)^2*(4*(-1 + d)*mw^4 - 4*mw^2*s + s^2)*
       (s*(-6 + 3*d - 20*sw^2 + 32*sw^4) - 2*(3 - 20*sw^2 + 32*sw^4)*t)*
       ((2*Pi)^(5*d) - 2^(1 + 5*d)*Pi^(5*d)*GaugeXi[W] + 
        (2*Pi)^(5*d)*GaugeXi[W]^2))/(s*(-1 + GaugeXi[W])^2)))/
   (mw^4*Pi^(6*d)*(mz^2 - s)^2*sw^4), 0, 0, 0, 
  ((-I/9)*2^(-4 - 7*d)*EL^6*
    (d*(mw^2 - s)*(mw^4*(2*Pi)^(6*d)*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
           4*d*(-3 - 5*sw^2 + 8*sw^4)) + 2*s*(-15*d + 3*d^2 + 
           8*(3 - 5*sw^2 + 8*sw^4))*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2) + 
       (2*Pi)^(6*d)*s^2*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
           4*d*(-3 - 5*sw^2 + 8*sw^4)) + 2*s*(-15*d + 3*d^2 + 
           8*(3 - 5*sw^2 + 8*sw^4))*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2) + 
       2*mw^2*s*(-33*d^2*(2*Pi)^(6*d)*s^2 + 2^(1 + 6*d)*Pi^(6*d)*
          (s^2*(-18 + 3*d^3 - 60*sw^2 + 96*sw^4 + 4*d^2*sw^2*(-5 + 8*sw^2) + 
             d*(30 + 70*sw^2 - 112*sw^4)) + s*(-39*d^2 + 6*d^3 - 
             24*(3 - 5*sw^2 + 8*sw^4) + d*(93 - 80*sw^2 + 128*sw^4))*t + 
           2*(-3 + 2*d)*(3 - 20*sw^2 + 32*sw^4)*t^2))) + 
     (-3*4^(1 + 3*d)*d^4*mw^2*Pi^(6*d)*(mw^2 - 2*s)*s^2*(s + 2*t) - 
       4^(2 + 3*d)*mw^4*Pi^(6*d)*s*(s^2*(-3 - 10*sw^2 + 16*sw^4) - 
         4*s*(3 - 5*sw^2 + 8*sw^4)*t + (-3 + 20*sw^2 - 32*sw^4)*t^2) + 
       d^3*(2*Pi)^(6*d)*s*(mw^2*s^2*(s*(-141 - 160*sw^2 + 256*sw^4) - 
           330*t) - 9*mw^6*(s + 2*t) + 6*s^3*(s + 2*t) + 
         8*mw^4*s*(s*(9 + 10*sw^2 - 16*sw^4) + 21*t)) + 
       2*d^2*s*(-3*mw^6*(2*Pi)^(6*d)*(2*s*(-3 - 5*sw^2 + 8*sw^4) - 15*t) + 
         2^(1 + 6*d)*Pi^(6*d)*s^3*(2*s*(-3 - 5*sw^2 + 8*sw^4) - 15*t) - 
         mw^2*(2*Pi)^(6*d)*s*(2*s^2*(-69 - 155*sw^2 + 248*sw^4) + 
           s*(-417 + 320*sw^2 - 512*sw^4)*t - 16*(3 - 20*sw^2 + 32*sw^4)*
            t^2) + 2^(1 + 6*d)*mw^4*Pi^(6*d)*
          (s^2*(-33 - 80*sw^2 + 128*sw^4) - 2*s*(51 - 40*sw^2 + 64*sw^4)*t - 
           4*(3 - 20*sw^2 + 32*sw^4)*t^2)) + 
       4*d*(-(2^(1 + 6*d)*Pi^(6*d)*s^3*(s^2*(-3 - 10*sw^2 + 16*sw^4) - 
            4*s*(3 - 5*sw^2 + 8*sw^4)*t + (-3 + 20*sw^2 - 32*sw^4)*t^2)) - 
         2^(1 + 6*d)*mw^4*Pi^(6*d)*s*(6*s^2*(-1 - 5*sw^2 + 8*sw^4) + 
           s*(-33 + 80*sw^2 - 128*sw^4)*t - 4*(3 - 20*sw^2 + 32*sw^4)*t^2) - 
         3*mw^6*(2*Pi)^(6*d)*(s^2*(3 + 10*sw^2 - 16*sw^4) + 
           4*s*(3 - 5*sw^2 + 8*sw^4)*t + (3 - 20*sw^2 + 32*sw^4)*t^2) - 
         15*mw^2*(2*Pi)^(6*d)*s^2*(s^2*(3 + 10*sw^2 - 16*sw^4) + 
           4*s*(3 - 5*sw^2 + 8*sw^4)*t + (3 - 20*sw^2 + 32*sw^4)*t^2)))*
      GaugeXi[W] - (3*4^(1 + 3*d)*d^4*mw^2*Pi^(6*d)*s^2*(mw^2 + s)*
        (s + 2*t) - 2^(5 + 6*d)*mw^4*Pi^(6*d)*s*
        (s^2*(-3 - 10*sw^2 + 16*sw^4) - 4*s*(3 - 5*sw^2 + 8*sw^4)*t + 
         (-3 + 20*sw^2 - 32*sw^4)*t^2) - d^3*(2*Pi)^(6*d)*s*
        (9*mw^6*(s + 2*t) - 3*s^3*(s + 2*t) + 
         mw^4*s*(s*(63 + 80*sw^2 - 128*sw^4) + 150*t) + 
         mw^2*s^2*(s*(75 + 80*sw^2 - 128*sw^4) + 174*t)) - 
       4^(1 + 3*d)*d*Pi^(6*d)*(3*mw^6*(s^2*(3 + 10*sw^2 - 16*sw^4) + 
           4*s*(3 - 5*sw^2 + 8*sw^4)*t + (3 - 20*sw^2 + 32*sw^4)*t^2) + 
         9*mw^2*s^2*(s^2*(3 + 10*sw^2 - 16*sw^4) + 4*s*(3 - 5*sw^2 + 8*sw^4)*
            t + (3 - 20*sw^2 + 32*sw^4)*t^2) - 
         s^3*(s^2*(3 + 10*sw^2 - 16*sw^4) + 4*s*(3 - 5*sw^2 + 8*sw^4)*t + 
           (3 - 20*sw^2 + 32*sw^4)*t^2) + 
         mw^4*s*(s^2*(39 + 90*sw^2 - 144*sw^4) + 20*s*(6 - 5*sw^2 + 8*sw^4)*
            t + 5*(3 - 20*sw^2 + 32*sw^4)*t^2)) + 2^(1 + 6*d)*d^2*Pi^(6*d)*s*
        (s^3*(2*s*(-3 - 5*sw^2 + 8*sw^4) - 15*t) + 
         mw^6*(-6*s*(-3 - 5*sw^2 + 8*sw^4) + 45*t) + 
         mw^4*(s^2*(66 + 130*sw^2 - 208*sw^4) + s*(195 - 160*sw^2 + 256*sw^4)*
            t + 8*(3 - 20*sw^2 + 32*sw^4)*t^2) + 
         mw^2*s*(s^2*(78 + 170*sw^2 - 272*sw^4) + 
           s*(231 - 160*sw^2 + 256*sw^4)*t + 8*(3 - 20*sw^2 + 32*sw^4)*t^2)))*
      GaugeXi[W]^2 - mw^2*(-3*4^(1 + 3*d)*d^4*mw^2*Pi^(6*d)*s^2*(s + 2*t) + 
       4^(2 + 3*d)*mw^2*Pi^(6*d)*s*(s^2*(-3 - 10*sw^2 + 16*sw^4) - 
         4*s*(3 - 5*sw^2 + 8*sw^4)*t + (-3 + 20*sw^2 - 32*sw^4)*t^2) + 
       d^3*(2*Pi)^(6*d)*s*(3*mw^4*(s + 2*t) + 3*s^2*(s + 2*t) + 
         2*mw^2*s*(s*(33 + 40*sw^2 - 64*sw^4) + 78*t)) + 
       2*d^2*s*(mw^4*(2*Pi)^(6*d)*(2*s*(-3 - 5*sw^2 + 8*sw^4) - 15*t) + 
         (2*Pi)^(6*d)*s^2*(2*s*(-3 - 5*sw^2 + 8*sw^4) - 15*t) + 
         2^(1 + 6*d)*mw^2*Pi^(6*d)*(s^2*(-33 - 70*sw^2 + 112*sw^4) + 
           s*(-99 + 80*sw^2 - 128*sw^4)*t - 4*(3 - 20*sw^2 + 32*sw^4)*t^2)) + 
       4*d*(-(2^(1 + 6*d)*mw^2*Pi^(6*d)*s*(s^2*(-15 - 40*sw^2 + 64*sw^4) - 
            3*s*(17 - 20*sw^2 + 32*sw^4)*t - 3*(3 - 20*sw^2 + 32*sw^4)*
             t^2)) + mw^4*(2*Pi)^(6*d)*(s^2*(3 + 10*sw^2 - 16*sw^4) + 
           4*s*(3 - 5*sw^2 + 8*sw^4)*t + (3 - 20*sw^2 + 32*sw^4)*t^2) + 
         (2*Pi)^(6*d)*s^2*(s^2*(3 + 10*sw^2 - 16*sw^4) + 
           4*s*(3 - 5*sw^2 + 8*sw^4)*t + (3 - 20*sw^2 + 32*sw^4)*t^2)))*
      GaugeXi[W]^3))/((-1 + d)*d*mw^4*Pi^(7*d)*(mz^2 - s)^2*s^2*sw^4*
    (-1 + GaugeXi[W])^2), 
  ((-I/9)*EL^6*(mw^8*(2*Pi)^(3*d)*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
         4*d*(-3 - 5*sw^2 + 8*sw^4)) + 2*s*(-15*d + 3*d^2 + 
         8*(3 - 5*sw^2 + 8*sw^4))*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2) + 
     (2*Pi)^(3*d)*s^4*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
         4*d*(-3 - 5*sw^2 + 8*sw^4)) + 2*s*(-15*d + 3*d^2 + 
         8*(3 - 5*sw^2 + 8*sw^4))*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2) + 
     4*mw^6*s*(3*d^3*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
        (s^2*(-12 - 40*sw^2 + 64*sw^4 + d*(18 + 40*sw^2 - 64*sw^4) + 
           d^2*(-9 - 10*sw^2 + 16*sw^4)) + s*(-21*d^2 + 3*d^3 - 
           16*(3 - 5*sw^2 + 8*sw^4) + d*(54 - 40*sw^2 + 64*sw^4))*t + 
         2*(-2 + d)*(3 - 20*sw^2 + 32*sw^4)*t^2)) + 
     4*mw^2*s^3*(3*d^3*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
        (s^2*(-12 - 40*sw^2 + 64*sw^4 + d*(18 + 40*sw^2 - 64*sw^4) + 
           d^2*(-9 - 10*sw^2 + 16*sw^4)) + s*(-21*d^2 + 3*d^3 - 
           16*(3 - 5*sw^2 + 8*sw^4) + d*(54 - 40*sw^2 + 64*sw^4))*t + 
         2*(-2 + d)*(3 - 20*sw^2 + 32*sw^4)*t^2)) - 
     2*mw^4*s^2*(-69*d^2*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
        (2*s^2*(3*d^3 + 4*d^2*sw^2*(-5 + 8*sw^2) + 
           d*(33 + 75*sw^2 - 120*sw^4) + 7*(-3 - 10*sw^2 + 16*sw^4)) + 
         s*(-81*d^2 + 12*d^3 - 56*(3 - 5*sw^2 + 8*sw^4) + 
           d*(201 - 160*sw^2 + 256*sw^4))*t + 2*(-7 + 4*d)*
          (3 - 20*sw^2 + 32*sw^4)*t^2)) - 
     2*(2^(1 + 3*d)*mw^8*Pi^(3*d)*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
           4*d*(-3 - 5*sw^2 + 8*sw^4)) + 2*s*(-15*d + 3*d^2 + 
           8*(3 - 5*sw^2 + 8*sw^4))*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2) + 
       (2*Pi)^(3*d)*s^4*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
           4*d*(-3 - 5*sw^2 + 8*sw^4)) + 2*s*(-15*d + 3*d^2 + 
           8*(3 - 5*sw^2 + 8*sw^4))*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2) + 
       mw^6*s*(-75*d^2*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
          (2*s^2*(3*d^3 + 4*d^2*sw^2*(-5 + 8*sw^2) + d*(39 + 85*sw^2 - 136*
                sw^4) + 9*(-3 - 10*sw^2 + 16*sw^4)) + 
           s*(-87*d^2 + 12*d^3 - 72*(3 - 5*sw^2 + 8*sw^4) + 
             d*(231 - 160*sw^2 + 256*sw^4))*t + 2*(-9 + 4*d)*
            (3 - 20*sw^2 + 32*sw^4)*t^2)) + 
       mw^2*s^3*(-69*d^2*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
          (2*s^2*(3*d^3 + 4*d^2*sw^2*(-5 + 8*sw^2) + d*(33 + 75*sw^2 - 120*
                sw^4) + 7*(-3 - 10*sw^2 + 16*sw^4)) + 
           s*(-81*d^2 + 12*d^3 - 56*(3 - 5*sw^2 + 8*sw^4) + 
             d*(201 - 160*sw^2 + 256*sw^4))*t + 2*(-7 + 4*d)*
            (3 - 20*sw^2 + 32*sw^4)*t^2)) - 
       mw^4*s^2*(-135*d^2*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
          (2*s^2*(6*d^3 + 8*d^2*sw^2*(-5 + 8*sw^2) + d*(63 + 145*sw^2 - 232*
                sw^4) + 13*(-3 - 10*sw^2 + 16*sw^4)) + 
           s*(-159*d^2 + 24*d^3 - 104*(3 - 5*sw^2 + 8*sw^4) + 
             d*(387 - 320*sw^2 + 512*sw^4))*t + 2*(-13 + 8*d)*
            (3 - 20*sw^2 + 32*sw^4)*t^2)))*GaugeXi[W] + 
     (3*2^(1 + 3*d)*mw^8*Pi^(3*d)*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
           4*d*(-3 - 5*sw^2 + 8*sw^4)) + 2*s*(-15*d + 3*d^2 + 
           8*(3 - 5*sw^2 + 8*sw^4))*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2) + 
       (2*Pi)^(3*d)*s^4*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
           4*d*(-3 - 5*sw^2 + 8*sw^4)) + 2*s*(-15*d + 3*d^2 + 
           8*(3 - 5*sw^2 + 8*sw^4))*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2) + 
       4*mw^2*s^3*(3*(-5 + d)*d^2*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
          (2*s^2*(-3 - 10*sw^2 + 16*sw^4 + d^2*sw^2*(-5 + 8*sw^2) + 
             d*(6 + 15*sw^2 - 24*sw^4)) + s*(-18*d^2 + 3*d^3 - 
             8*(3 - 5*sw^2 + 8*sw^4) + d*(39 - 40*sw^2 + 64*sw^4))*t + 
           2*(-1 + d)*(3 - 20*sw^2 + 32*sw^4)*t^2)) + 
       2*mw^6*s*(-45*d^2*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
          (s^2*(3*d^3 + 4*d^2*sw^2*(-5 + 8*sw^2) + d*(54 + 110*sw^2 - 176*
                sw^4) + 14*(-3 - 10*sw^2 + 16*sw^4)) + 
           s*(-51*d^2 + 6*d^3 - 56*(3 - 5*sw^2 + 8*sw^4) + 
             d*(153 - 80*sw^2 + 128*sw^4))*t + 2*(-7 + 2*d)*
            (3 - 20*sw^2 + 32*sw^4)*t^2)) - 
       mw^4*s^2*(-129*d^2*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
          (2*s^2*(6*d^3 + 8*d^2*sw^2*(-5 + 8*sw^2) + d*(57 + 135*sw^2 - 216*
                sw^4) + 11*(-3 - 10*sw^2 + 16*sw^4)) + 
           s*(-153*d^2 + 24*d^3 - 88*(3 - 5*sw^2 + 8*sw^4) + 
             d*(357 - 320*sw^2 + 512*sw^4))*t + 2*(-11 + 8*d)*
            (3 - 20*sw^2 + 32*sw^4)*t^2)))*GaugeXi[W]^2 - 
     2^(1 + 3*d)*Pi^(3*d)*(2*mw^2 + s)*(mw^3 - mw*s)^2*
      (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
       2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
       4*(3 - 20*sw^2 + 32*sw^4)*t^2)*GaugeXi[W]^3 + 
     mw^4*(2*Pi)^(3*d)*(mw^2 - s)^2*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
         4*d*(-3 - 5*sw^2 + 8*sw^4)) + 2*s*(-15*d + 3*d^2 + 
         8*(3 - 5*sw^2 + 8*sw^4))*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2)*
      GaugeXi[W]^4))/(2^(4*(1 + d))*(-1 + d)*mw^4*Pi^(4*d)*(mz^2 - s)^2*s^2*
    sw^4*(-1 + GaugeXi[W])^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0}}
