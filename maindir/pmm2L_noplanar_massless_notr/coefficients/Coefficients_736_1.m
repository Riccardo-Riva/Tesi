(* Created with the Wolfram Language : www.wolfram.com *)
{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 (2^(1 - 2*d)*(-2 + d)^2*EL^8*gAl^6*gAu^2*(s - 2*t)*\[Mu]^(8 - 2*d))/
   (Pi^(2*d)*s^2) - (2^(1 - 2*d)*(2 - d)*(-2 + d)^2*EL^8*gAl^6*gAu^2*
    (s - 2*t)*\[Mu]^(8 - 2*d))/((-4 + d)*Pi^(2*d)*s^2) + 
  ((2 - d)*(-2 + d)^2*EL^8*gAl^6*gAu^2*t*\[Mu]^(8 - 2*d))/
   ((-4 + d)*(2*Pi)^(2*d)*s^2) + (2^(1 - 2*d)*(-2 + d)^2*(-8 + 3*d)*EL^8*
    gAl^6*gAu^2*(s - 2*t)*t*\[Mu]^(8 - 2*d))/((-4 + d)*Pi^(2*d)*s^3) + 
  ((-2 + d)^2*(-10 + 3*d)*EL^8*gAl^6*gAu^2*(s - 2*t)*t*\[Mu]^(8 - 2*d))/
   ((-4 + d)*(2*Pi)^(2*d)*s^3) - ((-2 + d)^2*(-8 + 3*d)*EL^8*gAl^6*gAu^2*
    (s - 2*t)*(s + t)*\[Mu]^(8 - 2*d))/((-4 + d)*(2*Pi)^(2*d)*s^3) + 
  (2^(-1 - 2*d)*(-6 + d)*(-2 + d)*EL^8*gAl^6*gAu^2*((-4 + d)*s - 2*t)*
    (-3*(-3 + d)*s + t)*\[Mu]^(8 - 2*d))/((-4 + d)*Pi^(2*d)*s^3) + 
  (9*(-3 + d)*(-2 + d)^2*EL^8*gAl^6*gAu^2*t*(s + t)*(s + 2*t)*
    \[Mu]^(8 - 2*d))/((-4 + d)*(2*Pi)^(2*d)*s^4) + 
  (2^(-1 - 2*d)*(-2 + d)*(12 - 8*d + d^2)*EL^8*gAl^6*gAu^2*((-2 + d)*s + 2*t)*
    \[Mu]^(8 - 2*d))/((-4 + d)*Pi^(2*d)*s^2) + 
  ((-2 + d)^2*EL^8*gAl^6*gAu^2*t*(3*s + 2*t)*((25 - 9*d)*s + 3*t)*
    \[Mu]^(8 - 2*d))/((-4 + d)*(2*Pi)^(2*d)*s^4) - 
  (2^(1 - 2*d)*(-2 + d)^2*EL^8*gAl^6*gAu^2*t*(4*s + (30 - 9*d)*t)*
    \[Mu]^(8 - 2*d))/((-4 + d)*Pi^(2*d)*s^3) + 
  ((-3 + d)*(-2 + d)*EL^8*gAl^6*gAu^2*((22 - 10*d + d^2)*s - (-6 + d)*t)*
    \[Mu]^(8 - 2*d))/((-4 + d)*(2*Pi)^(2*d)*s^2) + 
  ((-2 + d)*(-7 + 3*d)*EL^8*gAl^6*gAu^2*t*((-12 + 5*d)*s + 4*(-3 + d)*t)*
    \[Mu]^(8 - 2*d))/((-4 + d)*(2*Pi)^(2*d)*s^3) + 
  (2^(-1 - 2*d)*(8 - 3*d)*(-2 + d)*EL^8*gAl^6*gAu^2*t*
    ((20 - 10*d + d^2)*s - 2*(-2 + d)*t)*\[Mu]^(8 - 2*d))/
   ((-4 + d)*Pi^(2*d)*s^3) + (3*2^(-1 - 2*d)*(-3 + d)*(-2 + d)*EL^8*gAl^6*
    gAu^2*(s + t)*((20 - 10*d + d^2)*s + 2*(-2 + d)*t)*\[Mu]^(8 - 2*d))/
   ((-4 + d)*Pi^(2*d)*s^3) + (2^(-1 - 2*d)*(-2 + d)*(-24 + 17*d - 3*d^2)*EL^8*
    gAl^6*gAu^2*((36 - 14*d + d^2)*s^2 + 4*(-1 + d)*s*t + 4*(-4 + d)*t^2)*
    \[Mu]^(8 - 2*d))/((-4 + d)^2*Pi^(2*d)*s^3) + 
  ((24 - 9*d)*(-2 + d)*EL^8*gAl^6*gAu^2*t*(2*s^2 + (-2 + 3*d)*s*t + 
     2*(-2 + d)*t^2)*\[Mu]^(8 - 2*d))/((-4 + d)*(2*Pi)^(2*d)*s^4) + 
  (2^(-1 - 2*d)*(-2 + d)*(-8 + 3*d)*EL^8*gAl^6*gAu^2*
    ((16 - 10*d + d^2)*s^2 + 4*(-4 + d)*s*t + 4*(-2 + d)*t^2)*
    \[Mu]^(8 - 2*d))/((-4 + d)*Pi^(2*d)*s^3) - 
  (2^(-1 - 2*d)*(-2 + d)*(88 - 57*d + 9*d^2)*EL^8*gAl^6*gAu^2*(s + t)*
    ((20 - 10*d + d^2)*s^2 + 4*(-2 + d)*s*t + 4*(-2 + d)*t^2)*
    \[Mu]^(8 - 2*d))/((-4 + d)^2*Pi^(2*d)*s^4) + 
  (2^(-1 - 2*d)*(-2 + d)*(-8 + 3*d)*EL^8*gAl^6*gAu^2*((-10 + 3*d)*s - t)*
    ((24 - 10*d + d^2)*s^2 + 4*d*s*t + 4*(-2 + d)*t^2)*\[Mu]^(8 - 2*d))/
   ((-4 + d)^2*Pi^(2*d)*s^4) - (2^(-1 - 2*d)*(-2 + d)*(-80 + 54*d - 9*d^2)*
    EL^8*gAl^6*gAu^2*t*((24 - 10*d + d^2)*s^2 + 4*d*s*t + 4*(-2 + d)*t^2)*
    \[Mu]^(8 - 2*d))/((-4 + d)^2*Pi^(2*d)*s^4), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
