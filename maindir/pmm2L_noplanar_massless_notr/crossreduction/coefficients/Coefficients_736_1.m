(* Created with the Wolfram Language : www.wolfram.com *)
{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 (2^(1 - 2*d)*(-2 + d)^2*EL^8*gAl^6*gAu^2*(s - 2*t)*\[Mu]^(8 - 2*d))/
   (Pi^(2*d)*s^2) - (2^(1 - 2*d)*(2 - d)*(-2 + d)^2*EL^8*gAl^6*gAu^2*
    (s - 2*t)*\[Mu]^(8 - 2*d))/((-4 + d)*Pi^(2*d)*s^2) - 
  (2^(1 - 2*d)*(-2 + d)^2*(-7 + 3*d)*EL^8*gAl^6*gAu^2*(s - 2*t)*
    \[Mu]^(8 - 2*d))/((-4 + d)*Pi^(2*d)*s^2) + 
  ((2 - d)*(-2 + d)^2*EL^8*gAl^6*gAu^2*t*\[Mu]^(8 - 2*d))/
   ((-4 + d)*(2*Pi)^(2*d)*s^2) + ((-2 + d)*(-7 + 3*d)*EL^8*gAl^6*gAu^2*
    ((-8 + 3*d)*s - 4*t)*t*\[Mu]^(8 - 2*d))/((-4 + d)*(2*Pi)^(2*d)*s^3) + 
  (2^(1 - 2*d)*(-2 + d)^2*(-8 + 3*d)*EL^8*gAl^6*gAu^2*(s - 2*t)*t*
    \[Mu]^(8 - 2*d))/((-4 + d)*Pi^(2*d)*s^3) + 
  ((-2 + d)^2*(-10 + 3*d)*EL^8*gAl^6*gAu^2*(s - 2*t)*t*\[Mu]^(8 - 2*d))/
   ((-4 + d)*(2*Pi)^(2*d)*s^3) - (3*(-3 + d)*(-2 + d)^2*EL^8*gAl^6*gAu^2*t*
    (s + 2*t)*(s + 3*t)*\[Mu]^(8 - 2*d))/((-4 + d)*(2*Pi)^(2*d)*s^4) + 
  ((-2 + d)^2*EL^8*gAl^6*gAu^2*(s - 2*t)*t*((25 - 9*d)*s + 3*t)*
    \[Mu]^(8 - 2*d))/((-4 + d)*(2*Pi)^(2*d)*s^4) - 
  (2^(1 - 2*d)*(-2 + d)^2*EL^8*gAl^6*gAu^2*t*(4*s + (30 - 9*d)*t)*
    \[Mu]^(8 - 2*d))/((-4 + d)*Pi^(2*d)*s^3) + 
  (2^(-1 - 2*d)*(-2 + d)^2*EL^8*gAl^6*gAu^2*((-2 + d)^2*s + (4 - 6*d)*t)*
    \[Mu]^(8 - 2*d))/((-4 + d)*Pi^(2*d)*s^2) - 
  (2^(-1 - 2*d)*(-3 + d)*(-2 + d)*EL^8*gAl^6*gAu^2*(s + 3*t)*
    ((20 - 10*d + d^2)*s + 2*(-2 + d)*t)*\[Mu]^(8 - 2*d))/
   ((-4 + d)*Pi^(2*d)*s^3) - (2^(-1 - 2*d)*(8 - 3*d)*(-2 + d)*EL^8*gAl^6*
    gAu^2*t*((20 - 10*d + d^2)*s + 6*(-2 + d)*t)*\[Mu]^(8 - 2*d))/
   ((-4 + d)*Pi^(2*d)*s^3) + ((3 - d)*(-2 + d)*EL^8*gAl^6*gAu^2*
    (-2*s + (-10 + 3*d)*t)*\[Mu]^(8 - 2*d))/((-4 + d)*(2*Pi)^(2*d)*s^2) - 
  (2^(-1 - 2*d)*(-2 + d)*EL^8*gAl^6*gAu^2*(-3*(-3 + d)*s + t)*
    ((16 - 10*d + d^2)*s + 2*(-10 + 3*d)*t)*\[Mu]^(8 - 2*d))/
   ((-4 + d)*Pi^(2*d)*s^3) + ((-2 + d)^2*EL^8*gAl^6*gAu^2*(s - 2*t)*
    ((-2 + d)*s + (-8 + 3*d)*t)*\[Mu]^(8 - 2*d))/
   ((-4 + d)*(2*Pi)^(2*d)*s^3) + ((24 - 9*d)*(-2 + d)*EL^8*gAl^6*gAu^2*t*
    (2*s^2 + (2 + d)*s*t - 2*(-2 + d)*t^2)*\[Mu]^(8 - 2*d))/
   ((-4 + d)*(2*Pi)^(2*d)*s^4) - (2^(-1 - 2*d)*(-2 + d)*(-8 + 3*d)*EL^8*gAl^6*
    gAu^2*((-10 + 3*d)*s - t)*((16 - 10*d + d^2)*s^2 + 4*(-4 + d)*s*t + 
     4*(-2 + d)*t^2)*\[Mu]^(8 - 2*d))/((-4 + d)^2*Pi^(2*d)*s^4) + 
  (2^(-1 - 2*d)*(-2 + d)*(-80 + 54*d - 9*d^2)*EL^8*gAl^6*gAu^2*t*
    ((16 - 10*d + d^2)*s^2 + 4*(-4 + d)*s*t + 4*(-2 + d)*t^2)*
    \[Mu]^(8 - 2*d))/((-4 + d)^2*Pi^(2*d)*s^4) + 
  (2^(-1 - 2*d)*(-2 + d)*(-8 + 3*d)*EL^8*gAl^6*gAu^2*
    ((-3 + d)*s + (-11 + 3*d)*t)*((20 - 10*d + d^2)*s^2 + 4*(-2 + d)*s*t + 
     4*(-2 + d)*t^2)*\[Mu]^(8 - 2*d))/((-4 + d)^2*Pi^(2*d)*s^4) + 
  (2^(-1 - 2*d)*(-2 + d)*(-8 + 3*d)*EL^8*gAl^6*gAu^2*
    ((16 - 10*d + d^2)*s^2 - 8*s*t + 12*(-2 + d)*t^2)*\[Mu]^(8 - 2*d))/
   ((-4 + d)*Pi^(2*d)*s^3) - (2^(-1 - 2*d)*(-2 + d)*(-24 + 17*d - 3*d^2)*EL^8*
    gAl^6*gAu^2*((4 - 6*d + d^2)*s^2 + 4*(-3 + d)*s*t + 4*d*t^2)*
    \[Mu]^(8 - 2*d))/((-4 + d)^2*Pi^(2*d)*s^3), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
