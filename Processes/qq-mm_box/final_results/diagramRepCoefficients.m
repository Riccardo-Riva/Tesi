{{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {((-I/27)*2^(1 - 4*d)*EL^6*
    (-((2*Pi)^(3*d)*((-224 + 232*d - 74*d^2 + 7*d^3)*s^2 + 
        4*(144 - 76*d + 9*d^2)*s*t + 4*(176 - 80*d + 7*d^2)*t^2)) + 
     2^(1 + 3*d)*(32 - 20*d + 3*d^2)*Pi^(3*d)*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
      GaugeXi[Q] + (-4 + d)^2*(2*Pi)^(3*d)*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
      GaugeXi[Q]^2))/((-4 + d)*Pi^(4*d)*s^2), 
  ((-I/27)*2^(3 - d)*(32 - 14*d + d^2)*EL^6*(s + 2*t))/((-4 + d)*Pi^d*s), 
  ((-I/27)*4^(1 - d)*EL^6*t*(3*d*(2*Pi)^d*s^2 + 
     2^(3 + d)*Pi^d*(-s^2 + s*t + 2*t^2)))/(Pi^(2*d)*s), 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, ((-I/27)*4^(-1 - d)*EL^6*(-57*d^3*(2*Pi)^d*s + 
     mz^2*(-3*(-11 + d)*d^3*(2*Pi)^d + 2^(2 + d)*Pi^d*
        (d*(21 + 85*sw^2 - 136*sw^4) + 3*d^2*(-9 - 5*sw^2 + 8*sw^4) + 
         6*(3 - 20*sw^2 + 32*sw^4))) + 2^(1 + d)*Pi^d*
      (s*(3*d^4 + d^2*(78 + 20*sw^2 - 32*sw^4) - 
         4*(39 - 80*sw^2 + 128*sw^4) + 2*d*(-3 - 85*sw^2 + 136*sw^4)) + 
       (-36*d^3 + 3*d^4 + 8*(33 + 50*sw^2 - 80*sw^4) - 
         4*d^2*(-42 - 5*sw^2 + 8*sw^4) + 4*d*(-87 - 50*sw^2 + 80*sw^4))*t)))/
   ((-4 + d)*Pi^(2*d)*s*sw^2*(-1 + sw^2)), 0, 
  ((-I/27)*4^(-2 - d)*EL^6*(-3*s*(3*d^2*(2*Pi)^d*s^2 + 
       2^(1 + d)*Pi^d*(2*s^2*(3 + 10*sw^2 - 16*sw^4 + 
           d*(-3 - 5*sw^2 + 8*sw^4)) + s*(-15*d + 3*d^2 + 
           8*(3 - 5*sw^2 + 8*sw^4))*t + 2*(3 - 20*sw^2 + 32*sw^4)*t^2)) + 
     (2^(1 + d)*Pi^d*s*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
           4*d*(-3 - 5*sw^2 + 8*sw^4)) + 2*s*(-15*d + 3*d^2 + 
           8*(3 - 5*sw^2 + 8*sw^4))*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2) + 
       mz^2*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
          (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
           s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
           2*(3 - 20*sw^2 + 32*sw^4)*t^2)))*GaugeXi[Q] + 
     (3*d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
        (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
         s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
         2*(3 - 20*sw^2 + 32*sw^4)*t^2) - 2^(1 + d)*mz^2*Pi^d*
        (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
         2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
         4*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[Q]^2 + 
     mz^2*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
         s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
         2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[Q]^3))/
   (mz^2*Pi^(2*d)*s^2*sw^2*(-1 + sw^2)*(-1 + GaugeXi[Q])), 
  ((I/27)*16^(-1 - d)*EL^6*(117*d^3*(2*Pi)^(3*d)*s^4 + 
     2^(1 + 3*d)*Pi^(3*d)*s^2*(-2*s^2*(-60 + 3*d^4 + 280*sw^2 - 448*sw^4 + 
         d^2*(78 + 55*sw^2 - 88*sw^4) + d*(-33 - 250*sw^2 + 400*sw^4)) + 
       s*(75*d^2 - 3*d^3 - 96*(-3 - 5*sw^2 + 8*sw^4) + 
         4*d*(-69 - 70*sw^2 + 112*sw^4))*t + 2*(-28 + 15*d)*
        (3 - 20*sw^2 + 32*sw^4)*t^2) + mz^4*(117*d^3*(2*Pi)^(3*d)*s^2 + 
       2^(1 + 3*d)*Pi^(3*d)*(-2*s^2*(-60 + 3*d^4 + 280*sw^2 - 448*sw^4 + 
           d^2*(78 + 55*sw^2 - 88*sw^4) + d*(-33 - 250*sw^2 + 400*sw^4)) + 
         s*(27*d^2 - 3*d^3 + d*(-84 + 40*sw^2 - 64*sw^4) + 
           32*(3 - 5*sw^2 + 8*sw^4))*t - 2*(-4 + d)*(3 - 20*sw^2 + 32*sw^4)*
          t^2)) + 2*mz^2*s*(-57*d^3*(2*Pi)^(3*d)*s^2 + 
       2^(1 + 3*d)*Pi^(3*d)*(s^2*(3*d^4 - 4*d^3*sw^2*(-5 + 8*sw^2) - 
           24*(9 - 10*sw^2 + 16*sw^4) + d^2*(48 - 50*sw^2 + 80*sw^4) + 
           2*d*(51 - 50*sw^2 + 80*sw^4)) + s*(69*d^3 - 6*d^4 + 
           d^2*(-327 + 80*sw^2 - 128*sw^4) - 96*(6 - 5*sw^2 + 8*sw^4) + 
           12*d*(59 - 30*sw^2 + 48*sw^4))*t - 2*(4 - 5*d + 2*d^2)*
          (3 - 20*sw^2 + 32*sw^4)*t^2)) + 
     2*(-57*d^3*(2*Pi)^(3*d)*s^4 + 2^(1 + 3*d)*Pi^(3*d)*s^2*
        (s^2*(3*d^4 + d^2*(72 + 50*sw^2 - 80*sw^4) - 
           24*(3 - 10*sw^2 + 16*sw^4) + 2*d*(-9 - 110*sw^2 + 176*sw^4)) + 
         s*(-51*d^2 + 3*d^3 + d*(180 + 120*sw^2 - 192*sw^4) + 
           32*(-6 - 5*sw^2 + 8*sw^4))*t - 2*(-12 + 7*d)*(3 - 20*sw^2 + 
           32*sw^4)*t^2) + mz^4*(-57*d^3*(2*Pi)^(3*d)*s^2 + 
         2^(1 + 3*d)*Pi^(3*d)*(s^2*(3*d^4 + d^2*(72 + 50*sw^2 - 80*sw^4) - 
             24*(3 - 10*sw^2 + 16*sw^4) + 2*d*(-9 - 110*sw^2 + 176*sw^4)) + 
           s*(-27*d^2 + 3*d^3 - 32*(3 - 5*sw^2 + 8*sw^4) + 
             d*(84 - 40*sw^2 + 64*sw^4))*t + 2*(-4 + d)*(3 - 20*sw^2 + 
             32*sw^4)*t^2)) + 2*mz^2*s*(-3*d^3*(2*Pi)^(3*d)*s^2 + 
         2^(1 + 3*d)*Pi^(3*d)*(2*s^2*(84 + 40*sw^2 - 64*sw^4 + 
             2*d^3*sw^2*(-5 + 8*sw^2) + d^2*(18 + 55*sw^2 - 88*sw^4) + 
             3*d*(-25 - 30*sw^2 + 48*sw^4)) + s*(-69*d^3 + 6*d^4 - 
             44*d*(15 - 10*sw^2 + 16*sw^4) + 16*(33 - 40*sw^2 + 64*sw^4) + 
             d^2*(315 - 80*sw^2 + 128*sw^4))*t + 2*(12 - 9*d + 2*d^2)*
            (3 - 20*sw^2 + 32*sw^4)*t^2)))*GaugeXi[Q] - 
     (3*d^3*(2*Pi)^(3*d)*s^4 + 2^(1 + 3*d)*Pi^(3*d)*s^2*
        (2*s^2*(-12 - 40*sw^2 + 64*sw^4 + d*(15 + 30*sw^2 - 48*sw^4) + 
           d^2*(-6 - 5*sw^2 + 8*sw^4)) + s*(-27*d^2 + 3*d^3 - 
           32*(3 - 5*sw^2 + 8*sw^4) + d*(84 - 40*sw^2 + 64*sw^4))*t + 
         2*(-4 + d)*(3 - 20*sw^2 + 32*sw^4)*t^2) + 
       mz^4*(3*d^3*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
          (2*s^2*(-12 - 40*sw^2 + 64*sw^4 + d*(15 + 30*sw^2 - 48*sw^4) + 
             d^2*(-6 - 5*sw^2 + 8*sw^4)) + s*(-27*d^2 + 3*d^3 - 
             32*(3 - 5*sw^2 + 8*sw^4) + d*(84 - 40*sw^2 + 64*sw^4))*t + 
           2*(-4 + d)*(3 - 20*sw^2 + 32*sw^4)*t^2)) + 
       2*mz^2*s*(-63*d^3*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
          (s^2*(3*d^4 + 4*d^3*sw^2*(-5 + 8*sw^2) + d^2*(120 + 170*sw^2 - 272*
                sw^4) + 40*(3 + 10*sw^2 - 16*sw^4) + 2*d*(-99 - 230*sw^2 + 
               368*sw^4)) + s*(-69*d^3 + 6*d^4 + d*(-612 + 520*sw^2 - 832*
                sw^4) + 160*(3 - 5*sw^2 + 8*sw^4) + d^2*(303 - 80*sw^2 + 128*
                sw^4))*t + 2*(20 - 13*d + 2*d^2)*(3 - 20*sw^2 + 32*sw^4)*
            t^2)))*GaugeXi[Q]^2))/((-4 + d)*mz^2*Pi^(4*d)*(mz^2 - s)^2*s^2*
    sw^2*(-1 + sw^2)*(-1 + GaugeXi[Q])), 
  ((-I/432)*EL^6*(-((2^(2 - d)*s*(mz^3 - mz*s)^2*(-156 - 36*d^2 + 3*d^3 - 
         40*sw^2 + 64*sw^4 - 4*d*(-33 - 5*sw^2 + 8*sw^4))*((-4 + d)*s - 2*t)*
        (-1 + GaugeXi[Q]))/Pi^d) + (4^(1 - d)*s*(mz^3 - mz*s)^2*
       (-3*d^3*(2*Pi)^d + 2^(2 + d)*Pi^d*(39 + 9*d^2 + 10*sw^2 - 16*sw^4 + 
          d*(-33 - 5*sw^2 + 8*sw^4)))*((-4 + d)*s - 2*t)*(-1 + GaugeXi[Q]))/
      Pi^(2*d) + (2^(3 - 2*d)*(-3 + d)*mz^2*(mz^2 - s)*s*
       (-3*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (2*s^2*(-6 + 6*d^2 + 40*sw^2 - 64*sw^4 + 3*d*(-3 - 5*sw^2 + 
              8*sw^4)) + s*(-36*d^2 + 3*d^3 - 4*d*(-36 - 5*sw^2 + 8*sw^4) + 
            12*(-15 - 10*sw^2 + 16*sw^4))*t + 8*(3 - 20*sw^2 + 32*sw^4)*
           t^2) + mz^2*(3*d^3*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
           (-2*s*(-6 + 6*d^2 + 40*sw^2 - 64*sw^4 + 3*d*(-3 - 5*sw^2 + 
                8*sw^4)) + (156 + 36*d^2 - 3*d^3 + 40*sw^2 - 64*sw^4 + 
              4*d*(-33 - 5*sw^2 + 8*sw^4))*t)))*(-1 + GaugeXi[Q]))/Pi^(2*d) + 
     (4^(1 - d)*(-4 + d)*(mz^2 - s)^2*s*(-3*d^2*(2*Pi)^d*s^2 - 
        2^(1 + d)*Pi^d*(2*s^2*(3 + 10*sw^2 - 16*sw^4 + 
            d*(-3 - 5*sw^2 + 8*sw^4)) + s*(-15*d + 3*d^2 + 
            8*(3 - 5*sw^2 + 8*sw^4))*t + 2*(3 - 20*sw^2 + 32*sw^4)*t^2) + 
        mz^2*(3*d^3*(2*Pi)^d*s - 2^(1 + d)*Pi^d*
           (2*s*(12*d^2 + d*(-57 + 5*sw^2 - 8*sw^4) + 4*(21 - 5*sw^2 + 
                8*sw^4)) + (156 + 36*d^2 - 3*d^3 + 40*sw^2 - 64*sw^4 + 
              4*d*(-33 - 5*sw^2 + 8*sw^4))*t)))*(-1 + GaugeXi[Q]))/Pi^(2*d) + 
     (2^(1 - d)*(-4 + d)*(mz^2 - s)^2*s^2*((-4 + d)*mz^2 + d*s)*(-1 + 4*sw^2)*
       (-3 + 8*sw^2)*(-1 + GaugeXi[Q])^2)/Pi^d + 
     (2^(1 - d)*(-4 + d)*(mz^2 - s)^3*s*(s*(-6 + 3*d - 20*sw^2 + 32*sw^4) - 
        2*(3 - 20*sw^2 + 32*sw^4)*t)*(-1 + GaugeXi[Q])^2)/Pi^d + 
     ((-4 + d)*(mz^2 - s)^2*(3*d*s - 4*s*(3 - 5*sw^2 + 8*sw^4) - 
        2*(3 - 20*sw^2 + 32*sw^4)*t)*(mz^2*((-4 + d)*s + 2*t) + 
        s*(d*s + 2*t))*(-1 + GaugeXi[Q])^2)/(2*Pi)^d - 
     ((-4 + d)*(mz^2 - s)^2*s*((-4 + d)*mz^2 + (-2 + d)*s)*
       (3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-3 - 10*sw^2 + 16*sw^4) + 
          (-3 + 20*sw^2 - 32*sw^4)*t))*(-1 + GaugeXi[Q])^2)/(2*Pi)^(2*d) - 
     (2^(1 - 4*d)*(-4 + d)*(-3 + d)*s*(mz^2 + s)*
       (mz^4*(2*Pi)^(3*d)*(-6 + 3*d - 20*sw^2 + 32*sw^4)*t + 
        (2*Pi)^(3*d)*s^2*(-6 + 3*d - 20*sw^2 + 32*sw^4)*t + 
        2^(1 + 3*d)*mz^2*Pi^(3*d)*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
            4*d*(-3 - 5*sw^2 + 8*sw^4)) + 3*s*(18 - 11*d + 2*d^2 - 20*sw^2 + 
            32*sw^4)*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2))*(-1 + GaugeXi[Q])^2)/
      Pi^(4*d) + ((-4 + d)*(mz^2 - s)^2*s*((-4 + d)*mz^2 + (-2 + d)*s)*
       (-3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(3 + 10*sw^2 - 16*sw^4) + 
          (3 - 20*sw^2 + 32*sw^4)*t) + 2^(1 + d)*Pi^d*
         (s*(-6 + 3*d - 20*sw^2 + 32*sw^4) - 2*(3 - 20*sw^2 + 32*sw^4)*t)*
         GaugeXi[Q] + (-3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
           (s*(3 + 10*sw^2 - 16*sw^4) + (3 - 20*sw^2 + 32*sw^4)*t))*
         GaugeXi[Q]^2))/(2*Pi)^(2*d) + (4^(1 - d)*(-4 + d)*(mz^2 - s)^2*s*
       (-(s*(3*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(-3 - 10*sw^2 + 16*sw^4))*t) + 
        mz^2*(-3*d*(2*Pi)^d*(s + t) + 2^(1 + d)*Pi^d*
           (s*(3 + 10*sw^2 - 16*sw^4) + 2*(3 - 5*sw^2 + 8*sw^4)*t)) + 
        2^(1 + d)*Pi^d*(s*(-6 + 3*d - 20*sw^2 + 32*sw^4)*t + 
          mz^2*(s*(-6 + 3*d - 20*sw^2 + 32*sw^4) + 3*d*t - 
            4*(3 - 5*sw^2 + 8*sw^4)*t))*GaugeXi[Q] + 
        (-(s*(3*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(-3 - 10*sw^2 + 16*sw^4))*t) + 
          mz^2*(-3*d*(2*Pi)^d*(s + t) + 2^(1 + d)*Pi^d*
             (s*(3 + 10*sw^2 - 16*sw^4) + 2*(3 - 5*sw^2 + 8*sw^4)*t)))*
         GaugeXi[Q]^2))/Pi^(2*d)))/((-4 + d)*s^2*(mz^3 - mz*s)^2*sw^2*
    (-1 + sw^2)*(-1 + GaugeXi[Q])), 
  ((I/27)*2^(-3 - 2*d)*EL^6*t*(-3*d^3*(2*Pi)^d*s + 
     mz^2*(-3*d^3*(2*Pi)^d + 2^(1 + d)*Pi^d*(324 + 60*d^2 - 3*d^3 + 
         2*d*(-123 - 5*sw^2 + 8*sw^4))) + 2^(1 + d)*Pi^d*
      (s*(36 - 6*d^2 + 3*d^3 + 2*d*(-3 - 5*sw^2 + 8*sw^4)) + 
       4*(30 - 18*d + 3*d^2 - 20*sw^2 + 32*sw^4)*t)))/
   (Pi^(2*d)*s*sw^2*(-1 + sw^2)), 
  ((I/27)*2^(-3 - 2*d)*EL^6*t*(-3*d^3*(2*Pi)^d*s^2 + 
     mz^4*(-3*d^3*(2*Pi)^d + 2^(2 + d)*Pi^d*(-6 + 6*d^2 + 40*sw^2 - 64*sw^4 + 
         3*d*(-3 - 5*sw^2 + 8*sw^4))) + 2^(1 + d)*mz^2*Pi^d*
      (s*(-18*d^2 + 3*d^3 - 4*d*(-3 - 5*sw^2 + 8*sw^4) + 
         16*(3 - 5*sw^2 + 8*sw^4)) + 4*(30 - 18*d + 3*d^2 - 20*sw^2 + 
         32*sw^4)*t) + 2^(2 + d)*Pi^d*
      (s^2*(-6 + 6*d^2 + 40*sw^2 - 64*sw^4 + 3*d*(-3 - 5*sw^2 + 8*sw^4)) + 
       2*s*(-6 + 3*d - 20*sw^2 + 32*sw^4)*t + 4*(3 - 20*sw^2 + 32*sw^4)*
        t^2)))/(Pi^(2*d)*s*sw^2*(-1 + sw^2)), 
  ((I/27)*2^(-4 - d)*EL^6*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
       4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
     2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
     4*(3 - 20*sw^2 + 32*sw^4)*t^2)*(-1 + GaugeXi[Q]))/
   (mz^2*Pi^d*s^2*sw^2*(-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, ((-I/27)*4^(-1 - d)*EL^6*(-57*d^3*(2*Pi)^d*s + 
     mz^2*(-3*(-11 + d)*d^3*(2*Pi)^d + 2^(2 + d)*Pi^d*
        (d*(21 + 85*sw^2 - 136*sw^4) + 3*d^2*(-9 - 5*sw^2 + 8*sw^4) + 
         6*(3 - 20*sw^2 + 32*sw^4))) + 2^(1 + d)*Pi^d*
      (s*(3*d^4 + d^2*(78 + 20*sw^2 - 32*sw^4) - 
         4*(39 - 80*sw^2 + 128*sw^4) + 2*d*(-3 - 85*sw^2 + 136*sw^4)) + 
       (-36*d^3 + 3*d^4 + 8*(33 + 50*sw^2 - 80*sw^4) - 
         4*d^2*(-42 - 5*sw^2 + 8*sw^4) + 4*d*(-87 - 50*sw^2 + 80*sw^4))*t)))/
   ((-4 + d)*Pi^(2*d)*s*sw^2*(-1 + sw^2)), 0, 
  ((-I/27)*4^(-2 - d)*EL^6*(-3*s^3*(3*d^2*(2*Pi)^d*s^2 + 
       2^(1 + d)*Pi^d*(2*s^2*(3 + 10*sw^2 - 16*sw^4 + 
           d*(-3 - 5*sw^2 + 8*sw^4)) + s*(-15*d + 3*d^2 + 
           8*(3 - 5*sw^2 + 8*sw^4))*t + 2*(3 - 20*sw^2 + 32*sw^4)*t^2)) + 
     s^2*(2^(1 + d)*Pi^d*s*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
           4*d*(-3 - 5*sw^2 + 8*sw^4)) + 2*s*(-15*d + 3*d^2 + 
           8*(3 - 5*sw^2 + 8*sw^4))*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2) + 
       mz^2*(33*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
          (-2*s^2*(3*d^2 - 7*d*(-3 - 5*sw^2 + 8*sw^4) + 
             7*(-3 - 10*sw^2 + 16*sw^4)) + 7*s*(-15*d + 3*d^2 + 
             8*(3 - 5*sw^2 + 8*sw^4))*t + 14*(3 - 20*sw^2 + 32*sw^4)*t^2)))*
      GaugeXi[Q] + s*(3*d^2*(2*Pi)^d*s^4 + 2^(1 + d)*Pi^d*s^2*
        (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
         s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
         2*(3 - 20*sw^2 + 32*sw^4)*t^2) - 3*2^(1 + d)*mz^2*Pi^d*s*
        (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
         2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
         4*(3 - 20*sw^2 + 32*sw^4)*t^2) - mz^4*(-9*d^2*(2*Pi)^d*s^2 + 
         2^(1 + d)*Pi^d*(2*s^2*(15 + 6*d^2 + 50*sw^2 - 80*sw^4 + 
             5*d*(-3 - 5*sw^2 + 8*sw^4)) + 5*s*(-15*d + 3*d^2 + 
             8*(3 - 5*sw^2 + 8*sw^4))*t + 10*(3 - 20*sw^2 + 32*sw^4)*t^2)))*
      GaugeXi[Q]^2 + mz^2*(9*d^2*(2*Pi)^d*s^4 - 2^(1 + d)*Pi^d*s^2*
        (2*s^2*(3 + 3*d^2 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
         s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
         2*(3 - 20*sw^2 + 32*sw^4)*t^2) + 3*2^(1 + d)*mz^2*Pi^d*s*
        (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
         2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
         4*(3 - 20*sw^2 + 32*sw^4)*t^2) + mz^4*(15*d^2*(2*Pi)^d*s^2 + 
         2^(1 + d)*Pi^d*(-2*s^2*(-3 + 3*d^2 - 10*sw^2 + 16*sw^4 + 
             d*(3 + 5*sw^2 - 8*sw^4)) + s*(-15*d + 3*d^2 + 
             8*(3 - 5*sw^2 + 8*sw^4))*t + 2*(3 - 20*sw^2 + 32*sw^4)*t^2)))*
      GaugeXi[Q]^3 - mz^4*(-21*d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
        (2*s^2*(3 + 6*d^2 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
         s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
         2*(3 - 20*sw^2 + 32*sw^4)*t^2) + 2^(1 + d)*mz^2*Pi^d*
        (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
         2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
         4*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[Q]^4 + 
     mz^6*(15*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (-2*s^2*(-3 + 3*d^2 - 10*sw^2 + 16*sw^4 + d*(3 + 5*sw^2 - 8*sw^4)) + 
         s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
         2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[Q]^5))/
   (mz^2*Pi^(2*d)*s^2*sw^2*(-1 + sw^2)*(-1 + GaugeXi[Q])*
    (s - mz^2*GaugeXi[Q])^2), ((I/27)*16^(-1 - d)*EL^6*
    (117*d^3*(2*Pi)^(3*d)*s^4 + 2^(1 + 3*d)*Pi^(3*d)*s^2*
      (-2*s^2*(-60 + 3*d^4 + 280*sw^2 - 448*sw^4 + 
         d^2*(78 + 55*sw^2 - 88*sw^4) + d*(-33 - 250*sw^2 + 400*sw^4)) + 
       s*(75*d^2 - 3*d^3 - 96*(-3 - 5*sw^2 + 8*sw^4) + 
         4*d*(-69 - 70*sw^2 + 112*sw^4))*t + 2*(-28 + 15*d)*
        (3 - 20*sw^2 + 32*sw^4)*t^2) + mz^4*(117*d^3*(2*Pi)^(3*d)*s^2 + 
       2^(1 + 3*d)*Pi^(3*d)*(-2*s^2*(-60 + 3*d^4 + 280*sw^2 - 448*sw^4 + 
           d^2*(78 + 55*sw^2 - 88*sw^4) + d*(-33 - 250*sw^2 + 400*sw^4)) + 
         s*(27*d^2 - 3*d^3 + d*(-84 + 40*sw^2 - 64*sw^4) + 
           32*(3 - 5*sw^2 + 8*sw^4))*t - 2*(-4 + d)*(3 - 20*sw^2 + 32*sw^4)*
          t^2)) + 2*mz^2*s*(-57*d^3*(2*Pi)^(3*d)*s^2 + 
       2^(1 + 3*d)*Pi^(3*d)*(s^2*(3*d^4 - 4*d^3*sw^2*(-5 + 8*sw^2) - 
           24*(9 - 10*sw^2 + 16*sw^4) + d^2*(48 - 50*sw^2 + 80*sw^4) + 
           2*d*(51 - 50*sw^2 + 80*sw^4)) + s*(69*d^3 - 6*d^4 + 
           d^2*(-327 + 80*sw^2 - 128*sw^4) - 96*(6 - 5*sw^2 + 8*sw^4) + 
           12*d*(59 - 30*sw^2 + 48*sw^4))*t - 2*(4 - 5*d + 2*d^2)*
          (3 - 20*sw^2 + 32*sw^4)*t^2)) + 
     2*(-57*d^3*(2*Pi)^(3*d)*s^4 + 2^(1 + 3*d)*Pi^(3*d)*s^2*
        (s^2*(3*d^4 + d^2*(72 + 50*sw^2 - 80*sw^4) - 
           24*(3 - 10*sw^2 + 16*sw^4) + 2*d*(-9 - 110*sw^2 + 176*sw^4)) + 
         s*(-51*d^2 + 3*d^3 + d*(180 + 120*sw^2 - 192*sw^4) + 
           32*(-6 - 5*sw^2 + 8*sw^4))*t - 2*(-12 + 7*d)*(3 - 20*sw^2 + 
           32*sw^4)*t^2) + mz^4*(-57*d^3*(2*Pi)^(3*d)*s^2 + 
         2^(1 + 3*d)*Pi^(3*d)*(s^2*(3*d^4 + d^2*(72 + 50*sw^2 - 80*sw^4) - 
             24*(3 - 10*sw^2 + 16*sw^4) + 2*d*(-9 - 110*sw^2 + 176*sw^4)) + 
           s*(-27*d^2 + 3*d^3 - 32*(3 - 5*sw^2 + 8*sw^4) + 
             d*(84 - 40*sw^2 + 64*sw^4))*t + 2*(-4 + d)*(3 - 20*sw^2 + 
             32*sw^4)*t^2)) + 2*mz^2*s*(-3*d^3*(2*Pi)^(3*d)*s^2 + 
         2^(1 + 3*d)*Pi^(3*d)*(2*s^2*(84 + 40*sw^2 - 64*sw^4 + 
             2*d^3*sw^2*(-5 + 8*sw^2) + d^2*(18 + 55*sw^2 - 88*sw^4) + 
             3*d*(-25 - 30*sw^2 + 48*sw^4)) + s*(-69*d^3 + 6*d^4 - 
             44*d*(15 - 10*sw^2 + 16*sw^4) + 16*(33 - 40*sw^2 + 64*sw^4) + 
             d^2*(315 - 80*sw^2 + 128*sw^4))*t + 2*(12 - 9*d + 2*d^2)*
            (3 - 20*sw^2 + 32*sw^4)*t^2)))*GaugeXi[Q] + 
     (mz^4*(-3*d^3*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
          (-2*s^2*(-12 - 40*sw^2 + 64*sw^4 + d*(15 + 30*sw^2 - 48*sw^4) + 
             d^2*(-6 - 5*sw^2 + 8*sw^4)) + s*(27*d^2 - 3*d^3 + 
             d*(-84 + 40*sw^2 - 64*sw^4) + 32*(3 - 5*sw^2 + 8*sw^4))*t - 
           2*(-4 + d)*(3 - 20*sw^2 + 32*sw^4)*t^2)) - 
       s^2*(3*d^3*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
          (2*s^2*(-12 - 40*sw^2 + 64*sw^4 + d*(15 + 30*sw^2 - 48*sw^4) + 
             d^2*(-6 - 5*sw^2 + 8*sw^4)) + s*(-27*d^2 + 3*d^3 - 
             32*(3 - 5*sw^2 + 8*sw^4) + d*(84 - 40*sw^2 + 64*sw^4))*t + 
           2*(-4 + d)*(3 - 20*sw^2 + 32*sw^4)*t^2)) - 
       2*mz^2*s*(-63*d^3*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
          (s^2*(3*d^4 + 4*d^3*sw^2*(-5 + 8*sw^2) + d^2*(120 + 170*sw^2 - 272*
                sw^4) + 40*(3 + 10*sw^2 - 16*sw^4) + 2*d*(-99 - 230*sw^2 + 
               368*sw^4)) + s*(-69*d^3 + 6*d^4 + d*(-612 + 520*sw^2 - 832*
                sw^4) + 160*(3 - 5*sw^2 + 8*sw^4) + d^2*(303 - 80*sw^2 + 128*
                sw^4))*t + 2*(20 - 13*d + 2*d^2)*(3 - 20*sw^2 + 32*sw^4)*
            t^2)))*GaugeXi[Q]^2))/((-4 + d)*mz^2*Pi^(4*d)*(mz^2 - s)^2*s^2*
    sw^2*(-1 + sw^2)*(-1 + GaugeXi[Q])), 
  ((-I/108)*EL^6*(-((s*(mz^3 - mz*s)^2*(-156 - 36*d^2 + 3*d^3 - 40*sw^2 + 
         64*sw^4 - 4*d*(-33 - 5*sw^2 + 8*sw^4))*((-4 + d)*s - 2*t)*
        (-1 + GaugeXi[Q]))/(2*Pi)^d) + 
     (s*(mz^3 - mz*s)^2*(-3*d^3*(2*Pi)^d + 2^(2 + d)*Pi^d*
         (39 + 9*d^2 + 10*sw^2 - 16*sw^4 + d*(-33 - 5*sw^2 + 8*sw^4)))*
       ((-4 + d)*s - 2*t)*(-1 + GaugeXi[Q]))/(2*Pi)^(2*d) + 
     ((-3 + d)*mz^2*(mz^2 - s)*s*(-3*d^3*(2*Pi)^d*s^2 + 
        2^(1 + d)*Pi^d*(2*s^2*(-6 + 6*d^2 + 40*sw^2 - 64*sw^4 + 
            3*d*(-3 - 5*sw^2 + 8*sw^4)) + s*(-36*d^2 + 3*d^3 - 
            4*d*(-36 - 5*sw^2 + 8*sw^4) + 12*(-15 - 10*sw^2 + 16*sw^4))*t + 
          8*(3 - 20*sw^2 + 32*sw^4)*t^2) + mz^2*(-9*d^3*(2*Pi)^d*s + 
          2^(1 + d)*Pi^d*(2*s*(6 - 6*d^2 + 3*d^3 - 40*sw^2 + 64*sw^4 + 
              d*(9 + 15*sw^2 - 24*sw^4)) + (156 + 36*d^2 - 3*d^3 + 40*sw^2 - 
              64*sw^4 + 4*d*(-33 - 5*sw^2 + 8*sw^4))*t)))*(-1 + GaugeXi[Q]))/
      (2*Pi)^(2*d) + ((-3 + d)*mz^2*(mz^2 - s)*s*(-3*d^3*(2*Pi)^d*s^2 + 
        2^(1 + d)*Pi^d*(2*s^2*(-6 + 6*d^2 + 40*sw^2 - 64*sw^4 + 
            3*d*(-3 - 5*sw^2 + 8*sw^4)) + s*(-36*d^2 + 3*d^3 - 
            4*d*(-36 - 5*sw^2 + 8*sw^4) + 12*(-15 - 10*sw^2 + 16*sw^4))*t + 
          8*(3 - 20*sw^2 + 32*sw^4)*t^2) + mz^2*(3*d^3*(2*Pi)^d*s + 
          2^(1 + d)*Pi^d*(-2*s*(-6 + 6*d^2 + 40*sw^2 - 64*sw^4 + 
              3*d*(-3 - 5*sw^2 + 8*sw^4)) + (156 + 36*d^2 - 3*d^3 + 40*sw^2 - 
              64*sw^4 + 4*d*(-33 - 5*sw^2 + 8*sw^4))*t)))*(-1 + GaugeXi[Q]))/
      (2*Pi)^(2*d) + ((-4 + d)*(mz^2 - s)^2*s*(-3*d^2*(2*Pi)^d*s^2 - 
        2^(1 + d)*Pi^d*(2*s^2*(3 + 10*sw^2 - 16*sw^4 + 
            d*(-3 - 5*sw^2 + 8*sw^4)) + s*(-15*d + 3*d^2 + 
            8*(3 - 5*sw^2 + 8*sw^4))*t + 2*(3 - 20*sw^2 + 32*sw^4)*t^2) + 
        mz^2*(3*d^3*(2*Pi)^d*s - 2^(1 + d)*Pi^d*
           (2*s*(12*d^2 + d*(-57 + 5*sw^2 - 8*sw^4) + 4*(21 - 5*sw^2 + 
                8*sw^4)) + (156 + 36*d^2 - 3*d^3 + 40*sw^2 - 64*sw^4 + 
              4*d*(-33 - 5*sw^2 + 8*sw^4))*t)))*(-1 + GaugeXi[Q]))/
      (2*Pi)^(2*d) + (2^(-1 - d)*(-4 + d)*(mz^2 - s)^2*s^2*
       ((-4 + d)*mz^2 + d*s)*(-1 + 4*sw^2)*(-3 + 8*sw^2)*(-1 + GaugeXi[Q])^2)/
      Pi^d + (2^(-1 - d)*(-4 + d)*(mz^2 - s)^3*s*
       (s*(-6 + 3*d - 20*sw^2 + 32*sw^4) - 2*(3 - 20*sw^2 + 32*sw^4)*t)*
       (-1 + GaugeXi[Q])^2)/Pi^d + (2^(-2 - d)*(-4 + d)*(mz^2 - s)^2*
       (3*d*s - 4*s*(3 - 5*sw^2 + 8*sw^4) - 2*(3 - 20*sw^2 + 32*sw^4)*t)*
       (mz^2*((-4 + d)*s + 2*t) + s*(d*s + 2*t))*(-1 + GaugeXi[Q])^2)/Pi^d - 
     (4^(-1 - d)*(-4 + d)*(mz^2 - s)^2*s*((-4 + d)*mz^2 + (-2 + d)*s)*
       (3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-3 - 10*sw^2 + 16*sw^4) + 
          (-3 + 20*sw^2 - 32*sw^4)*t))*(-1 + GaugeXi[Q])^2)/Pi^(2*d) - 
     ((-4 + d)*(mz^2 - s)^2*s*(s*(-6 + 3*d - 20*sw^2 + 32*sw^4)*t + 
        mz^2*(s*(-6 + 3*d - 20*sw^2 + 32*sw^4) + 3*d*t - 
          4*(3 - 5*sw^2 + 8*sw^4)*t))*(-1 + GaugeXi[Q])^2)/(2*Pi)^d - 
     (2^(-1 - 4*d)*(-4 + d)*(-3 + d)*s*(mz^2 + s)*
       (mz^4*(2*Pi)^(3*d)*(-6 + 3*d - 20*sw^2 + 32*sw^4)*t + 
        (2*Pi)^(3*d)*s^2*(-6 + 3*d - 20*sw^2 + 32*sw^4)*t + 
        2^(1 + 3*d)*mz^2*Pi^(3*d)*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
            4*d*(-3 - 5*sw^2 + 8*sw^4)) + 3*s*(18 - 11*d + 2*d^2 - 20*sw^2 + 
            32*sw^4)*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2))*(-1 + GaugeXi[Q])^2)/
      Pi^(4*d) + (4^(-1 - d)*(-4 + d)*(mz^2 - s)^2*s*
       ((-4 + d)*mz^2 + (-2 + d)*s)*(-3*d*(2*Pi)^d*s + 
        2^(1 + d)*Pi^d*(s*(3 + 10*sw^2 - 16*sw^4) + (3 - 20*sw^2 + 32*sw^4)*
           t) + 2^(1 + d)*Pi^d*(s*(-6 + 3*d - 20*sw^2 + 32*sw^4) - 
          2*(3 - 20*sw^2 + 32*sw^4)*t)*GaugeXi[Q] + 
        (-3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(3 + 10*sw^2 - 16*sw^4) + 
            (3 - 20*sw^2 + 32*sw^4)*t))*GaugeXi[Q]^2))/Pi^(2*d)))/
   ((-4 + d)*mz^2*(mz^2 - s)^2*s^2*sw^2*(-1 + sw^2)*(-1 + GaugeXi[Q])), 
  ((I/27)*2^(-3 - 2*d)*EL^6*t*(-3*d^3*(2*Pi)^d*s + 
     mz^2*(-3*d^3*(2*Pi)^d + 2^(1 + d)*Pi^d*(324 + 60*d^2 - 3*d^3 + 
         2*d*(-123 - 5*sw^2 + 8*sw^4))) + 2^(1 + d)*Pi^d*
      (s*(36 - 6*d^2 + 3*d^3 + 2*d*(-3 - 5*sw^2 + 8*sw^4)) + 
       4*(30 - 18*d + 3*d^2 - 20*sw^2 + 32*sw^4)*t)))/
   (Pi^(2*d)*s*sw^2*(-1 + sw^2)), 
  ((I/27)*2^(-3 - 2*d)*EL^6*t*(-3*d^3*(2*Pi)^d*s^2 + 
     mz^4*(-3*d^3*(2*Pi)^d + 2^(2 + d)*Pi^d*(-6 + 6*d^2 + 40*sw^2 - 64*sw^4 + 
         3*d*(-3 - 5*sw^2 + 8*sw^4))) + 2^(1 + d)*mz^2*Pi^d*
      (s*(-18*d^2 + 3*d^3 - 4*d*(-3 - 5*sw^2 + 8*sw^4) + 
         16*(3 - 5*sw^2 + 8*sw^4)) + 4*(30 - 18*d + 3*d^2 - 20*sw^2 + 
         32*sw^4)*t) + 2^(2 + d)*Pi^d*
      (s^2*(-6 + 6*d^2 + 40*sw^2 - 64*sw^4 + 3*d*(-3 - 5*sw^2 + 8*sw^4)) + 
       2*s*(-6 + 3*d - 20*sw^2 + 32*sw^4)*t + 4*(3 - 20*sw^2 + 32*sw^4)*
        t^2)))/(Pi^(2*d)*s*sw^2*(-1 + sw^2)), 
  ((I/27)*2^(-4 - d)*EL^6*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
       4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
     2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
     4*(3 - 20*sw^2 + 32*sw^4)*t^2)*(-1 + GaugeXi[Q]))/
   (mz^2*Pi^d*s^2*sw^2*(-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, ((I/27)*2^(-5 - 2*d)*EL^6*(-9*d^3*(2*Pi)^d*s + 
     2^(1 + d)*Pi^d*(s*(-12*d^2*(3 - 20*sw^2 + 32*sw^4) + 
         d^3*(9 - 30*sw^2 + 48*sw^4) - 6*d*(-9 + 60*sw^2 - 70*sw^4 - 
           80*sw^6 + 64*sw^8) + 4*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
           256*sw^8)) + (-468 + 3120*sw^2 - 4784*sw^4 - 640*sw^6 + 512*sw^8 - 
         36*d^2*(3 - 20*sw^2 + 32*sw^4) + d^3*(9 - 60*sw^2 + 96*sw^4) - 
         4*d*(-99 + 660*sw^2 - 1030*sw^4 - 80*sw^6 + 64*sw^8))*t)))/
   (Pi^(2*d)*s*sw^4*(-1 + sw^2)^2), 0, 0, 
  ((I/27)*2^(-7 - 4*d)*EL^6*(9*d^2*(2*Pi)^(3*d)*s^2 + 
     2^(1 + 3*d)*Pi^(3*d)*(2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 
         128*sw^8 + 3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 
           80*sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
         d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 
           64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*
        t^2))*(-mz^2 + s + mz^2*GaugeXi[Q]))/((-1 + d)*mz^4*Pi^(4*d)*s^2*sw^4*
    (-1 + sw^2)^2), 0, ((-I/27)*2^(-5 - 2*d)*EL^6*t*
    (9*d^3*(2*Pi)^d*s - 2^(2 + d)*mz^2*Pi^d*(-468 + 3120*sw^2 - 4784*sw^4 - 
       640*sw^6 + 512*sw^8 - 36*d^2*(3 - 20*sw^2 + 32*sw^4) + 
       d^3*(9 - 60*sw^2 + 96*sw^4) - 4*d*(-99 + 660*sw^2 - 1030*sw^4 - 
         80*sw^6 + 64*sw^8)) + 2^(2 + d)*Pi^d*
      (s*(3*d^3*sw^2*(-5 + 8*sw^2) + d^2*(-9 + 60*sw^2 - 96*sw^4) + 
         18*(3 - 20*sw^2 + 32*sw^4) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
           64*sw^8)) + 2*(90 - 600*sw^2 + 1064*sw^4 - 320*sw^6 + 256*sw^8 - 
         18*d*(3 - 20*sw^2 + 32*sw^4) + d^2*(9 - 60*sw^2 + 96*sw^4))*t)))/
   (Pi^(2*d)*s*sw^4*(-1 + sw^2)^2), 0, 
  ((-I/27)*2^(-7 - 3*d)*EL^6*(9*d^2*(2*Pi)^(2*d)*s^3 - 
     2^(1 + 2*d)*Pi^(2*d)*s*(s^2*(18 - 120*sw^2 + 88*sw^4 + 320*sw^6 - 
         256*sw^8 + d^2*(9 - 30*sw^2 + 48*sw^4) + 
         2*d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 64*sw^8)) + 
       s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + d^2*(9 - 60*sw^2 + 96*sw^4) + 
         8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8))*t + 
       2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^2) - 
     mz^2*(9*d^2*(2*Pi)^(2*d)*s^2 + 2^(1 + 2*d)*Pi^(2*d)*
        (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
           3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
             64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
           d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
             80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
           256*sw^8)*t^2)) + 
     (2*s*(9*d^2*(2*Pi)^(2*d)*s^2 + 2^(1 + 2*d)*Pi^(2*d)*
          (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
             3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
               64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
             d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*
                sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
             256*sw^8)*t^2)) + 3*mz^2*(-9*d^2*(2*Pi)^(2*d)*s^2 + 
         2^(1 + 2*d)*Pi^(2*d)*(s^2*(18 - 120*sw^2 + 88*sw^4 + 320*sw^6 - 
             256*sw^8 + d^2*(9 - 30*sw^2 + 48*sw^4) + 
             2*d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 64*sw^8)) + 
           s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + d^2*(9 - 60*sw^2 + 96*sw^4) + 
             8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8))*t + 
           2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^2)))*
      GaugeXi[Q] - (-9*d^2*(2*Pi)^(2*d)*s^3 + 2^(1 + 2*d)*Pi^(2*d)*s*
        (s^2*(18 - 120*sw^2 + 88*sw^4 + 320*sw^6 - 256*sw^8 + 
           d^2*(9 - 30*sw^2 + 48*sw^4) + 2*d*(-9 + 60*sw^2 - 70*sw^4 - 
             80*sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
           d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
             80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
           256*sw^8)*t^2) + 3*mz^2*(3*d^2*(2*Pi)^(2*d)*s^2 + 
         2^(1 + 2*d)*Pi^(2*d)*(s^2*(18 - 120*sw^2 + 88*sw^4 + 320*sw^6 - 
             256*sw^8 + d^2*(3 - 30*sw^2 + 48*sw^4) + 
             2*d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 64*sw^8)) + 
           s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + d^2*(9 - 60*sw^2 + 96*sw^4) + 
             8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8))*t + 
           2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^2)))*
      GaugeXi[Q]^2 + mz^2*(-27*d^2*(2*Pi)^(2*d)*s^2 + 
       2^(1 + 2*d)*Pi^(2*d)*(2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 
           128*sw^8 + 3*d^2*(3 - 5*sw^2 + 8*sw^4) + 
           d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 64*sw^8)) + 
         s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + d^2*(9 - 60*sw^2 + 96*sw^4) + 
           8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8))*t + 
         2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^2))*
      GaugeXi[Q]^3))/((-1 + d)*mz^4*Pi^(3*d)*s^2*sw^4*(-1 + sw^2)^2*
    (-1 + GaugeXi[Q])^2), ((-I/27)*2^(-7 - 2*d)*EL^6*
    (9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
      (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
         3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
           64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
         d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 
           64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*
        t^2))*(s - 4*mz^2*GaugeXi[Q]))/((-1 + d)*mz^4*Pi^(2*d)*s*sw^4*
    (-1 + sw^2)^2), ((-I/27)*2^(-7 - 4*d)*EL^6*(9*d^2*(2*Pi)^(3*d)*s^3 + 
     2^(1 + 3*d)*Pi^(3*d)*s*(2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 
         128*sw^8 + 3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 
           80*sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
         d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 
           64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*
        t^2) + 4*mz^4*(9*(-9 + d)*d^3*(2*Pi)^(3*d)*s + 
       2^(1 + 3*d)*Pi^(3*d)*(2*s*(-27*d^3*sw^2*(-5 + 8*sw^2) + 
           3*d^4*sw^2*(-5 + 8*sw^2) + d^2*(45 - 300*sw^2 + 402*sw^4 + 
             240*sw^6 - 192*sw^8) - 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
             256*sw^8) + d*(-9 + 60*sw^2 + 190*sw^4 - 880*sw^6 + 704*sw^8)) + 
         (468 - 3120*sw^2 + 4784*sw^4 + 640*sw^6 - 512*sw^8 - 
           39*d^3*(3 - 20*sw^2 + 32*sw^4) + d^4*(9 - 60*sw^2 + 96*sw^4) - 
           8*d^2*(-63 + 420*sw^2 - 659*sw^4 - 40*sw^6 + 32*sw^8) + 
           24*d*(-36 + 240*sw^2 - 371*sw^4 - 40*sw^6 + 32*sw^8))*t)) + 
     4*mz^2*(-99*d^2*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
        (s^2*(d^3*(9 - 60*sw^2 + 96*sw^4) + d*(90 - 600*sw^2 + 596*sw^4 + 
             1120*sw^6 - 896*sw^8) + 6*(-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 
             128*sw^8) + d^2*(330*sw^2 - 424*sw^4 - 320*sw^6 + 256*sw^8)) + 
         s*(-39*d^2*(3 - 20*sw^2 + 32*sw^4) + 6*d^3*(3 - 20*sw^2 + 32*sw^4) - 
           24*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8) + 
           d*(279 - 1860*sw^2 + 3392*sw^4 - 1280*sw^6 + 1024*sw^8))*t + 
         2*(-3 + 2*d)*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^2))))/
   ((-1 + d)*mz^4*Pi^(4*d)*s*sw^4*(-1 + sw^2)^2), 
  ((I/27)*2^(-1 - 5*d)*(2 - d)*EL^6*(9*(2*Pi)^(4*d)*sw^4*(1/2 - (2*sw^2)/3)^2*
      (2*(-8 + 18*d - 8*d^2 + d^3)*mz^2*s - (-8 + 18*d - 8*d^2 + d^3)*s^2 + 
       8*(-4 + d)*s*t - 16*t^2) - 4^(1 + 2*d)*Pi^(4*d)*sw^8*
      (2*(8 + 12*d - 8*d^2 + d^3)*mz^2*s - (8 + 12*d - 8*d^2 + d^3)*s^2 + 
       8*(-2 + d)*s*t + 16*t^2) + (-1/2 + sw^2)^2*
      (4^(1 + 2*d)*Pi^(4*d)*sw^4*(2*(-8 + 18*d - 8*d^2 + d^3)*mz^2*s - 
         (-8 + 18*d - 8*d^2 + d^3)*s^2 + 8*(-4 + d)*s*t - 16*t^2) - 
       9*(2*Pi)^(4*d)*(1/2 - (2*sw^2)/3)^2*(2*(8 + 12*d - 8*d^2 + d^3)*mz^2*
          s - (8 + 12*d - 8*d^2 + d^3)*s^2 + 8*(-2 + d)*s*t + 16*t^2))))/
   ((-2 + d)*Pi^(5*d)*s*sw^4*(-1 + sw^2)^2), 
  ((-I/27)*EL^6*(4*sw^8*(2^(2 + d)*mz^2*Pi^d*t*((16 + 4*d - 6*d^2 + d^3)*s + 
         4*(10 - 6*d + d^2)*t) + 2^(1 + d)*mz^4*Pi^d*
        ((8 + 12*d - 8*d^2 + d^3)*s - 2*(-52 + 44*d - 12*d^2 + d^3)*t) + 
       t*(-(d^3*(2*Pi)^d*s^2) + 2^(2 + d)*Pi^d*((-2 - 3*d + 2*d^2)*s^2 + 
           2*(-2 + d)*s*t + 4*t^2))) - 
     (sw^4*(3 - 4*sw^2)^2*(2^(2 + d)*(-4 + d)*mz^2*Pi^d*t*
         ((-2 - 2*d + d^2)*s + 4*(-2 + d)*t) + 2^(1 + d)*(-4 + d)*mz^4*Pi^d*
         ((2 - 4*d + d^2)*s - 2*(14 - 8*d + d^2)*t) - 
        t*(d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*((-4 + 9*d - 4*d^2)*s^2 - 
            4*(-4 + d)*s*t + 8*t^2))))/4 + (-1/2 + sw^2)^2*
      (((3 - 4*sw^2)^2*(2^(2 + d)*mz^2*Pi^d*t*((16 + 4*d - 6*d^2 + d^3)*s + 
            4*(10 - 6*d + d^2)*t) + 2^(1 + d)*mz^4*Pi^d*
           ((8 + 12*d - 8*d^2 + d^3)*s - 2*(-52 + 44*d - 12*d^2 + d^3)*t) + 
          t*(-(d^3*(2*Pi)^d*s^2) + 2^(2 + d)*Pi^d*((-2 - 3*d + 2*d^2)*s^2 + 
              2*(-2 + d)*s*t + 4*t^2))))/4 - 
       4*sw^4*(2^(2 + d)*(-4 + d)*mz^2*Pi^d*t*((-2 - 2*d + d^2)*s + 
           4*(-2 + d)*t) + 2^(1 + d)*(-4 + d)*mz^4*Pi^d*((2 - 4*d + d^2)*s - 
           2*(14 - 8*d + d^2)*t) - t*(d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
            ((-4 + 9*d - 4*d^2)*s^2 - 4*(-4 + d)*s*t + 8*t^2))))))/
   (2^(2*(1 + d))*Pi^(2*d)*s*sw^4*(-1 + sw^2)^2), 
  ((-I/27)*2^(-7 - 2*d)*EL^6*(9*d^2*(2*Pi)^d*s^3 + 
     2^(1 + d)*Pi^d*s*(2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
         3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
           64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
         d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 
           64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*
        t^2) - mz^2*(45*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
           3*d^2*(-3 - 5*sw^2 + 8*sw^4) + d*(-9 + 60*sw^2 - 70*sw^4 - 
             80*sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
           d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
             80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
           256*sw^8)*t^2)) + 
     (-2*s*(9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
          (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
             3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
               64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
             d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*
                sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
             256*sw^8)*t^2)) + 3*mz^2*(-21*d^2*(2*Pi)^d*s^2 + 
         2^(1 + d)*Pi^d*(s^2*(18 - 120*sw^2 + 88*sw^4 + 320*sw^6 - 256*sw^8 + 
             3*d^2*(5 - 10*sw^2 + 16*sw^4) + 2*d*(-9 + 60*sw^2 - 70*sw^4 - 80*
                sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
             d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*
                sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
             256*sw^8)*t^2)))*GaugeXi[Q] + 
     (9*d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
        (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
           3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
             64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
           d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
             80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
           256*sw^8)*t^2) - 3*mz^2*(15*d^2*(2*Pi)^d*s^2 + 
         2^(1 + d)*Pi^d*(s^2*(18 - 120*sw^2 + 88*sw^4 + 320*sw^6 - 256*sw^8 + 
             d^2*(-3 - 30*sw^2 + 48*sw^4) + 2*d*(-9 + 60*sw^2 - 70*sw^4 - 80*
                sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
             d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*
                sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
             256*sw^8)*t^2)))*GaugeXi[Q]^2 + 
     mz^2*(-63*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
           3*d^2*(6 - 5*sw^2 + 8*sw^4) + d*(-9 + 60*sw^2 - 70*sw^4 - 
             80*sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
           d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
             80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
           256*sw^8)*t^2))*GaugeXi[Q]^3))/((-1 + d)*mz^4*Pi^(2*d)*s^2*sw^4*
    (-1 + sw^2)^2*(-1 + GaugeXi[Q])^2), 
  ((I/27)*2^(-7 - 4*d)*EL^6*(9*d^2*(2*Pi)^(3*d)*s^4 + 
     2^(1 + 3*d)*Pi^(3*d)*s^2*(2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 
         128*sw^8 + 3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 
           80*sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
         d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 
           64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*
        t^2) + mz^4*(9*d^2*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
        (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
           3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
             64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
           d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
             80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
           256*sw^8)*t^2)) + 2*mz^2*s*(-99*d^2*(2*Pi)^(3*d)*s^2 + 
       2^(1 + 3*d)*Pi^(3*d)*(s^2*(d^3*(9 - 60*sw^2 + 96*sw^4) + 
           d*(90 - 600*sw^2 + 596*sw^4 + 1120*sw^6 - 896*sw^8) + 
           6*(-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 128*sw^8) + 
           d^2*(330*sw^2 - 424*sw^4 - 320*sw^6 + 256*sw^8)) + 
         s*(-39*d^2*(3 - 20*sw^2 + 32*sw^4) + 6*d^3*(3 - 20*sw^2 + 32*sw^4) - 
           24*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8) + 
           d*(279 - 1860*sw^2 + 3392*sw^4 - 1280*sw^6 + 1024*sw^8))*t + 
         2*(-3 + 2*d)*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^2)) - 
     2*mz^2*(mz^2 + s)*(9*d^2*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
        (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
           3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
             64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
           d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
             80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
           256*sw^8)*t^2))*GaugeXi[Q] + mz^4*(9*d^2*(2*Pi)^(3*d)*s^2 + 
       2^(1 + 3*d)*Pi^(3*d)*(2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 
           128*sw^8 + 3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 
             80*sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
           d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
             80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
           256*sw^8)*t^2))*GaugeXi[Q]^2))/((-1 + d)*mz^4*Pi^(4*d)*s^2*sw^4*
    (-1 + sw^2)^2), ((I/27)*2^(-7 - 2*d)*EL^6*(99*d^2*mz^2*(2*Pi)^d*s^2 - 
     9*d^2*(2*Pi)^d*s^3 - 2^(1 + d)*Pi^d*s*
      (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
         3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
           64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
         d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 
           64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*
        t^2) - 2^(1 + d)*mz^2*Pi^d*(2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 
         128*sw^8 + 3*d^2*(9 - 5*sw^2 + 8*sw^4) + 
         d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 64*sw^8)) + 
       s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + d^2*(9 - 60*sw^2 + 96*sw^4) + 
         8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8))*t + 
       2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^2) + 
     (2*s*(9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
          (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
             3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
               64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
             d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*
                sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
             256*sw^8)*t^2)) + 3*mz^2*(15*d^2*(2*Pi)^d*s^2 + 
         2^(1 + d)*Pi^d*(s^2*(18 - 120*sw^2 + 88*sw^4 + 320*sw^6 - 256*sw^8 + 
             d^2*(-3 - 30*sw^2 + 48*sw^4) + 2*d*(-9 + 60*sw^2 - 70*sw^4 - 80*
                sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
             d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*
                sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
             256*sw^8)*t^2)))*GaugeXi[Q] - 
     (9*d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
        (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
           3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
             64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
           d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
             80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
           256*sw^8)*t^2) + 3*mz^2*(-33*d^2*(2*Pi)^d*s^2 + 
         2^(1 + d)*Pi^d*(s^2*(18 - 120*sw^2 + 88*sw^4 + 320*sw^6 - 256*sw^8 + 
             3*d^2*(7 - 10*sw^2 + 16*sw^4) + 2*d*(-9 + 60*sw^2 - 70*sw^4 - 80*
                sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
             d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*
                sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
             256*sw^8)*t^2)))*GaugeXi[Q]^2 + 
     mz^2*(45*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
           3*d^2*(-3 - 5*sw^2 + 8*sw^4) + d*(-9 + 60*sw^2 - 70*sw^4 - 
             80*sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
           d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
             80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
           256*sw^8)*t^2))*GaugeXi[Q]^3))/((-1 + d)*mz^4*Pi^(2*d)*s^2*sw^4*
    (-1 + sw^2)^2*(-1 + GaugeXi[Q])^2), 
  ((I/27)*2^(-7 - 4*d)*EL^6*(9*d^2*(2*Pi)^(3*d)*s^4 + 
     2^(1 + 3*d)*Pi^(3*d)*s^2*(2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 
         128*sw^8 + 3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 
           80*sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
         d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 
           64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*
        t^2) + mz^4*(9*d^2*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
        (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
           3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
             64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
           d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
             80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
           256*sw^8)*t^2)) + 2*mz^2*s*(-99*d^2*(2*Pi)^(3*d)*s^2 + 
       2^(1 + 3*d)*Pi^(3*d)*(s^2*(d^3*(9 - 60*sw^2 + 96*sw^4) + 
           d*(90 - 600*sw^2 + 596*sw^4 + 1120*sw^6 - 896*sw^8) + 
           6*(-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 128*sw^8) + 
           d^2*(330*sw^2 - 424*sw^4 - 320*sw^6 + 256*sw^8)) + 
         s*(-39*d^2*(3 - 20*sw^2 + 32*sw^4) + 6*d^3*(3 - 20*sw^2 + 32*sw^4) - 
           24*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8) + 
           d*(279 - 1860*sw^2 + 3392*sw^4 - 1280*sw^6 + 1024*sw^8))*t + 
         2*(-3 + 2*d)*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^2)) - 
     2*mz^2*(mz^2 + s)*(9*d^2*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
        (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
           3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
             64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
           d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
             80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
           256*sw^8)*t^2))*GaugeXi[Q] + mz^4*(9*d^2*(2*Pi)^(3*d)*s^2 + 
       2^(1 + 3*d)*Pi^(3*d)*(2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 
           128*sw^8 + 3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 
             80*sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
           d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
             80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
           256*sw^8)*t^2))*GaugeXi[Q]^2))/((-1 + d)*mz^4*Pi^(4*d)*s^2*sw^4*
    (-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, 
 {((I/27)*2^(1 - 4*d)*EL^6*
    (-((2*Pi)^(3*d)*((-96 + 216*d - 82*d^2 + 7*d^3)*s^2 + 
        4*(208 - 84*d + 5*d^2)*s*t + 4*(176 - 80*d + 7*d^2)*t^2)) + 
     2^(1 + 3*d)*(32 - 20*d + 3*d^2)*Pi^(3*d)*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
      GaugeXi[Q] + (-4 + d)^2*(2*Pi)^(3*d)*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
      GaugeXi[Q]^2))/((-4 + d)*Pi^(4*d)*s^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, ((-I/27)*2^(3 - d)*(32 - 14*d + d^2)*EL^6*(s + 2*t))/
   ((-4 + d)*Pi^d*s), ((-I/27)*4^(1 - d)*EL^6*
    (2^(3 + d)*Pi^d*t*(3*s^2 + 5*s*t + 2*t^2) + 
     d*s^2*(2^(1 + d)*Pi^d*s + (2*Pi)^d*(s + 3*t))))/(Pi^(2*d)*s), 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, ((I/27)*4^(-2 - d)*EL^6*
    (-3*s^3*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
         s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
         2*(3 - 20*sw^2 + 32*sw^4)*t^2)) + 
     s^2*(2^(1 + d)*Pi^d*s*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
           4*d*(-3 - 5*sw^2 + 8*sw^4)) + 2*s*(-15*d + 3*d^2 + 
           8*(3 - 5*sw^2 + 8*sw^4))*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2) + 
       7*mz^2*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
          (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
           s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
           2*(3 - 20*sw^2 + 32*sw^4)*t^2)))*GaugeXi[Q] + 
     s*(3*d^2*(2*Pi)^d*s^4 + 2^(1 + d)*Pi^d*s^2*
        (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
         s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
         2*(3 - 20*sw^2 + 32*sw^4)*t^2) - 3*2^(1 + d)*mz^2*Pi^d*s*
        (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
         2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
         4*(3 - 20*sw^2 + 32*sw^4)*t^2) + mz^4*(-27*d^2*(2*Pi)^d*s^2 + 
         2^(1 + d)*Pi^d*(2*s^2*(-15 + 3*d^2 - 50*sw^2 + 80*sw^4 - 
             5*d*(-3 - 5*sw^2 + 8*sw^4)) - 5*s*(-15*d + 3*d^2 + 
             8*(3 - 5*sw^2 + 8*sw^4))*t - 10*(3 - 20*sw^2 + 32*sw^4)*t^2)))*
      GaugeXi[Q]^2 + (3*2^(1 + d)*mz^4*Pi^d*s*
        (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
         2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
         4*(3 - 20*sw^2 + 32*sw^4)*t^2) - mz^2*s^2*(3*d^2*(2*Pi)^d*s^2 + 
         2^(1 + d)*Pi^d*(2*s^2*(3 + 10*sw^2 - 16*sw^4 + 
             d*(-3 - 5*sw^2 + 8*sw^4)) + s*(-15*d + 3*d^2 + 
             8*(3 - 5*sw^2 + 8*sw^4))*t + 2*(3 - 20*sw^2 + 32*sw^4)*t^2)) + 
       mz^6*(-9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
          (2*s^2*(3 + 3*d^2 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
           s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
           2*(3 - 20*sw^2 + 32*sw^4)*t^2)))*GaugeXi[Q]^3 - 
     mz^4*(15*d^2*(2*Pi)^d*s^3 - 2^(1 + d)*Pi^d*s*
        (2*s^2*(-3 + 3*d^2 - 10*sw^2 + 16*sw^4 + d*(3 + 5*sw^2 - 8*sw^4)) + 
         s*(15*d - 3*d^2 - 8*(3 - 5*sw^2 + 8*sw^4))*t - 
         2*(3 - 20*sw^2 + 32*sw^4)*t^2) + 2^(1 + d)*mz^2*Pi^d*
        (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
         2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
         4*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[Q]^4 + 
     mz^6*(-9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (2*s^2*(3 + 3*d^2 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
         s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
         2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[Q]^5))/
   (mz^2*Pi^(2*d)*s^2*sw^2*(-1 + sw^2)*(-1 + GaugeXi[Q])*
    (s - mz^2*GaugeXi[Q])^2), ((I/27)*16^(-1 - d)*EL^6*
    (243*d^3*(2*Pi)^(3*d)*s^4 - 2^(1 + 3*d)*Pi^(3*d)*s^2*
      (2*s^2*(876 + 3*d^4 + 40*sw^2 - 64*sw^4 - 
         3*d*(341 - 30*sw^2 + 48*sw^4) + d^2*(402 - 55*sw^2 + 88*sw^4)) + 
       s*(75*d^2 - 3*d^3 + 32*(3 + 55*sw^2 - 88*sw^4) + 
         4*d*(-45 - 230*sw^2 + 368*sw^4))*t + 2*(-28 + 15*d)*
        (3 - 20*sw^2 + 32*sw^4)*t^2) - mz^4*(-243*d^3*(2*Pi)^(3*d)*s^2 + 
       2^(1 + 3*d)*Pi^(3*d)*(2*s^2*(780 + 3*d^4 - 280*sw^2 + 448*sw^4 + 
           d*(-927 + 250*sw^2 - 400*sw^4) + d^2*(378 - 55*sw^2 + 88*sw^4)) + 
         s*(27*d^2 - 3*d^3 + d*(-84 + 40*sw^2 - 64*sw^4) + 
           32*(3 - 5*sw^2 + 8*sw^4))*t - 2*(-4 + d)*(3 - 20*sw^2 + 32*sw^4)*
          t^2)) + 2*mz^2*s*(-303*d^3*(2*Pi)^(3*d)*s^2 + 
       2^(1 + 3*d)*Pi^(3*d)*(s^2*(1752 + 9*d^4 + 80*sw^2 - 128*sw^4 + 
           4*d^3*sw^2*(-5 + 8*sw^2) + d^2*(888 + 50*sw^2 - 80*sw^4) + 
           6*d*(-353 - 10*sw^2 + 16*sw^4)) + s*(-69*d^3 + 6*d^4 + 
           d*(-660 + 40*sw^2 - 64*sw^4) + 32*(15 + 5*sw^2 - 8*sw^4) + 
           d^2*(327 - 80*sw^2 + 128*sw^4))*t + 2*(4 - 5*d + 2*d^2)*
          (3 - 20*sw^2 + 32*sw^4)*t^2)) + 
     2*(-123*d^3*(2*Pi)^(3*d)*s^4 + 2^(1 + 3*d)*Pi^(3*d)*s^2*
        (s^2*(888 + 3*d^4 + 80*sw^2 - 128*sw^4 - 6*d*(173 - 10*sw^2 + 
             16*sw^4) + d^2*(408 - 50*sw^2 + 80*sw^4)) + 
         s*(51*d^2 - 3*d^3 + 32*(3 + 25*sw^2 - 40*sw^4) + 
           44*d*(-3 - 10*sw^2 + 16*sw^4))*t + 2*(-12 + 7*d)*
          (3 - 20*sw^2 + 32*sw^4)*t^2) + mz^4*(-123*d^3*(2*Pi)^(3*d)*s^2 + 
         2^(1 + 3*d)*Pi^(3*d)*(s^2*(3*d^4 + d*(-942 + 220*sw^2 - 352*sw^4) + 
             24*(33 - 10*sw^2 + 16*sw^4) + d^2*(384 - 50*sw^2 + 80*sw^4)) + 
           s*(27*d^2 - 3*d^3 + d*(-84 + 40*sw^2 - 64*sw^4) + 
             32*(3 - 5*sw^2 + 8*sw^4))*t - 2*(-4 + d)*(3 - 20*sw^2 + 32*sw^4)*
            t^2)) - 2*mz^2*s*(-183*d^3*(2*Pi)^(3*d)*s^2 + 
         2^(1 + 3*d)*Pi^(3*d)*(2*s^2*(468 + 3*d^4 + 120*sw^2 - 192*sw^4 + 
             2*d^3*sw^2*(-5 + 8*sw^2) + d^2*(252 + 55*sw^2 - 88*sw^4) + 
             d*(-579 - 130*sw^2 + 208*sw^4)) + s*(-69*d^3 + 6*d^4 + 
             32*(15 - 10*sw^2 + 16*sw^4) - 4*d*(159 - 70*sw^2 + 112*sw^4) + 
             d^2*(315 - 80*sw^2 + 128*sw^4))*t + 2*(12 - 9*d + 2*d^2)*
            (3 - 20*sw^2 + 32*sw^4)*t^2)))*GaugeXi[Q] + 
     (3*d^3*(2*Pi)^(3*d)*s^4 + 2^(1 + 3*d)*Pi^(3*d)*s^2*
        (2*s^2*(-12 - 40*sw^2 + 64*sw^4 + d*(15 + 30*sw^2 - 48*sw^4) + 
           d^2*(-6 - 5*sw^2 + 8*sw^4)) + s*(-27*d^2 + 3*d^3 - 
           32*(3 - 5*sw^2 + 8*sw^4) + d*(84 - 40*sw^2 + 64*sw^4))*t + 
         2*(-4 + d)*(3 - 20*sw^2 + 32*sw^4)*t^2) + 
       mz^4*(3*d^3*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
          (2*s^2*(-12 - 40*sw^2 + 64*sw^4 + d*(15 + 30*sw^2 - 48*sw^4) + 
             d^2*(-6 - 5*sw^2 + 8*sw^4)) + s*(-27*d^2 + 3*d^3 - 
             32*(3 - 5*sw^2 + 8*sw^4) + d*(84 - 40*sw^2 + 64*sw^4))*t + 
           2*(-4 + d)*(3 - 20*sw^2 + 32*sw^4)*t^2)) + 
       2*mz^2*s*(-63*d^3*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
          (s^2*(3*d^4 + 4*d^3*sw^2*(-5 + 8*sw^2) + d^2*(120 + 170*sw^2 - 272*
                sw^4) + 40*(3 + 10*sw^2 - 16*sw^4) + 2*d*(-99 - 230*sw^2 + 
               368*sw^4)) + s*(-69*d^3 + 6*d^4 + d*(-612 + 520*sw^2 - 832*
                sw^4) + 160*(3 - 5*sw^2 + 8*sw^4) + d^2*(303 - 80*sw^2 + 128*
                sw^4))*t + 2*(20 - 13*d + 2*d^2)*(3 - 20*sw^2 + 32*sw^4)*
            t^2)))*GaugeXi[Q]^2))/((-4 + d)*mz^2*Pi^(4*d)*(mz^2 - s)^2*s^2*
    sw^2*(-1 + sw^2)*(-1 + GaugeXi[Q])), 
  ((-I/27)*16^(-1 - d)*EL^6*
    (-(mz^6*(-627*d^3*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
         (2*s^2*(9*d^4 + d*(-2367 + 490*sw^2 - 784*sw^4) + 
            12*(177 - 50*sw^2 + 80*sw^4) + d^2*(942 - 95*sw^2 + 152*sw^4)) + 
          s*(-195*d^3 + 12*d^4 - 52*d*(57 - 10*sw^2 + 16*sw^4) + 
            32*(87 - 25*sw^2 + 40*sw^4) + d^2*(1155 - 80*sw^2 + 128*sw^4))*
           t - 2*(-4 + d)*(3 - 20*sw^2 + 32*sw^4)*t^2))) - 
     3*s^3*(3*d^3*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
        (2*s^2*(-12 - 40*sw^2 + 64*sw^4 + d*(15 + 30*sw^2 - 48*sw^4) + 
           d^2*(-6 - 5*sw^2 + 8*sw^4)) + s*(-27*d^2 + 3*d^3 - 
           32*(3 - 5*sw^2 + 8*sw^4) + d*(84 - 40*sw^2 + 64*sw^4))*t + 
         2*(-4 + d)*(3 - 20*sw^2 + 32*sw^4)*t^2)) + 
     mz^2*s^2*(-3*d^3*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
        (-2*s^2*(2340 + 6*d^4 + 120*sw^2 - 192*sw^4 + 
           d^3*(-129 + 20*sw^2 - 32*sw^4) - 3*d*(823 - 170*sw^2 + 272*sw^4) + 
           d^2*(894 - 245*sw^2 + 392*sw^4)) + 
         s*(69*d^3 + d*(2364 + 2280*sw^2 - 3648*sw^4) + 
           d^2*(-753 - 80*sw^2 + 128*sw^4) + 32*(-69 - 185*sw^2 + 296*sw^4))*
          t + 2*(116 - 53*d + 4*d^2)*(3 - 20*sw^2 + 32*sw^4)*t^2)) + 
     mz^4*s*(-3*d^3*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
        (2*s^2*(4716 + 21*d^4 + 360*sw^2 - 576*sw^4 + 
           d*(-5247 + 50*sw^2 - 80*sw^4) + d^2*(2082 + 5*sw^2 - 8*sw^4) + 
           4*d^3*(-87 - 5*sw^2 + 8*sw^4)) + s*(-543*d^3 + 36*d^4 + 
           32*(219 + 55*sw^2 - 88*sw^4) - 12*d*(655 - 30*sw^2 + 48*sw^4) + 
           d^2*(3147 - 320*sw^2 + 512*sw^4))*t + 2*(-28 - d + 4*d^2)*
          (3 - 20*sw^2 + 32*sw^4)*t^2)) + 
     2*(3*d^3*(2*Pi)^(3*d)*s^5 + 2^(1 + 3*d)*Pi^(3*d)*s^3*
        (2*s^2*(-12 - 40*sw^2 + 64*sw^4 + d*(15 + 30*sw^2 - 48*sw^4) + 
           d^2*(-6 - 5*sw^2 + 8*sw^4)) + s*(-27*d^2 + 3*d^3 - 
           32*(3 - 5*sw^2 + 8*sw^4) + d*(84 - 40*sw^2 + 64*sw^4))*t + 
         2*(-4 + d)*(3 - 20*sw^2 + 32*sw^4)*t^2) + 
       mz^6*(-315*d^3*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
          (s^2*(9*d^4 + d*(-2382 + 460*sw^2 - 736*sw^4) + 
             6*d^2*(158 - 15*sw^2 + 24*sw^4) + 8*(267 - 70*sw^2 + 112*
                sw^4)) + s*(-99*d^3 + 6*d^4 + 96*(15 - 5*sw^2 + 8*sw^4) + 
             d^2*(591 - 40*sw^2 + 64*sw^4) - 4*d*(381 - 70*sw^2 + 112*sw^4))*
            t - 2*(-4 + d)*(3 - 20*sw^2 + 32*sw^4)*t^2)) + 
       mz^2*s^2*(-189*d^3*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
          (s^2*(3*d^4 - 8*d^3*sw^2*(-5 + 8*sw^2) - 106*d*(21 - 10*sw^2 + 16*
                sw^4) + 8*(273 - 50*sw^2 + 80*sw^4) + 
             d^2*(756 - 430*sw^2 + 688*sw^4)) + s*(39*d^3 - 6*d^4 + 
             d^2*(33 + 120*sw^2 - 192*sw^4) + 160*(3 + 25*sw^2 - 40*sw^4) + 
             4*d*(-111 - 430*sw^2 + 688*sw^4))*t - 2*(84 - 41*d + 4*d^2)*
            (3 - 20*sw^2 + 32*sw^4)*t^2)) - 
       mz^4*s*(-765*d^3*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
          (2*s^2*(2436 + 12*d^4 + 440*sw^2 - 704*sw^4 + 4*d^3*sw^2*
              (-5 + 8*sw^2) + d^2*(1110 + 95*sw^2 - 152*sw^4) + 
             5*d*(-549 - 50*sw^2 + 80*sw^4)) + s*(-345*d^3 + 24*d^4 + 
             32*(129 - 5*sw^2 + 8*sw^4) + 3*d^2*(639 - 80*sw^2 + 128*sw^4) - 
             4*d*(1167 - 190*sw^2 + 304*sw^4))*t + 2*(12 - 15*d + 4*d^2)*
            (3 - 20*sw^2 + 32*sw^4)*t^2)))*GaugeXi[Q] + 
     (mz^2 + s)*(3*d^3*(2*Pi)^(3*d)*s^4 + 2^(1 + 3*d)*Pi^(3*d)*s^2*
        (2*s^2*(-12 - 40*sw^2 + 64*sw^4 + d*(15 + 30*sw^2 - 48*sw^4) + 
           d^2*(-6 - 5*sw^2 + 8*sw^4)) + s*(-27*d^2 + 3*d^3 - 
           32*(3 - 5*sw^2 + 8*sw^4) + d*(84 - 40*sw^2 + 64*sw^4))*t + 
         2*(-4 + d)*(3 - 20*sw^2 + 32*sw^4)*t^2) + 
       mz^4*(3*d^3*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
          (2*s^2*(-12 - 40*sw^2 + 64*sw^4 + d*(15 + 30*sw^2 - 48*sw^4) + 
             d^2*(-6 - 5*sw^2 + 8*sw^4)) + s*(-27*d^2 + 3*d^3 - 
             32*(3 - 5*sw^2 + 8*sw^4) + d*(84 - 40*sw^2 + 64*sw^4))*t + 
           2*(-4 + d)*(3 - 20*sw^2 + 32*sw^4)*t^2)) + 
       2*mz^2*s*(-69*d^3*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
          (s^2*(3*d^4 + 4*d^3*sw^2*(-5 + 8*sw^2) + d^2*(144 + 190*sw^2 - 304*
                sw^4) + 56*(3 + 10*sw^2 - 16*sw^4) + d*(-258 - 580*sw^2 + 928*
                sw^4)) + s*(-75*d^3 + 6*d^4 + 224*(3 - 5*sw^2 + 8*sw^4) - 
             60*d*(13 - 10*sw^2 + 16*sw^4) + d^2*(357 - 80*sw^2 + 128*sw^4))*
            t + 2*(28 - 15*d + 2*d^2)*(3 - 20*sw^2 + 32*sw^4)*t^2)))*
      GaugeXi[Q]^2))/((-4 + d)*mz^2*Pi^(4*d)*(mz^2 - s)^2*s^2*sw^2*
    (-1 + sw^2)*(-1 + GaugeXi[Q])), 0, 0, 
  ((-I/27)*4^(-2 - d)*EL^6*(3*d^2*(2*Pi)^d*s^4 + 2^(1 + d)*Pi^d*s^2*
      (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
       s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
       2*(3 - 20*sw^2 + 32*sw^4)*t^2) - 2*s*(mz^2 + s)*
      (3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
         s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
         2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[Q] + 
     (3*d^2*(2*Pi)^d*s^4 + 2^(1 + d)*Pi^d*s^2*
        (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
         s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
         2*(3 - 20*sw^2 + 32*sw^4)*t^2) + 2^(2 + d)*mz^2*Pi^d*s*
        (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
         2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
         4*(3 - 20*sw^2 + 32*sw^4)*t^2) + mz^4*(-9*d^2*(2*Pi)^d*s^2 + 
         2^(1 + d)*Pi^d*(2*s^2*(3 + 3*d^2 + 10*sw^2 - 16*sw^4 + 
             d*(-3 - 5*sw^2 + 8*sw^4)) + s*(-15*d + 3*d^2 + 
             8*(3 - 5*sw^2 + 8*sw^4))*t + 2*(3 - 20*sw^2 + 32*sw^4)*t^2)))*
      GaugeXi[Q]^2 - 2*mz^2*(mz^2 + s)*(3*d^2*(2*Pi)^d*s^2 + 
       2^(1 + d)*Pi^d*(2*s^2*(3 + 10*sw^2 - 16*sw^4 + 
           d*(-3 - 5*sw^2 + 8*sw^4)) + s*(-15*d + 3*d^2 + 
           8*(3 - 5*sw^2 + 8*sw^4))*t + 2*(3 - 20*sw^2 + 32*sw^4)*t^2))*
      GaugeXi[Q]^3 + mz^4*(-9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (2*s^2*(3 + 3*d^2 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
         s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
         2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[Q]^4))/
   (mz^2*Pi^(2*d)*s^2*sw^2*(-1 + sw^2)*(-1 + GaugeXi[Q])*
    (s - mz^2*GaugeXi[Q])^2), 0, 0, 0, 0, 0, 0, 0, 0, 
  ((I/27)*4^(-1 - d)*EL^6*(21*d^3*(2*Pi)^d*s + 
     mz^2*(3*d^3*(15 + d)*(2*Pi)^d + 2^(1 + d)*Pi^d*
        (-54*d^3 + 48*(12 - 5*sw^2 + 8*sw^4) + 
         3*d^2*(71 - 10*sw^2 + 16*sw^4) - 2*d*(294 - 85*sw^2 + 136*sw^4))) + 
     2^(1 + d)*Pi^d*(s*(-225*d^2 + 12*d^3 + d*(744 + 30*sw^2 - 48*sw^4) + 
         16*(-51 - 5*sw^2 + 8*sw^4)) + (-36*d^3 + 3*d^4 + 
         2*d^2*(87 - 10*sw^2 + 16*sw^4) + 16*(24 - 25*sw^2 + 40*sw^4) - 
         8*d*(51 - 25*sw^2 + 40*sw^4))*t)))/((-4 + d)*Pi^(2*d)*s*sw^2*
    (-1 + sw^2)), 0, ((I/27)*2^(-3 - 2*d)*EL^6*
    ((s + t)*(-3*d^3*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
        (s*(33*d^2 + 16*(15 + 5*sw^2 - 8*sw^4) + 2*d*(-84 - 5*sw^2 + 
             8*sw^4)) + 4*(-18*d + 3*d^2 + 4*(6 + 5*sw^2 - 8*sw^4))*t)) + 
     mz^2*(-3*d^3*(2*Pi)^d*(s - 3*t) + 2^(1 + d)*Pi^d*
        (s*(-144 - 45*d^2 + 6*d^3 + 2*d*(72 - 5*sw^2 + 8*sw^4)) + 
         (-144 - 45*d^2 + 2*d*(72 - 5*sw^2 + 8*sw^4))*t))))/
   (Pi^(2*d)*s*sw^2*(-1 + sw^2)), ((-I/27)*2^(-3 - 2*d)*EL^6*(s + t)*
    (3*d^3*(2*Pi)^d*s^2 + mz^4*(-3*d^3*(2*Pi)^d + 2^(1 + d)*Pi^d*
        (27*d^2 + 16*(12 - 5*sw^2 + 8*sw^4) - 6*d*(22 - 5*sw^2 + 8*sw^4))) + 
     2^(1 + d)*mz^2*Pi^d*(s*(-432 - 60*d^2 + 3*d^3 + 
         4*d*(75 - 5*sw^2 + 8*sw^4)) - 4*(-18*d + 3*d^2 + 
         4*(6 + 5*sw^2 - 8*sw^4))*t) - 2^(1 + d)*Pi^d*
      (3*s^2*(-72 - 9*d^2 + d^3 + 2*d*(24 - 5*sw^2 + 8*sw^4)) + 
       12*s*(d + 4*sw^2*(-5 + 8*sw^2))*t + 8*(3 - 20*sw^2 + 32*sw^4)*t^2)))/
   (Pi^(2*d)*s*sw^2*(-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, ((I/27)*4^(-2 - d)*EL^6*
    (-3*s^3*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
         s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
         2*(3 - 20*sw^2 + 32*sw^4)*t^2)) + 
     s^2*(2^(1 + d)*Pi^d*s*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
           4*d*(-3 - 5*sw^2 + 8*sw^4)) + 2*s*(-15*d + 3*d^2 + 
           8*(3 - 5*sw^2 + 8*sw^4))*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2) + 
       mz^2*(33*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
          (-2*s^2*(3*d^2 - 7*d*(-3 - 5*sw^2 + 8*sw^4) + 
             7*(-3 - 10*sw^2 + 16*sw^4)) + 7*s*(-15*d + 3*d^2 + 
             8*(3 - 5*sw^2 + 8*sw^4))*t + 14*(3 - 20*sw^2 + 32*sw^4)*t^2)))*
      GaugeXi[Q] - s*(3*2^(1 + d)*mz^2*Pi^d*s*
        (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
         2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
         4*(3 - 20*sw^2 + 32*sw^4)*t^2) - s^2*(3*d^2*(2*Pi)^d*s^2 + 
         2^(1 + d)*Pi^d*(2*s^2*(3 + 10*sw^2 - 16*sw^4 + 
             d*(-3 - 5*sw^2 + 8*sw^4)) + s*(-15*d + 3*d^2 + 
             8*(3 - 5*sw^2 + 8*sw^4))*t + 2*(3 - 20*sw^2 + 32*sw^4)*t^2)) + 
       mz^4*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
          (2*s^2*(15 + 3*d^2 + 50*sw^2 - 80*sw^4 + 5*d*(-3 - 5*sw^2 + 8*
                sw^4)) + 5*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
           10*(3 - 20*sw^2 + 32*sw^4)*t^2)))*GaugeXi[Q]^2 + 
     mz^2*(9*d^2*(2*Pi)^d*s^4 - 2^(1 + d)*Pi^d*s^2*
        (2*s^2*(3 + 3*d^2 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
         s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
         2*(3 - 20*sw^2 + 32*sw^4)*t^2) + 3*2^(1 + d)*mz^2*Pi^d*s*
        (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
         2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
         4*(3 - 20*sw^2 + 32*sw^4)*t^2) + mz^4*(3*d^2*(2*Pi)^d*s^2 + 
         2^(1 + d)*Pi^d*(2*s^2*(3 + 10*sw^2 - 16*sw^4 + 
             d*(-3 - 5*sw^2 + 8*sw^4)) + s*(-15*d + 3*d^2 + 
             8*(3 - 5*sw^2 + 8*sw^4))*t + 2*(3 - 20*sw^2 + 32*sw^4)*t^2)))*
      GaugeXi[Q]^3 - mz^4*(-9*d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
        (2*s^2*(3 + 3*d^2 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
         s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
         2*(3 - 20*sw^2 + 32*sw^4)*t^2) + 2^(1 + d)*mz^2*Pi^d*
        (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
         2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
         4*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[Q]^4 + 
     mz^6*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
         s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
         2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[Q]^5))/
   (mz^2*Pi^(2*d)*s^2*sw^2*(-1 + sw^2)*(-1 + GaugeXi[Q])*
    (s - mz^2*GaugeXi[Q])^2), ((I/27)*16^(-1 - d)*EL^6*
    (243*d^3*(2*Pi)^(3*d)*s^4 - 2^(1 + 3*d)*Pi^(3*d)*s^2*
      (2*s^2*(876 + 3*d^4 + 40*sw^2 - 64*sw^4 - 
         3*d*(341 - 30*sw^2 + 48*sw^4) + d^2*(402 - 55*sw^2 + 88*sw^4)) + 
       s*(75*d^2 - 3*d^3 + 32*(3 + 55*sw^2 - 88*sw^4) + 
         4*d*(-45 - 230*sw^2 + 368*sw^4))*t + 2*(-28 + 15*d)*
        (3 - 20*sw^2 + 32*sw^4)*t^2) + mz^4*(243*d^3*(2*Pi)^(3*d)*s^2 - 
       2^(1 + 3*d)*Pi^(3*d)*(2*s^2*(780 + 3*d^4 - 280*sw^2 + 448*sw^4 + 
           d*(-927 + 250*sw^2 - 400*sw^4) + d^2*(378 - 55*sw^2 + 88*sw^4)) + 
         s*(27*d^2 - 3*d^3 + d*(-84 + 40*sw^2 - 64*sw^4) + 
           32*(3 - 5*sw^2 + 8*sw^4))*t - 2*(-4 + d)*(3 - 20*sw^2 + 32*sw^4)*
          t^2)) + 2*mz^2*s*(-303*d^3*(2*Pi)^(3*d)*s^2 + 
       2^(1 + 3*d)*Pi^(3*d)*(s^2*(1752 + 9*d^4 + 80*sw^2 - 128*sw^4 + 
           4*d^3*sw^2*(-5 + 8*sw^2) + d^2*(888 + 50*sw^2 - 80*sw^4) + 
           6*d*(-353 - 10*sw^2 + 16*sw^4)) + s*(-69*d^3 + 6*d^4 + 
           d*(-660 + 40*sw^2 - 64*sw^4) + 32*(15 + 5*sw^2 - 8*sw^4) + 
           d^2*(327 - 80*sw^2 + 128*sw^4))*t + 2*(4 - 5*d + 2*d^2)*
          (3 - 20*sw^2 + 32*sw^4)*t^2)) + 
     2*(-123*d^3*(2*Pi)^(3*d)*s^4 + 2^(1 + 3*d)*Pi^(3*d)*s^2*
        (s^2*(888 + 3*d^4 + 80*sw^2 - 128*sw^4 - 6*d*(173 - 10*sw^2 + 
             16*sw^4) + d^2*(408 - 50*sw^2 + 80*sw^4)) + 
         s*(51*d^2 - 3*d^3 + 32*(3 + 25*sw^2 - 40*sw^4) + 
           44*d*(-3 - 10*sw^2 + 16*sw^4))*t + 2*(-12 + 7*d)*
          (3 - 20*sw^2 + 32*sw^4)*t^2) + mz^4*(-123*d^3*(2*Pi)^(3*d)*s^2 + 
         2^(1 + 3*d)*Pi^(3*d)*(s^2*(3*d^4 + d*(-942 + 220*sw^2 - 352*sw^4) + 
             24*(33 - 10*sw^2 + 16*sw^4) + d^2*(384 - 50*sw^2 + 80*sw^4)) + 
           s*(27*d^2 - 3*d^3 + d*(-84 + 40*sw^2 - 64*sw^4) + 
             32*(3 - 5*sw^2 + 8*sw^4))*t - 2*(-4 + d)*(3 - 20*sw^2 + 32*sw^4)*
            t^2)) - 2*mz^2*s*(-183*d^3*(2*Pi)^(3*d)*s^2 + 
         2^(1 + 3*d)*Pi^(3*d)*(2*s^2*(468 + 3*d^4 + 120*sw^2 - 192*sw^4 + 
             2*d^3*sw^2*(-5 + 8*sw^2) + d^2*(252 + 55*sw^2 - 88*sw^4) + 
             d*(-579 - 130*sw^2 + 208*sw^4)) + s*(-69*d^3 + 6*d^4 + 
             32*(15 - 10*sw^2 + 16*sw^4) - 4*d*(159 - 70*sw^2 + 112*sw^4) + 
             d^2*(315 - 80*sw^2 + 128*sw^4))*t + 2*(12 - 9*d + 2*d^2)*
            (3 - 20*sw^2 + 32*sw^4)*t^2)))*GaugeXi[Q] + 
     (3*d^3*(2*Pi)^(3*d)*s^4 + 2^(1 + 3*d)*Pi^(3*d)*s^2*
        (2*s^2*(-12 - 40*sw^2 + 64*sw^4 + d*(15 + 30*sw^2 - 48*sw^4) + 
           d^2*(-6 - 5*sw^2 + 8*sw^4)) + s*(-27*d^2 + 3*d^3 - 
           32*(3 - 5*sw^2 + 8*sw^4) + d*(84 - 40*sw^2 + 64*sw^4))*t + 
         2*(-4 + d)*(3 - 20*sw^2 + 32*sw^4)*t^2) + 
       mz^4*(3*d^3*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
          (2*s^2*(-12 - 40*sw^2 + 64*sw^4 + d*(15 + 30*sw^2 - 48*sw^4) + 
             d^2*(-6 - 5*sw^2 + 8*sw^4)) + s*(-27*d^2 + 3*d^3 - 
             32*(3 - 5*sw^2 + 8*sw^4) + d*(84 - 40*sw^2 + 64*sw^4))*t + 
           2*(-4 + d)*(3 - 20*sw^2 + 32*sw^4)*t^2)) + 
       2*mz^2*s*(-63*d^3*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
          (s^2*(3*d^4 + 4*d^3*sw^2*(-5 + 8*sw^2) + d^2*(120 + 170*sw^2 - 272*
                sw^4) + 40*(3 + 10*sw^2 - 16*sw^4) + 2*d*(-99 - 230*sw^2 + 
               368*sw^4)) + s*(-69*d^3 + 6*d^4 + d*(-612 + 520*sw^2 - 832*
                sw^4) + 160*(3 - 5*sw^2 + 8*sw^4) + d^2*(303 - 80*sw^2 + 128*
                sw^4))*t + 2*(20 - 13*d + 2*d^2)*(3 - 20*sw^2 + 32*sw^4)*
            t^2)))*GaugeXi[Q]^2))/((-4 + d)*mz^2*Pi^(4*d)*(mz^2 - s)^2*s^2*
    sw^2*(-1 + sw^2)*(-1 + GaugeXi[Q])), 
  ((-I/27)*16^(-1 - d)*EL^6*
    (-(mz^6*(-627*d^3*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
         (2*s^2*(9*d^4 + d*(-2367 + 490*sw^2 - 784*sw^4) + 
            12*(177 - 50*sw^2 + 80*sw^4) + d^2*(942 - 95*sw^2 + 152*sw^4)) + 
          s*(-195*d^3 + 12*d^4 - 52*d*(57 - 10*sw^2 + 16*sw^4) + 
            32*(87 - 25*sw^2 + 40*sw^4) + d^2*(1155 - 80*sw^2 + 128*sw^4))*
           t - 2*(-4 + d)*(3 - 20*sw^2 + 32*sw^4)*t^2))) - 
     3*s^3*(3*d^3*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
        (2*s^2*(-12 - 40*sw^2 + 64*sw^4 + d*(15 + 30*sw^2 - 48*sw^4) + 
           d^2*(-6 - 5*sw^2 + 8*sw^4)) + s*(-27*d^2 + 3*d^3 - 
           32*(3 - 5*sw^2 + 8*sw^4) + d*(84 - 40*sw^2 + 64*sw^4))*t + 
         2*(-4 + d)*(3 - 20*sw^2 + 32*sw^4)*t^2)) + 
     mz^2*s^2*(-3*d^3*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
        (-2*s^2*(2340 + 6*d^4 + 120*sw^2 - 192*sw^4 + 
           d^3*(-129 + 20*sw^2 - 32*sw^4) - 3*d*(823 - 170*sw^2 + 272*sw^4) + 
           d^2*(894 - 245*sw^2 + 392*sw^4)) + 
         s*(69*d^3 + d*(2364 + 2280*sw^2 - 3648*sw^4) + 
           d^2*(-753 - 80*sw^2 + 128*sw^4) + 32*(-69 - 185*sw^2 + 296*sw^4))*
          t + 2*(116 - 53*d + 4*d^2)*(3 - 20*sw^2 + 32*sw^4)*t^2)) + 
     mz^4*s*(9*d^3*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
        (2*s^2*(4716 + 21*d^4 + 360*sw^2 - 576*sw^4 + 
           d*(-5247 + 50*sw^2 - 80*sw^4) + d^2*(2082 + 5*sw^2 - 8*sw^4) + 
           d^3*(-351 - 20*sw^2 + 32*sw^4)) + s*(-543*d^3 + 36*d^4 + 
           32*(219 + 55*sw^2 - 88*sw^4) - 12*d*(655 - 30*sw^2 + 48*sw^4) + 
           d^2*(3147 - 320*sw^2 + 512*sw^4))*t + 2*(-28 - d + 4*d^2)*
          (3 - 20*sw^2 + 32*sw^4)*t^2)) + 
     2*(3*d^3*(2*Pi)^(3*d)*s^5 + 2^(1 + 3*d)*Pi^(3*d)*s^3*
        (2*s^2*(-12 - 40*sw^2 + 64*sw^4 + d*(15 + 30*sw^2 - 48*sw^4) + 
           d^2*(-6 - 5*sw^2 + 8*sw^4)) + s*(-27*d^2 + 3*d^3 - 
           32*(3 - 5*sw^2 + 8*sw^4) + d*(84 - 40*sw^2 + 64*sw^4))*t + 
         2*(-4 + d)*(3 - 20*sw^2 + 32*sw^4)*t^2) + 
       mz^6*(-315*d^3*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
          (s^2*(9*d^4 + d*(-2382 + 460*sw^2 - 736*sw^4) + 
             6*d^2*(158 - 15*sw^2 + 24*sw^4) + 8*(267 - 70*sw^2 + 112*
                sw^4)) + s*(-99*d^3 + 6*d^4 + 96*(15 - 5*sw^2 + 8*sw^4) + 
             d^2*(591 - 40*sw^2 + 64*sw^4) - 4*d*(381 - 70*sw^2 + 112*sw^4))*
            t - 2*(-4 + d)*(3 - 20*sw^2 + 32*sw^4)*t^2)) + 
       mz^2*s^2*(-189*d^3*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
          (s^2*(3*d^4 - 8*d^3*sw^2*(-5 + 8*sw^2) - 106*d*(21 - 10*sw^2 + 16*
                sw^4) + 8*(273 - 50*sw^2 + 80*sw^4) + 
             d^2*(756 - 430*sw^2 + 688*sw^4)) + s*(39*d^3 - 6*d^4 + 
             d^2*(33 + 120*sw^2 - 192*sw^4) + 160*(3 + 25*sw^2 - 40*sw^4) + 
             4*d*(-111 - 430*sw^2 + 688*sw^4))*t - 2*(84 - 41*d + 4*d^2)*
            (3 - 20*sw^2 + 32*sw^4)*t^2)) - 
       mz^4*s*(-765*d^3*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
          (2*s^2*(2436 + 12*d^4 + 440*sw^2 - 704*sw^4 + 4*d^3*sw^2*
              (-5 + 8*sw^2) + d^2*(1110 + 95*sw^2 - 152*sw^4) + 
             5*d*(-549 - 50*sw^2 + 80*sw^4)) + s*(-345*d^3 + 24*d^4 + 
             32*(129 - 5*sw^2 + 8*sw^4) + 3*d^2*(639 - 80*sw^2 + 128*sw^4) - 
             4*d*(1167 - 190*sw^2 + 304*sw^4))*t + 2*(12 - 15*d + 4*d^2)*
            (3 - 20*sw^2 + 32*sw^4)*t^2)))*GaugeXi[Q] + 
     (mz^2 + s)*(3*d^3*(2*Pi)^(3*d)*s^4 + 2^(1 + 3*d)*Pi^(3*d)*s^2*
        (2*s^2*(-12 - 40*sw^2 + 64*sw^4 + d*(15 + 30*sw^2 - 48*sw^4) + 
           d^2*(-6 - 5*sw^2 + 8*sw^4)) + s*(-27*d^2 + 3*d^3 - 
           32*(3 - 5*sw^2 + 8*sw^4) + d*(84 - 40*sw^2 + 64*sw^4))*t + 
         2*(-4 + d)*(3 - 20*sw^2 + 32*sw^4)*t^2) + 
       mz^4*(3*d^3*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
          (2*s^2*(-12 - 40*sw^2 + 64*sw^4 + d*(15 + 30*sw^2 - 48*sw^4) + 
             d^2*(-6 - 5*sw^2 + 8*sw^4)) + s*(-27*d^2 + 3*d^3 - 
             32*(3 - 5*sw^2 + 8*sw^4) + d*(84 - 40*sw^2 + 64*sw^4))*t + 
           2*(-4 + d)*(3 - 20*sw^2 + 32*sw^4)*t^2)) + 
       2*mz^2*s*(-69*d^3*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
          (s^2*(3*d^4 + 4*d^3*sw^2*(-5 + 8*sw^2) + d^2*(144 + 190*sw^2 - 304*
                sw^4) + 56*(3 + 10*sw^2 - 16*sw^4) + d*(-258 - 580*sw^2 + 928*
                sw^4)) + s*(-75*d^3 + 6*d^4 + 224*(3 - 5*sw^2 + 8*sw^4) - 
             60*d*(13 - 10*sw^2 + 16*sw^4) + d^2*(357 - 80*sw^2 + 128*sw^4))*
            t + 2*(28 - 15*d + 2*d^2)*(3 - 20*sw^2 + 32*sw^4)*t^2)))*
      GaugeXi[Q]^2))/((-4 + d)*mz^2*Pi^(4*d)*(mz^2 - s)^2*s^2*sw^2*
    (-1 + sw^2)*(-1 + GaugeXi[Q])), 0, 0, 
  ((-I/27)*4^(-2 - d)*EL^6*(3*d^2*(2*Pi)^d*s^4 + 2^(1 + d)*Pi^d*s^2*
      (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
       s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
       2*(3 - 20*sw^2 + 32*sw^4)*t^2) - 2*s*(mz^2 + s)*
      (3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
         s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
         2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[Q] + 
     (3*d^2*(2*Pi)^d*s^4 + 2^(1 + d)*Pi^d*s^2*
        (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
         s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
         2*(3 - 20*sw^2 + 32*sw^4)*t^2) + 2^(2 + d)*mz^2*Pi^d*s*
        (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
         2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
         4*(3 - 20*sw^2 + 32*sw^4)*t^2) + mz^4*(3*d^2*(2*Pi)^d*s^2 + 
         2^(1 + d)*Pi^d*(2*s^2*(3 + 10*sw^2 - 16*sw^4 + 
             d*(-3 - 5*sw^2 + 8*sw^4)) + s*(-15*d + 3*d^2 + 
             8*(3 - 5*sw^2 + 8*sw^4))*t + 2*(3 - 20*sw^2 + 32*sw^4)*t^2)))*
      GaugeXi[Q]^2 - 2*mz^2*(mz^2 + s)*(3*d^2*(2*Pi)^d*s^2 + 
       2^(1 + d)*Pi^d*(2*s^2*(3 + 10*sw^2 - 16*sw^4 + 
           d*(-3 - 5*sw^2 + 8*sw^4)) + s*(-15*d + 3*d^2 + 
           8*(3 - 5*sw^2 + 8*sw^4))*t + 2*(3 - 20*sw^2 + 32*sw^4)*t^2))*
      GaugeXi[Q]^3 + mz^4*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
         s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
         2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[Q]^4))/
   (mz^2*Pi^(2*d)*s^2*sw^2*(-1 + sw^2)*(-1 + GaugeXi[Q])*
    (s - mz^2*GaugeXi[Q])^2), 0, 0, 0, 0, 0, 0, 0, 0, 
  ((I/27)*4^(-1 - d)*EL^6*(21*d^3*(2*Pi)^d*s + 
     mz^2*(3*d^3*(15 + d)*(2*Pi)^d + 2^(1 + d)*Pi^d*
        (-54*d^3 + 48*(12 - 5*sw^2 + 8*sw^4) + 
         3*d^2*(71 - 10*sw^2 + 16*sw^4) - 2*d*(294 - 85*sw^2 + 136*sw^4))) + 
     2^(1 + d)*Pi^d*(s*(-225*d^2 + 12*d^3 + d*(744 + 30*sw^2 - 48*sw^4) + 
         16*(-51 - 5*sw^2 + 8*sw^4)) + (-36*d^3 + 3*d^4 + 
         2*d^2*(87 - 10*sw^2 + 16*sw^4) + 16*(24 - 25*sw^2 + 40*sw^4) - 
         8*d*(51 - 25*sw^2 + 40*sw^4))*t)))/((-4 + d)*Pi^(2*d)*s*sw^2*
    (-1 + sw^2)), 0, ((I/27)*2^(-3 - 2*d)*EL^6*
    ((s + t)*(-3*d^3*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
        (s*(33*d^2 + 16*(15 + 5*sw^2 - 8*sw^4) + 2*d*(-84 - 5*sw^2 + 
             8*sw^4)) + 4*(-18*d + 3*d^2 + 4*(6 + 5*sw^2 - 8*sw^4))*t)) + 
     mz^2*(-3*d^3*(2*Pi)^d*(s - 3*t) + 2^(1 + d)*Pi^d*
        (s*(-144 - 45*d^2 + 6*d^3 + 2*d*(72 - 5*sw^2 + 8*sw^4)) + 
         (-144 - 45*d^2 + 2*d*(72 - 5*sw^2 + 8*sw^4))*t))))/
   (Pi^(2*d)*s*sw^2*(-1 + sw^2)), ((-I/27)*2^(-3 - 2*d)*EL^6*(s + t)*
    (3*d^3*(2*Pi)^d*s^2 + mz^4*(-3*d^3*(2*Pi)^d + 2^(1 + d)*Pi^d*
        (27*d^2 + 16*(12 - 5*sw^2 + 8*sw^4) - 6*d*(22 - 5*sw^2 + 8*sw^4))) + 
     2^(1 + d)*mz^2*Pi^d*(s*(-432 - 60*d^2 + 3*d^3 + 
         4*d*(75 - 5*sw^2 + 8*sw^4)) - 4*(-18*d + 3*d^2 + 
         4*(6 + 5*sw^2 - 8*sw^4))*t) - 2^(1 + d)*Pi^d*
      (3*s^2*(-72 - 9*d^2 + d^3 + 2*d*(24 - 5*sw^2 + 8*sw^4)) + 
       12*s*(d + 4*sw^2*(-5 + 8*sw^2))*t + 8*(3 - 20*sw^2 + 32*sw^4)*t^2)))/
   (Pi^(2*d)*s*sw^2*(-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, ((-I/27)*2^(-7 - 4*d)*EL^6*(9*d^2*(2*Pi)^(3*d)*s^2*(s + 3*t) + 
     2^(1 + 3*d)*Pi^(3*d)*(2*s^3*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 
         128*sw^8 + 3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 
           80*sw^6 + 64*sw^8)) + s^2*(90 - 600*sw^2 + 1064*sw^4 - 320*sw^6 + 
         256*sw^8 + 18*d^2*sw^2*(-5 + 8*sw^2) + 
         d*(-63 + 420*sw^2 - 620*sw^4 - 160*sw^6 + 128*sw^8))*t + 
       s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + d^2*(9 - 60*sw^2 + 96*sw^4) + 
         2*(45 - 300*sw^2 + 688*sw^4 - 640*sw^6 + 512*sw^8))*t^2 + 
       2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^3))*
    (-mz^2 + s + mz^2*GaugeXi[Q]))/((-1 + d)*mz^4*Pi^(4*d)*s^2*sw^4*
    (-1 + sw^2)^2*(s + t)), 0, 0, 0, 
  ((I/27)*2^(-7 - 2*d)*EL^6*(63*d^2*(2*Pi)^d*s^3 - 
     2^(1 + d)*Pi^d*s*(2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
         3*d^2*(6 - 5*sw^2 + 8*sw^4) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
           64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
         d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 
           64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*
        t^2) - mz^2*(-27*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
           3*d^2*(3 - 5*sw^2 + 8*sw^4) + d*(-9 + 60*sw^2 - 70*sw^4 - 
             80*sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
           d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
             80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
           256*sw^8)*t^2)) + 
     (2*s*(9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
          (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
             3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
               64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
             d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*
                sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
             256*sw^8)*t^2)) + 3*mz^2*(27*d^2*(2*Pi)^d*s^2 + 
         2^(1 + d)*Pi^d*(s^2*(18 - 120*sw^2 + 88*sw^4 + 320*sw^6 - 256*sw^8 + 
             d^2*(-9 - 30*sw^2 + 48*sw^4) + 2*d*(-9 + 60*sw^2 - 70*sw^4 - 80*
                sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
             d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*
                sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
             256*sw^8)*t^2)))*GaugeXi[Q] - 
     (-63*d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
        (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
           3*d^2*(6 - 5*sw^2 + 8*sw^4) + d*(-9 + 60*sw^2 - 70*sw^4 - 
             80*sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
           d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
             80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
           256*sw^8)*t^2) + 3*mz^2*(-21*d^2*(2*Pi)^d*s^2 + 
         2^(1 + d)*Pi^d*(s^2*(18 - 120*sw^2 + 88*sw^4 + 320*sw^6 - 256*sw^8 + 
             3*d^2*(5 - 10*sw^2 + 16*sw^4) + 2*d*(-9 + 60*sw^2 - 70*sw^4 - 80*
                sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
             d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*
                sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
             256*sw^8)*t^2)))*GaugeXi[Q]^2 + 
     mz^2*(9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
           3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
             64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
           d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
             80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
           256*sw^8)*t^2))*GaugeXi[Q]^3))/((-1 + d)*mz^4*Pi^(2*d)*s^2*sw^4*
    (-1 + sw^2)^2*(-1 + GaugeXi[Q])^2), 
  ((I/27)*2^(-7 - 2*d)*EL^6*(-63*d^2*(2*Pi)^d*s^3 + 
     2^(1 + d)*Pi^d*s*(2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
         3*d^2*(6 - 5*sw^2 + 8*sw^4) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
           64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
         d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 
           64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*
        t^2) - 2*(2*mz^2 + s)*(9*d^2*(2*Pi)^d*s^2 + 
       2^(1 + d)*Pi^d*(2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
           3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
             64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
           d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
             80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
           256*sw^8)*t^2))*GaugeXi[Q] + 
     (-63*d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
        (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
           3*d^2*(6 - 5*sw^2 + 8*sw^4) + d*(-9 + 60*sw^2 - 70*sw^4 - 
             80*sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
           d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
             80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
           256*sw^8)*t^2) + 8*mz^2*(9*d^2*(2*Pi)^d*s^2 + 
         2^(1 + d)*Pi^d*(2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
             3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
               64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
             d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*
                sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
             256*sw^8)*t^2)))*GaugeXi[Q]^2 - 
     4*mz^2*(9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
           3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
             64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
           d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
             80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
           256*sw^8)*t^2))*GaugeXi[Q]^3))/((-1 + d)*mz^4*Pi^(2*d)*s*sw^4*
    (-1 + sw^2)^2*(-1 + GaugeXi[Q])^2), 
  ((-I/27)*2^(-7 - 3*d)*EL^6*
    (-((2*Pi)^(2*d)*s*(4*(-1 + d)*mz^4 - 4*d*mz^2*s + d*s^2)*
       (1 - 4*sw^2 + 8*sw^4)*(9 - 24*sw^2 + 32*sw^4)*(-1 + GaugeXi[Q])^2) + 
     4^(1 + d)*(-1 + d)*mz^4*Pi^(2*d)*(-36*d^2*(3 - 20*sw^2 + 32*sw^4) + 
       d^3*(9 - 60*sw^2 + 96*sw^4) - 8*(63 - 420*sw^2 + 698*sw^4 - 80*sw^6 + 
         64*sw^8) + d*(414 - 2760*sw^2 + 4520*sw^4 - 320*sw^6 + 256*sw^8))*
      (s + 2*t)*(-1 + GaugeXi[Q])^2 + 2^(2 + d)*(-1 + d)*mz^4*Pi^d*
      (9*d^3*(2*Pi)^d + 2^(1 + d)*Pi^d*(6*d^3*sw^2*(-5 + 8*sw^2) - 
         18*d^2*(3 - 20*sw^2 + 32*sw^4) - 4*(63 - 420*sw^2 + 698*sw^4 - 
           80*sw^6 + 64*sw^8) + d*(207 - 1380*sw^2 + 2260*sw^4 - 160*sw^6 + 
           128*sw^8)))*(s + 2*t)*(-1 + GaugeXi[Q])^2 - 
     (-1 + d)*(2*Pi)^d*(2*mz^2 - s)*(2^(1 + d)*mz^2*Pi^d*
        (d*s*(9 - 60*sw^2 + 96*sw^4) - 6*s*(9 - 60*sw^2 + 148*sw^4 - 
           160*sw^6 + 128*sw^8) - 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
           256*sw^8)*t) + s*(-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
          (3*s*(9 + 10*(-6 + d)*sw^2 - 4*(-37 + 4*d)*sw^4 - 160*sw^6 + 
             128*sw^8) + (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t)))*
      (-1 + GaugeXi[Q])^2 + 32*(1 - d)*
      ((sw^4*(3 - 4*sw^2)^2*((-2 + d)*(2*Pi)^(2*d)*s^2*(s + t) - 
          2^(1 + 2*d)*mz^4*Pi^(2*d)*((-112 + 81*d - 18*d^2 + d^3)*s + 
            2*(-53 + 44*d - 12*d^2 + d^3)*t) + 4^(1 + d)*mz^2*Pi^(2*d)*
           ((10 - 7*d + d^2)*s^2 + (10 - 11*d + 2*d^2)*s*t - 4*t^2)))/4 - 
       4^(1 + d)*Pi^(2*d)*sw^8*((-4 + d)*s^2*(s + t) - 
         2*mz^4*((-122 + 87*d - 18*d^2 + d^3)*s + 2*(-55 + 46*d - 12*d^2 + 
             d^3)*t) + 4*mz^2*((8 - 5*d + d^2)*s^2 + (20 - 11*d + 2*d^2)*s*
            t + 4*t^2)) + (-1/2 + sw^2)^2*
        (4*sw^4*((-2 + d)*(2*Pi)^(2*d)*s^2*(s + t) - 2^(1 + 2*d)*mz^4*
            Pi^(2*d)*((-112 + 81*d - 18*d^2 + d^3)*s + 
             2*(-53 + 44*d - 12*d^2 + d^3)*t) + 4^(1 + d)*mz^2*Pi^(2*d)*
            ((10 - 7*d + d^2)*s^2 + (10 - 11*d + 2*d^2)*s*t - 4*t^2)) - 
         9*(2*Pi)^(2*d)*(1/2 - (2*sw^2)/3)^2*((-4 + d)*s^2*(s + t) - 
           2*mz^4*((-122 + 87*d - 18*d^2 + d^3)*s + 2*(-55 + 46*d - 12*d^2 + 
               d^3)*t) + 4*mz^2*((8 - 5*d + d^2)*s^2 + (20 - 11*d + 2*d^2)*s*
              t + 4*t^2))))*(-1 + GaugeXi[Q])^2 + 
     (2*Pi)^d*s*(4*(-1 + d)*mz^4 - 4*d*mz^2*s + d*s^2)*(1 - 4*sw^2 + 8*sw^4)*
      (9 - 24*sw^2 + 32*sw^4)*(-(2*Pi)^d + 2^(1 + d)*Pi^d*GaugeXi[Q] - 
       (2*Pi)^d*GaugeXi[Q]^2) + (2*Pi)^d*(4*(-1 + d)*mz^4 + 
       s*((-2 + d)*s - 2*t) + mz^2*(-4*(-2 + d)*s + 8*t))*
      (9*d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(2*s*(9 + 15*(-4 + d)*sw^2 + 
           (122 - 24*d)*sw^4 - 80*sw^6 + 64*sw^8) + 
         (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t) - 
       2^(1 + d)*Pi^d*(d*s*(9 - 60*sw^2 + 96*sw^4) - 
         4*s*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8) - 
         2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t)*GaugeXi[Q] + 
       (9*d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(2*s*(9 + 15*(-4 + d)*sw^2 + 
             (122 - 24*d)*sw^4 - 80*sw^6 + 64*sw^8) + 
           (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t))*GaugeXi[Q]^2) - 
     (-1 + d)*(2*Pi)^d*(2*mz^2 - s)*(2^(1 + d)*mz^2*Pi^d*
        (d*s*(9 - 60*sw^2 + 96*sw^4) - 6*s*(9 - 60*sw^2 + 148*sw^4 - 
           160*sw^6 + 128*sw^8) - 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
           256*sw^8)*t) - s*(45*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
          (3*s*(-9 + 60*sw^2 - 148*sw^4 + 160*sw^6 - 128*sw^8 + 
             2*d*(-3 - 5*sw^2 + 8*sw^4)) + (-9 + 60*sw^2 - 200*sw^4 + 
             320*sw^6 - 256*sw^8)*t)) - 
       2*(2^(1 + d)*mz^2*Pi^d*(d*s*(9 - 60*sw^2 + 96*sw^4) - 
           6*s*(9 - 60*sw^2 + 148*sw^4 - 160*sw^6 + 128*sw^8) - 
           2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t) + 
         s*(-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(3*s*(9 + 10*(-6 + d)*sw^2 - 4*
                (-37 + 4*d)*sw^4 - 160*sw^6 + 128*sw^8) + 
             (9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t)))*GaugeXi[Q] + 
       (2^(1 + d)*mz^2*Pi^d*(d*s*(9 - 60*sw^2 + 96*sw^4) - 
           6*s*(9 - 60*sw^2 + 148*sw^4 - 160*sw^6 + 128*sw^8) - 
           2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t) - 
         s*(45*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(3*s*(-9 + 60*sw^2 - 148*sw^4 + 
               160*sw^6 - 128*sw^8 + 2*d*(-3 - 5*sw^2 + 8*sw^4)) + 
             (-9 + 60*sw^2 - 200*sw^4 + 320*sw^6 - 256*sw^8)*t)))*
        GaugeXi[Q]^2)))/(mz^4*Pi^(3*d)*(s - d*s)*sw^4*(-1 + sw^2)^2*
    (-1 + GaugeXi[Q])^2), ((-I/27)*32^(-1 - d)*EL^6*
    (9*d^3*(2*Pi)^(4*d)*s^2 - 2^(1 + 4*d)*mz^2*Pi^(4*d)*s*
      (-54*d^2*(3 - 20*sw^2 + 32*sw^4) + d^3*(9 - 60*sw^2 + 96*sw^4) - 
       64*(18 - 120*sw^2 + 205*sw^4 - 40*sw^6 + 32*sw^8) + 
       24*d*(33 - 220*sw^2 + 365*sw^4 - 40*sw^6 + 32*sw^8)) + 
     2^(1 + 4*d)*Pi^(4*d)*(3*s^2*(2*d^3*sw^2*(-5 + 8*sw^2) - 
         72*(3 - 20*sw^2 + 32*sw^4) - 9*d^2*(3 - 20*sw^2 + 32*sw^4) + 
         4*d*(36 - 240*sw^2 + 397*sw^4 - 40*sw^6 + 32*sw^8)) + 
       12*s*(8*sw^4*(13 - 40*sw^2 + 32*sw^4) + d*(3 - 20*sw^2 + 32*sw^4))*t + 
       8*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^2)))/
   (Pi^(5*d)*s*sw^4*(-1 + sw^2)^2), 0, 
  ((I/27)*2^(-7 - 3*d)*EL^6*(-45*d^2*(2*Pi)^(2*d)*s^3 + 
     2^(1 + 2*d)*Pi^(2*d)*s*(s^2*(18 - 120*sw^2 + 88*sw^4 + 320*sw^6 - 
         256*sw^8 + 3*d^2*(9 - 10*sw^2 + 16*sw^4) + 
         2*d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 64*sw^8)) + 
       s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + d^2*(9 - 60*sw^2 + 96*sw^4) + 
         8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8))*t + 
       2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^2) - 
     mz^2*(-9*d^2*(2*Pi)^(2*d)*s^2 + 2^(1 + 2*d)*Pi^(2*d)*
        (s^2*(18 - 120*sw^2 + 88*sw^4 + 320*sw^6 - 256*sw^8 + 
           d^2*(9 - 30*sw^2 + 48*sw^4) + 2*d*(-9 + 60*sw^2 - 70*sw^4 - 
             80*sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
           d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
             80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
           256*sw^8)*t^2)) + (3*mz^2 - 2*s)*(9*d^2*(2*Pi)^(2*d)*s^2 + 
       2^(1 + 2*d)*Pi^(2*d)*(2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 
           128*sw^8 + 3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 
             80*sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
           d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
             80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
           256*sw^8)*t^2))*GaugeXi[Q] + (-45*d^2*(2*Pi)^(2*d)*s^3 + 
       2^(1 + 2*d)*Pi^(2*d)*s*(s^2*(18 - 120*sw^2 + 88*sw^4 + 320*sw^6 - 
           256*sw^8 + 3*d^2*(9 - 10*sw^2 + 16*sw^4) + 
           2*d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 64*sw^8)) + 
         s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + d^2*(9 - 60*sw^2 + 96*sw^4) + 
           8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8))*t + 
         2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^2) - 
       3*mz^2*(-27*d^2*(2*Pi)^(2*d)*s^2 + 2^(1 + 2*d)*Pi^(2*d)*
          (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
             3*d^2*(3 - 5*sw^2 + 8*sw^4) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*
                sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
             d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*
                sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
             256*sw^8)*t^2)))*GaugeXi[Q]^2 + 
     mz^2*(-9*d^2*(2*Pi)^(2*d)*s^2 + 2^(1 + 2*d)*Pi^(2*d)*
        (s^2*(18 - 120*sw^2 + 88*sw^4 + 320*sw^6 - 256*sw^8 + 
           d^2*(9 - 30*sw^2 + 48*sw^4) + 2*d*(-9 + 60*sw^2 - 70*sw^4 - 
             80*sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
           d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
             80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
           256*sw^8)*t^2))*GaugeXi[Q]^3))/((-1 + d)*mz^4*Pi^(3*d)*s^2*sw^4*
    (-1 + sw^2)^2*(-1 + GaugeXi[Q])^2), 
  ((-I/27)*2^(-7 - 4*d)*EL^6*(9*d^2*(2*Pi)^(3*d)*s^4 + 
     2^(1 + 3*d)*Pi^(3*d)*s^2*(2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 
         128*sw^8 + 3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 
           80*sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
         d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 
           64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*
        t^2) + mz^4*(9*d^2*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
        (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
           3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
             64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
           d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
             80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
           256*sw^8)*t^2)) + 2*mz^2*s*(-99*d^2*(2*Pi)^(3*d)*s^2 + 
       2^(1 + 3*d)*Pi^(3*d)*(s^2*(d^3*(9 - 60*sw^2 + 96*sw^4) + 
           d*(90 - 600*sw^2 + 596*sw^4 + 1120*sw^6 - 896*sw^8) + 
           6*(-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 128*sw^8) + 
           d^2*(330*sw^2 - 424*sw^4 - 320*sw^6 + 256*sw^8)) + 
         s*(-39*d^2*(3 - 20*sw^2 + 32*sw^4) + 6*d^3*(3 - 20*sw^2 + 32*sw^4) - 
           24*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8) + 
           d*(279 - 1860*sw^2 + 3392*sw^4 - 1280*sw^6 + 1024*sw^8))*t + 
         2*(-3 + 2*d)*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^2)) - 
     2*mz^2*(mz^2 + s)*(9*d^2*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
        (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
           3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
             64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
           d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
             80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
           256*sw^8)*t^2))*GaugeXi[Q] + mz^4*(9*d^2*(2*Pi)^(3*d)*s^2 + 
       2^(1 + 3*d)*Pi^(3*d)*(2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 
           128*sw^8 + 3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 
             80*sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
           d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
             80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
           256*sw^8)*t^2))*GaugeXi[Q]^2))/((-1 + d)*mz^4*Pi^(4*d)*s^2*sw^4*
    (-1 + sw^2)^2), ((-I/27)*2^(-7 - 3*d)*EL^6*(45*d^2*(2*Pi)^(2*d)*s^3 - 
     2^(1 + 2*d)*Pi^(2*d)*s*(s^2*(18 - 120*sw^2 + 88*sw^4 + 320*sw^6 - 
         256*sw^8 + 3*d^2*(9 - 10*sw^2 + 16*sw^4) + 
         2*d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 64*sw^8)) + 
       s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + d^2*(9 - 60*sw^2 + 96*sw^4) + 
         8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8))*t + 
       2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^2) - 
     mz^2*(-9*d^2*(2*Pi)^(2*d)*s^2 + 2^(1 + 2*d)*Pi^(2*d)*
        (s^2*(18 - 120*sw^2 + 88*sw^4 + 320*sw^6 - 256*sw^8 + 
           d^2*(9 - 30*sw^2 + 48*sw^4) + 2*d*(-9 + 60*sw^2 - 70*sw^4 - 
             80*sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
           d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
             80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
           256*sw^8)*t^2)) + 
     (2*s*(9*d^2*(2*Pi)^(2*d)*s^2 + 2^(1 + 2*d)*Pi^(2*d)*
          (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
             3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
               64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
             d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*
                sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
             256*sw^8)*t^2)) + 3*mz^2*(-27*d^2*(2*Pi)^(2*d)*s^2 + 
         2^(1 + 2*d)*Pi^(2*d)*(2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 
             128*sw^8 + 3*d^2*(3 - 5*sw^2 + 8*sw^4) + 
             d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 64*sw^8)) + 
           s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + d^2*(9 - 60*sw^2 + 96*sw^4) + 
             8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8))*t + 
           2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^2)))*
      GaugeXi[Q] - (-45*d^2*(2*Pi)^(2*d)*s^3 + 2^(1 + 2*d)*Pi^(2*d)*s*
        (s^2*(18 - 120*sw^2 + 88*sw^4 + 320*sw^6 - 256*sw^8 + 
           3*d^2*(9 - 10*sw^2 + 16*sw^4) + 2*d*(-9 + 60*sw^2 - 70*sw^4 - 
             80*sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
           d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
             80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
           256*sw^8)*t^2) + 3*mz^2*(9*d^2*(2*Pi)^(2*d)*s^2 + 
         2^(1 + 2*d)*Pi^(2*d)*(2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 
             128*sw^8 + 3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*
                sw^4 - 80*sw^6 + 64*sw^8)) + 
           s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + d^2*(9 - 60*sw^2 + 96*sw^4) + 
             8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8))*t + 
           2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^2)))*
      GaugeXi[Q]^2 + mz^2*(-9*d^2*(2*Pi)^(2*d)*s^2 + 2^(1 + 2*d)*Pi^(2*d)*
        (s^2*(18 - 120*sw^2 + 88*sw^4 + 320*sw^6 - 256*sw^8 + 
           d^2*(9 - 30*sw^2 + 48*sw^4) + 2*d*(-9 + 60*sw^2 - 70*sw^4 - 
             80*sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
           d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
             80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
           256*sw^8)*t^2))*GaugeXi[Q]^3))/((-1 + d)*mz^4*Pi^(3*d)*s^2*sw^4*
    (-1 + sw^2)^2*(-1 + GaugeXi[Q])^2), 
  ((-I/27)*2^(-7 - 4*d)*EL^6*(9*d^2*(2*Pi)^(3*d)*s^4 + 
     2^(1 + 3*d)*Pi^(3*d)*s^2*(2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 
         128*sw^8 + 3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 
           80*sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
         d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 
           64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*
        t^2) + mz^4*(9*d^2*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
        (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
           3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
             64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
           d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
             80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
           256*sw^8)*t^2)) + 2*mz^2*s*(-99*d^2*(2*Pi)^(3*d)*s^2 + 
       2^(1 + 3*d)*Pi^(3*d)*(s^2*(d^3*(9 - 60*sw^2 + 96*sw^4) + 
           d*(90 - 600*sw^2 + 596*sw^4 + 1120*sw^6 - 896*sw^8) + 
           6*(-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 128*sw^8) + 
           d^2*(330*sw^2 - 424*sw^4 - 320*sw^6 + 256*sw^8)) + 
         s*(-39*d^2*(3 - 20*sw^2 + 32*sw^4) + 6*d^3*(3 - 20*sw^2 + 32*sw^4) - 
           24*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8) + 
           d*(279 - 1860*sw^2 + 3392*sw^4 - 1280*sw^6 + 1024*sw^8))*t + 
         2*(-3 + 2*d)*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t^2)) - 
     2*mz^2*(mz^2 + s)*(9*d^2*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
        (2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 128*sw^8 + 
           3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 
             64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
           d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
             80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
           256*sw^8)*t^2))*GaugeXi[Q] + mz^4*(9*d^2*(2*Pi)^(3*d)*s^2 + 
       2^(1 + 3*d)*Pi^(3*d)*(2*s^2*(9 - 60*sw^2 + 44*sw^4 + 160*sw^6 - 
           128*sw^8 + 3*d^2*sw^2*(-5 + 8*sw^2) + d*(-9 + 60*sw^2 - 70*sw^4 - 
             80*sw^6 + 64*sw^8)) + s*(-15*d*(3 - 20*sw^2 + 32*sw^4) + 
           d^2*(9 - 60*sw^2 + 96*sw^4) + 8*(9 - 60*sw^2 + 122*sw^4 - 
             80*sw^6 + 64*sw^8))*t + 2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
           256*sw^8)*t^2))*GaugeXi[Q]^2))/((-1 + d)*mz^4*Pi^(4*d)*s^2*sw^4*
    (-1 + sw^2)^2), ((-I/27)*2^(-5 - 2*d)*EL^6*(-9*d^3*(2*Pi)^d*s*(s - t) + 
     2^(1 + d)*Pi^d*(s^2*(-9*d^2*(3 - 20*sw^2 + 32*sw^4) + 
         d^3*(9 - 30*sw^2 + 48*sw^4) - 2*d*(-9 + 60*sw^2 - 70*sw^4 - 
           80*sw^6 + 64*sw^8) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 
           64*sw^8)) + s*(9*d^3*(1 - 10*sw^2 + 16*sw^4) - 
         144*(3 - 20*sw^2 + 32*sw^4) - 45*d^2*(3 - 20*sw^2 + 32*sw^4) + 
         4*d*(108 - 720*sw^2 + 1165*sw^4 - 40*sw^6 + 32*sw^8))*t + 
       (-36*d^2*(3 - 20*sw^2 + 32*sw^4) + d^3*(9 - 60*sw^2 + 96*sw^4) - 
         8*(63 - 420*sw^2 + 698*sw^4 - 80*sw^6 + 64*sw^8) + 
         d*(414 - 2760*sw^2 + 4520*sw^4 - 320*sw^6 + 256*sw^8))*t^2)))/
   (Pi^(2*d)*s*sw^4*(-1 + sw^2)^2*(s + t)), 0, 
  ((I/27)*2^(-1 - 2*d)*EL^6*(4*sw^8*(d^3*(2*Pi)^d*s*(s - t) - 
       2^(2 + d)*(-56 + 46*d - 12*d^2 + d^3)*mz^2*Pi^d*(s + t) + 
       2^(1 + d)*Pi^d*((-80 + 56*d - 11*d^2)*s^2 + 
         (-112 + 80*d - 15*d^2 + d^3)*s*t - 4*(8 - 6*d + d^2)*t^2)) - 
     (sw^4*(3 - 4*sw^2)^2*(d^3*(2*Pi)^d*s*(s - t) - 
        2^(2 + d)*(-52 + 44*d - 12*d^2 + d^3)*mz^2*Pi^d*(s + t) + 
        2^(1 + d)*Pi^d*((-88 + 57*d - 11*d^2)*s^2 + 
          (-128 + 81*d - 15*d^2 + d^3)*s*t - 4*(10 - 6*d + d^2)*t^2)))/4 + 
     (-1/2 + sw^2)^2*(((3 - 4*sw^2)^2*(d^3*(2*Pi)^d*s*(s - t) - 
          2^(2 + d)*(-56 + 46*d - 12*d^2 + d^3)*mz^2*Pi^d*(s + t) + 
          2^(1 + d)*Pi^d*((-80 + 56*d - 11*d^2)*s^2 + 
            (-112 + 80*d - 15*d^2 + d^3)*s*t - 4*(8 - 6*d + d^2)*t^2)))/4 - 
       4*sw^4*(d^3*(2*Pi)^d*s*(s - t) - 2^(2 + d)*(-52 + 44*d - 12*d^2 + d^3)*
          mz^2*Pi^d*(s + t) + 2^(1 + d)*Pi^d*((-88 + 57*d - 11*d^2)*s^2 + 
           (-128 + 81*d - 15*d^2 + d^3)*s*t - 4*(10 - 6*d + d^2)*t^2)))))/
   (Pi^(2*d)*s*sw^4*(-1 + sw^2)^2), 0, 
  ((-I/27)*4^(-3 - d)*EL^6*(9*d^3*(2*Pi)^d*s^2*(s + 3*t) + 
     2^(1 + d)*Pi^d*(3*s^3*(2*d^3*sw^2*(-5 + 8*sw^2) - 
         72*(3 - 20*sw^2 + 32*sw^4) - 9*d^2*(3 - 20*sw^2 + 32*sw^4) + 
         4*d*(36 - 240*sw^2 + 397*sw^4 - 40*sw^6 + 32*sw^8)) + 
       3*s^2*(d^3*(-3 - 10*sw^2 + 16*sw^4) - 9*d^2*(3 - 20*sw^2 + 32*sw^4) + 
         4*d*(39 - 260*sw^2 + 429*sw^4 - 40*sw^6 + 32*sw^8) + 
         8*(-27 + 180*sw^2 - 236*sw^4 - 160*sw^6 + 128*sw^8))*t + 
       4*s*(d*(9 - 60*sw^2 + 96*sw^4) + 2*(9 - 60*sw^2 + 356*sw^4 - 
           800*sw^6 + 640*sw^8))*t^2 + 8*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
         256*sw^8)*t^3) - 4*mz^2*(s + t)*(9*d^3*(2*Pi)^d*s + 
       2^(2 + d)*Pi^d*(s*(3*d^3*sw^2*(-5 + 8*sw^2) - 
           108*(3 - 20*sw^2 + 32*sw^4) - 15*d^2*(3 - 20*sw^2 + 32*sw^4) + 
           d*(225 - 1500*sw^2 + 2426*sw^4 - 80*sw^6 + 64*sw^8)) + 
         (d^2*(-9 + 60*sw^2 - 96*sw^4) + 18*d*(3 - 20*sw^2 + 32*sw^4) + 
           8*(-9 + 60*sw^2 - 83*sw^4 - 40*sw^6 + 32*sw^8))*t)) + 
     2*mz^4*(27*d^3*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
        (s*(18*d^3*sw^2*(-5 + 8*sw^2) - 63*d^2*(3 - 20*sw^2 + 32*sw^4) - 
           24*(45 - 300*sw^2 + 506*sw^4 - 80*sw^6 + 64*sw^8) + 
           10*d*(81 - 540*sw^2 + 890*sw^4 - 80*sw^6 + 64*sw^8)) + 
         (-36*d^2*(3 - 20*sw^2 + 32*sw^4) + d^3*(9 - 60*sw^2 + 96*sw^4) - 
           8*(63 - 420*sw^2 + 698*sw^4 - 80*sw^6 + 64*sw^8) + 
           d*(414 - 2760*sw^2 + 4520*sw^4 - 320*sw^6 + 256*sw^8))*t))))/
   (Pi^(2*d)*s*sw^4*(-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  ((-I/3)*2^(-3 - d)*(-4 + d)*EL^6*((-4 - 2*d + d^2)*s + 
     2*(14 - 8*d + d^2)*t)*CKM[1, 1]*CKMC[1, 1])/(Pi^d*s*sw^4), 0, 0, 0, 0, 
  ((-I/3)*2^(-5 - d)*EL^6*((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 4*t^2)*
    CKM[1, 1]*CKMC[1, 1]*(s + mz^2*(-1 + sw^2) - mz^2*(-1 + sw^2)*
      GaugeXi[Q]))/((-1 + d)*mz^4*Pi^d*s^2*sw^4*(-1 + sw^2)^2), 
  ((-I/3)*2^(-5 - 3*d)*EL^6*CKM[1, 1]*CKMC[1, 1]*
    ((4^(1 + d)*mz^2*Pi^(2*d)*(-1 + sw^2)*((-6 + d)*s - 2*t)*GaugeXi[Q])/s + 
     (2^(1 + 2*d)*(-4 + d)*Pi^(2*d)*(s + t)*(s + mz^2*(-1 + sw^2) - 
        mz^2*(-1 + sw^2)*GaugeXi[Q]))/s + 
     (2^(1 + 2*d)*Pi^(2*d)*(d*(s + mz^2*(-1 + sw^2)) + 
        (-4 + 3*d)*mz^2*(-1 + sw^2)*GaugeXi[Q]))/(-1 + d) - 
     ((2*Pi)^(2*d)*((-4 + d)*s - 2*t)*((s + mz^2*(-1 + sw^2))*
         ((-2 + d)*s - 2*t) + mz^2*(-1 + sw^2)*((-2 + 3*d)*s + 2*t)*
         GaugeXi[Q]))/((-1 + d)*s^2) + 
     (4^(1 + d)*Pi^(2*d)*(-((-4 + d)*(s + mz^2*(-1 + sw^2))*(s + t)) + 
        mz^2*(-1 + sw^2)*(2*s + (-2 + d)*t)*GaugeXi[Q]))/s + 
     ((2*Pi)^d*((-s - mz^2*(-1 + sw^2))*(-(d*(2*Pi)^d*s) + 
          2^(1 + d)*Pi^d*(3*s + t)) + 
        (-(2^(1 + d)*Pi^d*s*((-6 + d)*s - 2*t)) + mz^2*(1 - sw^2)*
           (d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(3*s + t)))*GaugeXi[Q] - 
        (s - mz^2*(-1 + sw^2))*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(3*s + t))*
         GaugeXi[Q]^2 - mz^2*(1 - sw^2)*(d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*
           (3*s + t))*GaugeXi[Q]^3))/(s*(-1 + GaugeXi[Q])^2) + 
     (2*Pi)^d*((mz^2*(2*Pi)^d*(-1 + sw^2)*((-6 + d)*s - 2*t))/s - 
       3*2^(1 + d)*Pi^d*(s + t) - 3*2^(1 + d)*mz^2*Pi^d*(-1 + sw^2)*
        GaugeXi[Q] + (mz^2*(2*Pi)^d*(-1 + sw^2)*(d*s - 2*t)*GaugeXi[Q])/s + 
       (d*(2*Pi)^d*s + 2^(2 + d)*Pi^d*t - 2^(1 + d)*Pi^d*(d*s + 4*t)*
          GaugeXi[Q] + (d*(2*Pi)^d*s + 2^(2 + d)*Pi^d*t)*GaugeXi[Q]^2)/
        (-1 + GaugeXi[Q])^2)))/(mz^4*Pi^(3*d)*sw^4*(-1 + sw^2)^2), 
  ((-I/3)*2^(-5 - 3*d)*EL^6*CKM[1, 1]*CKMC[1, 1]*
    (-((2^(1 + 2*d)*Pi^(2*d)*(d*(s + mz^2*(-1 + sw^2))^2 + 
         2*mz^2*(-1 + sw^2)*(d*s + (-2 + d)*mz^2*(-1 + sw^2))*GaugeXi[Q] + 
         d*mz^4*(-1 + sw^2)^2*GaugeXi[Q]^2))/((-1 + d)*mz^4*(-1 + sw^2)^2)) + 
     ((2*Pi)^(2*d)*((-4 + d)*s - 2*t)*((s + mz^2*(-1 + sw^2))^2*
         ((-2 + d)*s - 2*t) + 2*mz^2*(1 - sw^2)*
         (-(d*s*(s + mz^2*(-1 + sw^2))) + 2*(s^2 + s*t - mz^2*(-1 + sw^2)*t))*
         GaugeXi[Q] + mz^4*(-1 + sw^2)^2*((-2 + d)*s - 2*t)*GaugeXi[Q]^2))/
      ((-1 + d)*mz^4*(s - s*sw^2)^2) + 
     ((2*Pi)^d*(-s - mz^2*(-1 + sw^2) - mz^2*(-1 + sw^2)*GaugeXi[Q])*
       ((-s - mz^2*(-1 + sw^2))*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*
           (3*s + t)) + (-(2^(1 + d)*Pi^d*s*((-6 + d)*s - 2*t)) + 
          mz^2*(1 - sw^2)*(d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(3*s + t)))*
         GaugeXi[Q] - (s - mz^2*(-1 + sw^2))*(-(d*(2*Pi)^d*s) + 
          2^(1 + d)*Pi^d*(3*s + t))*GaugeXi[Q]^2 - mz^2*(1 - sw^2)*
         (d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(3*s + t))*GaugeXi[Q]^3))/
      (mz^4*s*(-1 + sw^2)^2*(-1 + GaugeXi[Q])^2) + 
     ((2*Pi)^d*(-s - mz^2*(-1 + sw^2) - mz^2*(-1 + sw^2)*GaugeXi[Q])*
       ((mz^2*(2*Pi)^d*(-1 + sw^2)*((-6 + d)*s - 2*t))/s - 
        3*2^(1 + d)*Pi^d*(s + t) - 3*2^(1 + d)*mz^2*Pi^d*(-1 + sw^2)*
         GaugeXi[Q] + (mz^2*(2*Pi)^d*(-1 + sw^2)*(d*s - 2*t)*GaugeXi[Q])/s + 
        (d*(2*Pi)^d*s + 2^(2 + d)*Pi^d*t - 2^(1 + d)*Pi^d*(d*s + 4*t)*
           GaugeXi[Q] + (d*(2*Pi)^d*s + 2^(2 + d)*Pi^d*t)*GaugeXi[Q]^2)/
         (-1 + GaugeXi[Q])^2))/(mz^4*(-1 + sw^2)^2) - 
     2*((2^(1 + 2*d)*Pi^(2*d)*((-6 + d)*s - 2*t)*t)/(mz^2*(s - s*sw^2)) - 
       ((-4 + d)*(2*Pi)^(2*d)*(s + t))/s + (3*2^(1 + 2*d)*Pi^(2*d)*(s + t)^2)/
        (mz^4*(-1 + sw^2)^2) - (4^(1 + d)*Pi^(2*d)*(s + t)^2)/
        (mz^2*s*(-1 + sw^2)) + (2^(1 + 2*d)*Pi^(2*d)*(-((-6 + d)*s) + 2*t))/
        (mz^2*(-1 + sw^2)) - ((2*Pi)^(2*d)*(-(s*(s + t)*((-2 + d)*s + 2*t)) + 
          2*mz^2*(1 - sw^2)*((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 
            4*t^2)))/(mz^4*s*(-1 + sw^2)^2) - 
       (2^(1 + 2*d)*Pi^(2*d)*((-6 + d)*s - 2*t)*GaugeXi[Q])/s - 
       (2^(1 + 2*d)*Pi^(2*d)*(d*s - 2*t)*GaugeXi[Q])/(mz^2*(-1 + sw^2)) - 
       (2^(1 + 2*d)*Pi^(2*d)*(d*s - 2*t)*t*GaugeXi[Q])/(mz^2*s*(-1 + sw^2)) + 
       (2^(1 + 2*d)*(-4 + d)*Pi^(2*d)*(s + t)*GaugeXi[Q])/s + 
       (3*4^(1 + d)*Pi^(2*d)*(s + t)*GaugeXi[Q])/(mz^2*(-1 + sw^2)) + 
       (2^(1 + 2*d)*Pi^(2*d)*((-2 + d)*s^2 - 2*t^2)*GaugeXi[Q])/
        (mz^2*s*(-1 + sw^2)) + 3*2^(1 + 2*d)*Pi^(2*d)*GaugeXi[Q]^2 - 
       (2^(1 + 2*d)*Pi^(2*d)*(d*s - 2*t)*GaugeXi[Q]^2)/s + 
       ((2*Pi)^(2*d)*((-2 + d)*s - d*t)*GaugeXi[Q]^2)/s + 
       (2^(1 + d)*Pi^d*s*(-(d*(2*Pi)^d*s) - 2^(2 + d)*Pi^d*t + 
          2^(1 + d)*Pi^d*(d*s + 4*t)*GaugeXi[Q] - 
          (d*(2*Pi)^d*s + 2^(2 + d)*Pi^d*t)*GaugeXi[Q]^2))/
        (mz^4*(-1 + sw^2)^2*(-1 + GaugeXi[Q])^2) - 
       (2^(1 + d)*Pi^d*t*(d*(2*Pi)^d*s + 2^(2 + d)*Pi^d*t - 
          2^(1 + d)*Pi^d*(d*s + 4*t)*GaugeXi[Q] + 
          (d*(2*Pi)^d*s + 2^(2 + d)*Pi^d*t)*GaugeXi[Q]^2))/
        (mz^4*(-1 + sw^2)^2*(-1 + GaugeXi[Q])^2) - 
       (2^(1 + d)*Pi^d*GaugeXi[Q]*(d*(2*Pi)^d*s + 2^(2 + d)*Pi^d*t - 
          2^(1 + d)*Pi^d*(d*s + 4*t)*GaugeXi[Q] + 
          (d*(2*Pi)^d*s + 2^(2 + d)*Pi^d*t)*GaugeXi[Q]^2))/
        (mz^2*(-1 + sw^2)*(-1 + GaugeXi[Q])^2))))/(Pi^(3*d)*sw^4), 
  ((-I/3)*2^(-5 - 2*d)*EL^6*s*(1 - sw^2)*CKM[1, 1]*CKMC[1, 1]*
    (s*(2^(1 + d)*Pi^d*s*(s + d*s - 3*t + 2*d*t) + mz^2*(1 - sw^2)*
        (d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*((-3 + 2*d)*s + (-17 + 6*d)*t)))*
      GaugeXi[Q]^2 - mz^2*s*(1 - sw^2)*(d*(2*Pi)^d*s + 
       2^(1 + d)*Pi^d*(s + (-5 + 2*d)*t))*GaugeXi[Q]^3 + 
     (GaugeXi[Q]*(2^(2 + d)*Pi^d*s^3 - 2^(2 + d)*d^2*Pi^d*s^3 + 
        3*2^(3 + d)*mz^2*Pi^d*s^2*(-1 + sw^2) - 15*2^(1 + d)*d*mz^2*Pi^d*s^2*
         (-1 + sw^2) + 5*2^(1 + d)*d^2*mz^2*Pi^d*s^2*(-1 + sw^2) - 
        3*d^2*mz^2*(2*Pi)^d*s^2*(-1 + sw^2) - 3*2^(2 + d)*Pi^d*s^2*t + 
        5*2^(2 + d)*d*Pi^d*s^2*t - 2^(3 + d)*d^2*Pi^d*s^2*t + 
        11*2^(2 + d)*mz^2*Pi^d*s*(-1 + sw^2)*t - 23*2^(1 + d)*d*mz^2*Pi^d*s*
         (-1 + sw^2)*t + 5*2^(1 + d)*d^2*mz^2*Pi^d*s*(-1 + sw^2)*t + 
        2^(2 + d)*mz^2*Pi^d*(-1 + sw^2)*t^2 + 2^(1 + d)*mz^2*Pi^d*(1 - sw^2)*
         ((6 - 5*d)*s^2 - 2*(-3 - 2*d + d^2)*s*t + 4*t^2)*GaugeXi[Q] - 
        mz^2*(1 - sw^2)*(-(d*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*
           ((3 - 2*d)*s^2 + (3 + 2*d - d^2)*s*t + 2*t^2))*GaugeXi[Q]^2))/
      (-1 + d) + ((s - mz^2*(-1 + sw^2))*(-(d^3*(2*Pi)^d*s^2) + 
         2^(1 + d)*Pi^d*((-4 + 6*d - 3*d^2 + d^3)*s^2 + 
           (-16 + 18*d - 7*d^2 + d^3)*s*t + 2*(-2 + d)*t^2)) + 
       2^(1 + d)*(-2 + d)*Pi^d*(s*((-6 + 4*d + d^2)*s^2 + 2*(-5 + d^2)*s*t - 
           4*t^2) + mz^2*(1 - sw^2)*((6 - 9*d + 2*d^2)*s^2 + 
           2*(-1 - 4*d + d^2)*s*t - 4*t^2))*GaugeXi[Q] - 
       (d^3*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*((6 - 7*d + d^2)*s^2 + 
           (10 - 5*d - 2*d^2 + d^3)*s*t - 2*(-2 + d)*t^2) + 
         mz^2*(1 - sw^2)*(-(d^2*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*
            ((-6 + 12*d - 6*d^2 + d^3)*s^2 + (2 + 7*d - 6*d^2 + d^3)*s*t - 
             2*(-2 + d)*t^2)))*GaugeXi[Q]^2)/((-2 + d)*(-1 + d))))/
   (mz^4*Pi^(2*d)*sw^4*(s - s*sw^2)^3*(-1 + GaugeXi[Q])^2), 
  ((I/3)*2^(-5 - 2*d)*EL^6*CKM[1, 1]*CKMC[1, 1]*
    (3*2^(1 + d)*Pi^d*(s + mz^2*(-1 + sw^2)) + 
     (2^(2 + d)*mz^2*Pi^d*(1 - sw^2)*((-6 + d)*s - 2*t))/s - 
     (mz^2*(2*Pi)^d*(-1 + sw^2)*(d*s - 2*t))/s + 3*2^(1 + d)*Pi^d*t + 
     (mz^2*(2*Pi)^d*(1 - sw^2)*((-6 + d)*s - 2*t)*GaugeXi[Q])/s - 
     (2^(1 + d)*(-4 + d)*Pi^d*(s + t)*(s - mz^2*(-1 + sw^2) + 
        mz^2*(-1 + sw^2)*GaugeXi[Q]))/s - 
     (2^(1 + d)*Pi^d*(d*s + (-4 + 3*d)*mz^2*(-1 + sw^2) + 
        d*mz^2*(-1 + sw^2)*GaugeXi[Q]))/(-1 + d) + 
     ((2*Pi)^d*((-4 + d)*s - 2*t)*(s*((-2 + d)*s - 2*t) + 
        mz^2*(-1 + sw^2)*((-2 + 3*d)*s + 2*t) + mz^2*(-1 + sw^2)*
         ((-2 + d)*s - 2*t)*GaugeXi[Q]))/((-1 + d)*s^2) - 
     (4*((2^(2 + d)*Pi^d - d*(2*Pi)^d)*s*(s + t) + mz^2*(-1 + sw^2)*
         (2^(1 + d)*Pi^d*(s - t) + d*(2*Pi)^d*t) + 
        mz^2*(2^(2 + d)*Pi^d - d*(2*Pi)^d)*(-1 + sw^2)*(s + t)*GaugeXi[Q]))/
      s - (d*(2*Pi)^d*s + 2^(2 + d)*Pi^d*t - 2^(1 + d)*Pi^d*(d*s + 4*t)*
        GaugeXi[Q] + (d*(2*Pi)^d*s + 2^(2 + d)*Pi^d*t)*GaugeXi[Q]^2)/
      (-1 + GaugeXi[Q])^2 + 
     (-((-s - mz^2*(-1 + sw^2))*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*
           (3*s + t))) + (2^(1 + d)*Pi^d*s*((-6 + d)*s - 2*t) + 
         mz^2*(1 - sw^2)*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(3*s + t)))*
        GaugeXi[Q] + (s - mz^2*(-1 + sw^2))*(-(d*(2*Pi)^d*s) + 
         2^(1 + d)*Pi^d*(3*s + t))*GaugeXi[Q]^2 + mz^2*(1 - sw^2)*
        (d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(3*s + t))*GaugeXi[Q]^3)/
      (s*(-1 + GaugeXi[Q])^2)))/(mz^4*Pi^(2*d)*sw^4*(-1 + sw^2)^2), 
  ((-I/3)*2^(-5 - 3*d)*EL^6*CKM[1, 1]*CKMC[1, 1]*
    (-((2^(1 + 2*d)*Pi^(2*d)*(d*(s + mz^2*(-1 + sw^2))^2 + 
         2*mz^2*(-1 + sw^2)*(d*s + (-2 + d)*mz^2*(-1 + sw^2))*GaugeXi[Q] + 
         d*mz^4*(-1 + sw^2)^2*GaugeXi[Q]^2))/((-1 + d)*mz^4*(-1 + sw^2)^2)) + 
     ((2*Pi)^(2*d)*((-4 + d)*s - 2*t)*((s + mz^2*(-1 + sw^2))^2*
         ((-2 + d)*s - 2*t) + 2*mz^2*(1 - sw^2)*
         (-(d*s*(s + mz^2*(-1 + sw^2))) + 2*(s^2 + s*t - mz^2*(-1 + sw^2)*t))*
         GaugeXi[Q] + mz^4*(-1 + sw^2)^2*((-2 + d)*s - 2*t)*GaugeXi[Q]^2))/
      ((-1 + d)*mz^4*(s - s*sw^2)^2) + 
     ((2*Pi)^d*(-s - mz^2*(-1 + sw^2) - mz^2*(-1 + sw^2)*GaugeXi[Q])*
       ((-s - mz^2*(-1 + sw^2))*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*
           (3*s + t)) + (-(2^(1 + d)*Pi^d*s*((-6 + d)*s - 2*t)) + 
          mz^2*(1 - sw^2)*(d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(3*s + t)))*
         GaugeXi[Q] - (s - mz^2*(-1 + sw^2))*(-(d*(2*Pi)^d*s) + 
          2^(1 + d)*Pi^d*(3*s + t))*GaugeXi[Q]^2 - mz^2*(1 - sw^2)*
         (d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(3*s + t))*GaugeXi[Q]^3))/
      (mz^4*s*(-1 + sw^2)^2*(-1 + GaugeXi[Q])^2) + 
     ((2*Pi)^d*(-s - mz^2*(-1 + sw^2) - mz^2*(-1 + sw^2)*GaugeXi[Q])*
       (-3*2^(1 + d)*Pi^d*(s + mz^2*(-1 + sw^2)) + 
        (mz^2*(2*Pi)^d*(-1 + sw^2)*(d*s - 2*t))/s - 3*2^(1 + d)*Pi^d*t + 
        (mz^2*(2*Pi)^d*(-1 + sw^2)*((-6 + d)*s - 2*t)*GaugeXi[Q])/s + 
        (d*(2*Pi)^d*s + 2^(2 + d)*Pi^d*t - 2^(1 + d)*Pi^d*(d*s + 4*t)*
           GaugeXi[Q] + (d*(2*Pi)^d*s + 2^(2 + d)*Pi^d*t)*GaugeXi[Q]^2)/
         (-1 + GaugeXi[Q])^2))/(mz^4*(-1 + sw^2)^2) - 
     2*((3*2^(1 + 2*d)*Pi^(2*d)*(s + mz^2*(-1 + sw^2))^2)/
        (mz^4*(-1 + sw^2)^2) + (3*4^(1 + d)*Pi^(2*d)*(s + mz^2*(-1 + sw^2))*
         t)/(mz^4*(-1 + sw^2)^2) - (2^(1 + 2*d)*Pi^(2*d)*(d*s - 2*t)*t)/
        (mz^2*s*(-1 + sw^2)) + (3*2^(1 + 2*d)*Pi^(2*d)*t^2)/
        (mz^4*(-1 + sw^2)^2) + (2^(1 + 2*d)*Pi^(2*d)*(-(d*s) + 2*t))/s + 
       (2^(1 + 2*d)*Pi^(2*d)*(-(d*s) + 2*t))/(mz^2*(-1 + sw^2)) + 
       ((2*Pi)^(2*d)*((-2 + d)*s - d*t))/s + 
       (2^(1 + 2*d)*Pi^(2*d)*((-2 + d)*s^2 - 2*t^2))/(mz^2*s*(-1 + sw^2)) - 
       ((2*Pi)^(2*d)*(-(s*(s + t)*((-2 + d)*s + 2*t)) + 2*mz^2*(1 - sw^2)*
           ((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 4*t^2)))/
        (mz^4*s*(-1 + sw^2)^2) - (2^(1 + 2*d)*Pi^(2*d)*((-6 + d)*s - 2*t)*
         GaugeXi[Q])/s + (2^(1 + 2*d)*Pi^(2*d)*((-6 + d)*s - 2*t)*GaugeXi[Q])/
        (mz^2*(1 - sw^2)) + (2^(1 + 2*d)*Pi^(2*d)*((-6 + d)*s - 2*t)*t*
         GaugeXi[Q])/(mz^2*(s - s*sw^2)) + (2^(1 + 2*d)*(-4 + d)*Pi^(2*d)*
         (s + t)*GaugeXi[Q])/s - (4^(1 + d)*Pi^(2*d)*(s + t)^2*GaugeXi[Q])/
        (mz^2*s*(-1 + sw^2)) - ((-4 + d)*(2*Pi)^(2*d)*(s + t)*GaugeXi[Q]^2)/
        s + (2^(1 + d)*Pi^d*s*(-(d*(2*Pi)^d*s) - 2^(2 + d)*Pi^d*t + 
          2^(1 + d)*Pi^d*(d*s + 4*t)*GaugeXi[Q] - 
          (d*(2*Pi)^d*s + 2^(2 + d)*Pi^d*t)*GaugeXi[Q]^2))/
        (mz^4*(-1 + sw^2)^2*(-1 + GaugeXi[Q])^2) - 
       (2^(1 + d)*Pi^d*(d*(2*Pi)^d*s + 2^(2 + d)*Pi^d*t - 
          2^(1 + d)*Pi^d*(d*s + 4*t)*GaugeXi[Q] + 
          (d*(2*Pi)^d*s + 2^(2 + d)*Pi^d*t)*GaugeXi[Q]^2))/
        (mz^2*(-1 + sw^2)*(-1 + GaugeXi[Q])^2) - 
       (2^(1 + d)*Pi^d*t*(d*(2*Pi)^d*s + 2^(2 + d)*Pi^d*t - 
          2^(1 + d)*Pi^d*(d*s + 4*t)*GaugeXi[Q] + 
          (d*(2*Pi)^d*s + 2^(2 + d)*Pi^d*t)*GaugeXi[Q]^2))/
        (mz^4*(-1 + sw^2)^2*(-1 + GaugeXi[Q])^2))))/(Pi^(3*d)*sw^4), 
  ((-I/3)*2^(-5 - 2*d)*EL^6*CKM[1, 1]*CKMC[1, 1]*(-(d^2*(2*Pi)^d*s^3) + 
     2^(1 + d)*Pi^d*s*(2*(-1 + d)*s^2 - (8 - 5*d + d^2)*s*t - 2*t^2) - 
     2^(2 + d)*mz^2*Pi^d*(-1 + sw^2)*((-2 + d)^2*s^2 + 
       2*(8 - 5*d + d^2)*s*t + 4*t^2)*GaugeXi[Q]))/
   ((-1 + d)*mz^4*Pi^(2*d)*s*sw^4*(-1 + sw^2)^2), 
  ((-I/3)*2^(-5 - 3*d)*EL^6*CKM[1, 1]*CKMC[1, 1]*
    ((2^(1 + 2*d)*Pi^(2*d)*(d*s^2 + 4*d*mz^2*s*(-1 + sw^2) + 
        4*(-1 + d)*mz^4*(-1 + sw^2)^2))/((-1 + d)*mz^4*(-1 + sw^2)^2) - 
     ((2*Pi)^(2*d)*(4*(-1 + d)*mz^4*(-1 + sw^2)^2 + s*((-2 + d)*s - 2*t) + 
        4*mz^2*(-1 + sw^2)*((-2 + d)*s - 2*t))*((-4 + d)*s - 2*t))/
      ((-1 + d)*mz^4*s*(-1 + sw^2)^2) - 
     (2^(3 + 2*d)*(-56 + 46*d - 12*d^2 + d^3)*Pi^(2*d)*(s + 2*t))/s - 
     (2^(1 + 2*d)*Pi^(2*d)*((-4 + d)*s^2*(s + t) - 2*mz^4*(-1 + sw^2)^2*
         ((-122 + 87*d - 18*d^2 + d^3)*s + 2*(-55 + 46*d - 12*d^2 + d^3)*t) + 
        4*mz^2*(1 - sw^2)*((8 - 5*d + d^2)*s^2 + (20 - 11*d + 2*d^2)*s*t + 
          4*t^2)))/(mz^4*s*(-1 + sw^2)^2) + 
     ((2*Pi)^d*(s + 2*mz^2*(-1 + sw^2))*(2^(1 + d)*mz^2*Pi^d*(-1 + sw^2)*
         ((-6 + d)*s - 2*t) + s*(d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(3*s + t)) - 
        2^(1 + d)*Pi^d*(s + 2*mz^2*(-1 + sw^2))*((-6 + d)*s - 2*t)*
         GaugeXi[Q] + (2^(1 + d)*mz^2*Pi^d*(-1 + sw^2)*((-6 + d)*s - 2*t) + 
          s*(d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(3*s + t)))*GaugeXi[Q]^2))/
      (mz^4*s*(-1 + sw^2)^2*(-1 + GaugeXi[Q])^2) - 
     (2^(1 + d)*Pi^d*(-s/2 - mz^2*(-1 + sw^2))*(-3*2^(1 + d)*Pi^d*s + 
        (2^(1 + d)*mz^2*Pi^d*(-1 + sw^2)*((-6 + d)*s - 2*t))/s - 
        3*2^(1 + d)*Pi^d*t + (d*(2*Pi)^d*s)/(-1 + GaugeXi[Q])^2 + 
        (2^(2 + d)*Pi^d*t)/(-1 + GaugeXi[Q])^2 - 
        (2^(1 + d)*Pi^d*(d*s + 4*t)*GaugeXi[Q])/(-1 + GaugeXi[Q])^2 + 
        ((d*(2*Pi)^d*s + 2^(2 + d)*Pi^d*t)*GaugeXi[Q]^2)/
         (-1 + GaugeXi[Q])^2))/(mz^4*(-1 + sw^2)^2)))/(Pi^(3*d)*sw^4), 
  ((-I/3)*2^(-3 - d)*EL^6*((-144 + 96*d - 18*d^2 + d^3)*s^2 + 
     2*(-128 + 88*d - 18*d^2 + d^3)*mz^2*s*(-1 + sw^2) + 8*d*s*t + 16*t^2)*
    CKM[1, 1]*CKMC[1, 1])/(Pi^d*s*sw^4), 
  ((-I/3)*2^(-3 - 2*d)*EL^6*(5*2^(5 + d)*Pi^d*s^3 - 7*2^(4 + d)*d*Pi^d*s^3 + 
     11*2^(1 + d)*d^2*Pi^d*s^3 - 2^(1 + d)*d^3*Pi^d*s^3 + d^3*(2*Pi)^d*s^3 + 
     3*2^(7 + d)*Pi^d*s^2*t - 17*2^(4 + d)*d*Pi^d*s^2*t + 
     13*2^(2 + d)*d^2*Pi^d*s^2*t - 2^(1 + d)*d^3*Pi^d*s^2*t + 
     9*2^(5 + d)*Pi^d*s*t^2 - 13*2^(4 + d)*d*Pi^d*s*t^2 + 
     19*2^(1 + d)*d^2*Pi^d*s*t^2 - 2^(1 + d)*d^3*Pi^d*s*t^2 + 
     d^3*(2*Pi)^d*s*t^2 + 2^(6 + d)*Pi^d*t^3 - 3*2^(4 + d)*d*Pi^d*t^3 + 
     2^(3 + d)*d^2*Pi^d*t^3 - 2^(2 + d)*(-56 + 46*d - 12*d^2 + d^3)*mz^2*Pi^d*
      (-1 + sw^2)*(s + t)^2)*CKM[1, 1]*CKMC[1, 1])/(Pi^(2*d)*s*sw^4*(s + t)), 
  ((-I/3)*EL^6*(2^(2 + d)*(-4 + d)*mz^2*Pi^d*(-1 + sw^2)*(s + t)*
      ((36 - 16*d + d^2)*s - 4*(-2 + d)*t) + 2^(1 + d)*(-4 + d)*mz^4*Pi^d*
      (-1 + sw^2)^2*(3*(20 - 10*d + d^2)*s + 2*(14 - 8*d + d^2)*t) + 
     (s + t)*(-(d^3*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*
        ((-72 + 48*d - 9*d^2 + d^3)*s^2 + 4*d*s*t + 8*t^2)))*CKM[1, 1]*
    CKMC[1, 1])/(2^(2*(2 + d))*Pi^(2*d)*s*sw^4), 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {((-I/9)*2^(2 - d)*(16 - 7*d + d^2)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
   ((-4 + d)*Pi^d*s^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {((-I/9)*2^(-1 - 2*d)*EL^6*(1 - 4*sw^2 + 8*sw^4)*
    (-(d^2*(1 + d)*(2*Pi)^d*s^3) + 2^(1 + d)*(-2 + d)*mz^2*Pi^d*
      ((-2 + d)*s^2 + 4*s*t + 4*t^2) + 2^(2 + d)*Pi^d*s*
      ((7 - 8*d + 3*d^2)*s^2 - (14 - 9*d + d^2)*s*t - (14 - 9*d + d^2)*t^2)))/
   ((-2 + d)*Pi^(2*d)*s^3*sw^2*(-1 + sw^2)), 0, 0, 0, 
  ((I/9)*2^(-1 - d)*EL^6*(2*mz^2 + 3*s)*(1 - 4*sw^2 + 8*sw^4)*
    ((-2 + d)*s^2 + 4*s*t + 4*t^2))/(mz^2*Pi^d*s^3*sw^2*(-1 + sw^2)), 0, 0, 
  0, ((I/9)*2^(-1 - d)*EL^6*(1 - 4*sw^2 + 8*sw^4)*((-2 + d)*s^2 + 4*s*t + 
     4*t^2))/(mz^2*Pi^d*s^2*sw^2*(-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  ((-I/9)*2^(-1 - 2*d)*EL^6*(1 - 4*sw^2 + 8*sw^4)*
    (2^(1 + d)*mz^4*Pi^d*((-2 + d)*s^2 + 4*s*t + 4*t^2) + 
     2^(1 + d)*Pi^d*s^2*((-2 + d)*s^2 + 4*s*t + 4*t^2) + 
     mz^2*s*(-(d^2*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*((-8 + 5*d)*s^2 - 
         2*(-8 + d)*s*t - 2*(-8 + d)*t^2))))/(Pi^(2*d)*s^3*sw^2*(-1 + sw^2)), 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {((-I/9)*2^(-3 - 2*d)*EL^6*(3*(-15 + d)*d^3*(2*Pi)^d*s^2 + 
     2^(1 + d)*Pi^d*(2*s^2*(48 + 160*sw^2 - 256*sw^4 - 
         9*d^2*(-4 - 5*sw^2 + 8*sw^4) + d^3*(3 - 5*sw^2 + 8*sw^4) + 
         3*d*(-23 - 50*sw^2 + 80*sw^4)) + 
       s*(-36*d^3 + 3*d^4 + 128*(3 - 5*sw^2 + 8*sw^4) - 
         8*d*(51 - 35*sw^2 + 56*sw^4) + d^2*(177 - 40*sw^2 + 64*sw^4))*t + 
       2*(16 - 7*d + d^2)*(3 - 20*sw^2 + 32*sw^4)*t^2)))/
   ((-4 + d)*Pi^(2*d)*(mz^2 - s)*s*sw^2*(-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {((I/288)*EL^6*(((-2 + d)*mz^2*s^2*(2*mz^2 + s)*(-1 + 4*sw^2)*(-3 + 8*sw^2)*
       (1 - 2*sw^2 + 4*sw^4))/(2*Pi)^d + 
     ((-2 + d)*mz^2*s^2*(3*d*s*(1 - 6*sw^2 + 12*sw^4) - 
        4*s*(3 - 20*sw^2 + 48*sw^4 - 36*sw^6 + 32*sw^8) - 
        2*(3 - 26*sw^2 + 84*sw^4 - 144*sw^6 + 128*sw^8)*t))/(2*Pi)^d - 
     (mz^2*(-3 + 8*sw^2)*(-1 + 6*sw^2 - 12*sw^4 + 16*sw^6)*
       (s*(-((-2 + d)*s^2) + 4*s*t + 4*(-1 + d)*t^2) + 
        2*mz^2*((-2 + d)*s^2 + 4*(-1 + d)*s*t + 4*(-1 + d)*t^2)))/(2*Pi)^d + 
     (2^(4 - 5*d)*mz^2*s^2*(3*(2*Pi)^(4*d)*sw^6*(1/2 - (2*sw^2)/3)*
         (4*(-2 + d)*mz^2 + (-80 + 60*d - 14*d^2 + d^3)*s + 
          2*(-52 + 44*d - 12*d^2 + d^3)*t) - 2^(1 + 4*d)*Pi^(4*d)*sw^8*
         (4*(-2 + d)*mz^2 - (-40 + 40*d - 12*d^2 + d^3)*s - 
          2*(-56 + 46*d - 12*d^2 + d^3)*t) + (1/2 - sw^2)^3*
         (2^(1 + 4*d)*Pi^(4*d)*sw^2*(4*(-2 + d)*mz^2 + 
            (-80 + 60*d - 14*d^2 + d^3)*s + 2*(-52 + 44*d - 12*d^2 + d^3)*
             t) - 3*(2*Pi)^(4*d)*(1/2 - (2*sw^2)/3)*(4*(-2 + d)*mz^2 - 
            (-40 + 40*d - 12*d^2 + d^3)*s - 2*(-56 + 46*d - 12*d^2 + d^3)*
             t))))/Pi^(5*d) - (2^(5 - d)*(s + 2*t)*
       ((mz^2*sw^6*((-2 + d)*mz^2*(s*(-6 + 3*d - 8*sw^2) + 2*(3 - 8*sw^2)*
              t) + 2*s*(s*(-12 + 3*d + 8*sw^2) - (-4 + d)*(-3 + 8*sw^2)*t)))/
         2 - ((-1 + 2*sw^2)^3*((-2 + d)*mz^4*(s*(-12 + 3*d + 8*sw^2) + 
             2*(-3 + 8*sw^2)*t) + 2*mz^2*s*(s*(-6 + 3*d - 8*sw^2) + 
             (-4 + d)*(-3 + 8*sw^2)*t)))/16))/Pi^d))/
   (mz^2*(mz^2 - s)*s^2*sw^4*(-1 + sw^2)^2), 0, 0, 0, 
  ((I/9)*2^(-5 - 6*d)*EL^6*(9*d^2*(2*Pi)^(5*d)*s^3 + 
     3*2^(1 + 5*d)*Pi^(5*d)*s*(s^2*(6 - 28*sw^2 + 24*sw^4 + 144*sw^6 - 
         128*sw^8 + 9*d^2*sw^2*(-1 + 2*sw^2) + d*(-6 + 32*sw^2 - 48*sw^4 - 
           72*sw^6 + 64*sw^8)) + s*(-15*d*(1 - 6*sw^2 + 12*sw^4) + 
         3*d^2*(1 - 6*sw^2 + 12*sw^4) + 8*(3 - 20*sw^2 + 48*sw^4 - 36*sw^6 + 
           32*sw^8))*t + 2*(3 - 26*sw^2 + 84*sw^4 - 144*sw^6 + 128*sw^8)*
        t^2) + 2*mz^2*(3*d^2*(2*Pi)^(5*d)*s^2 + 2^(1 + 5*d)*Pi^(5*d)*
        (s^2*(6 - 28*sw^2 + 24*sw^4 + 144*sw^6 - 128*sw^8 + 
           9*d^2*sw^2*(-1 + 2*sw^2) + d*(-6 + 32*sw^2 - 48*sw^4 - 72*sw^6 + 
             64*sw^8)) + s*(-15*d*(1 - 6*sw^2 + 12*sw^4) + 
           3*d^2*(1 - 6*sw^2 + 12*sw^4) + 8*(3 - 20*sw^2 + 48*sw^4 - 
             36*sw^6 + 32*sw^8))*t + 2*(3 - 26*sw^2 + 84*sw^4 - 144*sw^6 + 
           128*sw^8)*t^2))))/(mz^2*Pi^(6*d)*(mz^2 - s)*s^2*sw^4*
    (-1 + sw^2)^2), 0, 0, 0, 
  ((I/9)*2^(-5 - d)*EL^6*(s^2*(3*d^2*(1 - 6*sw^2 + 12*sw^4) + 
       4*(3 - 14*sw^2 + 12*sw^4 + 72*sw^6 - 64*sw^8) + 
       4*d*(-3 + 16*sw^2 - 24*sw^4 - 36*sw^6 + 32*sw^8)) + 
     2*s*(-15*d*(1 - 6*sw^2 + 12*sw^4) + 3*d^2*(1 - 6*sw^2 + 12*sw^4) + 
       8*(3 - 20*sw^2 + 48*sw^4 - 36*sw^6 + 32*sw^8))*t + 
     4*(3 - 26*sw^2 + 84*sw^4 - 144*sw^6 + 128*sw^8)*t^2))/
   (mz^2*Pi^d*(mz^2 - s)*s*sw^4*(-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  ((-I/9)*4^(-2 - 3*d)*EL^6*(mz^2*(2*Pi)^(5*d)*(-3 + 8*sw^2)*
      (-1 + 6*sw^2 - 12*sw^4 + 16*sw^6)*((-2 + d)*s^2*t^2 + 
       mz^4*((-2 + d)*s^2 + 4*(-1 + d)*s*t + 4*(-1 + d)*t^2) + 
       2*mz^2*s*t*(-2*t + d*(s + 2*t))) + 2^(4 + 5*d)*Pi^(5*d)*
      (s*t + mz^2*(s + 2*t))*
      ((mz^2*sw^6*((-2 + d)*mz^2*(s*(-6 + 3*d - 8*sw^2) + 2*(3 - 8*sw^2)*t) + 
          2*s*(s*(-12 + 3*d + 8*sw^2) - (-4 + d)*(-3 + 8*sw^2)*t)))/2 - 
       ((-1 + 2*sw^2)^3*((-2 + d)*mz^4*(s*(-12 + 3*d + 8*sw^2) + 
            2*(-3 + 8*sw^2)*t) + 2*mz^2*s*(s*(-6 + 3*d - 8*sw^2) + 
            (-4 + d)*(-3 + 8*sw^2)*t)))/16) - 
     8*mz^2*s^2*(3*(2*Pi)^(5*d)*sw^6*(1/2 - (2*sw^2)/3)*
        (2*(-2 + d)*mz^4 + mz^2*((-80 + 60*d - 14*d^2 + d^3)*s + 
           2*(-52 + 44*d - 12*d^2 + d^3)*t) - 2*(-2 + d)*
          ((-4 + d)*s^2 + 2*(-4 + d)*s*t - t^2)) - 2^(1 + 5*d)*Pi^(5*d)*sw^8*
        (2*(-2 + d)*mz^4 + mz^2*(-((-40 + 40*d - 12*d^2 + d^3)*s) - 
           2*(-56 + 46*d - 12*d^2 + d^3)*t) + 
         2*((-2 + d)^2*s^2 + 2*(10 - 6*d + d^2)*s*t + (-2 + d)*t^2)) + 
       (1/2 - sw^2)^3*(2^(1 + 5*d)*Pi^(5*d)*sw^2*(2*(-2 + d)*mz^4 + 
           mz^2*((-80 + 60*d - 14*d^2 + d^3)*s + 2*(-52 + 44*d - 12*d^2 + d^
                3)*t) - 2*(-2 + d)*((-4 + d)*s^2 + 2*(-4 + d)*s*t - t^2)) - 
         3*(2*Pi)^(5*d)*(1/2 - (2*sw^2)/3)*(2*(-2 + d)*mz^4 + 
           mz^2*(-((-40 + 40*d - 12*d^2 + d^3)*s) - 2*(-56 + 46*d - 12*d^2 + 
               d^3)*t) + 2*((-2 + d)^2*s^2 + 2*(10 - 6*d + d^2)*s*t + 
             (-2 + d)*t^2))))))/(mz^2*Pi^(6*d)*(mz^2 - s)*s^2*sw^4*
    (-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {((I/9)*2^(-4 - d)*EL^6*((-7 + d)*s + 2*mz^2*(-1 + sw^2))*
    (s^2*(3*d^2 - 4*d*(3 + 2*sw^2) + 4*(3 + 4*sw^2)) + 
     2*s*(24 - 15*d + 3*d^2 - 16*sw^2)*t + 4*(3 - 8*sw^2)*t^2))/
   (Pi^d*(mz^2 - s)*s^2*sw^4*(-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  ((-I/9)*2^(-4 - d)*EL^6*(3*s - 2*mz^2*(-1 + sw^2))*
    (s^2*(3*d^2 - 4*d*(3 + 2*sw^2) + 4*(3 + 4*sw^2)) + 
     2*s*(24 - 15*d + 3*d^2 - 16*sw^2)*t + 4*(3 - 8*sw^2)*t^2))/
   (mz^2*Pi^d*(mz^2 - s)*s^2*sw^4*(-1 + sw^2)^2), 0, 0, 
  ((-I/9)*2^(-4 - d)*EL^6*(s^2*(3*d^2 - 4*d*(3 + 2*sw^2) + 4*(3 + 4*sw^2)) + 
     2*s*(24 - 15*d + 3*d^2 - 16*sw^2)*t + 4*(3 - 8*sw^2)*t^2))/
   (mz^2*Pi^d*(mz^2 - s)*s*sw^4*(-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, ((I/9)*4^(-2 - 3*d)*EL^6*
    (-((2*Pi)^(5*d)*s^2*(1 - sw^2)*(2*(-2 + d)*mz^4*(-1 + sw^2)^2*
         (-3 + 8*sw^2) - 2*s^2*(3*d^2 - 4*d*(3 + 2*sw^2) + 4*(3 + 4*sw^2)) - 
        4*s*(30 - 18*d + 3*d^2 - 8*sw^2)*t + 2*(-2 + d)*(-3 + 8*sw^2)*t^2 + 
        mz^2*(-1 + sw^2)*(-((20 - 10*d + d^2)*s*(-6 + 3*d - 8*sw^2)) + 
          2*(168 + 36*d^2 - 3*d^3 - 16*sw^2 + 2*d*(-69 + 4*sw^2))*t))) - 
     2^(2 + 5*d)*Pi^(5*d)*(1 - sw^2)*(-3/2 + 4*sw^2)*
      ((-2 + d)*s^2*t^2 + mz^4*(-1 + sw^2)^2*((-2 + d)*s^2 + 4*(-1 + d)*s*t + 
         4*(-1 + d)*t^2) - 2*mz^2*s*(-1 + sw^2)*t*(-2*t + d*(s + 2*t))) + 
     2^(1 + 5*d)*Pi^(5*d)*(s*t - mz^2*(-1 + sw^2)*(s + 2*t))*
      (4*sw^2*(1 - sw^2)*(2*(-4 + d)*s*(s + t) + (-2 + d)*mz^2*(1 - sw^2)*
          ((-2 + d)*s + 2*t)) - (-1 + sw^2)*(-3 + 4*sw^2)*
        ((-2 + d)*mz^2*(-1 + sw^2)*((-4 + d)*s - 2*t) + 
         2*s*(-((-2 + d)*s) + (-4 + d)*t)))))/(Pi^(6*d)*(mz^2 - s)*sw^4*
    (s - s*sw^2)^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  ((I/9)*4^(-1 - 2*d)*EL^6*(-(2^(2 + 3*d)*(-1 + d)^2*(-4 + d^2)*mz^4*Pi^(3*d)*
       s^2*(-1 + sw^2)^2*((-2 + d)*s^2 + 4*s*t + 4*t^2)) + 
     d*mz^2*s*(1 - sw^2)*(-(8^(1 + d)*d^4*mz^2*Pi^(3*d)*s^2*(1 - sw^2)*
         (s - mz^2*(-1 + sw^2))) + 8^(1 + d)*Pi^(3*d)*
        (s^2 - 3*mz^2*s*(-1 + sw^2) + 8*mz^4*(-1 + sw^2)^2)*
        (s^2 - 2*s*t - 2*t^2) - 2^(2 + 3*d)*d*Pi^(3*d)*
        (s^4 - mz^2*s*(-1 + sw^2)*(19*s^2 - 32*s*t - 32*t^2) + 
         8*mz^4*(-1 + sw^2)^2*(3*s^2 - 4*s*t - 4*t^2)) + 
       d^3*(2*Pi)^(3*d)*(s^4 - mz^2*s*(-1 + sw^2)*(19*s^2 - 32*s*t - 
           32*t^2) + 8*mz^4*(-1 + sw^2)^2*(3*s^2 - 4*s*t - 4*t^2)) + 
       2^(1 + 3*d)*d^2*Pi^(3*d)*(s^2*(-s^2 + 2*s*t + 2*t^2) + 
         8*mz^4*(-1 + sw^2)^2*(s^2 + 2*s*t + 2*t^2) - mz^2*s*(-1 + sw^2)*
          (13*s^2 + 6*s*t + 6*t^2)))*GaugeXi[Q] + 
     d*(-4 + d^2)*mz^4*(2*Pi)^(3*d)*s^2*(-1 + sw^2)^2*
      ((-2 + d)*s^2 + 4*s*t + 4*t^2)*GaugeXi[Q]^2))/
   ((-2 + d)*(-1 + d)*d*(2 + d)*mz^6*Pi^(4*d)*s^4*sw^2*(1 - sw^2)^3*
    GaugeXi[Q]), ((-I/9)*2^(-2 - 3*d)*EL^6*
    (-(4^(1 + d)*d^5*mz^2*Pi^(2*d)*s^2*(-1 + sw^2)) + 
     2^(5 + 2*d)*mz^2*Pi^(2*d)*(-1 + sw^2)*(s^2 - 2*s*t - 2*t^2) - 
     4^(1 + d)*d^2*Pi^(2*d)*(s^3 + mz^2*(-1 + sw^2)*(11*s^2 - 20*s*t - 
         20*t^2)) + d^4*(2*Pi)^(2*d)*(s^3 + mz^2*(-1 + sw^2)*
        (9*s^2 - 16*s*t - 16*t^2)) + 2^(3 + 2*d)*d*Pi^(2*d)*
      (s*(s^2 - 2*s*t - 2*t^2) - mz^2*(-1 + sw^2)*(s^2 + 2*s*t + 2*t^2)) - 
     2^(1 + 2*d)*d^3*Pi^(2*d)*(s*(s^2 - 2*s*t - 2*t^2) - 
       mz^2*(-1 + sw^2)*(9*s^2 + 2*s*t + 2*t^2)) - 
     d*(-4 + d^2)*mz^2*(2*Pi)^(2*d)*(-1 + sw^2)*((-2 + d)*s^2 + 4*s*t + 
       4*t^2)*GaugeXi[Q]))/((-2 + d)*(-1 + d)*d*(2 + d)*mz^4*Pi^(3*d)*s^2*
    sw^2*(-1 + sw^2)^2), ((-I/9)*2^(-2 - 3*d)*EL^6*
    (-((2^(1 + 2*d)*Pi^(2*d)*(3*s + 2*t)*(s + mz^2*(-1 + sw^2) + 
          mz^2*(-1 + sw^2)*GaugeXi[Q])^2)/s) + 
     (2^(1 + 2*d)*Pi^(2*d)*(d*(s + mz^2*(-1 + sw^2))^2 + 
        2*mz^2*(-1 + sw^2)*(d*s + (-2 + d)*mz^2*(-1 + sw^2))*GaugeXi[Q] + 
        d*mz^4*(-1 + sw^2)^2*GaugeXi[Q]^2))/(-1 + d) + 
     ((2*Pi)^d*((2*Pi)^d*s + 2^(1 + d)*Pi^d*t)*
       ((s + mz^2*(-1 + sw^2))^2*((-2 + d)*s - 2*t) + 2*mz^2*(1 - sw^2)*
         (-(d*s*(s + mz^2*(-1 + sw^2))) + 2*(s^2 + s*t - mz^2*(-1 + sw^2)*t))*
         GaugeXi[Q] + mz^4*(-1 + sw^2)^2*((-2 + d)*s - 2*t)*GaugeXi[Q]^2))/
      ((-1 + d)*s^2) - 
     (2*((2*Pi)^(2*d)*(-(s^2*(s + t)) - mz^4*(-1 + sw^2)^2*(s + t) + 
          2*mz^2*(1 - sw^2)*((-1 + d)*s^2 + 5*s*t + 4*t^2)) + 
        2^(1 + 2*d)*mz^2*Pi^(2*d)*(1 - sw^2)*(s*(s + t) + 
          mz^2*(-1 + sw^2)*(2*s + t))*GaugeXi[Q] - mz^4*(2*Pi)^(2*d)*
         (-1 + sw^2)^2*(s + t)*GaugeXi[Q]^2))/s))/
   (mz^4*Pi^(3*d)*(sw - sw^3)^2), ((I/9)*2^(-2 - 3*d)*EL^6*(1 - sw^2)*
    (4^(1 + d)*d^5*mz^2*Pi^(2*d)*s^3*(-1 + sw^2) + 2^(5 + 2*d)*mz^2*Pi^(2*d)*
      s*(-1 + sw^2)*(s^2 - 2*s*t - 2*t^2) + d^4*(2*Pi)^(2*d)*
      (s^4 - mz^2*s*(-1 + sw^2)*(21*s^2 - 16*s*t - 16*t^2)) - 
     4^(1 + d)*d^2*Pi^(2*d)*(s^4 - mz^2*s*(-1 + sw^2)*(19*s^2 - 12*s*t - 
         12*t^2)) - 2^(1 + 2*d)*d^3*Pi^(2*d)*s*
      (-(mz^2*(-1 + sw^2)*(7*s^2 - 26*s*t - 26*t^2)) + 
       s*(s^2 - 2*s*t - 2*t^2)) + 2^(3 + 2*d)*d*Pi^(2*d)*s*
      (-(mz^2*(-1 + sw^2)*(15*s^2 - 26*s*t - 26*t^2)) + 
       s*(s^2 - 2*s*t - 2*t^2)) + d*(-4 + d^2)*mz^2*(2*Pi)^(2*d)*s*
      (-1 + sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2)*GaugeXi[Q]))/
   ((-2 + d)*(-1 + d)*d*(2 + d)*mz^4*Pi^(3*d)*sw^2*(s - s*sw^2)^3), 
  ((-I/9)*2^(-2 - d)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
    (4*(-1 + d)^2*mz^2*(-1 + sw^2) + d*(s - mz^2*(-1 + sw^2))*GaugeXi[Q] + 
     d*mz^2*(-1 + sw^2)*GaugeXi[Q]^2))/((-1 + d)*d*mz^4*Pi^d*s^2*sw^2*
    (-1 + sw^2)^2*GaugeXi[Q]), ((-I/9)*2^(-2 - 3*d)*EL^6*
    (-((2^(1 + 2*d)*Pi^(2*d)*(3*s + 2*t)*(s + mz^2*(-1 + sw^2) + 
          mz^2*(-1 + sw^2)*GaugeXi[Q])^2)/s) + 
     (2^(1 + 2*d)*Pi^(2*d)*(d*(s + mz^2*(-1 + sw^2))^2 + 
        2*mz^2*(-1 + sw^2)*(d*s + (-2 + d)*mz^2*(-1 + sw^2))*GaugeXi[Q] + 
        d*mz^4*(-1 + sw^2)^2*GaugeXi[Q]^2))/(-1 + d) + 
     ((2*Pi)^d*((2*Pi)^d*s + 2^(1 + d)*Pi^d*t)*
       ((s + mz^2*(-1 + sw^2))^2*((-2 + d)*s - 2*t) + 2*mz^2*(1 - sw^2)*
         (-(d*s*(s + mz^2*(-1 + sw^2))) + 2*(s^2 + s*t - mz^2*(-1 + sw^2)*t))*
         GaugeXi[Q] + mz^4*(-1 + sw^2)^2*((-2 + d)*s - 2*t)*GaugeXi[Q]^2))/
      ((-1 + d)*s^2) - 
     (2*((2*Pi)^(2*d)*(-(s^2*(s + t)) - mz^4*(-1 + sw^2)^2*(s + t) + 
          2*mz^2*(1 - sw^2)*((-1 + d)*s^2 + 5*s*t + 4*t^2)) + 
        2^(1 + 2*d)*mz^2*Pi^(2*d)*(1 - sw^2)*(s*(s + t) + 
          mz^2*(-1 + sw^2)*(2*s + t))*GaugeXi[Q] - mz^4*(2*Pi)^(2*d)*
         (-1 + sw^2)^2*(s + t)*GaugeXi[Q]^2))/s))/
   (mz^4*Pi^(3*d)*(sw - sw^3)^2), 
  ((I/9)*2^(-2 - d)*EL^6*(-s + 2*mz^2*(-1 + sw^2))*
    ((-2 + d)*s^2 + 4*s*t + 4*t^2)*(s + 4*mz^2*(-1 + sw^2)*GaugeXi[Q]))/
   ((-1 + d)*mz^4*Pi^d*s^2*sw^2*(-1 + sw^2)^2), 
  ((-I/9)*4^(-1 - 2*d)*EL^6*(((2*Pi)^(3*d)*s^2*(s + 2*mz^2*(-1 + sw^2))*
       (d*s^2 + 4*d*mz^2*s*(-1 + sw^2) + 4*(-1 + d)*mz^4*(-1 + sw^2)^2))/
      (1 - d) + ((2*Pi)^(2*d)*s^2*((2*Pi)^d*s + 2^(1 + d)*mz^2*Pi^d*
         (-1 + sw^2))*(d*s^2 + 4*d*mz^2*s*(-1 + sw^2) + 
        4*(-1 + d)*mz^4*(-1 + sw^2)^2))/(1 - d) + 2^(2 + 3*d)*mz^4*Pi^(3*d)*
      (-1 + sw^2)^2*(s + 2*mz^2*(-1 + sw^2))*(3*(-2 + d)*s^2 + 
       4*(-3 + 2*d)*s*t + 4*(-1 + d)*t^2) - 2^(1 + 3*d)*Pi^(3*d)*s*
      (s/2 + mz^2*(-1 + sw^2))*(4*mz^4*(-1 + sw^2)^2*((-5 + d)*s - 2*t) - 
       s^2*(3*s + 2*t) - 4*mz^2*s*(-1 + sw^2)*(3*s + 2*t)) + 
     2^(1 + 3*d)*Pi^(3*d)*s*(s/2 + mz^2*(-1 + sw^2))*
      (s^2*(3*s + 2*t) + 4*mz^2*s*(-1 + sw^2)*(3*s + 2*t) - 
       4*mz^4*(-1 + sw^2)^2*((-5 + d)*s + 2*(-3 + d)*t)) - 
     2^(2 + 3*d)*mz^4*Pi^(3*d)*(-1 + sw^2)^2*(s + 2*t)*
      (2*(-2 + d)*mz^2*(-1 + sw^2)*(3*s + 2*t) + 
       s*((-2 + 3*d)*s + 2*(2 + d)*t)) + 
     ((2*Pi)^(2*d)*s*(4*(-1 + d)*mz^4*(-1 + sw^2)^2 + s*((-2 + d)*s - 2*t) + 
        4*mz^2*(-1 + sw^2)*((-2 + d)*s - 2*t))*
       (2^(1 + d)*mz^2*Pi^d*(-1 + sw^2)*(s + 2*t) + 
        s*((2*Pi)^d*s + 2^(1 + d)*Pi^d*t)))/(1 - d) - 
     2^(1 + 3*d)*Pi^(3*d)*s*(s^3*(s + t) - 4*(-3 + d)*mz^6*(-1 + sw^2)^3*
        (3*s + 2*t) + 2*mz^4*s*(-1 + sw^2)^2*((1 + d)*s - 2*(-5 + d)*t) + 
       2*mz^2*s*(-1 + sw^2)*((-1 + 2*d)*s^2 + 11*s*t + 8*t^2))))/
   (mz^4*Pi^(4*d)*s^3*(sw - sw^3)^2), 
  ((-I/9)*2^(1 - d)*EL^6*mz^2*(-1 + sw^2)*(-2*s + mz^2*(-1 + sw^2))*
    ((-2 + d)*s^2 + 4*s*t + 4*t^2))/(Pi^d*s^3*sw^2), 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  ((-I/9)*2^(-5 - 6*d)*EL^6*(-4*mz^2*s*(1 - sw^2)*
      (3*d^6*(2*Pi)^(5*d)*s*(s + 2*t) - 2^(1 + 5*d)*d^5*Pi^(5*d)*s*
        (s*(9 + 4*sw^2) + 21*t) - 2^(4 + 5*d)*Pi^(5*d)*(s^2*(3 + 4*sw^2) + 
         4*s*(3 - 2*sw^2)*t + (3 - 8*sw^2)*t^2) - 2^(2 + 5*d)*d^2*Pi^(5*d)*
        (4*s^2*(9 + 7*sw^2) - 6*s*(-17 + 4*sw^2)*t + 3*(3 - 8*sw^2)*t^2) + 
       2^(3 + 5*d)*d*Pi^(5*d)*(2*s^2*(9 + 10*sw^2) + s*(63 - 32*sw^2)*t + 
         4*(3 - 8*sw^2)*t^2) + d^4*(2*Pi)^(5*d)*(s^2*(27 + 32*sw^2) + 
         s*(90 - 32*sw^2)*t + 4*(3 - 8*sw^2)*t^2) - 2^(1 + 5*d)*d^3*Pi^(5*d)*
        (2*s^2*(-9 + 2*sw^2) - s*(21 + 32*sw^2)*t + 4*(3 - 8*sw^2)*t^2)) - 
     d*(3*2^(3 + 5*d)*d^5*mz^2*Pi^(5*d)*s*(-1 + sw^2)*(-s + mz^2*(-1 + sw^2))*
        (s + 2*t) + 2^(4 + 5*d)*Pi^(5*d)*(s^2 - 3*mz^2*s*(-1 + sw^2) + 
         8*mz^4*(-1 + sw^2)^2)*(s^2*(3 + 4*sw^2) + 4*s*(3 - 2*sw^2)*t + 
         (3 - 8*sw^2)*t^2) - d^4*(2*Pi)^(5*d)*s*(3*s^2*(s + 2*t) + 
         8*mz^4*(-1 + sw^2)^2*(s*(15 + 8*sw^2) + 36*t) - 
         mz^2*s*(-1 + sw^2)*(s*(105 + 64*sw^2) + 258*t)) + 
       2^(1 + 5*d)*d^3*Pi^(5*d)*(s^3*(s*(6 + 4*sw^2) + 15*t) + 
         8*mz^4*(-1 + sw^2)^2*(6*s^2*(1 + 2*sw^2) + s*(27 - 16*sw^2)*t + 
           2*(3 - 8*sw^2)*t^2) - mz^2*s*(-1 + sw^2)*(2*s^2*(9 + 38*sw^2) + 
           s*(141 - 128*sw^2)*t + 16*(3 - 8*sw^2)*t^2)) - 
       2^(3 + 5*d)*d*Pi^(5*d)*(s^3*(s*(6 + 4*sw^2) + 15*t) + 
         8*mz^4*(-1 + sw^2)^2*(12*s^2*(1 + sw^2) + s*(39 - 16*sw^2)*t + 
           2*(3 - 8*sw^2)*t^2) - mz^2*s*(-1 + sw^2)*(s^2*(66 + 76*sw^2) + 
           s*(237 - 128*sw^2)*t + 16*(3 - 8*sw^2)*t^2)) + 
       2^(2 + 5*d)*d^2*Pi^(5*d)*(8*mz^4*(-1 + sw^2)^2*(4*s^2*(3 + sw^2) + 
           8*s*(3 + sw^2)*t + (-3 + 8*sw^2)*t^2) + 
         s^2*(-4*s^2*sw^2 + 2*s*(-3 + 4*sw^2)*t + (-3 + 8*sw^2)*t^2) - 
         mz^2*s*(-1 + sw^2)*(s^2*(96 + 52*sw^2) + 6*s*(37 + 4*sw^2)*t + 
           3*(-3 + 8*sw^2)*t^2)))*GaugeXi[Q] + d*(-4 + d^2)*mz^2*(2*Pi)^(5*d)*
      s*(1 - sw^2)*(s^2*(3*d^2 - 4*d*(3 + 2*sw^2) + 4*(3 + 4*sw^2)) + 
       2*s*(24 - 15*d + 3*d^2 - 16*sw^2)*t + 4*(3 - 8*sw^2)*t^2)*
      GaugeXi[Q]^2))/((-2 + d)*(-1 + d)*d*(2 + d)*mz^4*Pi^(6*d)*(mz^2 - s)*
    sw^4*(s - s*sw^2)^2*GaugeXi[Q]), 
  ((-I/9)*2^(-5 - 6*d)*EL^6*
    (-(d*(2*Pi)^(5*d)*s*(s^2*(3*d^2 - 4*d*(3 + 2*sw^2) + 4*(3 + 4*sw^2)) + 
        2*s*(24 - 15*d + 3*d^2 - 16*sw^2)*t + 4*(3 - 8*sw^2)*t^2)) + 
     mz^2*(-(d^3*(2*Pi)^(5*d)*s^2*(-51 + 19*sw^2)) + 2^(1 + 5*d)*Pi^(5*d)*
        (2*s^2*(-8*d^3*sw^4 + 3*d^4*(-1 + sw^2) + 4*(3 + sw^2 - 4*sw^4) + 
           6*d^2*(-2 - sw^2 + 3*sw^4) + d*(-9 + 5*sw^2 + 4*sw^4)) + 
         (-4 - d + 4*d^2)*s*(24 - 15*d + 3*d^2 - 16*sw^2)*(-1 + sw^2)*t - 
         2*(-4 - d + 4*d^2)*(3 - 11*sw^2 + 8*sw^4)*t^2)) + 
     d*mz^2*(2*Pi)^(5*d)*(-1 + sw^2)*
      (s^2*(3*d^2 - 4*d*(3 + 2*sw^2) + 4*(3 + 4*sw^2)) + 
       2*s*(24 - 15*d + 3*d^2 - 16*sw^2)*t + 4*(3 - 8*sw^2)*t^2)*GaugeXi[Q]))/
   ((-1 + d)*d*mz^4*Pi^(6*d)*(mz^2 - s)*s*sw^4*(-1 + sw^2)^2), 
  ((-I/9)*EL^6*(-((-1 + d)*(2*Pi)^(4*d)*s*(3*s*(-6 + d + 8*sw^2) + 
        2*(-3 + 8*sw^2)*t)*(-1 + GaugeXi[Q])^2*
       (s + mz^2*(-1 + sw^2) + mz^2*(-1 + sw^2)*GaugeXi[Q])^2) - 
     (-1 + d)*(2*Pi)^(3*d)*s*(3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
        (3*s*(-3 + 4*sw^2) + (-3 + 8*sw^2)*t))*(-1 + GaugeXi[Q])^2*
      (s + mz^2*(-1 + sw^2) + mz^2*(-1 + sw^2)*GaugeXi[Q])^2 + 
     4^(1 + 2*d)*Pi^(4*d)*(-3/2 + 4*sw^2)*(s - s*GaugeXi[Q])^2*
      (d*(s + mz^2*(-1 + sw^2))^2 + 2*mz^2*(1 - sw^2)*
        (-(d*s) - (-2 + d)*mz^2*(-1 + sw^2))*GaugeXi[Q] + 
       d*mz^4*(-1 + sw^2)^2*GaugeXi[Q]^2) + 2^(1 + 4*d)*Pi^(4*d)*
      (s*(-6 + (3*d)/2 + 4*sw^2) + (-3 + 8*sw^2)*t)*(-1 + GaugeXi[Q])^2*
      ((s + mz^2*(-1 + sw^2))^2*((-2 + d)*s - 2*t) + 2*mz^2*(1 - sw^2)*
        (-(d*s*(s + mz^2*(-1 + sw^2))) + 2*(s^2 + s*t - mz^2*(-1 + sw^2)*t))*
        GaugeXi[Q] + mz^4*(-1 + sw^2)^2*((-2 + d)*s - 2*t)*GaugeXi[Q]^2) - 
     2*(1 - d)*s*(4^(1 + 2*d)*Pi^(4*d)*sw^2*((-2 + d)*s^2*(s + t) + 
         (-2 + d)*mz^4*(-1 + sw^2)^2*(s + t) + 2*mz^2*(1 - sw^2)*
          ((10 - 7*d + d^2)*s^2 + (10 - 11*d + 2*d^2)*s*t - 4*t^2)) + 
       (2*Pi)^(4*d)*(3 - 4*sw^2)*((-4 + d)*s^2*(s + t) + 
         (-4 + d)*mz^4*(-1 + sw^2)^2*(s + t) + 2*mz^2*(1 - sw^2)*
          ((8 - 5*d + d^2)*s^2 + (20 - 11*d + 2*d^2)*s*t + 4*t^2)) - 
       2^(1 + 4*d)*Pi^(4*d)*(s^2*(-12 + 3*d + 8*sw^2)*(s + t) + 
         mz^4*(-1 + sw^2)^2*(s*(-6 + 3*d - 8*sw^2) + 6*(-3 + d)*t) + 
         mz^2*(-1 + sw^2)*(s^2*(-36 + 27*d - 6*d^2 - 24*sw^2 + 16*d*sw^2) - 
           3*s*(36 - 21*d + 4*d^2 - 24*sw^2)*t + 8*(-3 + 8*sw^2)*t^2))*
        GaugeXi[Q] + (2*Pi)^(4*d)*(-6*d^2*mz^2*s*(-1 + sw^2)*(s + 2*t) + 
         d*(3*s^2*(s + t) + 6*mz^4*(-1 + sw^2)^2*(s + 3*t) + 
           2*mz^2*s*(-1 + sw^2)*(s*(9 + 8*sw^2) + 27*t)) - 
         4*(s^3*(3 - 2*sw^2) + 2*mz^2*(-1 + sw^2)*t*
            (2*mz^2*(-3 + 2*sw^2 + sw^4) + (3 - 8*sw^2)*t) + 
           6*mz^2*s*(-1 + sw^2)*(2*mz^2*sw^2*(-1 + sw^2) + (3 - 2*sw^2)*t) + 
           s^2*(12*mz^2*sw^2*(-1 + sw^2) + (3 - 2*sw^2)*t)))*GaugeXi[Q]^2 - 
       2^(1 + 4*d)*mz^2*Pi^(4*d)*(1 - sw^2)*(s*(-12 + 3*d + 8*sw^2)*(s + t) + 
         mz^2*(-1 + sw^2)*(s*(6 - 3*d + 8*sw^2) - 6*(-3 + d)*t))*
        GaugeXi[Q]^3 + mz^4*(2*Pi)^(4*d)*(-1 + sw^2)^2*(-12 + 3*d + 8*sw^2)*
        (s + t)*GaugeXi[Q]^4)))/(2^(5*(1 + d))*(-1 + d)*mz^4*Pi^(5*d)*
    (mz^2 - s)*s*sw^4*(-1 + sw^2)^2*(-1 + GaugeXi[Q])^2), 
  ((-I/9)*2^(-5 - 6*d)*EL^6*(3*2^(2 + 5*d)*d^6*mz^2*Pi^(5*d)*s*(-1 + sw^2)*
      (s + 2*t) - 2^(6 + 5*d)*mz^2*Pi^(5*d)*(-1 + sw^2)*
      (s^2*(3 + 4*sw^2) + 4*s*(3 - 2*sw^2)*t + (3 - 8*sw^2)*t^2) + 
     d^5*(2*Pi)^(5*d)*s*(3*s*(s + 2*t) - mz^2*(-1 + sw^2)*
        (s*(87 + 32*sw^2) + 198*t)) + 2^(3 + 5*d)*d^2*Pi^(5*d)*
      (s^2*(s*(6 + 4*sw^2) + 15*t) - mz^2*(-1 + sw^2)*(2*s^2*(51 + 38*sw^2) + 
         3*s*(93 - 16*sw^2)*t + 6*(3 - 8*sw^2)*t^2)) - 
     2^(1 + 5*d)*d^4*Pi^(5*d)*(s^2*(s*(6 + 4*sw^2) + 15*t) - 
       mz^2*(-1 + sw^2)*(84*s^2*(1 + sw^2) + s*(255 - 64*sw^2)*t + 
         8*(3 - 8*sw^2)*t^2)) + 2^(2 + 5*d)*d^3*Pi^(5*d)*
      (s*(4*s^2*sw^2 + s*(6 - 8*sw^2)*t + (3 - 8*sw^2)*t^2) - 
       mz^2*(-1 + sw^2)*(4*s^2*(-9 + 7*sw^2) - 4*s*(3 + 26*sw^2)*t + 
         13*(3 - 8*sw^2)*t^2)) - 2^(4 + 5*d)*d*Pi^(5*d)*
      (s*(s^2*(3 + 4*sw^2) + 4*s*(3 - 2*sw^2)*t + (3 - 8*sw^2)*t^2) - 
       mz^2*(-1 + sw^2)*(s^2*(51 + 60*sw^2) - 2*s*(-93 + 52*sw^2)*t + 
         13*(3 - 8*sw^2)*t^2)) + 2*d*(4 - d^2)*mz^2*(1 - sw^2)*
      (2^(1 + 5*d)*Pi^(5*d)*sw^2*((8 - 6*d + d^2)*s^2 + 2*(4 - 5*d + d^2)*s*
          t - 4*t^2) + 3*(2*Pi)^(5*d)*(1/2 - (2*sw^2)/3)*
        ((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 4*t^2))*GaugeXi[Q]))/
   ((-2 + d)*(-1 + d)*d*(2 + d)*mz^4*Pi^(6*d)*(mz^2 - s)*s*sw^4*
    (-1 + sw^2)^2), ((I/9)*2^(-5 - 6*d)*EL^6*
    (-4*mz^2*(-(d^2*(2*Pi)^(5*d)*s^2*(-39 + 7*sw^2 + 3*d^2*(-1 + sw^2))) + 
       2^(1 + 5*d)*Pi^(5*d)*(s^2*(6 + 2*sw^2 - 8*sw^4 - 16*d^2*sw^4 + 
           d^3*(-9 + 5*sw^2 + 4*sw^4) + 2*d*(-9 - sw^2 + 10*sw^4)) - 
         (-1 + d)^2*s*(24 - 15*d + 3*d^2 - 16*sw^2)*(-1 + sw^2)*t + 
         2*(-1 + d)^2*(3 - 11*sw^2 + 8*sw^4)*t^2)) - 
     d*(2*Pi)^(5*d)*(-s + mz^2*(-1 + sw^2))*
      (s^2*(3*d^2 - 4*d*(3 + 2*sw^2) + 4*(3 + 4*sw^2)) + 
       2*s*(24 - 15*d + 3*d^2 - 16*sw^2)*t + 4*(3 - 8*sw^2)*t^2)*GaugeXi[Q] + 
     d*mz^2*(2*Pi)^(5*d)*(-1 + sw^2)*
      (s^2*(3*d^2 - 4*d*(3 + 2*sw^2) + 4*(3 + 4*sw^2)) + 
       2*s*(24 - 15*d + 3*d^2 - 16*sw^2)*t + 4*(3 - 8*sw^2)*t^2)*
      GaugeXi[Q]^2))/((-1 + d)*d*mz^4*Pi^(6*d)*(mz^2 - s)*s*sw^4*
    (-1 + sw^2)^2*GaugeXi[Q]), 
  ((-I/9)*EL^6*(-((-1 + d)*(2*Pi)^(4*d)*s*(3*s*(-6 + d + 8*sw^2) + 
        2*(-3 + 8*sw^2)*t)*(-1 + GaugeXi[Q])^2*
       (s + mz^2*(-1 + sw^2) + mz^2*(-1 + sw^2)*GaugeXi[Q])^2) - 
     (-1 + d)*(2*Pi)^(3*d)*s*(3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
        (3*s*(-3 + 4*sw^2) + (-3 + 8*sw^2)*t))*(-1 + GaugeXi[Q])^2*
      (s + mz^2*(-1 + sw^2) + mz^2*(-1 + sw^2)*GaugeXi[Q])^2 + 
     4^(1 + 2*d)*Pi^(4*d)*(-3/2 + 4*sw^2)*(s - s*GaugeXi[Q])^2*
      (d*(s + mz^2*(-1 + sw^2))^2 + 2*mz^2*(1 - sw^2)*
        (-(d*s) - (-2 + d)*mz^2*(-1 + sw^2))*GaugeXi[Q] + 
       d*mz^4*(-1 + sw^2)^2*GaugeXi[Q]^2) + 2^(1 + 4*d)*Pi^(4*d)*
      (s*(-6 + (3*d)/2 + 4*sw^2) + (-3 + 8*sw^2)*t)*(-1 + GaugeXi[Q])^2*
      ((s + mz^2*(-1 + sw^2))^2*((-2 + d)*s - 2*t) + 2*mz^2*(1 - sw^2)*
        (-(d*s*(s + mz^2*(-1 + sw^2))) + 2*(s^2 + s*t - mz^2*(-1 + sw^2)*t))*
        GaugeXi[Q] + mz^4*(-1 + sw^2)^2*((-2 + d)*s - 2*t)*GaugeXi[Q]^2) - 
     2*(1 - d)*s*(4^(1 + 2*d)*Pi^(4*d)*sw^2*((-2 + d)*s^2*(s + t) + 
         (-2 + d)*mz^4*(-1 + sw^2)^2*(s + t) + 2*mz^2*(1 - sw^2)*
          ((10 - 7*d + d^2)*s^2 + (10 - 11*d + 2*d^2)*s*t - 4*t^2)) + 
       (2*Pi)^(4*d)*(3 - 4*sw^2)*((-4 + d)*s^2*(s + t) + 
         (-4 + d)*mz^4*(-1 + sw^2)^2*(s + t) + 2*mz^2*(1 - sw^2)*
          ((8 - 5*d + d^2)*s^2 + (20 - 11*d + 2*d^2)*s*t + 4*t^2)) - 
       2^(1 + 4*d)*Pi^(4*d)*(s^2*(-12 + 3*d + 8*sw^2)*(s + t) + 
         mz^4*(-1 + sw^2)^2*(s*(-6 + 3*d - 8*sw^2) + 6*(-3 + d)*t) + 
         mz^2*(-1 + sw^2)*(s^2*(-36 + 27*d - 6*d^2 - 24*sw^2 + 16*d*sw^2) - 
           3*s*(36 - 21*d + 4*d^2 - 24*sw^2)*t + 8*(-3 + 8*sw^2)*t^2))*
        GaugeXi[Q] + (2*Pi)^(4*d)*(-6*d^2*mz^2*s*(-1 + sw^2)*(s + 2*t) + 
         d*(3*s^2*(s + t) + 6*mz^4*(-1 + sw^2)^2*(s + 3*t) + 
           2*mz^2*s*(-1 + sw^2)*(s*(9 + 8*sw^2) + 27*t)) - 
         4*(s^3*(3 - 2*sw^2) + 2*mz^2*(-1 + sw^2)*t*
            (2*mz^2*(-3 + 2*sw^2 + sw^4) + (3 - 8*sw^2)*t) + 
           6*mz^2*s*(-1 + sw^2)*(2*mz^2*sw^2*(-1 + sw^2) + (3 - 2*sw^2)*t) + 
           s^2*(12*mz^2*sw^2*(-1 + sw^2) + (3 - 2*sw^2)*t)))*GaugeXi[Q]^2 - 
       2^(1 + 4*d)*mz^2*Pi^(4*d)*(1 - sw^2)*(s*(-12 + 3*d + 8*sw^2)*(s + t) + 
         mz^2*(-1 + sw^2)*(s*(6 - 3*d + 8*sw^2) - 6*(-3 + d)*t))*
        GaugeXi[Q]^3 + mz^4*(2*Pi)^(4*d)*(-1 + sw^2)^2*(-12 + 3*d + 8*sw^2)*
        (s + t)*GaugeXi[Q]^4)))/(2^(5*(1 + d))*(-1 + d)*mz^4*Pi^(5*d)*
    (mz^2 - s)*s*sw^4*(-1 + sw^2)^2*(-1 + GaugeXi[Q])^2), 
  ((-I/9)*(2 - d)*EL^6*(-((-1 + d)*(2*Pi)^(4*d)*(s - 2*mz^2*(-1 + sw^2))*
       (3*s*(-6 + d + 8*sw^2) + 2*(-3 + 8*sw^2)*t)*(-1 + GaugeXi[Q])^2*
       (s + 2*mz^2*(-1 + sw^2)*GaugeXi[Q])^2) + 2^(1 + 4*d)*Pi^(4*d)*s*
      (-3 + 8*sw^2)*(s - 2*mz^2*(-1 + sw^2))*(-1 + GaugeXi[Q])^2*
      (d*s^2 + 4*d*mz^2*s*(-1 + sw^2)*GaugeXi[Q] + 4*(-1 + d)*mz^4*
        (-1 + sw^2)^2*GaugeXi[Q]^2) + (2*Pi)^(4*d)*(s - 2*mz^2*(-1 + sw^2))*
      (s*(-12 + 3*d + 8*sw^2) + 2*(-3 + 8*sw^2)*t)*(-1 + GaugeXi[Q])^2*
      (s*((-2 + d)*s - 2*t) + 4*mz^2*(-1 + sw^2)*((-2 + d)*s - 2*t)*
        GaugeXi[Q] + 4*(-1 + d)*mz^4*(-1 + sw^2)^2*GaugeXi[Q]^2) + 
     (1 - d)*(3*s*(-6 + d + 8*sw^2) + 2*(-3 + 8*sw^2)*t)*
      (s + 2*mz^2*(-1 + sw^2)*GaugeXi[Q])*
      ((2*Pi)^(4*d)*s*(s - 2*mz^2*(-1 + sw^2)) - 2^(1 + 4*d)*Pi^(4*d)*
        (s^2 - 3*mz^2*s*(-1 + sw^2) + 2*mz^4*(-1 + sw^2)^2)*GaugeXi[Q] + 
       (2*Pi)^(4*d)*(s^2 - 6*mz^2*s*(-1 + sw^2) + 8*mz^4*(-1 + sw^2)^2)*
        GaugeXi[Q]^2 - 2^(1 + 4*d)*mz^2*Pi^(4*d)*(-1 + sw^2)*
        (-s + 2*mz^2*(-1 + sw^2))*GaugeXi[Q]^3) + 
     4*(1 - d)*(s - 2*mz^2*(-1 + sw^2))*
      (-(2^(-1 + 4*d)*Pi^(4*d)*s^2*(-12 + 3*d + 8*sw^2)*(s + t)) + 
       (2*Pi)^(4*d)*s*(-12 + 3*d + 8*sw^2)*(s - 2*mz^2*(-1 + sw^2))*(s + t)*
        GaugeXi[Q] - 2^(-1 + 4*d)*Pi^(4*d)*(s^2*(-12 + 3*d + 8*sw^2)*
          (s + t) - 8*mz^2*s*(-1 + sw^2)*(-12 + 3*d + 8*sw^2)*(s + t) + 
         2*mz^4*(-1 + sw^2)^2*(3*s*(-6 + d + 8*sw^2) + 2*(-3 + 8*sw^2)*t))*
        GaugeXi[Q]^2 + 2^(1 + 4*d)*mz^2*Pi^(4*d)*(1 - sw^2)*
        (s*(-12 + 3*d + 8*sw^2)*(s + t) - mz^2*(-1 + sw^2)*
          (3*s*(-6 + d + 8*sw^2) + 2*(-3 + 8*sw^2)*t))*GaugeXi[Q]^3 - 
       mz^4*(2*Pi)^(4*d)*(-1 + sw^2)^2*(3*s*(-6 + d + 8*sw^2) + 
         2*(-3 + 8*sw^2)*t)*GaugeXi[Q]^4)))/(2^(5*(1 + d))*(-2 + d)*(-1 + d)*
    mz^4*Pi^(5*d)*(mz^2 - s)*s*sw^4*(-1 + sw^2)^2*(-1 + GaugeXi[Q])^2), 
  ((-I/9)*4^(-2 - 3*d)*(2 - d)*EL^6*(2^(1 + 5*d)*Pi^(5*d)*s^2*(-3/2 + 4*sw^2)*
      (s + 2*mz^2*(-1 + sw^2))*(d*s^2 + 4*d*mz^2*s*(-1 + sw^2) + 
       4*(-1 + d)*mz^4*(-1 + sw^2)^2) + 2^(-1 + 5*d)*Pi^(5*d)*s*
      (s + 2*mz^2*(-1 + sw^2))*(4*(-1 + d)*mz^4*(-1 + sw^2)^2 + 
       s*((-2 + d)*s - 2*t) + 4*mz^2*(-1 + sw^2)*((-2 + d)*s - 2*t))*
      (s*(-12 + 3*d + 8*sw^2) + 2*(-3 + 8*sw^2)*t) - 
     2^(1 + 5*d)*(-1 + d)*mz^4*Pi^(5*d)*(-1 + sw^2)^2*(-3 + 8*sw^2)*
      (s + 2*mz^2*(-1 + sw^2))*(3*(-2 + d)*s^2 + 4*(-3 + 2*d)*s*t + 
       4*(-1 + d)*t^2) - (1 - d)*(2*Pi)^(5*d)*s*(s/2 + mz^2*(-1 + sw^2))*
      (8*mz^4*(-1 + sw^2)^2*(s*(12 - 20*sw^2 + d*(-3 + 4*sw^2)) + 
         (3 - 8*sw^2)*t) + s^2*(-3*s*(-6 + d + 8*sw^2) + 2*(3 - 8*sw^2)*t) - 
       4*mz^2*s*(-1 + sw^2)*(3*s*(-6 + d + 8*sw^2) + 2*(-3 + 8*sw^2)*t)) + 
     2^(2 + 5*d)*(1 - d)*mz^4*Pi^(5*d)*(-1 + sw^2)^2*(s + 2*t)*
      (-((-2 + d)*mz^2*(-1 + sw^2)*(3*s*(-6 + d + 8*sw^2) + 
          2*(-3 + 8*sw^2)*t)) - 
       (s*(s*(60 + 3*d^2 - 16*sw^2 + 12*d*(-3 + 2*sw^2)) + 
          2*(2 + d)*(-3 + 8*sw^2)*t))/2) - (1 - d)*(2*Pi)^(5*d)*s*
      (s/2 + mz^2*(-1 + sw^2))*
      ((3 - 4*sw^2)*(-4*mz^2*s*(-1 + sw^2)*((-6 + d)*s - 2*t) + 
         s^2*(-((-6 + d)*s) + 2*t) + 4*mz^4*(-1 + sw^2)^2*
          ((14 - 7*d + d^2)*s - 2*(-3 + d)*t)) - 
       4*sw^2*(s^2*(d*s + 2*t) + 4*mz^2*s*(-1 + sw^2)*(d*s + 2*t) - 
         4*mz^4*(-1 + sw^2)^2*((4 - 5*d + d^2)*s + 2*(-3 + d)*t))) - 
     (1 - d)*(2*Pi)^d*s*((2*Pi)^(4*d)*(3 - 4*sw^2)*
        (-4*(-3 + d)*mz^6*(-1 + sw^2)^3*((-6 + d)*s - 2*t) + 
         (-4 + d)*s^3*(s + t) - 2*mz^4*s*(-1 + sw^2)^2*
          ((58 - 33*d + 5*d^2)*s + 2*(47 - 27*d + 4*d^2)*t) + 
         2*mz^2*s*(1 - sw^2)*((20 - 11*d + 2*d^2)*s^2 + (44 - 23*d + 4*d^2)*s*
            t + 8*t^2)) + 4*sw^2*(-(2^(1 + 4*d)*d^2*mz^2*Pi^(4*d)*s*
           (-1 + sw^2)*(s + 2*mz^2*(-1 + sw^2))*(mz^2*(-1 + sw^2) + 
            2*(s + 2*t))) + d*(2*Pi)^(4*d)*(4*mz^6*(-1 + sw^2)^3*
            (3*s - 2*t) + s^3*(s + t) + 10*mz^4*s*(-1 + sw^2)^2*
            (7*s + 10*t) + 2*mz^2*s^2*(-1 + sw^2)*(15*s + 23*t)) - 
         2^(1 + 4*d)*Pi^(4*d)*(-12*mz^6*(-1 + sw^2)^3*t + s^3*(s + t) + 
           2*mz^4*s*(-1 + sw^2)^2*(28*s + 37*t) + 2*mz^2*s*(-1 + sw^2)*
            (11*s^2 + 11*s*t - 4*t^2))))))/((-2 + d)*(-1 + d)*mz^4*Pi^(6*d)*
    (mz^2 - s)*sw^4*(s - s*sw^2)^2), 
  ((-I/9)*2^(-2 - d)*EL^6*mz^2*(-1 + sw^2)*(-2*s + mz^2*(-1 + sw^2))*
    (s^2*(-3*d^2 + 4*d*(3 + 2*sw^2) - 4*(3 + 4*sw^2)) + 
     2*s*(-24 + 15*d - 3*d^2 + 16*sw^2)*t + 4*(-3 + 8*sw^2)*t^2))/
   (Pi^d*(mz^2 - s)*s^2*sw^4), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {((-I/81)*2^(4 - d)*(16 - 7*d + d^2)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
   ((-4 + d)*Pi^d*s^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {((-I/81)*2^(-1 - 2*d)*EL^6*(9 - 24*sw^2 + 32*sw^4)*
    (-(d*(1 + d)*(2*Pi)^d*s^3) + 2^(1 + d)*mz^2*Pi^d*
      ((-2 + d)*s^2 + 4*s*t + 4*t^2) + 2^(1 + d)*Pi^d*s*
      ((-7 + 5*d)*s^2 - 2*(-7 + d)*s*t - 2*(-7 + d)*t^2)))/
   (Pi^(2*d)*s^3*sw^2*(-1 + sw^2)), 0, 0, 0, 
  ((I/81)*2^(-1 - d)*EL^6*(2*mz^2 + 3*s)*(9 - 24*sw^2 + 32*sw^4)*
    ((-2 + d)*s^2 + 4*s*t + 4*t^2))/(mz^2*Pi^d*s^3*sw^2*(-1 + sw^2)), 0, 0, 
  0, ((I/81)*2^(-1 - d)*EL^6*(9 - 24*sw^2 + 32*sw^4)*
    ((-2 + d)*s^2 + 4*s*t + 4*t^2))/(mz^2*Pi^d*s^2*sw^2*(-1 + sw^2)), 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, ((-I/81)*2^(-1 - d)*EL^6*(2*mz^4 - (-8 + d)*mz^2*s + 2*s^2)*
    (9 - 24*sw^2 + 32*sw^4)*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
   (Pi^d*s^3*sw^2*(-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0}, {((I/9)*2^(-1 - 2*d)*EL^6*(d*(1 + d)*(2*Pi)^d*s^3 + 
     2^(1 + d)*mz^2*Pi^d*(-1 + sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2) + 
     2^(1 + d)*Pi^d*s*((7 - 5*d)*s^2 + 2*(-7 + d)*s*t + 2*(-7 + d)*t^2))*
    CKM[1, 1]*CKMC[1, 1])/(Pi^(2*d)*s^3*sw^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  ((I/9)*2^(-1 - d)*EL^6*(-3*s + 2*mz^2*(-1 + sw^2))*
    ((-2 + d)*s^2 + 4*s*t + 4*t^2)*CKM[1, 1]*CKMC[1, 1])/
   (mz^2*Pi^d*s^3*sw^2*(-1 + sw^2)), 0, 0, 
  ((-I/9)*2^(-1 - d)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2)*CKM[1, 1]*
    CKMC[1, 1])/(mz^2*Pi^d*s^2*sw^2*(-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, ((-I/9)*2^(-1 - d)*EL^6*
    (2*s^2 + (-8 + d)*mz^2*s*(-1 + sw^2) + 2*mz^4*(-1 + sw^2)^2)*
    ((-2 + d)*s^2 + 4*s*t + 4*t^2)*CKM[1, 1]*CKMC[1, 1])/(Pi^d*s^3*sw^2), 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {((-I/81)*2^(-1 - 4*d)*EL^6*(3*(-11 + d)*d^3*(2*Pi)^(3*d)*s^2 + 
     2^(1 + 3*d)*Pi^(3*d)*(2*s^2*(48 + 160*sw^2 - 256*sw^4 + 
         d^3*sw^2*(-5 + 8*sw^2) - 9*d^2*(-4 - 5*sw^2 + 8*sw^4) + 
         3*d*(-23 - 50*sw^2 + 80*sw^4)) + 
       s*(-36*d^3 + 3*d^4 + 128*(3 - 5*sw^2 + 8*sw^4) - 
         8*d*(51 - 35*sw^2 + 56*sw^4) + d^2*(177 - 40*sw^2 + 64*sw^4))*t + 
       2*(16 - 7*d + d^2)*(3 - 20*sw^2 + 32*sw^4)*t^2)))/
   ((-4 + d)*Pi^(4*d)*(mz^2 - s)*s*sw^2*(-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {((-I/81)*2^(-5 - 2*d)*EL^6*(2*mz^2*(27*d^2*(2*Pi)^d*s^2 + 
       2^(1 + d)*Pi^d*(2*s^2*(27 - 54*sw^2 - 72*sw^4 + 352*sw^6 - 256*sw^8 + 
           9*d^2*sw^2*(-3 + 4*sw^2) + d*(-27 + 81*sw^2 - 36*sw^4 - 176*sw^6 + 
             128*sw^8)) + s*(-45*d*(3 - 12*sw^2 + 16*sw^4) + 
           9*d^2*(3 - 12*sw^2 + 16*sw^4) + 8*(27 - 135*sw^2 + 252*sw^4 - 
             176*sw^6 + 128*sw^8))*t + 2*(27 - 216*sw^2 + 576*sw^4 - 
           704*sw^6 + 512*sw^8)*t^2)) - s*(27*d^2*(1 + d)*(2*Pi)^d*s^2 + 
       2^(1 + d)*Pi^d*(2*s^2*(9*d^3*sw^2*(-3 + 4*sw^2) + 
           d^2*(-81 + 270*sw^2 - 288*sw^4 - 176*sw^6 + 128*sw^8) - 
           9*d*(-24 + 69*sw^2 - 20*sw^4 - 176*sw^6 + 128*sw^8) + 
           7*(-27 + 54*sw^2 + 72*sw^4 - 352*sw^6 + 256*sw^8)) + 
         s*(-108*d^2*(3 - 12*sw^2 + 16*sw^4) + 9*d^3*(3 - 12*sw^2 + 
             16*sw^4) - 56*(27 - 135*sw^2 + 252*sw^4 - 176*sw^6 + 128*sw^8) + 
           d*(1161 - 4860*sw^2 + 7056*sw^4 - 1408*sw^6 + 1024*sw^8))*t + 
         2*(-7 + d)*(27 - 216*sw^2 + 576*sw^4 - 704*sw^6 + 512*sw^8)*t^2))))/
   (Pi^(2*d)*(mz^2 - s)*s^2*sw^4*(-1 + sw^2)^2), 0, 0, 0, 
  ((I/81)*2^(-5 - d)*EL^6*(2*mz^2 + 3*s)*
    (s^2*(9*d^2*(3 - 12*sw^2 + 16*sw^4) + 4*d*(-27 + 81*sw^2 - 36*sw^4 - 
         176*sw^6 + 128*sw^8) - 4*(-27 + 54*sw^2 + 72*sw^4 - 352*sw^6 + 
         256*sw^8)) + 2*s*(-45*d*(3 - 12*sw^2 + 16*sw^4) + 
       9*d^2*(3 - 12*sw^2 + 16*sw^4) + 8*(27 - 135*sw^2 + 252*sw^4 - 
         176*sw^6 + 128*sw^8))*t + 4*(27 - 216*sw^2 + 576*sw^4 - 704*sw^6 + 
       512*sw^8)*t^2))/(mz^2*Pi^d*(mz^2 - s)*s^2*sw^4*(-1 + sw^2)^2), 0, 0, 
  0, ((I/81)*2^(-5 - d)*EL^6*(s^2*(9*d^2*(3 - 12*sw^2 + 16*sw^4) + 
       4*d*(-27 + 81*sw^2 - 36*sw^4 - 176*sw^6 + 128*sw^8) - 
       4*(-27 + 54*sw^2 + 72*sw^4 - 352*sw^6 + 256*sw^8)) + 
     2*s*(-45*d*(3 - 12*sw^2 + 16*sw^4) + 9*d^2*(3 - 12*sw^2 + 16*sw^4) + 
       8*(27 - 135*sw^2 + 252*sw^4 - 176*sw^6 + 128*sw^8))*t + 
     4*(27 - 216*sw^2 + 576*sw^4 - 704*sw^6 + 512*sw^8)*t^2))/
   (mz^2*Pi^d*(mz^2 - s)*s*sw^4*(-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  ((-I/81)*2^(-5 - d)*EL^6*(2*mz^4 - (-8 + d)*mz^2*s + 2*s^2)*
    (s^2*(9*d^2*(3 - 12*sw^2 + 16*sw^4) + 4*d*(-27 + 81*sw^2 - 36*sw^4 - 
         176*sw^6 + 128*sw^8) - 4*(-27 + 54*sw^2 + 72*sw^4 - 352*sw^6 + 
         256*sw^8)) + 2*s*(-45*d*(3 - 12*sw^2 + 16*sw^4) + 
       9*d^2*(3 - 12*sw^2 + 16*sw^4) + 8*(27 - 135*sw^2 + 252*sw^4 - 
         176*sw^6 + 128*sw^8))*t + 4*(27 - 216*sw^2 + 576*sw^4 - 704*sw^6 + 
       512*sw^8)*t^2))/(Pi^d*(mz^2 - s)*s^2*sw^4*(-1 + sw^2)^2), 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {((-I/9)*4^(-2 - d)*EL^6*(-3 + 2*sw^2)*(-(d^2*(1 + d)*(2*Pi)^d*s^3) + 
     2^(1 + d)*mz^2*Pi^d*(-1 + sw^2)*
      (-(s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2))) - 
       2*s*(8 - 5*d + d^2 - 8*sw^2)*t + 4*(-1 + 4*sw^2)*t^2) + 
     2^(1 + d)*Pi^d*s*(2*s^2*(7 + 14*sw^2 + d^2*(3 + sw^2) - 
         d*(8 + 9*sw^2)) - (-7 + d)*s*(8 - 5*d + d^2 - 8*sw^2)*t + 
       2*(-7 + d)*(-1 + 4*sw^2)*t^2))*CKM[1, 1]*CKMC[1, 1])/
   (Pi^(2*d)*s^2*(-mz^2 + s)*sw^4*(-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ((-I/9)*2^(-4 - d)*EL^6*(-3 + 2*sw^2)*
    (-3*s + 2*mz^2*(-1 + sw^2))*(s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2)) + 
     2*s*(8 - 5*d + d^2 - 8*sw^2)*t + 4*(1 - 4*sw^2)*t^2)*CKM[1, 1]*
    CKMC[1, 1])/(mz^2*Pi^d*(mz^2 - s)*s^2*sw^4*(-1 + sw^2)^2), 0, 0, 
  ((-I/9)*2^(-4 - d)*EL^6*(-3 + 2*sw^2)*
    (-(s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2))) - 
     2*s*(8 - 5*d + d^2 - 8*sw^2)*t + 4*(-1 + 4*sw^2)*t^2)*CKM[1, 1]*
    CKMC[1, 1])/(mz^2*Pi^d*(mz^2 - s)*s*sw^4*(-1 + sw^2)^2), 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ((I/9)*2^(-4 - d)*EL^6*(-3 + 2*sw^2)*
    (2*s^2 + (-8 + d)*mz^2*s*(-1 + sw^2) + 2*mz^4*(-1 + sw^2)^2)*
    (s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2)) + 2*s*(8 - 5*d + d^2 - 8*sw^2)*
      t + 4*(1 - 4*sw^2)*t^2)*CKM[1, 1]*CKMC[1, 1])/
   (Pi^d*(mz^2 - s)*s^2*sw^4*(-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  ((-I/3)*2^(-3 - 5*d)*EL^6*CKM[1, 1]*CKMC[1, 1]*
    (-(4^(1 + 2*d)*(-1 + d)^2*mz^2*Pi^(4*d)*s*(-1 + sw^2)*
       ((-2 + d)*s^2 + 4*s*t + 4*t^2)) + 
     (2^(3 + 4*d)*d^3*mz^4*Pi^(4*d)*s^2*(-1 + sw^2)^2 - 
       16^(1 + d)*mz^2*Pi^(4*d)*s*(-1 + sw^2)*(s^2 - 2*s*t - 2*t^2) + 
       d^2*(2*Pi)^(4*d)*(-s^4 - 13*mz^2*s^3*(-1 + sw^2) - 
         8*mz^4*(-1 + sw^2)^2*(3*s^2 - 4*s*t - 4*t^2)) + 
       2^(1 + 4*d)*d*Pi^(4*d)*(mz^2*s*(-1 + sw^2)*(17*s^2 - 26*s*t - 
           26*t^2) + s^2*(s^2 - 2*s*t - 2*t^2) + 8*mz^4*(-1 + sw^2)^2*
          (s^2 - 2*s*t - 2*t^2)))*GaugeXi[Q] - 
     (4^(1 + 2*d)*d^3*mz^2*Pi^(4*d)*s^2*(-1 + sw^2)*
        (-3*s + 4*mz^2*(-1 + sw^2)) - 2^(3 + 4*d)*mz^2*Pi^(4*d)*s*(-1 + sw^2)*
        (s^2 - 2*s*t - 2*t^2) + d^2*(2*Pi)^(4*d)*
        (-2*s^4 + 3*mz^2*s*(-1 + sw^2)*(7*s^2 - 16*s*t - 16*t^2) - 
         16*mz^4*(-1 + sw^2)^2*(3*s^2 - 4*s*t - 4*t^2)) + 
       2^(1 + 4*d)*d*Pi^(4*d)*(mz^2*s*(-1 + sw^2)*(5*s^2 - 6*s*t - 6*t^2) + 
         2*s^2*(s^2 - 2*s*t - 2*t^2) + 16*mz^4*(-1 + sw^2)^2*
          (s^2 - 2*s*t - 2*t^2)))*GaugeXi[Q]^2 + 
     d*(2^(3 + 4*d)*d^2*mz^2*Pi^(4*d)*s^2*(1 - sw^2)*(s - mz^2*(-1 + sw^2)) + 
       2^(1 + 4*d)*Pi^(4*d)*(s^2 + 8*mz^4*(-1 + sw^2)^2 + mz^2*(s - s*sw^2))*
        (s^2 - 2*s*t - 2*t^2) - d*(2*Pi)^(4*d)*
        (s^4 - mz^2*s*(-1 + sw^2)*(17*s^2 - 32*s*t - 32*t^2) + 
         8*mz^4*(-1 + sw^2)^2*(3*s^2 - 4*s*t - 4*t^2)))*GaugeXi[Q]^3 + 
     d*mz^2*(2*Pi)^(4*d)*s*(-1 + sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
      GaugeXi[Q]^4))/((-1 + d)*d*mz^4*Pi^(5*d)*s^3*sw^2*(-1 + sw^2)^2*
    (-1 + GaugeXi[Q])^2*GaugeXi[Q]), 
  ((I/3)*2^(-3 - 2*d)*EL^6*CKM[1, 1]*CKMC[1, 1]*
    (2^(2 + d)*d^3*mz^2*Pi^d*s^2*(-1 + sw^2) + 2^(3 + d)*mz^2*Pi^d*
      (-1 + sw^2)*(s^2 - 2*s*t - 2*t^2) + 2^(1 + d)*d*Pi^d*
      (s*(s^2 - 2*s*t - 2*t^2) - mz^2*(-1 + sw^2)*(s^2 + 2*s*t + 2*t^2)) + 
     d^2*((-3*2^(1 + d)*Pi^d + 5*(2*Pi)^d)*s^3 - mz^2*(1 - sw^2)*
        (-23*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*(7*s^2 + 8*s*t + 8*t^2))) + 
     (-(2^(3 + d)*d^3*mz^2*Pi^d*s^2*(-1 + sw^2)) - 2^(4 + d)*mz^2*Pi^d*
        (-1 + sw^2)*(s^2 - 2*s*t - 2*t^2) - 2^(1 + d)*d*Pi^d*
        (2*s*(s^2 - 2*s*t - 2*t^2) - mz^2*(-1 + sw^2)*(s^2 + 6*s*t + 
           6*t^2)) + d^2*(2^(1 + d)*Pi^d*s^3 + mz^2*(1 - sw^2)*
          (-49*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*(15*s^2 + 16*s*t + 16*t^2))))*
      GaugeXi[Q] + (2^(2 + d)*d^3*mz^2*Pi^d*s^2*(-1 + sw^2) + 
       2^(3 + d)*mz^2*Pi^d*(-1 + sw^2)*(s^2 - 2*s*t - 2*t^2) + 
       2^(1 + d)*d*Pi^d*(mz^2*(-1 + sw^2)*(s^2 - 6*s*t - 6*t^2) + 
         s*(s^2 - 2*s*t - 2*t^2)) - d^2*((2^(1 + d)*Pi^d - (2*Pi)^d)*s^3 + 
         mz^2*(1 - sw^2)*(-25*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
            (7*s^2 + 8*s*t + 8*t^2))))*GaugeXi[Q]^2 + 
     d*mz^2*(1 - sw^2)*(d*(2*Pi)^d*s^2 - 2^(1 + d)*Pi^d*
        ((-1 + d)*s^2 + 2*s*t + 2*t^2))*GaugeXi[Q]^3))/
   ((-1 + d)*d*mz^4*Pi^(2*d)*s^2*sw^2*(-1 + sw^2)^2*(-1 + GaugeXi[Q])^2), 
  ((-I/3)*2^(-3 - 2*d)*EL^6*CKM[1, 1]*CKMC[1, 1]*
    (-(((s + mz^2*(-1 + sw^2) + mz^2*(-1 + sw^2)*GaugeXi[Q])*
        (mz^2*(-1 + sw^2)*(-3*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(2*s - t)) + 
         s*((2*Pi)^d*s - 2^(1 + d)*Pi^d*t) + mz^2*(-1 + sw^2)*
          ((2*Pi)^d*s - 2^(1 + d)*Pi^d*t)*GaugeXi[Q]))/s) + 
     (2^(1 + d)*Pi^d*(d*(s + mz^2*(-1 + sw^2))^2 + 2*mz^2*(-1 + sw^2)*
         (d*s + (-2 + d)*mz^2*(-1 + sw^2))*GaugeXi[Q] + 
        d*mz^4*(-1 + sw^2)^2*GaugeXi[Q]^2))/(-1 + d) + 
     (2^(1 + d)*Pi^d*(-(s^2*t) - mz^4*(-1 + sw^2)^2*t + 
        2*mz^2*(-1 + sw^2)*((-2 + d)*s^2 + 3*s*t + 4*t^2) + 
        2*mz^2*(-1 + sw^2)*(mz^2*(-1 + sw^2)*(s - t) - s*t)*GaugeXi[Q] - 
        mz^4*(-1 + sw^2)^2*t*GaugeXi[Q]^2))/s - 
     ((2*Pi)^d*(s + 2*t)*((s + mz^2*(-1 + sw^2))^2*(d*s + 2*t) + 
        2*mz^2*(1 - sw^2)*(-(mz^2*(-1 + sw^2)*((-2 + d)*s - 2*t)) - 
          s*(d*s + 2*t))*GaugeXi[Q] + mz^4*(-1 + sw^2)^2*(d*s + 2*t)*
         GaugeXi[Q]^2))/((-1 + d)*s^2) - 
     ((s + mz^2*(-1 + sw^2) + mz^2*(-1 + sw^2)*GaugeXi[Q])*
       (mz^2*(-1 + sw^2)*(-((2*Pi)^d*s) + 2^(1 + d)*Pi^d*(s - t)) - 
        s*(-5*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(2*s + t)) + 
        (-(mz^2*(-1 + sw^2)*(-7*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(4*s - t))) - 
          2^(1 + d)*Pi^d*s*(s - 2*t))*GaugeXi[Q] + 
        (s*((2*Pi)^d*s - 2^(1 + d)*Pi^d*t) + mz^2*(-1 + sw^2)*
           (-7*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(3*s + t)))*GaugeXi[Q]^2 + 
        mz^2*(-1 + sw^2)*((2*Pi)^d*s - 2^(1 + d)*Pi^d*t)*GaugeXi[Q]^3))/
      (s*(-1 + GaugeXi[Q])^2)))/(mz^4*Pi^(2*d)*(sw - sw^3)^2), 
  ((I/3)*EL^6*CKM[1, 1]*CKMC[1, 1]*
    ((4^(1 + d)*d^3*mz^2*Pi^(2*d)*s^2*(-1 + sw^2) - 2^(3 + 2*d)*mz^2*Pi^(2*d)*
        (-1 + sw^2)*(s^2 - 2*s*t - 2*t^2) - d^2*(2*Pi)^(2*d)*
        (-s^3 + mz^2*(-1 + sw^2)*(21*s^2 - 16*s*t - 16*t^2)) + 
       2^(1 + 2*d)*d*Pi^(2*d)*(mz^2*(-1 + sw^2)*(15*s^2 - 26*s*t - 26*t^2) + 
         s*(-s^2 + 2*s*t + 2*t^2)))*GaugeXi[Q] + 
     (-(2^(3 + 2*d)*d^3*mz^2*Pi^(2*d)*s^2*(-1 + sw^2)) + 
       4^(2 + d)*mz^2*Pi^(2*d)*(-1 + sw^2)*(s^2 - 2*s*t - 2*t^2) + 
       d^2*(2*Pi)^(2*d)*(-2*s^3 + mz^2*(-1 + sw^2)*(43*s^2 - 32*s*t - 
           32*t^2)) - 2^(1 + 2*d)*d*Pi^(2*d)*
        (mz^2*(-1 + sw^2)*(31*s^2 - 54*s*t - 54*t^2) - 
         2*s*(s^2 - 2*s*t - 2*t^2)))*GaugeXi[Q]^2 + 
     (4^(1 + d)*d^3*mz^2*Pi^(2*d)*s^2*(-1 + sw^2) - 2^(3 + 2*d)*mz^2*Pi^(2*d)*
        (-1 + sw^2)*(s^2 - 2*s*t - 2*t^2) - d^2*(2*Pi)^(2*d)*
        (-s^3 + mz^2*(-1 + sw^2)*(23*s^2 - 16*s*t - 16*t^2)) + 
       2^(1 + 2*d)*d*Pi^(2*d)*(mz^2*(-1 + sw^2)*(17*s^2 - 30*s*t - 30*t^2) + 
         s*(-s^2 + 2*s*t + 2*t^2)))*GaugeXi[Q]^3 + 
     d*mz^2*(2*Pi)^(2*d)*(-1 + sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
      GaugeXi[Q]^4))/(2^(3*(1 + d))*(-1 + d)*d*mz^4*Pi^(3*d)*s^2*sw^2*
    (-1 + sw^2)^2*(-1 + GaugeXi[Q])^2*GaugeXi[Q]), 
  ((-I/3)*2^(-3 - 2*d)*EL^6*CKM[1, 1]*CKMC[1, 1]*
    (4*mz^2*(1 - sw^2)*(-(d*(5 + d^2)*(2*Pi)^d*s^2) + 
       2^(1 + d)*Pi^d*((1 + 2*d^2)*s^2 - 2*(-1 + d)^2*s*t - 
         2*(-1 + d)^2*t^2)) + (-(2^(3 + d)*d^3*mz^2*Pi^d*s^2*(-1 + sw^2)) + 
       2^(4 + d)*mz^2*Pi^d*(-1 + sw^2)*(s^2 - 2*s*t - 2*t^2) - 
       2^(1 + d)*d*Pi^d*(mz^2*(-1 + sw^2)*(19*s^2 - 30*s*t - 30*t^2) + 
         s*(s^2 - 2*s*t - 2*t^2)) + d^2*((3*2^(1 + d)*Pi^d - 5*(2*Pi)^d)*
          s^3 + mz^2*(1 - sw^2)*(-19*(2*Pi)^d*s^2 + 2^(2 + d)*Pi^d*
            (-3*s^2 + 8*s*t + 8*t^2))))*GaugeXi[Q] + 
     (2^(2 + d)*d^3*mz^2*Pi^d*s^2*(-1 + sw^2) - 2^(3 + d)*mz^2*Pi^d*
        (-1 + sw^2)*(s^2 - 2*s*t - 2*t^2) + 2^(1 + d)*d*Pi^d*
        (mz^2*(-1 + sw^2)*(7*s^2 - 10*s*t - 10*t^2) + 
         2*s*(s^2 - 2*s*t - 2*t^2)) + d^2*(-(2^(1 + d)*Pi^d*s^3) + 
         mz^2*(1 - sw^2)*(9*(2*Pi)^d*s^2 + 2^(2 + d)*Pi^d*(s^2 - 4*s*t - 
             4*t^2))))*GaugeXi[Q]^2 - 
     d*(d*(2*Pi)^d*s^3 - 2^(1 + d)*Pi^d*s*((-1 + d)*s^2 + 2*s*t + 2*t^2) + 
       3*mz^2*(1 - sw^2)*(-(d*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*
          (s^2 - 2*s*t - 2*t^2)))*GaugeXi[Q]^3 + d*mz^2*(1 - sw^2)*
      (-3*d*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*((1 + d)*s^2 - 2*s*t - 2*t^2))*
      GaugeXi[Q]^4))/((-1 + d)*d*mz^4*Pi^(2*d)*s^2*sw^2*(-1 + sw^2)^2*
    (-1 + GaugeXi[Q])^2*GaugeXi[Q]), 
  ((-I/3)*2^(-3 - 2*d)*EL^6*CKM[1, 1]*CKMC[1, 1]*
    (((s + mz^2*(-1 + sw^2) + mz^2*(-1 + sw^2)*GaugeXi[Q])*
       (-((s + mz^2*(-1 + sw^2))*((2*Pi)^d*s - 2^(1 + d)*Pi^d*t)) - 
        mz^2*(-1 + sw^2)*(-3*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(2*s - t))*
         GaugeXi[Q]))/s + (2^(1 + d)*Pi^d*(d*(s + mz^2*(-1 + sw^2))^2 + 
        2*mz^2*(-1 + sw^2)*(d*s + (-2 + d)*mz^2*(-1 + sw^2))*GaugeXi[Q] + 
        d*mz^4*(-1 + sw^2)^2*GaugeXi[Q]^2))/(-1 + d) + 
     (2^(1 + d)*Pi^d*(-(s^2*t) - mz^4*(-1 + sw^2)^2*t + 
        2*mz^2*(-1 + sw^2)*((-2 + d)*s^2 + 3*s*t + 4*t^2) + 
        2*mz^2*(-1 + sw^2)*(mz^2*(-1 + sw^2)*(s - t) - s*t)*GaugeXi[Q] - 
        mz^4*(-1 + sw^2)^2*t*GaugeXi[Q]^2))/s - 
     ((2*Pi)^d*(s + 2*t)*((s + mz^2*(-1 + sw^2))^2*(d*s + 2*t) + 
        2*mz^2*(1 - sw^2)*(-(mz^2*(-1 + sw^2)*((-2 + d)*s - 2*t)) - 
          s*(d*s + 2*t))*GaugeXi[Q] + mz^4*(-1 + sw^2)^2*(d*s + 2*t)*
         GaugeXi[Q]^2))/((-1 + d)*s^2) - 
     ((s + mz^2*(-1 + sw^2) + mz^2*(-1 + sw^2)*GaugeXi[Q])*
       (mz^2*(-1 + sw^2)*(-5*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(3*s - t)) - 
        s*(-5*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(2*s + t)) + 
        (-(mz^2*(-1 + sw^2)*(-3*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(2*s - t))) - 
          2^(1 + d)*Pi^d*s*(s - 2*t))*GaugeXi[Q] + 
        (s*((2*Pi)^d*s - 2^(1 + d)*Pi^d*t) + mz^2*(-1 + sw^2)*
           (-3*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s + t)))*GaugeXi[Q]^2 + 
        mz^2*(-1 + sw^2)*((2*Pi)^d*s - 2^(1 + d)*Pi^d*t)*GaugeXi[Q]^3))/
      (s*(-1 + GaugeXi[Q])^2)))/(mz^4*Pi^(2*d)*(sw - sw^3)^2), 
  ((I/3)*EL^6*CKM[1, 1]*CKMC[1, 1]*
    (-((2*Pi)^(2*d)*(s - 2*mz^2*(-1 + sw^2))*(s - 2*t)*
       (s + 2*mz^2*(-1 + sw^2)*GaugeXi[Q])^2) - 
     2^(1 + d)*Pi^d*(-s/2 - mz^2*(-1 + sw^2)*GaugeXi[Q])*
      (s*(2^(1 + d)*mz^2*Pi^d*(-1 + sw^2)*(s - 2*t) + 
         s*(-((2*Pi)^d*s) + 2^(1 + d)*Pi^d*t)) + 2^(1 + d)*mz^2*Pi^d*
        (1 - sw^2)*(s - 2*mz^2*(-1 + sw^2))*(s - 2*t)*GaugeXi[Q]) - 
     (2^(1 + d)*Pi^d*s*(-((2*Pi)^d*s) + 2^(1 + d)*mz^2*Pi^d*(-1 + sw^2))*
       (d*s^2 + 4*d*mz^2*s*(-1 + sw^2)*GaugeXi[Q] + 4*(-1 + d)*mz^4*
         (-1 + sw^2)^2*GaugeXi[Q]^2))/(-1 + d) - 
     ((2*Pi)^d*((2*Pi)^d*s - 2^(1 + d)*mz^2*Pi^d*(-1 + sw^2))*(s + 2*t)*
       (s*(d*s + 2*t) + 4*mz^2*(-1 + sw^2)*(d*s + 2*t)*GaugeXi[Q] + 
        4*(-1 + d)*mz^4*(-1 + sw^2)^2*GaugeXi[Q]^2))/(-1 + d) + 
     (2*(s - 2*mz^2*(-1 + sw^2))*(-((2*Pi)^(2*d)*s^2*t) + 
        2^(1 + 2*d)*Pi^(2*d)*s*(s - 2*mz^2*(-1 + sw^2))*t*GaugeXi[Q] + 
        (2*Pi)^(2*d)*(2*mz^4*(-1 + sw^2)^2*(s - 2*t) - s^2*t + 
          8*mz^2*s*(-1 + sw^2)*t)*GaugeXi[Q]^2 + 2^(1 + 2*d)*mz^2*Pi^(2*d)*
         (1 - sw^2)*(2*mz^2*(-1 + sw^2)*(s - 2*t) + 2*s*t)*GaugeXi[Q]^3 + 
        2^(1 + 2*d)*mz^4*Pi^(2*d)*(-1 + sw^2)^2*(s - 2*t)*GaugeXi[Q]^4))/
      (-1 + GaugeXi[Q])^2))/(2^(3*(1 + d))*mz^4*Pi^(3*d)*s^2*sw^2*
    (-1 + sw^2)^2), ((-I/3)*2^(-3 - d)*EL^6*(s + 2*mz^2*(-1 + sw^2))*
    (s^2 - 4*(-3 + 2*d)*mz^2*s*(-1 + sw^2) + 4*(-1 + d)*mz^4*(-1 + sw^2)^2)*
    ((-2 + d)*s^2 + 4*s*t + 4*t^2)*CKM[1, 1]*CKMC[1, 1])/
   ((-1 + d)*mz^4*Pi^d*s^3*sw^2*(-1 + sw^2)^2), 
  ((-I/3)*EL^6*mz^2*(-1 + sw^2)*(-2*s + mz^2*(-1 + sw^2))*
    ((-2 + d)*s^2 + 4*s*t + 4*t^2)*CKM[1, 1]*CKMC[1, 1])/((2*Pi)^d*s^3*sw^2), 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  ((-I/3)*2^(-5 - 6*d)*EL^6*CKM[1, 1]*CKMC[1, 1]*
    (4*mz^2*s*(1 - sw^2)*(d^4*(2*Pi)^(5*d)*s*(s + 2*t) - 
       2^(1 + 5*d)*d^3*Pi^(5*d)*s*(s*(3 + 2*sw^2) + 7*t) + 
       2^(2 + 5*d)*Pi^(5*d)*(s^2*(1 + 2*sw^2) - 4*s*(-1 + sw^2)*t + 
         (1 - 4*sw^2)*t^2) - 2^(1 + 5*d)*d*Pi^(5*d)*(2*s^2*(3 + 5*sw^2) + 
         s*(21 - 16*sw^2)*t + 4*(1 - 4*sw^2)*t^2) + d^2*(2*Pi)^(5*d)*
        (s^2*(13 + 16*sw^2) + 2*s*(19 - 8*sw^2)*t + 4*(1 - 4*sw^2)*t^2)) + 
     (2*Pi)^(5*d)*(8*mz^2*s*(-1 + sw^2) + 8*d^2*mz^4*(-1 + sw^2)^2 - 
       d*(s^2 + 13*mz^2*s*(-1 + sw^2) + 8*mz^4*(-1 + sw^2)^2))*
      (s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2)) + 2*s*(8 - 5*d + d^2 - 8*sw^2)*
        t + 4*(1 - 4*sw^2)*t^2)*GaugeXi[Q] - (2*Pi)^(5*d)*
      (4*mz^2*s*(-1 + sw^2) + 4*d^2*mz^2*(-1 + sw^2)*
        (-3*s + 4*mz^2*(-1 + sw^2)) - d*(2*s^2 + 3*mz^2*s*(-1 + sw^2) + 
         16*mz^4*(-1 + sw^2)^2))*(s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2)) + 
       2*s*(8 - 5*d + d^2 - 8*sw^2)*t + 4*(1 - 4*sw^2)*t^2)*GaugeXi[Q]^2 - 
     d*(2*Pi)^(5*d)*(s^2 + (-1 + 8*d)*mz^2*s*(-1 + sw^2) - 
       8*(-1 + d)*mz^4*(-1 + sw^2)^2)*
      (s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2)) + 2*s*(8 - 5*d + d^2 - 8*sw^2)*
        t + 4*(1 - 4*sw^2)*t^2)*GaugeXi[Q]^3 + d*mz^2*(2*Pi)^(5*d)*s*
      (-1 + sw^2)*(s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2)) + 
       2*s*(8 - 5*d + d^2 - 8*sw^2)*t + 4*(1 - 4*sw^2)*t^2)*GaugeXi[Q]^4))/
   ((-1 + d)*d*mz^4*Pi^(6*d)*s^2*(-mz^2 + s)*sw^4*(-1 + sw^2)^2*
    (-1 + GaugeXi[Q])^2*GaugeXi[Q]), 
  ((-I/3)*2^(-5 - 4*d)*EL^6*CKM[1, 1]*CKMC[1, 1]*
    (-(d*(2*Pi)^(3*d)*s*(s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2)) + 
        2*s*(8 - 5*d + d^2 - 8*sw^2)*t + 4*(1 - 4*sw^2)*t^2)) + 
     mz^2*(-(d^3*(2*Pi)^(3*d)*s^2*(-17 + sw^2)) + 2^(1 + 3*d)*Pi^(3*d)*
        (2*s^2*(4 + 4*sw^2 - 8*sw^4 - 4*d^3*sw^4 + d^4*(-1 + sw^2) + 
           d*(-3 + sw^2 + 2*sw^4) + d^2*(-4 - 5*sw^2 + 9*sw^4)) + 
         (-4 - d + 4*d^2)*s*(8 - 5*d + d^2 - 8*sw^2)*(-1 + sw^2)*t - 
         2*(-4 - d + 4*d^2)*(1 - 5*sw^2 + 4*sw^4)*t^2)) + 
     (2^(1 + 3*d)*d*Pi^(3*d)*s*(s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2)) + 
         2*s*(8 - 5*d + d^2 - 8*sw^2)*t + 4*(1 - 4*sw^2)*t^2) + 
       mz^2*(d^3*(2*Pi)^(3*d)*s^2*(-35 + 3*sw^2) + 2^(1 + 3*d)*Pi^(3*d)*
          (-2*s^2*(-8*d^3*sw^4 + 2*d^4*(-1 + sw^2) + 8*(1 + sw^2 - 2*sw^4) + 
             d*(-5 + 3*sw^2 + 2*sw^4) + d^2*(-9 - 10*sw^2 + 19*sw^4)) - 
           (-8 - 3*d + 8*d^2)*s*(8 - 5*d + d^2 - 8*sw^2)*(-1 + sw^2)*t + 
           2*(-8 - 3*d + 8*d^2)*(1 - 5*sw^2 + 4*sw^4)*t^2)))*GaugeXi[Q] + 
     (-(d*(2*Pi)^(3*d)*s*(s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2)) + 
          2*s*(8 - 5*d + d^2 - 8*sw^2)*t + 4*(1 - 4*sw^2)*t^2)) + 
       mz^2*(-(d^3*(2*Pi)^(3*d)*s^2*(-19 + 3*sw^2)) + 2^(1 + 3*d)*Pi^(3*d)*
          (2*s^2*(4 + 4*sw^2 - 8*sw^4 - 4*d^3*sw^4 + d^4*(-1 + sw^2) + 
             d*(-1 + 3*sw^2 - 2*sw^4) + d^2*(-6 - 5*sw^2 + 11*sw^4)) + 
           (-4 - 3*d + 4*d^2)*s*(8 - 5*d + d^2 - 8*sw^2)*(-1 + sw^2)*t - 
           2*(-4 - 3*d + 4*d^2)*(1 - 5*sw^2 + 4*sw^4)*t^2)))*GaugeXi[Q]^2 + 
     d*mz^2*(2*Pi)^(3*d)*(-1 + sw^2)*
      (s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2)) + 2*s*(8 - 5*d + d^2 - 8*sw^2)*
        t + 4*(1 - 4*sw^2)*t^2)*GaugeXi[Q]^3))/((-1 + d)*d*mz^4*Pi^(4*d)*
    (mz^2 - s)*s*sw^4*(-1 + sw^2)^2*(-1 + GaugeXi[Q])^2), 
  ((I/3)*EL^6*CKM[1, 1]*CKMC[1, 1]*
    (-((2*Pi)^d*s^2*(-1 + 4*sw^2)*(-1 + GaugeXi[Q])^2*
       (d*(s + mz^2*(-1 + sw^2))^2 + 2*mz^2*(-1 + sw^2)*
         (d*s + (-2 + d)*mz^2*(-1 + sw^2))*GaugeXi[Q] + 
        d*mz^4*(-1 + sw^2)^2*GaugeXi[Q]^2)) + 
     (2*Pi)^d*((s*(-4 + d + 4*sw^2))/2 + (-1 + 4*sw^2)*t)*(-1 + GaugeXi[Q])^2*
      ((s + mz^2*(-1 + sw^2))^2*(d*s + 2*t) + 2*mz^2*(1 - sw^2)*
        (-(mz^2*(-1 + sw^2)*((-2 + d)*s - 2*t)) - s*(d*s + 2*t))*GaugeXi[Q] + 
       mz^4*(-1 + sw^2)^2*(d*s + 2*t)*GaugeXi[Q]^2) - 
     ((-1 + d)*s*(s + mz^2*(-1 + sw^2) + mz^2*(-1 + sw^2)*GaugeXi[Q])*
       (-(mz^2*(-1 + sw^2)*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*
            (s + 2*s*sw^2 + t - 4*sw^2*t))) - 
        s*(-3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(1 + d + 2*sw^2) + t - 
            4*sw^2*t)) + (-(2^(1 + d)*Pi^d*s*(s*(-2 + d - 4*sw^2) + 
             2*(-1 + 4*sw^2)*t)) + mz^2*(-1 + sw^2)*(-(d*(2*Pi)^d*s) + 
            2^(1 + d)*Pi^d*(s + 2*s*sw^2 + t - 4*sw^2*t)))*GaugeXi[Q] - 
        (s*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(s + 2*s*sw^2 + t - 4*sw^2*t)) - 
          mz^2*(-1 + sw^2)*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
             (s - d*s + 2*s*sw^2 + t - 4*sw^2*t)))*GaugeXi[Q]^2 - 
        mz^2*(-1 + sw^2)*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*
           (s + 2*s*sw^2 + t - 4*sw^2*t))*GaugeXi[Q]^3))/2 + 
     ((-1 + d)*s*(s + mz^2*(-1 + sw^2) + mz^2*(-1 + sw^2)*GaugeXi[Q])*
       (s*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s - d*s + 2*s*sw^2 + t - 
            4*sw^2*t)) + mz^2*(-(d*(2*Pi)^d*s*(-11 + 19*sw^2)) + 
          2^(1 + d)*Pi^d*(s*(-1 - 5*d - sw^2 + 9*d*sw^2 + 2*sw^4) + 
            (-1 + 5*sw^2 - 4*sw^4)*t)) + 
        (2^(1 + d)*Pi^d*s*(s*(-2 + d - 4*sw^2) + 2*(-1 + 4*sw^2)*t) + 
          mz^2*(d*(2*Pi)^d*s*(-11 + 19*sw^2) + 2^(1 + d)*Pi^d*
             (s*(1 + sw^2 - 2*sw^4 + d*(5 - 9*sw^2)) + (1 - 5*sw^2 + 4*sw^4)*
               t)))*GaugeXi[Q] + 
        (s*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s - d*s + 2*s*sw^2 + t - 
              4*sw^2*t)) + mz^2*(-(d*(2*Pi)^d*s*(-5 + 13*sw^2)) + 
            2^(1 + d)*Pi^d*(s*(1 - 3*d + sw^2 + 7*d*sw^2 - 2*sw^4) + 
              (1 - 5*sw^2 + 4*sw^4)*t)))*GaugeXi[Q]^2 + 
        mz^2*(-1 + sw^2)*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*
           (s + 2*s*sw^2 + t - 4*sw^2*t))*GaugeXi[Q]^3))/2 - 
     2*(1 - d)*s*(sw^2*((2^(1 + d)*(2 + d)*Pi^d - 3*d*(2*Pi)^d)*s^2*t + 
         mz^4*(2^(1 + d)*(2 + d)*Pi^d - 3*d*(2*Pi)^d)*(-1 + sw^2)^2*t - 
         2^(1 + d)*mz^2*Pi^d*(1 - sw^2)*((8 - 6*d + d^2)*s^2 + 
           (12 - 11*d + 2*d^2)*s*t - 4*t^2)) + (1/2 - sw^2)*
        ((2^(1 + d)*(1 + d)*Pi^d - 3*d*(2*Pi)^d)*s^2*t + 
         mz^4*(2^(1 + d)*(1 + d)*Pi^d - 3*d*(2*Pi)^d)*(-1 + sw^2)^2*t - 
         2^(1 + d)*mz^2*Pi^d*(1 - sw^2)*((-2 + d)^2*s^2 + (18 - 11*d + 2*d^2)*
            s*t + 4*t^2)) + (2*Pi)^d*(s^2*(-2 + d - 4*sw^2)*t + 
         mz^4*(-1 + sw^2)^2*(s*(-2 + d - 4*sw^2) + 2*(-3 + d)*t) - 
         mz^2*(-1 + sw^2)*(2*s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2)) + 
           s*(34 - 21*d + 4*d^2 - 28*sw^2)*t + 8*(1 - 4*sw^2)*t^2))*
        GaugeXi[Q] + (sw^2*((2^(2 + d)*Pi^d - d*(2*Pi)^d)*s^2*t - 
           2^(1 + d)*mz^4*Pi^d*(-1 + sw^2)^2*(2*(-4 + d)*s + (-8 + 3*d)*t) - 
           2^(1 + d)*mz^2*Pi^d*(1 - sw^2)*((8 - 6*d + d^2)*s^2 + 
             (4 - 9*d + 2*d^2)*s*t - 4*t^2)) + (1/2 - sw^2)*
          ((2^(1 + d)*Pi^d - d*(2*Pi)^d)*s^2*t - 2^(1 + d)*mz^4*Pi^d*
            (-1 + sw^2)^2*(2*(-2 + d)*s + (-10 + 3*d)*t) - 
           2^(1 + d)*mz^2*Pi^d*(1 - sw^2)*((-2 + d)^2*s^2 + 
             (14 - 9*d + 2*d^2)*s*t + 4*t^2)))*GaugeXi[Q]^2 + 
       mz^2*(2*Pi)^d*(1 - sw^2)*(s*(-2 + d - 4*sw^2)*t - 
         mz^2*(-1 + sw^2)*(s*(-2 + d - 4*sw^2) + 2*(-3 + d)*t))*
        GaugeXi[Q]^3 + (mz^4*(-1 + sw^2)^2*(-(d*(2*Pi)^d) + 
          2^(1 + d)*Pi^d*(1 + 2*sw^2))*t*GaugeXi[Q]^4)/2)))/
   (2^(2*(2 + d))*(-1 + d)*mz^4*Pi^(2*d)*(mz^2 - s)*s*sw^4*(-1 + sw^2)^2*
    (-1 + GaugeXi[Q])^2), ((-I/3)*2^(-5 - d)*EL^6*
    (s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2)) + 2*s*(8 - 5*d + d^2 - 8*sw^2)*
      t + 4*(1 - 4*sw^2)*t^2)*CKM[1, 1]*CKMC[1, 1]*
    (d*s + (4 - 13*d + 4*d^2)*mz^2*(-1 + sw^2) + d*mz^2*(-1 + sw^2)*
      GaugeXi[Q]))/((-1 + d)*d*mz^4*Pi^d*(mz^2 - s)*s*sw^4*(-1 + sw^2)^2), 
  ((-I/3)*2^(-5 - 4*d)*EL^6*CKM[1, 1]*CKMC[1, 1]*
    (4*mz^2*(1 - sw^2)*(d^4*(2*Pi)^(3*d)*s*(s + 2*t) - 
       2^(1 + 3*d)*d^3*Pi^(3*d)*s*(s*(3 + 2*sw^2) + 7*t) + 
       2^(2 + 3*d)*Pi^(3*d)*(s^2*(1 + 2*sw^2) - 4*s*(-1 + sw^2)*t + 
         (1 - 4*sw^2)*t^2) - 2^(1 + 3*d)*d*Pi^(3*d)*(2*s^2*(3 + 5*sw^2) + 
         s*(21 - 16*sw^2)*t + 4*(1 - 4*sw^2)*t^2) + d^2*(2*Pi)^(3*d)*
        (s^2*(13 + 16*sw^2) + 2*s*(19 - 8*sw^2)*t + 4*(1 - 4*sw^2)*t^2)) + 
     (2*Pi)^(3*d)*(-(d*s) + (8 - 15*d + 8*d^2)*mz^2*(-1 + sw^2))*
      (s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2)) + 2*s*(8 - 5*d + d^2 - 8*sw^2)*
        t + 4*(1 - 4*sw^2)*t^2)*GaugeXi[Q] - (2*Pi)^(3*d)*
      (-2*d*s + (4 - 5*d + 4*d^2)*mz^2*(-1 + sw^2))*
      (s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2)) + 2*s*(8 - 5*d + d^2 - 8*sw^2)*
        t + 4*(1 - 4*sw^2)*t^2)*GaugeXi[Q]^2 - d*(2*Pi)^(3*d)*
      (s - 3*mz^2*(-1 + sw^2))*(s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2)) + 
       2*s*(8 - 5*d + d^2 - 8*sw^2)*t + 4*(1 - 4*sw^2)*t^2)*GaugeXi[Q]^3 - 
     d*mz^2*(2*Pi)^(3*d)*(-1 + sw^2)*
      (s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2)) + 2*s*(8 - 5*d + d^2 - 8*sw^2)*
        t + 4*(1 - 4*sw^2)*t^2)*GaugeXi[Q]^4))/((-1 + d)*d*mz^4*Pi^(4*d)*
    (mz^2 - s)*s*sw^4*(-1 + sw^2)^2*(-1 + GaugeXi[Q])^2*GaugeXi[Q]), 
  ((I/3)*EL^6*CKM[1, 1]*CKMC[1, 1]*
    (-((2*Pi)^d*s^2*(-1 + 4*sw^2)*(-1 + GaugeXi[Q])^2*
       (d*(s + mz^2*(-1 + sw^2))^2 + 2*mz^2*(-1 + sw^2)*
         (d*s + (-2 + d)*mz^2*(-1 + sw^2))*GaugeXi[Q] + 
        d*mz^4*(-1 + sw^2)^2*GaugeXi[Q]^2)) + 
     (2*Pi)^d*((s*(-4 + d + 4*sw^2))/2 + (-1 + 4*sw^2)*t)*(-1 + GaugeXi[Q])^2*
      ((s + mz^2*(-1 + sw^2))^2*(d*s + 2*t) + 2*mz^2*(1 - sw^2)*
        (-(mz^2*(-1 + sw^2)*((-2 + d)*s - 2*t)) - s*(d*s + 2*t))*GaugeXi[Q] + 
       mz^4*(-1 + sw^2)^2*(d*s + 2*t)*GaugeXi[Q]^2) - 
     ((-1 + d)*s*(s + mz^2*(-1 + sw^2) + mz^2*(-1 + sw^2)*GaugeXi[Q])*
       (-((s + mz^2*(-1 + sw^2))*(-3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (s*(1 + d + 2*sw^2) + t - 4*sw^2*t))) + 
        (-(2^(1 + d)*Pi^d*s*(s*(-2 + d - 4*sw^2) + 2*(-1 + 4*sw^2)*t)) + 
          mz^2*(-1 + sw^2)*(-3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
             (s*(1 + d + 2*sw^2) + t - 4*sw^2*t)))*GaugeXi[Q] - 
        (s*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(s + 2*s*sw^2 + t - 4*sw^2*t)) - 
          mz^2*(-1 + sw^2)*(3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
             (s - 2*d*s + 2*s*sw^2 + t - 4*sw^2*t)))*GaugeXi[Q]^2 - 
        mz^2*(-1 + sw^2)*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*
           (s + 2*s*sw^2 + t - 4*sw^2*t))*GaugeXi[Q]^3))/2 + 
     ((-1 + d)*s*(s + mz^2*(-1 + sw^2) + mz^2*(-1 + sw^2)*GaugeXi[Q])*
       (s*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s - d*s + 2*s*sw^2 + t - 
            4*sw^2*t)) + mz^2*(-(d*(2*Pi)^d*s*(3 + 5*sw^2)) + 
          2^(1 + d)*Pi^d*(s*(-1 - sw^2 + 2*sw^4 + 2*d*(1 + sw^2)) + 
            (-1 + 5*sw^2 - 4*sw^4)*t)) + 
        (2^(1 + d)*Pi^d*s*(s*(-2 + d - 4*sw^2) + 2*(-1 + 4*sw^2)*t) + 
          mz^2*(d*(2*Pi)^d*s*(7 + sw^2) + 2^(1 + d)*Pi^d*
             (s*(1 - 4*d + sw^2 - 2*sw^4) + (1 - 5*sw^2 + 4*sw^4)*t)))*
         GaugeXi[Q] + (s*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s - d*s + 2*s*sw^2 + 
              t - 4*sw^2*t)) + mz^2*(-(d*(2*Pi)^d*s*(5 + 3*sw^2)) + 
            2^(1 + d)*Pi^d*(s*(1 + sw^2 - 2*sw^4 + 2*d*(1 + sw^2)) + 
              (1 - 5*sw^2 + 4*sw^4)*t)))*GaugeXi[Q]^2 + 
        mz^2*(-1 + sw^2)*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s - d*s + 2*s*sw^2 + 
            t - 4*sw^2*t))*GaugeXi[Q]^3))/2 - 
     2*(1 - d)*s*(sw^2*((2^(1 + d)*(2 + d)*Pi^d - 3*d*(2*Pi)^d)*s^2*t + 
         mz^4*(2^(1 + d)*(2 + d)*Pi^d - 3*d*(2*Pi)^d)*(-1 + sw^2)^2*t - 
         2^(1 + d)*mz^2*Pi^d*(1 - sw^2)*((8 - 6*d + d^2)*s^2 + 
           (12 - 11*d + 2*d^2)*s*t - 4*t^2)) + (1/2 - sw^2)*
        ((2^(1 + d)*(1 + d)*Pi^d - 3*d*(2*Pi)^d)*s^2*t + 
         mz^4*(2^(1 + d)*(1 + d)*Pi^d - 3*d*(2*Pi)^d)*(-1 + sw^2)^2*t - 
         2^(1 + d)*mz^2*Pi^d*(1 - sw^2)*((-2 + d)^2*s^2 + (18 - 11*d + 2*d^2)*
            s*t + 4*t^2)) + (2*Pi)^d*(s^2*(-2 + d - 4*sw^2)*t + 
         mz^4*(-1 + sw^2)^2*(s*(-2 + d - 4*sw^2) + 2*(-3 + d)*t) - 
         mz^2*(-1 + sw^2)*(2*s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2)) + 
           s*(34 - 21*d + 4*d^2 - 28*sw^2)*t + 8*(1 - 4*sw^2)*t^2))*
        GaugeXi[Q] + (sw^2*((2^(2 + d)*Pi^d - d*(2*Pi)^d)*s^2*t - 
           2^(1 + d)*mz^4*Pi^d*(-1 + sw^2)^2*(2*(-4 + d)*s + (-8 + 3*d)*t) - 
           2^(1 + d)*mz^2*Pi^d*(1 - sw^2)*((8 - 6*d + d^2)*s^2 + 
             (4 - 9*d + 2*d^2)*s*t - 4*t^2)) + (1/2 - sw^2)*
          ((2^(1 + d)*Pi^d - d*(2*Pi)^d)*s^2*t - 2^(1 + d)*mz^4*Pi^d*
            (-1 + sw^2)^2*(2*(-2 + d)*s + (-10 + 3*d)*t) - 
           2^(1 + d)*mz^2*Pi^d*(1 - sw^2)*((-2 + d)^2*s^2 + 
             (14 - 9*d + 2*d^2)*s*t + 4*t^2)))*GaugeXi[Q]^2 + 
       mz^2*(2*Pi)^d*(1 - sw^2)*(s*(-2 + d - 4*sw^2)*t - 
         mz^2*(-1 + sw^2)*(s*(-2 + d - 4*sw^2) + 2*(-3 + d)*t))*
        GaugeXi[Q]^3 + (mz^4*(-1 + sw^2)^2*(-(d*(2*Pi)^d) + 
          2^(1 + d)*Pi^d*(1 + 2*sw^2))*t*GaugeXi[Q]^4)/2)))/
   (2^(2*(2 + d))*(-1 + d)*mz^4*Pi^(2*d)*(mz^2 - s)*s*sw^4*(-1 + sw^2)^2*
    (-1 + GaugeXi[Q])^2), ((-I/3)*32^(-1 - d)*EL^6*CKM[1, 1]*CKMC[1, 1]*
    ((2*Pi)^(4*d)*s*(s - 2*mz^2*(-1 + sw^2))*
      (s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2)) + 2*s*(8 - 5*d + d^2 - 8*sw^2)*
        t + 4*(1 - 4*sw^2)*t^2) - 
     ((2*Pi)^(4*d)*s^2*(s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2)) + 
         2*s*(8 - 5*d + d^2 - 8*sw^2)*t + 4*(1 - 4*sw^2)*t^2) + 
       3*2^(1 + 4*d)*mz^2*Pi^(4*d)*s*(-1 + sw^2)*
        (-(s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2))) - 
         2*s*(8 - 5*d + d^2 - 8*sw^2)*t + 4*(-1 + 4*sw^2)*t^2) + 
       8*mz^4*(d^2*(2*Pi)^(4*d)*s^2*(1 + sw^4) + 2^(1 + 4*d)*Pi^(4*d)*
          (s^2*(2 - d^2*sw^2 - 6*sw^4 + 4*sw^6 - 2*d*(-1 + sw^2)^2*
              (1 + sw^2)) + s*(8 - 5*d + d^2 - 8*sw^2)*(-1 + sw^2)^2*t - 
           2*(-1 + sw^2)^2*(-1 + 4*sw^2)*t^2)))*GaugeXi[Q] - 
     4^(1 + 2*d)*mz^2*Pi^(4*d)*(-1 + sw^2)*(s - 2*mz^2*(-1 + sw^2))*
      (s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2)) + 2*s*(8 - 5*d + d^2 - 8*sw^2)*
        t + 4*(1 - 4*sw^2)*t^2)*GaugeXi[Q]^2))/((-1 + d)*mz^4*Pi^(5*d)*
    (mz^2 - s)*s*sw^4*(-1 + sw^2)^2*(-1 + GaugeXi[Q])), 
  ((-I/3)*2^(-5 - 3*d)*EL^6*CKM[1, 1]*CKMC[1, 1]*
    (-((2*Pi)^(2*d)*s^2*(-1 + 4*sw^2)*(s + 2*mz^2*(-1 + sw^2))*
       (d*s^2 + 4*d*mz^2*s*(-1 + sw^2) + 4*(-1 + d)*mz^4*(-1 + sw^2)^2)*
       (-1 + GaugeXi[Q])^2) - (2*Pi)^d*s^2*(-1 + 4*sw^2)*
      ((2*Pi)^d*s + 2^(1 + d)*mz^2*Pi^d*(-1 + sw^2))*
      (d*s^2 + 4*d*mz^2*s*(-1 + sw^2) + 4*(-1 + d)*mz^4*(-1 + sw^2)^2)*
      (-1 + GaugeXi[Q])^2 - 4^(1 + d)*(-1 + d)*mz^4*Pi^(2*d)*(-1 + sw^2)^2*
      (-1 + 4*sw^2)*(s + 2*mz^2*(-1 + sw^2))*((-2 + d)*s^2 - 4*s*t - 
       4*(-1 + d)*t^2)*(-1 + GaugeXi[Q])^2 + (2*Pi)^(2*d)*s*
      (s + 2*mz^2*(-1 + sw^2))*(s*(-4 + d + 4*sw^2) + 2*(-1 + 4*sw^2)*t)*
      (4*(-1 + d)*mz^4*(-1 + sw^2)^2 + s*(d*s + 2*t) + 
       4*mz^2*(-1 + sw^2)*(d*s + 2*t))*(-1 + GaugeXi[Q])^2 - 
     (-1 + d)*(2*Pi)^(2*d)*s*(s + 2*mz^2*(-1 + sw^2))*
      (8*mz^4*(-1 + sw^2)^2*(2*(-3 + d)*s*sw^2 + (-1 + 4*sw^2)*t) + 
       s^2*(s*(-2 + d - 4*sw^2) + 2*(-1 + 4*sw^2)*t) + 
       4*mz^2*s*(-1 + sw^2)*(s*(-2 + d - 4*sw^2) + 2*(-1 + 4*sw^2)*t))*
      (-1 + GaugeXi[Q])^2 - 2^(2 + d)*(-1 + d)*mz^4*Pi^d*(-1 + sw^2)^2*
      (s + 2*t)*(2^(1 + d)*(-2 + d)*mz^2*Pi^d*(-1 + sw^2)*
        (s*(-2 + d - 4*sw^2) + 2*(-1 + 4*sw^2)*t) + 
       s*(d^2*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
          (-2*s*(-3 - 6*sw^2 + d*(2 + sw^2)) + (2 + d)*(-1 + 4*sw^2)*t)))*
      (-1 + GaugeXi[Q])^2 + 4*(1 - d)*s*
      ((2*Pi)^(2*d)*sw^2*((-4 + d)*s^3*t + 4*(-3 + d)*mz^6*(-1 + sw^2)^3*
          ((-4 + d)*s + 2*t) - 2*mz^4*s*(-1 + sw^2)^2*(3*(12 - 7*d + d^2)*s + 
           2*(47 - 27*d + 4*d^2)*t) + 2*mz^2*s*(1 - sw^2)*
          (2*(8 - 6*d + d^2)*s^2 + (28 - 23*d + 4*d^2)*s*t - 8*t^2)) - 
       (1/2 - sw^2)*(4^(1 + d)*(-3 + d)*mz^6*Pi^(2*d)*(1 - sw^2)^3*
          ((-2 + d)*s - 2*t) - (-2 + d)*(2*Pi)^(2*d)*s^3*t + 
         2^(1 + 2*d)*mz^4*Pi^(2*d)*s*(-1 + sw^2)^2*(3*(6 - 5*d + d^2)*s + 
           2*(37 - 25*d + 4*d^2)*t) - 2^(1 + 2*d)*mz^2*Pi^(2*d)*s*(1 - sw^2)*
          (2*(-2 + d)^2*s^2 + (38 - 23*d + 4*d^2)*s*t + 8*t^2)))*
      (-1 + GaugeXi[Q])^2 + (-1 + d)*s*(s + 2*mz^2*(-1 + sw^2))*
      (s^2*(s*(2 - d + 4*sw^2) + (2 - 8*sw^2)*t) + 4*mz^2*s*(-1 + sw^2)*
        (s*(2 - d + 4*sw^2) + (2 - 8*sw^2)*t) + 4*mz^4*(-1 + sw^2)^2*
        (s*(10 + d^2 - 4*sw^2 + d*(-7 + 4*sw^2)) + 2*(-3 + d)*(-1 + 4*sw^2)*
          t))*((2*Pi)^(2*d) - 2^(1 + 2*d)*Pi^(2*d)*GaugeXi[Q] + 
       (2*Pi)^(2*d)*GaugeXi[Q]^2)))/((-1 + d)*mz^4*Pi^(3*d)*(mz^2 - s)*s^2*
    sw^4*(-1 + sw^2)^2*(-1 + GaugeXi[Q])^2), 
  ((-I/3)*2^(-2 - d)*EL^6*mz^2*(-1 + sw^2)*(-2*s + mz^2*(-1 + sw^2))*
    (-(s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2))) - 
     2*s*(8 - 5*d + d^2 - 8*sw^2)*t + 4*(-1 + 4*sw^2)*t^2)*CKM[1, 1]*
    CKMC[1, 1])/(Pi^d*(mz^2 - s)*s^2*sw^4), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  ((I/9)*2^(3 - d)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2))/(Pi^d*s^3), 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, ((-I/9)*EL^6*(-1 + 2*sw^2)*(-1 + 4*sw^2)*
    ((-2 + d)*s^2 + 4*s*t + 4*t^2))/((2*Pi)^d*s^2*(-mz^2 + s)*sw^2*
    (-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  ((I/9)*2^(-1 - 2*d)*EL^6*(-1 + 2*sw^2)*(-3 + 8*sw^2)*
    (-(d*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*(s^2 - 2*s*t - 2*t^2)))/
   (Pi^(2*d)*s^2*(-mz^2 + s)*sw^2*(-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  ((I/9)*2^(-5 - 2*d)*EL^6*(3*d^2*(2*Pi)^d*s^2 + 
     2^(1 + d)*Pi^d*(2*s^2*(3 + 10*sw^2 - 16*sw^4 + 
         d*(-3 - 5*sw^2 + 8*sw^4)) + s*(-15*d + 3*d^2 + 
         8*(3 - 5*sw^2 + 8*sw^4))*t + 2*(3 - 20*sw^2 + 32*sw^4)*t^2)))/
   (Pi^(2*d)*(mz^2 - s)^2*s*sw^4*(-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 
  ((I/9)*2^(-5 - 2*d)*EL^6*(3*d^2*(2*Pi)^d*s^2 + 
     2^(1 + d)*Pi^d*(2*s^2*(3 + 10*sw^2 - 16*sw^4 + 
         d*(-3 - 5*sw^2 + 8*sw^4)) + s*(-15*d + 3*d^2 + 
         8*(3 - 5*sw^2 + 8*sw^4))*t + 2*(3 - 20*sw^2 + 32*sw^4)*t^2)))/
   (Pi^(2*d)*(mz^2 - s)^2*s*sw^4*(-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  ((I/9)*4^(-2 - d)*EL^6*(1 - 2*sw^2)^2*(3*d^2*(2*Pi)^d*s^2 + 
     2^(1 + d)*Pi^d*(2*s^2*(3 + 10*sw^2 - 16*sw^4 + 
         d*(-3 - 5*sw^2 + 8*sw^4)) + s*(-15*d + 3*d^2 + 
         8*(3 - 5*sw^2 + 8*sw^4))*t + 2*(3 - 20*sw^2 + 32*sw^4)*t^2)))/
   (Pi^(2*d)*(mz^2 - s)^2*s*sw^4*(-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  ((-I/9)*2^(3 - d)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2))/(Pi^d*s^3), 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, ((-I/9)*2^(3 - d)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
   (Pi^d*s^3), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  ((I/9)*2^(1 - d)*EL^6*(-1 + 4*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
   (Pi^d*s^2*(-mz^2 + s)*sw^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  ((I/9)*EL^6*(-3 + 8*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
   ((2*Pi)^d*s^2*(-mz^2 + s)*sw^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  ((I/9)*2^(1 - d)*EL^6*(-1 + 4*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
   (Pi^d*s^2*(-mz^2 + s)*sw^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  ((I/9)*EL^6*(-3 + 8*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
   ((2*Pi)^d*s^2*(-mz^2 + s)*sw^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  ((-I/9)*2^(-2 - d)*EL^6*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
       4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
     2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
     4*(3 - 20*sw^2 + 32*sw^4)*t^2))/(Pi^d*(mz^2 - s)^2*s*sw^4), 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, ((-I/9)*2^(-2 - d)*EL^6*
    (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
     2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
     4*(3 - 20*sw^2 + 32*sw^4)*t^2))/(Pi^d*(mz^2 - s)^2*s*sw^4), 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, ((I/9)*2^(3 - d)*(-1 + d)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
    (1 + (-1 + d)*GaugeXi[Q]))/(d*Pi^d*s^3*GaugeXi[Q]), 0, 0, 
  ((I/9)*2^(3 - d)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
    (1 + (-1 + d)*GaugeXi[Q]))/(d*Pi^d*s^3), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  ((-I/9)*2^(1 - d)*(-1 + d)*EL^6*(-1 + 4*sw^2)*((-2 + d)*s^2 + 4*s*t + 
     4*t^2)*(1 + (-1 + d)*GaugeXi[Q]))/(d*Pi^d*s^2*(-mz^2 + s)*sw^2*
    GaugeXi[Q]), 0, 0, ((-I/9)*2^(1 - d)*EL^6*(-1 + 4*sw^2)*
    ((-2 + d)*s^2 + 4*s*t + 4*t^2)*(1 + (-1 + d)*GaugeXi[Q]))/
   (d*Pi^d*s^2*(-mz^2 + s)*sw^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  ((-I/9)*(-1 + d)*EL^6*(-3 + 8*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
    (1 + (-1 + d)*GaugeXi[Q]))/(d*(2*Pi)^d*s^2*(-mz^2 + s)*sw^2*GaugeXi[Q]), 
  0, 0, ((-I/9)*EL^6*(-3 + 8*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
    (1 + (-1 + d)*GaugeXi[Q]))/(d*(2*Pi)^d*s^2*(-mz^2 + s)*sw^2), 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, ((I/9)*2^(-2 - 3*d)*EL^6*(3*(-5 + d)*d^2*(2*Pi)^(2*d)*s^2 + 
     2^(1 + 2*d)*Pi^(2*d)*(2*s^2*(-3 - 10*sw^2 + 16*sw^4 + 
         d^2*sw^2*(-5 + 8*sw^2) + d*(6 + 15*sw^2 - 24*sw^4)) + 
       s*(-18*d^2 + 3*d^3 - 8*(3 - 5*sw^2 + 8*sw^4) + 
         d*(39 - 40*sw^2 + 64*sw^4))*t + 2*(-1 + d)*(3 - 20*sw^2 + 32*sw^4)*
        t^2) + (3*d^2*(13 + d^2)*(2*Pi)^(2*d)*s^2 + 2^(1 + 2*d)*Pi^(2*d)*
        (s^2*(6 + 20*sw^2 - 32*sw^4 - 8*d^2*sw^2*(-5 + 8*sw^2) + 
           d^3*(-9 - 10*sw^2 + 16*sw^4) + 2*d*(-9 - 25*sw^2 + 40*sw^4)) + 
         (-1 + d)^2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
         2*(-1 + d)^2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[Q]))/
   (d*Pi^(3*d)*(mz^2 - s)^2*s*sw^4*GaugeXi[Q]), 0, 0, 
  ((I/9)*2^(-2 - 3*d)*EL^6*
    ((2*Pi)^(2*d)*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
         4*d*(-3 - 5*sw^2 + 8*sw^4)) + 2*s*(-15*d + 3*d^2 + 
         8*(3 - 5*sw^2 + 8*sw^4))*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2) + 
     (3*(-5 + d)*d^2*(2*Pi)^(2*d)*s^2 + 2^(1 + 2*d)*Pi^(2*d)*
        (2*s^2*(-3 - 10*sw^2 + 16*sw^4 + d^2*sw^2*(-5 + 8*sw^2) + 
           d*(6 + 15*sw^2 - 24*sw^4)) + s*(-18*d^2 + 3*d^3 - 
           8*(3 - 5*sw^2 + 8*sw^4) + d*(39 - 40*sw^2 + 64*sw^4))*t + 
         2*(-1 + d)*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[Q]))/
   (d*Pi^(3*d)*(mz^2 - s)^2*s*sw^4), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, 
 {((I/9)*2^(3 - d)*(-2 + d)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
   ((-1 + d)*Pi^d*s^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {((I/9)*2^(3 - d)*(-2 + d)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
   ((-1 + d)*Pi^d*s^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, ((-I/9)*2^(4 - d)*(-2 + d)*EL^6*
    ((-2 + d)*s^2 + 4*s*t + 4*t^2))/((-1 + d)*Pi^d*s^3), 
  ((I/9)*2^(3 - d)*EL^6*(4*ml^2 + (-2 + d)*s)*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
   ((-1 + d)*Pi^d*s^3), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {((I/27)*2^(5 - d)*(-2 + d)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
   ((-1 + d)*Pi^d*s^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ((-I/27)*2^(6 - d)*(-2 + d)*EL^6*
    ((-2 + d)*s^2 + 4*s*t + 4*t^2))/((-1 + d)*Pi^d*s^3), 
  ((I/27)*2^(5 - d)*EL^6*(4*mc^2 + (-2 + d)*s)*((-2 + d)*s^2 + 4*s*t + 
     4*t^2))/((-1 + d)*Pi^d*s^3), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  ((-I/27)*2^(6 - d)*(-2 + d)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
   ((-1 + d)*Pi^d*s^3), ((I/27)*2^(5 - d)*EL^6*(4*mt^2 + (-2 + d)*s)*
    ((-2 + d)*s^2 + 4*s*t + 4*t^2))/((-1 + d)*Pi^d*s^3), 0, 0, 0, 0, 0, 0, 0, 
  0}, {((I/27)*2^(3 - d)*(-2 + d)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
   ((-1 + d)*Pi^d*s^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  ((-I/27)*2^(4 - d)*(-2 + d)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
   ((-1 + d)*Pi^d*s^3), ((I/27)*2^(3 - d)*EL^6*(4*ms^2 + (-2 + d)*s)*
    ((-2 + d)*s^2 + 4*s*t + 4*t^2))/((-1 + d)*Pi^d*s^3), 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, ((-I/27)*2^(4 - d)*(-2 + d)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
   ((-1 + d)*Pi^d*s^3), ((I/27)*2^(3 - d)*EL^6*(4*mb^2 + (-2 + d)*s)*
    ((-2 + d)*s^2 + 4*s*t + 4*t^2))/((-1 + d)*Pi^d*s^3), 0, 0, 0, 0}, 
 {((-I/9)*2^(-1 - 2*d)*EL^6*(d^2*(2*Pi)^d*s^2 + 
     2^(2 + d)*Pi^d*(s^2*((1 - 4*sw^2)^2 - d*(1 - 4*sw^2)^2 + 
         d^2*(-2*sw^2 + 4*sw^4)) + (-2 + d)*s*(1 - 4*sw^2)^2*t + 
       (-2 + d)*(1 - 4*sw^2)^2*t^2)))/((-1 + d)*Pi^(2*d)*s*(-mz^2 + s)*sw^2*
    (-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {((-I/9)*2^(-1 - 2*d)*EL^6*(d^2*(2*Pi)^d*s^2 + 
     2^(2 + d)*Pi^d*(s^2*((1 - 4*sw^2)^2 - d*(1 - 4*sw^2)^2 + 
         d^2*(-2*sw^2 + 4*sw^4)) + (-2 + d)*s*(1 - 4*sw^2)^2*t + 
       (-2 + d)*(1 - 4*sw^2)^2*t^2)))/((-1 + d)*Pi^(2*d)*s*(-mz^2 + s)*sw^2*
    (-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, ((I/9)*(-2 + d)*EL^6*(1 - 4*sw^2)^2*
    ((-2 + d)*s^2 + 4*s*t + 4*t^2))/((-1 + d)*(2*Pi)^d*s^2*(-mz^2 + s)*sw^2*
    (-1 + sw^2)), ((-I/9)*2^(-1 - d)*EL^6*(4*ml^2 + (-2 + d)*s)*
    (1 - 4*sw^2)^2*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
   ((-1 + d)*Pi^d*s^2*(-mz^2 + s)*sw^2*(-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0}, {((-I/9)*4^(-1 - d)*EL^6*(-1 + 4*sw^2)*(-3 + 8*sw^2)*
    (-(d^2*(2*Pi)^d*s^2) + 2^(2 + d)*Pi^d*((-1 + d)*s^2 - (-2 + d)*s*t - 
       (-2 + d)*t^2)))/((-1 + d)*Pi^(2*d)*(mz^2 - s)*s*sw^2*(-1 + sw^2)), 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0}, {((-I/9)*4^(-1 - d)*EL^6*(-1 + 4*sw^2)*(-3 + 8*sw^2)*
    (-(d^2*(2*Pi)^d*s^2) + 2^(2 + d)*Pi^d*((-1 + d)*s^2 - (-2 + d)*s*t - 
       (-2 + d)*t^2)))/((-1 + d)*Pi^(2*d)*(mz^2 - s)*s*sw^2*(-1 + sw^2)), 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, ((I/9)*2^(-1 - d)*(-2 + d)*EL^6*(-1 + 4*sw^2)*(-3 + 8*sw^2)*
    ((-2 + d)*s^2 + 4*s*t + 4*t^2))/((-1 + d)*Pi^d*s^2*(-mz^2 + s)*sw^2*
    (-1 + sw^2)), ((-I/9)*2^(-2 - d)*EL^6*(4*ml^2 + (-2 + d)*s)*(-1 + 4*sw^2)*
    (-3 + 8*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
   ((-1 + d)*Pi^d*s^2*(-mz^2 + s)*sw^2*(-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0}, 
 {((-I/27)*EL^6*(3*d^2*(2*Pi)^d*s^2 + 2^(2 + d)*Pi^d*
      (s^2*(3 - 20*sw^2 + 32*sw^4 + d^2*sw^2*(-5 + 8*sw^2) + 
         d*(-3 + 20*sw^2 - 32*sw^4)) + (-2 + d)*s*(3 - 20*sw^2 + 32*sw^4)*t + 
       (-2 + d)*(3 - 20*sw^2 + 32*sw^4)*t^2)))/((-1 + d)*(2*Pi)^(2*d)*s*
    (-mz^2 + s)*sw^2*(-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  ((I/27)*2^(1 - d)*(-2 + d)*EL^6*(-1 + 4*sw^2)*(-3 + 8*sw^2)*
    ((-2 + d)*s^2 + 4*s*t + 4*t^2))/((-1 + d)*Pi^d*s^2*(-mz^2 + s)*sw^2*
    (-1 + sw^2)), ((-I/27)*EL^6*(4*mc^2 + (-2 + d)*s)*(-1 + 4*sw^2)*
    (-3 + 8*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
   ((-1 + d)*(2*Pi)^d*s^2*(-mz^2 + s)*sw^2*(-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, ((I/27)*2^(1 - d)*(-2 + d)*EL^6*(-1 + 4*sw^2)*(-3 + 8*sw^2)*
    ((-2 + d)*s^2 + 4*s*t + 4*t^2))/((-1 + d)*Pi^d*s^2*(-mz^2 + s)*sw^2*
    (-1 + sw^2)), ((-I/27)*EL^6*(4*mt^2 + (-2 + d)*s)*(-1 + 4*sw^2)*
    (-3 + 8*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
   ((-1 + d)*(2*Pi)^d*s^2*(-mz^2 + s)*sw^2*(-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 
  0}, {((I/27)*2^(-1 - 2*d)*EL^6*(9*d^2*(2*Pi)^d*s^2 + 
     2^(2 + d)*Pi^d*(s^2*((3 - 8*sw^2)^2 - d*(3 - 8*sw^2)^2 + 
         4*d^2*sw^2*(-3 + 4*sw^2)) + (-2 + d)*s*(3 - 8*sw^2)^2*t + 
       (-2 + d)*(3 - 8*sw^2)^2*t^2)))/((-1 + d)*Pi^(2*d)*(mz^2 - s)*s*sw^2*
    (-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, ((I/27)*(-2 + d)*EL^6*(3 - 8*sw^2)^2*
    ((-2 + d)*s^2 + 4*s*t + 4*t^2))/((-1 + d)*(2*Pi)^d*s^2*(-mz^2 + s)*sw^2*
    (-1 + sw^2)), ((-I/27)*2^(-1 - d)*EL^6*(4*mc^2 + (-2 + d)*s)*
    (3 - 8*sw^2)^2*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
   ((-1 + d)*Pi^d*s^2*(-mz^2 + s)*sw^2*(-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, ((I/27)*(-2 + d)*EL^6*(3 - 8*sw^2)^2*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
   ((-1 + d)*(2*Pi)^d*s^2*(-mz^2 + s)*sw^2*(-1 + sw^2)), 
  ((-I/27)*2^(-1 - d)*EL^6*(4*mt^2 + (-2 + d)*s)*(3 - 8*sw^2)^2*
    ((-2 + d)*s^2 + 4*s*t + 4*t^2))/((-1 + d)*Pi^d*s^2*(-mz^2 + s)*sw^2*
    (-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 0}, 
 {((-I/27)*2^(-1 - 2*d)*EL^6*(3*d^2*(2*Pi)^d*s^2 + 
     2^(2 + d)*Pi^d*(s^2*(3 - 16*sw^2 + 16*sw^4 + 4*d^2*sw^2*(-1 + sw^2) + 
         d*(-3 + 16*sw^2 - 16*sw^4)) + (-2 + d)*s*(3 - 16*sw^2 + 16*sw^4)*t + 
       (-2 + d)*(3 - 16*sw^2 + 16*sw^4)*t^2)))/((-1 + d)*Pi^(2*d)*s*
    (-mz^2 + s)*sw^2*(-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  ((I/27)*(-2 + d)*EL^6*(-3 + 4*sw^2)*(-1 + 4*sw^2)*
    ((-2 + d)*s^2 + 4*s*t + 4*t^2))/((-1 + d)*(2*Pi)^d*s^2*(-mz^2 + s)*sw^2*
    (-1 + sw^2)), ((-I/27)*2^(-1 - d)*EL^6*(4*ms^2 + (-2 + d)*s)*
    (-3 + 4*sw^2)*(-1 + 4*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
   ((-1 + d)*Pi^d*s^2*(-mz^2 + s)*sw^2*(-1 + sw^2)), 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, ((I/27)*(-2 + d)*EL^6*(-3 + 4*sw^2)*(-1 + 4*sw^2)*
    ((-2 + d)*s^2 + 4*s*t + 4*t^2))/((-1 + d)*(2*Pi)^d*s^2*(-mz^2 + s)*sw^2*
    (-1 + sw^2)), ((-I/27)*2^(-1 - d)*EL^6*(4*mb^2 + (-2 + d)*s)*
    (-3 + 4*sw^2)*(-1 + 4*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
   ((-1 + d)*Pi^d*s^2*(-mz^2 + s)*sw^2*(-1 + sw^2)), 0, 0, 0, 0}, 
 {((-I/27)*4^(-1 - d)*EL^6*(-3 + 4*sw^2)*(-3 + 8*sw^2)*
    (-(d^2*(2*Pi)^d*s^2) + 2^(2 + d)*Pi^d*((-1 + d)*s^2 - (-2 + d)*s*t - 
       (-2 + d)*t^2)))/((-1 + d)*Pi^(2*d)*(mz^2 - s)*s*sw^2*(-1 + sw^2)), 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, ((I/27)*2^(-1 - d)*(-2 + d)*EL^6*(-3 + 4*sw^2)*
    (-3 + 8*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
   ((-1 + d)*Pi^d*s^2*(-mz^2 + s)*sw^2*(-1 + sw^2)), 
  ((-I/27)*2^(-2 - d)*EL^6*(4*ms^2 + (-2 + d)*s)*(-3 + 4*sw^2)*(-3 + 8*sw^2)*
    ((-2 + d)*s^2 + 4*s*t + 4*t^2))/((-1 + d)*Pi^d*s^2*(-mz^2 + s)*sw^2*
    (-1 + sw^2)), 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  ((I/27)*2^(-1 - d)*(-2 + d)*EL^6*(-3 + 4*sw^2)*(-3 + 8*sw^2)*
    ((-2 + d)*s^2 + 4*s*t + 4*t^2))/((-1 + d)*Pi^d*s^2*(-mz^2 + s)*sw^2*
    (-1 + sw^2)), ((-I/27)*2^(-2 - d)*EL^6*(4*mb^2 + (-2 + d)*s)*
    (-3 + 4*sw^2)*(-3 + 8*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
   ((-1 + d)*Pi^d*s^2*(-mz^2 + s)*sw^2*(-1 + sw^2)), 0, 0, 0, 0}, 
 {((I/9)*2^(-5 - 2*d)*EL^6*(3*d^3*(2*Pi)^d*s^2 + 
     2^(1 + d)*Pi^d*(s^2*(-12 - 40*sw^2 + 64*sw^4 + 
         d*(18 + 40*sw^2 - 64*sw^4) + d^2*(-9 - 10*sw^2 + 16*sw^4)) + 
       s*(-21*d^2 + 3*d^3 - 16*(3 - 5*sw^2 + 8*sw^4) + 
         d*(54 - 40*sw^2 + 64*sw^4))*t + 2*(-2 + d)*(3 - 20*sw^2 + 32*sw^4)*
        t^2)))/((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*sw^4*(-1 + sw^2)^2), 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0}, {((I/9)*2^(-5 - 2*d)*EL^6*(3*d^3*(2*Pi)^d*s^2 + 
     2^(1 + d)*Pi^d*(s^2*(-12 - 40*sw^2 + 64*sw^4 + 
         d*(18 + 40*sw^2 - 64*sw^4) + d^2*(-9 - 10*sw^2 + 16*sw^4)) + 
       s*(-21*d^2 + 3*d^3 - 16*(3 - 5*sw^2 + 8*sw^4) + 
         d*(54 - 40*sw^2 + 64*sw^4))*t + 2*(-2 + d)*(3 - 20*sw^2 + 32*sw^4)*
        t^2)))/((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*sw^4*(-1 + sw^2)^2), 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0}, {((I/9)*2^(-5 - 2*d)*EL^6*(3*d^3*(2*Pi)^d*s^2 + 
     2^(1 + d)*Pi^d*(s^2*(-12 - 40*sw^2 + 64*sw^4 + 
         d*(18 + 40*sw^2 - 64*sw^4) + d^2*(-9 - 10*sw^2 + 16*sw^4)) + 
       s*(-21*d^2 + 3*d^3 - 16*(3 - 5*sw^2 + 8*sw^4) + 
         d*(54 - 40*sw^2 + 64*sw^4))*t + 2*(-2 + d)*(3 - 20*sw^2 + 32*sw^4)*
        t^2)))/((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*sw^4*(-1 + sw^2)^2), 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0}, {((I/9)*2^(-5 - d)*(-2 + d)*EL^6*(1 - 4*sw^2 + 8*sw^4)*
    (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
     2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
     4*(3 - 20*sw^2 + 32*sw^4)*t^2))/((-1 + d)*Pi^d*(mz^2 - s)^2*sw^4*
    (-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {((I/9)*2^(-5 - d)*(-2 + d)*EL^6*(1 - 4*sw^2 + 8*sw^4)*
    (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
     2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
     4*(3 - 20*sw^2 + 32*sw^4)*t^2))/((-1 + d)*Pi^d*(mz^2 - s)^2*sw^4*
    (-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, ((-I/9)*2^(-4 - d)*(-2 + d)*EL^6*
    (1 - 4*sw^2 + 8*sw^4)*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
       4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
     2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
     4*(3 - 20*sw^2 + 32*sw^4)*t^2))/((-1 + d)*Pi^d*(mz^2 - s)^2*s*sw^4*
    (-1 + sw^2)^2), ((I/9)*2^(-5 - 2*d)*EL^6*(3*d^3*(2*Pi)^d*s^3 + 
     2^(1 + d)*Pi^d*s*(s^2*(6*d^3*sw^2*(-1 + 2*sw^2) + 
         d^2*(-9 + 26*sw^2 - 16*sw^4 - 144*sw^6 + 128*sw^8) + 
         4*(-3 + 2*sw^2 + 32*sw^4 - 144*sw^6 + 128*sw^8) - 
         2*d*(-9 + 16*sw^2 + 40*sw^4 - 288*sw^6 + 256*sw^8)) + 
       s*(1 - 4*sw^2 + 8*sw^4)*(-21*d^2 + 3*d^3 - 16*(3 - 5*sw^2 + 8*sw^4) + 
         d*(54 - 40*sw^2 + 64*sw^4))*t + 2*(-2 + d)*(3 - 32*sw^2 + 136*sw^4 - 
         288*sw^6 + 256*sw^8)*t^2) + 2*ml^2*(-3*(-7 + d)*d^2*(2*Pi)^d*s^2 + 
       2^(1 + d)*Pi^d*(2*s^2*(9 + 6*sw^2 - 80*sw^4 + 288*sw^6 - 256*sw^8 + 
           d^2*sw^2*(-1 + 4*sw^2) + d*(-12 - sw^2 + 32*sw^4 - 144*sw^6 + 
             128*sw^8)) + s*(-3*d^3 + d*(-69 + 160*sw^2 - 304*sw^4) + 
           24*d^2*(1 - sw^2 + 2*sw^4) + 8*(9 - 39*sw^2 + 112*sw^4 - 
             144*sw^6 + 128*sw^8))*t - 2*(-3 + d + 8*sw^2 - 16*sw^4)*
          (3 - 20*sw^2 + 32*sw^4)*t^2))))/((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s*
    sw^4*(-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {((I/27)*2^(-5 - d)*(-2 + d)*EL^6*(9 - 24*sw^2 + 32*sw^4)*
    (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
     2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
     4*(3 - 20*sw^2 + 32*sw^4)*t^2))/((-1 + d)*Pi^d*(mz^2 - s)^2*sw^4*
    (-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ((-I/27)*2^(-4 - d)*(-2 + d)*EL^6*
    (9 - 24*sw^2 + 32*sw^4)*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
       4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
     2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
     4*(3 - 20*sw^2 + 32*sw^4)*t^2))/((-1 + d)*Pi^d*(mz^2 - s)^2*s*sw^4*
    (-1 + sw^2)^2), ((I/27)*2^(-5 - 2*d)*EL^6*(27*d^3*(2*Pi)^d*s^3 + 
     2^(1 + d)*Pi^d*s*(s^2*(12*d^3*sw^2*(-3 + 4*sw^2) + 
         d^2*(-81 + 126*sw^2 + 96*sw^4 - 704*sw^6 + 512*sw^8) + 
         4*(-27 - 18*sw^2 + 288*sw^4 - 704*sw^6 + 512*sw^8) - 
         2*d*(-81 + 36*sw^2 + 480*sw^4 - 1408*sw^6 + 1024*sw^8)) + 
       s*(9 - 24*sw^2 + 32*sw^4)*(-21*d^2 + 3*d^3 - 
         16*(3 - 5*sw^2 + 8*sw^4) + d*(54 - 40*sw^2 + 64*sw^4))*t + 
       2*(-2 + d)*(27 - 252*sw^2 + 864*sw^4 - 1408*sw^6 + 1024*sw^8)*t^2) - 
     2*mc^2*(27*(-7 + d)*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (2*s^2*(-81 - 126*sw^2 + 720*sw^4 - 1408*sw^6 + 1024*sw^8 + 
           3*d^2*sw^2*(-3 + 8*sw^2) + d*(108 + 81*sw^2 - 408*sw^4 + 
             704*sw^6 - 512*sw^8)) + 
         s*(27*d^3 - 24*d^2*(9 - 6*sw^2 + 8*sw^4) + 
           3*d*(207 - 360*sw^2 + 512*sw^4) - 8*(81 - 279*sw^2 + 648*sw^4 - 
             704*sw^6 + 512*sw^8))*t + 2*(-27 + 9*d + 48*sw^2 - 64*sw^4)*
          (3 - 20*sw^2 + 32*sw^4)*t^2))))/((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s*
    sw^4*(-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  ((-I/27)*2^(-4 - d)*(-2 + d)*EL^6*(9 - 24*sw^2 + 32*sw^4)*
    (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
     2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
     4*(3 - 20*sw^2 + 32*sw^4)*t^2))/((-1 + d)*Pi^d*(mz^2 - s)^2*s*sw^4*
    (-1 + sw^2)^2), ((I/27)*2^(-5 - 2*d)*EL^6*(27*d^3*(2*Pi)^d*s^3 + 
     2^(1 + d)*Pi^d*s*(s^2*(12*d^3*sw^2*(-3 + 4*sw^2) + 
         d^2*(-81 + 126*sw^2 + 96*sw^4 - 704*sw^6 + 512*sw^8) + 
         4*(-27 - 18*sw^2 + 288*sw^4 - 704*sw^6 + 512*sw^8) - 
         2*d*(-81 + 36*sw^2 + 480*sw^4 - 1408*sw^6 + 1024*sw^8)) + 
       s*(9 - 24*sw^2 + 32*sw^4)*(-21*d^2 + 3*d^3 - 
         16*(3 - 5*sw^2 + 8*sw^4) + d*(54 - 40*sw^2 + 64*sw^4))*t + 
       2*(-2 + d)*(27 - 252*sw^2 + 864*sw^4 - 1408*sw^6 + 1024*sw^8)*t^2) - 
     2*mt^2*(27*(-7 + d)*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (2*s^2*(-81 - 126*sw^2 + 720*sw^4 - 1408*sw^6 + 1024*sw^8 + 
           3*d^2*sw^2*(-3 + 8*sw^2) + d*(108 + 81*sw^2 - 408*sw^4 + 
             704*sw^6 - 512*sw^8)) + 
         s*(27*d^3 - 24*d^2*(9 - 6*sw^2 + 8*sw^4) + 
           3*d*(207 - 360*sw^2 + 512*sw^4) - 8*(81 - 279*sw^2 + 648*sw^4 - 
             704*sw^6 + 512*sw^8))*t + 2*(-27 + 9*d + 48*sw^2 - 64*sw^4)*
          (3 - 20*sw^2 + 32*sw^4)*t^2))))/((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s*
    sw^4*(-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 0, 0}, 
 {((I/27)*2^(-5 - d)*(-2 + d)*EL^6*(9 - 12*sw^2 + 8*sw^4)*
    (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
     2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
     4*(3 - 20*sw^2 + 32*sw^4)*t^2))/((-1 + d)*Pi^d*(mz^2 - s)^2*sw^4*
    (-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  ((-I/27)*2^(-4 - d)*(-2 + d)*EL^6*(9 - 12*sw^2 + 8*sw^4)*
    (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
     2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
     4*(3 - 20*sw^2 + 32*sw^4)*t^2))/((-1 + d)*Pi^d*(mz^2 - s)^2*s*sw^4*
    (-1 + sw^2)^2), ((I/27)*2^(-5 - 2*d)*EL^6*(27*d^3*(2*Pi)^d*s^3 + 
     2^(1 + d)*Pi^d*s*(s^2*(6*d^3*sw^2*(-3 + 2*sw^2) + 
         d^2*(-81 + 18*sw^2 + 192*sw^4 - 272*sw^6 + 128*sw^8) + 
         4*(-27 - 54*sw^2 + 240*sw^4 - 272*sw^6 + 128*sw^8) - 
         2*d*(-81 - 72*sw^2 + 456*sw^4 - 544*sw^6 + 256*sw^8)) + 
       s*(9 - 12*sw^2 + 8*sw^4)*(-21*d^2 + 3*d^3 - 16*(3 - 5*sw^2 + 8*sw^4) + 
         d*(54 - 40*sw^2 + 64*sw^4))*t + 2*(-2 + d)*(27 - 216*sw^2 + 
         552*sw^4 - 544*sw^6 + 256*sw^8)*t^2) - 
     2*ms^2*(27*(-7 + d)*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (2*s^2*(-81 - 198*sw^2 + 624*sw^4 - 544*sw^6 + 256*sw^8 + 
           3*d^2*sw^2*(-9 + 20*sw^2) + d*(108 + 153*sw^2 - 432*sw^4 + 
             272*sw^6 - 128*sw^8)) + 
         s*(27*d^3 - 24*d^2*(9 - 3*sw^2 + 2*sw^4) + 
           d*(621 - 720*sw^2 + 816*sw^4) - 8*(81 - 207*sw^2 + 384*sw^4 - 
             272*sw^6 + 128*sw^8))*t + 2*(-27 + 9*d + 24*sw^2 - 16*sw^4)*
          (3 - 20*sw^2 + 32*sw^4)*t^2))))/((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s*
    sw^4*(-1 + sw^2)^2), 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  ((-I/27)*2^(-4 - d)*(-2 + d)*EL^6*(9 - 12*sw^2 + 8*sw^4)*
    (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
     2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
     4*(3 - 20*sw^2 + 32*sw^4)*t^2))/((-1 + d)*Pi^d*(mz^2 - s)^2*s*sw^4*
    (-1 + sw^2)^2), ((I/27)*2^(-5 - 2*d)*EL^6*(27*d^3*(2*Pi)^d*s^3 + 
     2^(1 + d)*Pi^d*s*(s^2*(6*d^3*sw^2*(-3 + 2*sw^2) + 
         d^2*(-81 + 18*sw^2 + 192*sw^4 - 272*sw^6 + 128*sw^8) + 
         4*(-27 - 54*sw^2 + 240*sw^4 - 272*sw^6 + 128*sw^8) - 
         2*d*(-81 - 72*sw^2 + 456*sw^4 - 544*sw^6 + 256*sw^8)) + 
       s*(9 - 12*sw^2 + 8*sw^4)*(-21*d^2 + 3*d^3 - 16*(3 - 5*sw^2 + 8*sw^4) + 
         d*(54 - 40*sw^2 + 64*sw^4))*t + 2*(-2 + d)*(27 - 216*sw^2 + 
         552*sw^4 - 544*sw^6 + 256*sw^8)*t^2) - 
     2*mb^2*(27*(-7 + d)*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (2*s^2*(-81 - 198*sw^2 + 624*sw^4 - 544*sw^6 + 256*sw^8 + 
           3*d^2*sw^2*(-9 + 20*sw^2) + d*(108 + 153*sw^2 - 432*sw^4 + 
             272*sw^6 - 128*sw^8)) + 
         s*(27*d^3 - 24*d^2*(9 - 3*sw^2 + 2*sw^4) + 
           d*(621 - 720*sw^2 + 816*sw^4) - 8*(81 - 207*sw^2 + 384*sw^4 - 
             272*sw^6 + 128*sw^8))*t + 2*(-27 + 9*d + 24*sw^2 - 16*sw^4)*
          (3 - 20*sw^2 + 32*sw^4)*t^2))))/((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s*
    sw^4*(-1 + sw^2)^2), 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  ((-I/9)*2^(3 - d)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2))/((-1 + d)*Pi^d*s^3), 
  0, 0, ((-I/9)*4^(1 - d)*EL^6*(d*(2*Pi)^d*s^3 - 2^(1 + d)*Pi^d*s*
      ((-1 + d)*s^2 + 2*s*t + 2*t^2) - 2^(2 + d)*mz^2*Pi^d*(-1 + sw^2)*
      ((-2 + d)*s^2 + 4*s*t + 4*t^2)*GaugeXi[Q]))/((-1 + d)*Pi^(2*d)*s^3), 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, ((I/9)*EL^6*(-1 + 2*sw^2)*(-1 + 4*sw^2)*
    ((-2 + d)*s^2 + 4*s*t + 4*t^2))/((-1 + d)*(2*Pi)^d*s^2*(-mz^2 + s)*sw^2*
    (-1 + sw^2)), 0, 0, ((-I/9)*2^(-1 - d)*EL^6*(-1 + 2*sw^2)*(-1 + 4*sw^2)*
    ((-2 + d)*s^2 + 4*s*t + 4*t^2)*(s + 4*mz^2*(-1 + sw^2)*GaugeXi[Q]))/
   ((-1 + d)*Pi^d*s^2*(-mz^2 + s)*sw^2*(-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  ((I/9)*2^(-1 - d)*EL^6*(-1 + 2*sw^2)*(-3 + 8*sw^2)*
    ((-2 + d)*s^2 + 4*s*t + 4*t^2))/((-1 + d)*Pi^d*s^2*(-mz^2 + s)*sw^2*
    (-1 + sw^2)), 0, 0, ((-I/9)*2^(-2 - d)*EL^6*(-1 + 2*sw^2)*(-3 + 8*sw^2)*
    ((-2 + d)*s^2 + 4*s*t + 4*t^2)*(s + 4*mz^2*(-1 + sw^2)*GaugeXi[Q]))/
   ((-1 + d)*Pi^d*s^2*(-mz^2 + s)*sw^2*(-1 + sw^2)), 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  ((-I/9)*2^(-5 - d)*EL^6*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
       4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
     2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
     4*(3 - 20*sw^2 + 32*sw^4)*t^2)*(mh^2 + s - mz^2*GaugeXi[Q]))/
   ((-1 + d)*Pi^d*(mz^2 - s)^2*s^2*sw^4*(-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, ((-I/9)*2^(-5 - d)*EL^6*
    (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
     2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
     4*(3 - 20*sw^2 + 32*sw^4)*t^2)*(-mh^2 + s + mz^2*GaugeXi[Q]))/
   ((-1 + d)*Pi^d*(mz^2 - s)^2*s^2*sw^4*(-1 + sw^2)^2), 
  ((-I/9)*2^(-5 - 2*d)*EL^6*(2^(1 + d)*mh^2*Pi^d*s*
      (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
       2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
       4*(3 - 20*sw^2 + 32*sw^4)*t^2) + mh^4*(-9*d^2*(2*Pi)^d*s^2 + 
       2^(1 + d)*Pi^d*(s^2*(-6 + 3*d^2 - 20*sw^2 + 32*sw^4 + 
           d*(6 + 10*sw^2 - 16*sw^4)) + s*(15*d - 3*d^2 - 
           8*(3 - 5*sw^2 + 8*sw^4))*t - 2*(3 - 20*sw^2 + 32*sw^4)*t^2)) - 
     s^2*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
         s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
         2*(3 - 20*sw^2 + 32*sw^4)*t^2)) + 2*mz^2*(mh^2 + s)*
      (3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
         s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
         2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[Q] - 
     mz^4*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
         s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
         2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[Q]^2))/
   ((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s^2*sw^4*(-1 + sw^2)^2), 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  ((-I/9)*2^(-4 - d)*EL^6*(1 - 2*sw^2)^2*
    (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
     2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
     4*(3 - 20*sw^2 + 32*sw^4)*t^2))/((-1 + d)*Pi^d*(mz^2 - s)^2*s*sw^4*
    (-1 + sw^2)^2), 0, 0, ((I/9)*2^(-5 - 2*d)*EL^6*(1 - 2*sw^2)^2*
    (3*d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
      (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
       s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
       2*(3 - 20*sw^2 + 32*sw^4)*t^2) + 4*mz^2*(-1 + sw^2)*
      (3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
         s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
         2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[Q]))/
   ((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s*sw^4*(-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  ((I/9)*2^(3 - d)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2))/((-1 + d)*Pi^d*s^3), 
  0, 0, ((I/9)*4^(1 - d)*EL^6*(d*(2*Pi)^d*s^3 - 2^(1 + d)*Pi^d*s*
      ((-1 + d)*s^2 + 2*s*t + 2*t^2) - 2^(2 + d)*mz^2*Pi^d*(-1 + sw^2)*
      ((-2 + d)*s^2 + 4*s*t + 4*t^2)*GaugeXi[Q]))/((-1 + d)*Pi^(2*d)*s^3), 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, ((I/9)*2^(3 - d)*EL^6*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
   ((-1 + d)*Pi^d*s^3), 0, 0, 
  ((I/9)*4^(1 - d)*EL^6*(d*(2*Pi)^d*s^3 - 2^(1 + d)*Pi^d*s*
      ((-1 + d)*s^2 + 2*s*t + 2*t^2) - 2^(2 + d)*mz^2*Pi^d*(-1 + sw^2)*
      ((-2 + d)*s^2 + 4*s*t + 4*t^2)*GaugeXi[Q]))/((-1 + d)*Pi^(2*d)*s^3), 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, ((-I/9)*2^(1 - d)*EL^6*(-1 + 4*sw^2)*
    ((-2 + d)*s^2 + 4*s*t + 4*t^2))/((-1 + d)*Pi^d*s^2*(-mz^2 + s)*sw^2), 0, 
  0, ((I/9)*EL^6*(-1 + 4*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
    (s + 4*mz^2*(-1 + sw^2)*GaugeXi[Q]))/((-1 + d)*(2*Pi)^d*s^2*(-mz^2 + s)*
    sw^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, ((-I/9)*EL^6*(-3 + 8*sw^2)*
    ((-2 + d)*s^2 + 4*s*t + 4*t^2))/((-1 + d)*(2*Pi)^d*s^2*(-mz^2 + s)*sw^2), 
  0, 0, ((I/9)*2^(-1 - d)*EL^6*(-3 + 8*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
    (s + 4*mz^2*(-1 + sw^2)*GaugeXi[Q]))/((-1 + d)*Pi^d*s^2*(-mz^2 + s)*
    sw^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, ((-I/9)*2^(1 - d)*EL^6*(-1 + 4*sw^2)*
    ((-2 + d)*s^2 + 4*s*t + 4*t^2))/((-1 + d)*Pi^d*s^2*(-mz^2 + s)*sw^2), 0, 
  0, ((I/9)*EL^6*(-1 + 4*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
    (s + 4*mz^2*(-1 + sw^2)*GaugeXi[Q]))/((-1 + d)*(2*Pi)^d*s^2*(-mz^2 + s)*
    sw^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, ((-I/9)*EL^6*(-3 + 8*sw^2)*
    ((-2 + d)*s^2 + 4*s*t + 4*t^2))/((-1 + d)*(2*Pi)^d*s^2*(-mz^2 + s)*sw^2), 
  0, 0, ((I/9)*2^(-1 - d)*EL^6*(-3 + 8*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
    (s + 4*mz^2*(-1 + sw^2)*GaugeXi[Q]))/((-1 + d)*Pi^d*s^2*(-mz^2 + s)*
    sw^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, ((I/9)*2^(-2 - d)*EL^6*
    (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
     2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
     4*(3 - 20*sw^2 + 32*sw^4)*t^2))/((-1 + d)*Pi^d*(mz^2 - s)^2*s*sw^4), 0, 
  0, ((-I/9)*2^(-3 - 2*d)*EL^6*(3*d^2*(2*Pi)^d*s^3 + 
     2^(1 + d)*Pi^d*s*(2*s^2*(3 + 10*sw^2 - 16*sw^4 + 
         d*(-3 - 5*sw^2 + 8*sw^4)) + s*(-15*d + 3*d^2 + 
         8*(3 - 5*sw^2 + 8*sw^4))*t + 2*(3 - 20*sw^2 + 32*sw^4)*t^2) + 
     4*mz^2*(-1 + sw^2)*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
         s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
         2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[Q]))/
   ((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s*sw^4), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  ((I/9)*2^(-2 - d)*EL^6*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
       4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
     2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
     4*(3 - 20*sw^2 + 32*sw^4)*t^2))/((-1 + d)*Pi^d*(mz^2 - s)^2*s*sw^4), 0, 
  0, ((-I/9)*2^(-3 - 2*d)*EL^6*(3*d^2*(2*Pi)^d*s^3 + 
     2^(1 + d)*Pi^d*s*(2*s^2*(3 + 10*sw^2 - 16*sw^4 + 
         d*(-3 - 5*sw^2 + 8*sw^4)) + s*(-15*d + 3*d^2 + 
         8*(3 - 5*sw^2 + 8*sw^4))*t + 2*(3 - 20*sw^2 + 32*sw^4)*t^2) + 
     4*mz^2*(-1 + sw^2)*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
         s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
         2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[Q]))/
   ((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s*sw^4), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  ((-I/9)*2^(-5 - 2*d)*EL^6*mz^2*(3*d^2*(2*Pi)^d*s^2 + 
     2^(1 + d)*Pi^d*(2*s^2*(3 + 10*sw^2 - 16*sw^4 + 
         d*(-3 - 5*sw^2 + 8*sw^4)) + s*(-15*d + 3*d^2 + 
         8*(3 - 5*sw^2 + 8*sw^4))*t + 2*(3 - 20*sw^2 + 32*sw^4)*t^2))*
    (-1 + GaugeXi[Q]))/((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s^2*sw^4*
    (-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  ((I/9)*2^(-5 - 2*d)*EL^6*(3*d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
      (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
       s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
       2*(3 - 20*sw^2 + 32*sw^4)*t^2) + mh^2*(-9*d^2*(2*Pi)^d*s^2 + 
       2^(1 + d)*Pi^d*(s^2*(-6 + 3*d^2 - 20*sw^2 + 32*sw^4 + 
           d*(6 + 10*sw^2 - 16*sw^4)) + s*(15*d - 3*d^2 - 
           8*(3 - 5*sw^2 + 8*sw^4))*t - 2*(3 - 20*sw^2 + 32*sw^4)*t^2)) + 
     mz^2*(-3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (s^2*(6 + 3*d^2 + 20*sw^2 - 32*sw^4 + 2*d*(-3 - 5*sw^2 + 8*sw^4)) + 
         s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
         2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[Q]))/
   ((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s^2*sw^4*(-1 + sw^2)^2), 
  ((I/9)*2^(-5 - 2*d)*EL^6*(2^(1 + d)*mh^2*Pi^d*s*
      (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
       2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
       4*(3 - 20*sw^2 + 32*sw^4)*t^2) + mh^4*(-9*d^2*(2*Pi)^d*s^2 + 
       2^(1 + d)*Pi^d*(s^2*(-6 + 3*d^2 - 20*sw^2 + 32*sw^4 + 
           d*(6 + 10*sw^2 - 16*sw^4)) + s*(15*d - 3*d^2 - 
           8*(3 - 5*sw^2 + 8*sw^4))*t - 2*(3 - 20*sw^2 + 32*sw^4)*t^2)) - 
     s^2*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
         s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
         2*(3 - 20*sw^2 + 32*sw^4)*t^2)) + 2*mz^2*(mh^2 + s)*
      (3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
         s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
         2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[Q] - 
     mz^4*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
         s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
         2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[Q]^2))/
   ((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s^2*sw^4*(-1 + sw^2)^2), 
  ((-I/9)*2^(-5 - 2*d)*EL^6*(3*d^2*(2*Pi)^d*s^3 + 
     2^(1 + d)*Pi^d*s*(2*s^2*(3 + 10*sw^2 - 16*sw^4 + 
         d*(-3 - 5*sw^2 + 8*sw^4)) + s*(-15*d + 3*d^2 + 
         8*(3 - 5*sw^2 + 8*sw^4))*t + 2*(3 - 20*sw^2 + 32*sw^4)*t^2) + 
     mh^2*(-9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (s^2*(-6 + 3*d^2 - 20*sw^2 + 32*sw^4 + d*(6 + 10*sw^2 - 16*sw^4)) + 
         s*(15*d - 3*d^2 - 8*(3 - 5*sw^2 + 8*sw^4))*t - 
         2*(3 - 20*sw^2 + 32*sw^4)*t^2)) + 
     mz^2*(-3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (s^2*(6 + 3*d^2 + 20*sw^2 - 32*sw^4 + 2*d*(-3 - 5*sw^2 + 8*sw^4)) + 
         s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
         2*(3 - 20*sw^2 + 32*sw^4)*t^2))))/((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*
    s^2*sw^4*(-1 + sw^2)^2), ((-I/9)*2^(-5 - 2*d)*EL^6*
    (mh^4*(-9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (s^2*(-6 + 3*d^2 - 20*sw^2 + 32*sw^4 + d*(6 + 10*sw^2 - 16*sw^4)) + 
         s*(15*d - 3*d^2 - 8*(3 - 5*sw^2 + 8*sw^4))*t - 
         2*(3 - 20*sw^2 + 32*sw^4)*t^2)) - 
     mz^4*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
         s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
         2*(3 - 20*sw^2 + 32*sw^4)*t^2)) - 
     s^2*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
         s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
         2*(3 - 20*sw^2 + 32*sw^4)*t^2)) + 2*mh^2*(mz^2 + s)*
      (3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
         s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
         2*(3 - 20*sw^2 + 32*sw^4)*t^2)) - 
     2*mz^2*s*(-33*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (s^2*(-18 + 3*d^3 - 60*sw^2 + 96*sw^4 + 4*d^2*sw^2*(-5 + 8*sw^2) + 
           d*(30 + 70*sw^2 - 112*sw^4)) + s*(-39*d^2 + 6*d^3 - 
           24*(3 - 5*sw^2 + 8*sw^4) + d*(93 - 80*sw^2 + 128*sw^4))*t + 
         2*(-3 + 2*d)*(3 - 20*sw^2 + 32*sw^4)*t^2))))/
   ((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s^2*sw^4*(-1 + sw^2)^2)}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  ((-I/9)*2^(-5 - d)*EL^6*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
       4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
     2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
     4*(3 - 20*sw^2 + 32*sw^4)*t^2)*(s - mz^2*(-1 + sw^2) + 
     mz^2*(-1 + sw^2)*GaugeXi[Q]))/((-1 + d)*Pi^d*(mz^2 - s)^2*s^2*sw^4*
    (-1 + sw^2)^2), ((-I/9)*2^(-5 - d)*EL^6*
    (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
     2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
     4*(3 - 20*sw^2 + 32*sw^4)*t^2)*(s + mz^2*(-1 + sw^2) - 
     mz^2*(-1 + sw^2)*GaugeXi[Q]))/((-1 + d)*Pi^d*(mz^2 - s)^2*s^2*sw^4*
    (-1 + sw^2)^2), ((-I/9)*2^(-5 - 2*d)*EL^6*
    (-((-1 + d)*s*(3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
         (s*(-3 - 10*sw^2 + 16*sw^4) + (-3 + 20*sw^2 - 32*sw^4)*t))*
       (s + mz^2*(-1 + sw^2) + mz^2*(-1 + sw^2)*GaugeXi[Q])^2) + 
     (-1 + d)*s*(s + mz^2*(-1 + sw^2) + mz^2*(-1 + sw^2)*GaugeXi[Q])*
      ((s + mz^2*(-1 + sw^2))*(-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
          (s*(3 + 3*d + 10*sw^2 - 16*sw^4) + (3 - 20*sw^2 + 32*sw^4)*t)) - 
       mz^2*(-1 + sw^2)*(3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
          (s*(-3 - 10*sw^2 + 16*sw^4) + (-3 + 20*sw^2 - 32*sw^4)*t))*
        GaugeXi[Q]) + 2^(1 + d)*Pi^d*s^2*(-1 + 4*sw^2)*(-3 + 8*sw^2)*
      (d*(s + mz^2*(-1 + sw^2))^2 + 2*mz^2*(-1 + sw^2)*
        (d*s + (-2 + d)*mz^2*(-1 + sw^2))*GaugeXi[Q] + 
       d*mz^4*(-1 + sw^2)^2*GaugeXi[Q]^2) + 2^(1 + d)*(1 - d)*Pi^d*s*
      (s^2*(-6 + 3*d - 20*sw^2 + 32*sw^4)*t + mz^4*(-1 + sw^2)^2*
        (-6 + 3*d - 20*sw^2 + 32*sw^4)*t - 2*mz^2*(-1 + sw^2)*
        (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
         3*s*(18 - 11*d + 2*d^2 - 20*sw^2 + 32*sw^4)*t + 
         4*(3 - 20*sw^2 + 32*sw^4)*t^2) - 2*mz^2*(-1 + sw^2)*
        (s*(6 - 3*d + 20*sw^2 - 32*sw^4)*t + mz^2*(-1 + sw^2)*
          (s*(-6 + 3*d - 20*sw^2 + 32*sw^4) + 3*d*t - 4*(3 - 5*sw^2 + 8*sw^4)*
            t))*GaugeXi[Q] + mz^4*(-1 + sw^2)^2*(-6 + 3*d - 20*sw^2 + 
         32*sw^4)*t*GaugeXi[Q]^2) + 
     (2*Pi)^d*(3*d*s - 4*s*(3 - 5*sw^2 + 8*sw^4) - 2*(3 - 20*sw^2 + 32*sw^4)*
        t)*((s + mz^2*(-1 + sw^2))^2*(d*s + 2*t) + 2*mz^2*(-1 + sw^2)*
        (mz^2*(-1 + sw^2)*((-2 + d)*s - 2*t) + s*(d*s + 2*t))*GaugeXi[Q] + 
       mz^4*(-1 + sw^2)^2*(d*s + 2*t)*GaugeXi[Q]^2)))/
   ((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s^2*sw^4*(-1 + sw^2)^2), 
  ((I/9)*4^(-2 - d)*EL^6*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
      (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
       s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
       2*(3 - 20*sw^2 + 32*sw^4)*t^2)))/((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s*
    sw^4*(-1 + sw^2)^2), 0, 0, ((-I/9)*2^(-5 - 2*d)*EL^6*
    (3*d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
      (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
       s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
       2*(3 - 20*sw^2 + 32*sw^4)*t^2) + 4*mz^2*(-1 + sw^2)*
      (3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
         s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
         2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[Q]))/
   ((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s*sw^4*(-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  ((-I/9)*2^(-5 - d)*EL^6*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
       4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
     2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
     4*(3 - 20*sw^2 + 32*sw^4)*t^2)*(s - mz^2*(-1 + sw^2) + 
     mz^2*(-1 + sw^2)*GaugeXi[Q]))/((-1 + d)*Pi^d*(mz^2 - s)^2*s^2*sw^4*
    (-1 + sw^2)^2), ((-I/9)*2^(-5 - d)*EL^6*
    (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
     2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
     4*(3 - 20*sw^2 + 32*sw^4)*t^2)*(s + mz^2*(-1 + sw^2) - 
     mz^2*(-1 + sw^2)*GaugeXi[Q]))/((-1 + d)*Pi^d*(mz^2 - s)^2*s^2*sw^4*
    (-1 + sw^2)^2), ((-I/9)*2^(-5 - 2*d)*EL^6*
    (-((-1 + d)*s*(3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
         (s*(-3 - 10*sw^2 + 16*sw^4) + (-3 + 20*sw^2 - 32*sw^4)*t))*
       (s + mz^2*(-1 + sw^2) + mz^2*(-1 + sw^2)*GaugeXi[Q])^2) + 
     (-1 + d)*s*(s + mz^2*(-1 + sw^2) + mz^2*(-1 + sw^2)*GaugeXi[Q])*
      ((s + mz^2*(-1 + sw^2))*(-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
          (s*(3 + 3*d + 10*sw^2 - 16*sw^4) + (3 - 20*sw^2 + 32*sw^4)*t)) - 
       mz^2*(-1 + sw^2)*(3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
          (s*(-3 - 10*sw^2 + 16*sw^4) + (-3 + 20*sw^2 - 32*sw^4)*t))*
        GaugeXi[Q]) + 2^(1 + d)*Pi^d*s^2*(-1 + 4*sw^2)*(-3 + 8*sw^2)*
      (d*(s + mz^2*(-1 + sw^2))^2 + 2*mz^2*(-1 + sw^2)*
        (d*s + (-2 + d)*mz^2*(-1 + sw^2))*GaugeXi[Q] + 
       d*mz^4*(-1 + sw^2)^2*GaugeXi[Q]^2) + 2^(1 + d)*(1 - d)*Pi^d*s*
      (s^2*(-6 + 3*d - 20*sw^2 + 32*sw^4)*t + mz^4*(-1 + sw^2)^2*
        (-6 + 3*d - 20*sw^2 + 32*sw^4)*t - 2*mz^2*(-1 + sw^2)*
        (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
         3*s*(18 - 11*d + 2*d^2 - 20*sw^2 + 32*sw^4)*t + 
         4*(3 - 20*sw^2 + 32*sw^4)*t^2) - 2*mz^2*(-1 + sw^2)*
        (s*(6 - 3*d + 20*sw^2 - 32*sw^4)*t + mz^2*(-1 + sw^2)*
          (s*(-6 + 3*d - 20*sw^2 + 32*sw^4) + 3*d*t - 4*(3 - 5*sw^2 + 8*sw^4)*
            t))*GaugeXi[Q] + mz^4*(-1 + sw^2)^2*(-6 + 3*d - 20*sw^2 + 
         32*sw^4)*t*GaugeXi[Q]^2) + 
     (2*Pi)^d*(3*d*s - 4*s*(3 - 5*sw^2 + 8*sw^4) - 2*(3 - 20*sw^2 + 32*sw^4)*
        t)*((s + mz^2*(-1 + sw^2))^2*(d*s + 2*t) + 2*mz^2*(-1 + sw^2)*
        (mz^2*(-1 + sw^2)*((-2 + d)*s - 2*t) + s*(d*s + 2*t))*GaugeXi[Q] + 
       mz^4*(-1 + sw^2)^2*(d*s + 2*t)*GaugeXi[Q]^2)))/
   ((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s^2*sw^4*(-1 + sw^2)^2), 
  ((I/9)*4^(-2 - d)*EL^6*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
      (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
       s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
       2*(3 - 20*sw^2 + 32*sw^4)*t^2)))/((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s*
    sw^4*(-1 + sw^2)^2), 0, 0, ((-I/9)*2^(-5 - 2*d)*EL^6*
    (3*d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
      (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
       s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
       2*(3 - 20*sw^2 + 32*sw^4)*t^2) + 4*mz^2*(-1 + sw^2)*
      (3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
         s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
         2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[Q]))/
   ((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s*sw^4*(-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  ((I/9)*2^(1 - 4*d)*EL^6*(2^(2 + 3*d)*(-1 + d)^2*mz^2*Pi^(3*d)*(1 - sw^2)*
      ((-2 + d)*s^2 + 4*s*t + 4*t^2) + (2^(2 + 3*d)*d^3*Pi^(3*d)*s^3 - 
       8^(1 + d)*mz^2*Pi^(3*d)*(-1 + sw^2)*(s^2 - 2*s*t - 2*t^2) + 
       d^2*(2*Pi)^(3*d)*s*(-17*s^2 - 4*mz^2*s*(-1 + sw^2) + 16*s*t + 
         16*t^2) + 2^(1 + 3*d)*d*Pi^(3*d)*(2*mz^2*(-1 + sw^2)*
          (3*s^2 - 4*s*t - 4*t^2) + 9*s*(s^2 - 2*s*t - 2*t^2)))*GaugeXi[Q] + 
     d*(2*Pi)^(3*d)*s*((-2 + d)*s^2 + 4*s*t + 4*t^2)*GaugeXi[Q]^2))/
   ((-1 + d)*d*mz^2*Pi^(4*d)*s^3*(-1 + sw^2)*GaugeXi[Q]), 
  ((-I/9)*2^(1 - 4*d)*EL^6*(2^(2 + 3*d)*(-1 + d)*mz^2*Pi^(3*d)*s*(-1 + sw^2)*
      ((-2 + d)*s^2 + 4*s*t + 4*t^2) + 
     (-(2^(2 + 3*d)*d^3*mz^2*Pi^(3*d)*s^2*(1 - sw^2)*
         (s - mz^2*(-1 + sw^2))) + 8^(1 + d)*mz^2*Pi^(3*d)*(1 - sw^2)*
        (2*s - 3*mz^2*(-1 + sw^2))*(-s^2 + 2*s*t + 2*t^2) - 
       d^2*(2*Pi)^(3*d)*(s^4 + 16*mz^4*(-1 + sw^2)^2*t*(s + t) + 
         mz^2*s*(-1 + sw^2)*(5*s^2 - 16*s*t - 16*t^2)) + 
       2^(1 + 3*d)*d*Pi^(3*d)*(2*mz^4*(-1 + sw^2)^2*(7*s^2 - 8*s*t - 8*t^2) - 
         mz^2*s*(-1 + sw^2)*(7*s^2 - 6*s*t - 6*t^2) + 
         s^2*(s^2 - 2*s*t - 2*t^2)))*GaugeXi[Q] - 
     mz^2*(1 - sw^2)*(2^(2 + 3*d)*d^3*mz^2*Pi^(3*d)*s^2*(-1 + sw^2) - 
       8^(1 + d)*mz^2*Pi^(3*d)*(-1 + sw^2)*(s^2 - 2*s*t - 2*t^2) - 
       d^2*(2*Pi)^(3*d)*(-s^3 + 16*mz^2*(-1 + sw^2)*(s^2 - s*t - t^2)) + 
       2^(1 + 3*d)*d*Pi^(3*d)*(2*mz^2*(-1 + sw^2)*(5*s^2 - 8*s*t - 8*t^2) + 
         s*(-s^2 + 2*s*t + 2*t^2)))*GaugeXi[Q]^2))/
   ((-1 + d)*d*mz^4*Pi^(4*d)*s^3*(-1 + sw^2)^2*GaugeXi[Q]), 
  ((-I/9)*2^(1 - 2*d)*EL^6*(-(2^(1 + d)*Pi^d*s^4) + 2^(1 + d)*d*Pi^d*s^4 - 
     d*(2*Pi)^d*s^4 - 3*2^(2 + d)*mz^2*Pi^d*s^3*(-1 + sw^2) + 
     7*2^(1 + d)*d*mz^2*Pi^d*s^3*(-1 + sw^2) - 2^(2 + d)*d^2*mz^2*Pi^d*s^3*
      (-1 + sw^2) - 2^(1 + d)*mz^4*Pi^d*s^2*(-1 + sw^2)^2 - 
     2^(1 + d)*d*mz^4*Pi^d*s^2*(-1 + sw^2)^2 + 3*d*mz^4*(2*Pi)^d*s^2*
      (-1 + sw^2)^2 + 2^(2 + d)*Pi^d*s^3*t + 3*2^(3 + d)*mz^2*Pi^d*s^2*
      (-1 + sw^2)*t - 2^(4 + d)*d*mz^2*Pi^d*s^2*(-1 + sw^2)*t + 
     2^(2 + d)*mz^4*Pi^d*s*(-1 + sw^2)^2*t + 2^(2 + d)*Pi^d*s^2*t^2 + 
     3*2^(3 + d)*mz^2*Pi^d*s*(-1 + sw^2)*t^2 - 2^(4 + d)*d*mz^2*Pi^d*s*
      (-1 + sw^2)*t^2 + 2^(2 + d)*mz^4*Pi^d*(-1 + sw^2)^2*t^2 - 
     2^(1 + d)*mz^2*Pi^d*(1 - sw^2)*(s - mz^2*(-1 + sw^2))*
      ((-2 + d)*s^2 + 4*s*t + 4*t^2)*GaugeXi[Q] - mz^4*(-1 + sw^2)^2*
      (d*(2*Pi)^d*s^2 - 2^(1 + d)*Pi^d*((-1 + d)*s^2 + 2*s*t + 2*t^2))*
      GaugeXi[Q]^2))/((-1 + d)*mz^4*Pi^(2*d)*(s - s*sw^2)^2), 
  ((I/9)*2^(1 - 4*d)*EL^6*(2^(2 + 3*d)*(-1 + d)*mz^2*Pi^(3*d)*s*(-1 + sw^2)*
      ((-2 + d)*s^2 + 4*s*t + 4*t^2) + (2*Pi)^(3*d)*(s - 2*mz^2*(-1 + sw^2))*
      (d*s - 2*(-4 + 5*d)*mz^2*(-1 + sw^2))*(-((-2 + d)*s^2) - 4*s*t - 4*t^2)*
      GaugeXi[Q]))/((-1 + d)*d*mz^4*Pi^(4*d)*s^3*(-1 + sw^2)^2*GaugeXi[Q]), 
  0, 0, ((I/9)*EL^6*(-(d*(2*Pi)^d*s^4) + 2^(1 + d)*Pi^d*s^2*
      (s^2 - 2*s*t - 2*t^2) + 2^(2 + d)*mz^2*Pi^d*s*(-1 + sw^2)*
      ((-2 + d)*s^2 + 4*s*t + 4*t^2) - 2^(2 + d)*mz^4*Pi^d*(-1 + sw^2)^2*
      ((-2 + d)*s^2 + 4*s*t + 4*t^2))*(-s - 4*mz^2*(-1 + sw^2)*GaugeXi[Q]))/
   (4^d*(-1 + d)*mz^4*Pi^(2*d)*s^3*(-1 + sw^2)^2), 
  ((-I/9)*EL^6*(-(d*(2*Pi)^d*s^5) + 2^(1 + d)*Pi^d*s^3*
      (s^2 - 2*s*t - 2*t^2) + 2^(4 + d)*(-1 + d)*mz^6*Pi^d*(1 - sw^2)^3*
      ((-2 + d)*s^2 + 4*s*t + 4*t^2) + 2^(3 + d)*(-2 + d)*mz^2*Pi^d*s^2*
      (-1 + sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2) + 2^(2 + d)*(-11 + 7*d)*mz^4*
      Pi^d*s*(-1 + sw^2)^2*((-2 + d)*s^2 + 4*s*t + 4*t^2)))/
   (4^d*(-1 + d)*mz^4*Pi^(2*d)*s^3*(-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  ((-I/9)*2^(-1 - 5*d)*EL^6*(-1 + 4*sw^2)*
    (4^(1 + 2*d)*(-1 + d)^2*mz^2*Pi^(4*d)*(-1 + sw^2)*
      ((-2 + d)*s^2 + 4*s*t + 4*t^2) + (-(4^(1 + 2*d)*d^3*Pi^(4*d)*s^3) + 
       d^2*(2*Pi)^(4*d)*s*(17*s^2 + 4*mz^2*s*(-1 + sw^2) - 16*s*t - 16*t^2) + 
       2^(3 + 4*d)*mz^2*Pi^(4*d)*(-1 + sw^2)*(s^2 - 2*s*t - 2*t^2) - 
       2^(1 + 4*d)*d*Pi^(4*d)*(2*mz^2*(-1 + sw^2)*(3*s^2 - 4*s*t - 4*t^2) + 
         9*s*(s^2 - 2*s*t - 2*t^2)))*GaugeXi[Q] - 
     d*(2*Pi)^(4*d)*s*((-2 + d)*s^2 + 4*s*t + 4*t^2)*GaugeXi[Q]^2))/
   ((-1 + d)*d*mz^2*Pi^(5*d)*(mz^2 - s)*s^2*sw^2*(-1 + sw^2)*GaugeXi[Q]), 
  ((-I/9)*2^(-1 - 5*d)*EL^6*(-1 + 4*sw^2)*
    (4^(1 + 2*d)*(-1 + d)*mz^2*Pi^(4*d)*s*(-1 + sw^2)*
      ((-2 + d)*s^2 + 4*s*t + 4*t^2) + 
     (-(4^(1 + 2*d)*d^3*mz^2*Pi^(4*d)*s^2*(1 - sw^2)*
         (s - mz^2*(-1 + sw^2))) + 2^(3 + 4*d)*mz^2*Pi^(4*d)*(1 - sw^2)*
        (2*s - 3*mz^2*(-1 + sw^2))*(-s^2 + 2*s*t + 2*t^2) - 
       d^2*(2*Pi)^(4*d)*(s^4 + 16*mz^4*(-1 + sw^2)^2*t*(s + t) + 
         mz^2*s*(-1 + sw^2)*(5*s^2 - 16*s*t - 16*t^2)) + 
       2^(1 + 4*d)*d*Pi^(4*d)*(2*mz^4*(-1 + sw^2)^2*(7*s^2 - 8*s*t - 8*t^2) - 
         mz^2*s*(-1 + sw^2)*(7*s^2 - 6*s*t - 6*t^2) + 
         s^2*(s^2 - 2*s*t - 2*t^2)))*GaugeXi[Q] - 
     mz^2*(1 - sw^2)*(4^(1 + 2*d)*d^3*mz^2*Pi^(4*d)*s^2*(-1 + sw^2) - 
       2^(3 + 4*d)*mz^2*Pi^(4*d)*(-1 + sw^2)*(s^2 - 2*s*t - 2*t^2) - 
       d^2*(2*Pi)^(4*d)*(-s^3 + 16*mz^2*(-1 + sw^2)*(s^2 - s*t - t^2)) + 
       2^(1 + 4*d)*d*Pi^(4*d)*(2*mz^2*(-1 + sw^2)*(5*s^2 - 8*s*t - 8*t^2) + 
         s*(-s^2 + 2*s*t + 2*t^2)))*GaugeXi[Q]^2))/
   ((-1 + d)*d*mz^4*Pi^(5*d)*(mz^2 - s)*s^2*sw^2*(-1 + sw^2)^2*GaugeXi[Q]), 
  ((-I/9)*2^(-1 - d)*EL^6*(-1 + 4*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
    (s^2 - 2*(-3 + 2*d)*mz^2*s*(-1 + sw^2) + mz^4*(-1 + sw^2)^2 - 
     2*mz^2*(-1 + sw^2)*(-s + mz^2*(-1 + sw^2))*GaugeXi[Q] + 
     mz^4*(-1 + sw^2)^2*GaugeXi[Q]^2))/((-1 + d)*mz^4*Pi^d*(mz^2 - s)*s*sw^2*
    (-1 + sw^2)^2), ((I/9)*2^(-1 - 3*d)*EL^6*(-1 + 4*sw^2)*
    (4^(1 + d)*(-1 + d)*mz^2*Pi^(2*d)*s*(-1 + sw^2)*((-2 + d)*s^2 + 4*s*t + 
       4*t^2) + (2*Pi)^(2*d)*(s - 2*mz^2*(-1 + sw^2))*
      (d*s - 2*(-4 + 5*d)*mz^2*(-1 + sw^2))*(-((-2 + d)*s^2) - 4*s*t - 4*t^2)*
      GaugeXi[Q]))/((-1 + d)*d*mz^4*Pi^(3*d)*(mz^2 - s)*s^2*sw^2*
    (-1 + sw^2)^2*GaugeXi[Q]), 0, 0, 
  ((I/9)*EL^6*(-1 + 4*sw^2)*(d*(2*Pi)^d*s^4 + 2^(1 + d)*Pi^d*s^2*
      (-s^2 + 2*s*t + 2*t^2) + 2^(2 + d)*mz^2*Pi^d*s*(1 - sw^2)*
      ((-2 + d)*s^2 + 4*s*t + 4*t^2) + 2^(2 + d)*mz^4*Pi^d*(-1 + sw^2)^2*
      ((-2 + d)*s^2 + 4*s*t + 4*t^2))*(-s - 4*mz^2*(-1 + sw^2)*GaugeXi[Q]))/
   (2^(2*(1 + d))*(-1 + d)*mz^4*Pi^(2*d)*s^2*(-mz^2 + s)*sw^2*(-1 + sw^2)^2), 
  ((I/9)*2^(-2 - d)*EL^6*(-1 + 4*sw^2)*(s + 4*mz^2*(-1 + sw^2))*
    (s^2 - 4*(-3 + 2*d)*mz^2*s*(-1 + sw^2) + 4*(-1 + d)*mz^4*(-1 + sw^2)^2)*
    ((-2 + d)*s^2 + 4*s*t + 4*t^2))/((-1 + d)*mz^4*Pi^d*(mz^2 - s)*s^2*sw^2*
    (-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, ((I/9)*4^(-1 - 3*d)*EL^6*(3 - 8*sw^2)*
    (2^(2 + 5*d)*(-1 + d)^2*mz^2*Pi^(5*d)*(-1 + sw^2)*
      ((-2 + d)*s^2 + 4*s*t + 4*t^2) + (-(2^(2 + 5*d)*d^3*Pi^(5*d)*s^3) + 
       d^2*(2*Pi)^(5*d)*s*(17*s^2 + 4*mz^2*s*(-1 + sw^2) - 16*s*t - 16*t^2) + 
       2^(3 + 5*d)*mz^2*Pi^(5*d)*(-1 + sw^2)*(s^2 - 2*s*t - 2*t^2) - 
       2^(1 + 5*d)*d*Pi^(5*d)*(2*mz^2*(-1 + sw^2)*(3*s^2 - 4*s*t - 4*t^2) + 
         9*s*(s^2 - 2*s*t - 2*t^2)))*GaugeXi[Q] - 
     d*(2*Pi)^(5*d)*s*((-2 + d)*s^2 + 4*s*t + 4*t^2)*GaugeXi[Q]^2))/
   ((-1 + d)*d*mz^2*Pi^(6*d)*(mz^2 - s)*s^2*sw^2*(-1 + sw^2)*GaugeXi[Q]), 
  ((I/9)*4^(-1 - 3*d)*EL^6*(3 - 8*sw^2)*(2^(2 + 5*d)*(-1 + d)*mz^2*Pi^(5*d)*s*
      (-1 + sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2) + 
     (-(2^(2 + 5*d)*d^3*mz^2*Pi^(5*d)*s^2*(1 - sw^2)*
         (s - mz^2*(-1 + sw^2))) + 2^(3 + 5*d)*mz^2*Pi^(5*d)*(1 - sw^2)*
        (2*s - 3*mz^2*(-1 + sw^2))*(-s^2 + 2*s*t + 2*t^2) - 
       d^2*(2*Pi)^(5*d)*(s^4 + 16*mz^4*(-1 + sw^2)^2*t*(s + t) + 
         mz^2*s*(-1 + sw^2)*(5*s^2 - 16*s*t - 16*t^2)) + 
       2^(1 + 5*d)*d*Pi^(5*d)*(2*mz^4*(-1 + sw^2)^2*(7*s^2 - 8*s*t - 8*t^2) - 
         mz^2*s*(-1 + sw^2)*(7*s^2 - 6*s*t - 6*t^2) + 
         s^2*(s^2 - 2*s*t - 2*t^2)))*GaugeXi[Q] - 
     mz^2*(1 - sw^2)*(2^(2 + 5*d)*d^3*mz^2*Pi^(5*d)*s^2*(-1 + sw^2) - 
       2^(3 + 5*d)*mz^2*Pi^(5*d)*(-1 + sw^2)*(s^2 - 2*s*t - 2*t^2) - 
       d^2*(2*Pi)^(5*d)*(-s^3 + 16*mz^2*(-1 + sw^2)*(s^2 - s*t - t^2)) + 
       2^(1 + 5*d)*d*Pi^(5*d)*(2*mz^2*(-1 + sw^2)*(5*s^2 - 8*s*t - 8*t^2) + 
         s*(-s^2 + 2*s*t + 2*t^2)))*GaugeXi[Q]^2))/
   ((-1 + d)*d*mz^4*Pi^(6*d)*(mz^2 - s)*s^2*sw^2*(-1 + sw^2)^2*GaugeXi[Q]), 
  ((-I/9)*2^(-2 - d)*EL^6*(-3 + 8*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
    (s^2 - 2*(-3 + 2*d)*mz^2*s*(-1 + sw^2) + mz^4*(-1 + sw^2)^2 - 
     2*mz^2*(-1 + sw^2)*(-s + mz^2*(-1 + sw^2))*GaugeXi[Q] + 
     mz^4*(-1 + sw^2)^2*GaugeXi[Q]^2))/((-1 + d)*mz^4*Pi^d*(mz^2 - s)*s*sw^2*
    (-1 + sw^2)^2), ((-I/9)*2^(-2 - 3*d)*EL^6*(3 - 8*sw^2)*
    (4^(1 + d)*(-1 + d)*mz^2*Pi^(2*d)*s*(-1 + sw^2)*((-2 + d)*s^2 + 4*s*t + 
       4*t^2) + (2*Pi)^(2*d)*(s - 2*mz^2*(-1 + sw^2))*
      (d*s - 2*(-4 + 5*d)*mz^2*(-1 + sw^2))*(-((-2 + d)*s^2) - 4*s*t - 4*t^2)*
      GaugeXi[Q]))/((-1 + d)*d*mz^4*Pi^(3*d)*(mz^2 - s)*s^2*sw^2*
    (-1 + sw^2)^2*GaugeXi[Q]), 0, 0, 
  ((I/9)*2^(-3 - 2*d)*EL^6*(-3 + 8*sw^2)*(d*(2*Pi)^d*s^4 + 
     2^(1 + d)*Pi^d*s^2*(-s^2 + 2*s*t + 2*t^2) - 2^(2 + d)*mz^2*Pi^d*s*
      (-1 + sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2) + 
     2^(2 + d)*mz^4*Pi^d*(-1 + sw^2)^2*((-2 + d)*s^2 + 4*s*t + 4*t^2))*
    (s + 4*mz^2*(-1 + sw^2)*GaugeXi[Q]))/((-1 + d)*mz^4*Pi^(2*d)*(mz^2 - s)*
    s^2*sw^2*(-1 + sw^2)^2), ((I/9)*2^(-3 - d)*EL^6*(-3 + 8*sw^2)*
    (s + 4*mz^2*(-1 + sw^2))*(s^2 - 4*(-3 + 2*d)*mz^2*s*(-1 + sw^2) + 
     4*(-1 + d)*mz^4*(-1 + sw^2)^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
   ((-1 + d)*mz^4*Pi^d*(mz^2 - s)*s^2*sw^2*(-1 + sw^2)^2), 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  ((I/9)*4^(-2 - 3*d)*EL^6*
    (-4*mz^2*(d^2*(2*Pi)^(5*d)*s^2*(-39 - 41*sw^2 + 3*d^2*(-1 + sw^2)) + 
       2^(1 + 5*d)*Pi^(5*d)*(s^2*(-8*d^2*sw^4*(-13 + 8*sw^2) + 
           d^3*(9 + sw^2 - 26*sw^4 + 16*sw^6) - 2*(3 + 7*sw^2 - 26*sw^4 + 
             16*sw^6) + 2*d*(9 + 16*sw^2 - 65*sw^4 + 40*sw^6)) + 
         (-1 + d)^2*s*(-1 + sw^2)*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*
          t + 2*(-1 + d)^2*(-3 + 23*sw^2 - 52*sw^4 + 32*sw^6)*t^2)) + 
     (-75*d^3*(2*Pi)^(5*d)*s^3 + 2^(1 + 5*d)*d*Pi^(5*d)*s*
        (2*s^2*(3*d^3 + 4*d^2*sw^2*(-5 + 8*sw^2) + 
           d*(39 + 85*sw^2 - 136*sw^4) + 9*(-3 - 10*sw^2 + 16*sw^4)) + 
         s*(-87*d^2 + 12*d^3 - 72*(3 - 5*sw^2 + 8*sw^4) + 
           d*(231 - 160*sw^2 + 256*sw^4))*t + 2*(-9 + 4*d)*
          (3 - 20*sw^2 + 32*sw^4)*t^2) - 
       4*mz^2*(d^2*(2*Pi)^(5*d)*s^2*(3*d*(-1 + sw^2) + 5*(3 + sw^2)) + 
         2^(1 + 5*d)*Pi^(5*d)*(2*s^2*(3 + 7*sw^2 - 26*sw^4 + 16*sw^6 + 
             d^2*sw^4*(-13 + 8*sw^2) - 3*d*(2 + 3*sw^2 - 13*sw^4 + 8*sw^6)) + 
           s*(-1 + sw^2)*(-18*d^2 + 3*d^3 - 8*(3 - 5*sw^2 + 8*sw^4) + 
             d*(39 - 40*sw^2 + 64*sw^4))*t + 2*(-1 + d)*(-3 + 23*sw^2 - 
             52*sw^4 + 32*sw^6)*t^2)))*GaugeXi[Q] + 
     d*(2*Pi)^(5*d)*s*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
         4*d*(-3 - 5*sw^2 + 8*sw^4)) + 2*s*(-15*d + 3*d^2 + 
         8*(3 - 5*sw^2 + 8*sw^4))*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2)*
      GaugeXi[Q]^2))/((-1 + d)*d*Pi^(6*d)*s*(mz^3 - mz*s)^2*sw^4*(-1 + sw^2)*
    GaugeXi[Q]), ((I/9)*2^(-2 - 7*d)*EL^6*
    (-(64^d*(-1 + d)*mz^2*Pi^(6*d)*s*(-1 + sw^2)*
       (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
        2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
        4*(3 - 20*sw^2 + 32*sw^4)*t^2)) + 
     (3*d^4*mz^2*(2*Pi)^(6*d)*s*(-1 + sw^2)*(-s + mz^2*(-1 + sw^2))*
        (s + 2*t) + 3*4^(1 + 3*d)*mz^4*Pi^(6*d)*(-1 + sw^2)^2*
        (s^2*(-3 - 10*sw^2 + 16*sw^4) - 4*s*(3 - 5*sw^2 + 8*sw^4)*t + 
         (-3 + 20*sw^2 - 32*sw^4)*t^2) + 4^(-1 + 3*d)*d^3*Pi^(6*d)*s*
        (-(mz^2*s*(-1 + sw^2)*(s*(-63 - 80*sw^2 + 128*sw^4) - 150*t)) + 
         8*mz^4*(-1 + sw^2)^2*(s*(-3 - 10*sw^2 + 16*sw^4) - 9*t) + 
         3*s^2*(s + 2*t)) - 64^d*d*Pi^(6*d)*
        (s^2*(s^2*(-3 - 10*sw^2 + 16*sw^4) - 4*s*(3 - 5*sw^2 + 8*sw^4)*t + 
           (-3 + 20*sw^2 - 32*sw^4)*t^2) + 5*mz^2*s*(-1 + sw^2)*
          (s^2*(-3 - 10*sw^2 + 16*sw^4) - 4*s*(3 - 5*sw^2 + 8*sw^4)*t + 
           (-3 + 20*sw^2 - 32*sw^4)*t^2) + 2*mz^4*(-1 + sw^2)^2*
          (2*s^2*(-15 - 35*sw^2 + 56*sw^4) + s*(-93 + 80*sw^2 - 128*sw^4)*t - 
           4*(3 - 20*sw^2 + 32*sw^4)*t^2)) + 2^(-1 + 6*d)*d^2*Pi^(6*d)*
        (s^3*(2*s*(-3 - 5*sw^2 + 8*sw^4) - 15*t) + mz^2*s*(-1 + sw^2)*
          (2*s^2*(-27 - 65*sw^2 + 104*sw^4) + s*(-171 + 160*sw^2 - 256*sw^4)*
            t - 8*(3 - 20*sw^2 + 32*sw^4)*t^2) + 2*mz^4*(-1 + sw^2)^2*
          (-21*s^2 + 2*s*(-15 - 40*sw^2 + 64*sw^4)*t + 
           4*(3 - 20*sw^2 + 32*sw^4)*t^2)))*GaugeXi[Q] - 
     (3*d^4*mz^2*(2*Pi)^(6*d)*s*(-1 + sw^2)*(-2*s + 3*mz^2*(-1 + sw^2))*
        (s + 2*t) + 4^(1 + 3*d)*mz^2*Pi^(6*d)*(-1 + sw^2)*
        (-3*s + 5*mz^2*(-1 + sw^2))*(s^2*(-3 - 10*sw^2 + 16*sw^4) - 
         4*s*(3 - 5*sw^2 + 8*sw^4)*t + (-3 + 20*sw^2 - 32*sw^4)*t^2) + 
       4^(-1 + 3*d)*d^3*Pi^(6*d)*s*
        (-(mz^2*s*(-1 + sw^2)*(s*(-93 - 160*sw^2 + 256*sw^4) - 234*t)) + 
         24*mz^4*(-1 + sw^2)^2*(s*(-5 - 10*sw^2 + 16*sw^4) - 13*t) + 
         6*s^2*(s + 2*t)) + 2^(-1 + 6*d)*d^2*Pi^(6*d)*
        (2*s^3*(2*s*(-3 - 5*sw^2 + 8*sw^4) - 15*t) + mz^2*s*(-1 + sw^2)*
          (6*s^2*(-4 - 25*sw^2 + 40*sw^4) + s*(-141 + 320*sw^2 - 512*sw^4)*
            t - 16*(3 - 20*sw^2 + 32*sw^4)*t^2) - 2*mz^4*(-1 + sw^2)^2*
          (s^2*(3 - 80*sw^2 + 128*sw^4) - 6*s*(9 - 40*sw^2 + 64*sw^4)*t - 
           12*(3 - 20*sw^2 + 32*sw^4)*t^2)) + 64^d*d*Pi^(6*d)*
        (mz^2*s*(-1 + sw^2)*(s^2*(-39 - 70*sw^2 + 112*sw^4) - 
           2*s*(51 - 10*sw^2 + 16*sw^4)*t + (-3 + 20*sw^2 - 32*sw^4)*t^2) - 
         2*mz^4*(-1 + sw^2)^2*(6*s^2*(-7 - 15*sw^2 + 24*sw^4) + 
           s*(-123 + 80*sw^2 - 128*sw^4)*t - 4*(3 - 20*sw^2 + 32*sw^4)*t^2) + 
         2*s^2*(s^2*(3 + 10*sw^2 - 16*sw^4) + 4*s*(3 - 5*sw^2 + 8*sw^4)*t + 
           (3 - 20*sw^2 + 32*sw^4)*t^2)))*GaugeXi[Q]^2 + 
     (3*d^4*mz^2*(2*Pi)^(6*d)*s*(-1 + sw^2)*(-s + 3*mz^2*(-1 + sw^2))*
        (s + 2*t) + 4^(1 + 3*d)*mz^2*Pi^(6*d)*(-1 + sw^2)*
        (-2*s + mz^2*(-1 + sw^2))*(s^2*(-3 - 10*sw^2 + 16*sw^4) - 
         4*s*(3 - 5*sw^2 + 8*sw^4)*t + (-3 + 20*sw^2 - 32*sw^4)*t^2) + 
       4^(-1 + 3*d)*d^3*Pi^(6*d)*s*
        (-(mz^2*s*(-1 + sw^2)*(s*(-45 - 80*sw^2 + 128*sw^4) - 114*t)) + 
         24*mz^4*(-1 + sw^2)^2*(s*(-7 - 10*sw^2 + 16*sw^4) - 17*t) + 
         3*s^2*(s + 2*t)) + 2^(-1 + 6*d)*d^2*Pi^(6*d)*
        (s^3*(2*s*(-3 - 5*sw^2 + 8*sw^4) - 15*t) - 2*mz^4*(-1 + sw^2)^2*
          (s^2*(-57 - 160*sw^2 + 256*sw^4) - 6*s*(33 - 40*sw^2 + 64*sw^4)*t - 
           12*(3 - 20*sw^2 + 32*sw^4)*t^2) + mz^2*s*(-1 + sw^2)*
          (2*s^2*(-3 - 35*sw^2 + 56*sw^4) + s*(-57 + 160*sw^2 - 256*sw^4)*t - 
           8*(3 - 20*sw^2 + 32*sw^4)*t^2)) + 64^d*d*Pi^(6*d)*
        (mz^2*s*(-1 + sw^2)*(s^2*(-27 - 50*sw^2 + 80*sw^4) - 
           4*s*(18 - 5*sw^2 + 8*sw^4)*t + (-3 + 20*sw^2 - 32*sw^4)*t^2) + 
         2*mz^4*(-1 + sw^2)^2*(6*s^2*(-1 - 5*sw^2 + 8*sw^4) + 
           s*(-33 + 80*sw^2 - 128*sw^4)*t - 4*(3 - 20*sw^2 + 32*sw^4)*t^2) + 
         s^2*(s^2*(3 + 10*sw^2 - 16*sw^4) + 4*s*(3 - 5*sw^2 + 8*sw^4)*t + 
           (3 - 20*sw^2 + 32*sw^4)*t^2)))*GaugeXi[Q]^3 - 
     (mz^2*(-1 + sw^2)*(d*(2*Pi)^(6*d)*s*(s^2*(12 + 3*d^2 + 40*sw^2 - 
            64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
          2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          4*(3 - 20*sw^2 + 32*sw^4)*t^2) + 
        4*mz^2*(d^2*(2*Pi)^(6*d)*s^2*(-39 - 41*sw^2 + 3*d^2*(-1 + sw^2)) + 
          2^(1 + 6*d)*Pi^(6*d)*(s^2*(-8*d^2*sw^4*(-13 + 8*sw^2) + 
              d^3*(9 + sw^2 - 26*sw^4 + 16*sw^6) - 2*(3 + 7*sw^2 - 26*sw^4 + 
                16*sw^6) + 2*d*(9 + 16*sw^2 - 65*sw^4 + 40*sw^6)) + 
            (-1 + d)^2*s*(-1 + sw^2)*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 
                8*sw^4))*t + 2*(-1 + d)^2*(-3 + 23*sw^2 - 52*sw^4 + 32*sw^6)*
             t^2)))*GaugeXi[Q]^4)/4))/((-1 + d)*d*mz^4*Pi^(7*d)*(mz^2 - s)^2*
    s*sw^4*(-1 + sw^2)^2*(-1 + GaugeXi[Q])^2*GaugeXi[Q]), 
  ((-I/9)*2^(-4 - d)*EL^6*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
       4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
     2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
     4*(3 - 20*sw^2 + 32*sw^4)*t^2)*(s^2 - 2*(-3 + 2*d)*mz^2*s*(-1 + sw^2) + 
     mz^4*(-1 + sw^2)^2 - 2*mz^2*(-1 + sw^2)*(-s + mz^2*(-1 + sw^2))*
      GaugeXi[Q] + mz^4*(-1 + sw^2)^2*GaugeXi[Q]^2))/
   ((-1 + d)*mz^4*Pi^d*(mz^2 - s)^2*sw^4*(-1 + sw^2)^2), 
  ((-I/9)*2^(-4 - 5*d)*EL^6*
    (-4*mz^2*s*(d^2*(2*Pi)^(4*d)*s^2*(3*d*(-1 + sw^2) + 5*(3 + sw^2)) + 
       2^(1 + 4*d)*Pi^(4*d)*(2*s^2*(3 + 7*sw^2 - 26*sw^4 + 16*sw^6 + 
           d^2*sw^4*(-13 + 8*sw^2) - 3*d*(2 + 3*sw^2 - 13*sw^4 + 8*sw^6)) + 
         s*(-1 + sw^2)*(-18*d^2 + 3*d^3 - 8*(3 - 5*sw^2 + 8*sw^4) + 
           d*(39 - 40*sw^2 + 64*sw^4))*t + 2*(-1 + d)*(-3 + 23*sw^2 - 
           52*sw^4 + 32*sw^6)*t^2)) + 
     (d*(2*Pi)^(4*d)*s^2*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
           4*d*(-3 - 5*sw^2 + 8*sw^4)) + 2*s*(-15*d + 3*d^2 + 
           8*(3 - 5*sw^2 + 8*sw^4))*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2) - 
       4^(1 + 2*d)*d*mz^2*Pi^(4*d)*s*(-1 + sw^2)*
        (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
         2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
         4*(3 - 20*sw^2 + 32*sw^4)*t^2) + 
       4*mz^4*(15*d^3*(2*Pi)^(4*d)*s^2*(1 + sw^4) + 2^(1 + 4*d)*Pi^(4*d)*
          (s^2*(-15*d^3*sw^2 + 8*(-1 + sw^2)^2*(-3 - 10*sw^2 + 16*sw^4) + 
             2*d^2*(-1 + sw^2)^2*(-18 - 25*sw^2 + 40*sw^4) - 
             2*d*(-1 + sw^2)^2*(-27 - 70*sw^2 + 112*sw^4)) + 
           s*(-1 + sw^2)^2*(-87*d^2 + 15*d^3 - 32*(3 - 5*sw^2 + 8*sw^4) + 
             20*d*(9 - 10*sw^2 + 16*sw^4))*t + 2*(-4 + 5*d)*(-1 + sw^2)^2*
            (3 - 20*sw^2 + 32*sw^4)*t^2)))*GaugeXi[Q] - 
     2*(d*(2*Pi)^(4*d)*s^2*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
           4*d*(-3 - 5*sw^2 + 8*sw^4)) + 2*s*(-15*d + 3*d^2 + 
           8*(3 - 5*sw^2 + 8*sw^4))*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2) + 
       4*mz^4*(15*d^3*(2*Pi)^(4*d)*s^2*(1 + sw^4) + 2^(1 + 4*d)*Pi^(4*d)*
          (s^2*(-15*d^3*sw^2 + 8*(-1 + sw^2)^2*(-3 - 10*sw^2 + 16*sw^4) + 
             2*d^2*(-1 + sw^2)^2*(-18 - 25*sw^2 + 40*sw^4) - 
             2*d*(-1 + sw^2)^2*(-27 - 70*sw^2 + 112*sw^4)) + 
           s*(-1 + sw^2)^2*(-87*d^2 + 15*d^3 - 32*(3 - 5*sw^2 + 8*sw^4) + 
             20*d*(9 - 10*sw^2 + 16*sw^4))*t + 2*(-4 + 5*d)*(-1 + sw^2)^2*
            (3 - 20*sw^2 + 32*sw^4)*t^2)) - 
       2*mz^2*s*(d^2*(2*Pi)^(4*d)*s^2*(69 + 31*sw^2 + 15*d*(-1 + sw^2)) + 
         2^(1 + 4*d)*Pi^(4*d)*(2*s^2*(9 + 21*sw^2 - 78*sw^4 + 48*sw^6 + 
             5*d^2*sw^4*(-13 + 8*sw^2) - d*(24 + 41*sw^2 - 169*sw^4 + 104*
                sw^6)) + s*(-1 + sw^2)*(-84*d^2 + 15*d^3 - 
             24*(3 - 5*sw^2 + 8*sw^4) + 5*d*(33 - 40*sw^2 + 64*sw^4))*t + 
           2*(-3 + 5*d)*(-3 + 23*sw^2 - 52*sw^4 + 32*sw^6)*t^2)))*
      GaugeXi[Q]^2 + (d*(2*Pi)^(4*d)*s^2*
        (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
         2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
         4*(3 - 20*sw^2 + 32*sw^4)*t^2) - 4*mz^2*s*(-1 + sw^2)*
        (9*d^3*(2*Pi)^(4*d)*s^2 + 2^(1 + 4*d)*Pi^(4*d)*
          (s^2*(-12 - 40*sw^2 + 64*sw^4 + d*(30 + 80*sw^2 - 128*sw^4) + 
             3*d^2*(-7 - 10*sw^2 + 16*sw^4)) + s*(-51*d^2 + 9*d^3 - 
             16*(3 - 5*sw^2 + 8*sw^4) + 6*d*(17 - 20*sw^2 + 32*sw^4))*t + 
           2*(-2 + 3*d)*(3 - 20*sw^2 + 32*sw^4)*t^2)) + 
       4*mz^4*(15*d^3*(2*Pi)^(4*d)*s^2*(1 + sw^4) + 2^(1 + 4*d)*Pi^(4*d)*
          (s^2*(-15*d^3*sw^2 + 8*(-1 + sw^2)^2*(-3 - 10*sw^2 + 16*sw^4) + 
             2*d^2*(-1 + sw^2)^2*(-18 - 25*sw^2 + 40*sw^4) - 
             2*d*(-1 + sw^2)^2*(-27 - 70*sw^2 + 112*sw^4)) + 
           s*(-1 + sw^2)^2*(-87*d^2 + 15*d^3 - 32*(3 - 5*sw^2 + 8*sw^4) + 
             20*d*(9 - 10*sw^2 + 16*sw^4))*t + 2*(-4 + 5*d)*(-1 + sw^2)^2*
            (3 - 20*sw^2 + 32*sw^4)*t^2)))*GaugeXi[Q]^3))/
   ((-1 + d)*d*mz^4*Pi^(5*d)*(mz^2 - s)^2*s*sw^4*(-1 + sw^2)^2*
    (-1 + GaugeXi[Q])^2*GaugeXi[Q]), 0, 0, 
  ((I/9)*2^(-5 - 3*d)*EL^6*((-1 + d)*(2*Pi)^(2*d)*(s - 2*mz^2*(-1 + sw^2))^2*
      (s*(-6 + 3*d - 20*sw^2 + 32*sw^4) - 2*(3 - 20*sw^2 + 32*sw^4)*t)*
      (-1 + GaugeXi[Q])^2*(s + 2*mz^2*(-1 + sw^2)*GaugeXi[Q])^2 + 
     (-1 + d)*(2*Pi)^d*(-(2^(2 + d)*mz^2*Pi^d*s*(-1 + sw^2)*
         (s*(-6 + 3*d - 20*sw^2 + 32*sw^4) - 2*(3 - 20*sw^2 + 32*sw^4)*t)) + 
       2^(2 + d)*mz^4*Pi^d*(-1 + sw^2)^2*(s*(-6 + 3*d - 20*sw^2 + 32*sw^4) - 
         2*(3 - 20*sw^2 + 32*sw^4)*t) + s^2*(3*d*(2*Pi)^d*s + 
         2^(1 + d)*Pi^d*(s*(-3 - 10*sw^2 + 16*sw^4) + 
           (-3 + 20*sw^2 - 32*sw^4)*t)))*(-1 + GaugeXi[Q])^2*
      (s + 2*mz^2*(-1 + sw^2)*GaugeXi[Q])^2 - (2*Pi)^(2*d)*s*(-1 + 4*sw^2)*
      (-3 + 8*sw^2)*(s - 2*mz^2*(-1 + sw^2))^2*(-1 + GaugeXi[Q])^2*
      (d*s^2 + 4*d*mz^2*s*(-1 + sw^2)*GaugeXi[Q] + 4*(-1 + d)*mz^4*
        (-1 + sw^2)^2*GaugeXi[Q]^2) - (2*Pi)^d*s*(-1 + 4*sw^2)*(-3 + 8*sw^2)*
      ((2*Pi)^d*s^2 - 2^(2 + d)*mz^2*Pi^d*s*(-1 + sw^2) + 
       2^(2 + d)*mz^4*Pi^d*(-1 + sw^2)^2)*(-1 + GaugeXi[Q])^2*
      (d*s^2 + 4*d*mz^2*s*(-1 + sw^2)*GaugeXi[Q] + 4*(-1 + d)*mz^4*
        (-1 + sw^2)^2*GaugeXi[Q]^2) - 
     (2*Pi)^d*(2^(2 + d)*mz^4*Pi^d*(-1 + sw^2)^2*
        (3*d*s - 4*s*(3 - 5*sw^2 + 8*sw^4) - 2*(3 - 20*sw^2 + 32*sw^4)*t) + 
       2^(2 + d)*mz^2*Pi^d*s*(-1 + sw^2)*(-3*d*s + 
         4*s*(3 - 5*sw^2 + 8*sw^4) + 2*(3 - 20*sw^2 + 32*sw^4)*t) - 
       s^2*(-3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(2*s*(3 - 5*sw^2 + 8*sw^4) + 
           (3 - 20*sw^2 + 32*sw^4)*t)))*(-1 + GaugeXi[Q])^2*
      (s*(d*s + 2*t) + 4*mz^2*(-1 + sw^2)*(d*s + 2*t)*GaugeXi[Q] + 
       4*(-1 + d)*mz^4*(-1 + sw^2)^2*GaugeXi[Q]^2) + 
     2*(-1 + d)*(s - 2*mz^2*(-1 + sw^2))^2*
      ((2*Pi)^(2*d)*s^2*(-6 + 3*d - 20*sw^2 + 32*sw^4)*t - 
       2^(1 + 2*d)*Pi^(2*d)*s*(-6 + 3*d - 20*sw^2 + 32*sw^4)*
        (s - 2*mz^2*(-1 + sw^2))*t*GaugeXi[Q] + 
       ((2*Pi)^(2*d)*s^2*(-6 + 3*d - 20*sw^2 + 32*sw^4)*t - 
         2^(3 + 2*d)*mz^2*Pi^(2*d)*s*(-1 + sw^2)*(-6 + 3*d - 20*sw^2 + 
           32*sw^4)*t - 2^(1 + 2*d)*mz^4*Pi^(2*d)*(-1 + sw^2)^2*
          (s*(-6 + 3*d - 20*sw^2 + 32*sw^4) - 2*(3 - 20*sw^2 + 32*sw^4)*t))*
        GaugeXi[Q]^2 + 4^(1 + d)*mz^2*Pi^(2*d)*(-1 + sw^2)*
        (s*(-6 + 3*d - 20*sw^2 + 32*sw^4)*t + mz^2*(-1 + sw^2)*
          (s*(-6 + 3*d - 20*sw^2 + 32*sw^4) - 2*(3 - 20*sw^2 + 32*sw^4)*t))*
        GaugeXi[Q]^3 - 2^(1 + 2*d)*mz^4*Pi^(2*d)*(-1 + sw^2)^2*
        (s*(-6 + 3*d - 20*sw^2 + 32*sw^4) - 2*(3 - 20*sw^2 + 32*sw^4)*t)*
        GaugeXi[Q]^4)))/((-1 + d)*mz^4*Pi^(3*d)*(mz^2 - s)^2*s*sw^2*
    (-1 + sw^2)^2*(sw - sw*GaugeXi[Q])^2), 
  ((I/9)*2^(-5 - 4*d)*EL^6*((2*Pi)^(3*d)*s^3*
      (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
       2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
       4*(3 - 20*sw^2 + 32*sw^4)*t^2) - 8*mz^2*s^2*(-1 + sw^2)*
      (3*d^3*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
        (s^2*(-12 - 40*sw^2 + 64*sw^4 + d*(18 + 40*sw^2 - 64*sw^4) + 
           d^2*(-9 - 10*sw^2 + 16*sw^4)) + s*(-21*d^2 + 3*d^3 - 
           16*(3 - 5*sw^2 + 8*sw^4) + d*(54 - 40*sw^2 + 64*sw^4))*t + 
         2*(-2 + d)*(3 - 20*sw^2 + 32*sw^4)*t^2)) - 
     4*mz^4*(3*d^2*(2*Pi)^(3*d)*s^3*(-39 + 129*sw^4 + 7*d*(1 + sw^4)) + 
       2^(1 + 3*d)*Pi^(3*d)*s*(s^2*(-21*d^3*sw^2 + 22*(-1 + sw^2)^2*
            (-3 - 10*sw^2 + 16*sw^4) - 2*d*(-1 + sw^2)^2*(-54 - 125*sw^2 + 
             200*sw^4) + d^2*sw^2*(47 - 294*sw^4 + 112*sw^6)) + 
         s*(-1 + sw^2)^2*(-138*d^2 + 21*d^3 - 88*(3 - 5*sw^2 + 8*sw^4) + 
           d*(333 - 280*sw^2 + 448*sw^4))*t + 2*(-11 + 7*d)*(-1 + sw^2)^2*
          (3 - 20*sw^2 + 32*sw^4)*t^2)) + 
     16*mz^6*(d^2*(2*Pi)^(3*d)*s^2*(15 - 25*sw^2 - 47*sw^4 + 141*sw^6 + 
         3*d*(-1 + sw^2)^3) + 2^(1 + 3*d)*Pi^(3*d)*
        (2*s^2*(d^2*sw^8*(-29 + 8*sw^2) - 3*d*(-1 + sw^2)^3*
            (-2 - 5*sw^2 + 8*sw^4) + (-1 + sw^2)^3*(-3 - 10*sw^2 + 
             16*sw^4)) + s*(-1 + sw^2)^3*(-18*d^2 + 3*d^3 - 
           8*(3 - 5*sw^2 + 8*sw^4) + d*(39 - 40*sw^2 + 64*sw^4))*t + 
         2*(-1 + d)*(-1 + sw^2)^3*(3 - 20*sw^2 + 32*sw^4)*t^2))))/
   ((-1 + d)*mz^4*Pi^(4*d)*(mz^2 - s)^2*s*sw^4*(-1 + sw^2)^2), 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}
