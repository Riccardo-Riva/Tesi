(* Created with the Wolfram Language : www.wolfram.com *)
{((I/81)*2^(-4 - 2*d)*EL^6*s^2*(9*d*(2*Pi)^d + 2^(1 + d)*Pi^d*
      (-9 - 15*(-2 + d)*swC^2 + 12*(-2 + d)*swC^4 + 4*(-2 + d)*sw^4*
        (3 - 20*swC^2 + 32*swC^4) - (-2 + d)*sw^2*(15 - 76*swC^2 + 
         80*swC^4))))/(cw^2*cwC^2*Pi^(2*d)*(mz^2 - s)*(-mzC^2 + s)*sw^2*
    swC^2) - ((I/81)*2^(-3 - 2*d)*EL^6*s*(9*d*(2*Pi)^d + 
     2^(1 + d)*Pi^d*(-9 - 15*(-2 + d)*swC^2 + 12*(-2 + d)*swC^4 + 
       4*(-2 + d)*sw^4*(3 - 20*swC^2 + 32*swC^4) - 
       (-2 + d)*sw^2*(15 - 76*swC^2 + 80*swC^4)))*(-s/2 + (2*t)/(-2 + d) - 
     (4*t^2)/((8 - 6*d + d^2)*s)))/(cw^2*cwC^2*Pi^(2*d)*(mz^2 - s)*
    (-mzC^2 + s)*sw^2*swC^2) + ((I/81)*2^(-4 - 2*d)*EL^6*s*
    (9*d^2*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
      (s*(3*d^2*(4*sw^4 + swC^2*(-5 + 4*swC^2) + sw^2*(-5 + 8*swC^2)) + 
         4*(9 - 30*swC^2 + 24*swC^4 + sw^2*(-30 + 74*swC^2 - 40*swC^4) + 
           8*sw^4*(3 - 5*swC^2 + 8*swC^4)) + d*(-9*(3 - 10*swC^2 + 8*swC^4) - 
           8*sw^4*(9 - 10*swC^2 + 16*swC^4) + 2*sw^2*(45 - 98*swC^2 + 
             40*swC^4))) - (-2 + d)*(9 - 30*swC^2 + 24*swC^4 + 
         8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 2*sw^2*(15 - 76*swC^2 + 
           80*swC^4))*t)))/(cw^2*cwC^2*Pi^(2*d)*(mz^2 - s)*(-mzC^2 + s)*sw^2*
    swC^2) - ((I/81)*4^(-1 - d)*EL^6*s*(1 - (2*t)/((-4 + d)*s))*
    (9*d*(2*Pi)^d*(s - t) + 2^(1 + d)*Pi^d*
      (s*(4*sw^4*(-6 + 3*d - 20*swC^2 + 32*swC^4) + 
         3*(-3 - 5*(-2 + d)*swC^2 + 4*(-2 + d)*swC^4) + 
         sw^2*(30 + 4*swC^2 - 80*swC^4 + 3*d*(-5 + 8*swC^2))) + 
       (-4*(-4 + d)*sw^4*(3 - 20*swC^2 + 32*swC^4) + (-4 + d)*sw^2*
          (15 - 76*swC^2 + 80*swC^4) + 3*(6 + 5*(-4 + d)*swC^2 - 
           4*(-4 + d)*swC^4))*t)))/(cw^2*cwC^2*Pi^(2*d)*(mz^2 - s)*
    (-mzC^2 + s)*sw^2*swC^2) + ((I/81)*4^(-2 - d)*EL^6*s*
    (9*d^3*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
      (s*(3*d^3*(4*sw^4 + swC^2*(-5 + 4*swC^2) + sw^2*(-5 + 8*swC^2)) - 
         20*d*(-9 + 30*swC^2 - 24*swC^4 + sw^2*(30 - 22*swC^2 - 40*swC^4) + 
           8*sw^4*(-3 - 5*swC^2 + 8*swC^4)) + 20*(-9 + 30*swC^2 - 24*swC^4 + 
           sw^2*(30 + 4*swC^2 - 80*swC^4) + 8*sw^4*(-3 - 10*swC^2 + 
             16*swC^4)) + 2*d^2*(-9*(3 - 10*swC^2 + 8*swC^4) + 
           8*sw^4*(-9 - 5*swC^2 + 8*swC^4) - 2*sw^2*(-45 + 59*swC^2 + 
             20*swC^4))) + (-36*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
           2*sw^2*(-5 + 8*swC^2)) + 3*d^3*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
           2*sw^2*(-5 + 8*swC^2)) - 8*(sw^2*(-210 + 362*swC^2 - 40*swC^4) + 
           21*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(21 - 5*swC^2 + 8*swC^4)) + 
         2*d*(69*(3 - 10*swC^2 + 8*swC^4) + 8*sw^4*(69 - 10*swC^2 + 
             16*swC^4) - 2*sw^2*(345 - 578*swC^2 + 40*swC^4)))*t)))/
   (cw^2*cwC^2*Pi^(2*d)*(mz^2 - s)*(-mzC^2 + s)*sw^2*swC^2) + 
  ((I/81)*2^(-2 - 2*d)*(-3 + d)*EL^6*(9*d*(2*Pi)^d*(d*s^2 + t^2) + 
     2^(1 + d)*Pi^d*(s^2*(3*d^2*(4*sw^4 + swC^2*(-5 + 4*swC^2) + 
           sw^2*(-5 + 8*swC^2)) + 2*d*(-9 + 30*swC^2 - 24*swC^4 + 
           sw^2*(30 - 22*swC^2 - 40*swC^4) + 8*sw^4*(-3 - 5*swC^2 + 
             8*swC^4)) + 2*(9 - 30*swC^2 + 24*swC^4 + 
           sw^4*(24 + 80*swC^2 - 128*swC^4) + sw^2*(-30 - 4*swC^2 + 
             80*swC^4))) + s*(30*(3 - 10*swC^2 + 8*swC^4) + 
         16*sw^4*(15 - 10*swC^2 + 16*swC^4) - 4*sw^2*(75 - 146*swC^2 + 
           40*swC^4) - 18*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
           2*sw^2*(-5 + 8*swC^2)) + 3*d^2*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 
           2*sw^2*(-5 + 8*swC^2)))*t + (-9 - 15*(-2 + d)*swC^2 + 
         12*(-2 + d)*swC^4 + 4*(-2 + d)*sw^4*(3 - 20*swC^2 + 32*swC^4) - 
         (-2 + d)*sw^2*(15 - 76*swC^2 + 80*swC^4))*t^2)))/
   (cw^2*cwC^2*(-4 + d)*Pi^(2*d)*(mz^2 - s)*(-mzC^2 + s)*sw^2*swC^2), 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
