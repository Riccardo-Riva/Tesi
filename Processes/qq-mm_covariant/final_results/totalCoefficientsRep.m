{{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 {(I/2592)*EL^6*((33*2^(8 - d)*(-2 + d)*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
     ((-1 + d)*Pi^d*s^2) - (13*2^(7 - d)*(16 - 7*d + d^2)*
      ((-2 + d)*s^2 + 4*s*t + 4*t^2))/((-4 + d)*Pi^d*s^2) + 
    (9*2^(4 - d)*((-7 + d)*s - 2*mz^2*(1 - sw^2))*((-2 + d)*s^2 + 4*s*t + 
       4*t^2))/(Pi^d*s^3*sw^2) + (9*2^(2 - d)*(16 - 7*d + d^2)*
      (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
       2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
       4*(3 - 20*sw^2 + 32*sw^4)*t^2))/((-4 + d)*Pi^d*(mz^2 - s)*s*sw^2*
      (1 - sw^2)) + (9*4^(2 - d)*(1 - 4*sw^2 + 8*sw^4)*
      (-(d*(1 + d)*(2*Pi)^d*s^3) + 2^(1 + d)*mz^2*Pi^d*
        ((-2 + d)*s^2 + 4*s*t + 4*t^2) + 2^(1 + d)*Pi^d*s*
        ((-7 + 5*d)*s^2 - 2*(-7 + d)*s*t - 2*(-7 + d)*t^2)))/
     (Pi^(2*d)*s^3*sw^2*(1 - sw^2)) + (4^(2 - d)*(9 - 24*sw^2 + 32*sw^4)*
      (-(d*(1 + d)*(2*Pi)^d*s^3) + 2^(1 + d)*mz^2*Pi^d*
        ((-2 + d)*s^2 + 4*s*t + 4*t^2) + 2^(1 + d)*Pi^d*s*
        ((-7 + 5*d)*s^2 - 2*(-7 + d)*s*t - 2*(-7 + d)*t^2)))/
     (Pi^(2*d)*s^3*sw^2*(1 - sw^2)) + 
    (3*4^(2 - d)*(9*d^2*(2*Pi)^d*s^2 + 2^(2 + d)*Pi^d*
        (s^2*((3 - 8*sw^2)^2 - d*(3 - 8*sw^2)^2 + 4*d^2*sw^2*(-3 + 4*sw^2)) + 
         (-2 + d)*s*(3 - 8*sw^2)^2*t + (-2 + d)*(3 - 8*sw^2)^2*t^2)))/
     ((-1 + d)*Pi^(2*d)*s*(-mz^2 + s)*sw^2*(1 - sw^2)) + 
    (9*2^(5 - 2*d)*(d^2*(2*Pi)^d*s^2 + 2^(2 + d)*Pi^d*
        (s^2*((1 - 4*sw^2)^2 - d*(1 - 4*sw^2)^2 + d^2*(-2*sw^2 + 4*sw^4)) + 
         (-2 + d)*s*(1 - 4*sw^2)^2*t + (-2 + d)*(1 - 4*sw^2)^2*t^2)))/
     ((-1 + d)*Pi^(2*d)*s*(-mz^2 + s)*sw^2*(1 - sw^2)) + 
    (9*2^(1 - 2*d)*(-3*d^2*(1 + d)*(2*Pi)^d*s^3 + 2^(1 + d)*mz^2*Pi^d*
        (1 - sw^2)*(s^2*(3*d^2 - 4*d*(3 + 2*sw^2) + 4*(3 + 4*sw^2)) + 
         2*s*(24 - 15*d + 3*d^2 - 16*sw^2)*t + 4*(3 - 8*sw^2)*t^2) + 
       2^(1 + d)*Pi^d*s*(2*s^2*(d^2*(9 + 2*sw^2) - 6*d*(4 + 3*sw^2) + 
           7*(3 + 4*sw^2)) - (-7 + d)*s*(24 - 15*d + 3*d^2 - 16*sw^2)*t + 
         2*(-7 + d)*(-3 + 8*sw^2)*t^2)))/(Pi^(2*d)*(mz^2 - s)*s^2*sw^4*
      (1 - sw^2)) + (3*4^(2 - d)*(3*d^2*(2*Pi)^d*s^2 + 
       2^(2 + d)*Pi^d*(s^2*(3 - 16*sw^2 + 16*sw^4 + 4*d^2*sw^2*(-1 + sw^2) + 
           d*(-3 + 16*sw^2 - 16*sw^4)) + (-2 + d)*s*(3 - 16*sw^2 + 16*sw^4)*
          t + (-2 + d)*(3 - 16*sw^2 + 16*sw^4)*t^2)))/
     ((-1 + d)*Pi^(2*d)*s*(-mz^2 + s)*sw^2*(1 - sw^2)) + 
    (3*2^(3 - 2*d)*(9*d^2*(2*Pi)^d*s^2 + 2^(2 + d)*Pi^d*
        (s^2*(9 - 36*sw^2 + 32*sw^4 + d^2*sw^2*(-9 + 8*sw^2) + 
           d*(-9 + 36*sw^2 - 32*sw^4)) + (-2 + d)*s*(9 - 36*sw^2 + 32*sw^4)*
          t + (-2 + d)*(9 - 36*sw^2 + 32*sw^4)*t^2)))/
     ((-1 + d)*Pi^(2*d)*s*(-mz^2 + s)*sw^2*(1 - sw^2)) - 
    (27*(-9*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (s^2*(12 + 3*d^3 + 40*sw^2 - 64*sw^4 + d^2*(9 + 10*sw^2 - 16*sw^4) + 
           2*d*(-9 - 20*sw^2 + 32*sw^4)) + s*(21*d^2 - 3*d^3 + 
           d*(-54 + 40*sw^2 - 64*sw^4) + 16*(3 - 5*sw^2 + 8*sw^4))*t - 
         2*(-2 + d)*(3 - 20*sw^2 + 32*sw^4)*t^2)))/((-1 + d)*(2*Pi)^(2*d)*
      (mz^2 - s)^2*sw^4*(1 - sw^2)^2) + 
    (9*4^(2 - d)*(3*d^2*(2*Pi)^d*s^2 + 2^(2 + d)*Pi^d*
        (s^2*(3 - 20*sw^2 + 32*sw^4 + d^2*sw^2*(-5 + 8*sw^2) + 
           d*(-3 + 20*sw^2 - 32*sw^4)) + (-2 + d)*s*(3 - 20*sw^2 + 32*sw^4)*
          t + (-2 + d)*(3 - 20*sw^2 + 32*sw^4)*t^2)))/
     ((-1 + d)*Pi^(2*d)*s*(-mz^2 + s)*sw^2*(1 - sw^2)) + 
    (3*2^(5 - 3*d)*(-15*d^2*(2*Pi)^(2*d)*s^2 + 2^(1 + 2*d)*Pi^(2*d)*
        (s^2*(6 - 40*sw^2 + 64*sw^4 + d*(-6 + 40*sw^2 - 64*sw^4) + 
           d^2*(9 - 10*sw^2 + 16*sw^4)) + 2*(-2 + d)*s*(3 - 20*sw^2 + 
           32*sw^4)*t + 2*(-2 + d)*(3 - 20*sw^2 + 32*sw^4)*t^2)))/
     ((-1 + d)*Pi^(3*d)*s*(-mz^2 + s)*sw^2*(1 - sw^2)) - 
    (2^(4 - 4*d)*(3*(-11 + d)*d^3*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
        (2*s^2*(48 + 160*sw^2 - 256*sw^4 + d^3*sw^2*(-5 + 8*sw^2) - 
           9*d^2*(-4 - 5*sw^2 + 8*sw^4) + 3*d*(-23 - 50*sw^2 + 80*sw^4)) + 
         s*(-36*d^3 + 3*d^4 + 128*(3 - 5*sw^2 + 8*sw^4) - 
           8*d*(51 - 35*sw^2 + 56*sw^4) + d^2*(177 - 40*sw^2 + 64*sw^4))*t + 
         2*(16 - 7*d + d^2)*(3 - 20*sw^2 + 32*sw^4)*t^2)))/
     ((-4 + d)*Pi^(4*d)*s*(-mz^2 + s)*sw^2*(1 - sw^2)) + 
    (3*(9*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (s^2*(3*d^3*(3 - 6*sw^2 + 4*sw^4) + d^2*(-81 + 18*sw^2 + 192*sw^4 - 
             272*sw^6 + 128*sw^8) + 4*(-27 - 54*sw^2 + 240*sw^4 - 272*sw^6 + 
             128*sw^8) - 2*d*(-81 - 72*sw^2 + 456*sw^4 - 544*sw^6 + 
             256*sw^8)) + s*(9 - 12*sw^2 + 8*sw^4)*(-21*d^2 + 3*d^3 - 
           16*(3 - 5*sw^2 + 8*sw^4) + d*(54 - 40*sw^2 + 64*sw^4))*t + 
         2*(-2 + d)*(27 - 216*sw^2 + 552*sw^4 - 544*sw^6 + 256*sw^8)*t^2)))/
     ((-1 + d)*(2*Pi)^(2*d)*(mz^2 - s)^2*sw^4*(1 - sw^2)^2) + 
    (9*2^(1 - 2*d)*(9*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (s^2*(3*d^3*(-1 - 2*sw^2 + 4*sw^4) + d^2*(-9 + 26*sw^2 - 16*sw^4 - 
             144*sw^6 + 128*sw^8) + 4*(-3 + 2*sw^2 + 32*sw^4 - 144*sw^6 + 
             128*sw^8) - 2*d*(-9 + 16*sw^2 + 40*sw^4 - 288*sw^6 + 
             256*sw^8)) + s*(1 - 4*sw^2 + 8*sw^4)*(-21*d^2 + 3*d^3 - 
           16*(3 - 5*sw^2 + 8*sw^4) + d*(54 - 40*sw^2 + 64*sw^4))*t + 
         2*(-2 + d)*(3 - 32*sw^2 + 136*sw^4 - 288*sw^6 + 256*sw^8)*t^2)))/
     ((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*sw^4*(1 - sw^2)^2) + 
    (3*(9*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (s^2*(d^3*(9 - 36*sw^2 + 48*sw^4) + d^2*(-81 + 126*sw^2 + 96*sw^4 - 
             704*sw^6 + 512*sw^8) + 4*(-27 - 18*sw^2 + 288*sw^4 - 704*sw^6 + 
             512*sw^8) - 2*d*(-81 + 36*sw^2 + 480*sw^4 - 1408*sw^6 + 
             1024*sw^8)) + s*(9 - 24*sw^2 + 32*sw^4)*(-21*d^2 + 3*d^3 - 
           16*(3 - 5*sw^2 + 8*sw^4) + d*(54 - 40*sw^2 + 64*sw^4))*t + 
         2*(-2 + d)*(27 - 252*sw^2 + 864*sw^4 - 1408*sw^6 + 1024*sw^8)*t^2)))/
     ((-1 + d)*(2*Pi)^(2*d)*(mz^2 - s)^2*sw^4*(1 - sw^2)^2) - 
    (9*(2*mz^2*(3*d^2*(2*Pi)^(2*d)*s^2 + 2^(1 + 2*d)*Pi^(2*d)*
          (s^2*(6 - 28*sw^2 + 24*sw^4 + 144*sw^6 - 128*sw^8 + 
             9*d^2*sw^2*(-1 + 2*sw^2) + d*(-6 + 32*sw^2 - 48*sw^4 - 72*sw^6 + 
               64*sw^8)) + s*(-15*d*(1 - 6*sw^2 + 12*sw^4) + 
             3*d^2*(1 - 6*sw^2 + 12*sw^4) + 8*(3 - 20*sw^2 + 48*sw^4 - 36*
                sw^6 + 32*sw^8))*t + 2*(3 - 26*sw^2 + 84*sw^4 - 144*sw^6 + 
             128*sw^8)*t^2)) - s*(3*d^2*(1 + d)*(2*Pi)^(2*d)*s^2 + 
         2^(1 + 2*d)*Pi^(2*d)*(s^2*(9*d^3*sw^2*(-1 + 2*sw^2) - 
             12*d*(-4 + 21*sw^2 - 30*sw^4 - 54*sw^6 + 48*sw^8) + 
             d^2*(-18 + 95*sw^2 - 174*sw^4 - 72*sw^6 + 64*sw^8) + 
             14*(-3 + 14*sw^2 - 12*sw^4 - 72*sw^6 + 64*sw^8)) + 
           s*(-36*d^2*(1 - 6*sw^2 + 12*sw^4) + 3*d^3*(1 - 6*sw^2 + 12*sw^4) - 
             56*(3 - 20*sw^2 + 48*sw^4 - 36*sw^6 + 32*sw^8) + 
             d*(129 - 790*sw^2 + 1644*sw^4 - 288*sw^6 + 256*sw^8))*t + 
           2*(-7 + d)*(3 - 26*sw^2 + 84*sw^4 - 144*sw^6 + 128*sw^8)*t^2))))/
     ((2*Pi)^(3*d)*(mz^2 - s)*s^2*sw^4*(1 - sw^2)^2) - 
    (2*mz^2*(27*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (2*s^2*(27 - 54*sw^2 - 72*sw^4 + 352*sw^6 - 256*sw^8 + 
            9*d^2*sw^2*(-3 + 4*sw^2) + d*(-27 + 81*sw^2 - 36*sw^4 - 
              176*sw^6 + 128*sw^8)) + s*(-45*d*(3 - 12*sw^2 + 16*sw^4) + 
            9*d^2*(3 - 12*sw^2 + 16*sw^4) + 8*(27 - 135*sw^2 + 252*sw^4 - 
              176*sw^6 + 128*sw^8))*t + 2*(27 - 216*sw^2 + 576*sw^4 - 
            704*sw^6 + 512*sw^8)*t^2)) - s*(27*d^2*(1 + d)*(2*Pi)^d*s^2 + 
        2^(1 + d)*Pi^d*(2*s^2*(9*d^3*sw^2*(-3 + 4*sw^2) + 
            d^2*(-81 + 270*sw^2 - 288*sw^4 - 176*sw^6 + 128*sw^8) - 
            9*d*(-24 + 69*sw^2 - 20*sw^4 - 176*sw^6 + 128*sw^8) + 
            7*(-27 + 54*sw^2 + 72*sw^4 - 352*sw^6 + 256*sw^8)) + 
          s*(-108*d^2*(3 - 12*sw^2 + 16*sw^4) + 9*d^3*(3 - 12*sw^2 + 
              16*sw^4) - 56*(27 - 135*sw^2 + 252*sw^4 - 176*sw^6 + 
              128*sw^8) + d*(1161 - 4860*sw^2 + 7056*sw^4 - 1408*sw^6 + 
              1024*sw^8))*t + 2*(-7 + d)*(27 - 216*sw^2 + 576*sw^4 - 
            704*sw^6 + 512*sw^8)*t^2)))/((2*Pi)^(2*d)*(mz^2 - s)*s^2*sw^4*
      (1 - sw^2)^2) + (9*2^(1 - 2*d)*(-3*d^2*(2*Pi)^d*s - 3*d^3*(2*Pi)^d*s + 
       2^(2 + d)*(-2 + d)*mz^2*Pi^d*(1 - sw^2)*(3 - 14*sw^2 + 8*sw^4) + 
       2*(-s/2 - mz^2*(1 - sw^2))*(3*d*(2*Pi)^d + 2^(1 + d)*Pi^d*
          (-3 - 7*(-2 + d)*sw^2 + 4*(-2 + d)*sw^4)) + 
       2^(1 + d)*Pi^d*(s*(d^2*sw^2 + d*(3 - 2*sw^2)^2 - 
           4*(3 - 5*sw^2 + 2*sw^4)) + (-2 + d)*(3 - 14*sw^2 + 8*sw^4)*t) + 
       2^(1 + d)*Pi^d*(s*(60 + 80*sw^2 + d^3*sw^2 - 80*sw^4 + 
           20*d*(-3 - sw^2 + 2*sw^4) - 2*d^2*(-9 + 3*sw^2 + 2*sw^4)) + 
         (-3 + 2*sw^2)*(-12*d^2 + d^3 + d*(46 - 4*sw^2) + 8*(-7 + sw^2))*t) + 
       ((-(2^(1 + d)*Pi^d) + d*(2*Pi)^d)*(-3 + 2*sw^2)*(-1 + 4*sw^2)*
         (s*(-((-2 + d)*s^2) + 4*s*t + 4*(-1 + d)*t^2) + 2*mz^2*(1 - sw^2)*
           ((-2 + d)*s^2 + 4*(-1 + d)*s*t + 4*(-1 + d)*t^2)))/
        ((-2 + d)*s^2) - (2*(1 + (2*t)/s)*(2^(1 + d)*Pi^d*s*(-3 + 2*sw^2)*
           (s*(-2 + d - 4*sw^2) + (-4 + d)*(-1 + 4*sw^2)*t) + 
          mz^2*(1 - sw^2)*(-3*d^2*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
             (s*(d^2*sw^2 + d*(3 - 2*sw^2)^2 - 4*(3 - 5*sw^2 + 2*sw^4)) + 
              (-2 + d)*(3 - 14*sw^2 + 8*sw^4)*t))))/s))/
     (Pi^(2*d)*(mz^2 - s)*sw^4*(1 - sw^2)) + 
    (3*2^(6 - d)*((96 - 216*d + 82*d^2 - 7*d^3)*s^2 - 4*(208 - 84*d + 5*d^2)*
        s*t - 4*(176 - 80*d + 7*d^2)*t^2 + 2*(32 - 20*d + 3*d^2)*
        ((-2 + d)*s^2 + 4*s*t + 4*t^2)*GaugeXi[A] + 
       (-4 + d)^2*((-2 + d)*s^2 + 4*s*t + 4*t^2)*GaugeXi[A]^2))/
     ((-4 + d)*Pi^d*s^2) - (3*2^(6 - d)*((224 - 232*d + 74*d^2 - 7*d^3)*s^2 - 
       4*(144 - 76*d + 9*d^2)*s*t - 4*(176 - 80*d + 7*d^2)*t^2 + 
       2*(32 - 20*d + 3*d^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2)*GaugeXi[A] + 
       (-4 + d)^2*((-2 + d)*s^2 + 4*s*t + 4*t^2)*GaugeXi[A]^2))/
     ((-4 + d)*Pi^d*s^2)), ((-I/27)*2^(-5 - d)*EL^6*
    ((256*(32 - 14*d + d^2)*(s + 2*t))/(-4 + d) - 
     (16*(mz^2*(33*d^3 - 3*d^4 + d*(84 + 340*sw^2 - 544*sw^4) + 
          12*d^2*(-9 - 5*sw^2 + 8*sw^4) + 24*(3 - 20*sw^2 + 32*sw^4)) + 
        s*(-57*d^3 + 6*d^4 + d^2*(156 + 40*sw^2 - 64*sw^4) - 
          8*(39 - 80*sw^2 + 128*sw^4) + 4*d*(-3 - 85*sw^2 + 136*sw^4)) + 
        2*(-36*d^3 + 3*d^4 + 8*(33 + 50*sw^2 - 80*sw^4) - 
          4*d^2*(-42 - 5*sw^2 + 8*sw^4) + 4*d*(-87 - 50*sw^2 + 80*sw^4))*t))/
      ((-4 + d)*sw^2*(1 - sw^2)) - 
     (s*(-24*d^2*(3 - 20*sw^2 + 32*sw^4) + d^3*(9 - 60*sw^2 + 96*sw^4) - 
         12*d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 64*sw^8) + 
         8*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)) + 
       2*(-468 + 3120*sw^2 - 4784*sw^4 - 640*sw^6 + 512*sw^8 - 
         36*d^2*(3 - 20*sw^2 + 32*sw^4) + d^3*(9 - 60*sw^2 + 96*sw^4) - 
         4*d*(-99 + 660*sw^2 - 1030*sw^4 - 80*sw^6 + 64*sw^8))*t)/
      (sw^4*(1 - sw^2)^2)))/(Pi^d*s), 
  ((-I/27)*2^(2 - d)*EL^6*t*((-8 + 3*d)*s^2 + 8*s*t + 16*t^2))/(Pi^d*s), 
  ((-I/81)*2^(-4 - d)*EL^6*(32*(-4 + d)*mz^4*sw^2*(1 - sw^2)*
      (9 - 30*sw^2 + 52*sw^4)*((-2 + d)*s^2 + 4*s*t + 4*t^2) + 
     2*mz^2*s*((-2 + d)*s^2*(72*d^3*sw^2*(1 - sw^2) - 
         8*(27 - 416*sw^8 - 6*sw^4*(-3 + 20*(1 - sw^2)) + 
           18*sw^2*(-5 + 32*(1 - sw^2)) + 4*sw^6*(125 + 52*(1 - sw^2))) + 
         2*d*(81 - 416*sw^8 - 6*sw^4*(-81 + 20*(1 - sw^2)) + 
           36*sw^2*(-10 + 51*(1 - sw^2)) + 4*sw^6*(125 + 52*(1 - sw^2))) - 
         9*d^2*(3 + 26*sw^4 + sw^2*(-15 + 104*(1 - sw^2)))) - 
       2*(-4 + d)*s*(-45*d*(3 - 15*sw^2 + 26*sw^4) + 
         9*d^2*(3 - 15*sw^2 + 26*sw^4) + 4*(54 + 416*sw^8 - 
           9*sw^2*(35 + 4*(1 - sw^2)) + 12*sw^4*(57 + 10*(1 - sw^2)) - 
           4*sw^6*(125 + 52*(1 - sw^2))))*t - 4*(-4 + d)*
        (27 + 832*sw^8 - 9*sw^2*(25 + 8*(1 - sw^2)) + 
         6*sw^4*(111 + 40*(1 - sw^2)) - 8*sw^6*(125 + 52*(1 - sw^2)))*t^2) - 
     3*s^2*((-2 + d)*s^2*(48*d^3*sw^2*(1 - sw^2) - 
         8*(-27 + 416*sw^8 + 20*sw^6*(-25 + 8*(1 - sw^2)) + 
           30*sw^2*(3 + 16*(1 - sw^2)) - 2*sw^4*(9 + 40*(1 - sw^2))) + 
         3*d^2*(9 + 78*sw^4 - sw^2*(45 + 208*(1 - sw^2))) + 
         2*d*(-81 + 416*sw^8 + 72*sw^2*(5 + 19*(1 - sw^2)) - 
           6*sw^4*(81 + 40*(1 - sw^2)) + sw^6*(-500 + 416*(1 - sw^2)))) + 
       2*s*(-81*d^2*(3 - 15*sw^2 + 26*sw^4) + 9*d^3*(3 - 15*sw^2 + 26*sw^4) - 
         16*(54 + 416*sw^8 + sw^4*(684 - 400*(1 - sw^2)) + 
           sw^2*(-315 + 96*(1 - sw^2)) + sw^6*(-500 + 672*(1 - sw^2))) + 
         4*d*(189 + 416*sw^8 + sw^4*(1854 - 560*(1 - sw^2)) + 
           30*sw^2*(-33 + 4*(1 - sw^2)) + sw^6*(-500 + 928*(1 - sw^2))))*t + 
       4*(-4 + d)*(27 + 832*sw^8 + sw^4*(666 - 480*(1 - sw^2)) + 
         9*sw^2*(-25 + 16*(1 - sw^2)) + 8*sw^6*(-125 + 104*(1 - sw^2)))*
        t^2)))/((-4 + d)*mz^2*Pi^d*(mz^2 - s)*s^3*sw^4*(1 - sw^2)^2), 
  ((I/27)*EL^6*(mz^2*(s*(-93*d^3 + 6*d^4 - 24*d*(50 - 5*sw^2 + 8*sw^4) + 
         8*(129 - 20*sw^2 + 32*sw^4) + d^2*(510 - 20*sw^2 + 32*sw^4)) + 
       2*(8 - 6*d + d^2)*(3 - 20*sw^2 + 32*sw^4)*t) - 
     s*(s*(-93*d^3 + 6*d^4 + 8*(147 + 40*sw^2 - 64*sw^4) + 
         8*d*(-165 - 5*sw^2 + 8*sw^4) + d^2*(534 - 20*sw^2 + 32*sw^4)) + 
       2*(-16 + 2*d + d^2)*(3 - 20*sw^2 + 32*sw^4)*t)))/
   ((-4 + d)*(2*Pi)^d*(mz^2 - s)*s*sw^2*(1 - sw^2)), 
  ((-I/27)*2^(-5 - 2*d)*EL^6*t*(9*d^3*(2*Pi)^d*s - 
     4*mz^2*(9*d^3*(2*Pi)^d + 2^(1 + d)*Pi^d*
        (-6*d^2*(9 + 96*sw^4 + 20*sw^2*(-2 - sw^2)) + 
         3*d^3*sw^2*(-10 + 16*sw^2 + 3*(1 - sw^2)) - 
         2*d*(-99 + 64*sw^8 + 16*sw^6*(-4 - sw^2) - 10*sw^4*(104 - sw^2) + 
           sw^2*(660 - 246*(1 - sw^2))) - 2*(117 + 1196*sw^4 + 160*sw^6 - 
           128*sw^8 + 12*sw^2*(-65 + 27*(1 - sw^2))))) + 
     2^(2 + d)*Pi^d*(s*(3*d^3*sw^2*(-5 + 8*sw^2 + 2*(1 - sw^2)) + 
         18*(3 + 32*sw^4 + 4*sw^2*(-5 + 2*(1 - sw^2))) - 
         3*d^2*(3 + 32*sw^4 + 4*sw^2*(-5 + 2*(1 - sw^2))) + 
         d*(-9 + 64*sw^8 + sw^2*(60 - 24*(1 - sw^2)) + 
           16*sw^6*(-5 + 4*(1 - sw^2)) - 10*sw^4*(7 + 4*(1 - sw^2)))) + 
       2*(-18*d*(3 + 32*sw^4 + 4*sw^2*(-5 + 2*(1 - sw^2))) + 
         3*d^2*(3 + 32*sw^4 + 4*sw^2*(-5 + 2*(1 - sw^2))) + 
         2*(45 + 128*sw^8 + sw^4*(532 - 80*(1 - sw^2)) + 
           60*sw^2*(-5 + 2*(1 - sw^2)) + 32*sw^6*(-5 + 4*(1 - sw^2))))*t)))/
   (Pi^(2*d)*s*sw^4*(1 - sw^2)^2), 
  ((-I/27)*EL^6*t*(-3*d^3*(2*Pi)^d*s^2 + 
     mz^4*(-3*d^3*(2*Pi)^d + 2^(2 + d)*Pi^d*(-6 + 6*d^2 + 40*sw^2 - 64*sw^4 + 
         3*d*(-3 - 5*sw^2 + 8*sw^4))) + 2^(1 + d)*mz^2*Pi^d*
      (s*(-18*d^2 + 3*d^3 - 4*d*(-3 - 5*sw^2 + 8*sw^4) + 
         16*(3 - 5*sw^2 + 8*sw^4)) + 4*(30 - 18*d + 3*d^2 - 20*sw^2 + 
         32*sw^4)*t) + 2^(2 + d)*Pi^d*
      (s^2*(-6 + 6*d^2 + 40*sw^2 - 64*sw^4 + 3*d*(-3 - 5*sw^2 + 8*sw^4)) + 
       2*s*(-6 + 3*d - 20*sw^2 + 32*sw^4)*t + 4*(3 - 20*sw^2 + 32*sw^4)*
        t^2)))/(2^(2*(1 + d))*Pi^(2*d)*s*sw^2*(1 - sw^2)), 0, 
  ((-I/81)*2^(-7 - 2*d)*EL^6*(2^(7 + d)*mz^4*Pi^d*sw^2*(1 - sw^2)*
      (9 - 30*sw^2 + 52*sw^4)*((-2 + d)*s^2 + 4*s*t + 4*t^2) + 
     8*s^2*(-27*d^2*(2*Pi)^d*s^2*(-1 + 5*sw^2) + 2^(1 + d)*Pi^d*
        (s^2*(117*d^2*sw^4 + 2*(27 - 416*sw^8 + sw^6*(500 - 416*(1 - sw^2)) - 
             18*sw^2*(5 + 4*(1 - sw^2)) + 6*sw^4*(3 + 40*(1 - sw^2))) + 
           d*(-54 + 416*sw^8 + 9*sw^2*(25 + 8*(1 - sw^2)) - 
             12*sw^4*(21 + 20*(1 - sw^2)) + sw^6*(-500 + 416*(1 - sw^2)))) + 
         s*(-45*d*(3 - 15*sw^2 + 26*sw^4) + 9*d^2*(3 - 15*sw^2 + 26*sw^4) + 
           4*(54 + 416*sw^8 + sw^4*(684 - 240*(1 - sw^2)) + 
             9*sw^2*(-35 + 8*(1 - sw^2)) + sw^6*(-500 + 416*(1 - sw^2))))*t + 
         2*(27 + 832*sw^8 + sw^4*(666 - 480*(1 - sw^2)) + 
           9*sw^2*(-25 + 16*(1 - sw^2)) + 8*sw^6*(-125 + 104*(1 - sw^2)))*
          t^2)) - 4*mz^2*s*(81*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (s^2*(9*d^2*sw^2*(-15 + 26*sw^2) - 2*(-81 + 832*sw^8 + 
             18*sw^2*(5 + 16*(1 - sw^2)) - 12*sw^4*(-9 + 80*(1 - sw^2)) + 
             8*sw^6*(-125 + 208*(1 - sw^2))) + 2*d*(-81 + 416*sw^8 + 
             36*sw^2*(5 + 4*(1 - sw^2)) - 60*sw^4*(3 + 8*(1 - sw^2)) + 
             sw^6*(-500 + 832*(1 - sw^2)))) + 
         s*(-45*d*(9 - 30*sw^2 + 52*sw^4) + 9*d^2*(9 - 30*sw^2 + 52*sw^4) + 
           8*(81 + 416*sw^8 + sw^4*(756 - 480*(1 - sw^2)) + 
             72*sw^2*(-5 + 2*(1 - sw^2)) + sw^6*(-500 + 832*(1 - sw^2))))*t + 
         2*(81 + 1664*sw^8 + 18*sw^2*(-35 + 32*(1 - sw^2)) - 
           60*sw^4*(-27 + 32*(1 - sw^2)) + 16*sw^6*(-125 + 208*(1 - sw^2)))*
          t^2))))/(Pi^(2*d)*s^2*(mz^3 - mz*s)^2*sw^4*(1 - sw^2)^2), 0, 0, 0, 
  0, 0, ((I/27)*2^(-4 - d)*(-2 + d)*EL^6*(d*s*(9 - 60*sw^2 + 96*sw^4) + 
     2*s*(-9 + 60*sw^2 - 44*sw^4 - 160*sw^6 + 128*sw^8) + 
     2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)*t))/
   (Pi^d*s*sw^4*(1 - sw^2)^2), 
  ((-I/27)*4^(-2 - d)*EL^6*(9*(-13 + d)*d^2*(2*Pi)^d*s - 
     3*2^(1 + d)*(-60 + 50*d - 13*d^2 + d^3)*mz^2*Pi^d*
      (3 - 20*sw^2 + 32*sw^4) + 2^(1 + d)*Pi^d*
      (s*(-306 + 2040*sw^2 - 3056*sw^4 - 640*sw^6 + 512*sw^8 - 
         78*d^2*sw^2*(-5 + 8*sw^2) + 6*d^3*sw^2*(-5 + 8*sw^2) + 
         81*d*(3 - 20*sw^2 + 32*sw^4)) + 4*(9 - 60*sw^2 + 200*sw^4 - 
         320*sw^6 + 256*sw^8)*t)))/(Pi^(2*d)*sw^4*(1 - sw^2)^2), 
  ((-I/27)*4^(-3 - d)*EL^6*(4*mz^2*t*(9*d^3*(2*Pi)^d*s + 
       2^(1 + d)*Pi^d*(s*(6*d^3*sw^2*(-5 + 8*sw^2) - 
           9*d^2*(3 - 20*sw^2 + 32*sw^4) - 2*d*(-9 + 60*sw^2 - 70*sw^4 - 
             80*sw^6 + 64*sw^8) + 8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 
             64*sw^8)) + 2*(90 - 600*sw^2 + 1064*sw^4 - 320*sw^6 + 256*sw^8 - 
           18*d*(3 - 20*sw^2 + 32*sw^4) + d^2*(9 - 60*sw^2 + 96*sw^4))*t)) + 
     2*mz^4*(9*d^3*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
        (2*s*(3*d^3*sw^2*(-5 + 8*sw^2) - 6*d^2*(3 - 20*sw^2 + 32*sw^4) - 
           3*d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 64*sw^8) + 
           2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)) + 
         (468 - 3120*sw^2 + 4784*sw^4 + 640*sw^6 - 512*sw^8 + 
           d^3*(-9 + 60*sw^2 - 96*sw^4) + 36*d^2*(3 - 20*sw^2 + 32*sw^4) + 
           4*d*(-99 + 660*sw^2 - 1030*sw^4 - 80*sw^6 + 64*sw^8))*t)) + 
     t*(-9*d^3*(2*Pi)^d*s^2 + 2^(2 + d)*Pi^d*
        (s^2*(-3*d^3*sw^2*(-5 + 8*sw^2) + 6*d^2*(3 - 20*sw^2 + 32*sw^4) + 
           3*d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 64*sw^8) - 
           2*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 256*sw^8)) + 
         2*s*(d*(9 - 60*sw^2 + 96*sw^4) + 2*(-9 + 60*sw^2 - 44*sw^4 - 
             160*sw^6 + 128*sw^8))*t + 4*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
           256*sw^8)*t^2))))/(Pi^(2*d)*s*sw^4*(1 - sw^2)^2), 
  ((-I/27)*2^(-5 - 2*d)*EL^6*((2^(8 + d)*(32 - 14*d + d^2)*Pi^d*(s + 2*t))/
      (-4 + d) + (9*2^(2 + d)*(-4 + d)*Pi^d*((-4 - 2*d + d^2)*s + 
        2*(14 - 8*d + d^2)*t))/sw^4 + 
     (2^(3 + d)*Pi^d*(s*(-450*d^2 + 45*d^3 + d*(1488 + 60*sw^2 - 96*sw^4) + 
          32*(-51 - 5*sw^2 + 8*sw^4)) + mz^2*(-63*d^3 + 3*d^4 + 
          96*(12 - 5*sw^2 + 8*sw^4) + 6*d^2*(71 - 10*sw^2 + 16*sw^4) - 
          4*d*(294 - 85*sw^2 + 136*sw^4)) + 2*(-36*d^3 + 3*d^4 + 
          2*d^2*(87 - 10*sw^2 + 16*sw^4) + 16*(24 - 25*sw^2 + 40*sw^4) - 
          8*d*(51 - 25*sw^2 + 40*sw^4))*t))/((-4 + d)*sw^2*(1 - sw^2)) + 
     (8*(27*d^3*(2*Pi)^d*s + mz^2*(-3*d^3*(15 + d)*(2*Pi)^d + 
          2^(1 + d)*Pi^d*(-9*d^3 + 3*d^4 + 48*(12 - 5*sw^2 + 8*sw^4) + 
            3*d^2*(71 - 10*sw^2 + 16*sw^4) - 2*d*(294 - 85*sw^2 + 
              136*sw^4))) + 2^(1 + d)*Pi^d*
         (s*(-225*d^2 + 9*d^3 + d*(744 + 30*sw^2 - 48*sw^4) + 
            16*(-51 - 5*sw^2 + 8*sw^4)) + (-36*d^3 + 3*d^4 + 
            2*d^2*(87 - 10*sw^2 + 16*sw^4) + 16*(24 - 25*sw^2 + 40*sw^4) - 
            8*d*(51 - 25*sw^2 + 40*sw^4))*t)))/((-4 + d)*sw^2*(1 - sw^2)) + 
     (-9*d^3*(2*Pi)^d*s*(s - t) + 2^(1 + d)*Pi^d*
        (s^2*(-9*d^2*(3 - 20*sw^2 + 32*sw^4) + d^3*(9 - 30*sw^2 + 48*sw^4) - 
           2*d*(-9 + 60*sw^2 - 70*sw^4 - 80*sw^6 + 64*sw^8) + 
           8*(9 - 60*sw^2 + 122*sw^4 - 80*sw^6 + 64*sw^8)) + 
         s*(9*d^3*(1 - 10*sw^2 + 16*sw^4) - 144*(3 - 20*sw^2 + 32*sw^4) - 
           45*d^2*(3 - 20*sw^2 + 32*sw^4) + 4*d*(108 - 720*sw^2 + 1165*sw^4 - 
             40*sw^6 + 32*sw^8))*t + (-36*d^2*(3 - 20*sw^2 + 32*sw^4) + 
           d^3*(9 - 60*sw^2 + 96*sw^4) - 8*(63 - 420*sw^2 + 698*sw^4 - 
             80*sw^6 + 64*sw^8) + d*(414 - 2760*sw^2 + 4520*sw^4 - 320*sw^6 + 
             256*sw^8))*t^2))/(sw^4*(1 - sw^2)^2*(s + t))))/(Pi^(2*d)*s), 
  ((-I/27)*2^(2 - d)*EL^6*(s + t)*(3*d*s^2 + 8*t*(3*s + 2*t)))/(Pi^d*s), 
  ((-I/27)*2^(-5 - 2*d)*EL^6*(2^(3 + d)*Pi^d*sw^2*(1 - sw^2)*(s + t)^2*
      (s*(66*d^2 - 3*d^3 + 32*(15 + 5*sw^2 - 8*sw^4) + 
         4*d*(-84 - 5*sw^2 + 8*sw^4)) + mz^2*(-288 - 90*d^2 + 9*d^3 + 
         4*d*(72 - 5*sw^2 + 8*sw^4)) + 8*(-18*d + 3*d^2 + 
         4*(6 + 5*sw^2 - 8*sw^4))*t) - 9*d^3*(2*Pi)^d*s*(s^2 + t^2) + 
     2^(1 + d)*Pi^d*(s^3*(-6*d^3*sw^2*(-5 + 8*sw^2) + 
         33*d^2*(3 - 20*sw^2 + 32*sw^4) + 4*d*(-126 + 840*sw^2 - 1331*sw^4 - 
           40*sw^6 + 32*sw^8) - 16*(-45 + 300*sw^2 - 454*sw^4 - 80*sw^6 + 
           64*sw^8)) + s^2*(d^3*(-9 + 60*sw^2 - 96*sw^4) + 
         78*d^2*(3 - 20*sw^2 + 32*sw^4) + 8*d*(-153 + 1020*sw^2 - 1619*sw^4 - 
           40*sw^6 + 32*sw^8) - 96*(-18 + 120*sw^2 - 179*sw^4 - 40*sw^6 + 
           32*sw^8))*t + s*(-6*d^3*sw^2*(-5 + 8*sw^2) + 
         57*d^2*(3 - 20*sw^2 + 32*sw^4) + 4*d*(-234 + 1560*sw^2 - 2483*sw^4 - 
           40*sw^6 + 32*sw^8) - 48*(-27 + 180*sw^2 - 262*sw^4 - 80*sw^6 + 
           64*sw^8))*t^2 + 4*(-18*d*(3 - 20*sw^2 + 32*sw^4) + 
         d^2*(9 - 60*sw^2 + 96*sw^4) - 8*(-9 + 60*sw^2 - 83*sw^4 - 40*sw^6 + 
           32*sw^8))*t^3) + 4*mz^2*(9*d^3*(2*Pi)^d*(s^2 + t^2) + 
       2^(1 + d)*Pi^d*(s^2*(6*d^3*sw^2*(-5 + 8*sw^2) - 
           18*d^2*(3 - 20*sw^2 + 32*sw^4) - 4*(63 - 420*sw^2 + 698*sw^4 - 
             80*sw^6 + 64*sw^8) + d*(207 - 1380*sw^2 + 2260*sw^4 - 160*sw^6 + 
             128*sw^8)) + s*(-36*d^2*(3 - 20*sw^2 + 32*sw^4) + 
           d^3*(9 - 60*sw^2 + 96*sw^4) - 8*(63 - 420*sw^2 + 698*sw^4 - 
             80*sw^6 + 64*sw^8) + d*(414 - 2760*sw^2 + 4520*sw^4 - 320*sw^6 + 
             256*sw^8))*t + (6*d^3*sw^2*(-5 + 8*sw^2) - 
           18*d^2*(3 - 20*sw^2 + 32*sw^4) - 4*(63 - 420*sw^2 + 698*sw^4 - 
             80*sw^6 + 64*sw^8) + d*(207 - 1380*sw^2 + 2260*sw^4 - 160*sw^6 + 
             128*sw^8))*t^2))))/(Pi^(2*d)*s*sw^4*(1 - sw^2)^2*(s + t)), 
  ((I/27)*EL^6*(s + t)*(3*d^3*(2*Pi)^d*s^2 + 
     mz^4*(-3*d^3*(2*Pi)^d + 2^(1 + d)*Pi^d*(27*d^2 + 
         16*(12 - 5*sw^2 + 8*sw^4) - 6*d*(22 - 5*sw^2 + 8*sw^4))) + 
     2^(1 + d)*mz^2*Pi^d*(s*(-432 - 60*d^2 + 3*d^3 + 
         4*d*(75 - 5*sw^2 + 8*sw^4)) - 4*(-18*d + 3*d^2 + 
         4*(6 + 5*sw^2 - 8*sw^4))*t) - 2^(1 + d)*Pi^d*
      (3*s^2*(-72 - 9*d^2 + d^3 + 2*d*(24 - 5*sw^2 + 8*sw^4)) + 
       12*s*(d + 4*sw^2*(-5 + 8*sw^2))*t + 8*(3 - 20*sw^2 + 32*sw^4)*t^2)))/
   (2^(2*(1 + d))*Pi^(2*d)*s*sw^2*(1 - sw^2)), 
  ((-I/27)*4^(-3 - d)*EL^6*(-9*d^3*(2*Pi)^d*s^2*(s + 3*t) + 
     2^(1 + d)*Pi^d*(3*s^3*(d^3*(3 - 10*sw^2 + 16*sw^4) - 
         72*(3 - 20*sw^2 + 32*sw^4) - 9*d^2*(3 - 20*sw^2 + 32*sw^4) + 
         4*d*(36 - 240*sw^2 + 397*sw^4 - 40*sw^6 + 32*sw^8)) + 
       3*s^2*(2*d^3*(3 - 5*sw^2 + 8*sw^4) - 9*d^2*(3 - 20*sw^2 + 32*sw^4) + 
         4*d*(39 - 260*sw^2 + 429*sw^4 - 40*sw^6 + 32*sw^8) + 
         8*(-27 + 180*sw^2 - 236*sw^4 - 160*sw^6 + 128*sw^8))*t + 
       4*s*(d*(9 - 60*sw^2 + 96*sw^4) + 2*(9 - 60*sw^2 + 356*sw^4 - 
           800*sw^6 + 640*sw^8))*t^2 + 8*(9 - 60*sw^2 + 200*sw^4 - 320*sw^6 + 
         256*sw^8)*t^3) - 4*mz^2*(s + t)*(9*d^3*(2*Pi)^d*s + 
       2^(2 + d)*Pi^d*(s*(3*d^3*sw^2*(-5 + 8*sw^2) - 
           108*(3 - 20*sw^2 + 32*sw^4) - 15*d^2*(3 - 20*sw^2 + 32*sw^4) + 
           d*(225 - 1500*sw^2 + 2426*sw^4 - 80*sw^6 + 64*sw^8)) + 
         (d^2*(-9 + 60*sw^2 - 96*sw^4) + 18*d*(3 - 20*sw^2 + 32*sw^4) + 
           8*(-9 + 60*sw^2 - 83*sw^4 - 40*sw^6 + 32*sw^8))*t)) + 
     2*mz^4*(27*d^3*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
        (s*(18*d^3*sw^2*(-5 + 8*sw^2) - 63*d^2*(3 - 20*sw^2 + 32*sw^4) - 
           24*(45 - 300*sw^2 + 506*sw^4 - 80*sw^6 + 64*sw^8) + 
           10*d*(81 - 540*sw^2 + 890*sw^4 - 80*sw^6 + 64*sw^8)) + 
         (-36*d^2*(3 - 20*sw^2 + 32*sw^4) + d^3*(9 - 60*sw^2 + 96*sw^4) - 
           8*(63 - 420*sw^2 + 698*sw^4 - 80*sw^6 + 64*sw^8) + 
           d*(414 - 2760*sw^2 + 4520*sw^4 - 320*sw^6 + 256*sw^8))*t))))/
   (Pi^(2*d)*s*sw^4*(1 - sw^2)^2), (I/288)*EL^6*
   ((2^(8 - d)*((-2 + d)*s^2 + 4*s*t + 4*t^2))/(Pi^d*s^3) - 
    (2^(6 - d)*((-2 + d)*s^2 + 4*s*t + 4*t^2))/((-1 + d)*mz^4*Pi^d*s*
      (1 - sw^2)^2) + (2^(4 - d)*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
     ((-1 + d)*mz^4*Pi^d*s*sw^2*(1 - sw^2)^2) + 
    (2^(4 - d)*((-2 + d)*s^2 + 4*s*t + 4*t^2))/(mz^2*Pi^d*s^2*sw^2*
      (1 - sw^2)) - (2^(5 - d)*(-1 + 4*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
     ((-1 + d)*Pi^d*s^2*(-mz^2 + s)*sw^2) - 
    (2^(4 - d)*(-1 + 4*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
     ((-1 + d)*mz^4*Pi^d*(mz^2 - s)*sw^2*(1 - sw^2)^2) + 
    (2^(5 - d)*(-1 + 4*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
     ((-1 + d)*Pi^d*s^2*(-mz^2 + s)*(1 - sw^2)) + 
    (2^(5 - d)*(1 - 2*sw^2)*(-1 + 4*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
     (Pi^d*(mz^2 - s)*s^2*sw^2*(1 - sw^2)) + 
    (2^(5 - d)*(1 - 2*sw^2)*(-1 + 4*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
     ((-1 + d)*Pi^d*s^2*(-mz^2 + s)*sw^2*(1 - sw^2)) - 
    (2^(4 - d)*(-3 + 8*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
     ((-1 + d)*Pi^d*s^2*(-mz^2 + s)*sw^2) - 
    (2^(3 - d)*(-3 + 8*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
     ((-1 + d)*mz^4*Pi^d*(mz^2 - s)*sw^2*(1 - sw^2)^2) + 
    (2^(4 - d)*(-3 + 8*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
     ((-1 + d)*Pi^d*s^2*(-mz^2 + s)*(1 - sw^2)) + 
    (2^(4 - d)*(1 - 2*sw^2)*(-3 + 8*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
     (Pi^d*(mz^2 - s)*s^2*sw^2*(1 - sw^2)) + 
    (2^(4 - d)*(1 - 2*sw^2)*(-3 + 8*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
     ((-1 + d)*Pi^d*s^2*(-mz^2 + s)*sw^2*(1 - sw^2)) + 
    (2^(1 - d)*(s^2*(3*d^2 - 4*d*(3 + 2*sw^2) + 4*(3 + 4*sw^2)) + 
       2*s*(24 - 15*d + 3*d^2 - 16*sw^2)*t + 4*(3 - 8*sw^2)*t^2))/
     (mz^2*Pi^d*s*(-mz^2 + s)*sw^4*(1 - sw^2)^2) + 
    (2^(1 - 2*d)*(3*d^2*(2*Pi)^d*s^2 - 2^(1 + d)*Pi^d*
        (s^2*(-6 - 8*sw^2 + d^2*sw^2 + 8*sw^4 + d*(6 + 2*sw^2 - 4*sw^4)) + 
         s*(8 - 5*d + d^2 - 8*sw^2)*(-3 + 2*sw^2)*t - 
         2*(3 - 14*sw^2 + 8*sw^4)*t^2)))/(mz^2*Pi^(2*d)*s*(-mz^2 + s)*sw^4*
      (1 - sw^2)^2) + (4^(1 - d)*(3*d^2*(2*Pi)^d*s^2 + 
       2^(1 + d)*Pi^d*(2*s^2*(3 + 10*sw^2 - 16*sw^4 + 
           d*(-3 - 5*sw^2 + 8*sw^4)) + s*(-15*d + 3*d^2 + 
           8*(3 - 5*sw^2 + 8*sw^4))*t + 2*(3 - 20*sw^2 + 32*sw^4)*t^2)))/
     ((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s*sw^4) + 
    (4^(1 - d)*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
         s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
         2*(3 - 20*sw^2 + 32*sw^4)*t^2)))/((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*s*
      (1 - sw^2)^2) + (2^(1 - 2*d)*(1 - 2*sw^2)^2*(3*d^2*(2*Pi)^d*s^2 + 
       2^(1 + d)*Pi^d*(2*s^2*(3 + 10*sw^2 - 16*sw^4 + 
           d*(-3 - 5*sw^2 + 8*sw^4)) + s*(-15*d + 3*d^2 + 
           8*(3 - 5*sw^2 + 8*sw^4))*t + 2*(3 - 20*sw^2 + 32*sw^4)*t^2)))/
     (Pi^(2*d)*(mz^2 - s)^2*s*sw^4*(1 - sw^2)^2) - 
    (2^(1 - 2*d)*(-(2^(1 + d)*Pi^d*sw^2*(1 - sw^2)*
         (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
          2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          4*(3 - 20*sw^2 + 32*sw^4)*t^2)) + sw^4*(3*d^2*(2*Pi)^d*s^2 + 
         2^(1 + d)*Pi^d*(2*s^2*(3 + 10*sw^2 - 16*sw^4 + 
             d*(-3 - 5*sw^2 + 8*sw^4)) + s*(-15*d + 3*d^2 + 
             8*(3 - 5*sw^2 + 8*sw^4))*t + 2*(3 - 20*sw^2 + 32*sw^4)*t^2)) + 
       (1 - sw^2)^2*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
          (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
           s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
           2*(3 - 20*sw^2 + 32*sw^4)*t^2))))/((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*
      s*sw^4*(1 - sw^2)^2) + (2^(8 - d)*(-1 + d)*((-2 + d)*s^2 + 4*s*t + 
       4*t^2)*GaugeXi[W])/(d*Pi^d*s^3) - 
    (2^(6 - d)*(-1 + d)*(-1 + 4*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
      GaugeXi[W])/(d*Pi^d*s^2*(-mz^2 + s)*sw^2) - 
    (2^(5 - d)*(-1 + d)*(-3 + 8*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
      GaugeXi[W])/(d*Pi^d*s^2*(-mz^2 + s)*sw^2) + 
    (2^(3 - d)*(-1 + d)*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
         4*d*(-3 - 5*sw^2 + 8*sw^4)) + 2*s*(-15*d + 3*d^2 + 
         8*(3 - 5*sw^2 + 8*sw^4))*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2)*
      GaugeXi[W])/(d*Pi^d*(mz^2 - s)^2*s*sw^4) + 
    (3*2^(2 - d)*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
      (s^2 + (6 - 4*d)*mz^2*s*(1 - sw^2) - mz^4*(1 - sw^2)^2 + 
       (-(mz^2*s*(1 - sw^2)) + mz^4*(1 - sw^2)^2)*GaugeXi[W]))/
     ((-1 + d)*mz^4*Pi^d*s^3*sw^2*(1 - sw^2)^2) + 
    (2^(1 - 2*d)*(-3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (s^2*(-6 - 8*sw^2 + d*(6 + 4*sw^2)) + s*(-24 + 15*d - 3*d^2 + 
           16*sw^2)*t + 2*(-3 + 8*sw^2)*t^2) + 2^(1 + d)*Pi^d*
        (s^2*(3*d^2 - 4*d*(3 + 2*sw^2) + 4*(3 + 4*sw^2)) + 
         2*s*(24 - 15*d + 3*d^2 - 16*sw^2)*t + 4*(3 - 8*sw^2)*t^2)*
        GaugeXi[W] + (-3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
          (s^2*(-6 + 6*d - 8*sw^2 + 4*d*sw^2) + s*(-24 + 15*d - 3*d^2 + 
             16*sw^2)*t + 2*(-3 + 8*sw^2)*t^2))*GaugeXi[W]^2))/
     ((-1 + d)*mz^4*Pi^(2*d)*(mz^2 - s)*sw^4*(1 - sw^2)^2*
      (-1 + GaugeXi[W])^2) + (2^(1 - 2*d)*s*(-3*d^2*(2*Pi)^d*s^2 - 
       2^(1 + d)*Pi^d*(2*s^2*(3 + 10*sw^2 - 16*sw^4 + 
           d*(-3 - 5*sw^2 + 8*sw^4)) + s*(-15*d + 3*d^2 + 
           8*(3 - 5*sw^2 + 8*sw^4))*t + 2*(3 - 20*sw^2 + 32*sw^4)*t^2) + 
       2^(1 + d)*Pi^d*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
           4*d*(-3 - 5*sw^2 + 8*sw^4)) + 2*s*(-15*d + 3*d^2 + 
           8*(3 - 5*sw^2 + 8*sw^4))*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2)*
        GaugeXi[W] - (3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
          (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
           s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
           2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[W]^2))/
     ((-1 + d)*mz^4*Pi^(2*d)*(mz^2 - s)^2*sw^4*(1 - sw^2)^2*
      (-1 + GaugeXi[W])^2) + 
    (3*(-(d^2*(2*Pi)^d*s^3) + 2^(1 + d)*Pi^d*s*(2*(-1 + d)*s^2 - 
         (8 - 5*d + d^2)*s*t - 2*t^2) - mz^2*(1 - sw^2)*
        (-(d^2*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*((2 - 2*d + d^2)*s^2 + 
           (8 - 5*d + d^2)*s*t + 2*t^2)) + 
       (2^(1 + d)*Pi^d*s*((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 4*t^2) + 
         mz^2*(1 - sw^2)*(-5*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
            ((6 - 6*d + 4*d^2)*s^2 + 3*(8 - 5*d + d^2)*s*t + 6*t^2)))*
        GaugeXi[W] - (d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
          (-2*(-1 + d)*s^2 + (8 - 5*d + d^2)*s*t + 2*t^2) + 
         mz^2*(1 - sw^2)*(-7*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
            ((6 - 6*d + 5*d^2)*s^2 + 3*(8 - 5*d + d^2)*s*t + 6*t^2)))*
        GaugeXi[W]^2 + mz^2*(1 - sw^2)*(-3*d^2*(2*Pi)^d*s^2 + 
         2^(1 + d)*Pi^d*(2*(1 - d + d^2)*s^2 + (8 - 5*d + d^2)*s*t + 2*t^2))*
        GaugeXi[W]^3))/((-1 + d)*mz^4*(2*Pi)^(2*d)*s^2*sw^4*(1 - sw^2)^2*
      (-1 + GaugeXi[W])^2) - 
    (3*(-3*d^2*(2*Pi)^d*s^4 + 2^(1 + d)*Pi^d*s^2*
        (2*s^2*(1 + d^2 + 2*sw^2 - d*(1 + sw^2)) + s*(8 - 5*d + d^2 - 8*sw^2)*
          t + 2*(1 - 4*sw^2)*t^2) + mz^4*(1 - sw^2)^2*(-(d^2*(2*Pi)^d*s^2) + 
         2^(1 + d)*Pi^d*(2*s^2*(-1 + d - 2*sw^2 + d*sw^2) - 
           s*(8 - 5*d + d^2 - 8*sw^2)*t + 2*(-1 + 4*sw^2)*t^2)) - 
       2*mz^2*s*(1 - sw^2)*(-11*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
          (s^2*(d^3 - 4*d^2*sw^2 - 6*(1 + 2*sw^2) + 2*d*(5 + 7*sw^2)) + 
           (-3 + 2*d)*s*(8 - 5*d + d^2 - 8*sw^2)*t - 2*(-3 + 2*d)*
            (-1 + 4*sw^2)*t^2)) + 
       (-(2^(1 + d)*Pi^d*s^2*(s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2)) + 
            2*s*(8 - 5*d + d^2 - 8*sw^2)*t + 4*(1 - 4*sw^2)*t^2)) - 
         3*mz^4*(1 - sw^2)^2*(-(d^2*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*
            (2*s^2*(-1 + d - 2*sw^2 + d*sw^2) - s*(8 - 5*d + d^2 - 8*sw^2)*
              t + 2*(-1 + 4*sw^2)*t^2)) + mz^2*s*(1 - sw^2)*
          (d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*(s^2*(4*d^3 - 26*(1 + 2*sw^2) - 
               d^2*(23 + 16*sw^2) + d*(42 + 58*sw^2)) + (-13 + 8*d)*s*
              (8 - 5*d + d^2 - 8*sw^2)*t - 2*(-13 + 8*d)*(-1 + 4*sw^2)*t^2)))*
        GaugeXi[W] + (-3*d^2*(2*Pi)^d*s^4 + 2^(1 + d)*Pi^d*s^2*
          (2*s^2*(1 + d^2 + 2*sw^2 - d*(1 + sw^2)) + 
           s*(8 - 5*d + d^2 - 8*sw^2)*t + 2*(1 - 4*sw^2)*t^2) - 
         2^(2 + d)*(-2 + d)*mz^2*Pi^d*s*(1 - sw^2)*
          (s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2)) + 
           2*s*(8 - 5*d + d^2 - 8*sw^2)*t + 4*(1 - 4*sw^2)*t^2) - 
         3*mz^4*(1 - sw^2)^2*(-5*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
            (s^2*(2 + 3*d^2 + 4*sw^2 - 2*d*(1 + sw^2)) + 
             s*(8 - 5*d + d^2 - 8*sw^2)*t + 2*(1 - 4*sw^2)*t^2)))*
        GaugeXi[W]^2 + mz^2*(1 - sw^2)*(-7*d^2*(2*Pi)^d*s^3 + 
         2^(1 + d)*Pi^d*s*(s^2*(-2 + 3*d^2 - 4*sw^2 + 2*d*(1 + sw^2)) - 
           s*(8 - 5*d + d^2 - 8*sw^2)*t + 2*(-1 + 4*sw^2)*t^2) + 
         mz^2*(1 - sw^2)*(-(d^2*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*
            (s^2*(2 + d^2 + 4*sw^2 - 2*d*(1 + sw^2)) + 
             s*(8 - 5*d + d^2 - 8*sw^2)*t + 2*(1 - 4*sw^2)*t^2)))*
        GaugeXi[W]^3))/((-1 + d)*mz^4*(2*Pi)^(2*d)*(mz^2 - s)*s^2*sw^4*
      (1 - sw^2)^2*(-1 + GaugeXi[W])^2)), 
  ((I/288)*EL^6*((2^(7 - d)*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
       (s - 4*mz^2*(1 - sw^2)*GaugeXi[W]))/(Pi^d*s^3) - 
     (2^(4 - d)*(1 - 2*sw^2)*(-1 + 4*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
       (s - 4*mz^2*(1 - sw^2)*GaugeXi[W]))/(Pi^d*s^2*(-mz^2 + s)*sw^2*
       (1 - sw^2)) + ((s^2*(3*d^2 - 4*d*(3 + 2*sw^2) + 4*(3 + 4*sw^2)) + 
        2*s*(24 - 15*d + 3*d^2 - 16*sw^2)*t + 4*(3 - 8*sw^2)*t^2)*
       (s - 4*mz^2*(1 - sw^2)*GaugeXi[W]))/(mz^4*(2*Pi)^d*(mz^2 - s)*sw^4*
       (1 - sw^2)^2) + 
     ((-(2^(1 + d)*Pi^d*sw^2*(1 - sw^2)*(s^2*(12 + 3*d^2 + 40*sw^2 - 
             64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
           2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
           4*(3 - 20*sw^2 + 32*sw^4)*t^2)) + sw^4*(3*d^2*(2*Pi)^d*s^2 + 
          2^(1 + d)*Pi^d*(2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 
                8*sw^4)) + s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
            2*(3 - 20*sw^2 + 32*sw^4)*t^2)) + (1 - sw^2)^2*
         (3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
           (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
            s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
            2*(3 - 20*sw^2 + 32*sw^4)*t^2)))*
       (s - 4*mz^2*(1 - sw^2)*GaugeXi[W]))/((2*Pi)^(2*d)*(mz^2 - s)^2*s*sw^4*
       (1 - sw^2)^2) + (2^(5 - 2*d)*(d*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
         (-s^2 + 2*s*t + 2*t^2) - 2^(2 + d)*mz^2*Pi^d*(1 - sw^2)*
         ((-2 + d)*s^2 + 4*s*t + 4*t^2)*GaugeXi[W]))/
      (mz^4*Pi^(2*d)*s*(1 - sw^2)^2) + 
     (2^(7 - 2*d)*(-(d*(2*Pi)^d*s^3) + 2^(1 + d)*Pi^d*s*
         (s^2 - 2*s*t - 2*t^2) + 2^(2 + d)*mz^2*Pi^d*(1 - sw^2)*
         ((-2 + d)*s^2 + 4*s*t + 4*t^2)*GaugeXi[W]))/(Pi^(2*d)*s^3) + 
     (3*4^(1 - d)*(-(d*(2*Pi)^d*s^3) + 2^(1 + d)*Pi^d*s*
         (s^2 - 2*s*t - 2*t^2) + 2^(2 + d)*mz^2*Pi^d*(1 - sw^2)*
         ((-2 + d)*s^2 + 4*s*t + 4*t^2)*GaugeXi[W]))/
      (mz^4*Pi^(2*d)*s*sw^2*(1 - sw^2)^2) + 
     (2^(3 - 2*d)*(-3*d*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
         ((1 + d)*s^2 - 2*s*t - 2*t^2) + 2^(2 + d)*mz^2*Pi^d*(1 - sw^2)*
         ((-2 + d)*s^2 + 4*s*t + 4*t^2)*GaugeXi[W]))/
      (mz^4*Pi^(2*d)*s*sw^2*(1 - sw^2)^2) + 
     (4^(2 - d)*(-(d*(2*Pi)^d*s^3) + 2^(1 + d)*Pi^d*s*
         (s^2*(1 + 2*(-2 + d)*sw^2) + 2*s*(-1 + 4*sw^2)*t + 
          2*(-1 + 4*sw^2)*t^2) - 2^(2 + d)*mz^2*Pi^d*(1 - sw^2)*(-1 + 4*sw^2)*
         ((-2 + d)*s^2 + 4*s*t + 4*t^2)*GaugeXi[W]))/
      (Pi^(2*d)*s^2*(-mz^2 + s)*sw^2) + 
     (2^(3 - 2*d)*(-(d*(2*Pi)^d*s^3) + 2^(1 + d)*Pi^d*s*
         (s^2*(1 + 2*(-2 + d)*sw^2) + 2*s*(-1 + 4*sw^2)*t + 
          2*(-1 + 4*sw^2)*t^2) - 2^(2 + d)*mz^2*Pi^d*(1 - sw^2)*(-1 + 4*sw^2)*
         ((-2 + d)*s^2 + 4*s*t + 4*t^2)*GaugeXi[W]))/
      (mz^4*Pi^(2*d)*(mz^2 - s)*sw^2*(1 - sw^2)^2) - 
     (4^(2 - d)*(-(d*(2*Pi)^d*s^3) + 2^(1 + d)*Pi^d*s*
         (s^2*(1 + 2*(-2 + d)*sw^2) + 2*s*(-1 + 4*sw^2)*t + 
          2*(-1 + 4*sw^2)*t^2) - 2^(2 + d)*mz^2*Pi^d*(1 - sw^2)*(-1 + 4*sw^2)*
         ((-2 + d)*s^2 + 4*s*t + 4*t^2)*GaugeXi[W]))/
      (Pi^(2*d)*s^2*(-mz^2 + s)*(1 - sw^2)) - 
     (2^(3 - 2*d)*(-3*d*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
         (s^2*(3 + 4*(-2 + d)*sw^2) + 2*s*(-3 + 8*sw^2)*t + 
          2*(-3 + 8*sw^2)*t^2) - 2^(2 + d)*mz^2*Pi^d*(1 - sw^2)*(-3 + 8*sw^2)*
         ((-2 + d)*s^2 + 4*s*t + 4*t^2)*GaugeXi[W]))/(Pi^(2*d)*(mz^2 - s)*s^2*
       sw^2) + (4^(1 - d)*(-3*d*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
         (s^2*(3 + 4*(-2 + d)*sw^2) + 2*s*(-3 + 8*sw^2)*t + 
          2*(-3 + 8*sw^2)*t^2) - 2^(2 + d)*mz^2*Pi^d*(1 - sw^2)*(-3 + 8*sw^2)*
         ((-2 + d)*s^2 + 4*s*t + 4*t^2)*GaugeXi[W]))/
      (mz^4*Pi^(2*d)*(mz^2 - s)*sw^2*(1 - sw^2)^2) + 
     (2^(3 - 2*d)*(-3*d*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
         (s^2*(3 + 4*(-2 + d)*sw^2) + 2*s*(-3 + 8*sw^2)*t + 
          2*(-3 + 8*sw^2)*t^2) - 2^(2 + d)*mz^2*Pi^d*(1 - sw^2)*(-3 + 8*sw^2)*
         ((-2 + d)*s^2 + 4*s*t + 4*t^2)*GaugeXi[W]))/(Pi^(2*d)*(mz^2 - s)*s^2*
       (1 - sw^2)) - (2^(3 - 2*d)*(1 - 2*sw^2)*(-3*d*(2*Pi)^d*s^3 + 
        2^(1 + d)*Pi^d*s*(s^2*(3 + 4*(-2 + d)*sw^2) + 2*s*(-3 + 8*sw^2)*t + 
          2*(-3 + 8*sw^2)*t^2) - 2^(2 + d)*mz^2*Pi^d*(1 - sw^2)*(-3 + 8*sw^2)*
         ((-2 + d)*s^2 + 4*s*t + 4*t^2)*GaugeXi[W]))/
      (Pi^(2*d)*s^2*(-mz^2 + s)*sw^2*(1 - sw^2)) - 
     (2^(1 - 2*d)*(3*d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
         (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
          s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          2*(3 - 20*sw^2 + 32*sw^4)*t^2) - 4*mz^2*(1 - sw^2)*
         (3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
           (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
            s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
            2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[W]))/
      (Pi^(2*d)*(mz^2 - s)^2*s*sw^4) - 
     (2^(1 - 2*d)*(3*d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
         (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
          s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          2*(3 - 20*sw^2 + 32*sw^4)*t^2) - 4*mz^2*(1 - sw^2)*
         (3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
           (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
            s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
            2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[W]))/
      (Pi^(2*d)*(mz^2 - s)^2*s*(1 - sw^2)^2) + 
     (3*(-(d^2*(2*Pi)^d*s^3) + 2^(1 + d)*Pi^d*s*((2 - 2*d + d^2)*s^2 + 
          (8 - 5*d + d^2)*s*t + 2*t^2) - 2^(1 + d)*Pi^d*
         (s + 2*mz^2*(1 - sw^2))*((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 
          4*t^2)*GaugeXi[W] + (-(d^2*(2*Pi)^d*s^3) + 2^(1 + d)*Pi^d*s*
           ((2 - 2*d + d^2)*s^2 + (8 - 5*d + d^2)*s*t + 2*t^2) + 
          2^(3 + d)*mz^2*Pi^d*(1 - sw^2)*((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*
             s*t + 4*t^2))*GaugeXi[W]^2 - 2^(2 + d)*mz^2*Pi^d*(1 - sw^2)*
         ((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 4*t^2)*GaugeXi[W]^3))/
      (mz^4*(2*Pi)^(2*d)*s*sw^4*(1 - sw^2)^2*(-1 + GaugeXi[W])^2) + 
     (3*(-(d^2*(2*Pi)^d*s^3) + 2^(1 + d)*Pi^d*s*
         (s^2*(2 + d^2 + 4*sw^2 - 2*d*(1 + sw^2)) + 
          s*(8 - 5*d + d^2 - 8*sw^2)*t + 2*(1 - 4*sw^2)*t^2) - 
        2*(d^2*(2*Pi)^d*s^3 + 2^(1 + d)*mz^2*Pi^d*(1 - sw^2)*
           (s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2)) + 
            2*s*(8 - 5*d + d^2 - 8*sw^2)*t + 4*(1 - 4*sw^2)*t^2) - 
          2^(1 + d)*Pi^d*s*(2*s^2*(-1 + d - 2*sw^2 + d*sw^2) - 
            s*(8 - 5*d + d^2 - 8*sw^2)*t + 2*(-1 + 4*sw^2)*t^2))*GaugeXi[W] + 
        (-(d^2*(2*Pi)^d*s^3) + 2^(1 + d)*Pi^d*s*
           (s^2*(2 + d^2 + 4*sw^2 - 2*d*(1 + sw^2)) + 
            s*(8 - 5*d + d^2 - 8*sw^2)*t + 2*(1 - 4*sw^2)*t^2) + 
          2^(3 + d)*mz^2*Pi^d*(1 - sw^2)*(s^2*(4 + d^2 + 8*sw^2 - 
              4*d*(1 + sw^2)) + 2*s*(8 - 5*d + d^2 - 8*sw^2)*t + 
            4*(1 - 4*sw^2)*t^2))*GaugeXi[W]^2 - 2^(2 + d)*mz^2*Pi^d*
         (1 - sw^2)*(s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2)) + 
          2*s*(8 - 5*d + d^2 - 8*sw^2)*t + 4*(1 - 4*sw^2)*t^2)*GaugeXi[W]^3))/
      (mz^4*(2*Pi)^(2*d)*(mz^2 - s)*sw^4*(1 - sw^2)^2*(-1 + GaugeXi[W])^2) - 
     (s*(-(s*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
            (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
             s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
             2*(3 - 20*sw^2 + 32*sw^4)*t^2))) + 
        2*(3*d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
           (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
            s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
            2*(3 - 20*sw^2 + 32*sw^4)*t^2) + 2^(1 + d)*mz^2*Pi^d*(1 - sw^2)*
           (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 
                8*sw^4)) + 2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
            4*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[W] - 
        (3*d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
           (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
            s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
            2*(3 - 20*sw^2 + 32*sw^4)*t^2) + 2^(3 + d)*mz^2*Pi^d*(1 - sw^2)*
           (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 
                8*sw^4)) + 2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
            4*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[W]^2 + 
        4*mz^2*(1 - sw^2)*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
           (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
            s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
            2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[W]^3))/
      (mz^4*(2*Pi)^(2*d)*(mz^2 - s)^2*sw^4*(1 - sw^2)^2*
       (-1 + GaugeXi[W])^2)))/(-1 + d), 
  ((I/288)*EL^6*((2^(8 - d)*(-1 + d)^2*s*((-2 + d)*s^2 + 4*s*t + 4*t^2))/
      (d*Pi^d) + (2^(4 - d)*s*(3*s + 2*mz^2*(1 - sw^2))*
       ((-2 + d)*s^2 + 4*s*t + 4*t^2))/(mz^2*Pi^d*sw^2*(1 - sw^2)) + 
     (2^(3 - d)*(-1 + d)^2*s^3*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
          4*d*(-3 - 5*sw^2 + 8*sw^4)) + 2*s*(-15*d + 3*d^2 + 
          8*(3 - 5*sw^2 + 8*sw^4))*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2))/
      (d*Pi^d*(mz^2 - s)^2*sw^4) + 
     (2^(1 - 2*d)*s^2*(-3*d^2*(2*Pi)^d*s^3 + 3*2^(1 + d)*Pi^d*s*
         (2*s^2*(3 + d^2 + 4*sw^2 - d*(3 + 2*sw^2)) + 
          s*(24 - 15*d + 3*d^2 - 16*sw^2)*t + 2*(3 - 8*sw^2)*t^2) + 
        2^(1 + d)*mz^2*Pi^d*(1 - sw^2)*(s^2*(3*d^2 - 4*d*(3 + 2*sw^2) + 
            4*(3 + 4*sw^2)) + 2*s*(24 - 15*d + 3*d^2 - 16*sw^2)*t + 
          4*(3 - 8*sw^2)*t^2)))/(mz^2*Pi^(2*d)*(-mz^2 + s)*sw^4*
       (1 - sw^2)^2) - (4^(3 - 2*d)*s^2*(-(d*(5 + d^2)*(2*Pi)^(3*d)*s^2) + 
        2^(1 + 3*d)*Pi^(3*d)*(s^2*(1 - 4*sw^2 + 10*d*sw^2 + 2*d^3*sw^2 + 
            d^2*(2 - 8*sw^2)) + 2*(-1 + d)^2*s*(-1 + 4*sw^2)*t + 
          2*(-1 + d)^2*(-1 + 4*sw^2)*t^2)))/(d*Pi^(4*d)*(-mz^2 + s)*sw^2) - 
     (2^(5 - 4*d)*s^2*(-3*d*(5 + d^2)*(2*Pi)^(3*d)*s^2 + 
        2^(1 + 3*d)*Pi^(3*d)*(s^2*(3 - 8*sw^2 + 20*d*sw^2 + 4*d^3*sw^2 + 
            d^2*(6 - 16*sw^2)) + 2*(-1 + d)^2*s*(-3 + 8*sw^2)*t + 
          2*(-1 + d)^2*(-3 + 8*sw^2)*t^2)))/(d*Pi^(4*d)*(-mz^2 + s)*sw^2) - 
     (2^(1 - 2*d)*s^2*(2*mz^2*(1 - sw^2)*(-3*d^3*(2*Pi)^d*s^2 + 
          2^(1 + d)*Pi^d*(s^2*(d^3*sw^2 + d^2*(9 - 4*sw^4) + 4*(3 + 4*sw^2 - 
                4*sw^4) + 2*d*(-9 - 6*sw^2 + 8*sw^4)) + (-2 + d)*s*
             (8 - 5*d + d^2 - 8*sw^2)*(-3 + 2*sw^2)*t - 2*(-2 + d)*
             (3 - 14*sw^2 + 8*sw^4)*t^2)) + 3*(d^3*(2*Pi)^d*s^3 + 
          2^(1 + d)*Pi^d*s*(s^2*(d^3*(-2 + sw^2) + d^2*(9 - 4*sw^4) + 
              4*(3 + 4*sw^2 - 4*sw^4) + 2*d*(-9 - 6*sw^2 + 8*sw^4)) + 
            (-2 + d)*s*(8 - 5*d + d^2 - 8*sw^2)*(-3 + 2*sw^2)*t - 
            2*(-2 + d)*(3 - 14*sw^2 + 8*sw^4)*t^2))))/
      ((-2 + d)*mz^2*Pi^(2*d)*(-mz^2 + s)*sw^4*(1 - sw^2)^2) - 
     (2^(4 - d)*s*(-1 + 4*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
       (s + mz^2*(1 - sw^2) - mz^2*(1 - sw^2)*GaugeXi[W]))/
      ((-1 + d)*Pi^d*(-mz^2 + s)*(1 - sw^2)) - 
     (2^(3 - d)*s*(-3 + 8*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
       (s + mz^2*(1 - sw^2) - mz^2*(1 - sw^2)*GaugeXi[W]))/
      ((-1 + d)*Pi^d*(-mz^2 + s)*(1 - sw^2)) - 
     (2^(4 - d)*s*((-2 + d)*s^2 + 4*s*t + 4*t^2)*(2*(-1 + 2*d)*s + 
        (-5 + 4*d)*mz^2*(1 - sw^2) + (-s + mz^2*(1 - sw^2))*GaugeXi[W]))/
      ((-1 + d)*mz^2*Pi^d*sw^2*(1 - sw^2)) - 
     (2^(1 - d)*s^2*(s^2*(3*d^2 - 4*d*(3 + 2*sw^2) + 4*(3 + 4*sw^2)) + 
        2*s*(24 - 15*d + 3*d^2 - 16*sw^2)*t + 4*(3 - 8*sw^2)*t^2)*
       (2*(-1 + 2*d)*s + (-5 + 4*d)*mz^2*(1 - sw^2) + (-s + mz^2*(1 - sw^2))*
         GaugeXi[W]))/((-1 + d)*mz^2*Pi^d*(-mz^2 + s)*sw^4*(1 - sw^2)) - 
     (2^(6 - d)*((-2 + d)*s^2 + 4*s*t + 4*t^2)*(4*d^2*s^2 - 
        4*mz^2*s*(1 - sw^2) - d*(7*s^2 - 5*mz^2*s*(1 - sw^2) + 
          mz^4*(1 - sw^2)^2) + d*(-s + mz^2*(1 - sw^2))^2*GaugeXi[W]))/
      ((-1 + d)*d*mz^2*Pi^d*(1 - sw^2)) + 
     (2^(4 - d)*s*(-1 + 4*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
       (4*d^2*s^2 - 4*mz^2*s*(1 - sw^2) - d*(7*s^2 - 5*mz^2*s*(1 - sw^2) + 
          mz^4*(1 - sw^2)^2) + d*(-s + mz^2*(1 - sw^2))^2*GaugeXi[W]))/
      ((-1 + d)*d*mz^2*Pi^d*(-mz^2 + s)*sw^2*(1 - sw^2)) + 
     (3*2^(2 - d)*s*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
       (s^2 + (4 - 8*d)*mz^2*s*(1 - sw^2) + (9 - 8*d)*mz^4*(1 - sw^2)^2 + 
        (mz^2*s*(1 - sw^2) - mz^4*(1 - sw^2)^2)*GaugeXi[W]))/
      ((-1 + d)*mz^4*Pi^d*sw^2*(1 - sw^2)^2) + 
     (3*s^2*(s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2)) + 
        2*s*(8 - 5*d + d^2 - 8*sw^2)*t + 4*(1 - 4*sw^2)*t^2)*
       (s^2 + (4 - 8*d)*mz^2*s*(1 - sw^2) + (9 - 8*d)*mz^4*(1 - sw^2)^2 + 
        (mz^2*s*(1 - sw^2) - mz^4*(1 - sw^2)^2)*GaugeXi[W]))/
      ((-1 + d)*mz^4*(2*Pi)^d*(-mz^2 + s)*sw^4*(1 - sw^2)^2) + 
     (8^(1 - d)*s*(-3 + 8*sw^2)*(4^(1 + d)*d^3*Pi^(2*d)*s^4 - 
        d^2*(2*Pi)^(2*d)*s^2*(15*s^2 - 5*mz^2*s*(1 - sw^2) + 
          mz^4*(1 - sw^2)^2 - 16*s*t - 16*t^2) + 2^(3 + 2*d)*mz^2*Pi^(2*d)*s*
         (1 - sw^2)*(s^2 - 2*s*t - 2*t^2) + 2^(1 + 2*d)*d*Pi^(2*d)*
         (7*s^2*(s^2 - 2*s*t - 2*t^2) + mz^4*(1 - sw^2)^2*
           (s^2 - 2*s*t - 2*t^2) + mz^2*s*(1 - sw^2)*(-7*s^2 + 10*s*t + 
            10*t^2)) + d*(2*Pi)^(2*d)*(-s + mz^2*(1 - sw^2))^2*
         ((-2 + d)*s^2 + 4*s*t + 4*t^2)*GaugeXi[W]))/
      ((-1 + d)*d*mz^2*Pi^(3*d)*(-mz^2 + s)*sw^2*(1 - sw^2)) - 
     (4^(3 - d)*(d*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*(-s^2 + 2*s*t + 2*t^2) + 
        mz^2*(1 - sw^2)*(-3*d*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
           ((-1 + 2*d)*s^2 + 2*s*t + 2*t^2)) + mz^2*(1 - sw^2)*
         (-(d*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*(s^2 - 2*s*t - 2*t^2))*
         GaugeXi[W]))/((-1 + d)*Pi^(2*d)) - 
     (2^(1 - 2*d)*s^2*(9*d^2*(2*Pi)^d*s^3 - 2^(1 + d)*Pi^d*s*
         (s^2*(-6 + 3*d^2 - 20*sw^2 + 32*sw^4 + d*(6 + 10*sw^2 - 16*sw^4)) + 
          s*(15*d - 3*d^2 - 8*(3 - 5*sw^2 + 8*sw^4))*t - 
          2*(3 - 20*sw^2 + 32*sw^4)*t^2) + mz^2*(1 - sw^2)*
         (-3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
           (s^2*(6 + 3*d^2 + 20*sw^2 - 32*sw^4 + 2*d*(-3 - 5*sw^2 + 
                8*sw^4)) + s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
            2*(3 - 20*sw^2 + 32*sw^4)*t^2)) - mz^2*(1 - sw^2)*
         (3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
           (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
            s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
            2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[W]))/
      ((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*(1 - sw^2)^2) - 
     (2^(1 - 8*d)*s^2*(3*2^(2 + 7*d)*d^4*Pi^(7*d)*s^3*(s + 2*t) + 
        2^(4 + 7*d)*mz^2*Pi^(7*d)*s*(1 - sw^2)*
         (s^2*(-3 - 10*sw^2 + 16*sw^4) - 4*s*(3 - 5*sw^2 + 8*sw^4)*t + 
          (-3 + 20*sw^2 - 32*sw^4)*t^2) + d^3*(2*Pi)^(7*d)*s*
         (s^2*(s*(-69 - 80*sw^2 + 128*sw^4) - 162*t) + 15*mz^2*s*(1 - sw^2)*
           (s + 2*t) - 3*mz^4*(1 - sw^2)^2*(s + 2*t)) - 
        2^(1 + 7*d)*d^2*Pi^(7*d)*s*(mz^4*(1 - sw^2)^2*
           (2*s*(-3 - 5*sw^2 + 8*sw^4) - 15*t) + mz^2*s*(1 - sw^2)*
           (s*(36 + 50*sw^2 - 80*sw^4) + 87*t) + 
          s*(6*s^2*(-11 - 25*sw^2 + 40*sw^4) + s*(-201 + 160*sw^2 - 256*sw^4)*
             t - 8*(3 - 20*sw^2 + 32*sw^4)*t^2)) - 2^(2 + 7*d)*d*Pi^(7*d)*
         (7*s^2*(s^2*(3 + 10*sw^2 - 16*sw^4) + 4*s*(3 - 5*sw^2 + 8*sw^4)*t + 
            (3 - 20*sw^2 + 32*sw^4)*t^2) + mz^4*(1 - sw^2)^2*
           (s^2*(3 + 10*sw^2 - 16*sw^4) + 4*s*(3 - 5*sw^2 + 8*sw^4)*t + 
            (3 - 20*sw^2 + 32*sw^4)*t^2) - mz^2*s*(1 - sw^2)*
           (s^2*(27 + 70*sw^2 - 112*sw^4) + 10*s*(9 - 10*sw^2 + 16*sw^4)*t + 
            5*(3 - 20*sw^2 + 32*sw^4)*t^2)) + 
        (-3*2^(3 + 7*d)*d^4*Pi^(7*d)*s^3*(s + 2*t) - 2^(5 + 7*d)*mz^2*
           Pi^(7*d)*s*(1 - sw^2)*(s^2*(-3 - 10*sw^2 + 16*sw^4) - 
            4*s*(3 - 5*sw^2 + 8*sw^4)*t + (-3 + 20*sw^2 - 32*sw^4)*t^2) + 
          d^3*(2*Pi)^(7*d)*s*(-36*mz^2*s*(1 - sw^2)*(s + 2*t) + 
            9*mz^4*(1 - sw^2)^2*(s + 2*t) + s^2*(s*(141 + 160*sw^2 - 
                256*sw^4) + 330*t)) + 2*d^2*s*(-3*2^(2 + 7*d)*mz^2*Pi^(7*d)*s*
             (1 - sw^2)*(s*(-7 - 10*sw^2 + 16*sw^4) - 17*t) + 
            3*mz^4*(2*Pi)^(7*d)*(1 - sw^2)^2*(2*s*(-3 - 5*sw^2 + 8*sw^4) - 
              15*t) + (2*Pi)^(7*d)*s*(2*s^2*(-69 - 155*sw^2 + 248*sw^4) + 
              s*(-417 + 320*sw^2 - 512*sw^4)*t - 16*(3 - 20*sw^2 + 32*sw^4)*t^
                2)) + 4*d*(2^(2 + 7*d)*mz^2*Pi^(7*d)*s*(1 - sw^2)*
             (s^2*(-15 - 40*sw^2 + 64*sw^4) - 3*s*(17 - 20*sw^2 + 32*sw^4)*
               t - 3*(3 - 20*sw^2 + 32*sw^4)*t^2) + 15*(2*Pi)^(7*d)*s^2*
             (s^2*(3 + 10*sw^2 - 16*sw^4) + 4*s*(3 - 5*sw^2 + 8*sw^4)*t + 
              (3 - 20*sw^2 + 32*sw^4)*t^2) + 3*mz^4*(2*Pi)^(7*d)*(1 - sw^2)^2*
             (s^2*(3 + 10*sw^2 - 16*sw^4) + 4*s*(3 - 5*sw^2 + 8*sw^4)*t + 
              (3 - 20*sw^2 + 32*sw^4)*t^2)))*GaugeXi[W] + 
        (3*2^(2 + 7*d)*d^4*Pi^(7*d)*s^3*(s + 2*t) + 2^(4 + 7*d)*mz^2*Pi^(7*d)*
           s*(1 - sw^2)*(s^2*(-3 - 10*sw^2 + 16*sw^4) - 
            4*s*(3 - 5*sw^2 + 8*sw^4)*t + (-3 + 20*sw^2 - 32*sw^4)*t^2) + 
          d^3*(2*Pi)^(7*d)*s*(s^2*(s*(-75 - 80*sw^2 + 128*sw^4) - 174*t) + 
            27*mz^2*s*(1 - sw^2)*(s + 2*t) - 9*mz^4*(1 - sw^2)^2*(s + 2*t)) - 
          2^(1 + 7*d)*d^2*Pi^(7*d)*s*(3*mz^4*(1 - sw^2)^2*
             (2*s*(-3 - 5*sw^2 + 8*sw^4) - 15*t) + 3*mz^2*s*(1 - sw^2)*
             (s*(20 + 30*sw^2 - 48*sw^4) + 49*t) + 
            s*(2*s^2*(-39 - 85*sw^2 + 136*sw^4) + s*(-231 + 160*sw^2 - 
                256*sw^4)*t - 8*(3 - 20*sw^2 + 32*sw^4)*t^2)) - 
          2^(2 + 7*d)*d*Pi^(7*d)*(9*s^2*(s^2*(3 + 10*sw^2 - 16*sw^4) + 
              4*s*(3 - 5*sw^2 + 8*sw^4)*t + (3 - 20*sw^2 + 32*sw^4)*t^2) + 
            3*mz^4*(1 - sw^2)^2*(s^2*(3 + 10*sw^2 - 16*sw^4) + 
              4*s*(3 - 5*sw^2 + 8*sw^4)*t + (3 - 20*sw^2 + 32*sw^4)*t^2) - 
            mz^2*s*(1 - sw^2)*(s^2*(39 + 110*sw^2 - 176*sw^4) + 
              6*s*(23 - 30*sw^2 + 48*sw^4)*t + 9*(3 - 20*sw^2 + 32*sw^4)*t^
                2)))*GaugeXi[W]^2 + d*(2*Pi)^(7*d)*(-s + mz^2*(1 - sw^2))^2*
         (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
          2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          4*(3 - 20*sw^2 + 32*sw^4)*t^2)*GaugeXi[W]^3))/
      ((-1 + d)*d*mz^2*Pi^(8*d)*(mz^2 - s)^2*sw^4*(1 - sw^2)*
       (-1 + GaugeXi[W])^2) - 
     (3*s^2*(d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*(-2*(-1 + d)*s^2 + 
          (8 - 5*d + d^2)*s*t + 2*t^2) - mz^2*(1 - sw^2)*
         (-3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*(2*(1 - d + d^2)*s^2 + 
            (8 - 5*d + d^2)*s*t + 2*t^2)) + 
        (-(2^(1 + d)*Pi^d*s*((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 
             4*t^2)) + mz^2*(1 - sw^2)*(-7*d^2*(2*Pi)^d*s^2 + 
            2^(1 + d)*Pi^d*((6 - 6*d + 5*d^2)*s^2 + 3*(8 - 5*d + d^2)*s*t + 
              6*t^2)))*GaugeXi[W] + (d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
           (-2*(-1 + d)*s^2 + (8 - 5*d + d^2)*s*t + 2*t^2) - 
          mz^2*(1 - sw^2)*(-5*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
             ((6 - 6*d + 4*d^2)*s^2 + 3*(8 - 5*d + d^2)*s*t + 6*t^2)))*
         GaugeXi[W]^2 + mz^2*(1 - sw^2)*(-(d^2*(2*Pi)^d*s^2) + 
          2^(1 + d)*Pi^d*((2 - 2*d + d^2)*s^2 + (8 - 5*d + d^2)*s*t + 2*t^2))*
         GaugeXi[W]^3))/((-1 + d)*mz^4*(2*Pi)^(2*d)*sw^4*(1 - sw^2)^2*
       (-1 + GaugeXi[W])^2)))/s^4, (I/288)*EL^6*
   ((2^(3 - d)*(-s + 2*mz^2*(1 - sw^2))*(s^2 + 4*(-3 + 2*d)*mz^2*s*
        (1 - sw^2) + 4*(-1 + d)*mz^4*(1 - sw^2)^2)*((-2 + d)*s^2 + 4*s*t + 
       4*t^2))/((-1 + d)*mz^4*Pi^d*s^3*sw^2*(1 - sw^2)^2) + 
    (2^(3 - d)*(-1 + 4*sw^2)*(-s + 4*mz^2*(1 - sw^2))*
      (s^2 + 4*(-3 + 2*d)*mz^2*s*(1 - sw^2) + 4*(-1 + d)*mz^4*(1 - sw^2)^2)*
      ((-2 + d)*s^2 + 4*s*t + 4*t^2))/((-1 + d)*mz^4*Pi^d*s^2*(-mz^2 + s)*
      sw^2*(1 - sw^2)^2) + (2^(2 - d)*(-3 + 8*sw^2)*(-s + 4*mz^2*(1 - sw^2))*
      (s^2 + 4*(-3 + 2*d)*mz^2*s*(1 - sw^2) + 4*(-1 + d)*mz^4*(1 - sw^2)^2)*
      ((-2 + d)*s^2 + 4*s*t + 4*t^2))/((-1 + d)*mz^4*Pi^d*s^2*(-mz^2 + s)*
      sw^2*(1 - sw^2)^2) + (3*4^(1 - d)*(-(d*(2*Pi)^d*s^5) + 
       2^(1 + d)*Pi^d*s^3*(s^2 - 2*s*t - 2*t^2) - 2^(1 + d)*(-7 + 4*d)*mz^2*
        Pi^d*s^2*(1 - sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2) + 
       2^(2 + d)*(-5 + 3*d)*mz^4*Pi^d*s*(1 - sw^2)^2*((-2 + d)*s^2 + 4*s*t + 
         4*t^2) + 2^(3 + d)*(-1 + d)*mz^6*Pi^d*(1 - sw^2)^3*
        ((-2 + d)*s^2 + 4*s*t + 4*t^2)))/((-1 + d)*mz^4*Pi^(2*d)*s^3*sw^2*
      (1 - sw^2)^2) - (2^(5 - 2*d)*(-(d*(2*Pi)^d*s^5) + 
       2^(1 + d)*Pi^d*s^3*(s^2 - 2*s*t - 2*t^2) - 2^(3 + d)*(-2 + d)*mz^2*
        Pi^d*s^2*(1 - sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2) + 
       2^(2 + d)*(-11 + 7*d)*mz^4*Pi^d*s*(1 - sw^2)^2*((-2 + d)*s^2 + 4*s*t + 
         4*t^2) + 2^(4 + d)*(-1 + d)*mz^6*Pi^d*(1 - sw^2)^3*
        ((-2 + d)*s^2 + 4*s*t + 4*t^2)))/((-1 + d)*mz^4*Pi^(2*d)*s^3*
      (1 - sw^2)^2) - (3*(2^(1 + 3*d)*Pi^(3*d)*s^2*(-1 + 4*sw^2)*
        (-s + 2*mz^2*(1 - sw^2))*(d*s^2 - 4*d*mz^2*s*(1 - sw^2) + 
         4*(-1 + d)*mz^4*(1 - sw^2)^2)*(-1 + GaugeXi[W])^2 + 
       2^(2 + 3*d)*(1 - d)*mz^4*Pi^(3*d)*(1 - 4*sw^2)*(1 - sw^2)^2*
        (-s + 2*mz^2*(1 - sw^2))*((-2 + d)*s^2 - 4*s*t - 4*(-1 + d)*t^2)*
        (-1 + GaugeXi[W])^2 + 2*(1 - d)*s*(-s/2 + mz^2*(1 - sw^2))*
        (-((2*Pi)^(3*d)*s^2*(s*(-2 + d - 4*sw^2) + 2*(-1 + 4*sw^2)*t)) + 
         2^(2 + 3*d)*mz^2*Pi^(3*d)*s*(1 - sw^2)*(s*(-2 + d - 4*sw^2) + 
           2*(-1 + 4*sw^2)*t) + 2^(2 + 3*d)*mz^4*Pi^(3*d)*(1 - sw^2)^2*
          (s*(10 + d^2 - 4*sw^2 + d*(-7 + 4*sw^2)) + 2*(-3 + d)*(-1 + 4*sw^2)*
            t))*(-1 + GaugeXi[W])^2 - 2*(1 - d)*s*
        ((2*Pi)^(3*d)*s^3*(2 - d + 4*sw^2)*t + 2^(2 + 3*d)*(-3 + d)*mz^6*
          Pi^(3*d)*(1 - sw^2)^3*(s*(-2 + d - 4*sw^2) + 2*(-1 + 4*sw^2)*t) + 
         2^(1 + 3*d)*mz^4*Pi^(3*d)*s*(1 - sw^2)^2*
          (3*s*(6 + d^2 + 12*sw^2 - d*(5 + 4*sw^2)) + 
           2*(37 + 4*d^2 + 20*sw^2 - d*(25 + 4*sw^2))*t) - 
         2^(1 + 3*d)*mz^2*Pi^(3*d)*s*(1 - sw^2)*
          (2*s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2)) + 
           s*(38 - 23*d + 4*d^2 - 20*sw^2)*t + 8*(1 - 4*sw^2)*t^2))*
        (-1 + GaugeXi[W])^2 - 4^(1 + d)*(1 - d)*mz^4*Pi^(2*d)*(1 - sw^2)^2*
        (s + 2*t)*(2^(1 + d)*(-2 + d)*mz^2*Pi^d*(1 - sw^2)*
          (s*(-2 + d - 4*sw^2) + 2*(-1 + 4*sw^2)*t) + 
         s*(-(d^2*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*
            (2*s*(-3 - 6*sw^2 + d*(2 + sw^2)) - (2 + d)*(-1 + 4*sw^2)*t)))*
        (-1 + GaugeXi[W])^2 - s*(-s + 2*mz^2*(1 - sw^2))*
        (s*(-4 + d + 4*sw^2) + 2*(-1 + 4*sw^2)*t)*
        (4*(-1 + d)*mz^4*(1 - sw^2)^2 + s*(d*s + 2*t) - 
         4*mz^2*(1 - sw^2)*(d*s + 2*t))*((2*Pi)^(3*d) - 2^(1 + 3*d)*Pi^(3*d)*
          GaugeXi[W] + (2*Pi)^(3*d)*GaugeXi[W]^2) - 
       2*(1 - d)*s*(-s/2 + mz^2*(1 - sw^2))*(8*mz^4*(1 - sw^2)^2*
          (2*(-3 + d)*s*sw^2 + (-1 + 4*sw^2)*t) + 
         s^2*(s*(-2 + d - 4*sw^2) + 2*(-1 + 4*sw^2)*t) - 
         4*mz^2*s*(1 - sw^2)*(s*(-2 + d - 4*sw^2) + 2*(-1 + 4*sw^2)*t))*
        ((2*Pi)^(3*d) - 2^(1 + 3*d)*Pi^(3*d)*GaugeXi[W] + 
         (2*Pi)^(3*d)*GaugeXi[W]^2)))/((-1 + d)*mz^4*(2*Pi)^(4*d)*(mz^2 - s)*
      sw^4*(1 - sw^2)^2*(s - s*GaugeXi[W])^2) - 
    (2^(1 + 5*d)*Pi^(5*d)*s^2*(-3 + 8*sw^2)*(-s + 2*mz^2*(1 - sw^2))*
       (d*s^2 - 4*d*mz^2*s*(1 - sw^2) + 4*(-1 + d)*mz^4*(1 - sw^2)^2)*
       (-1 + GaugeXi[W])^2 + 2^(2 + 5*d)*(1 - d)*mz^4*Pi^(5*d)*(3 - 8*sw^2)*
       (1 - sw^2)^2*(-s + 2*mz^2*(1 - sw^2))*((-2 + d)*s^2 - 4*s*t - 
        4*(-1 + d)*t^2)*(-1 + GaugeXi[W])^2 + 
      2*(1 - d)*s*(-s/2 + mz^2*(1 - sw^2))*
       (-((2*Pi)^(5*d)*s^2*(s*(-6 + 3*d - 8*sw^2) + 2*(-3 + 8*sw^2)*t)) + 
        2^(2 + 5*d)*mz^2*Pi^(5*d)*s*(1 - sw^2)*(s*(-6 + 3*d - 8*sw^2) + 
          2*(-3 + 8*sw^2)*t) + 2^(2 + 5*d)*mz^4*Pi^(5*d)*(1 - sw^2)^2*
         (s*(30 + 3*d^2 - 8*sw^2 + d*(-21 + 8*sw^2)) + 
          2*(-3 + d)*(-3 + 8*sw^2)*t))*(-1 + GaugeXi[W])^2 - 
      2^(2 + 5*d)*(1 - d)*mz^4*Pi^(5*d)*(1 - sw^2)^2*(s + 2*t)*
       (2*(-2 + d)*mz^2*(1 - sw^2)*(s*(-6 + 3*d - 8*sw^2) + 
          2*(-3 + 8*sw^2)*t) + s*(s*(-3*d^2 + 8*d*(3 + sw^2) - 
            12*(3 + 4*sw^2)) - 2*(2 + d)*(-3 + 8*sw^2)*t))*
       (-1 + GaugeXi[W])^2 - 2*(1 - d)*s*((2*Pi)^(5*d)*s^3*(6 - 3*d + 8*sw^2)*
         t + 2^(2 + 5*d)*(-3 + d)*mz^6*Pi^(5*d)*(1 - sw^2)^3*
         (s*(-6 + 3*d - 8*sw^2) + 2*(-3 + 8*sw^2)*t) + 
        2^(1 + 5*d)*mz^4*Pi^(5*d)*s*(1 - sw^2)^2*
         (3*s*(18 - 15*d + 3*d^2 + 24*sw^2 - 8*d*sw^2) + 
          2*(111 + 12*d^2 + 40*sw^2 - d*(75 + 8*sw^2))*t) - 
        2^(1 + 5*d)*mz^2*Pi^(5*d)*s*(1 - sw^2)*
         (2*s^2*(3*d^2 - 4*d*(3 + 2*sw^2) + 4*(3 + 4*sw^2)) + 
          s*(114 - 69*d + 12*d^2 - 40*sw^2)*t + 8*(3 - 8*sw^2)*t^2))*
       (-1 + GaugeXi[W])^2 - (2*Pi)^(2*d)*s*(-s + 2*mz^2*(1 - sw^2))*
       (s*(-12 + 3*d + 8*sw^2) + 2*(-3 + 8*sw^2)*t)*
       (4*(-1 + d)*mz^4*(1 - sw^2)^2 + s*(d*s + 2*t) - 
        4*mz^2*(1 - sw^2)*(d*s + 2*t))*((2*Pi)^(3*d) - 2^(1 + 3*d)*Pi^(3*d)*
         GaugeXi[W] + (2*Pi)^(3*d)*GaugeXi[W]^2) - 2^(1 + 2*d)*(1 - d)*
       Pi^(2*d)*s*(-s/2 + mz^2*(1 - sw^2))*
       (8*mz^4*(1 - sw^2)^2*(4*(-3 + d)*s*sw^2 + (-3 + 8*sw^2)*t) + 
        s^2*(s*(-6 + 3*d - 8*sw^2) + 2*(-3 + 8*sw^2)*t) - 
        4*mz^2*s*(1 - sw^2)*(s*(-6 + 3*d - 8*sw^2) + 2*(-3 + 8*sw^2)*t))*
       ((2*Pi)^(3*d) - 2^(1 + 3*d)*Pi^(3*d)*GaugeXi[W] + 
        (2*Pi)^(3*d)*GaugeXi[W]^2))/((-1 + d)*mz^4*(2*Pi)^(6*d)*(mz^2 - s)*
      sw^4*(1 - sw^2)^2*(s - s*GaugeXi[W])^2) - 
    ((2^(1 + 5*d)*Pi^(5*d)*(3 - 20*sw^2 + 32*sw^4)*
        (s^2 - 4*mz^2*s*(1 - sw^2) + 4*(-1 + d)*mz^4*(1 - sw^2)^2)*
        (d*s^2 - 4*d*mz^2*s*(1 - sw^2) + 4*(-1 + d)*mz^4*(1 - sw^2)^2))/
       (-1 + d) + 2^(1 + 5*d)*Pi^(5*d)*(s^3*(6 - 3*d + 20*sw^2 - 32*sw^4)*t + 
        (8*(-1 + d)*mz^8*(1 - sw^2)^4*(s*(-6 + 3*d - 20*sw^2 + 32*sw^4) - 
           2*(3 - 20*sw^2 + 32*sw^4)*t))/s - 8*mz^6*(1 - sw^2)^3*
         (s*(-6 + 3*d - 20*sw^2 + 32*sw^4) - 
          2*(9 + 3*d^2 + d*(-9 - 20*sw^2 + 32*sw^4))*t) - 
        4*mz^2*s*(1 - sw^2)*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
            4*d*(-3 - 5*sw^2 + 8*sw^4)) + 2*s*(30 - 18*d + 3*d^2 - 20*sw^2 + 
            32*sw^4)*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2) + 
        2*mz^4*(1 - sw^2)^2*(s^2*(90 + 24*d^2 + 300*sw^2 - 480*sw^4 + 
            d*(-93 - 160*sw^2 + 256*sw^4)) + 
          2*s*(21*d^2 + d*(-123 + 20*sw^2 - 32*sw^4) + 
            3*(69 - 80*sw^2 + 128*sw^4))*t + 32*(3 - 20*sw^2 + 32*sw^4)*
           t^2)) - ((2*Pi)^(3*d)*(s - 2*mz^2*(1 - sw^2))^2*
        (s^2 - 4*mz^2*s*(1 - sw^2) + 4*(-1 + d)*mz^4*(1 - sw^2)^2)*
        (s*(-6 + 3*d - 20*sw^2 + 32*sw^4) - 2*(3 - 20*sw^2 + 32*sw^4)*t)*
        ((2*Pi)^(2*d) - 2^(1 + 2*d)*Pi^(2*d)*GaugeXi[W] + 
         (2*Pi)^(2*d)*GaugeXi[W]^2))/(s*(-1 + GaugeXi[W])^2) + 
      ((2*Pi)^(2*d)*(s^2 - 4*mz^2*s*(1 - sw^2) + 4*(-1 + d)*mz^4*
          (1 - sw^2)^2)*(3*d*s - 4*s*(3 - 5*sw^2 + 8*sw^4) - 
         2*(3 - 20*sw^2 + 32*sw^4)*t)*(4*(-1 + d)*mz^4*(1 - sw^2)^2 + 
         s*(d*s + 2*t) - 4*mz^2*(1 - sw^2)*(d*s + 2*t))*
        ((2*Pi)^(3*d) - 2^(1 + 3*d)*Pi^(3*d)*GaugeXi[W] + 
         (2*Pi)^(3*d)*GaugeXi[W]^2))/((-1 + d)*s*(-1 + GaugeXi[W])^2) - 
      ((s - 2*mz^2*(1 - sw^2))^2*(s^2 - 4*mz^2*s*(1 - sw^2) + 
         4*(-1 + d)*mz^4*(1 - sw^2)^2)*(s*(-6 + 3*d - 20*sw^2 + 32*sw^4) - 
         2*(3 - 20*sw^2 + 32*sw^4)*t)*((2*Pi)^(5*d) - 2^(1 + 5*d)*Pi^(5*d)*
          GaugeXi[W] + (2*Pi)^(5*d)*GaugeXi[W]^2))/(s*(-1 + GaugeXi[W])^2))/
     (mz^4*(2*Pi)^(6*d)*(mz^2 - s)^2*sw^4*(1 - sw^2)^2) - 
    (3*((2^(1 + d)*Pi^d*(d*s^2 - 4*d*mz^2*s*(1 - sw^2) + 
          4*(-1 + d)*mz^4*(1 - sw^2)^2))/((-1 + d)*mz^4*(1 - sw^2)^2) - 
       (2^(3 + d)*(-56 + 46*d - 12*d^2 + d^3)*Pi^d*(s + 2*t))/s - 
       ((2*Pi)^d*((-4 + d)*s - 2*t)*(4*(-1 + d)*mz^4*(1 - sw^2)^2 + 
          s*((-2 + d)*s - 2*t) + mz^2*(1 - sw^2)*(-4*(-2 + d)*s + 8*t)))/
        ((-1 + d)*mz^4*s*(1 - sw^2)^2) + ((-s + 2*mz^2*(1 - sw^2))*
         (2^(1 + d)*mz^2*Pi^d*(1 - sw^2)*((-6 + d)*s - 2*t) + 
          s*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(3*s + t))))/
        (mz^4*s*(1 - sw^2)^2) + (2*((2^(2 + d)*Pi^d - d*(2*Pi)^d)*s^2*
           (s + t) + 2^(1 + d)*mz^4*Pi^d*(1 - sw^2)^2*
           ((-122 + 87*d - 18*d^2 + d^3)*s + 2*(-55 + 46*d - 12*d^2 + d^3)*
             t) - 2^(2 + d)*mz^2*Pi^d*(1 - sw^2)*((8 - 5*d + d^2)*s^2 + 
            (20 - 11*d + 2*d^2)*s*t + 4*t^2) + 2^(1 + d)*Pi^d*
           ((-4 + d)*s^2*(s + t) - 2*mz^4*(1 - sw^2)^2*
             ((-122 + 87*d - 18*d^2 + d^3)*s + 2*(-55 + 46*d - 12*d^2 + d^3)*
               t) + 4*mz^2*(1 - sw^2)*((8 - 5*d + d^2)*s^2 + (20 - 11*d + 
                2*d^2)*s*t + 4*t^2))*GaugeXi[W] + 
          ((2^(2 + d)*Pi^d - d*(2*Pi)^d)*s^2*(s + t) + 2^(1 + d)*mz^4*Pi^d*
             (1 - sw^2)^2*((-122 + 87*d - 18*d^2 + d^3)*s + 2*(-55 + 46*d - 
                12*d^2 + d^3)*t) - 2^(2 + d)*mz^2*Pi^d*(1 - sw^2)*
             ((8 - 5*d + d^2)*s^2 + (20 - 11*d + 2*d^2)*s*t + 4*t^2))*
           GaugeXi[W]^2))/(mz^4*s*(1 - sw^2)^2*(-1 + GaugeXi[W])^2) + 
       ((-s + 2*mz^2*(1 - sw^2))*(2^(1 + d)*mz^2*Pi^d*(1 - sw^2)*
           ((-6 + d)*s - 2*t) + s*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
             (-((-3 + d)*s) + t)) - 2^(1 + d)*Pi^d*(-s + 2*mz^2*(1 - sw^2))*
           ((-6 + d)*s - 2*t)*GaugeXi[W] + (2^(1 + d)*mz^2*Pi^d*(1 - sw^2)*
             ((-6 + d)*s - 2*t) + s*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(3*s - 
                d*s + t)))*GaugeXi[W]^2))/(mz^4*s*(1 - sw^2)^2*
         (-1 + GaugeXi[W])^2)))/((2*Pi)^(2*d)*sw^4)), 
  ((-I/72)*EL^6*((3*2^(3 - d)*mz^2*sw^2*(1 - sw^2)*(2*s + mz^2*(1 - sw^2))*
       ((-2 + d)*s^2 + 4*s*t + 4*t^2))/Pi^d + 
     (2^(1 - d)*mz^2*s*(1 - sw^2)*(2*s + mz^2*(1 - sw^2))*
       (s^2*(3*d^2 - 4*d*(3 + 2*sw^2) + 4*(3 + 4*sw^2)) + 
        2*s*(24 - 15*d + 3*d^2 - 16*sw^2)*t + 4*(3 - 8*sw^2)*t^2))/
      (Pi^d*(-mz^2 + s)) - (4^(2 - d)*mz^2*sw^2*(1 - sw^2)*
       (-(2^(1 + d)*Pi^d*s*((-2 + d)*s^2 + 4*s*t + 4*t^2)) + 
        mz^2*(1 - sw^2)*(-(d*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*
           (s^2 - 2*s*t - 2*t^2))))/Pi^(2*d) + 
     (3*2^(1 - 2*d)*mz^2*s*(1 - sw^2)*
       (-(2^(1 + d)*Pi^d*s*(s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2)) + 
           2*s*(8 - 5*d + d^2 - 8*sw^2)*t + 4*(1 - 4*sw^2)*t^2)) + 
        mz^2*(1 - sw^2)*(-(d^2*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*
           (2*s^2*(-1 + d - 2*sw^2 + d*sw^2) - s*(8 - 5*d + d^2 - 8*sw^2)*t + 
            2*(-1 + 4*sw^2)*t^2))))/(Pi^(2*d)*(mz^2 - s)) + 
     (3*s^2*((-144 + 96*d - 18*d^2 + d^3)*s^2 - 
        2*(-128 + 88*d - 18*d^2 + d^3)*mz^2*s*(1 - sw^2) + 8*d*s*t + 16*t^2)*
       ((2*Pi)^(3*d) - 2^(1 + 3*d)*Pi^(3*d)*GaugeXi[W] + 
        (2*Pi)^(3*d)*GaugeXi[W]^2))/((2*Pi)^(4*d)*(-1 + GaugeXi[W])^2)))/
   (s^3*sw^4), ((I/3)*2^(-3 - d)*(-4 + d)*EL^6*(s + t)*
    ((40 - 18*d + d^2)*s - 4*(14 - 8*d + d^2)*mz^2*(1 - sw^2) - 
     8*(-2 + d)*t))/(Pi^d*s*sw^4), 
  ((-I/3)*4^(-2 - d)*EL^6*(-(2^(2 + d)*(-4 + d)*mz^2*Pi^d*(1 - sw^2)*(s + t)*
       ((36 - 16*d + d^2)*s - 4*(-2 + d)*t)) + 2^(1 + d)*(-4 + d)*mz^4*Pi^d*
      (1 - sw^2)^2*(3*(20 - 10*d + d^2)*s + 2*(14 - 8*d + d^2)*t) + 
     (s + t)*(-(d^3*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*
        ((-72 + 48*d - 9*d^2 + d^3)*s^2 + 4*d*s*t + 8*t^2))))/
   (Pi^(2*d)*s*sw^4), ((-I/9)*2^(-5 - 7*d)*EL^6*
    ((4^(2 + 3*d)*Pi^(6*d)*s*(-1 + 4*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
       (s - mz^2*(1 - sw^2) + mz^2*(1 - sw^2)*GaugeXi[W]))/
      ((-mz^2 + s)*(1 - sw^2)) + (8^(1 + 2*d)*Pi^(6*d)*s*(-3 + 8*sw^2)*
       ((-2 + d)*s^2 + 4*s*t + 4*t^2)*(s - mz^2*(1 - sw^2) + 
        mz^2*(1 - sw^2)*GaugeXi[W]))/((-mz^2 + s)*(1 - sw^2)) + 
     (7*4^(1 + 3*d)*Pi^(6*d)*s*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
       (s^2 + 2*(-3 + 2*d)*mz^2*s*(1 - sw^2) + mz^4*(1 - sw^2)^2 + 
        (mz^2*s*(1 - sw^2) - mz^4*(1 - sw^2)^2)*GaugeXi[W]))/
      (mz^4*sw^2*(1 - sw^2)^2) - (2^(1 + 6*d)*Pi^(6*d)*s^2*
       (s^2*(3*d^2 - 4*d*(3 + 2*sw^2) + 4*(3 + 4*sw^2)) + 
        2*s*(24 - 15*d + 3*d^2 - 16*sw^2)*t + 4*(3 - 8*sw^2)*t^2)*
       (s^2 + 2*(-3 + 2*d)*mz^2*s*(1 - sw^2) + mz^4*(1 - sw^2)^2 + 
        (mz^2*s*(1 - sw^2) - mz^4*(1 - sw^2)^2)*GaugeXi[W]))/
      (mz^4*(mz^2 - s)*sw^4*(1 - sw^2)^2) - 
     (64^(1 + d)*Pi^(6*d)*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
       (-(d*(-s + mz^2*(1 - sw^2))*(s^2 + 2*(-3 + 2*d)*mz^2*s*(1 - sw^2) + 
           mz^4*(1 - sw^2)^2)) + (-4*mz^4*s*(1 - sw^2)^2 - 
          4*d^2*mz^4*s*(1 - sw^2)^2 + d*mz^2*(1 - sw^2)*
           (s^2 + 6*mz^2*s*(1 - sw^2) + mz^4*(1 - sw^2)^2))*GaugeXi[W]))/
      (d*mz^4*(1 - sw^2)^2) + (4^(2 + 3*d)*Pi^(6*d)*s*(-1 + 4*sw^2)*
       ((-2 + d)*s^2 + 4*s*t + 4*t^2)*
       (-(d*(-s + mz^2*(1 - sw^2))*(s^2 + 2*(-3 + 2*d)*mz^2*s*(1 - sw^2) + 
           mz^4*(1 - sw^2)^2)) + (-4*mz^4*s*(1 - sw^2)^2 - 
          4*d^2*mz^4*s*(1 - sw^2)^2 + d*mz^2*(1 - sw^2)*
           (s^2 + 6*mz^2*s*(1 - sw^2) + mz^4*(1 - sw^2)^2))*GaugeXi[W]))/
      (d*mz^4*(-mz^2 + s)*sw^2*(1 - sw^2)^2) + 2^(6 + 5*d)*Pi^(5*d)*
      ((-s + mz^2*(1 - sw^2))*(-(d*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*
          (s^2 - 2*s*t - 2*t^2)) + mz^2*(1 - sw^2)*(-3*d*(2*Pi)^d*s^2 + 
         2^(1 + d)*Pi^d*((-1 + 2*d)*s^2 + 2*s*t + 2*t^2))*GaugeXi[W]) + 
     (2^(1 + 5*d)*Pi^(5*d)*s^2*((-s + mz^2*(1 - sw^2))*(-9*d^2*(2*Pi)^d*s^2 + 
          2^(1 + d)*Pi^d*(s^2*(-6 + 3*d^2 - 20*sw^2 + 32*sw^4 + 
              d*(6 + 10*sw^2 - 16*sw^4)) + s*(15*d - 3*d^2 - 8*(3 - 5*sw^2 + 
                8*sw^4))*t - 2*(3 - 20*sw^2 + 32*sw^4)*t^2)) + 
        mz^2*(1 - sw^2)*(-9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
           (2*s^2*(3 + 3*d^2 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 
                8*sw^4)) + s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
            2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[W]))/
      ((mz^2 - s)^2*(1 - sw^2)^2) - (8^(1 + d)*Pi^(3*d)*s*(-3 + 8*sw^2)*
       (d*(2*Pi)^(3*d)*(-s + mz^2*(1 - sw^2))*(s^2 + 2*(-3 + 2*d)*mz^2*s*
           (1 - sw^2) + mz^4*(1 - sw^2)^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2) + 
        mz^2*(1 - sw^2)*(2^(2 + 3*d)*d^3*mz^2*Pi^(3*d)*s^3*(1 - sw^2) - 
          8^(1 + d)*mz^2*Pi^(3*d)*s*(1 - sw^2)*(s^2 - 2*s*t - 2*t^2) - 
          d^2*(2*Pi)^(3*d)*s*(s^3 + mz^4*s*(1 - sw^2)^2 + 2*mz^2*(1 - sw^2)*
             (7*s^2 - 8*s*t - 8*t^2)) + 2^(1 + 3*d)*d*Pi^(3*d)*
           (4*mz^2*s*(1 - sw^2)*(2*s^2 - 3*s*t - 3*t^2) + 
            s^2*(s^2 - 2*s*t - 2*t^2) + mz^4*(1 - sw^2)^2*(s^2 - 2*s*t - 
              2*t^2)))*GaugeXi[W]))/(d*mz^4*(-mz^2 + s)*sw^2*(1 - sw^2)^2) - 
     (3*(2*Pi)^(5*d)*s^2*(d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
         (-2*(-1 + d)*s^2 + (8 - 5*d + d^2)*s*t + 2*t^2) + 
        mz^2*(1 - sw^2)*(-3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
           ((-2 + 2*d + d^2)*s^2 - (8 - 5*d + d^2)*s*t - 2*t^2)) - 
        (2^(1 + d)*Pi^d*s*((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 4*t^2) + 
          3*mz^2*(1 - sw^2)*(-(d^2*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*
             (2*(-1 + d)*s^2 - (8 - 5*d + d^2)*s*t - 2*t^2)))*GaugeXi[W] + 
        (d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*(-2*(-1 + d)*s^2 + 
            (8 - 5*d + d^2)*s*t + 2*t^2) - 3*mz^2*(1 - sw^2)*
           (-(d^2*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*((2 - 2*d + d^2)*s^2 + 
              (8 - 5*d + d^2)*s*t + 2*t^2)))*GaugeXi[W]^2 + 
        mz^2*(1 - sw^2)*(-3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
           (2*(1 - d + d^2)*s^2 + (8 - 5*d + d^2)*s*t + 2*t^2))*
         GaugeXi[W]^3))/(mz^4*sw^4*(1 - sw^2)^2*(-1 + GaugeXi[W])^2) - 
     (3*(2*Pi)^(5*d)*s^2*(-(d^2*(2*Pi)^d*s^4) + 2^(1 + d)*Pi^d*s^2*
         (2*s^2*(-1 + d - 2*sw^2 + d*sw^2) - s*(8 - 5*d + d^2 - 8*sw^2)*t + 
          2*(-1 + 4*sw^2)*t^2) + mz^4*(1 - sw^2)^2*(-3*d^2*(2*Pi)^d*s^2 + 
          2^(1 + d)*Pi^d*(s^2*(-2 + d^2 - 4*sw^2 + 2*d*(1 + sw^2)) - 
            s*(8 - 5*d + d^2 - 8*sw^2)*t + 2*(-1 + 4*sw^2)*t^2)) - 
        2*mz^2*s*(1 - sw^2)*(-11*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
           (s^2*(d^3 - 4*d^2*sw^2 - 6*(1 + 2*sw^2) + 2*d*(5 + 7*sw^2)) + 
            (-3 + 2*d)*s*(8 - 5*d + d^2 - 8*sw^2)*t - 2*(-3 + 2*d)*
             (-1 + 4*sw^2)*t^2)) + 
        (2^(1 + d)*Pi^d*s^2*(s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2)) + 
            2*s*(8 - 5*d + d^2 - 8*sw^2)*t + 4*(1 - 4*sw^2)*t^2) + 
          3*mz^4*(1 - sw^2)^2*(-(d^2*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*
             (s^2*(2 + d^2 + 4*sw^2 - 2*d*(1 + sw^2)) + s*(8 - 5*d + d^2 - 
                8*sw^2)*t + 2*(1 - 4*sw^2)*t^2)) + mz^2*s*(1 - sw^2)*
           (-45*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*(2*s^2*(-13 + 21*d + 
                2*d^3 - 26*sw^2 + 29*d*sw^2 - 8*d^2*sw^2) + (-13 + 8*d)*s*(
                8 - 5*d + d^2 - 8*sw^2)*t - 2*(-13 + 8*d)*(-1 + 4*sw^2)*t^
                2)))*GaugeXi[W] + (-(d^2*(2*Pi)^d*s^4) - 2^(2 + d)*(-2 + d)*
           mz^2*Pi^d*s*(1 - sw^2)*(s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2)) + 
            2*s*(8 - 5*d + d^2 - 8*sw^2)*t + 4*(1 - 4*sw^2)*t^2) + 
          2^(1 + d)*Pi^d*s^2*(2*s^2*(-1 + d - 2*sw^2 + d*sw^2) - 
            s*(8 - 5*d + d^2 - 8*sw^2)*t + 2*(-1 + 4*sw^2)*t^2) + 
          mz^4*(1 - sw^2)^2*(d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
             (-2*s^2*(3 + d^2 + 6*sw^2 - 3*d*(1 + sw^2)) - 3*s*(8 - 5*d + 
                d^2 - 8*sw^2)*t + 6*(-1 + 4*sw^2)*t^2)))*GaugeXi[W]^2 + 
        mz^2*(1 - sw^2)*(-s + mz^2*(1 - sw^2))*(-3*d^2*(2*Pi)^d*s^2 + 
          2^(1 + d)*Pi^d*(2*s^2*(1 + d^2 + 2*sw^2 - d*(1 + sw^2)) + 
            s*(8 - 5*d + d^2 - 8*sw^2)*t + 2*(1 - 4*sw^2)*t^2))*
         GaugeXi[W]^3))/(mz^4*(-mz^2 + s)*sw^4*(1 - sw^2)^2*
       (-1 + GaugeXi[W])^2) + 
     (2*s^2*(d*(-s + mz^2*(1 - sw^2))*((2*Pi)^(6*d)*s^2*
           (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 
                8*sw^4)) + 2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
            4*(3 - 20*sw^2 + 32*sw^4)*t^2) + mz^4*(2*Pi)^(6*d)*(1 - sw^2)^2*
           (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 
                8*sw^4)) + 2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
            4*(3 - 20*sw^2 + 32*sw^4)*t^2) + 2*mz^2*s*(1 - sw^2)*
           (-33*d^2*(2*Pi)^(6*d)*s^2 + 2^(1 + 6*d)*Pi^(6*d)*
             (s^2*(-18 + 3*d^3 - 60*sw^2 + 96*sw^4 + 4*d^2*sw^2*
                 (-5 + 8*sw^2) + d*(30 + 70*sw^2 - 112*sw^4)) + 
              s*(-39*d^2 + 6*d^3 - 24*(3 - 5*sw^2 + 8*sw^4) + 
                d*(93 - 80*sw^2 + 128*sw^4))*t + 2*(-3 + 2*d)*(3 - 20*sw^2 + 
                32*sw^4)*t^2))) + (-3*4^(1 + 3*d)*d^4*mz^2*Pi^(6*d)*s^2*
           (1 - sw^2)*(-2*s + mz^2*(1 - sw^2))*(s + 2*t) - 
          4^(2 + 3*d)*mz^4*Pi^(6*d)*s*(1 - sw^2)^2*
           (s^2*(-3 - 10*sw^2 + 16*sw^4) - 4*s*(3 - 5*sw^2 + 8*sw^4)*t + 
            (-3 + 20*sw^2 - 32*sw^4)*t^2) + d^3*(2*Pi)^(6*d)*s*
           (mz^2*s^2*(1 - sw^2)*(s*(-141 - 160*sw^2 + 256*sw^4) - 330*t) + 
            6*s^3*(s + 2*t) - 9*mz^6*(1 - sw^2)^3*(s + 2*t) + 
            8*mz^4*s*(1 - sw^2)^2*(s*(9 + 10*sw^2 - 16*sw^4) + 21*t)) + 
          2*d^2*s*(2^(1 + 6*d)*Pi^(6*d)*s^3*(2*s*(-3 - 5*sw^2 + 8*sw^4) - 
              15*t) - 3*mz^6*(2*Pi)^(6*d)*(1 - sw^2)^3*
             (2*s*(-3 - 5*sw^2 + 8*sw^4) - 15*t) - mz^2*(2*Pi)^(6*d)*s*
             (1 - sw^2)*(2*s^2*(-69 - 155*sw^2 + 248*sw^4) + 
              s*(-417 + 320*sw^2 - 512*sw^4)*t - 16*(3 - 20*sw^2 + 32*sw^4)*t^
                2) + 2^(1 + 6*d)*mz^4*Pi^(6*d)*(1 - sw^2)^2*
             (s^2*(-33 - 80*sw^2 + 128*sw^4) - 2*s*(51 - 40*sw^2 + 64*sw^4)*
               t - 4*(3 - 20*sw^2 + 32*sw^4)*t^2)) + 
          4*d*(-(2^(1 + 6*d)*Pi^(6*d)*s^3*(s^2*(-3 - 10*sw^2 + 16*sw^4) - 4*s*
                (3 - 5*sw^2 + 8*sw^4)*t + (-3 + 20*sw^2 - 32*sw^4)*t^2)) - 
            2^(1 + 6*d)*mz^4*Pi^(6*d)*s*(1 - sw^2)^2*(6*s^2*(-1 - 5*sw^2 + 
                8*sw^4) + s*(-33 + 80*sw^2 - 128*sw^4)*t - 4*(3 - 20*sw^2 + 
                32*sw^4)*t^2) - 15*mz^2*(2*Pi)^(6*d)*s^2*(1 - sw^2)*
             (s^2*(3 + 10*sw^2 - 16*sw^4) + 4*s*(3 - 5*sw^2 + 8*sw^4)*t + 
              (3 - 20*sw^2 + 32*sw^4)*t^2) - 3*mz^6*(2*Pi)^(6*d)*(1 - sw^2)^3*
             (s^2*(3 + 10*sw^2 - 16*sw^4) + 4*s*(3 - 5*sw^2 + 8*sw^4)*t + 
              (3 - 20*sw^2 + 32*sw^4)*t^2)))*GaugeXi[W] - 
        (3*4^(1 + 3*d)*d^4*mz^2*Pi^(6*d)*s^2*(1 - sw^2)*(s + mz^2*(1 - sw^2))*
           (s + 2*t) - 2^(5 + 6*d)*mz^4*Pi^(6*d)*s*(1 - sw^2)^2*
           (s^2*(-3 - 10*sw^2 + 16*sw^4) - 4*s*(3 - 5*sw^2 + 8*sw^4)*t + 
            (-3 + 20*sw^2 - 32*sw^4)*t^2) - d^3*(2*Pi)^(6*d)*s*
           (-3*s^3*(s + 2*t) + 9*mz^6*(1 - sw^2)^3*(s + 2*t) + 
            mz^4*s*(1 - sw^2)^2*(s*(63 + 80*sw^2 - 128*sw^4) + 150*t) + 
            mz^2*s^2*(1 - sw^2)*(s*(75 + 80*sw^2 - 128*sw^4) + 174*t)) - 
          4^(1 + 3*d)*d*Pi^(6*d)*(-(s^3*(s^2*(3 + 10*sw^2 - 16*sw^4) + 4*s*
                (3 - 5*sw^2 + 8*sw^4)*t + (3 - 20*sw^2 + 32*sw^4)*t^2)) + 
            9*mz^2*s^2*(1 - sw^2)*(s^2*(3 + 10*sw^2 - 16*sw^4) + 
              4*s*(3 - 5*sw^2 + 8*sw^4)*t + (3 - 20*sw^2 + 32*sw^4)*t^2) + 
            3*mz^6*(1 - sw^2)^3*(s^2*(3 + 10*sw^2 - 16*sw^4) + 
              4*s*(3 - 5*sw^2 + 8*sw^4)*t + (3 - 20*sw^2 + 32*sw^4)*t^2) + 
            mz^4*s*(1 - sw^2)^2*(s^2*(39 + 90*sw^2 - 144*sw^4) + 
              20*s*(6 - 5*sw^2 + 8*sw^4)*t + 5*(3 - 20*sw^2 + 32*sw^4)*t^
                2)) + 2^(1 + 6*d)*d^2*Pi^(6*d)*s*
           (s^3*(2*s*(-3 - 5*sw^2 + 8*sw^4) - 15*t) + mz^6*(1 - sw^2)^3*
             (-6*s*(-3 - 5*sw^2 + 8*sw^4) + 45*t) + mz^4*(1 - sw^2)^2*
             (s^2*(66 + 130*sw^2 - 208*sw^4) + s*(195 - 160*sw^2 + 256*sw^4)*
               t + 8*(3 - 20*sw^2 + 32*sw^4)*t^2) + mz^2*s*(1 - sw^2)*
             (s^2*(78 + 170*sw^2 - 272*sw^4) + s*(231 - 160*sw^2 + 256*sw^4)*
               t + 8*(3 - 20*sw^2 + 32*sw^4)*t^2)))*GaugeXi[W]^2 - 
        mz^2*(1 - sw^2)*(-3*4^(1 + 3*d)*d^4*mz^2*Pi^(6*d)*s^2*(1 - sw^2)*
           (s + 2*t) + 4^(2 + 3*d)*mz^2*Pi^(6*d)*s*(1 - sw^2)*
           (s^2*(-3 - 10*sw^2 + 16*sw^4) - 4*s*(3 - 5*sw^2 + 8*sw^4)*t + 
            (-3 + 20*sw^2 - 32*sw^4)*t^2) + d^3*(2*Pi)^(6*d)*s*
           (3*s^2*(s + 2*t) + 3*mz^4*(1 - sw^2)^2*(s + 2*t) + 
            2*mz^2*s*(1 - sw^2)*(s*(33 + 40*sw^2 - 64*sw^4) + 78*t)) + 
          2*d^2*s*((2*Pi)^(6*d)*s^2*(2*s*(-3 - 5*sw^2 + 8*sw^4) - 15*t) + 
            mz^4*(2*Pi)^(6*d)*(1 - sw^2)^2*(2*s*(-3 - 5*sw^2 + 8*sw^4) - 
              15*t) + 2^(1 + 6*d)*mz^2*Pi^(6*d)*(1 - sw^2)*
             (s^2*(-33 - 70*sw^2 + 112*sw^4) + s*(-99 + 80*sw^2 - 128*sw^4)*
               t - 4*(3 - 20*sw^2 + 32*sw^4)*t^2)) + 
          4*d*(-(2^(1 + 6*d)*mz^2*Pi^(6*d)*s*(1 - sw^2)*(s^2*(-15 - 40*sw^2 + 
                 64*sw^4) - 3*s*(17 - 20*sw^2 + 32*sw^4)*t - 3*(3 - 20*sw^2 + 
                 32*sw^4)*t^2)) + (2*Pi)^(6*d)*s^2*(s^2*(3 + 10*sw^2 - 
                16*sw^4) + 4*s*(3 - 5*sw^2 + 8*sw^4)*t + (3 - 20*sw^2 + 
                32*sw^4)*t^2) + mz^4*(2*Pi)^(6*d)*(1 - sw^2)^2*
             (s^2*(3 + 10*sw^2 - 16*sw^4) + 4*s*(3 - 5*sw^2 + 8*sw^4)*t + 
              (3 - 20*sw^2 + 32*sw^4)*t^2)))*GaugeXi[W]^3))/
      (d*mz^4*(mz^2 - s)^2*sw^4*(1 - sw^2)^2*(-1 + GaugeXi[W])^2)))/
   ((-1 + d)*Pi^(7*d)*s^4), ((-I/9)*2^(-5 - 4*d)*EL^6*
    ((2^(4 + 3*d)*Pi^(3*d)*(-s + mz^2*(1 - sw^2))*((-2 + d)*s^2 + 4*s*t + 
        4*t^2)*(s^2 + 2*(-3 + 2*d)*mz^2*s*(1 - sw^2) + mz^4*(1 - sw^2)^2 - 
        2*mz^2*(1 - sw^2)*(s + mz^2*(1 - sw^2))*GaugeXi[W] + 
        mz^4*(1 - sw^2)^2*GaugeXi[W]^2))/((-1 + d)*mz^4*s^3*sw^2*
       (1 - sw^2)^2) + (8^(2 + d)*Pi^(3*d)*(-s + mz^2*(1 - sw^2))^2*
       ((-2 + d)*s^2 + 4*s*t + 4*t^2)*(s^2 + 2*(-3 + 2*d)*mz^2*s*(1 - sw^2) + 
        mz^4*(1 - sw^2)^2 - 2*mz^2*(1 - sw^2)*(s + mz^2*(1 - sw^2))*
         GaugeXi[W] + mz^4*(1 - sw^2)^2*GaugeXi[W]^2))/
      ((-1 + d)*mz^4*s^4*(1 - sw^2)^2) - (2^(4 + 3*d)*Pi^(3*d)*(-1 + 4*sw^2)*
       (-s + mz^2*(1 - sw^2))^2*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
       (s^2 + 2*(-3 + 2*d)*mz^2*s*(1 - sw^2) + mz^4*(1 - sw^2)^2 - 
        2*mz^2*(1 - sw^2)*(s + mz^2*(1 - sw^2))*GaugeXi[W] + 
        mz^4*(1 - sw^2)^2*GaugeXi[W]^2))/((-1 + d)*mz^4*s^3*(-mz^2 + s)*sw^2*
       (1 - sw^2)^2) - (8^(1 + d)*Pi^(3*d)*(-3 + 8*sw^2)*
       (-s + mz^2*(1 - sw^2))^2*((-2 + d)*s^2 + 4*s*t + 4*t^2)*
       (s^2 + 2*(-3 + 2*d)*mz^2*s*(1 - sw^2) + mz^4*(1 - sw^2)^2 - 
        2*mz^2*(1 - sw^2)*(s + mz^2*(1 - sw^2))*GaugeXi[W] + 
        mz^4*(1 - sw^2)^2*GaugeXi[W]^2))/((-1 + d)*mz^4*s^3*(-mz^2 + s)*sw^2*
       (1 - sw^2)^2) + (2^(1 + 3*d)*Pi^(3*d)*(-s + mz^2*(1 - sw^2))*
       (s^2*(3*d^2 - 4*d*(3 + 2*sw^2) + 4*(3 + 4*sw^2)) + 
        2*s*(24 - 15*d + 3*d^2 - 16*sw^2)*t + 4*(3 - 8*sw^2)*t^2)*
       (s^2 + 2*(-3 + 2*d)*mz^2*s*(1 - sw^2) + mz^4*(1 - sw^2)^2 - 
        2*mz^2*(1 - sw^2)*(s + mz^2*(1 - sw^2))*GaugeXi[W] + 
        mz^4*(1 - sw^2)^2*GaugeXi[W]^2))/((-1 + d)*mz^4*s^2*(-mz^2 + s)*sw^4*
       (1 - sw^2)^2) + (3*4^(1 + d)*Pi^(2*d)*(-s + mz^2*(1 - sw^2))*
       (d*(2*Pi)^d*s^4 + 2^(1 + d)*Pi^d*s^2*(-s^2 + 2*s*t + 2*t^2) + 
        2^(1 + d)*(-3 + 2*d)*mz^2*Pi^d*s*(1 - sw^2)*((-2 + d)*s^2 + 4*s*t + 
          4*t^2) + mz^4*(1 - sw^2)^2*(-3*d*(2*Pi)^d*s^2 + 
          2^(1 + d)*Pi^d*((-1 + 2*d)*s^2 + 2*s*t + 2*t^2)) - 
        2^(1 + d)*mz^2*Pi^d*(1 - sw^2)*(s + mz^2*(1 - sw^2))*
         ((-2 + d)*s^2 + 4*s*t + 4*t^2)*GaugeXi[W] - mz^4*(1 - sw^2)^2*
         (-(d*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*(s^2 - 2*s*t - 2*t^2))*
         GaugeXi[W]^2))/((-1 + d)*mz^4*s^3*sw^2*(1 - sw^2)^2) + 
     (4^(3 + d)*Pi^(2*d)*(-(d*(2*Pi)^d*s^4) + 2^(1 + d)*Pi^d*s^2*
         (s^2 - 2*s*t - 2*t^2) - 2^(1 + d)*(-3 + 2*d)*mz^2*Pi^d*s*(1 - sw^2)*
         ((-2 + d)*s^2 + 4*s*t + 4*t^2) + mz^4*(1 - sw^2)^2*
         (-(d*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*(s^2 - 2*s*t - 2*t^2)) + 
        2^(1 + d)*mz^2*Pi^d*(1 - sw^2)*(s + mz^2*(1 - sw^2))*
         ((-2 + d)*s^2 + 4*s*t + 4*t^2)*GaugeXi[W] + mz^4*(1 - sw^2)^2*
         (-(d*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*(s^2 - 2*s*t - 2*t^2))*
         GaugeXi[W]^2))/((-1 + d)*s^4) - 
     (4^(2 + d)*Pi^(2*d)*(-(d*(2*Pi)^d*s^4) + 2^(1 + d)*(-3 + 2*d)*mz^2*Pi^d*
         s*(1 - sw^2)*(-1 + 4*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2) + 
        2^(1 + d)*Pi^d*s^2*(s^2*(1 + 2*(-2 + d)*sw^2) + 2*s*(-1 + 4*sw^2)*t + 
          2*(-1 + 4*sw^2)*t^2) + mz^4*(1 - sw^2)^2*(d*(2*Pi)^d*s^2 + 
          2^(1 + d)*Pi^d*(s^2*(1 - d - 4*sw^2 + 2*d*sw^2) + 
            2*s*(-1 + 4*sw^2)*t + 2*(-1 + 4*sw^2)*t^2)) - 
        2*mz^2*(1 - sw^2)*(s + mz^2*(1 - sw^2))*(-(d*(2*Pi)^d*s^2) + 
          2^(1 + d)*Pi^d*(s^2*(1 + 2*(-2 + d)*sw^2) + 2*s*(-1 + 4*sw^2)*t + 
            2*(-1 + 4*sw^2)*t^2))*GaugeXi[W] + mz^4*(1 - sw^2)^2*
         (-(d*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*(s^2*(1 + 2*(-2 + d)*sw^2) + 
            2*s*(-1 + 4*sw^2)*t + 2*(-1 + 4*sw^2)*t^2))*GaugeXi[W]^2))/
      ((-1 + d)*s^3*(-mz^2 + s)*(1 - sw^2)) + 
     (2^(3 + 2*d)*Pi^(2*d)*(-3*d*(2*Pi)^d*s^4 + 2^(1 + d)*(-3 + 2*d)*mz^2*
         Pi^d*s*(1 - sw^2)*(-3 + 8*sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2) + 
        2^(1 + d)*Pi^d*s^2*(s^2*(3 + 4*(-2 + d)*sw^2) + 2*s*(-3 + 8*sw^2)*t + 
          2*(-3 + 8*sw^2)*t^2) + mz^4*(1 - sw^2)^2*(9*d*(2*Pi)^d*s^2 + 
          2^(1 + d)*Pi^d*(s^2*(3 - 6*d - 8*sw^2 + 4*d*sw^2) + 
            2*s*(-3 + 8*sw^2)*t + 2*(-3 + 8*sw^2)*t^2)) - 
        2*mz^2*(1 - sw^2)*(s + mz^2*(1 - sw^2))*(-3*d*(2*Pi)^d*s^2 + 
          2^(1 + d)*Pi^d*(s^2*(3 + 4*(-2 + d)*sw^2) + 2*s*(-3 + 8*sw^2)*t + 
            2*(-3 + 8*sw^2)*t^2))*GaugeXi[W] + mz^4*(1 - sw^2)^2*
         (-3*d*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*(s^2*(3 + 4*(-2 + d)*sw^2) + 
            2*s*(-3 + 8*sw^2)*t + 2*(-3 + 8*sw^2)*t^2))*GaugeXi[W]^2))/
      ((-1 + d)*(mz^2 - s)*s^3*(1 - sw^2)) + 
     (2*((2*Pi)^(3*d)*s^4*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
            4*d*(-3 - 5*sw^2 + 8*sw^4)) + 2*s*(-15*d + 3*d^2 + 
            8*(3 - 5*sw^2 + 8*sw^4))*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2) + 
        mz^8*(2*Pi)^(3*d)*(1 - sw^2)^4*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
            4*d*(-3 - 5*sw^2 + 8*sw^4)) + 2*s*(-15*d + 3*d^2 + 
            8*(3 - 5*sw^2 + 8*sw^4))*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2) + 
        4*mz^2*s^3*(1 - sw^2)*(3*d^3*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
           (s^2*(-12 - 40*sw^2 + 64*sw^4 + d*(18 + 40*sw^2 - 64*sw^4) + 
              d^2*(-9 - 10*sw^2 + 16*sw^4)) + s*(-21*d^2 + 3*d^3 - 
              16*(3 - 5*sw^2 + 8*sw^4) + d*(54 - 40*sw^2 + 64*sw^4))*t + 
            2*(-2 + d)*(3 - 20*sw^2 + 32*sw^4)*t^2)) + 4*mz^6*s*(1 - sw^2)^3*
         (3*d^3*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
           (s^2*(-12 - 40*sw^2 + 64*sw^4 + d*(18 + 40*sw^2 - 64*sw^4) + 
              d^2*(-9 - 10*sw^2 + 16*sw^4)) + s*(-21*d^2 + 3*d^3 - 
              16*(3 - 5*sw^2 + 8*sw^4) + d*(54 - 40*sw^2 + 64*sw^4))*t + 
            2*(-2 + d)*(3 - 20*sw^2 + 32*sw^4)*t^2)) - 
        2*mz^4*s^2*(1 - sw^2)^2*(-69*d^2*(2*Pi)^(3*d)*s^2 + 
          2^(1 + 3*d)*Pi^(3*d)*(2*s^2*(3*d^3 + 4*d^2*sw^2*(-5 + 8*sw^2) + 
              d*(33 + 75*sw^2 - 120*sw^4) + 7*(-3 - 10*sw^2 + 16*sw^4)) + 
            s*(-81*d^2 + 12*d^3 - 56*(3 - 5*sw^2 + 8*sw^4) + 
              d*(201 - 160*sw^2 + 256*sw^4))*t + 2*(-7 + 4*d)*
             (3 - 20*sw^2 + 32*sw^4)*t^2)) - 
        2*((2*Pi)^(3*d)*s^4*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
              4*d*(-3 - 5*sw^2 + 8*sw^4)) + 2*s*(-15*d + 3*d^2 + 
              8*(3 - 5*sw^2 + 8*sw^4))*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2) + 
          2^(1 + 3*d)*mz^8*Pi^(3*d)*(1 - sw^2)^4*
           (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 
                8*sw^4)) + 2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
            4*(3 - 20*sw^2 + 32*sw^4)*t^2) + mz^6*s*(1 - sw^2)^3*
           (-75*d^2*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
             (2*s^2*(3*d^3 + 4*d^2*sw^2*(-5 + 8*sw^2) + d*(39 + 85*sw^2 - 
                  136*sw^4) + 9*(-3 - 10*sw^2 + 16*sw^4)) + s*(-87*d^2 + 
                12*d^3 - 72*(3 - 5*sw^2 + 8*sw^4) + d*(231 - 160*sw^2 + 
                  256*sw^4))*t + 2*(-9 + 4*d)*(3 - 20*sw^2 + 32*sw^4)*t^2)) + 
          mz^2*s^3*(1 - sw^2)*(-69*d^2*(2*Pi)^(3*d)*s^2 + 
            2^(1 + 3*d)*Pi^(3*d)*(2*s^2*(3*d^3 + 4*d^2*sw^2*(-5 + 8*sw^2) + 
                d*(33 + 75*sw^2 - 120*sw^4) + 7*(-3 - 10*sw^2 + 16*sw^4)) + 
              s*(-81*d^2 + 12*d^3 - 56*(3 - 5*sw^2 + 8*sw^4) + 
                d*(201 - 160*sw^2 + 256*sw^4))*t + 2*(-7 + 4*d)*(3 - 
                20*sw^2 + 32*sw^4)*t^2)) - mz^4*s^2*(1 - sw^2)^2*
           (-135*d^2*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
             (2*s^2*(6*d^3 + 8*d^2*sw^2*(-5 + 8*sw^2) + d*(63 + 145*sw^2 - 
                  232*sw^4) + 13*(-3 - 10*sw^2 + 16*sw^4)) + s*(-159*d^2 + 
                24*d^3 - 104*(3 - 5*sw^2 + 8*sw^4) + d*(387 - 320*sw^2 + 
                  512*sw^4))*t + 2*(-13 + 8*d)*(3 - 20*sw^2 + 32*sw^4)*t^2)))*
         GaugeXi[W] + ((2*Pi)^(3*d)*s^4*(s^2*(12 + 3*d^2 + 40*sw^2 - 
              64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
            2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
            4*(3 - 20*sw^2 + 32*sw^4)*t^2) + 3*2^(1 + 3*d)*mz^8*Pi^(3*d)*
           (1 - sw^2)^4*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
              4*d*(-3 - 5*sw^2 + 8*sw^4)) + 2*s*(-15*d + 3*d^2 + 
              8*(3 - 5*sw^2 + 8*sw^4))*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2) + 
          4*mz^2*s^3*(1 - sw^2)*(3*(-5 + d)*d^2*(2*Pi)^(3*d)*s^2 + 
            2^(1 + 3*d)*Pi^(3*d)*(2*s^2*(-3 - 10*sw^2 + 16*sw^4 + 
                d^2*sw^2*(-5 + 8*sw^2) + d*(6 + 15*sw^2 - 24*sw^4)) + 
              s*(-18*d^2 + 3*d^3 - 8*(3 - 5*sw^2 + 8*sw^4) + 
                d*(39 - 40*sw^2 + 64*sw^4))*t + 2*(-1 + d)*(3 - 20*sw^2 + 
                32*sw^4)*t^2)) + 2*mz^6*s*(1 - sw^2)^3*
           (-45*d^2*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
             (s^2*(3*d^3 + 4*d^2*sw^2*(-5 + 8*sw^2) + d*(54 + 110*sw^2 - 
                  176*sw^4) + 14*(-3 - 10*sw^2 + 16*sw^4)) + s*(-51*d^2 + 
                6*d^3 - 56*(3 - 5*sw^2 + 8*sw^4) + d*(153 - 80*sw^2 + 
                  128*sw^4))*t + 2*(-7 + 2*d)*(3 - 20*sw^2 + 32*sw^4)*t^2)) - 
          mz^4*s^2*(1 - sw^2)^2*(-129*d^2*(2*Pi)^(3*d)*s^2 + 
            2^(1 + 3*d)*Pi^(3*d)*(2*s^2*(6*d^3 + 8*d^2*sw^2*(-5 + 8*sw^2) + 
                d*(57 + 135*sw^2 - 216*sw^4) + 11*(-3 - 10*sw^2 + 16*sw^4)) + 
              s*(-153*d^2 + 24*d^3 - 88*(3 - 5*sw^2 + 8*sw^4) + 
                d*(357 - 320*sw^2 + 512*sw^4))*t + 2*(-11 + 8*d)*(3 - 
                20*sw^2 + 32*sw^4)*t^2)))*GaugeXi[W]^2 - 
        2^(1 + 3*d)*Pi^(3*d)*(s + 2*mz^2*(1 - sw^2))*
         (-(mz*s*Sqrt[1 - sw^2]) + mz^3*(1 - sw^2)^(3/2))^2*
         (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
          2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          4*(3 - 20*sw^2 + 32*sw^4)*t^2)*GaugeXi[W]^3 + 
        mz^4*(2*Pi)^(3*d)*(1 - sw^2)^2*(-s + mz^2*(1 - sw^2))^2*
         (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
          2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          4*(3 - 20*sw^2 + 32*sw^4)*t^2)*GaugeXi[W]^4))/
      ((-1 + d)*mz^4*(mz^2 - s)^2*s^2*sw^4*(1 - sw^2)^2*
       (-1 + GaugeXi[W])^2) - (2^(1 + 2*d)*Pi^(2*d)*
       (((3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-3 - 10*sw^2 + 16*sw^4) + 
             (-3 + 20*sw^2 - 32*sw^4)*t))*(-s + mz^2*(1 - sw^2) + 
            mz^2*(1 - sw^2)*GaugeXi[W])^2)/s - 
        ((-s + mz^2*(1 - sw^2) + mz^2*(1 - sw^2)*GaugeXi[W])*
          ((-s + mz^2*(1 - sw^2))*(-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
              (s*(3 + 3*d + 10*sw^2 - 16*sw^4) + (3 - 20*sw^2 + 32*sw^4)*
                t)) - mz^2*(1 - sw^2)*(3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
              (s*(-3 - 10*sw^2 + 16*sw^4) + (-3 + 20*sw^2 - 32*sw^4)*t))*
            GaugeXi[W]))/s - ((2*Pi)^d*(-1 + 4*sw^2)*(-3 + 8*sw^2)*
          (d*(-s + mz^2*(1 - sw^2))^2 + 2*(-(d*mz^2*s*(1 - sw^2)) + 
             (-2 + d)*mz^4*(1 - sw^2)^2)*GaugeXi[W] + d*mz^4*(1 - sw^2)^2*
            GaugeXi[W]^2))/(-1 + d) - ((2*Pi)^d*(3 - 20*sw^2 + 32*sw^4)*
          (d*(-s + mz^2*(1 - sw^2))^2 + 2*(-(d*mz^2*s*(1 - sw^2)) + 
             (-2 + d)*mz^4*(1 - sw^2)^2)*GaugeXi[W] + d*mz^4*(1 - sw^2)^2*
            GaugeXi[W]^2))/(-1 + d) + 
        (2*(s^2*(3*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(-3 - 10*sw^2 + 16*sw^4))*t + 
           mz^4*(1 - sw^2)^2*(3*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(-3 - 10*sw^2 + 
               16*sw^4))*t + 2^(1 + d)*mz^2*Pi^d*(1 - sw^2)*
            (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 
                 8*sw^4)) + 3*s*(18 - 11*d + 2*d^2 - 20*sw^2 + 32*sw^4)*t + 
             4*(3 - 20*sw^2 + 32*sw^4)*t^2) - 2^(1 + d)*mz^2*Pi^d*(1 - sw^2)*
            (s*(-6 + 3*d - 20*sw^2 + 32*sw^4)*t + mz^2*(1 - sw^2)*
              (s*(-6 + 3*d - 20*sw^2 + 32*sw^4) + 3*d*t - 4*(3 - 5*sw^2 + 
                 8*sw^4)*t))*GaugeXi[W] + mz^4*(1 - sw^2)^2*
            (3*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(-3 - 10*sw^2 + 16*sw^4))*t*
            GaugeXi[W]^2))/s + ((-3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (2*s*(3 - 5*sw^2 + 8*sw^4) + (3 - 20*sw^2 + 32*sw^4)*t))*
          ((-s + mz^2*(1 - sw^2))^2*(d*s + 2*t) + 
           2*(mz^4*(1 - sw^2)^2*((-2 + d)*s - 2*t) - mz^2*s*(1 - sw^2)*
              (d*s + 2*t))*GaugeXi[W] + mz^4*(1 - sw^2)^2*(d*s + 2*t)*
            GaugeXi[W]^2))/((-1 + d)*s^2)))/((mz^2 - s)^2*(1 - sw^2)^2) + 
     (3*(2*Pi)^(2*d)*(2^(1 + d)*Pi^d*(1 - 4*sw^2)*(-s + mz^2*(1 - sw^2))*
         (s - s*GaugeXi[W])^2*(d*(-s + mz^2*(1 - sw^2))^2 + 
          2*(-(d*mz^2*s*(1 - sw^2)) + (-2 + d)*mz^4*(1 - sw^2)^2)*
           GaugeXi[W] + d*mz^4*(1 - sw^2)^2*GaugeXi[W]^2) + 
        (-s + mz^2*(1 - sw^2))*((-s + mz^2*(1 - sw^2))^2*(d*s + 2*t) + 
          2*(mz^4*(1 - sw^2)^2*((-2 + d)*s - 2*t) - mz^2*s*(1 - sw^2)*
             (d*s + 2*t))*GaugeXi[W] + mz^4*(1 - sw^2)^2*(d*s + 2*t)*
           GaugeXi[W]^2)*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(2*s*(-1 + sw^2) + 
            (-1 + 4*sw^2)*t) - 2^(1 + d)*Pi^d*(s*(-4 + d + 4*sw^2) + 
            2*(-1 + 4*sw^2)*t)*GaugeXi[W] + (d*(2*Pi)^d*s + 
            2^(1 + d)*Pi^d*(2*s*(-1 + sw^2) + (-1 + 4*sw^2)*t))*
           GaugeXi[W]^2) - (1 - d)*s*(-s + mz^2*(1 - sw^2) + 
          mz^2*(1 - sw^2)*GaugeXi[W])*(2^(1 + d)*mz^2*Pi^d*s*(1 - sw^2)*
           (s*(-2 + d - 4*sw^2) + 2*(-1 + 4*sw^2)*t) + 
          s^2*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(s + 2*s*sw^2 + t - 
              4*sw^2*t)) + mz^4*(1 - sw^2)^2*(-(d*(2*Pi)^d*s) + 
            2^(1 + d)*Pi^d*(s + 2*s*sw^2 + t - 4*sw^2*t)) - 
          (-(2^(1 + d)*Pi^d*s^2*(s*(-2 + d - 4*sw^2) + 2*(-1 + 4*sw^2)*t)) + 
            mz^4*(1 - sw^2)^2*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(s + 
                2*s*sw^2 + t - 4*sw^2*t)) + 3*mz^2*s*(1 - sw^2)*
             (-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(s*(-1 + d - 2*sw^2) + 
                (-1 + 4*sw^2)*t)))*GaugeXi[W] - (-s^2 + mz^4*(1 - sw^2)^2)*
           (-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(s + 2*s*sw^2 + t - 4*sw^2*t))*
           GaugeXi[W]^2 + mz^2*(1 - sw^2)*(-s + mz^2*(1 - sw^2))*
           (-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(s + 2*s*sw^2 + t - 4*sw^2*t))*
           GaugeXi[W]^3) - (1 - d)*s*(-s + mz^2*(1 - sw^2) + 
          mz^2*(1 - sw^2)*GaugeXi[W])*(2^(1 + d)*mz^2*Pi^d*s*(1 - sw^2)*
           (s*(-2 + d - 4*sw^2) + 2*(-1 + 4*sw^2)*t) + 
          s^2*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(s + 2*s*sw^2 + t - 
              4*sw^2*t)) + mz^4*(1 - sw^2)^2*(-3*d*(2*Pi)^d*s + 
            2^(1 + d)*Pi^d*(s*(1 + d + 2*sw^2) + t - 4*sw^2*t)) - 
          (-(2^(1 + d)*Pi^d*s^2*(s*(-2 + d - 4*sw^2) + 2*(-1 + 4*sw^2)*t)) + 
            mz^4*(1 - sw^2)^2*(-5*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s + 2*d*s + 
                2*s*sw^2 + t - 4*sw^2*t)) + mz^2*s*(1 - sw^2)*
             (-7*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-3 + 5*d - 6*sw^2) + 
                3*(-1 + 4*sw^2)*t)))*GaugeXi[W] + 
          (s^2*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(s + 2*s*sw^2 + t - 
                4*sw^2*t)) + mz^4*(1 - sw^2)^2*(-(d*(2*Pi)^d*s) + 
              2^(1 + d)*Pi^d*(s*(-1 + d - 2*sw^2) + (-1 + 4*sw^2)*t)))*
           GaugeXi[W]^2 + mz^2*(1 - sw^2)*(-s + mz^2*(1 - sw^2))*
           (-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(s + 2*s*sw^2 + t - 4*sw^2*t))*
           GaugeXi[W]^3) - 2*(1 - d)*s*
         (-(s^3*(-(d*(2*Pi)^d) + 2^(1 + d)*Pi^d*(1 + 2*sw^2))*t) + 
          mz^6*(1 - sw^2)^3*(-(d*(2*Pi)^d) + 2^(1 + d)*Pi^d*(1 + 2*sw^2))*t - 
          mz^4*(1 - sw^2)^2*(d*(2*Pi)^d*s*t + 2^(1 + d)*Pi^d*
             (s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2)) + s*(19 - 12*d + 
                2*d^2 - 10*sw^2)*t + 4*(1 - 4*sw^2)*t^2)) + 
          mz^2*s*(1 - sw^2)*(-(d*(2*Pi)^d*s*t) + 2^(1 + d)*Pi^d*
             (s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2)) + s*(19 - 11*d + 
                2*d^2 - 10*sw^2)*t + 4*(1 - 4*sw^2)*t^2)) + 
          2*(s^3*(-(d*(2*Pi)^d) + 2^(1 + d)*Pi^d*(1 + 2*sw^2))*t - 
            2^(1 + d)*mz^2*Pi^d*s*(1 - sw^2)*(s^2*(4 + d^2 + 8*sw^2 - 
                4*d*(1 + sw^2)) + s*(18 - 11*d + 2*d^2 - 12*sw^2)*t + 
              4*(1 - 4*sw^2)*t^2) + mz^6*(1 - sw^2)^3*(d*(2*Pi)^d*s - 
              2^(1 + d)*Pi^d*(s + 2*s*sw^2 - (-3 + d)*t)) + 
            mz^4*(1 - sw^2)^2*(-(d*(2*Pi)^d*s*(9*s + 23*t)) + 
              2^(1 + d)*Pi^d*(s^2*(5 + d^2 + 10*sw^2 - 4*d*sw^2) + 
                2*s*(10 + d^2 - 7*sw^2)*t + 4*(1 - 4*sw^2)*t^2)))*
           GaugeXi[W] + (-(s^3*(-(d*(2*Pi)^d) + 2^(1 + d)*Pi^d*(1 + 2*sw^2))*
              t) - 2^(1 + d)*mz^6*Pi^d*(1 - sw^2)^3*(2*s*(-2 + d - 4*sw^2) + 
              (-10 + 3*d + 4*sw^2)*t) - 2^(1 + d)*mz^4*Pi^d*(1 - sw^2)^2*
             (s^2*(8 + d^2 + 16*sw^2 - 2*d*(3 + 2*sw^2)) + 2*s*(12 - 6*d + 
                d^2 - 12*sw^2)*t + 4*(1 - 4*sw^2)*t^2) + mz^2*s*(1 - sw^2)*
             (d*(2*Pi)^d*s*t + 2^(1 + d)*Pi^d*(s^2*(4 + d^2 + 8*sw^2 - 
                  4*d*(1 + sw^2)) + s*(15 - 10*d + 2*d^2 - 18*sw^2)*t + 
                4*(1 - 4*sw^2)*t^2)))*GaugeXi[W]^2 + 2^(1 + d)*mz^2*Pi^d*
           (1 - sw^2)*(-s + mz^2*(1 - sw^2))*(s*(-2 + d - 4*sw^2)*t + 
            mz^2*(1 - sw^2)*(s*(-2 + d - 4*sw^2) + 2*(-3 + d)*t))*
           GaugeXi[W]^3 - mz^4*(1 - sw^2)^2*(mz^2*(1 - sw^2)*
             (-(d*(2*Pi)^d) + 2^(1 + d)*Pi^d*(-1 + d - 2*sw^2)) + 
            s*(-(d*(2*Pi)^d) + 2^(1 + d)*Pi^d*(1 + 2*sw^2)))*t*
           GaugeXi[W]^4)))/((-1 + d)*mz^4*(mz^2 - s)*sw^4*(1 - sw^2)^2*
       (s - s*GaugeXi[W])^2) + 
     (3*(((2*Pi)^(2*d)*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(3*s + t))*
          (-s + mz^2*(1 - sw^2) + mz^2*(1 - sw^2)*GaugeXi[W])^2)/s - 
        (2^(1 + 3*d)*Pi^(3*d)*(d*(-s + mz^2*(1 - sw^2))^2 + 
           2*(-(d*mz^2*s*(1 - sw^2)) + (-2 + d)*mz^4*(1 - sw^2)^2)*
            GaugeXi[W] + d*mz^4*(1 - sw^2)^2*GaugeXi[W]^2))/(-1 + d) + 
        ((2*Pi)^(3*d)*((-4 + d)*s - 2*t)*((-s + mz^2*(1 - sw^2))^2*
            ((-2 + d)*s - 2*t) + 2*mz^2*(1 - sw^2)*
            (d*s*(-s + mz^2*(1 - sw^2)) + 2*(s^2 + s*t + mz^2*(1 - sw^2)*t))*
            GaugeXi[W] + mz^4*(1 - sw^2)^2*((-2 + d)*s - 2*t)*GaugeXi[W]^2))/
         ((-1 + d)*s^2) - ((2*Pi)^(2*d)*(-s + mz^2*(1 - sw^2) + 
           mz^2*(1 - sw^2)*GaugeXi[W])*(mz^2*(1 - sw^2)*(d*(2*Pi)^d*s - 
             2^(1 + d)*Pi^d*(3*s + t)) + s*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
              (3*s - d*s + t)) + (2^(1 + d)*Pi^d*s*((-6 + d)*s - 2*t) + 
             mz^2*(1 - sw^2)*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(3*s + t)))*
            GaugeXi[W] + (mz^2*(1 - sw^2)*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*
                (3*s + t)) + s*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(3*s - d*s + 
                 t)))*GaugeXi[W]^2 - mz^2*(1 - sw^2)*(-(d*(2*Pi)^d*s) + 
             2^(1 + d)*Pi^d*(3*s + t))*GaugeXi[W]^3))/
         (s*(-1 + GaugeXi[W])^2) - 
        (2*(-((2*Pi)^(3*d)*((-4 + d)*s^2*(s + t) + (-4 + d)*mz^4*(1 - sw^2)^
                2*(s + t) + 2*mz^2*(1 - sw^2)*((8 - 5*d + d^2)*s^2 + 
                (20 - 11*d + 2*d^2)*s*t + 4*t^2))) + 2^(1 + 3*d)*Pi^(3*d)*
            ((-4 + d)*s^2*(s + t) + mz^4*(1 - sw^2)^2*((-2 + d)*s + 2*
                (-3 + d)*t) + mz^2*(1 - sw^2)*((12 - 9*d + 2*d^2)*s^2 + 
               (36 - 21*d + 4*d^2)*s*t + 8*t^2))*GaugeXi[W] - 
           (2*Pi)^(3*d)*(2*d^2*mz^2*s*(1 - sw^2)*(s + 2*t) - 
             4*(s^3 + s^2*t - 6*mz^2*s*(1 - sw^2)*t + 4*mz^4*(1 - sw^2)^2*
                t - 2*mz^2*(1 - sw^2)*t^2) + d*(s^2*(s + t) - 6*mz^2*s*
                (1 - sw^2)*(s + 3*t) + 2*mz^4*(1 - sw^2)^2*(s + 3*t)))*
            GaugeXi[W]^2 + 2^(1 + 3*d)*mz^2*Pi^(3*d)*(1 - sw^2)*
            ((-4 + d)*s*(s + t) + mz^2*(1 - sw^2)*((-2 + d)*s + 2*(-3 + d)*
                t))*GaugeXi[W]^3 - (-4 + d)*mz^4*(2*Pi)^(3*d)*(1 - sw^2)^2*
            (s + t)*GaugeXi[W]^4))/(s*(-1 + GaugeXi[W])^2)))/
      (mz^4*sw^4*(1 - sw^2)^2)))/Pi^(4*d), 
  ((I/3)*2^(-5 - 2*d)*EL^6*(2^(2 + d)*Pi^d*sw^2*(-s + mz^2*(1 - sw^2))*
      ((-2 + d)*s^2 + 4*s*t + 4*t^2)*(s + mz^2*(1 - sw^2) - 
       mz^2*(1 - sw^2)*GaugeXi[W]) + 
     (s*(d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*(-2*(-1 + d)*s^2 + 
          (8 - 5*d + d^2)*s*t + 2*t^2) + mz^2*(1 - sw^2)*
         (-3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*(2*(1 - d + d^2)*s^2 + 
            (8 - 5*d + d^2)*s*t + 2*t^2)) - 
        (2^(1 + d)*Pi^d*s*((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 4*t^2) + 
          3*mz^2*(1 - sw^2)*(-(d^2*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*
             ((2 - 2*d + d^2)*s^2 + (8 - 5*d + d^2)*s*t + 2*t^2)))*
         GaugeXi[W] - (s + 3*mz^2*(1 - sw^2))*(-(d^2*(2*Pi)^d*s^2) + 
          2^(1 + d)*Pi^d*(2*(-1 + d)*s^2 - (8 - 5*d + d^2)*s*t - 2*t^2))*
         GaugeXi[W]^2 + mz^2*(1 - sw^2)*(-3*d^2*(2*Pi)^d*s^2 + 
          2^(1 + d)*Pi^d*((-2 + 2*d + d^2)*s^2 - (8 - 5*d + d^2)*s*t - 
            2*t^2))*GaugeXi[W]^3))/(-1 + GaugeXi[W])^2 + 
     (s*(-(d^2*(2*Pi)^d*s^4) + 2^(1 + d)*Pi^d*s^2*
         (2*s^2*(-1 + d - 2*sw^2 + d*sw^2) - s*(8 - 5*d + d^2 - 8*sw^2)*t + 
          2*(-1 + 4*sw^2)*t^2) + mz^4*(1 - sw^2)^2*(-3*d^2*(2*Pi)^d*s^2 + 
          2^(1 + d)*Pi^d*(2*s^2*(1 + d^2 + 2*sw^2 - d*(1 + sw^2)) + 
            s*(8 - 5*d + d^2 - 8*sw^2)*t + 2*(1 - 4*sw^2)*t^2)) + 
        (2^(1 + d)*Pi^d*s^2*(s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2)) + 
            2*s*(8 - 5*d + d^2 - 8*sw^2)*t + 4*(1 - 4*sw^2)*t^2) - 
          mz^2*s*(1 - sw^2)*(-11*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
             (s^2*(-2 + 5*d^2 - 4*sw^2 + 2*d*(1 + sw^2)) - s*(8 - 5*d + d^2 - 
                8*sw^2)*t + 2*(-1 + 4*sw^2)*t^2)) + mz^4*(1 - sw^2)^2*
           (d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*(-2*s^2*(3 + d^2 + 6*sw^2 - 
                3*d*(1 + sw^2)) - 3*s*(8 - 5*d + d^2 - 8*sw^2)*t + 
              6*(-1 + 4*sw^2)*t^2)))*GaugeXi[W] + 
        (-(d^2*(2*Pi)^d*s^4) - 2^(1 + d)*mz^2*Pi^d*s*(1 - sw^2)*
           (s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2)) + 
            2*s*(8 - 5*d + d^2 - 8*sw^2)*t + 4*(1 - 4*sw^2)*t^2) + 
          2^(1 + d)*Pi^d*s^2*(2*s^2*(-1 + d - 2*sw^2 + d*sw^2) - 
            s*(8 - 5*d + d^2 - 8*sw^2)*t + 2*(-1 + 4*sw^2)*t^2) + 
          3*mz^4*(1 - sw^2)^2*(-(d^2*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*
             (s^2*(2 + d^2 + 4*sw^2 - 2*d*(1 + sw^2)) + s*(8 - 5*d + d^2 - 
                8*sw^2)*t + 2*(1 - 4*sw^2)*t^2)))*GaugeXi[W]^2 + 
        mz^2*(1 - sw^2)*(-s + mz^2*(1 - sw^2))*(-3*d^2*(2*Pi)^d*s^2 + 
          2^(1 + d)*Pi^d*(s^2*(-2 + d^2 - 4*sw^2 + 2*d*(1 + sw^2)) - 
            s*(8 - 5*d + d^2 - 8*sw^2)*t + 2*(-1 + 4*sw^2)*t^2))*
         GaugeXi[W]^3))/((-mz^2 + s)*(-1 + GaugeXi[W])^2)))/
   ((-1 + d)*mz^4*Pi^(2*d)*s^3*sw^4*(1 - sw^2)^2), 
  ((-I/3)*2^(-5 - 4*d)*EL^6*
    (((2*Pi)^(2*d)*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(3*s + t))*
       (-s + mz^2*(1 - sw^2) + mz^2*(1 - sw^2)*GaugeXi[W])^2)/s - 
     (2^(1 + 3*d)*Pi^(3*d)*(d*(-s + mz^2*(1 - sw^2))^2 + 
        2*(-(d*mz^2*s*(1 - sw^2)) + (-2 + d)*mz^4*(1 - sw^2)^2)*GaugeXi[W] + 
        d*mz^4*(1 - sw^2)^2*GaugeXi[W]^2))/(-1 + d) + 
     ((2*Pi)^(3*d)*((-4 + d)*s - 2*t)*((-s + mz^2*(1 - sw^2))^2*
         ((-2 + d)*s - 2*t) + 2*mz^2*(1 - sw^2)*(d*s*(-s + mz^2*(1 - sw^2)) + 
          2*(s^2 + s*t + mz^2*(1 - sw^2)*t))*GaugeXi[W] + 
        mz^4*(1 - sw^2)^2*((-2 + d)*s - 2*t)*GaugeXi[W]^2))/((-1 + d)*s^2) + 
     (4^(1 + d)*Pi^(2*d)*sw^2*(-s + mz^2*(1 - sw^2))*(d*(2*Pi)^d*s^4 + 
        2^(1 + d)*Pi^d*s^2*(-s^2 + 2*s*t + 2*t^2) + 2^(1 + d)*(-3 + 2*d)*mz^2*
         Pi^d*s*(1 - sw^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2) + 
        mz^4*(1 - sw^2)^2*(d*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
           (-s^2 + 2*s*t + 2*t^2)) - 2^(1 + d)*mz^2*Pi^d*(1 - sw^2)*
         (s + mz^2*(1 - sw^2))*((-2 + d)*s^2 + 4*s*t + 4*t^2)*GaugeXi[W] + 
        mz^4*(1 - sw^2)^2*(-3*d*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
           ((-1 + 2*d)*s^2 + 2*s*t + 2*t^2))*GaugeXi[W]^2))/((-1 + d)*s^3) - 
     ((2*Pi)^(2*d)*(-s + mz^2*(1 - sw^2) + mz^2*(1 - sw^2)*GaugeXi[W])*
       (mz^2*(1 - sw^2)*(d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(3*s + t)) + 
        s*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(3*s - d*s + t)) + 
        (2^(1 + d)*Pi^d*s*((-6 + d)*s - 2*t) + mz^2*(1 - sw^2)*
           (-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(3*s + t)))*GaugeXi[W] + 
        (mz^2*(1 - sw^2)*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(3*s + t)) + 
          s*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(3*s - d*s + t)))*GaugeXi[W]^2 - 
        mz^2*(1 - sw^2)*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(3*s + t))*
         GaugeXi[W]^3))/(s*(-1 + GaugeXi[W])^2) - 
     (2*(-((2*Pi)^(3*d)*((-4 + d)*s^2*(s + t) + (-4 + d)*mz^4*(1 - sw^2)^2*
            (s + t) + 2*mz^2*(1 - sw^2)*((8 - 5*d + d^2)*s^2 + 
             (20 - 11*d + 2*d^2)*s*t + 4*t^2))) + 2^(1 + 3*d)*Pi^(3*d)*
         ((-4 + d)*s^2*(s + t) + mz^4*(1 - sw^2)^2*((-2 + d)*s + 
            2*(-3 + d)*t) + mz^2*(1 - sw^2)*((12 - 9*d + 2*d^2)*s^2 + 
            (36 - 21*d + 4*d^2)*s*t + 8*t^2))*GaugeXi[W] - 
        (2*Pi)^(3*d)*(2*d^2*mz^2*s*(1 - sw^2)*(s + 2*t) - 
          4*(s^3 + s^2*t - 6*mz^2*s*(1 - sw^2)*t + 4*mz^4*(1 - sw^2)^2*t - 
            2*mz^2*(1 - sw^2)*t^2) + d*(s^2*(s + t) - 6*mz^2*s*(1 - sw^2)*
             (s + 3*t) + 2*mz^4*(1 - sw^2)^2*(s + 3*t)))*GaugeXi[W]^2 + 
        2^(1 + 3*d)*mz^2*Pi^(3*d)*(1 - sw^2)*((-4 + d)*s*(s + t) + 
          mz^2*(1 - sw^2)*((-2 + d)*s + 2*(-3 + d)*t))*GaugeXi[W]^3 - 
        (-4 + d)*mz^4*(2*Pi)^(3*d)*(1 - sw^2)^2*(s + t)*GaugeXi[W]^4))/
      (s*(-1 + GaugeXi[W])^2) + 
     ((2*Pi)^(2*d)*(2^(1 + d)*Pi^d*(1 - 4*sw^2)*(-s + mz^2*(1 - sw^2))*
         (s - s*GaugeXi[W])^2*(d*(-s + mz^2*(1 - sw^2))^2 + 
          2*(-(d*mz^2*s*(1 - sw^2)) + (-2 + d)*mz^4*(1 - sw^2)^2)*
           GaugeXi[W] + d*mz^4*(1 - sw^2)^2*GaugeXi[W]^2) + 
        (-s + mz^2*(1 - sw^2))*((-s + mz^2*(1 - sw^2))^2*(d*s + 2*t) + 
          2*(mz^4*(1 - sw^2)^2*((-2 + d)*s - 2*t) - mz^2*s*(1 - sw^2)*
             (d*s + 2*t))*GaugeXi[W] + mz^4*(1 - sw^2)^2*(d*s + 2*t)*
           GaugeXi[W]^2)*(d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(2*s*(-1 + sw^2) + 
            (-1 + 4*sw^2)*t) - 2^(1 + d)*Pi^d*(s*(-4 + d + 4*sw^2) + 
            2*(-1 + 4*sw^2)*t)*GaugeXi[W] + (d*(2*Pi)^d*s + 
            2^(1 + d)*Pi^d*(2*s*(-1 + sw^2) + (-1 + 4*sw^2)*t))*
           GaugeXi[W]^2) - (1 - d)*s*(-s + mz^2*(1 - sw^2) + 
          mz^2*(1 - sw^2)*GaugeXi[W])*(2^(1 + d)*mz^2*Pi^d*s*(1 - sw^2)*
           (s*(-2 + d - 4*sw^2) + 2*(-1 + 4*sw^2)*t) + 
          s^2*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(s + 2*s*sw^2 + t - 
              4*sw^2*t)) + mz^4*(1 - sw^2)^2*(-(d*(2*Pi)^d*s) + 
            2^(1 + d)*Pi^d*(s + 2*s*sw^2 + t - 4*sw^2*t)) - 
          (-(2^(1 + d)*Pi^d*s^2*(s*(-2 + d - 4*sw^2) + 2*(-1 + 4*sw^2)*t)) + 
            mz^4*(1 - sw^2)^2*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(s + 
                2*s*sw^2 + t - 4*sw^2*t)) + mz^2*s*(1 - sw^2)*
             (-19*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-3 + 11*d - 6*sw^2) + 
                3*(-1 + 4*sw^2)*t)))*GaugeXi[W] - (-s^2 + mz^4*(1 - sw^2)^2)*
           (-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(s + 2*s*sw^2 + t - 4*sw^2*t))*
           GaugeXi[W]^2 + mz^2*(1 - sw^2)*(-s + mz^2*(1 - sw^2))*
           (-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(s + 2*s*sw^2 + t - 4*sw^2*t))*
           GaugeXi[W]^3) - (1 - d)*s*(-s + mz^2*(1 - sw^2) + 
          mz^2*(1 - sw^2)*GaugeXi[W])*(2^(1 + d)*mz^2*Pi^d*s*(1 - sw^2)*
           (s*(-2 + d - 4*sw^2) + 2*(-1 + 4*sw^2)*t) + 
          s^2*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(s + 2*s*sw^2 + t - 
              4*sw^2*t)) + mz^4*(1 - sw^2)^2*(-(d*(2*Pi)^d*s) + 
            2^(1 + d)*Pi^d*(s + 2*s*sw^2 + t - 4*sw^2*t)) + 
          (2^(1 + d)*Pi^d*s^2*(s*(-2 + d - 4*sw^2) + 2*(-1 + 4*sw^2)*t) + 
            mz^2*s*(1 - sw^2)*(-7*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(
                s*(3 + 2*d + 6*sw^2) + 3*(1 - 4*sw^2)*t)) + 
            mz^4*(1 - sw^2)^2*(-(d*(2*Pi)^d*s) + 2^(1 + d)*Pi^d*(
                s*(-1 + d - 2*sw^2) + (-1 + 4*sw^2)*t)))*GaugeXi[W] - 
          (s^2*(d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(s + 2*s*sw^2 + t - 
                4*sw^2*t)) + mz^4*(1 - sw^2)^2*(-5*d*(2*Pi)^d*s + 
              2^(1 + d)*Pi^d*(s + 2*d*s + 2*s*sw^2 + t - 4*sw^2*t)))*
           GaugeXi[W]^2 + mz^2*(1 - sw^2)*(-s + mz^2*(1 - sw^2))*
           (-3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(1 + d + 2*sw^2) + t - 
              4*sw^2*t))*GaugeXi[W]^3) + 2*(1 - d)*s*
         (s^3*(-(d*(2*Pi)^d) + 2^(1 + d)*Pi^d*(1 + 2*sw^2))*t - 
          mz^6*(1 - sw^2)^3*(d*(2*Pi)^d + 2^(1 + d)*Pi^d*(1 - d + 2*sw^2))*
           t - mz^2*s*(1 - sw^2)*(7*d*(2*Pi)^d*s*t + 2^(1 + d)*Pi^d*
             (s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2)) + s*(19 - 15*d + 
                2*d^2 - 10*sw^2)*t + 4*(1 - 4*sw^2)*t^2)) + 
          mz^4*(1 - sw^2)^2*(-11*d*(2*Pi)^d*s*t + 2^(1 + d)*Pi^d*
             (s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2)) + s*(19 - 6*d + 2*d^2 - 
                10*sw^2)*t + 4*(1 - 4*sw^2)*t^2)) - 
          2*(s^3*(-(d*(2*Pi)^d) + 2^(1 + d)*Pi^d*(1 + 2*sw^2))*t - 
            2^(1 + d)*mz^2*Pi^d*s*(1 - sw^2)*(s^2*(4 + d^2 + 8*sw^2 - 
                4*d*(1 + sw^2)) + s*(18 - 11*d + 2*d^2 - 12*sw^2)*t + 
              4*(1 - 4*sw^2)*t^2) + mz^6*(1 - sw^2)^3*(d*(2*Pi)^d*s - 
              2^(1 + d)*Pi^d*(s + 2*s*sw^2 - (-3 + d)*t)) + 
            mz^4*(1 - sw^2)^2*(-(d*(2*Pi)^d*s*(9*s + 23*t)) + 
              2^(1 + d)*Pi^d*(s^2*(5 + d^2 + 10*sw^2 - 4*d*sw^2) + 
                2*s*(10 + d^2 - 7*sw^2)*t + 4*(1 - 4*sw^2)*t^2)))*
           GaugeXi[W] + (s^3*(-(d*(2*Pi)^d) + 2^(1 + d)*Pi^d*(1 + 2*sw^2))*
             t + 2^(1 + d)*mz^6*Pi^d*(1 - sw^2)^3*(2*s*(-2 + d - 4*sw^2) + 
              (-10 + 3*d + 4*sw^2)*t) + 2^(1 + d)*mz^4*Pi^d*(1 - sw^2)^2*
             (s^2*(8 + d^2 + 16*sw^2 - 2*d*(3 + 2*sw^2)) + 2*s*(12 - 6*d + 
                d^2 - 12*sw^2)*t + 4*(1 - 4*sw^2)*t^2) - mz^2*s*(1 - sw^2)*
             (7*d*(2*Pi)^d*s*t + 2^(1 + d)*Pi^d*(s^2*(4 + d^2 + 8*sw^2 - 
                  4*d*(1 + sw^2)) + s*(15 - 13*d + 2*d^2 - 18*sw^2)*t + 
                4*(1 - 4*sw^2)*t^2)))*GaugeXi[W]^2 - 2^(1 + d)*mz^2*Pi^d*
           (1 - sw^2)*(-s + mz^2*(1 - sw^2))*(s*(-2 + d - 4*sw^2)*t + 
            mz^2*(1 - sw^2)*(s*(-2 + d - 4*sw^2) + 2*(-3 + d)*t))*
           GaugeXi[W]^3 - mz^4*(1 - sw^2)^2*(-s + mz^2*(1 - sw^2))*
           (-(d*(2*Pi)^d) + 2^(1 + d)*Pi^d*(1 + 2*sw^2))*t*GaugeXi[W]^4)))/
      ((-1 + d)*(mz^2 - s)*(s - s*GaugeXi[W])^2)))/
   (mz^4*Pi^(4*d)*sw^4*(1 - sw^2)^2), 
  ((I/81)*2^(-5 - 3*d)*EL^6*((9*2^(4 + d)*Pi^d*sw^2*(1 - sw^2)*
       (1 - 4*sw^2 + 8*sw^4)*(2^(1 + d)*mz^4*Pi^d*((-2 + d)*s^2 + 4*s*t + 
          4*t^2) + 2^(1 + d)*Pi^d*s^2*((-2 + d)*s^2 + 4*s*t + 4*t^2) + 
        mz^2*s*(-(d^2*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*((-8 + 5*d)*s^2 - 
            2*(-8 + d)*s*t - 2*(-8 + d)*t^2))))/s^3 + 
     (2^(4 + d)*Pi^d*sw^2*(1 - sw^2)*(9 - 24*sw^2 + 32*sw^4)*
       (2^(1 + d)*mz^4*Pi^d*((-2 + d)*s^2 + 4*s*t + 4*t^2) + 
        2^(1 + d)*Pi^d*s^2*((-2 + d)*s^2 + 4*s*t + 4*t^2) + 
        mz^2*s*(-(d^2*(2*Pi)^d*s^2) + 2^(1 + d)*Pi^d*((-8 + 5*d)*s^2 - 
            2*(-8 + d)*s*t - 2*(-8 + d)*t^2))))/s^3 - 
     ((2*Pi)^d*(2*mz^4*(27*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
           (2*s^2*(27 - 54*sw^2 - 72*sw^4 + 352*sw^6 - 256*sw^8 + 
              9*d^2*sw^2*(-3 + 4*sw^2) + d*(-27 + 81*sw^2 - 36*sw^4 - 
                176*sw^6 + 128*sw^8)) + s*(-45*d*(3 - 12*sw^2 + 16*sw^4) + 
              9*d^2*(3 - 12*sw^2 + 16*sw^4) + 8*(27 - 135*sw^2 + 252*sw^4 - 
                176*sw^6 + 128*sw^8))*t + 2*(27 - 216*sw^2 + 576*sw^4 - 
              704*sw^6 + 512*sw^8)*t^2)) + 2*(27*d^2*(2*Pi)^d*s^4 + 
          2^(1 + d)*Pi^d*s^2*(2*s^2*(27 - 54*sw^2 - 72*sw^4 + 352*sw^6 - 
              256*sw^8 + 9*d^2*sw^2*(-3 + 4*sw^2) + d*(-27 + 81*sw^2 - 
                36*sw^4 - 176*sw^6 + 128*sw^8)) + 
            s*(-45*d*(3 - 12*sw^2 + 16*sw^4) + 9*d^2*(3 - 12*sw^2 + 
                16*sw^4) + 8*(27 - 135*sw^2 + 252*sw^4 - 176*sw^6 + 
                128*sw^8))*t + 2*(27 - 216*sw^2 + 576*sw^4 - 704*sw^6 + 
              512*sw^8)*t^2)) - mz^2*(27*d^3*(2*Pi)^d*s^3 + 
          2^(1 + d)*Pi^d*s*(2*s^2*(9*d^3*sw^2*(-3 + 4*sw^2) + 
              d*(243 - 702*sw^2 + 216*sw^4 + 1760*sw^6 - 1280*sw^8) + 
              d^2*(-81 + 297*sw^2 - 324*sw^4 - 176*sw^6 + 128*sw^8) + 
              8*(-27 + 54*sw^2 + 72*sw^4 - 352*sw^6 + 256*sw^8)) + 
            s*(-117*d^2*(3 - 12*sw^2 + 16*sw^4) + 9*d^3*(3 - 12*sw^2 + 
                16*sw^4) - 64*(27 - 135*sw^2 + 252*sw^4 - 176*sw^6 + 
                128*sw^8) + 8*d*(162 - 675*sw^2 + 972*sw^4 - 176*sw^6 + 
                128*sw^8))*t + 2*(-8 + d)*(27 - 216*sw^2 + 576*sw^4 - 
              704*sw^6 + 512*sw^8)*t^2))))/((mz^2 - s)*s^2) - 
     (9*(2^(1 + 2*d)*(-2 + d)*mz^4*Pi^(2*d)*(3 - 26*sw^2 + 84*sw^4 - 
          144*sw^6 + 128*sw^8) - mz^2*(3*d^3*(2*Pi)^(2*d)*s + 
          2^(1 + 2*d)*Pi^(2*d)*(s*(9*d^3*sw^2*(-1 + 2*sw^2) + 
              2*d^2*(-9 + 52*sw^2 - 96*sw^4 - 36*sw^6 + 32*sw^8) - 
              20*d*(-3 + 16*sw^2 - 24*sw^4 - 36*sw^6 + 32*sw^8) + 
              20*(-3 + 14*sw^2 - 12*sw^4 - 72*sw^6 + 64*sw^8)) + 
            (-36*d^2*(1 - 6*sw^2 + 12*sw^4) + 3*d^3*(1 - 6*sw^2 + 12*sw^4) - 
              8*(21 - 128*sw^2 + 264*sw^4 - 36*sw^6 + 32*sw^8) + 
              2*d*(69 - 418*sw^2 + 852*sw^4 - 72*sw^6 + 64*sw^8))*t)) + 
        2*(3*d*(2*Pi)^(2*d)*(d*s^2 + t^2) + 2^(1 + 2*d)*Pi^(2*d)*
           (s^2*(6 - 28*sw^2 + 24*sw^4 + 144*sw^6 - 128*sw^8 + 
              9*d^2*sw^2*(-1 + 2*sw^2) + d*(-6 + 32*sw^2 - 48*sw^4 - 
                72*sw^6 + 64*sw^8)) + s*(-18*d*(1 - 6*sw^2 + 12*sw^4) + 
              3*d^2*(1 - 6*sw^2 + 12*sw^4) + 2*(15 - 94*sw^2 + 204*sw^4 - 
                72*sw^6 + 64*sw^8))*t + (-3 - 13*(-2 + d)*sw^2 + 
              42*(-2 + d)*sw^4 - 72*(-2 + d)*sw^6 + 64*(-2 + d)*sw^8)*t^2)) + 
        (2^(1 + 2*d)*Pi^(2*d)*(3 - 26*sw^2 + 84*sw^4 - 144*sw^6 + 128*sw^8)*
          ((-2 + d)*s^2*t^2 + mz^4*((-2 + d)*s^2 + 4*(-1 + d)*s*t + 
             4*(-1 + d)*t^2) + 2*mz^2*s*t*(-2*t + d*(s + 2*t))))/s^2 + 
        (2^(1 + d)*Pi^d*(t + (mz^2*(s + 2*t))/s)*
          (mz^2*(3*d^2*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
              (s*(9*d^2*sw^2*(-1 + 2*sw^2) + d*(-9 + 58*sw^2 - 132*sw^4 + 
                   72*sw^6 - 64*sw^8) + 4*(3 - 20*sw^2 + 48*sw^4 - 36*sw^6 + 
                   32*sw^8)) - (-2 + d)*(3 - 26*sw^2 + 84*sw^4 - 144*sw^6 + 
                 128*sw^8)*t)) + 2*s*(3*d*(2*Pi)^d*(s - t) + 
             2^(1 + d)*Pi^d*(s*(-3 + (14 - 9*d)*sw^2 + 6*(-2 + 3*d)*sw^4 - 
                 72*sw^6 + 64*sw^8) + (6 + 13*(-4 + d)*sw^2 - 42*(-4 + d)*
                  sw^4 + 72*(-4 + d)*sw^6 - 64*(-4 + d)*sw^8)*t))))/s))/
      (mz^2 - s)))/(Pi^(3*d)*sw^4*(1 - sw^2)^2), 
  ((-I/9)*EL^6*((2^(3 + d)*Pi^d*sw^2*(2*s^2 - (-8 + d)*mz^2*s*(1 - sw^2) + 
        2*mz^4*(1 - sw^2)^2)*((-2 + d)*s^2 + 4*s*t + 4*t^2))/s^3 + 
     (2^(1 + d)*Pi^d*s^2*(s^2*(3*d^2 - 4*d*(3 + 2*sw^2) + 4*(3 + 4*sw^2)) + 
         2*s*(24 - 15*d + 3*d^2 - 16*sw^2)*t + 4*(3 - 8*sw^2)*t^2) + 
       2^(1 + d)*mz^4*Pi^d*(1 - sw^2)^2*(s^2*(3*d^2 - 4*d*(3 + 2*sw^2) + 
           4*(3 + 4*sw^2)) + 2*s*(24 - 15*d + 3*d^2 - 16*sw^2)*t + 
         4*(3 - 8*sw^2)*t^2) + mz^2*(1 - sw^2)*(-3*d^3*(2*Pi)^d*s^3 + 
         2^(1 + d)*Pi^d*s*(2*s^2*(d^2*(9 + 2*sw^2) + 8*(3 + 4*sw^2) - 
             d*(27 + 20*sw^2)) - (-8 + d)*s*(24 - 15*d + 3*d^2 - 16*sw^2)*t + 
           2*(-8 + d)*(-3 + 8*sw^2)*t^2)))/(s^2*(-mz^2 + s)*(1 - sw^2)) + 
     (-(2^(1 + d)*(-2 + d)*mz^4*Pi^d*(1 - sw^2)^2*(3 - 14*sw^2 + 8*sw^4)) - 
       mz^2*(1 - sw^2)*(-3*d^3*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
          (s*(60 + 80*sw^2 + d^3*sw^2 - 80*sw^4 + 20*d*(-3 - sw^2 + 2*sw^4) - 
             2*d^2*(-9 + 3*sw^2 + 2*sw^4)) + (-3 + 2*sw^2)*(-12*d^2 + d^3 + 
             d*(46 - 4*sw^2) + 8*(-7 + sw^2))*t)) + 
       2*(-3*d*(2*Pi)^d*(d*s^2 + t^2) + 2^(1 + d)*Pi^d*
          (s^2*(-6 - 8*sw^2 + d^2*sw^2 + 8*sw^4 + d*(6 + 2*sw^2 - 4*sw^4)) + 
           s*(10 - 6*d + d^2 - 4*sw^2)*(-3 + 2*sw^2)*t + 
           (3 + 7*(-2 + d)*sw^2 - 4*(-2 + d)*sw^4)*t^2)) + 
       (2*(2^(1 + d)*Pi^d - d*(2*Pi)^d)*(-3 + 2*sw^2)*(-1 + 4*sw^2)*
         ((-2 + d)*s^2*t^2 + mz^4*(1 - sw^2)^2*((-2 + d)*s^2 + 
            4*(-1 + d)*s*t + 4*(-1 + d)*t^2) + 2*mz^2*s*(1 - sw^2)*t*
           (-2*t + d*(s + 2*t))))/((-2 + d)*s^2) + 
       (2*(t + (mz^2*(1 - sw^2)*(s + 2*t))/s)*(2^(1 + d)*Pi^d*s*(-3 + 2*sw^2)*
           (s*(-2 + d - 4*sw^2) + (-4 + d)*(-1 + 4*sw^2)*t) + 
          mz^2*(1 - sw^2)*(-3*d^2*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
             (s*(d^2*sw^2 + d*(3 - 2*sw^2)^2 - 4*(3 - 5*sw^2 + 2*sw^4)) + 
              (-2 + d)*(3 - 14*sw^2 + 8*sw^4)*t))))/s)/
      ((mz^2 - s)*(1 - sw^2))))/(2^(2*(2 + d))*Pi^(2*d)*sw^4), 
  ((I/9)*2^(-5 - 2*d)*EL^6*(s*(1 - sw^2)*(3*d^2*(2*Pi)^d*s^2 + 
       2^(1 + d)*Pi^d*(2*s^2*(3 + 10*sw^2 - 16*sw^4 + 
           d*(-3 - 5*sw^2 + 8*sw^4)) + s*(-15*d + 3*d^2 + 
           8*(3 - 5*sw^2 + 8*sw^4))*t + 2*(3 - 20*sw^2 + 32*sw^4)*t^2)) - 
     (mz^2*(1 - sw^2)*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
          s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          2*(3 - 20*sw^2 + 32*sw^4)*t^2))*(-1 + GaugeXi[Z]))/(-1 + d) - 
     ((1 - sw^2)*(3*d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
         (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
          s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          2*(3 - 20*sw^2 + 32*sw^4)*t^2) + mh^2*(-3*d^2*(2*Pi)^d*s^2 + 
          2^(1 + d)*Pi^d*(s^2*(6 + 3*d^2 + 20*sw^2 - 32*sw^4 + 
              2*d*(-3 - 5*sw^2 + 8*sw^4)) + s*(-15*d + 3*d^2 + 
              8*(3 - 5*sw^2 + 8*sw^4))*t + 2*(3 - 20*sw^2 + 32*sw^4)*t^2)) - 
        mz^2*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
           (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
            s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
            2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[Z]))/(-1 + d)))/
   (Pi^(2*d)*(mz^2 - s)^2*s^2*sw^4*(1 - sw^2)^3), 
  ((-I/144)*EL^6*((2^(8 - d)*(-2 + d)*((-2 + d)*s^2 + 4*s*t + 4*t^2))/Pi^d + 
     (2^(4 - 4*d)*s*(d^2*(2*Pi)^(3*d)*s^2 + 2^(2 + 3*d)*Pi^(3*d)*
         (s^2*((1 - 4*sw^2)^2 - d*(1 - 4*sw^2)^2 + d^2*(-2*sw^2 + 4*sw^4)) + 
          (-2 + d)*s*(1 - 4*sw^2)^2*t + (-2 + d)*(1 - 4*sw^2)^2*t^2)))/
      (Pi^(4*d)*(-mz^2 + s)*sw^2*(1 - sw^2)) + 
     (8^(1 - d)*s*(3*d^2*(2*Pi)^(2*d)*s^2 + 4^(1 + d)*Pi^(2*d)*
         (s^2*(3 - 20*sw^2 + 32*sw^4 + d^2*sw^2*(-5 + 8*sw^2) + 
            d*(-3 + 20*sw^2 - 32*sw^4)) + (-2 + d)*s*(3 - 20*sw^2 + 32*sw^4)*
           t + (-2 + d)*(3 - 20*sw^2 + 32*sw^4)*t^2)))/
      (Pi^(3*d)*(-mz^2 + s)*sw^2*(1 - sw^2)) + 
     (s^2*(-3*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(3*d^3*(1 - 2*sw^2 + 4*sw^4) + d^2*(-9 + 26*sw^2 - 16*sw^4 - 
              144*sw^6 + 128*sw^8) + 4*(-3 + 2*sw^2 + 32*sw^4 - 144*sw^6 + 
              128*sw^8) - 2*d*(-9 + 16*sw^2 + 40*sw^4 - 288*sw^6 + 
              256*sw^8)) + s*(1 - 4*sw^2 + 8*sw^4)*(-21*d^2 + 3*d^3 - 
            16*(3 - 5*sw^2 + 8*sw^4) + d*(54 - 40*sw^2 + 64*sw^4))*t + 
          2*(-2 + d)*(3 - 32*sw^2 + 136*sw^4 - 288*sw^6 + 256*sw^8)*t^2)))/
      ((2*Pi)^(2*d)*(mz^2 - s)^2*sw^4*(1 - sw^2)^2)))/((-1 + d)*s^3), 
  ((I/9)*2^(-5 - 4*d)*EL^6*(2^(8 + 3*d)*Pi^(3*d)*(4*ml^2 + (-2 + d)*s)*
      ((-2 + d)*s^2 + 4*s*t + 4*t^2) + 
     (16*s*(d^2*(2*Pi)^(3*d)*s^3 + 2^(2 + 3*d)*Pi^(3*d)*(ml - 4*ml*sw^2)^2*
         ((-2 + d)*s^2 + 4*s*t + 4*t^2) + 2^(2 + 3*d)*Pi^(3*d)*s*
         (s^2*((1 - 4*sw^2)^2 - d*(1 - 4*sw^2)^2 + d^2*(-2*sw^2 + 4*sw^4)) + 
          (-2 + d)*s*(1 - 4*sw^2)^2*t + (-2 + d)*(1 - 4*sw^2)^2*t^2)))/
      ((-mz^2 + s)*sw^2*(1 - sw^2)) + (2^(3 + 2*d)*Pi^(2*d)*s*
       (3*d^2*(2*Pi)^d*s^3 + 2^(2 + d)*ml^2*Pi^d*(3 - 20*sw^2 + 32*sw^4)*
         ((-2 + d)*s^2 + 4*s*t + 4*t^2) + 2^(2 + d)*Pi^d*s*
         (s^2*(3 - 20*sw^2 + 32*sw^4 + d^2*sw^2*(-5 + 8*sw^2) + 
            d*(-3 + 20*sw^2 - 32*sw^4)) + (-2 + d)*s*(3 - 20*sw^2 + 32*sw^4)*
           t + (-2 + d)*(3 - 20*sw^2 + 32*sw^4)*t^2)))/
      ((-mz^2 + s)*sw^2*(1 - sw^2)) - 
     ((2*Pi)^(2*d)*s^2*(-9*d^3*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
         (s^2*(d^3*(3 + 6*sw^2 - 12*sw^4) + d^2*(9 - 26*sw^2 + 16*sw^4 + 
              144*sw^6 - 128*sw^8) - 4*(-3 + 2*sw^2 + 32*sw^4 - 144*sw^6 + 
              128*sw^8) + 2*d*(-9 + 16*sw^2 + 40*sw^4 - 288*sw^6 + 
              256*sw^8)) - s*(1 - 4*sw^2 + 8*sw^4)*(-21*d^2 + 3*d^3 - 
            16*(3 - 5*sw^2 + 8*sw^4) + d*(54 - 40*sw^2 + 64*sw^4))*t - 
          2*(-2 + d)*(3 - 32*sw^2 + 136*sw^4 - 288*sw^6 + 256*sw^8)*t^2) - 
        2*ml^2*(-3*(-7 + d)*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
           (2*s^2*(9 + 6*sw^2 - 80*sw^4 + 288*sw^6 - 256*sw^8 + 
              d^2*sw^2*(-1 + 4*sw^2) + d*(-12 - sw^2 + 32*sw^4 - 144*sw^6 + 
                128*sw^8)) + s*(-3*d^3 + d*(-69 + 160*sw^2 - 304*sw^4) + 
              24*d^2*(1 - sw^2 + 2*sw^4) + 8*(9 - 39*sw^2 + 112*sw^4 - 
                144*sw^6 + 128*sw^8))*t - 2*(-3 + d + 8*sw^2 - 16*sw^4)*
             (3 - 20*sw^2 + 32*sw^4)*t^2))))/((mz^2 - s)^2*sw^4*
       (1 - sw^2)^2)))/((-1 + d)*Pi^(4*d)*s^3), 
  ((-I/432)*EL^6*((2^(10 - d)*(-2 + d)*((-2 + d)*s^2 + 4*s*t + 4*t^2))/Pi^d + 
     (2^(4 - 4*d)*s*(9*d^2*(2*Pi)^(3*d)*s^2 + 2^(2 + 3*d)*Pi^(3*d)*
         (s^2*((3 - 8*sw^2)^2 - d*(3 - 8*sw^2)^2 + 4*d^2*sw^2*
             (-3 + 4*sw^2)) + (-2 + d)*s*(3 - 8*sw^2)^2*t + 
          (-2 + d)*(3 - 8*sw^2)^2*t^2)))/(Pi^(4*d)*(-mz^2 + s)*sw^2*
       (1 - sw^2)) + (2^(5 - 4*d)*s*(3*d^2*(2*Pi)^(3*d)*s^2 + 
        2^(2 + 3*d)*Pi^(3*d)*(s^2*(3 - 20*sw^2 + 32*sw^4 + 
            d^2*sw^2*(-5 + 8*sw^2) + d*(-3 + 20*sw^2 - 32*sw^4)) + 
          (-2 + d)*s*(3 - 20*sw^2 + 32*sw^4)*t + (-2 + d)*
           (3 - 20*sw^2 + 32*sw^4)*t^2)))/(Pi^(4*d)*(-mz^2 + s)*sw^2*
       (1 - sw^2)) + (s^2*(27*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(12*d^3*sw^2*(-3 + 4*sw^2) + d^2*(-81 + 126*sw^2 + 96*sw^4 - 
              704*sw^6 + 512*sw^8) + 4*(-27 - 18*sw^2 + 288*sw^4 - 704*sw^6 + 
              512*sw^8) - 2*d*(-81 + 36*sw^2 + 480*sw^4 - 1408*sw^6 + 
              1024*sw^8)) + s*(9 - 24*sw^2 + 32*sw^4)*(-21*d^2 + 3*d^3 - 
            16*(3 - 5*sw^2 + 8*sw^4) + d*(54 - 40*sw^2 + 64*sw^4))*t + 
          2*(-2 + d)*(27 - 252*sw^2 + 864*sw^4 - 1408*sw^6 + 1024*sw^8)*
           t^2)))/((2*Pi)^(2*d)*(mz^2 - s)^2*sw^4*(1 - sw^2)^2)))/
   ((-1 + d)*s^3), 
  ((I/864)*EL^6*((2^(10 - d)*(4*mc^2 + (-2 + d)*s)*((-2 + d)*s^2 + 4*s*t + 
        4*t^2))/Pi^d + (2^(4 - 4*d)*s*(9*d^2*(2*Pi)^(3*d)*s^3 + 
        2^(2 + 3*d)*mc^2*Pi^(3*d)*(3 - 8*sw^2)^2*((-2 + d)*s^2 + 4*s*t + 
          4*t^2) + 2^(2 + 3*d)*Pi^(3*d)*s*
         (s^2*((3 - 8*sw^2)^2 - d*(3 - 8*sw^2)^2 + 4*d^2*sw^2*
             (-3 + 4*sw^2)) + (-2 + d)*s*(3 - 8*sw^2)^2*t + 
          (-2 + d)*(3 - 8*sw^2)^2*t^2)))/(Pi^(4*d)*(-mz^2 + s)*sw^2*
       (1 - sw^2)) + (2^(5 - 4*d)*s*(3*d^2*(2*Pi)^(3*d)*s^3 + 
        2^(2 + 3*d)*mc^2*Pi^(3*d)*(3 - 20*sw^2 + 32*sw^4)*
         ((-2 + d)*s^2 + 4*s*t + 4*t^2) + 2^(2 + 3*d)*Pi^(3*d)*s*
         (s^2*(3 - 20*sw^2 + 32*sw^4 + d^2*sw^2*(-5 + 8*sw^2) + 
            d*(-3 + 20*sw^2 - 32*sw^4)) + (-2 + d)*s*(3 - 20*sw^2 + 32*sw^4)*
           t + (-2 + d)*(3 - 20*sw^2 + 32*sw^4)*t^2)))/
      (Pi^(4*d)*(-mz^2 + s)*sw^2*(1 - sw^2)) - 
     (s^2*(2*mc^2*(27*(-7 + d)*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
           (2*s^2*(-81 - 126*sw^2 + 720*sw^4 - 1408*sw^6 + 1024*sw^8 + 
              3*d^2*sw^2*(-3 + 8*sw^2) + d*(108 + 81*sw^2 - 408*sw^4 + 
                704*sw^6 - 512*sw^8)) + s*(27*d^3 - 24*d^2*(9 - 6*sw^2 + 
                8*sw^4) + 3*d*(207 - 360*sw^2 + 512*sw^4) - 
              8*(81 - 279*sw^2 + 648*sw^4 - 704*sw^6 + 512*sw^8))*t + 
            2*(-27 + 9*d + 48*sw^2 - 64*sw^4)*(3 - 20*sw^2 + 32*sw^4)*t^2)) - 
        s*(9*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
           (s^2*(d^3*(9 - 36*sw^2 + 48*sw^4) + d^2*(-81 + 126*sw^2 + 
                96*sw^4 - 704*sw^6 + 512*sw^8) + 4*(-27 - 18*sw^2 + 
                288*sw^4 - 704*sw^6 + 512*sw^8) - 2*d*(-81 + 36*sw^2 + 
                480*sw^4 - 1408*sw^6 + 1024*sw^8)) + 
            s*(9 - 24*sw^2 + 32*sw^4)*(-21*d^2 + 3*d^3 - 16*(3 - 5*sw^2 + 
                8*sw^4) + d*(54 - 40*sw^2 + 64*sw^4))*t + 
            2*(-2 + d)*(27 - 252*sw^2 + 864*sw^4 - 1408*sw^6 + 1024*sw^8)*
             t^2))))/((2*Pi)^(2*d)*(mz^2 - s)^2*sw^4*(1 - sw^2)^2)))/
   ((-1 + d)*s^3), 
  ((-I/432)*EL^6*((2^(10 - d)*(-2 + d)*((-2 + d)*s^2 + 4*s*t + 4*t^2))/Pi^d + 
     (2^(4 - 4*d)*s*(9*d^2*(2*Pi)^(3*d)*s^2 + 2^(2 + 3*d)*Pi^(3*d)*
         (s^2*((3 - 8*sw^2)^2 - d*(3 - 8*sw^2)^2 + 4*d^2*sw^2*
             (-3 + 4*sw^2)) + (-2 + d)*s*(3 - 8*sw^2)^2*t + 
          (-2 + d)*(3 - 8*sw^2)^2*t^2)))/(Pi^(4*d)*(-mz^2 + s)*sw^2*
       (1 - sw^2)) + (2^(5 - 4*d)*s*(3*d^2*(2*Pi)^(3*d)*s^2 + 
        2^(2 + 3*d)*Pi^(3*d)*(s^2*(3 - 20*sw^2 + 32*sw^4 + 
            d^2*sw^2*(-5 + 8*sw^2) + d*(-3 + 20*sw^2 - 32*sw^4)) + 
          (-2 + d)*s*(3 - 20*sw^2 + 32*sw^4)*t + (-2 + d)*
           (3 - 20*sw^2 + 32*sw^4)*t^2)))/(Pi^(4*d)*(-mz^2 + s)*sw^2*
       (1 - sw^2)) + (s^2*(27*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(12*d^3*sw^2*(-3 + 4*sw^2) + d^2*(-81 + 126*sw^2 + 96*sw^4 - 
              704*sw^6 + 512*sw^8) + 4*(-27 - 18*sw^2 + 288*sw^4 - 704*sw^6 + 
              512*sw^8) - 2*d*(-81 + 36*sw^2 + 480*sw^4 - 1408*sw^6 + 
              1024*sw^8)) + s*(9 - 24*sw^2 + 32*sw^4)*(-21*d^2 + 3*d^3 - 
            16*(3 - 5*sw^2 + 8*sw^4) + d*(54 - 40*sw^2 + 64*sw^4))*t + 
          2*(-2 + d)*(27 - 252*sw^2 + 864*sw^4 - 1408*sw^6 + 1024*sw^8)*
           t^2)))/((2*Pi)^(2*d)*(mz^2 - s)^2*sw^4*(1 - sw^2)^2)))/
   ((-1 + d)*s^3), 
  ((I/864)*EL^6*((2^(10 - d)*(4*mt^2 + (-2 + d)*s)*((-2 + d)*s^2 + 4*s*t + 
        4*t^2))/Pi^d + (2^(4 - 4*d)*s*(9*d^2*(2*Pi)^(3*d)*s^3 + 
        2^(2 + 3*d)*mt^2*Pi^(3*d)*(3 - 8*sw^2)^2*((-2 + d)*s^2 + 4*s*t + 
          4*t^2) + 2^(2 + 3*d)*Pi^(3*d)*s*
         (s^2*((3 - 8*sw^2)^2 - d*(3 - 8*sw^2)^2 + 4*d^2*sw^2*
             (-3 + 4*sw^2)) + (-2 + d)*s*(3 - 8*sw^2)^2*t + 
          (-2 + d)*(3 - 8*sw^2)^2*t^2)))/(Pi^(4*d)*(-mz^2 + s)*sw^2*
       (1 - sw^2)) + (2^(5 - 4*d)*s*(3*d^2*(2*Pi)^(3*d)*s^3 + 
        2^(2 + 3*d)*mt^2*Pi^(3*d)*(3 - 20*sw^2 + 32*sw^4)*
         ((-2 + d)*s^2 + 4*s*t + 4*t^2) + 2^(2 + 3*d)*Pi^(3*d)*s*
         (s^2*(3 - 20*sw^2 + 32*sw^4 + d^2*sw^2*(-5 + 8*sw^2) + 
            d*(-3 + 20*sw^2 - 32*sw^4)) + (-2 + d)*s*(3 - 20*sw^2 + 32*sw^4)*
           t + (-2 + d)*(3 - 20*sw^2 + 32*sw^4)*t^2)))/
      (Pi^(4*d)*(-mz^2 + s)*sw^2*(1 - sw^2)) - 
     (s^2*(2*mt^2*(27*(-7 + d)*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
           (2*s^2*(-81 - 126*sw^2 + 720*sw^4 - 1408*sw^6 + 1024*sw^8 + 
              3*d^2*sw^2*(-3 + 8*sw^2) + d*(108 + 81*sw^2 - 408*sw^4 + 
                704*sw^6 - 512*sw^8)) + s*(27*d^3 - 24*d^2*(9 - 6*sw^2 + 
                8*sw^4) + 3*d*(207 - 360*sw^2 + 512*sw^4) - 
              8*(81 - 279*sw^2 + 648*sw^4 - 704*sw^6 + 512*sw^8))*t + 
            2*(-27 + 9*d + 48*sw^2 - 64*sw^4)*(3 - 20*sw^2 + 32*sw^4)*t^2)) - 
        s*(9*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
           (s^2*(d^3*(9 - 36*sw^2 + 48*sw^4) + d^2*(-81 + 126*sw^2 + 
                96*sw^4 - 704*sw^6 + 512*sw^8) + 4*(-27 - 18*sw^2 + 
                288*sw^4 - 704*sw^6 + 512*sw^8) - 2*d*(-81 + 36*sw^2 + 
                480*sw^4 - 1408*sw^6 + 1024*sw^8)) + 
            s*(9 - 24*sw^2 + 32*sw^4)*(-21*d^2 + 3*d^3 - 16*(3 - 5*sw^2 + 
                8*sw^4) + d*(54 - 40*sw^2 + 64*sw^4))*t + 
            2*(-2 + d)*(27 - 252*sw^2 + 864*sw^4 - 1408*sw^6 + 1024*sw^8)*
             t^2))))/((2*Pi)^(2*d)*(mz^2 - s)^2*sw^4*(1 - sw^2)^2)))/
   ((-1 + d)*s^3), 
  ((-I/432)*EL^6*((2^(8 - d)*(-2 + d)*((-2 + d)*s^2 + 4*s*t + 4*t^2))/Pi^d + 
     (2^(4 - 4*d)*s*(3*d^2*(2*Pi)^(3*d)*s^2 + 2^(2 + 3*d)*Pi^(3*d)*
         (s^2*(3 - 16*sw^2 + 16*sw^4 + 4*d^2*sw^2*(-1 + sw^2) + 
            d*(-3 + 16*sw^2 - 16*sw^4)) + (-2 + d)*s*(3 - 16*sw^2 + 16*sw^4)*
           t + (-2 + d)*(3 - 16*sw^2 + 16*sw^4)*t^2)))/
      (Pi^(4*d)*(-mz^2 + s)*sw^2*(1 - sw^2)) + 
     (8^(1 - d)*s*(9*d^2*(2*Pi)^(2*d)*s^2 + 4^(1 + d)*Pi^(2*d)*
         (s^2*(9 - 36*sw^2 + 32*sw^4 + d^2*sw^2*(-9 + 8*sw^2) + 
            d*(-9 + 36*sw^2 - 32*sw^4)) + (-2 + d)*s*(9 - 36*sw^2 + 32*sw^4)*
           t + (-2 + d)*(9 - 36*sw^2 + 32*sw^4)*t^2)))/
      (Pi^(3*d)*(-mz^2 + s)*sw^2*(1 - sw^2)) + 
     (s^2*(27*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(6*d^3*sw^2*(-3 + 2*sw^2) + d^2*(-81 + 18*sw^2 + 192*sw^4 - 
              272*sw^6 + 128*sw^8) + 4*(-27 - 54*sw^2 + 240*sw^4 - 272*sw^6 + 
              128*sw^8) - 2*d*(-81 - 72*sw^2 + 456*sw^4 - 544*sw^6 + 
              256*sw^8)) + s*(9 - 12*sw^2 + 8*sw^4)*(-21*d^2 + 3*d^3 - 
            16*(3 - 5*sw^2 + 8*sw^4) + d*(54 - 40*sw^2 + 64*sw^4))*t + 
          2*(-2 + d)*(27 - 216*sw^2 + 552*sw^4 - 544*sw^6 + 256*sw^8)*t^2)))/
      ((2*Pi)^(2*d)*(mz^2 - s)^2*sw^4*(1 - sw^2)^2)))/((-1 + d)*s^3), 
  ((I/27)*2^(-5 - 4*d)*EL^6*(2^(8 + 3*d)*Pi^(3*d)*(4*ms^2 + (-2 + d)*s)*
      ((-2 + d)*s^2 + 4*s*t + 4*t^2) + 
     (16*s*(3*d^2*(2*Pi)^(3*d)*s^3 + 2^(2 + 3*d)*ms^2*Pi^(3*d)*
         (3 - 16*sw^2 + 16*sw^4)*((-2 + d)*s^2 + 4*s*t + 4*t^2) + 
        2^(2 + 3*d)*Pi^(3*d)*s*(s^2*(3 - 16*sw^2 + 16*sw^4 + 
            4*d^2*sw^2*(-1 + sw^2) + d*(-3 + 16*sw^2 - 16*sw^4)) + 
          (-2 + d)*s*(3 - 16*sw^2 + 16*sw^4)*t + (-2 + d)*
           (3 - 16*sw^2 + 16*sw^4)*t^2)))/((-mz^2 + s)*sw^2*(1 - sw^2)) + 
     (2^(3 + 2*d)*Pi^(2*d)*s*(9*d^2*(2*Pi)^d*s^3 + 2^(2 + d)*ms^2*Pi^d*
         (9 - 36*sw^2 + 32*sw^4)*((-2 + d)*s^2 + 4*s*t + 4*t^2) + 
        2^(2 + d)*Pi^d*s*(s^2*(9 - 36*sw^2 + 32*sw^4 + 
            d^2*sw^2*(-9 + 8*sw^2) + d*(-9 + 36*sw^2 - 32*sw^4)) + 
          (-2 + d)*s*(9 - 36*sw^2 + 32*sw^4)*t + (-2 + d)*
           (9 - 36*sw^2 + 32*sw^4)*t^2)))/((-mz^2 + s)*sw^2*(1 - sw^2)) - 
     ((2*Pi)^(2*d)*s^2*(2*ms^2*(27*(-7 + d)*d^2*(2*Pi)^d*s^2 + 
          2^(1 + d)*Pi^d*(2*s^2*(-81 - 198*sw^2 + 624*sw^4 - 544*sw^6 + 
              256*sw^8 + 3*d^2*sw^2*(-9 + 20*sw^2) + d*(108 + 153*sw^2 - 
                432*sw^4 + 272*sw^6 - 128*sw^8)) + 
            s*(27*d^3 - 24*d^2*(9 - 3*sw^2 + 2*sw^4) + d*(621 - 720*sw^2 + 
                816*sw^4) - 8*(81 - 207*sw^2 + 384*sw^4 - 272*sw^6 + 
                128*sw^8))*t + 2*(-27 + 9*d + 24*sw^2 - 16*sw^4)*
             (3 - 20*sw^2 + 32*sw^4)*t^2)) - s*(9*d^3*(2*Pi)^d*s^2 + 
          2^(1 + d)*Pi^d*(s^2*(3*d^3*(3 - 6*sw^2 + 4*sw^4) + 
              d^2*(-81 + 18*sw^2 + 192*sw^4 - 272*sw^6 + 128*sw^8) + 
              4*(-27 - 54*sw^2 + 240*sw^4 - 272*sw^6 + 128*sw^8) - 
              2*d*(-81 - 72*sw^2 + 456*sw^4 - 544*sw^6 + 256*sw^8)) + 
            s*(9 - 12*sw^2 + 8*sw^4)*(-21*d^2 + 3*d^3 - 16*(3 - 5*sw^2 + 
                8*sw^4) + d*(54 - 40*sw^2 + 64*sw^4))*t + 
            2*(-2 + d)*(27 - 216*sw^2 + 552*sw^4 - 544*sw^6 + 256*sw^8)*
             t^2))))/((mz^2 - s)^2*sw^4*(1 - sw^2)^2)))/
   ((-1 + d)*Pi^(4*d)*s^3), 
  ((-I/432)*EL^6*((2^(8 - d)*(-2 + d)*((-2 + d)*s^2 + 4*s*t + 4*t^2))/Pi^d + 
     (2^(4 - 4*d)*s*(3*d^2*(2*Pi)^(3*d)*s^2 + 2^(2 + 3*d)*Pi^(3*d)*
         (s^2*(3 - 16*sw^2 + 16*sw^4 + 4*d^2*sw^2*(-1 + sw^2) + 
            d*(-3 + 16*sw^2 - 16*sw^4)) + (-2 + d)*s*(3 - 16*sw^2 + 16*sw^4)*
           t + (-2 + d)*(3 - 16*sw^2 + 16*sw^4)*t^2)))/
      (Pi^(4*d)*(-mz^2 + s)*sw^2*(1 - sw^2)) + 
     (8^(1 - d)*s*(9*d^2*(2*Pi)^(2*d)*s^2 + 4^(1 + d)*Pi^(2*d)*
         (s^2*(9 - 36*sw^2 + 32*sw^4 + d^2*sw^2*(-9 + 8*sw^2) + 
            d*(-9 + 36*sw^2 - 32*sw^4)) + (-2 + d)*s*(9 - 36*sw^2 + 32*sw^4)*
           t + (-2 + d)*(9 - 36*sw^2 + 32*sw^4)*t^2)))/
      (Pi^(3*d)*(-mz^2 + s)*sw^2*(1 - sw^2)) + 
     (s^2*(27*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(6*d^3*sw^2*(-3 + 2*sw^2) + d^2*(-81 + 18*sw^2 + 192*sw^4 - 
              272*sw^6 + 128*sw^8) + 4*(-27 - 54*sw^2 + 240*sw^4 - 272*sw^6 + 
              128*sw^8) - 2*d*(-81 - 72*sw^2 + 456*sw^4 - 544*sw^6 + 
              256*sw^8)) + s*(9 - 12*sw^2 + 8*sw^4)*(-21*d^2 + 3*d^3 - 
            16*(3 - 5*sw^2 + 8*sw^4) + d*(54 - 40*sw^2 + 64*sw^4))*t + 
          2*(-2 + d)*(27 - 216*sw^2 + 552*sw^4 - 544*sw^6 + 256*sw^8)*t^2)))/
      ((2*Pi)^(2*d)*(mz^2 - s)^2*sw^4*(1 - sw^2)^2)))/((-1 + d)*s^3), 
  ((I/27)*2^(-5 - 4*d)*EL^6*(2^(8 + 3*d)*Pi^(3*d)*(4*mb^2 + (-2 + d)*s)*
      ((-2 + d)*s^2 + 4*s*t + 4*t^2) + 
     (16*s*(3*d^2*(2*Pi)^(3*d)*s^3 + 2^(2 + 3*d)*mb^2*Pi^(3*d)*
         (3 - 16*sw^2 + 16*sw^4)*((-2 + d)*s^2 + 4*s*t + 4*t^2) + 
        2^(2 + 3*d)*Pi^(3*d)*s*(s^2*(3 - 16*sw^2 + 16*sw^4 + 
            4*d^2*sw^2*(-1 + sw^2) + d*(-3 + 16*sw^2 - 16*sw^4)) + 
          (-2 + d)*s*(3 - 16*sw^2 + 16*sw^4)*t + (-2 + d)*
           (3 - 16*sw^2 + 16*sw^4)*t^2)))/((-mz^2 + s)*sw^2*(1 - sw^2)) + 
     (2^(3 + 2*d)*Pi^(2*d)*s*(9*d^2*(2*Pi)^d*s^3 + 2^(2 + d)*mb^2*Pi^d*
         (9 - 36*sw^2 + 32*sw^4)*((-2 + d)*s^2 + 4*s*t + 4*t^2) + 
        2^(2 + d)*Pi^d*s*(s^2*(9 - 36*sw^2 + 32*sw^4 + 
            d^2*sw^2*(-9 + 8*sw^2) + d*(-9 + 36*sw^2 - 32*sw^4)) + 
          (-2 + d)*s*(9 - 36*sw^2 + 32*sw^4)*t + (-2 + d)*
           (9 - 36*sw^2 + 32*sw^4)*t^2)))/((-mz^2 + s)*sw^2*(1 - sw^2)) - 
     ((2*Pi)^(2*d)*s^2*(2*mb^2*(27*(-7 + d)*d^2*(2*Pi)^d*s^2 + 
          2^(1 + d)*Pi^d*(2*s^2*(-81 - 198*sw^2 + 624*sw^4 - 544*sw^6 + 
              256*sw^8 + 3*d^2*sw^2*(-9 + 20*sw^2) + d*(108 + 153*sw^2 - 
                432*sw^4 + 272*sw^6 - 128*sw^8)) + 
            s*(27*d^3 - 24*d^2*(9 - 3*sw^2 + 2*sw^4) + d*(621 - 720*sw^2 + 
                816*sw^4) - 8*(81 - 207*sw^2 + 384*sw^4 - 272*sw^6 + 
                128*sw^8))*t + 2*(-27 + 9*d + 24*sw^2 - 16*sw^4)*
             (3 - 20*sw^2 + 32*sw^4)*t^2)) - s*(9*d^3*(2*Pi)^d*s^2 + 
          2^(1 + d)*Pi^d*(s^2*(3*d^3*(3 - 6*sw^2 + 4*sw^4) + 
              d^2*(-81 + 18*sw^2 + 192*sw^4 - 272*sw^6 + 128*sw^8) + 
              4*(-27 - 54*sw^2 + 240*sw^4 - 272*sw^6 + 128*sw^8) - 
              2*d*(-81 - 72*sw^2 + 456*sw^4 - 544*sw^6 + 256*sw^8)) + 
            s*(9 - 12*sw^2 + 8*sw^4)*(-21*d^2 + 3*d^3 - 16*(3 - 5*sw^2 + 
                8*sw^4) + d*(54 - 40*sw^2 + 64*sw^4))*t + 
            2*(-2 + d)*(27 - 216*sw^2 + 552*sw^4 - 544*sw^6 + 256*sw^8)*
             t^2))))/((mz^2 - s)^2*sw^4*(1 - sw^2)^2)))/
   ((-1 + d)*Pi^(4*d)*s^3), 0, 0, 
  ((-I/9)*2^(-5 - 2*d)*EL^6*(3*d^2*(2*Pi)^d*s^3 + 
     2^(1 + d)*Pi^d*s*(2*s^2*(3 + 10*sw^2 - 16*sw^4 + 
         d*(-3 - 5*sw^2 + 8*sw^4)) + s*(-15*d + 3*d^2 + 
         8*(3 - 5*sw^2 + 8*sw^4))*t + 2*(3 - 20*sw^2 + 32*sw^4)*t^2) + 
     mh^2*(-9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (s^2*(-6 + 3*d^2 - 20*sw^2 + 32*sw^4 + d*(6 + 10*sw^2 - 16*sw^4)) + 
         s*(15*d - 3*d^2 - 8*(3 - 5*sw^2 + 8*sw^4))*t - 
         2*(3 - 20*sw^2 + 32*sw^4)*t^2)) + 
     mz^2*(-9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (2*s^2*(3 + 3*d^2 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
         s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
         2*(3 - 20*sw^2 + 32*sw^4)*t^2))))/((-1 + d)*Pi^(2*d)*(mz^2 - s)^2*
    s^2*sw^4*(1 - sw^2)^2), ((-I/9)*2^(-5 - 2*d)*EL^6*mz^2*
    (((2*Pi)^d*(-4*mh^2*mz^2 + d*(mh^2 + mz^2 - s)^2)*(-1 + 4*sw^2)*
       (-3 + 8*sw^2))/(-1 + d) + 
     ((2*Pi)^d*(-4*mh^2*mz^2 + d*(mh^2 + mz^2 - s)^2)*
       (3 - 20*sw^2 + 32*sw^4))/(-1 + d) - 
     ((mh^2 + mz^2 - s)^2*(3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
         (s*(-3 - 10*sw^2 + 16*sw^4) + (-3 + 20*sw^2 - 32*sw^4)*t)))/s + 
     ((3*d*(2*Pi)^d*s - 2^(1 + d)*Pi^d*(2*s*(3 - 5*sw^2 + 8*sw^4) + 
          (3 - 20*sw^2 + 32*sw^4)*t))*(d*(mh^2 + mz^2 - s)^2*s + 2*mh^4*t + 
        2*(mz^2 - s)^2*t - 4*mh^2*(s*t + mz^2*(s + t))))/((-1 + d)*s^2) - 
     (2*(mh^4*(3*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(-3 - 10*sw^2 + 16*sw^4))*t + 
        mz^4*(3*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(-3 - 10*sw^2 + 16*sw^4))*t + 
        s^2*(3*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(-3 - 10*sw^2 + 16*sw^4))*t + 
        2^(1 + d)*mz^2*Pi^d*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
            4*d*(-3 - 5*sw^2 + 8*sw^4)) + 3*s*(18 - 11*d + 2*d^2 - 20*sw^2 + 
            32*sw^4)*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2) - 
        2^(1 + d)*mh^2*Pi^d*(s*(-6 + 3*d - 20*sw^2 + 32*sw^4)*t + 
          mz^2*(s*(-6 + 3*d - 20*sw^2 + 32*sw^4) + 3*d*t - 
            4*(3 - 5*sw^2 + 8*sw^4)*t))))/s + 
     ((mh^2 + mz^2 - s)*(-((mz^2 - s)*(3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (s*(-3 - 10*sw^2 + 16*sw^4) + (-3 + 20*sw^2 - 32*sw^4)*t))) + 
        mh^2*(-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
           (s*(3 + 3*d + 10*sw^2 - 16*sw^4) + (3 - 20*sw^2 + 32*sw^4)*t))))/
      s))/(Pi^(2*d)*(mz^3 - mz*s)^2*sw^4*(1 - sw^2)^2)}, 
 {((I/20736)*EL^6*((9*2^(5 - d)*(16 - 7*d + d^2)*
       (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
        2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
        4*(3 - 20*sw^2 + 32*sw^4)*t^2))/((-4 + d)*Pi^d*(mz^2 - s)*s) + 
     (9*2^(1 - d)*(-3 + 2*sw^2)*(-3 + 4*sw^2)*((-7 + d)*s - 
        2*mz^2*(1 - sw^2))*(-((-2 + d)*s^2*(-2 + 4*sw^2 + d*(1 - 4*sw^2) + 
           sw^2*(4 + 8*sw^2))) + 2*s*(-8 + 16*sw^2 - 16*sw^2*(-1 + sw^2) - 
          5*d*(-1 + 4*sw^2) + d^2*(-1 + 4*sw^2))*t + 
        4*(-1 + 2*sw^2 + sw^2*(2 - 8*sw^2))*t^2))/(Pi^d*(mz^2 - s)*s*
       (-mz^2 + s)*sw^4*(1 - sw^2)) + (9*2^(1 - d)*(-1 + 2*sw^2)*
       (-((-7 + d)*s) + 2*mz^2*(1 - sw^2))*
       ((-2 + d)*s^2*(18 - 24*sw^2 - 8*sw^2*(3 + 4*sw^2) + 
          3*d*(-3 + 8*sw^2)) + 2*s*(-72 + 96*sw^2 + sw^2*(96 - 64*sw^2) - 
          15*d*(-3 + 8*sw^2) + 3*d^2*(-3 + 8*sw^2))*t + 
        4*(-9 + 12*sw^2 - 4*sw^2*(-3 + 8*sw^2))*t^2))/
      (Pi^d*(mz^2 - s)*s*(-mz^2 + s)*sw^4*(1 - sw^2)) - 
     (9*(2*mz^2 - (-7 + d)*s)*
       (s^2*(3*d^2*(3 - 10*sw^2 + 8*sw^4 + 32*sw^8 + 8*sw^6*(-9 + 16*sw^2) + 
            sw^2*(-22 + 68*sw^2 - 48*sw^4) + 12*sw^4*(5 - 14*sw^2 + 
              8*sw^4)) + 4*(9 - 30*sw^2 + 24*sw^4 + 
            sw^8*(96 + 320*sw^2 - 512*sw^4) + 12*sw^4*(15 - 34*sw^2 + 
              8*sw^4) + 24*sw^6*(-9 + 2*sw^2 + 24*sw^4) - 
            2*sw^2*(33 - 94*sw^2 + 56*sw^4)) + 4*d*(-9 + 30*sw^2 - 24*sw^4 - 
            72*sw^6*(-3 + 3*sw^2 + 4*sw^4) + 32*sw^8*(-3 - 5*sw^2 + 8*sw^4) - 
            12*sw^4*(15 - 38*sw^2 + 16*sw^4) + 2*sw^2*(33 - 98*sw^2 + 
              64*sw^4))) + 2*s*(-15*d*(3 - 10*sw^2 + 8*sw^4 + 32*sw^8 + 
            8*sw^6*(-9 + 16*sw^2) + sw^2*(-22 + 68*sw^2 - 48*sw^4) + 
            12*sw^4*(5 - 14*sw^2 + 8*sw^4)) + 3*d^2*(3 - 10*sw^2 + 8*sw^4 + 
            32*sw^8 + 8*sw^6*(-9 + 16*sw^2) + sw^2*(-22 + 68*sw^2 - 
              48*sw^4) + 12*sw^4*(5 - 14*sw^2 + 8*sw^4)) + 
          8*(9 - 30*sw^2 + 24*sw^4 + 32*sw^8*(3 - 5*sw^2 + 8*sw^4) - 
            24*sw^6*(9 - 23*sw^2 + 12*sw^4) + 12*sw^4*(15 - 46*sw^2 + 
              32*sw^4) - 2*sw^2*(33 - 106*sw^2 + 80*sw^4)))*t + 
        4*(9 - 30*sw^2 + 24*sw^4 + sw^2*(-66 + 236*sw^2 - 208*sw^4) + 
          32*sw^8*(3 - 20*sw^2 + 32*sw^4) - 24*sw^6*(9 - 44*sw^2 + 48*sw^4) + 
          12*sw^4*(15 - 58*sw^2 + 56*sw^4))*t^2))/((2*Pi)^d*(mz^2 - s)*s*
       (-mz^2 + s)*sw^4*(1 - sw^2)^2) + 
     (27*(-2 + d)*s*(s^2*(3*d^2*(3 - 10*sw^2 + 16*sw^4 + 
            2*sw^2*(-5 + 8*sw^2)) + 4*d*(-9 + 30*sw^2 - 24*sw^4 + 
            sw^2*(30 - 22*sw^2 - 40*sw^4) + 8*sw^4*(-3 - 5*sw^2 + 8*sw^4)) - 
          4*(-9 + 30*sw^2 - 24*sw^4 + sw^2*(30 + 4*sw^2 - 80*sw^4) + 
            8*sw^4*(-3 - 10*sw^2 + 16*sw^4))) + 
        2*s*(-15*d*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
          3*d^2*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
          8*(9 - 30*sw^2 + 24*sw^4 + sw^2*(-30 + 74*sw^2 - 40*sw^4) + 
            8*sw^4*(3 - 5*sw^2 + 8*sw^4)))*t + 
        4*(9 - 30*sw^2 + 24*sw^4 + 8*sw^4*(3 - 20*sw^2 + 32*sw^4) - 
          2*sw^2*(15 - 76*sw^2 + 80*sw^4))*t^2))/((-1 + d)*(2*Pi)^d*
       (mz^2 - s)^2*(-mz^2 + s)*sw^4*(1 - sw^2)^2) - 
     ((2*mz^2 - (-7 + d)*s)*(s^2*(3*d^2*(128*sw^8 - 18*sw^2*(3 - 4*sw^2)^2 + 
            32*sw^6*(-11 + 16*sw^2) + 9*(3 - 10*sw^2 + 8*sw^4) + 
            24*sw^4*(15 - 32*sw^2 + 16*sw^4)) + 
          4*d*(-72*sw^4*(15 - 23*sw^2 + 4*sw^4) + 162*sw^2*(3 - 7*sw^2 + 
              4*sw^4) - 27*(3 - 10*sw^2 + 8*sw^4) + 128*sw^8*
             (-3 - 5*sw^2 + 8*sw^4) - 32*sw^6*(-33 + 17*sw^2 + 44*sw^4)) - 
          4*(54*sw^2*(9 - 18*sw^2 + 8*sw^4) - 27*(3 - 10*sw^2 + 8*sw^4) + 
            72*sw^4*(-15 + 14*sw^2 + 8*sw^4) + 128*sw^8*(-3 - 10*sw^2 + 
              16*sw^4) - 32*sw^6*(-33 - 14*sw^2 + 88*sw^4))) + 
        2*s*(-15*d*(128*sw^8 - 18*sw^2*(3 - 4*sw^2)^2 + 
            32*sw^6*(-11 + 16*sw^2) + 9*(3 - 10*sw^2 + 8*sw^4) + 
            24*sw^4*(15 - 32*sw^2 + 16*sw^4)) + 
          3*d^2*(128*sw^8 - 18*sw^2*(3 - 4*sw^2)^2 + 
            32*sw^6*(-11 + 16*sw^2) + 9*(3 - 10*sw^2 + 8*sw^4) + 
            24*sw^4*(15 - 32*sw^2 + 16*sw^4)) + 
          8*(27*(3 - 10*sw^2 + 8*sw^4) + 128*sw^8*(3 - 5*sw^2 + 8*sw^4) - 
            54*sw^2*(9 - 27*sw^2 + 20*sw^4) + 72*sw^4*(15 - 41*sw^2 + 
              28*sw^4) - 32*sw^6*(33 - 79*sw^2 + 44*sw^4)))*t + 
        4*(27*(3 - 10*sw^2 + 8*sw^4) - 54*sw^2*(9 - 36*sw^2 + 32*sw^4) + 
          128*sw^8*(3 - 20*sw^2 + 32*sw^4) + 72*sw^4*(15 - 68*sw^2 + 
            64*sw^4) - 32*sw^6*(33 - 172*sw^2 + 176*sw^4))*t^2))/
      ((2*Pi)^d*(mz^2 - s)*s*(-mz^2 + s)*sw^4*(1 - sw^2)^2) + 
     (21*4^(3 - d)*(3*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(-12 - 40*sw^2 + 64*sw^4 + d*(18 + 40*sw^2 - 64*sw^4) + 
            d^2*(-9 - 10*sw^2 + 16*sw^4)) + s*(-21*d^2 + 3*d^3 - 
            16*(3 - 5*sw^2 + 8*sw^4) + d*(54 - 40*sw^2 + 64*sw^4))*t + 
          2*(-2 + d)*(3 - 20*sw^2 + 32*sw^4)*t^2)))/((-1 + d)*Pi^(2*d)*s*
       (-mz^2 + s)) + (3*2^(8 - 3*d)*(3*d^3*(2*Pi)^(2*d)*s^2 + 
        2^(1 + 2*d)*Pi^(2*d)*(s^2*(-12 - 40*sw^2 + 64*sw^4 + 
            d*(18 + 40*sw^2 - 64*sw^4) + d^2*(-9 - 10*sw^2 + 16*sw^4)) + 
          s*(-21*d^2 + 3*d^3 - 16*(3 - 5*sw^2 + 8*sw^4) + 
            d*(54 - 40*sw^2 + 64*sw^4))*t + 2*(-2 + d)*(3 - 20*sw^2 + 
            32*sw^4)*t^2)))/((-1 + d)*Pi^(3*d)*s*(-mz^2 + s)) - 
     (2^(7 - 4*d)*(3*(-11 + d)*d^3*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
         (2*s^2*(48 + 160*sw^2 - 256*sw^4 + d^3*sw^2*(-5 + 8*sw^2) - 
            9*d^2*(-4 - 5*sw^2 + 8*sw^4) + 3*d*(-23 - 50*sw^2 + 80*sw^4)) + 
          s*(-36*d^3 + 3*d^4 + 128*(3 - 5*sw^2 + 8*sw^4) - 
            8*d*(51 - 35*sw^2 + 56*sw^4) + d^2*(177 - 40*sw^2 + 64*sw^4))*t + 
          2*(16 - 7*d + d^2)*(3 - 20*sw^2 + 32*sw^4)*t^2)))/
      ((-4 + d)*Pi^(4*d)*s*(-mz^2 + s)) - 
     (9*2^(3 - 2*d)*(9*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(6*d^3*(-sw^2 + 4*sw^4 + 4*sw^2*(-1 + sw^2)) + 
            d^2*(-1 + 4*sw^2)*(-3*(-9 + 6*sw^2 + 8*sw^4) + 4*sw^2*(-9 - 
                10*sw^2 + 16*sw^4)) + 4*(-1 + 4*sw^2)*(9 + 6*sw^2 - 24*sw^4 + 
              4*sw^2*(-3 - 10*sw^2 + 16*sw^4)) - 2*d*(-1 + 4*sw^2)*
             (27 - 48*sw^4 + 4*sw^2*(-9 - 20*sw^2 + 32*sw^4))) + 
          (-2 + d)*s*(-1 + 4*sw^2)*(-15*d*(-3 + 8*sw^2) + 
            3*d^2*(-3 + 8*sw^2) - 24*(3 - 7*sw^2 + 4*sw^4) + 
            32*sw^2*(3 - 5*sw^2 + 8*sw^4))*t + 2*(-2 + d)*(-1 + 4*sw^2)^2*
           (9 - 12*sw^2 + 4*sw^2*(-3 + 8*sw^2))*t^2)))/
      ((-1 + d)*Pi^(2*d)*(mz^2 - s)*(-mz^2 + s)*sw^2*(1 - sw^2)) - 
     (3*2^(3 - 2*d)*(9*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(3*d^3*(3 - 6*sw^2 + 16*sw^4 + 2*sw^2*(-9 + 8*sw^2)) + 
            d^2*(-3 + 8*sw^2)*(-3*(-9 + 6*sw^2 + 8*sw^4) + 4*sw^2*(-9 - 
                10*sw^2 + 16*sw^4)) + 4*(-3 + 8*sw^2)*(9 + 6*sw^2 - 24*sw^4 + 
              4*sw^2*(-3 - 10*sw^2 + 16*sw^4)) - 
            2*d*(sw^2*(324 + 240*sw^2 - 768*sw^4) + 9*(-9 + 16*sw^4) + 
              32*sw^4*(-9 - 20*sw^2 + 32*sw^4))) + (-2 + d)*s*(-3 + 8*sw^2)*
           (-15*d*(-3 + 8*sw^2) + 3*d^2*(-3 + 8*sw^2) - 
            24*(3 - 7*sw^2 + 4*sw^4) + 32*sw^2*(3 - 5*sw^2 + 8*sw^4))*t + 
          2*(-2 + d)*(-1 + 4*sw^2)*(-3 + 8*sw^2)*(9 - 12*sw^2 + 
            4*sw^2*(-3 + 8*sw^2))*t^2)))/((-1 + d)*Pi^(2*d)*(mz^2 - s)*
       (-mz^2 + s)*sw^2*(1 - sw^2)) - 
     (3*2^(3 - 2*d)*(3*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(3*d^3*(1 - 3*sw^2 + 4*sw^4 + sw^2*(-5 + 4*sw^2)) + 
            d^2*(sw^2*(90 + 4*sw^2 - 128*sw^4) + 3*(-9 + 14*sw^2 + 8*sw^4) + 
              8*sw^4*(-9 - 10*sw^2 + 16*sw^4)) - 2*d*(-3 + 4*sw^2)*
             (9 - 10*sw^2 - 16*sw^4 + 2*sw^2*(-9 - 20*sw^2 + 32*sw^4)) + 
            4*(-3 + 4*sw^2)*(3 - 2*sw^2 - 8*sw^4 + sw^2*(-6 - 20*sw^2 + 
                32*sw^4))) + (-2 + d)*s*(-3 + 4*sw^2)*(-15*d*(-1 + 4*sw^2) + 
            d^2*(-3 + 12*sw^2) + 8*(-3 + 8*sw^2 - 4*sw^4 + 2*sw^2*(3 - 
                5*sw^2 + 8*sw^4)))*t + 2*(-2 + d)*(-3 + 4*sw^2)*(-3 + 8*sw^2)*
           (1 - 2*sw^2 + sw^2*(-2 + 8*sw^2))*t^2)))/((-1 + d)*Pi^(2*d)*
       (mz^2 - s)*(-mz^2 + s)*sw^2*(1 - sw^2)) - 
     (9*4^(2 - d)*(3*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(3*d^3*(-sw^2 + 4*sw^4 + sw^2*(-3 + 4*sw^2)) + 
            d^2*(-1 + 4*sw^2)*(9 - 14*sw^2 - 8*sw^4 + 2*sw^2*(-9 - 10*sw^2 + 
                16*sw^4)) - 2*d*(-1 + 4*sw^2)*(9 - 10*sw^2 - 16*sw^4 + 
              2*sw^2*(-9 - 20*sw^2 + 32*sw^4)) + 4*(-1 + 4*sw^2)*
             (3 - 2*sw^2 - 8*sw^4 + sw^2*(-6 - 20*sw^2 + 32*sw^4))) + 
          (-2 + d)*s*(-1 + 4*sw^2)*(-15*d*(-1 + 4*sw^2) + 
            d^2*(-3 + 12*sw^2) + 8*(-3 + 8*sw^2 - 4*sw^4 + 2*sw^2*(3 - 
                5*sw^2 + 8*sw^4)))*t + 2*(-2 + d)*(-1 + 4*sw^2)*(-3 + 8*sw^2)*
           (1 - 2*sw^2 + sw^2*(-2 + 8*sw^2))*t^2)))/((-1 + d)*Pi^(2*d)*
       (mz^2 - s)*(-mz^2 + s)*sw^2*(1 - sw^2)) - 
     (3*4^(2 - d)*(3*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(3*d^3*(1 - 3*sw^2 + 8*sw^4 + sw^2*(-7 + 8*sw^2)) + 
            d^2*(-3 + 8*sw^2)*(9 - 14*sw^2 - 8*sw^4 + 2*sw^2*(-9 - 10*sw^2 + 
                16*sw^4)) - 2*d*(-3 + 8*sw^2)*(9 - 10*sw^2 - 16*sw^4 + 
              2*sw^2*(-9 - 20*sw^2 + 32*sw^4)) + 4*(-3 + 8*sw^2)*
             (3 - 2*sw^2 - 8*sw^4 + sw^2*(-6 - 20*sw^2 + 32*sw^4))) + 
          (-2 + d)*s*(-3 + 8*sw^2)*(-15*d*(-1 + 4*sw^2) + 
            d^2*(-3 + 12*sw^2) + 8*(-3 + 8*sw^2 - 4*sw^4 + 2*sw^2*(3 - 
                5*sw^2 + 8*sw^4)))*t + 2*(-2 + d)*(-3 + 8*sw^2)^2*
           (1 - 2*sw^2 + sw^2*(-2 + 8*sw^2))*t^2)))/((-1 + d)*Pi^(2*d)*
       (mz^2 - s)*(-mz^2 + s)*sw^2*(1 - sw^2)) + 
     (9*4^(1 - d)*(9*(-7 + d)*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(3*d^4*(4*sw^4 + sw^2*(-5 + 4*sw^2) + sw^2*(-5 + 8*sw^2)) - 
            36*d^2*(-6 + 20*sw^2 - 16*sw^4 + sw^2*(20 - 19*sw^2 - 20*sw^4) + 
              4*sw^4*(-4 - 5*sw^2 + 8*sw^4)) - 32*(-9 + 30*sw^2 - 24*sw^4 + 
              sw^2*(30 + 4*sw^2 - 80*sw^4) + 8*sw^4*(-3 - 10*sw^2 + 
                16*sw^4)) + d^3*(sw^2*(165 - 212*sw^2 - 80*sw^4) + 
              4*sw^4*(-33 - 20*sw^2 + 32*sw^4) - 3*(6 - 55*sw^2 + 44*sw^4)) + 
            6*d*(-23*(3 - 10*sw^2 + 8*sw^4) + 8*sw^4*(-23 - 50*sw^2 + 
                80*sw^4) - 2*sw^2*(-115 + 54*sw^2 + 200*sw^4))) + 
          s*(-36*d^3*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
            3*d^4*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
            128*(9 - 30*sw^2 + 24*sw^4 + sw^2*(-30 + 74*sw^2 - 40*sw^4) + 
              8*sw^4*(3 - 5*sw^2 + 8*sw^4)) - 8*d*(sw^2*(-510 + 998*sw^2 - 
                280*sw^4) + 51*(3 - 10*sw^2 + 8*sw^4) + 8*sw^4*(51 - 
                35*sw^2 + 56*sw^4)) + d^2*(177*(3 - 10*sw^2 + 8*sw^4) - 
              10*sw^2*(177 - 304*sw^2 + 32*sw^4) + 8*sw^4*(177 - 40*sw^2 + 
                64*sw^4)))*t + 2*(16 - 7*d + d^2)*(9 - 30*sw^2 + 24*sw^4 + 
            8*sw^4*(3 - 20*sw^2 + 32*sw^4) - 2*sw^2*(15 - 76*sw^2 + 80*sw^4))*
           t^2)))/((-4 + d)*Pi^(2*d)*(mz^2 - s)*(-mz^2 + s)*sw^2*
       (1 - sw^2)) + (4^(2 - d)*(9*(-1 + d)*d^4*(2*Pi)^d*s^2 + 
        2^(1 + d)*Pi^d*(s^2*(3*d^5*(4*sw^4 + sw^2*(-5 + 4*sw^2) + 
              sw^2*(-5 + 8*sw^2)) + 64*(-9 + 30*sw^2 - 24*sw^4 + 
              sw^2*(30 + 4*sw^2 - 80*sw^4) + 8*sw^4*(-3 - 10*sw^2 + 
                16*sw^4)) + d^4*(-5*sw^2*(-39 + 52*sw^2 + 16*sw^4) + 
              4*sw^4*(-39 - 20*sw^2 + 32*sw^4) - 3*(18 - 65*sw^2 + 
                52*sw^4)) + 6*d^2*(sw^2*(470 - 336*sw^2 - 640*sw^4) - 
              47*(3 - 10*sw^2 + 8*sw^4) + 8*sw^4*(-47 - 80*sw^2 + 
                128*sw^4)) + d^3*(sw^4*(840 + 880*sw^2 - 1408*sw^4) + 
              105*(3 - 10*sw^2 + 8*sw^4) + 2*sw^2*(-525 + 554*sw^2 + 
                440*sw^4)) - 4*d*(-93*(3 - 10*sw^2 + 8*sw^4) + 
              8*sw^4*(-93 - 230*sw^2 + 368*sw^4) - 2*sw^2*(-465 + 146*sw^2 + 
                920*sw^4))) + (-32 + 30*d - 9*d^2 + d^3)*s*
           (-15*d*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
            3*d^2*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
            8*(9 - 30*sw^2 + 24*sw^4 + sw^2*(-30 + 74*sw^2 - 40*sw^4) + 
              8*sw^4*(3 - 5*sw^2 + 8*sw^4)))*t + 2*(-32 + 30*d - 9*d^2 + d^3)*
           (9 - 30*sw^2 + 24*sw^4 + 8*sw^4*(3 - 20*sw^2 + 32*sw^4) - 
            2*sw^2*(15 - 76*sw^2 + 80*sw^4))*t^2)))/((-4 + d)*(-2 + d)*
       Pi^(2*d)*(mz^2 - s)*(-mz^2 + s)*sw^2*(1 - sw^2)) + 
     (3*s*(81*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(3*d^3*(32*sw^8 + 9*sw^2*(-5 + 4*sw^2) + 8*sw^6*(-11 + 
                8*sw^2) + 4*sw^4*(27 - 34*sw^2 + 8*sw^4) - 3*sw^2*(21 - 
                44*sw^2 + 16*sw^4)) + d^2*(9 - 12*sw^2 + 8*sw^4)*
             (sw^2*(90 - 92*sw^2 - 80*sw^4) - 9*(3 - 10*sw^2 + 8*sw^4) + 
              8*sw^4*(-9 - 10*sw^2 + 16*sw^4)) + 4*(9 - 12*sw^2 + 8*sw^4)*
             (-9 + 30*sw^2 - 24*sw^4 + sw^2*(30 + 4*sw^2 - 80*sw^4) + 
              8*sw^4*(-3 - 10*sw^2 + 16*sw^4)) - 2*d*(9 - 12*sw^2 + 8*sw^4)*
             (-9*(3 - 10*sw^2 + 8*sw^4) - 10*sw^2*(-9 + 4*sw^2 + 16*sw^4) + 
              8*sw^4*(-9 - 20*sw^2 + 32*sw^4))) + s*(9 - 12*sw^2 + 8*sw^4)*
           (-21*d^2*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
            3*d^3*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) - 
            16*(9 - 30*sw^2 + 24*sw^4 + sw^2*(-30 + 74*sw^2 - 40*sw^4) + 
              8*sw^4*(3 - 5*sw^2 + 8*sw^4)) + 2*d*(27*(3 - 10*sw^2 + 
                8*sw^4) + 8*sw^4*(27 - 20*sw^2 + 32*sw^4) - 2*sw^2*(135 - 
                268*sw^2 + 80*sw^4)))*t + 2*(-2 + d)*(9 - 12*sw^2 + 8*sw^4)*
           (9 - 30*sw^2 + 24*sw^4 + 8*sw^4*(3 - 20*sw^2 + 32*sw^4) - 
            2*sw^2*(15 - 76*sw^2 + 80*sw^4))*t^2)))/((-1 + d)*(2*Pi)^(2*d)*
       (mz^2 - s)^2*(-mz^2 + s)*sw^4*(1 - sw^2)^2) + 
     (9*2^(1 - 2*d)*s*(9*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(3*d^3*(32*sw^8 + sw^2*(-5 + 4*sw^2) + 8*sw^6*(-7 + 8*sw^2) + 
              sw^2*(-11 + 28*sw^2 - 16*sw^4) + 4*sw^4*(9 - 18*sw^2 + 
                8*sw^4)) + d^2*(1 - 4*sw^2 + 8*sw^4)*(sw^2*(90 - 92*sw^2 - 
                80*sw^4) - 9*(3 - 10*sw^2 + 8*sw^4) + 8*sw^4*(-9 - 10*sw^2 + 
                16*sw^4)) + 4*(1 - 4*sw^2 + 8*sw^4)*(-9 + 30*sw^2 - 24*sw^4 + 
              sw^2*(30 + 4*sw^2 - 80*sw^4) + 8*sw^4*(-3 - 10*sw^2 + 
                16*sw^4)) - 2*d*(1 - 4*sw^2 + 8*sw^4)*
             (-9*(3 - 10*sw^2 + 8*sw^4) - 10*sw^2*(-9 + 4*sw^2 + 16*sw^4) + 
              8*sw^4*(-9 - 20*sw^2 + 32*sw^4))) + s*(1 - 4*sw^2 + 8*sw^4)*
           (-21*d^2*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
            3*d^3*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) - 
            16*(9 - 30*sw^2 + 24*sw^4 + sw^2*(-30 + 74*sw^2 - 40*sw^4) + 
              8*sw^4*(3 - 5*sw^2 + 8*sw^4)) + 2*d*(27*(3 - 10*sw^2 + 
                8*sw^4) + 8*sw^4*(27 - 20*sw^2 + 32*sw^4) - 2*sw^2*(135 - 
                268*sw^2 + 80*sw^4)))*t + 2*(-2 + d)*(1 - 4*sw^2 + 8*sw^4)*
           (9 - 30*sw^2 + 24*sw^4 + 8*sw^4*(3 - 20*sw^2 + 32*sw^4) - 
            2*sw^2*(15 - 76*sw^2 + 80*sw^4))*t^2)))/((-1 + d)*Pi^(2*d)*
       (mz^2 - s)^2*(-mz^2 + s)*sw^4*(1 - sw^2)^2) + 
     (3*s*(81*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(d^2*(9 - 24*sw^2 + 32*sw^4)*(sw^2*(90 - 92*sw^2 - 80*sw^4) - 
              9*(3 - 10*sw^2 + 8*sw^4) + 8*sw^4*(-9 - 10*sw^2 + 16*sw^4)) + 
            4*(9 - 24*sw^2 + 32*sw^4)*(-9 + 30*sw^2 - 24*sw^4 + 
              sw^2*(30 + 4*sw^2 - 80*sw^4) + 8*sw^4*(-3 - 10*sw^2 + 
                16*sw^4)) + 3*d^3*(128*sw^8 + 256*sw^6*(-1 + sw^2) + 
              9*sw^2*(-5 + 4*sw^2) + 4*sw^4*(51 - 88*sw^2 + 32*sw^4) - 
              3*sw^2*(27 - 64*sw^2 + 32*sw^4)) - 2*d*(9 - 24*sw^2 + 32*sw^4)*
             (-9*(3 - 10*sw^2 + 8*sw^4) - 10*sw^2*(-9 + 4*sw^2 + 16*sw^4) + 
              8*sw^4*(-9 - 20*sw^2 + 32*sw^4))) + s*(9 - 24*sw^2 + 32*sw^4)*
           (-21*d^2*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
            3*d^3*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) - 
            16*(9 - 30*sw^2 + 24*sw^4 + sw^2*(-30 + 74*sw^2 - 40*sw^4) + 
              8*sw^4*(3 - 5*sw^2 + 8*sw^4)) + 2*d*(27*(3 - 10*sw^2 + 
                8*sw^4) + 8*sw^4*(27 - 20*sw^2 + 32*sw^4) - 2*sw^2*(135 - 
                268*sw^2 + 80*sw^4)))*t + 2*(-2 + d)*(9 - 24*sw^2 + 32*sw^4)*
           (9 - 30*sw^2 + 24*sw^4 + 8*sw^4*(3 - 20*sw^2 + 32*sw^4) - 
            2*sw^2*(15 - 76*sw^2 + 80*sw^4))*t^2)))/((-1 + d)*(2*Pi)^(2*d)*
       (mz^2 - s)^2*(-mz^2 + s)*sw^4*(1 - sw^2)^2) - 
     (9*8^(1 - d)*(-((-2 + d)*(2*Pi)^(2*d)*s^2*(2*mz^2 + s)*(-3 + 8*sw^2)*
          (-1 + 2*sw^2 + sw^2*(4 - 8*sw^2) + 4*sw^4*(-1 + 4*sw^2))) + 
        2^(1 + 2*d)*Pi^(2*d)*(s + 2*t)*((-2 + d)*mz^2*
           (s*(3*d*(1 - 2*sw^2 + 4*sw^4 + sw^2*(-4 + 8*sw^2)) - 
              4*(3 - 8*sw^2 + 4*sw^4 - 4*sw^2*(3 - 8*sw^2 + 4*sw^4) + 
                4*sw^4*(3 - 5*sw^2 + 8*sw^4))) - 2*(-3 + 8*sw^2)*
             (-1 + 2*sw^2 + sw^2*(4 - 8*sw^2) + 4*sw^4*(-1 + 4*sw^2))*t) + 
          2*s*(s*(-6 + 4*sw^2 + 16*sw^4 - 8*sw^2*(-3 + 2*sw^2 + 8*sw^4) + 
              8*sw^4*(-3 - 10*sw^2 + 16*sw^4) + 3*d*(1 - 2*sw^2 + 4*sw^4 + 
                sw^2*(-4 + 8*sw^2))) - (-4 + d)*(-3 + 8*sw^2)*
             (-1 + 2*sw^2 + sw^2*(4 - 8*sw^2) + 4*sw^4*(-1 + 4*sw^2))*t)) - 
        (2*Pi)^d*s^2*(3*d^2*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
           (s*(3*d^2*(-sw^2 + 2*sw^4 + sw^2*(-2 + 4*sw^2)) + 4*(3 - 8*sw^2 + 
                4*sw^4 - 4*sw^2*(3 - 8*sw^2 + 4*sw^4) + 4*sw^4*(3 - 5*sw^2 + 
                  8*sw^4)) + d*(-9 + 22*sw^2 - 8*sw^4 + 4*sw^2*(9 - 22*sw^2 + 
                  8*sw^4) - 4*sw^4*(9 - 10*sw^2 + 16*sw^4))) - 
            (-2 + d)*(-3 + 8*sw^2)*(-1 + 2*sw^2 + sw^2*(4 - 8*sw^2) + 
              4*sw^4*(-1 + 4*sw^2))*t)) - s^2*(3*d^3*(2*Pi)^(2*d)*s - 
          4^(1 + d)*(-2 + d)*mz^2*Pi^(2*d)*(-3 + 8*sw^2)*(-1 + 2*sw^2 + 
            sw^2*(4 - 8*sw^2) + 4*sw^4*(-1 + 4*sw^2)) + 2^(1 + 2*d)*Pi^(2*d)*
           (s*(3*d^3*(-sw^2 + 2*sw^4 + sw^2*(-2 + 4*sw^2)) + 
              2*d^2*(-9 + 16*sw^2 + 4*sw^4 - 4*sw^2*(-9 + 16*sw^2 + 4*sw^4) + 
                4*sw^4*(-9 - 5*sw^2 + 8*sw^4)) - 20*d*(-3 + 4*sw^2 + 4*sw^4 - 
                4*sw^2*(-3 + 4*sw^2 + 4*sw^4) + 4*sw^4*(-3 - 5*sw^2 + 
                  8*sw^4)) + 20*(-3 + 2*sw^2 + 8*sw^4 - 4*sw^2*(-3 + 2*sw^2 + 
                  8*sw^4) + 4*sw^4*(-3 - 10*sw^2 + 16*sw^4))) + 
            (-36*d^2*(1 - 2*sw^2 + 4*sw^4 + sw^2*(-4 + 8*sw^2)) + 
              3*d^3*(1 - 2*sw^2 + 4*sw^4 + sw^2*(-4 + 8*sw^2)) - 
              8*(21 - 44*sw^2 + 4*sw^4 - 4*sw^2*(21 - 44*sw^2 + 4*sw^4) + 
                4*sw^4*(21 - 5*sw^2 + 8*sw^4)) + 2*d*(69 - 142*sw^2 + 
                8*sw^4 - 4*sw^2*(69 - 142*sw^2 + 8*sw^4) + 4*sw^4*
                 (69 - 10*sw^2 + 16*sw^4)))*t)) + (2*Pi)^(2*d)*(3 - 8*sw^2)*
         (1 - 2*sw^2 + sw^4*(4 - 16*sw^2) + sw^2*(-4 + 8*sw^2))*
         (s*(-((-2 + d)*s^2) + 4*s*t + 4*(-1 + d)*t^2) + 
          2*mz^2*((-2 + d)*s^2 + 4*(-1 + d)*s*t + 4*(-1 + d)*t^2))))/
      (Pi^(3*d)*(mz^2 - s)*s^2*sw^2*(1 - sw^2)) + 
     (9*2^(3 - 2*d)*(-3*d^2*(2*Pi)^d*s - 3*d^3*(2*Pi)^d*s + 
        2^(2 + d)*(-2 + d)*mz^2*Pi^d*(1 - sw^2)*(3 - 16*sw^2 + 16*sw^4) - 
        (-2 + d)*(2*Pi)^d*(3 - 16*sw^2 + 16*sw^4)*(s + 2*mz^2*(1 - sw^2)) + 
        2^(1 + d)*Pi^d*(s*(2*d^2*sw^2 - 4*(3 - 7*sw^2 + 4*sw^4) + 
            d*(9 - 18*sw^2 + 8*sw^4)) + (-2 + d)*(3 - 16*sw^2 + 16*sw^4)*t) + 
        2^(1 + d)*Pi^d*(2*s*(30 + 20*sw^2 + d^3*sw^2 - 80*sw^4 + 
            d^2*(9 - 9*sw^2 - 4*sw^4) + 10*d*(-3 + sw^2 + 4*sw^4)) + 
          (-3 + 4*sw^2)*(-12*d^2 + d^3 + d*(46 - 4*sw^2) + 8*(-7 + sw^2))*
           t) - ((2^(1 + d)*Pi^d - d*(2*Pi)^d)*(-3 + 4*sw^2)*(-1 + 4*sw^2)*
          (s*(-((-2 + d)*s^2) + 4*s*t + 4*(-1 + d)*t^2) + 2*mz^2*(1 - sw^2)*
            ((-2 + d)*s^2 + 4*(-1 + d)*s*t + 4*(-1 + d)*t^2)))/
         ((-2 + d)*s^2) - (2*(1 + (2*t)/s)*(2^(1 + d)*Pi^d*s*(-3 + 4*sw^2)*
            (s*(-2 + d - 4*sw^2) + (-4 + d)*(-1 + 4*sw^2)*t) + 
           mz^2*(1 - sw^2)*(-3*d^2*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
              (s*(2*d^2*sw^2 - 4*(3 - 7*sw^2 + 4*sw^4) + d*(9 - 18*sw^2 + 
                   8*sw^4)) + (-2 + d)*(3 - 16*sw^2 + 16*sw^4)*t))))/s))/
      (Pi^(2*d)*(mz^2 - s)*sw^2) - 
     (2^(3 - 2*d)*(-27*d^2*(2*Pi)^d*s - 27*d^3*(2*Pi)^d*s + 
        2^(2 + d)*(-2 + d)*mz^2*Pi^d*(-1 + 4*sw^2)*(sw^2*(72 - 96*sw^2) + 
          9*(-3 + 4*sw^2) + 16*sw^4*(-3 + 8*sw^2)) - (-2 + d)*(2*Pi)^d*
         (2*mz^2 + s)*(-1 + 4*sw^2)*(sw^2*(72 - 96*sw^2) + 9*(-3 + 4*sw^2) + 
          16*sw^4*(-3 + 8*sw^2)) + 2^(1 + d)*Pi^d*
         (s*(-36*(3 - 7*sw^2 + 4*sw^4) + 96*sw^2*(3 - 7*sw^2 + 4*sw^4) - 
            64*sw^4*(3 - 5*sw^2 + 8*sw^4) - 6*d^2*(-3*sw^2 + 4*sw^4 + 
              sw^2*(-6 + 8*sw^2)) + d*(9*(9 - 18*sw^2 + 8*sw^4) - 
              24*sw^2*(9 - 18*sw^2 + 8*sw^4) + 16*sw^4*(9 - 10*sw^2 + 
                16*sw^4))) + (-2 + d)*(-1 + 4*sw^2)*(sw^2*(72 - 96*sw^2) + 
            9*(-3 + 4*sw^2) + 16*sw^4*(-3 + 8*sw^2))*t) - 
        2^(1 + d)*Pi^d*(2*s*(3*d^3*(-3*sw^2 + 4*sw^4 + sw^2*(-6 + 8*sw^2)) + 
            d^2*(9*(-9 + 9*sw^2 + 4*sw^4) - 24*sw^2*(-9 + 9*sw^2 + 4*sw^4) + 
              16*sw^4*(-9 - 5*sw^2 + 8*sw^4)) - 
            10*d*(9*(-3 + sw^2 + 4*sw^4) - 24*sw^2*(-3 + sw^2 + 4*sw^4) + 
              16*sw^4*(-3 - 5*sw^2 + 8*sw^4)) + 
            10*(9*(-3 - 2*sw^2 + 8*sw^4) - 24*sw^2*(-3 - 2*sw^2 + 8*sw^4) + 
              16*sw^4*(-3 - 10*sw^2 + 16*sw^4))) + 
          (-36*d^2*(9 - 12*sw^2 + 16*sw^4 + 8*sw^2*(-3 + 4*sw^2)) + 
            3*d^3*(9 - 12*sw^2 + 16*sw^4 + 8*sw^2*(-3 + 4*sw^2)) - 
            8*(9*(21 - 31*sw^2 + 4*sw^4) - 24*sw^2*(21 - 31*sw^2 + 4*sw^4) + 
              16*sw^4*(21 - 5*sw^2 + 8*sw^4)) + 
            2*d*(9*(69 - 98*sw^2 + 8*sw^4) - 24*sw^2*(69 - 98*sw^2 + 
                8*sw^4) + 16*sw^4*(69 - 10*sw^2 + 16*sw^4)))*t) + 
        ((27*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(-12*(-2 + d)*sw^2*(3 - 16*sw^2 + 16*
                sw^4) + 8*(-2 + d)*sw^4*(3 - 20*sw^2 + 32*sw^4) + 
             9*(-3 - 8*(-2 + d)*sw^2 + 8*(-2 + d)*sw^4)))*
          (s*(-((-2 + d)*s^2) + 4*s*t + 4*(-1 + d)*t^2) + 
           2*mz^2*((-2 + d)*s^2 + 4*(-1 + d)*s*t + 4*(-1 + d)*t^2)))/
         ((-2 + d)*s^2) + (2*(1 + (2*t)/s)*
          (mz^2*(27*d^2*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
              (s*(36*(3 - 7*sw^2 + 4*sw^4) - 96*sw^2*(3 - 7*sw^2 + 4*sw^4) + 
                 64*sw^4*(3 - 5*sw^2 + 8*sw^4) + 6*d^2*(-3*sw^2 + 4*sw^4 + 
                   sw^2*(-6 + 8*sw^2)) + d*(-9*(9 - 18*sw^2 + 8*sw^4) + 
                   24*sw^2*(9 - 18*sw^2 + 8*sw^4) - 16*sw^4*(9 - 10*sw^2 + 
                     16*sw^4))) - (-2 + d)*(-1 + 4*sw^2)*
                (sw^2*(72 - 96*sw^2) + 9*(-3 + 4*sw^2) + 16*sw^4*
                  (-3 + 8*sw^2))*t)) + 2*s*(27*d*(2*Pi)^d*(s - t) + 
             2^(1 + d)*Pi^d*(s*(12*sw^2*(-2 + d - 4*sw^2)*(-3 + 4*sw^2) - 
                 9*(3 + 2*(1 + d)*sw^2 - 8*sw^4) + 8*sw^4*(-6 + 3*d - 
                   20*sw^2 + 32*sw^4)) - 2*(-6*(-4 + d)*sw^2*(3 - 16*sw^2 + 
                   16*sw^4) + 4*(-4 + d)*sw^4*(3 - 20*sw^2 + 32*sw^4) + 
                 9*(-3 - 4*(-4 + d)*sw^2 + 4*(-4 + d)*sw^4))*t))))/s))/
      (Pi^(2*d)*(mz^2 - s)*sw^2*(1 - sw^2)) + 
     (3*4^(2 - d)*(15*d^4*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(-15*d^4 - 96*(45 - 10*sw^2 + 16*sw^4) + 
            2*d^3*(99 - 35*sw^2 + 56*sw^4) + 48*d*(92 - 45*sw^2 + 72*sw^4) - 
            2*d^2*(759 - 410*sw^2 + 656*sw^4)) + 
          s*(-57*d^3 + 9*d^4 + 8*d^2*(-12 - 25*sw^2 + 40*sw^4) + 
            128*(-6 - 65*sw^2 + 104*sw^4) - 48*d*(-17 - 70*sw^2 + 112*sw^4))*
           t + 2*(176 - 80*d + 7*d^2)*(3 - 20*sw^2 + 32*sw^4)*t^2) - 
        2*(9*d^4*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
           (2*s^2*(96 + 320*sw^2 - 512*sw^4 + d^2*(93 + 130*sw^2 - 
                208*sw^4) + 3*d^3*(-8 - 5*sw^2 + 8*sw^4) + 12*d*(-13 - 
                30*sw^2 + 48*sw^4)) + s*(-105*d^3 + 9*d^4 + 256*(3 - 5*sw^2 + 
                8*sw^4) - 160*d*(6 - 5*sw^2 + 8*sw^4) + 12*d^2*(39 - 
                10*sw^2 + 16*sw^4))*t + 2*(32 - 20*d + 3*d^2)*
             (3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[A] + 
        (-9*d^4*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
           (s^2*(3*d^4 - 2*d^3*(-9 - 5*sw^2 + 8*sw^4) + 32*(-3 - 10*sw^2 + 
                16*sw^4) - 16*d*(-9 - 20*sw^2 + 32*sw^4) + 2*d^2*(-39 - 
                50*sw^2 + 80*sw^4)) - (-4 + d)^2*s*(-15*d + 3*d^2 + 
              8*(3 - 5*sw^2 + 8*sw^4))*t - 2*(-4 + d)^2*(3 - 20*sw^2 + 
              32*sw^4)*t^2))*GaugeXi[A]^2))/((-4 + d)*Pi^(2*d)*(mz^2 - s)*
       s) - (3*4^(2 - d)*(39*d^4*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(-3*d^4 + d^2*(618 + 740*sw^2 - 1184*sw^4) + 
            2*d^3*(-87 - 35*sw^2 + 56*sw^4) - 64*(-6 - 35*sw^2 + 56*sw^4) + 
            16*d*(-54 - 145*sw^2 + 232*sw^4)) + s*(-57*d^3 + 9*d^4 + 
            1152*(-1 - 5*sw^2 + 8*sw^4) + 72*d^2*(-1 - 5*sw^2 + 8*sw^4) - 
            32*d*(-27 - 95*sw^2 + 152*sw^4))*t + 2*(176 - 80*d + 7*d^2)*
           (3 - 20*sw^2 + 32*sw^4)*t^2) - 2*(9*d^4*(2*Pi)^d*s^2 + 
          2^(1 + d)*Pi^d*(2*s^2*(96 + 320*sw^2 - 512*sw^4 + 
              d^2*(93 + 130*sw^2 - 208*sw^4) + 3*d^3*(-8 - 5*sw^2 + 8*sw^4) + 
              12*d*(-13 - 30*sw^2 + 48*sw^4)) + s*(-105*d^3 + 9*d^4 + 
              256*(3 - 5*sw^2 + 8*sw^4) - 160*d*(6 - 5*sw^2 + 8*sw^4) + 
              12*d^2*(39 - 10*sw^2 + 16*sw^4))*t + 2*(32 - 20*d + 3*d^2)*
             (3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[A] + 
        (-9*d^4*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
           (s^2*(3*d^4 - 2*d^3*(-9 - 5*sw^2 + 8*sw^4) + 32*(-3 - 10*sw^2 + 
                16*sw^4) - 16*d*(-9 - 20*sw^2 + 32*sw^4) + 2*d^2*(-39 - 
                50*sw^2 + 80*sw^4)) - (-4 + d)^2*s*(-15*d + 3*d^2 + 
              8*(3 - 5*sw^2 + 8*sw^4))*t - 2*(-4 + d)^2*(3 - 20*sw^2 + 
              32*sw^4)*t^2))*GaugeXi[A]^2))/((-4 + d)*Pi^(2*d)*(mz^2 - s)*
       s) + (3*4^(1 - d)*((d*s^2*(-1 + 4*sw^2)*((2*Pi)^d + 
           2^(1 + d)*Pi^d*(1 - 2*sw^2))*(9 - 12*sw^2 + 4*sw^2*(-3 + 8*sw^2)))/
         ((-1 + d)*(mz^2 - s)) - (d*s^2*(27*(2*Pi)^d + 2^(3 + d)*Pi^d*
            (18*sw^2*(-1 + sw^2) - 9*sw^2*(1 - 6*sw^2 + 8*sw^4) + 
             sw^4*(6 - 40*sw^2 + 64*sw^4))))/((-1 + d)*(mz^2 - s)) + 
        ((d*s + 2*t)*(-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (-3*d*s*(3 - 6*sw^2 + 8*sw^4 + 4*sw^2*(-3 + 2*sw^2)) + 
             2*s*(-72*sw^2*(1 - 2*sw^2 + 2*sw^4) + 9*(3 - 7*sw^2 + 4*sw^4) + 
               16*sw^4*(3 - 5*sw^2 + 8*sw^4)) + (-3 + 4*sw^2)*(-1 + 4*sw^2)*
              (9 - 12*sw^2 + 4*sw^2*(-3 + 8*sw^2))*t)))/
         ((-1 + d)*(mz^2 - s)) - (s*(27*d^2*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (s*(18*d^2*(4*sw^2*(-1 + sw^2) + sw^2*(-1 + 4*sw^2)) - 3*d*
                (8*sw^4 + 2*sw^2*(-21 + 68*sw^2) + 9*(3 - 16*sw^2 + 
                   16*sw^4)) + 4*(sw^4*(12 + 40*sw^2 - 64*sw^4) + 
                 9*sw^2*(-5 + 10*sw^2 + 8*sw^4) + 9*(3 - 16*sw^2 + 
                   16*sw^4))) + (-6 + 3*d - 12*sw^2 + 4*sw^2*(-1 + 4*sw^2))*
              (9 - 12*sw^2 + 4*sw^2*(-3 + 8*sw^2))*t)))/(mz^2 - s) - 
        (s*(27*d^2*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (s*(6*d^2*(-3*sw^2 + sw^2*(-3 + 8*sw^2)) + 4*
                (sw^4*(12 + 40*sw^2 - 64*sw^4) + 9*(3 + 2*sw^2 - 8*sw^4) + 
                 9*sw^2*(-5 + 2*sw^2 + 8*sw^4)) - 3*d*(8*sw^4 + 
                 sw^2*(-42 + 80*sw^2) - 3*(-9 + 6*sw^2 + 8*sw^4))) + 
             (-1 + 4*sw^2)*(54 - 72*sw^2 - 36*sw^2*(1 + 4*sw^2) + 9*d*
                (-3 + 8*sw^2) + 16*sw^4*(-3 + 8*sw^2))*t)))/(mz^2 - s) + 
        (-27*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
           (s^2*(4*sw^4*(24 + 80*sw^2 - 128*sw^4) + 24*d^2*(3*sw^2 - 
                6*sw^4) + 72*sw^2*(1 - 14*sw^2 + 8*sw^4) + 32*d*sw^4*(-3 - 
                5*sw^2 + 8*sw^4) - 36*(3 - 16*sw^2 + 16*sw^4) + 
              27*d*(3 - 16*sw^2 + 16*sw^4) - 12*d*sw^2*(3 - 58*sw^2 + 
                24*sw^4)) + s*(3*d^2*(-3 + 4*sw^2)*(-3 + 8*sw^2) - 
              3*d*(63 - 120*sw^2 + 128*sw^4 + 16*sw^2*(-9 + 10*sw^2)) + 
              2*(64*sw^4*(3 - 5*sw^2 + 8*sw^4) - 36*sw^2*(11 - 26*sw^2 + 
                  16*sw^4) + 9*(21 - 58*sw^2 + 40*sw^4)))*t + 
            2*(-3 + 4*sw^2)*(-1 + 4*sw^2)*(9 - 12*sw^2 + 4*sw^2*(-3 + 
                8*sw^2))*t^2) - (2*s*t*(s*(9*d*(2*Pi)^d + 2^(1 + d)*Pi^d*
                (-72*sw^2*(-1 - 2*sw^2 + 4*sw^4) + 9*(-3 - 2*sw^2 + 8*sw^4) + 
                 16*sw^4*(-3 - 10*sw^2 + 16*sw^4) + 3*d*(3 - 6*sw^2 + 
                   8*sw^4 + 4*sw^2*(-3 + 2*sw^2)))) - 
             mz^2*(27*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(-9*(3 + 2*(1 + d)*sw^2 - 
                   8*sw^4) + 8*sw^4*(-6 + 3*d - 20*sw^2 + 32*sw^4) + 
                 12*sw^2*(6 + 12*sw^2 - 24*sw^4 + d*(-3 + 2*sw^2))))*
              GaugeXi[Z]))/(s - mz^2*GaugeXi[Z]))/(-mz^2 + s)))/
      (Pi^(2*d)*(-mz^2 + s)*sw^2*(1 - sw^2))))/(sw^2*(1 - sw^2)), 
  ((-I/27)*EL^6*
    ((2^(6 + d)*Pi^d*(s*(-78*d^3 + 9*d^4 - 4*d^2*(-45 - 5*sw^2 + 8*sw^4) + 
          8*d*(12 - 35*sw^2 + 56*sw^4) - 16*(33 - 40*sw^2 + 64*sw^4)) + 
        2*(-24*d^3 + 3*d^4 + d^2*(60 + 20*sw^2 - 32*sw^4) - 
          32*(3 - 20*sw^2 + 32*sw^4) + 4*d*(-3 - 70*sw^2 + 112*sw^4))*t))/
      (-4 + d) + (2^(4 + d)*Pi^d*
       (mz^2*(33*d^3*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) - 
          3*d^4*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
          12*d^2*(-9*(3 - 10*sw^2 + 8*sw^4) + 8*sw^4*(-9 - 5*sw^2 + 8*sw^4) - 
            2*sw^2*(-45 + 59*sw^2 + 20*sw^4)) + 24*(9 - 30*sw^2 + 24*sw^4 + 
            8*sw^4*(3 - 20*sw^2 + 32*sw^4) - 2*sw^2*(15 - 76*sw^2 + 
              80*sw^4)) - 4*d*(sw^2*(210 + 106*sw^2 - 680*sw^4) - 
            21*(3 - 10*sw^2 + 8*sw^4) + 8*sw^4*(-21 - 85*sw^2 + 136*sw^4))) + 
        s*(-57*d^3*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
          6*d^4*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) - 
          4*d^2*(sw^2*(390 - 572*sw^2 - 80*sw^4) - 
            39*(3 - 10*sw^2 + 8*sw^4) + 8*sw^4*(-39 - 10*sw^2 + 16*sw^4)) - 
          8*(39*(3 - 10*sw^2 + 8*sw^4) - 10*sw^2*(39 - 104*sw^2 + 64*sw^4) + 
            8*sw^4*(39 - 80*sw^2 + 128*sw^4)) + 4*d*(-9 + 30*sw^2 - 24*sw^4 + 
            sw^2*(30 + 394*sw^2 - 680*sw^4) + 8*sw^4*(-3 - 85*sw^2 + 
              136*sw^4))) + 2*(-36*d^3*(3 - 10*sw^2 + 16*sw^4 + 
            2*sw^2*(-5 + 8*sw^2)) + 3*d^4*(3 - 10*sw^2 + 16*sw^4 + 
            2*sw^2*(-5 + 8*sw^2)) - 8*d^2*(sw^2*(210 - 323*sw^2 - 20*sw^4) - 
            21*(3 - 10*sw^2 + 8*sw^4) + 4*sw^4*(-42 - 5*sw^2 + 8*sw^4)) - 
          8*(sw^2*(330 - 268*sw^2 - 400*sw^4) - 33*(3 - 10*sw^2 + 8*sw^4) + 
            8*sw^4*(-33 - 50*sw^2 + 80*sw^4)) + 
          4*d*(-87*(3 - 10*sw^2 + 8*sw^4) + 8*sw^4*(-87 - 50*sw^2 + 
              80*sw^4) - 2*sw^2*(-435 + 566*sw^2 + 200*sw^4)))*t))/
      ((-4 + d)*sw^2*(1 - sw^2)) + 
     ((2*Pi)^d*(s*(-24*d^2*(9 - 30*sw^2 + 24*sw^4 + 64*sw^8 + 
            32*sw^6*(-5 + 8*sw^2) - 20*sw^2*(3 - 10*sw^2 + 8*sw^4) + 
            4*sw^4*(37 - 100*sw^2 + 64*sw^4)) + 3*d^3*(9 - 30*sw^2 + 
            24*sw^4 + 64*sw^8 + 32*sw^6*(-5 + 8*sw^2) - 
            20*sw^2*(3 - 10*sw^2 + 8*sw^4) + 4*sw^4*(37 - 100*sw^2 + 
              64*sw^4)) - 12*d*(-9*(3 - 10*sw^2 + 8*sw^4) + 
            60*sw^2*(3 - 10*sw^2 + 8*sw^4) + 64*sw^8*(-3 - 5*sw^2 + 8*sw^4) - 
            32*sw^6*(-15 + 11*sw^2 + 20*sw^4) - 4*sw^4*(111 - 265*sw^2 + 
              140*sw^4)) + 8*(9*(3 - 10*sw^2 + 8*sw^4) - 
            60*sw^2*(3 - 10*sw^2 + 8*sw^4) + 64*sw^8*(3 - 20*sw^2 + 
              32*sw^4) - 32*sw^6*(15 - 76*sw^2 + 80*sw^4) + 
            4*sw^4*(111 - 440*sw^2 + 400*sw^4))) + 
        2*(-36*d^2*(9 - 30*sw^2 + 24*sw^4 + 64*sw^8 + 32*sw^6*(-5 + 8*sw^2) - 
            20*sw^2*(3 - 10*sw^2 + 8*sw^4) + 4*sw^4*(37 - 100*sw^2 + 
              64*sw^4)) + 3*d^3*(9 - 30*sw^2 + 24*sw^4 + 64*sw^8 + 
            32*sw^6*(-5 + 8*sw^2) - 20*sw^2*(3 - 10*sw^2 + 8*sw^4) + 
            4*sw^4*(37 - 100*sw^2 + 64*sw^4)) - 
          4*d*(-99*(3 - 10*sw^2 + 8*sw^4) + 660*sw^2*(3 - 10*sw^2 + 8*sw^4) + 
            64*sw^8*(-33 - 5*sw^2 + 8*sw^4) - 32*sw^6*(-165 + 251*sw^2 + 
              20*sw^4) - 4*sw^4*(1221 - 3265*sw^2 + 2060*sw^4)) + 
          4*(-117*(3 - 10*sw^2 + 8*sw^4) + 780*sw^2*(3 - 10*sw^2 + 8*sw^4) + 
            64*sw^8*(-39 - 10*sw^2 + 16*sw^4) - 32*sw^6*(-195 + 286*sw^2 + 
              40*sw^4) - 4*sw^4*(1443 - 3830*sw^2 + 2392*sw^4)))*t))/
      (sw^4*(1 - sw^2)^2)))/(2^(2*(4 + d))*Pi^(2*d)*(mz^2 - s)*sw^2*
    (1 - sw^2)), ((I/27)*2^(-3 - 2*d)*EL^6*t*(-3*d^3*(2*Pi)^d*s^2 + 
     2^(2 + d)*Pi^d*(s^2*(-6 + 6*d^2 + 40*sw^2 - 64*sw^4 + 
         3*d*(-3 - 5*sw^2 + 8*sw^4)) + 2*s*(-6 + 3*d - 20*sw^2 + 32*sw^4)*t + 
       4*(3 - 20*sw^2 + 32*sw^4)*t^2)))/(Pi^(2*d)*(mz^2 - s)*sw^2*
    (1 - sw^2)), ((-I/81)*2^(-7 - 3*d)*EL^6*
    (16*mz^6*sw^2*(1 - sw^2)*(-9*d^4*(2*Pi)^(2*d)*s^2*(-3 + 5*sw^2)*
        (s + 3*t) + 2^(1 + 2*d)*Pi^(2*d)*
        (s^3*(3*d^4*sw^2*(-15 + 39*sw^2) - 16*(9*(-3 + 8*sw^4) + 
             26*sw^4*(-3 - 10*sw^2 + 16*sw^4) - 6*sw^2*(-15 + 2*sw^2 + 40*
                sw^4)) + d^3*(9*(-15 + 20*sw^2 + 8*sw^4) + 
             26*sw^4*(-15 - 10*sw^2 + 16*sw^4) - 6*sw^2*(-75 + 106*sw^2 + 40*
                sw^4)) - 2*d^2*(sw^2*(810 - 828*sw^2 - 960*sw^4) + 
             9*(-27 + 25*sw^2 + 32*sw^4) + 26*sw^4*(-27 - 40*sw^2 + 64*
                sw^4)) + 4*d*(9*(-21 + 10*sw^2 + 40*sw^4) + 
             26*sw^4*(-21 - 50*sw^2 + 80*sw^4) - 6*sw^2*(-105 + 62*sw^2 + 200*
                sw^4))) + s^2*(9*d^4*sw^2*(-15 + 39*sw^2) - 
           4*d^2*(-48*sw^2*(-30 + 49*sw^2 + 5*sw^4) + 
             52*sw^4*(-24 - 5*sw^2 + 8*sw^4) + 9*(-48 + 75*sw^2 + 8*sw^4)) + 
           d^3*(-48*sw^2*(-30 + 49*sw^2 + 5*sw^4) + 52*sw^4*(-24 - 5*sw^2 + 8*
                sw^4) + 9*(-48 + 75*sw^2 + 8*sw^4)) - 
           4*d*(9*(87 - 150*sw^2 + 8*sw^4) + 26*sw^4*(87 - 10*sw^2 + 16*
                sw^4) - 6*sw^2*(435 - 778*sw^2 + 40*sw^4)) + 
           16*(9*(15 - 30*sw^2 + 8*sw^4) + 26*sw^4*(15 - 10*sw^2 + 16*sw^4) - 
             6*sw^2*(75 - 154*sw^2 + 40*sw^4)))*t + 
         s*(-33*d^3*(9 - 15*sw^2 + 26*sw^4 + sw^2*(-30 + 52*sw^2)) + 
           3*d^4*(9 - 15*sw^2 + 26*sw^4 + sw^2*(-30 + 52*sw^2)) + 
           8*d^2*(-60*sw^2*(9 - 18*sw^2 + 4*sw^4) + 9*(18 - 35*sw^2 + 8*
                sw^4) + 52*sw^4*(9 - 5*sw^2 + 8*sw^4)) + 
           16*(9*(15 - 45*sw^2 + 32*sw^4) + 26*sw^4*(15 - 40*sw^2 + 64*
                sw^4) - 6*sw^2*(75 - 226*sw^2 + 160*sw^4)) - 
           12*d*(26*sw^4*(25 - 40*sw^2 + 64*sw^4) + 3*(75 - 185*sw^2 + 96*
                sw^4) - 2*sw^2*(375 - 938*sw^2 + 480*sw^4)))*t^2 + 
         2*(8 - 6*d + d^2)*(9*(3 - 15*sw^2 + 16*sw^4) + 
           26*sw^4*(3 - 20*sw^2 + 32*sw^4) - 6*sw^2*(15 - 74*sw^2 + 80*sw^4))*
          t^3)) + 2*mz^4*(-81*d^4*(2*Pi)^(2*d)*s^3*(s + 3*t) + 
       2^(1 + 2*d)*Pi^(2*d)*s*(s^3*(36*d^5*sw^2*(1 - sw^2)*
            (3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
           16*(-27*(3 - 10*sw^2 + 8*sw^4) + 208*sw^8*(-3 - 10*sw^2 + 16*
                sw^4) - 6*sw^4*(3*(75 - 130*sw^2 + 8*sw^4) + 8*(1 - sw^2)*
                (-120 + 181*sw^2 + 20*sw^4)) - 36*sw^2*(-15 + 37*sw^2 - 20*
                sw^4 + 2*(1 - sw^2)*(24 - 75*sw^2 + 56*sw^4)) + 
             4*sw^6*(375 + 2*sw^2 - 1000*sw^4 + 2*(1 - sw^2)*(-579 - 
                 130*sw^2 + 208*sw^4))) + d^3*(135*(3 - 10*sw^2 + 8*sw^4) - 
             208*sw^8*(-15 - 10*sw^2 + 16*sw^4) + 4*sw^6*(-1875 + 2494*sw^2 + 
               1000*sw^4 + (1 - sw^2)*(8022 + 260*sw^2 - 416*sw^4)) + 
             36*sw^2*(-75 + 211*sw^2 - 140*sw^4 + 3*(1 - sw^2)*
                (111 - 360*sw^2 + 280*sw^4)) + 6*sw^4*(20*(1 - sw^2)*
                (-333 + 530*sw^2 + 8*sw^4) + 3*(375 - 890*sw^2 + 
                 424*sw^4))) - 3*d^4*(104*sw^8 + 9*sw^2*(-5 + 4*sw^2) + 
             2*sw^6*(-125 + 208*sw^2 + 842*(1 - sw^2)) + 
             sw^4*(225 - 570*sw^2 + 312*sw^4 + 4*(1 - sw^2)*(-525 + 
                 842*sw^2)) + 3*sw^2*(-30 + 87*sw^2 - 60*sw^4 + (1 - sw^2)*
                (210 - 690*sw^2 + 544*sw^4))) - 
           4*d*(-189*(3 - 10*sw^2 + 8*sw^4) + 208*sw^8*(-21 - 50*sw^2 + 80*
                sw^4) - 6*sw^4*(1575 - 3090*sw^2 + 744*sw^4 + 4*(1 - sw^2)*
                (-1755 + 2702*sw^2 + 200*sw^4)) - 36*sw^2*(-105 + 272*sw^2 - 
               160*sw^4 + 3*(1 - sw^2)*(117 - 370*sw^2 + 280*sw^4)) + 
             4*sw^6*(2625 - 1238*sw^2 - 5000*sw^4 + 2*(1 - sw^2)*
                (-4233 - 650*sw^2 + 1040*sw^4))) + 
           2*d^2*(-243*(3 - 10*sw^2 + 8*sw^4) + 208*sw^8*(-27 - 40*sw^2 + 64*
                sw^4) + 4*sw^6*(3375 - 3112*sw^2 - 4000*sw^4 + 26*(1 - sw^2)*
                (-459 - 40*sw^2 + 64*sw^4)) - 6*sw^4*(4*(1 - sw^2)*
                (-2475 + 3882*sw^2 + 160*sw^4) + 9*(225 - 490*sw^2 + 
                 184*sw^4)) - 18*sw^2*(-270 + 731*sw^2 - 460*sw^4 + 
               (1 - sw^2)*(990 - 3170*sw^2 + 2432*sw^4)))) + 
         s^2*(36*d^5*sw^2*(1 - sw^2)*(3 - 10*sw^2 + 16*sw^4 + 
             2*sw^2*(-5 + 8*sw^2)) - 9*d^4*(104*sw^8 + 9*sw^2*(-5 + 4*sw^2) + 
             sw^6*(-250 + 416*sw^2 + 596*(1 - sw^2)) + 
             sw^4*(225 - 570*sw^2 + 312*sw^4 + 4*(1 - sw^2)*(-185 + 
                 298*sw^2)) + sw^2*(-9*(10 - 29*sw^2 + 20*sw^4) + (1 - sw^2)*
                (222 - 710*sw^2 + 544*sw^4))) - 
           16*(135*(3 - 10*sw^2 + 8*sw^4) + 208*sw^8*(15 - 10*sw^2 + 16*
                sw^4) + 36*sw^2*(-75 + 224*sw^2 - 160*sw^4 + 4*(1 - sw^2)*
                (15 - 45*sw^2 + 32*sw^4)) + 4*sw^6*(-1875 + 3746*sw^2 - 1000*
                sw^4 + 2*(1 - sw^2)*(735 - 130*sw^2 + 208*sw^4)) - 
             6*sw^4*(8*(1 - sw^2)*(150 - 257*sw^2 + 20*sw^4) - 3*
                (375 - 1010*sw^2 + 616*sw^4))) + 
           8*d^2*(-216*(3 - 10*sw^2 + 8*sw^4) + 208*sw^8*(-24 - 5*sw^2 + 8*
                sw^4) + 4*sw^6*(3000 - 4679*sw^2 - 500*sw^4 + 26*(1 - sw^2)*
                (-132 - 5*sw^2 + 8*sw^4)) - 12*sw^4*(2*(1 - sw^2)*
                (-705 + 1132*sw^2 + 20*sw^4) + 3*(300 - 745*sw^2 + 
                 392*sw^4)) - 9*sw^2*(-480 + 1379*sw^2 - 940*sw^4 + 2*
                (1 - sw^2)*(282 - 855*sw^2 + 616*sw^4))) + 
           d^3*(432*(3 - 10*sw^2 + 8*sw^4) - 416*sw^8*(-24 - 5*sw^2 + 8*
                sw^4) - 8*sw^6*(3000 - 4679*sw^2 - 500*sw^4 + 2*(1 - sw^2)*
                (-2220 - 65*sw^2 + 104*sw^4)) + 24*sw^4*(2*(1 - sw^2)*
                (-915 + 1468*sw^2 + 20*sw^4) + 3*(300 - 745*sw^2 + 
                 392*sw^4)) + 18*sw^2*(-480 + 1379*sw^2 - 940*sw^4 + 2*
                (1 - sw^2)*(366 - 1135*sw^2 + 840*sw^4))) + 
           4*d*(783*(3 - 10*sw^2 + 8*sw^4) + 208*sw^8*(87 - 10*sw^2 + 16*
                sw^4) - 6*sw^4*(-6525 + 16710*sw^2 - 9336*sw^4 + 4*(1 - sw^2)*
                (2085 - 3418*sw^2 + 40*sw^4)) + 4*sw^6*(-10875 + 18722*sw^2 - 
               1000*sw^4 + 2*(1 - sw^2)*(5091 - 130*sw^2 + 208*sw^4)) + 
             36*sw^2*(-435 + 1268*sw^2 - 880*sw^4 + (1 - sw^2)*
                (417 - 1250*sw^2 + 888*sw^4))))*t - (8 - 6*d + d^2)*s*
          (270*(3 - 10*sw^2 + 8*sw^4) + 416*sw^8*(15 - 40*sw^2 + 64*sw^4) + 
           36*sw^2*(-150 + 487*sw^2 - 380*sw^4 + (1 - sw^2)*(30 - 90*sw^2 + 
               64*sw^4)) + 8*sw^6*(-1875 + 5624*sw^2 - 4000*sw^4 + 
             26*(1 - sw^2)*(15 - 40*sw^2 + 64*sw^4)) - 
           12*sw^4*(4*(1 - sw^2)*(75 - 226*sw^2 + 160*sw^4) - 
             3*(375 - 1190*sw^2 + 904*sw^4)) - 15*d*(208*sw^8 + 
             9*(3 - 10*sw^2 + 8*sw^4) + 2*sw^4*(-15 + 26*sw^2)*
              (-15 + 12*sw^2 + 4*(1 - sw^2)) + 4*sw^6*(-125 + 208*sw^2 + 26*
                (1 - sw^2)) - 6*sw^2*(30 - 87*sw^2 + 60*sw^4 + 2*(1 - sw^2)*
                (-3 + 5*sw^2))) + 3*d^2*(208*sw^8 + 9*(3 - 10*sw^2 + 8*
                sw^4) + 2*sw^4*(-15 + 26*sw^2)*(-15 + 12*sw^2 + 4*
                (1 - sw^2)) + 4*sw^6*(-125 + 208*sw^2 + 26*(1 - sw^2)) - 
             6*sw^2*(30 - 87*sw^2 + 60*sw^4 + 2*(1 - sw^2)*(-3 + 5*sw^2))))*
          t^2 - 2*(8 - 6*d + d^2)*(27*(3 - 10*sw^2 + 8*sw^4) + 
           208*sw^8*(3 - 20*sw^2 + 32*sw^4) + 18*sw^2*(-30 + 113*sw^2 - 
             100*sw^4 + (1 - sw^2)*(6 - 30*sw^2 + 32*sw^4)) + 
           4*sw^6*(-375 + 1876*sw^2 - 2000*sw^4 + 26*(1 - sw^2)*
              (3 - 20*sw^2 + 32*sw^4)) - 6*sw^4*(-225 + 930*sw^2 - 888*sw^4 + 
             4*(1 - sw^2)*(15 - 74*sw^2 + 80*sw^4)))*t^3)) + 
     3*(81*d^4*(2*Pi)^(2*d)*s^5*(s + 3*t) + 2^(1 + 2*d)*Pi^(2*d)*s^3*
        (s^3*(24*d^5*sw^2*(1 - sw^2)*(3 - 10*sw^2 + 16*sw^4 + 
             2*sw^2*(-5 + 8*sw^2)) - 16*(-27*(3 - 10*sw^2 + 8*sw^4) + 
             208*sw^8*(-3 - 10*sw^2 + 16*sw^4) - 2*sw^4*(80*(1 - sw^2)*
                (21 - 35*sw^2 + 4*sw^4) + 9*(75 - 130*sw^2 + 8*sw^4)) + 
             4*sw^6*(375 + 2*sw^2 - 1000*sw^4 + 20*(1 - sw^2)*(33 - 10*sw^2 + 
                 16*sw^4)) + 12*sw^2*(45 - 111*sw^2 + 60*sw^4 + 4*(1 - sw^2)*
                (21 - 85*sw^2 + 80*sw^4))) + 3*d^4*(104*sw^8 + 
             9*sw^2*(-5 + 4*sw^2) + sw^6*(-250 + 416*sw^2 - 984*(1 - sw^2)) + 
             sw^4*(225 - 570*sw^2 + 312*sw^4 - 8*(1 - sw^2)*(-155 + 
                 246*sw^2)) - sw^2*(9*(10 - 29*sw^2 + 20*sw^4) + 4*(1 - sw^2)*
                (93 - 325*sw^2 + 272*sw^4))) - 
           2*d^2*(-243*(3 - 10*sw^2 + 8*sw^4) + 208*sw^8*(-27 - 40*sw^2 + 64*
                sw^4) + 4*sw^6*(3375 - 3112*sw^2 - 4000*sw^4 + 36*(1 - sw^2)*
                (185 - 40*sw^2 + 64*sw^4)) - 2*sw^4*(27*(225 - 490*sw^2 + 
                 184*sw^4) + 8*(1 - sw^2)*(2115 - 3514*sw^2 + 320*sw^4)) + 
             18*sw^2*(270 - 731*sw^2 + 460*sw^4 + 4*(1 - sw^2)*
                (141 - 535*sw^2 + 480*sw^4))) + 
           d^3*(-135*(3 - 10*sw^2 + 8*sw^4) + 208*sw^8*(-15 - 10*sw^2 + 16*
                sw^4) - 6*sw^4*(8*(1 - sw^2)*(475 - 774*sw^2 + 40*sw^4) + 3*
                (375 - 890*sw^2 + 424*sw^4)) + 4*sw^6*(1875 - 2494*sw^2 - 
               1000*sw^4 + (1 - sw^2)*(4500 - 520*sw^2 + 832*sw^4)) + 
             12*sw^2*(225 - 633*sw^2 + 420*sw^4 + 2*(1 - sw^2)*
                (285 - 1040*sw^2 + 904*sw^4))) + 
           4*d*(-189*(3 - 10*sw^2 + 8*sw^4) + 208*sw^8*(-21 - 50*sw^2 + 80*
                sw^4) + 4*sw^6*(2625 - 1238*sw^2 - 5000*sw^4 + 12*(1 - sw^2)*
                (397 - 110*sw^2 + 176*sw^4)) - 2*sw^4*(9*(525 - 1030*sw^2 + 
                 248*sw^4) + 8*(1 - sw^2)*(1515 - 2534*sw^2 + 280*sw^4)) + 
             12*sw^2*(315 - 816*sw^2 + 480*sw^4 + (1 - sw^2)*(606 - 
                 2380*sw^2 + 2192*sw^4)))) + 
         s^2*(24*d^5*sw^2*(1 - sw^2)*(3 - 10*sw^2 + 16*sw^4 + 
             2*sw^2*(-5 + 8*sw^2)) + 3*d^4*(312*sw^8 + 
             27*sw^2*(-5 + 4*sw^2) - 2*sw^6*(375 - 624*sw^2 + 388*
                (1 - sw^2)) + sw^4*(-8*(1 - sw^2)*(-125 + 194*sw^2) + 9*
                (75 - 190*sw^2 + 104*sw^4)) - sw^2*(27*(10 - 29*sw^2 + 
                 20*sw^4) + 4*(1 - sw^2)*(75 - 295*sw^2 + 272*sw^4))) - 
           8*d^2*(-216*(3 - 10*sw^2 + 8*sw^4) + 208*sw^8*(-24 - 5*sw^2 + 8*
                sw^4) - 4*sw^6*(-3000 + 4679*sw^2 + 500*sw^4 + 4*(1 - sw^2)*
                (-180 - 55*sw^2 + 88*sw^4)) + 12*sw^4*(4*(1 - sw^2)*
                (-85 + 106*sw^2 + 20*sw^4) - 3*(300 - 745*sw^2 + 392*sw^4)) + 
             3*sw^2*(68*(1 - sw^2)*(6 - 35*sw^2 + 40*sw^4) + 3*
                (480 - 1379*sw^2 + 940*sw^4))) + 
           2*d^3*(-216*(3 - 10*sw^2 + 8*sw^4) + 208*sw^8*(-24 - 5*sw^2 + 8*
                sw^4) + 4*sw^6*(3000 - 4679*sw^2 - 500*sw^4 + 4*(1 - sw^2)*
                (348 - 65*sw^2 + 104*sw^4)) - 12*sw^4*((1 - sw^2)*
                (620 - 976*sw^2 + 80*sw^4) + 3*(300 - 745*sw^2 + 392*sw^4)) + 
             3*sw^2*(4*(1 - sw^2)*(186 - 875*sw^2 + 904*sw^4) + 3*
                (480 - 1379*sw^2 + 940*sw^4))) - 
           4*d*(783*(3 - 10*sw^2 + 8*sw^4) + 208*sw^8*(87 - 10*sw^2 + 16*
                sw^4) - 6*sw^4*(-6525 + 16710*sw^2 - 9336*sw^4 + 8*(1 - sw^2)*
                (-135 - 74*sw^2 + 360*sw^4)) - 36*sw^2*(435 - 1268*sw^2 + 880*
                sw^4 + (1 - sw^2)*(54 - 460*sw^2 + 592*sw^4)) + 
             4*sw^6*(-10875 + 18722*sw^2 - 1000*sw^4 + (1 - sw^2)*
                (-948 - 4360*sw^2 + 6976*sw^4))) + 
           16*(135*(3 - 10*sw^2 + 8*sw^4) + 208*sw^8*(15 - 10*sw^2 + 16*
                sw^4) + 4*sw^6*(-1875 + 3746*sw^2 - 1000*sw^4 + 4*(1 - sw^2)*
                (15 - 370*sw^2 + 592*sw^4)) - 36*sw^2*(75 + 32*sw^4*
                (5 + 2*(1 - sw^2)) - 8*sw^2*(28 + 5*(1 - sw^2))) - 
             6*sw^4*(-1125 + sw^2*(3030 - 688*(1 - sw^2)) + 24*sw^4*
                (-77 + 40*(1 - sw^2)))))*t + (-2 + d)*s*
          (-27*d^2*(208*sw^8 + 9*(3 - 10*sw^2 + 8*sw^4) + 
             2*sw^4*(-15 + 26*sw^2)*(-15 + 12*sw^2 + 8*(1 - sw^2)) + 
             4*sw^6*(-125 + 208*sw^2 + 52*(1 - sw^2)) - 
             6*sw^2*(30 - 87*sw^2 + 60*sw^4 + 4*(1 - sw^2)*(-3 + 5*sw^2))) + 
           3*d^3*(208*sw^8 + 9*(3 - 10*sw^2 + 8*sw^4) + 
             2*sw^4*(-15 + 26*sw^2)*(-15 + 12*sw^2 + 8*(1 - sw^2)) + 
             4*sw^6*(-125 + 208*sw^2 + 52*(1 - sw^2)) - 
             6*sw^2*(30 - 87*sw^2 + 60*sw^4 + 4*(1 - sw^2)*(-3 + 5*sw^2))) + 
           2*d*(405*(3 - 10*sw^2 + 8*sw^4) + 208*sw^8*(45 - 40*sw^2 + 64*
                sw^4) + 4*sw^6*(-5625 + 11864*sw^2 - 4000*sw^4 + 12*
                (1 - sw^2)*(211 - 280*sw^2 + 448*sw^4)) - 
             2*sw^4*(-27*(375 - 1030*sw^2 + 648*sw^4) + 8*(1 - sw^2)*
                (735 - 1762*sw^2 + 800*sw^4)) + 6*sw^2*(4*(1 - sw^2)*
                (147 - 325*sw^2 + 128*sw^4) - 3*(450 - 1357*sw^2 + 
                 980*sw^4))) - 8*(135*(3 - 10*sw^2 + 8*sw^4) + 
             208*sw^8*(15 - 40*sw^2 + 64*sw^4) + 6*sw^2*(4*(1 - sw^2)*
                (51 - 155*sw^2 + 112*sw^4) - 3*(150 - 487*sw^2 + 380*sw^4)) - 
             2*sw^4*(40*(1 - sw^2)*(51 - 166*sw^2 + 128*sw^4) - 9*
                (375 - 1190*sw^2 + 904*sw^4)) + 4*sw^6*(-1875 + 5624*sw^2 - 
               4000*sw^4 + 4*(1 - sw^2)*(219 - 680*sw^2 + 1088*sw^4))))*t^2 + 
         2*(8 - 6*d + d^2)*(27*(3 - 10*sw^2 + 8*sw^4) + 
           208*sw^8*(3 - 20*sw^2 + 32*sw^4) + 18*sw^2*(-30 + 113*sw^2 - 
             100*sw^4 + 4*(1 - sw^2)*(3 - 15*sw^2 + 16*sw^4)) + 
           4*sw^6*(-375 + 1876*sw^2 - 2000*sw^4 + 52*(1 - sw^2)*
              (3 - 20*sw^2 + 32*sw^4)) - 6*sw^4*(-225 + 930*sw^2 - 888*sw^4 + 
             8*(1 - sw^2)*(15 - 74*sw^2 + 80*sw^4)))*t^3)) - 
     mz^2*(81*d^4*(2*Pi)^(2*d)*s^4*(s + 3*t) + 2^(1 + 2*d)*Pi^(2*d)*s^2*
        (s^3*(144*d^5*sw^2*(1 - sw^2)*(3 - 10*sw^2 + 16*sw^4 + 
             2*sw^2*(-5 + 8*sw^2)) - 16*(-27*(3 - 10*sw^2 + 8*sw^4) + 
             208*sw^8*(-3 - 10*sw^2 + 16*sw^4) - 6*sw^4*(3*(75 - 130*sw^2 + 
                 8*sw^4) + 32*(1 - sw^2)*(105 - 177*sw^2 + 20*sw^4)) + 
             36*sw^2*(15 - 37*sw^2 + 20*sw^4 + 8*(1 - sw^2)*(21 - 80*sw^2 + 
                 72*sw^4)) + 4*sw^6*(375 + 2*sw^2 - 1000*sw^4 + 16*(1 - sw^2)*
                (249 - 70*sw^2 + 112*sw^4))) + 3*d^4*(104*sw^8 + 
             9*sw^2*(-5 + 4*sw^2) + sw^6*(-250 + 416*sw^2 - 6112*
                (1 - sw^2)) + sw^4*(225 - 570*sw^2 + 312*sw^4 - 64*(1 - sw^2)*
                (-120 + 191*sw^2)) - 3*sw^2*(30 - 87*sw^2 + 60*sw^4 + 16*
                (1 - sw^2)*(48 - 165*sw^2 + 136*sw^4))) + 
           d^3*(-135*(3 - 10*sw^2 + 8*sw^4) + 208*sw^8*(-15 - 10*sw^2 + 16*
                sw^4) + 4*sw^6*(1875 - 2494*sw^2 - 1000*sw^4 + 16*(1 - sw^2)*
                (1749 - 130*sw^2 + 208*sw^4)) - 6*sw^4*(160*(1 - sw^2)*
                (147 - 238*sw^2 + 8*sw^4) + 3*(375 - 890*sw^2 + 424*sw^4)) + 
             36*sw^2*(75 - 211*sw^2 + 140*sw^4 + 8*(1 - sw^2)*(147 - 
                 520*sw^2 + 440*sw^4))) + 4*d*(-189*(3 - 10*sw^2 + 8*sw^4) + 
             208*sw^8*(-21 - 50*sw^2 + 80*sw^4) - 18*sw^4*(525 - 1030*sw^2 + 
               248*sw^4 + 32*(1 - sw^2)*(255 - 426*sw^2 + 40*sw^4)) + 
             36*sw^2*(105 - 272*sw^2 + 160*sw^4 + 24*(1 - sw^2)*
                (51 - 190*sw^2 + 168*sw^4)) + 4*sw^6*(2625 - 1238*sw^2 - 5000*
                sw^4 + 16*(1 - sw^2)*(1815 - 410*sw^2 + 656*sw^4))) - 
           2*d^2*(-243*(3 - 10*sw^2 + 8*sw^4) + 208*sw^8*(-27 - 40*sw^2 + 64*
                sw^4) + 4*sw^6*(3375 - 3112*sw^2 - 4000*sw^4 + 80*(1 - sw^2)*
                (513 - 80*sw^2 + 128*sw^4)) - 6*sw^4*(640*(1 - sw^2)*
                (54 - 89*sw^2 + 6*sw^4) + 9*(225 - 490*sw^2 + 184*sw^4)) + 
             18*sw^2*(270 - 731*sw^2 + 460*sw^4 + 16*(1 - sw^2)*
                (216 - 785*sw^2 + 680*sw^4)))) + 
         s^2*(144*d^5*sw^2*(1 - sw^2)*(3 - 10*sw^2 + 16*sw^4 + 
             2*sw^2*(-5 + 8*sw^2)) + 9*d^4*(104*sw^8 + 9*sw^2*(-5 + 4*sw^2) - 
             2*sw^6*(125 - 208*sw^2 + 880*(1 - sw^2)) + 
             sw^4*(225 - 570*sw^2 + 312*sw^4 - 320*(1 - sw^2)*
                (-7 + 11*sw^2)) - sw^2*(9*(10 - 29*sw^2 + 20*sw^4) + 16*
                (1 - sw^2)*(42 - 155*sw^2 + 136*sw^4))) - 
           8*d^2*(-216*(3 - 10*sw^2 + 8*sw^4) + 208*sw^8*(-24 - 5*sw^2 + 8*
                sw^4) - 4*sw^6*(-3000 + 4679*sw^2 + 500*sw^4 + 16*(1 - sw^2)*
                (-408 - 25*sw^2 + 40*sw^4)) + 9*sw^2*(480 - 1379*sw^2 + 940*
                sw^4 + 16*(1 - sw^2)*(72 - 325*sw^2 + 328*sw^4)) + 
             12*sw^4*(8*(1 - sw^2)*(-360 + 529*sw^2 + 20*sw^4) - 3*
                (300 - 745*sw^2 + 392*sw^4))) + 
           2*d^3*(-216*(3 - 10*sw^2 + 8*sw^4) + 208*sw^8*(-24 - 5*sw^2 + 8*
                sw^4) + 4*sw^6*(3000 - 4679*sw^2 - 500*sw^4 + 16*(1 - sw^2)*
                (660 - 65*sw^2 + 104*sw^4)) - 12*sw^4*(16*(1 - sw^2)*
                (285 - 452*sw^2 + 20*sw^4) + 3*(300 - 745*sw^2 + 392*sw^4)) + 
             9*sw^2*(480 - 1379*sw^2 + 940*sw^4 + 16*(1 - sw^2)*
                (114 - 465*sw^2 + 440*sw^4))) - 
           4*d*(783*(3 - 10*sw^2 + 8*sw^4) + 208*sw^8*(87 - 10*sw^2 + 16*
                sw^4) - 6*sw^4*(-6525 + 16710*sw^2 - 9336*sw^4 + 160*
                (1 - sw^2)*(-81 + 82*sw^2 + 56*sw^4)) + 
             sw^6*(-43500 + 74888*sw^2 - 4000*sw^4 + 320*(1 - sw^2)*
                (-177 - 170*sw^2 + 272*sw^4)) - 36*sw^2*(435 - 1268*sw^2 + 
               880*sw^4 + 8*(1 - sw^2)*(81 - 410*sw^2 + 440*sw^4))) + 
           16*(135*(3 - 10*sw^2 + 8*sw^4) + 208*sw^8*(15 - 10*sw^2 + 16*
                sw^4) - 36*sw^2*(75 - 224*sw^2 + 160*sw^4 + 4*(1 - sw^2)*
                (15 - 90*sw^2 + 104*sw^4)) + 4*sw^6*(-1875 + 3746*sw^2 - 1000*
                sw^4 + 16*(1 - sw^2)*(-75 - 310*sw^2 + 496*sw^4)) - 
             6*sw^4*(16*(1 - sw^2)*(-75 - 26*sw^2 + 200*sw^4) - 3*
                (375 - 1010*sw^2 + 616*sw^4))))*t + 
         (-2 + d)*s*(-27*d^2*(208*sw^8 + 9*(3 - 10*sw^2 + 8*sw^4) + 
             2*sw^4*(-15 + 26*sw^2)*(-15 + 12*sw^2 + 32*(1 - sw^2)) + 
             sw^6*(-500 + 832*sw^2 + 832*(1 - sw^2)) - 
             6*sw^2*(30 - 87*sw^2 + 60*sw^4 + 16*(1 - sw^2)*(-3 + 5*sw^2))) + 
           3*d^3*(208*sw^8 + 9*(3 - 10*sw^2 + 8*sw^4) + 
             2*sw^4*(-15 + 26*sw^2)*(-15 + 12*sw^2 + 32*(1 - sw^2)) + 
             sw^6*(-500 + 832*sw^2 + 832*(1 - sw^2)) - 
             6*sw^2*(30 - 87*sw^2 + 60*sw^4 + 16*(1 - sw^2)*(-3 + 5*sw^2))) - 
           8*(135*(3 - 10*sw^2 + 8*sw^4) + 208*sw^8*(15 - 40*sw^2 + 64*
                sw^4) + 18*sw^2*(-150 + 487*sw^2 - 380*sw^4 + 8*(1 - sw^2)*
                (33 - 100*sw^2 + 72*sw^4)) - 6*sw^4*(16*(1 - sw^2)*
                (165 - 528*sw^2 + 400*sw^4) - 3*(375 - 1190*sw^2 + 
                 904*sw^4)) + 4*sw^6*(-1875 + 5624*sw^2 - 4000*sw^4 + 16*
                (1 - sw^2)*(213 - 640*sw^2 + 1024*sw^4))) + 
           2*d*(405*(3 - 10*sw^2 + 8*sw^4) + 208*sw^8*(45 - 40*sw^2 + 64*
                sw^4) + 18*sw^2*(-450 + 1357*sw^2 - 980*sw^4 + 16*(1 - sw^2)*
                (48 - 105*sw^2 + 40*sw^4)) - 6*sw^4*(64*(1 - sw^2)*
                (120 - 281*sw^2 + 120*sw^4) - 9*(375 - 1030*sw^2 + 
                 648*sw^4)) + 4*sw^6*(-5625 + 11864*sw^2 - 4000*sw^4 + 16*
                (1 - sw^2)*(621 - 760*sw^2 + 1216*sw^4))))*t^2 + 
         2*(8 - 6*d + d^2)*(27*(3 - 10*sw^2 + 8*sw^4) + 
           208*sw^8*(3 - 20*sw^2 + 32*sw^4) + 18*sw^2*(-30 + 113*sw^2 - 
             100*sw^4 + 16*(1 - sw^2)*(3 - 15*sw^2 + 16*sw^4)) + 
           4*sw^6*(-375 + 1876*sw^2 - 2000*sw^4 + 208*(1 - sw^2)*
              (3 - 20*sw^2 + 32*sw^4)) - 6*sw^4*(-225 + 930*sw^2 - 888*sw^4 + 
             32*(1 - sw^2)*(15 - 74*sw^2 + 80*sw^4)))*t^3))))/
   ((-4 + d)*(-2 + d)*mz^2*Pi^(3*d)*(mz^2 - s)^2*s^2*(-mz^2 + s)*sw^6*
    (1 - sw^2)^3*(s + t)), ((I/27)*2^(-3 - d)*EL^6*
    (mz^2*(s*(-93*d^3*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
         6*d^4*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) - 
         48*d*(sw^2*(-250 + 413*sw^2 - 20*sw^4) + 25*(3 - 10*sw^2 + 8*sw^4) + 
           4*sw^4*(50 - 5*sw^2 + 8*sw^4)) + 
         2*d^2*(sw^2*(-2550 + 4132*sw^2 - 80*sw^4) + 
           255*(3 - 10*sw^2 + 8*sw^4) + 8*sw^4*(255 - 10*sw^2 + 16*sw^4)) + 
         8*(129*(3 - 10*sw^2 + 8*sw^4) + 8*sw^4*(129 - 20*sw^2 + 32*sw^4) - 
           2*sw^2*(645 - 1084*sw^2 + 80*sw^4))) + 2*(8 - 6*d + d^2)*
        (9 - 30*sw^2 + 24*sw^4 + 8*sw^4*(3 - 20*sw^2 + 32*sw^4) - 
         2*sw^2*(15 - 76*sw^2 + 80*sw^4))*t) - 
     s*(s*(-93*d^3*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
         6*d^4*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
         2*d^2*(sw^2*(-2670 + 4324*sw^2 - 80*sw^4) + 
           267*(3 - 10*sw^2 + 8*sw^4) + 8*sw^4*(267 - 10*sw^2 + 16*sw^4)) + 
         8*d*(-165*(3 - 10*sw^2 + 8*sw^4) + 8*sw^4*(-165 - 5*sw^2 + 8*sw^4) - 
           2*sw^2*(-825 + 1307*sw^2 + 20*sw^4)) + 
         8*(147*(3 - 10*sw^2 + 8*sw^4) - 8*sw^4*(-147 - 40*sw^2 + 64*sw^4) + 
           2*sw^2*(-735 + 1072*sw^2 + 160*sw^4))) + 2*(-16 + 2*d + d^2)*
        (9 - 30*sw^2 + 24*sw^4 + 8*sw^4*(3 - 20*sw^2 + 32*sw^4) - 
         2*sw^2*(15 - 76*sw^2 + 80*sw^4))*t)))/((-4 + d)*Pi^d*(mz^2 - s)*
    (-mz^2 + s)*sw^4*(1 - sw^2)^2), 
  ((I/27)*2^(-8 - d)*EL^6*t*
    (-4*mz^2*(3*d^3*(9 - 30*sw^2 + 24*sw^4 + 64*sw^8 + 
         2*sw^2*(3 - 10*sw^2 + 8*sw^4)*(-10 + 3*(1 - sw^2)) + 
         16*sw^6*(-10 + 16*sw^2 + 3*(1 - sw^2)) + 
         4*sw^4*(37 - 100*sw^2 + 64*sw^4 + 3*(1 - sw^2)*(-5 + 8*sw^2))) - 
       4*(117*(3 - 10*sw^2 + 8*sw^4) - 64*sw^8*(-39 - 10*sw^2 + 16*sw^4) + 
         12*sw^2*(3 - 10*sw^2 + 8*sw^4)*(-65 + 27*(1 - sw^2)) + 
         32*sw^6*(-195 + 286*sw^2 + 40*sw^4 + 81*(1 - sw^2)) + 
         4*sw^4*(1443 - 3830*sw^2 + 2392*sw^4 + 162*(1 - sw^2)*
            (-5 + 8*sw^2))) - 4*d*(-99*(3 - 10*sw^2 + 8*sw^4) + 
         64*sw^8*(-33 - 5*sw^2 + 8*sw^4) - 6*sw^2*(3 - 10*sw^2 + 8*sw^4)*
          (-110 + 41*(1 - sw^2)) + 16*sw^6*(330 - 502*sw^2 - 40*sw^4 + 
           (1 - sw^2)*(-123 - 5*sw^2 + 8*sw^4)) - 
         4*sw^4*(1221 - 3265*sw^2 + 2060*sw^4 + (1 - sw^2)*(-615 + 971*sw^2 + 
             20*sw^4))) - 12*d^2*(192*sw^8 + 9*(3 - 10*sw^2 + 8*sw^4) + 
         20*sw^2*(-2 - sw^2)*(3 - 10*sw^2 + 8*sw^4) + 
         32*sw^6*(-15 + 24*sw^2 + 5*(1 - sw^2)) + 
         4*sw^4*(10*(1 - sw^2)*(-5 + 8*sw^2) + 3*(37 - 100*sw^2 + 
             64*sw^4)))) + s*(72*(9 - 30*sw^2 + 24*sw^4 + 64*sw^8 + 
         4*sw^2*(3 - 10*sw^2 + 8*sw^4)*(-5 + 2*(1 - sw^2)) + 
         32*sw^6*(-5 + 8*sw^2 + 2*(1 - sw^2)) + 
         4*sw^4*(37 - 100*sw^2 + 64*sw^4 + 4*(1 - sw^2)*(-5 + 8*sw^2))) - 
       12*d^2*(9 - 30*sw^2 + 24*sw^4 + 64*sw^8 + 
         4*sw^2*(3 - 10*sw^2 + 8*sw^4)*(-5 + 2*(1 - sw^2)) + 
         32*sw^6*(-5 + 8*sw^2 + 2*(1 - sw^2)) + 
         4*sw^4*(37 - 100*sw^2 + 64*sw^4 + 4*(1 - sw^2)*(-5 + 8*sw^2))) + 
       3*d^3*(9 - 30*sw^2 + 24*sw^4 + 64*sw^8 + 4*sw^2*(3 - 10*sw^2 + 8*sw^4)*
          (-5 + 2*(1 - sw^2)) + 32*sw^6*(-5 + 8*sw^2 + 2*(1 - sw^2)) + 
         4*sw^4*(37 - 100*sw^2 + 64*sw^4 + 4*(1 - sw^2)*(-5 + 8*sw^2))) + 
       4*d*(-9*(3 - 10*sw^2 + 8*sw^4) + 64*sw^8*(-3 - 5*sw^2 + 8*sw^4) - 
         12*sw^2*(3 - 10*sw^2 + 8*sw^4)*(-5 + 2*(1 - sw^2)) + 
         32*sw^6*(15 - 11*sw^2 - 20*sw^4 + 2*(1 - sw^2)*(-3 - 5*sw^2 + 
             8*sw^4)) - 4*sw^4*(111 - 265*sw^2 + 140*sw^4 + 
           (1 - sw^2)*(-60 + 44*sw^2 + 80*sw^4)))) + 
     8*(-18*d*(9 - 30*sw^2 + 24*sw^4 + 64*sw^8 + 
         4*sw^2*(3 - 10*sw^2 + 8*sw^4)*(-5 + 2*(1 - sw^2)) + 
         32*sw^6*(-5 + 8*sw^2 + 2*(1 - sw^2)) + 
         4*sw^4*(37 - 100*sw^2 + 64*sw^4 + 4*(1 - sw^2)*(-5 + 8*sw^2))) + 
       3*d^2*(9 - 30*sw^2 + 24*sw^4 + 64*sw^8 + 4*sw^2*(3 - 10*sw^2 + 8*sw^4)*
          (-5 + 2*(1 - sw^2)) + 32*sw^6*(-5 + 8*sw^2 + 2*(1 - sw^2)) + 
         4*sw^4*(37 - 100*sw^2 + 64*sw^4 + 4*(1 - sw^2)*(-5 + 8*sw^2))) + 
       2*(45*(3 - 10*sw^2 + 8*sw^4) + 64*sw^8*(15 - 10*sw^2 + 16*sw^4) + 
         60*sw^2*(3 - 10*sw^2 + 8*sw^4)*(-5 + 2*(1 - sw^2)) + 
         32*sw^6*(-75 + 146*sw^2 - 40*sw^4 + (1 - sw^2)*(30 - 20*sw^2 + 
             32*sw^4)) - 4*sw^4*(-555 + 1570*sw^2 - 1064*sw^4 + 
           4*(1 - sw^2)*(75 - 146*sw^2 + 40*sw^4))))*t))/
   (Pi^d*(mz^2 - s)*sw^6*(1 - sw^2)^3), 
  ((I/27)*2^(-5 - 2*d)*EL^6*t*(-9*d^3*(2*Pi)^d*s^2 - 
     mz^4*(9*d^3*(2*Pi)^d + 2^(1 + d)*Pi^d*
        (3*d^3*(4*sw^4 + sw^2*(-5 + 4*sw^2) + sw^2*(-5 + 8*sw^2)) - 
         12*d^2*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) - 
         6*d*(-9 + 30*sw^2 - 24*sw^4 + sw^2*(30 - 22*sw^2 - 40*sw^4) + 
           8*sw^4*(-3 - 5*sw^2 + 8*sw^4)) + 4*(9 - 30*sw^2 + 24*sw^4 + 
           8*sw^4*(3 - 20*sw^2 + 32*sw^4) - 2*sw^2*(15 - 76*sw^2 + 
             80*sw^4)))) + 2^(1 + d)*Pi^d*
      (-(s^2*(3*d^3*(4*sw^4 + sw^2*(-5 + 4*sw^2) + sw^2*(-5 + 8*sw^2)) - 
          12*d^2*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) - 
          6*d*(-9 + 30*sw^2 - 24*sw^4 + sw^2*(30 - 22*sw^2 - 40*sw^4) + 
            8*sw^4*(-3 - 5*sw^2 + 8*sw^4)) + 4*(9 - 30*sw^2 + 24*sw^4 + 
            8*sw^4*(3 - 20*sw^2 + 32*sw^4) - 2*sw^2*(15 - 76*sw^2 + 
              80*sw^4)))) + 4*s*(3*d*(3 - 10*sw^2 + 16*sw^4 + 
           2*sw^2*(-5 + 8*sw^2)) + 2*(-9 + 30*sw^2 - 24*sw^4 + 
           sw^2*(30 + 4*sw^2 - 80*sw^4) + 8*sw^4*(-3 - 10*sw^2 + 16*sw^4)))*
        t + 8*(9 - 30*sw^2 + 24*sw^4 + 8*sw^4*(3 - 20*sw^2 + 32*sw^4) - 
         2*sw^2*(15 - 76*sw^2 + 80*sw^4))*t^2) + 
     2*mz^2*(9*d^3*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
        (s*(3*d^3*(4*sw^4 + sw^2*(-5 + 4*sw^2) + sw^2*(-5 + 8*sw^2)) - 
           9*d^2*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
           8*(9 - 30*sw^2 + 24*sw^4 + sw^2*(-30 + 74*sw^2 - 40*sw^4) + 
             8*sw^4*(3 - 5*sw^2 + 8*sw^4)) + d*(6*(3 - 10*sw^2 + 8*sw^4) - 
             16*sw^4*(-3 - 5*sw^2 + 8*sw^4) + sw^2*(-60 + 44*sw^2 + 80*
                sw^4))) + 2*(30*(3 - 10*sw^2 + 8*sw^4) + 
           16*sw^4*(15 - 10*sw^2 + 16*sw^4) - 4*sw^2*(75 - 146*sw^2 + 
             40*sw^4) - 18*d*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
           3*d^2*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)))*t))))/
   (Pi^(2*d)*(mz^2 - s)*sw^4*(1 - sw^2)^2), 0, 
  ((-I/81)*EL^6*((9*2^(3 + d)*Pi^d*sw^2*(1 - sw^2)*
       (s^2*(3*d^2*(1 - 2*sw^2 + 4*sw^4 + sw^2*(-4 + 8*sw^2)) + 
          4*d*(-3 + 4*sw^2 + 4*sw^4 - 4*sw^2*(-3 + 4*sw^2 + 4*sw^4) + 
            4*sw^4*(-3 - 5*sw^2 + 8*sw^4)) - 4*(-3 + 2*sw^2 + 8*sw^4 - 
            4*sw^2*(-3 + 2*sw^2 + 8*sw^4) + 4*sw^4*(-3 - 10*sw^2 + 
              16*sw^4))) + 2*s*(-15*d*(1 - 2*sw^2 + 4*sw^4 + 
            sw^2*(-4 + 8*sw^2)) + 3*d^2*(1 - 2*sw^2 + 4*sw^4 + 
            sw^2*(-4 + 8*sw^2)) + 8*(3 - 8*sw^2 + 4*sw^4 - 
            4*sw^2*(3 - 8*sw^2 + 4*sw^4) + 4*sw^4*(3 - 5*sw^2 + 8*sw^4)))*t + 
        4*(-3 + 8*sw^2)*(-1 + 2*sw^2 + sw^2*(4 - 8*sw^2) + 
          4*sw^4*(-1 + 4*sw^2))*t^2))/(mz^2*s*(-mz^2 + s)) - 
     (9*(2*Pi)^d*(s^2*(3*d^2*(3 - 10*sw^2 + 8*sw^4 + 32*sw^8 + 
            8*sw^6*(-9 + 16*sw^2) + sw^2*(-22 + 68*sw^2 - 48*sw^4) + 
            12*sw^4*(5 - 14*sw^2 + 8*sw^4)) + 4*(9 - 30*sw^2 + 24*sw^4 + 
            sw^8*(96 + 320*sw^2 - 512*sw^4) + 12*sw^4*(15 - 34*sw^2 + 
              8*sw^4) + 24*sw^6*(-9 + 2*sw^2 + 24*sw^4) - 
            2*sw^2*(33 - 94*sw^2 + 56*sw^4)) + 4*d*(-9 + 30*sw^2 - 24*sw^4 - 
            72*sw^6*(-3 + 3*sw^2 + 4*sw^4) + 32*sw^8*(-3 - 5*sw^2 + 8*sw^4) - 
            12*sw^4*(15 - 38*sw^2 + 16*sw^4) + 2*sw^2*(33 - 98*sw^2 + 
              64*sw^4))) + 2*s*(-15*d*(3 - 10*sw^2 + 8*sw^4 + 32*sw^8 + 
            8*sw^6*(-9 + 16*sw^2) + sw^2*(-22 + 68*sw^2 - 48*sw^4) + 
            12*sw^4*(5 - 14*sw^2 + 8*sw^4)) + 3*d^2*(3 - 10*sw^2 + 8*sw^4 + 
            32*sw^8 + 8*sw^6*(-9 + 16*sw^2) + sw^2*(-22 + 68*sw^2 - 
              48*sw^4) + 12*sw^4*(5 - 14*sw^2 + 8*sw^4)) + 
          8*(9 - 30*sw^2 + 24*sw^4 + 32*sw^8*(3 - 5*sw^2 + 8*sw^4) - 
            24*sw^6*(9 - 23*sw^2 + 12*sw^4) + 12*sw^4*(15 - 46*sw^2 + 
              32*sw^4) - 2*sw^2*(33 - 106*sw^2 + 80*sw^4)))*t + 
        4*(9 - 30*sw^2 + 24*sw^4 + sw^2*(-66 + 236*sw^2 - 208*sw^4) + 
          32*sw^8*(3 - 20*sw^2 + 32*sw^4) - 24*sw^6*(9 - 44*sw^2 + 48*sw^4) + 
          12*sw^4*(15 - 58*sw^2 + 56*sw^4))*t^2))/(mz^2*(mz^2 - s)*
       (-mz^2 + s)) - 
     (9*(2*Pi)^d*(s^2*(3*d^2*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
          4*d*(-9 + 30*sw^2 - 24*sw^4 + sw^2*(30 - 22*sw^2 - 40*sw^4) + 
            8*sw^4*(-3 - 5*sw^2 + 8*sw^4)) - 4*(-9 + 30*sw^2 - 24*sw^4 + 
            sw^2*(30 + 4*sw^2 - 80*sw^4) + 8*sw^4*(-3 - 10*sw^2 + 
              16*sw^4))) + 2*s*(-15*d*(3 - 10*sw^2 + 16*sw^4 + 
            2*sw^2*(-5 + 8*sw^2)) + 3*d^2*(3 - 10*sw^2 + 16*sw^4 + 
            2*sw^2*(-5 + 8*sw^2)) + 8*(9 - 30*sw^2 + 24*sw^4 + 
            sw^2*(-30 + 74*sw^2 - 40*sw^4) + 8*sw^4*(3 - 5*sw^2 + 8*sw^4)))*
         t + 4*(9 - 30*sw^2 + 24*sw^4 + 8*sw^4*(3 - 20*sw^2 + 32*sw^4) - 
          2*sw^2*(15 - 76*sw^2 + 80*sw^4))*t^2))/((mz^2 - s)^2*(-mz^2 + s)) - 
     ((2*Pi)^d*(s^2*(3*d^2*(128*sw^8 - 18*sw^2*(3 - 4*sw^2)^2 + 
            32*sw^6*(-11 + 16*sw^2) + 9*(3 - 10*sw^2 + 8*sw^4) + 
            24*sw^4*(15 - 32*sw^2 + 16*sw^4)) + 
          4*d*(-72*sw^4*(15 - 23*sw^2 + 4*sw^4) + 162*sw^2*(3 - 7*sw^2 + 
              4*sw^4) - 27*(3 - 10*sw^2 + 8*sw^4) + 128*sw^8*
             (-3 - 5*sw^2 + 8*sw^4) - 32*sw^6*(-33 + 17*sw^2 + 44*sw^4)) - 
          4*(54*sw^2*(9 - 18*sw^2 + 8*sw^4) - 27*(3 - 10*sw^2 + 8*sw^4) + 
            72*sw^4*(-15 + 14*sw^2 + 8*sw^4) + 128*sw^8*(-3 - 10*sw^2 + 
              16*sw^4) - 32*sw^6*(-33 - 14*sw^2 + 88*sw^4))) + 
        2*s*(-15*d*(128*sw^8 - 18*sw^2*(3 - 4*sw^2)^2 + 
            32*sw^6*(-11 + 16*sw^2) + 9*(3 - 10*sw^2 + 8*sw^4) + 
            24*sw^4*(15 - 32*sw^2 + 16*sw^4)) + 
          3*d^2*(128*sw^8 - 18*sw^2*(3 - 4*sw^2)^2 + 
            32*sw^6*(-11 + 16*sw^2) + 9*(3 - 10*sw^2 + 8*sw^4) + 
            24*sw^4*(15 - 32*sw^2 + 16*sw^4)) + 
          8*(27*(3 - 10*sw^2 + 8*sw^4) + 128*sw^8*(3 - 5*sw^2 + 8*sw^4) - 
            54*sw^2*(9 - 27*sw^2 + 20*sw^4) + 72*sw^4*(15 - 41*sw^2 + 
              28*sw^4) - 32*sw^6*(33 - 79*sw^2 + 44*sw^4)))*t + 
        4*(27*(3 - 10*sw^2 + 8*sw^4) - 54*sw^2*(9 - 36*sw^2 + 32*sw^4) + 
          128*sw^8*(3 - 20*sw^2 + 32*sw^4) + 72*sw^4*(15 - 68*sw^2 + 
            64*sw^4) - 32*sw^6*(33 - 172*sw^2 + 176*sw^4))*t^2))/
      (mz^2*(mz^2 - s)*(-mz^2 + s)) + 
     (8*sw^2*(1 - sw^2)*(27*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (2*s^2*(sw^4*(48 + 160*sw^2 - 256*sw^4) + 9*(3 + 2*sw^2 - 8*sw^4) + 
            24*sw^2*(-3 - 2*sw^2 + 8*sw^4) + 3*d^2*(-3*sw^2 + 4*sw^4 + 
              sw^2*(-6 + 8*sw^2)) + d*(9*(-3 + sw^2 + 4*sw^4) - 
              24*sw^2*(-3 + sw^2 + 4*sw^4) + 16*sw^4*(-3 - 5*sw^2 + 
                8*sw^4))) + s*(-15*d*(9 - 12*sw^2 + 16*sw^4 + 
              8*sw^2*(-3 + 4*sw^2)) + 3*d^2*(9 - 12*sw^2 + 16*sw^4 + 
              8*sw^2*(-3 + 4*sw^2)) + 8*(9*(3 - 7*sw^2 + 4*sw^4) - 
              24*sw^2*(3 - 7*sw^2 + 4*sw^4) + 16*sw^4*(3 - 5*sw^2 + 8*sw^4)))*
           t + 2*(-1 + 4*sw^2)*(sw^2*(72 - 96*sw^2) + 9*(-3 + 4*sw^2) + 
            16*sw^4*(-3 + 8*sw^2))*t^2)))/(mz^2*s*(-mz^2 + s)) + 
     (6*sw^2*(1 - sw^2)*(-1 + GaugeXi[A])*
       (2^(1 + d)*d*Pi^d*s*(9 - 30*sw^2 + 24*sw^4 + 
          8*sw^4*(3 - 20*sw^2 + 32*sw^4) - 2*sw^2*(15 - 76*sw^2 + 80*sw^4)) - 
        2^(1 + d)*Pi^d*(3*d*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
          2*(-9 + 30*sw^2 - 24*sw^4 + sw^2*(30 + 4*sw^2 - 80*sw^4) + 
            8*sw^4*(-3 - 10*sw^2 + 16*sw^4)))*t - 2^(1 + d)*(-2 + d)*Pi^d*
         (3*d*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
          2*(-9 + 30*sw^2 - 24*sw^4 + sw^2*(30 + 4*sw^2 - 80*sw^4) + 
            8*sw^4*(-3 - 10*sw^2 + 16*sw^4)))*t + 
        ((2*Pi)^d*(d*s + 2*t)*(s*(3*d*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*
                (-5 + 8*sw^2)) - 4*(9 - 30*sw^2 + 24*sw^4 + sw^2*
                (-30 + 74*sw^2 - 40*sw^4) + 8*sw^4*(3 - 5*sw^2 + 8*sw^4))) - 
           2*(9 - 30*sw^2 + 24*sw^4 + 8*sw^4*(3 - 20*sw^2 + 32*sw^4) - 
             2*sw^2*(15 - 76*sw^2 + 80*sw^4))*t))/s + 
        2^(1 + d)*Pi^d*(s*(-3*d*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 
                8*sw^2)) + 2*(9 - 30*sw^2 + 24*sw^4 + sw^4*(24 + 80*sw^2 - 
                128*sw^4) + sw^2*(-30 - 4*sw^2 + 80*sw^4))) + 
          2*(9 - 30*sw^2 + 24*sw^4 + 8*sw^4*(3 - 20*sw^2 + 32*sw^4) - 
            2*sw^2*(15 - 76*sw^2 + 80*sw^4))*t) + 
        (2^(1 + d)*(-2 + d)*Pi^d*(s*(3*d*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*
                (-5 + 8*sw^2)) + 2*(-9 + 30*sw^2 - 24*sw^4 + sw^2*
                (30 + 4*sw^2 - 80*sw^4) + 8*sw^4*(-3 - 10*sw^2 + 16*sw^4))) - 
           2*(9 - 30*sw^2 + 24*sw^4 + 8*sw^4*(3 - 20*sw^2 + 32*sw^4) - 
             2*sw^2*(15 - 76*sw^2 + 80*sw^4))*t)*(s - mz^2*GaugeXi[Z]))/
         (-2*s + 2*mz^2*GaugeXi[Z]) + 
        (2*(-2 + d)*(s*(27*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
              (s*(-9 + 30*sw^2 - 24*sw^4 + sw^2*(30 + 4*sw^2 - 80*sw^4) + 
                 8*sw^4*(-3 - 10*sw^2 + 16*sw^4) + 3*d*(-3 - 5*sw^2 + 
                   8*sw^4 + sw^2*(-5 + 8*sw^2))) + (-9 + 30*sw^2 - 24*sw^4 - 
                 8*sw^4*(3 - 20*sw^2 + 32*sw^4) + 2*sw^2*(15 - 76*sw^2 + 
                   80*sw^4))*t)) + mz^2*(-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
              (s*(-4*sw^4*(-6 + 3*d - 20*sw^2 + 32*sw^4) + 
                 3*(3 + 5*(-2 + d)*sw^2 - 4*(-2 + d)*sw^4) + 
                 sw^2*(-30 - 4*sw^2 + 80*sw^4 - 3*d*(-5 + 8*sw^2))) + 
               (9 - 30*sw^2 + 24*sw^4 + 8*sw^4*(3 - 20*sw^2 + 32*sw^4) - 
                 2*sw^2*(15 - 76*sw^2 + 80*sw^4))*t))*GaugeXi[Z]))/
         (-2*s + 2*mz^2*GaugeXi[Z])))/(mz^2*(mz^2 - s)) + 
     (6*sw^2*(1 - sw^2)*(-1 + GaugeXi[A])*
       (2^(1 + d)*d*Pi^d*s*(9 - 30*sw^2 + 24*sw^4 + 
          8*sw^4*(3 - 20*sw^2 + 32*sw^4) - 2*sw^2*(15 - 76*sw^2 + 80*sw^4)) - 
        2^(1 + d)*Pi^d*(3*d*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
          2*(-9 + 30*sw^2 - 24*sw^4 + sw^2*(30 + 4*sw^2 - 80*sw^4) + 
            8*sw^4*(-3 - 10*sw^2 + 16*sw^4)))*t - 
        2*(-2 + d)*(9*d*(2*Pi)^d + 2^(1 + d)*Pi^d*
           (4*sw^4*(-6 + 3*d - 20*sw^2 + 32*sw^4) + 3*(-3 - 5*(-2 + d)*sw^2 + 
              4*(-2 + d)*sw^4) + sw^2*(30 + 4*sw^2 - 80*sw^4 + 
              3*d*(-5 + 8*sw^2))))*t + ((2*Pi)^d*(d*s + 2*t)*
          (s*(3*d*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) - 
             4*(9 - 30*sw^2 + 24*sw^4 + sw^2*(-30 + 74*sw^2 - 40*sw^4) + 8*
                sw^4*(3 - 5*sw^2 + 8*sw^4))) - 2*(9 - 30*sw^2 + 24*sw^4 + 
             8*sw^4*(3 - 20*sw^2 + 32*sw^4) - 2*sw^2*(15 - 76*sw^2 + 80*
                sw^4))*t))/s + 2^(1 + d)*Pi^d*
         (s*(-3*d*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
            2*(9 - 30*sw^2 + 24*sw^4 + sw^4*(24 + 80*sw^2 - 128*sw^4) + 
              sw^2*(-30 - 4*sw^2 + 80*sw^4))) + 2*(9 - 30*sw^2 + 24*sw^4 + 
            8*sw^4*(3 - 20*sw^2 + 32*sw^4) - 2*sw^2*(15 - 76*sw^2 + 80*sw^4))*
           t) + (2^(1 + d)*(-2 + d)*Pi^d*
          (s*(3*d*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
             2*(-9 + 30*sw^2 - 24*sw^4 + sw^2*(30 + 4*sw^2 - 80*sw^4) + 8*
                sw^4*(-3 - 10*sw^2 + 16*sw^4))) - 2*(9 - 30*sw^2 + 24*sw^4 + 
             8*sw^4*(3 - 20*sw^2 + 32*sw^4) - 2*sw^2*(15 - 76*sw^2 + 80*
                sw^4))*t)*(s - mz^2*GaugeXi[Z]))/(-2*s + 2*mz^2*GaugeXi[Z]) + 
        (2*(-2 + d)*(s*(27*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
              (s*(-9 + 30*sw^2 - 24*sw^4 + sw^2*(30 + 4*sw^2 - 80*sw^4) + 
                 8*sw^4*(-3 - 10*sw^2 + 16*sw^4) + 3*d*(-3 - 5*sw^2 + 
                   8*sw^4 + sw^2*(-5 + 8*sw^2))) + (-9 + 30*sw^2 - 24*sw^4 - 
                 8*sw^4*(3 - 20*sw^2 + 32*sw^4) + 2*sw^2*(15 - 76*sw^2 + 
                   80*sw^4))*t)) + mz^2*(-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
              (s*(-4*sw^4*(-6 + 3*d - 20*sw^2 + 32*sw^4) + 
                 3*(3 + 5*(-2 + d)*sw^2 - 4*(-2 + d)*sw^4) + 
                 sw^2*(-30 - 4*sw^2 + 80*sw^4 - 3*d*(-5 + 8*sw^2))) + 
               (9 - 30*sw^2 + 24*sw^4 + 8*sw^4*(3 - 20*sw^2 + 32*sw^4) - 
                 2*sw^2*(15 - 76*sw^2 + 80*sw^4))*t))*GaugeXi[Z]))/
         (-2*s + 2*mz^2*GaugeXi[Z])))/(mz^2*(mz^2 - s)) - 
     (6*sw^2*(1 - sw^2)*(-1 + GaugeXi[A])*(-9*d*(2*Pi)^d*s + 
        d*(2*Pi)^d*s*(9 - 30*sw^2 + 24*sw^4 + 8*sw^4*(3 - 20*sw^2 + 
            32*sw^4) - 2*sw^2*(15 - 76*sw^2 + 80*sw^4)) + 
        d*s*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*(3*sw^2*(-5 + 4*sw^2) + 
            sw^2*(-15 + 76*sw^2 - 80*sw^4) + 4*sw^4*(3 - 20*sw^2 + 
              32*sw^4))) - 2^(1 + d)*Pi^d*
         (3*d*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) - 
          4*(9 - 30*sw^2 + 24*sw^4 + sw^2*(-30 + 74*sw^2 - 40*sw^4) + 
            8*sw^4*(3 - 5*sw^2 + 8*sw^4)))*(s + t) - 2^(1 + d)*(-2 + d)*Pi^d*
         (3*d*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) - 
          4*(9 - 30*sw^2 + 24*sw^4 + sw^2*(-30 + 74*sw^2 - 40*sw^4) + 
            8*sw^4*(3 - 5*sw^2 + 8*sw^4)))*(s + t) + 
        (2*Pi)^d*(3*d*s*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) - 
          6*s*(9 - 30*sw^2 + 24*sw^4 - 10*sw^2*(3 - 10*sw^2 + 8*sw^4) + 
            8*sw^4*(3 - 10*sw^2 + 16*sw^4)) - 2*(9 - 30*sw^2 + 24*sw^4 + 
            8*sw^4*(3 - 20*sw^2 + 32*sw^4) - 2*sw^2*(15 - 76*sw^2 + 80*sw^4))*
           t) + ((2*Pi)^d*((-2 + d)*s - 2*t)*
          (s*(-3*d*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
             4*(9 - 30*sw^2 + 24*sw^4 + sw^2*(-30 + 74*sw^2 - 40*sw^4) + 8*
                sw^4*(3 - 5*sw^2 + 8*sw^4))) + 2*(9 - 30*sw^2 + 24*sw^4 + 
             8*sw^4*(3 - 20*sw^2 + 32*sw^4) - 2*sw^2*(15 - 76*sw^2 + 80*
                sw^4))*t))/s + 2^(1 + d)*Pi^d*
         (3*s*(-9 + 30*sw^2 - 24*sw^4 + 10*sw^2*(3 - 10*sw^2 + 8*sw^4) - 
            8*sw^4*(3 - 10*sw^2 + 16*sw^4) + d*(3 - 5*sw^2 + 8*sw^4 + 
              sw^2*(-5 + 8*sw^2))) + (-9 + 30*sw^2 - 24*sw^4 - 
            8*sw^4*(3 - 20*sw^2 + 32*sw^4) + 2*sw^2*(15 - 76*sw^2 + 80*sw^4))*
           t) - (2^(1 + d)*(-2 + d)*Pi^d*
          (3*s*(d*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) - 
             2*(9 - 30*sw^2 + 24*sw^4 - 10*sw^2*(3 - 10*sw^2 + 8*sw^4) + 8*
                sw^4*(3 - 10*sw^2 + 16*sw^4))) - 2*(9 - 30*sw^2 + 24*sw^4 + 
             8*sw^4*(3 - 20*sw^2 + 32*sw^4) - 2*sw^2*(15 - 76*sw^2 + 80*
                sw^4))*t)*(s - mz^2*GaugeXi[Z]))/(-2*s + 2*mz^2*GaugeXi[Z]) - 
        (2*(-2 + d)*(s*(9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
              (3*s*(-9 - 5*(-6 + d)*sw^2 + 4*(-6 + d)*sw^4 + 4*sw^4*
                  (-6 + d + 20*sw^2 - 32*sw^4) + sw^2*(30 - 5*d - 100*sw^2 + 
                   8*d*sw^2 + 80*sw^4)) + (-9 + 30*sw^2 - 24*sw^4 - 
                 8*sw^4*(3 - 20*sw^2 + 32*sw^4) + 2*sw^2*(15 - 76*sw^2 + 
                   80*sw^4))*t)) + mz^2*(9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
              (-3*s*(-9 + 30*sw^2 - 24*sw^4 + 10*sw^2*(3 - 10*sw^2 + 
                   8*sw^4) - 8*sw^4*(3 - 10*sw^2 + 16*sw^4) + 
                 d*(3 - 5*sw^2 + 8*sw^4 + sw^2*(-5 + 8*sw^2))) + 
               (9 - 30*sw^2 + 24*sw^4 + 8*sw^4*(3 - 20*sw^2 + 32*sw^4) - 
                 2*sw^2*(15 - 76*sw^2 + 80*sw^4))*t))*GaugeXi[Z]))/
         (-2*s + 2*mz^2*GaugeXi[Z])))/(mz^2*(mz^2 - s)) - 
     (6*sw^2*(1 - sw^2)*(-1 + GaugeXi[A])*(-9*d*(2*Pi)^d*s + 
        d*(2*Pi)^d*s*(9 - 30*sw^2 + 24*sw^4 + 8*sw^4*(3 - 20*sw^2 + 
            32*sw^4) - 2*sw^2*(15 - 76*sw^2 + 80*sw^4)) + 
        d*s*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*(3*sw^2*(-5 + 4*sw^2) + 
            sw^2*(-15 + 76*sw^2 - 80*sw^4) + 4*sw^4*(3 - 20*sw^2 + 
              32*sw^4))) - 2^(1 + d)*Pi^d*
         (3*d*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) - 
          4*(9 - 30*sw^2 + 24*sw^4 + sw^2*(-30 + 74*sw^2 - 40*sw^4) + 
            8*sw^4*(3 - 5*sw^2 + 8*sw^4)))*(s + t) - 2^(1 + d)*(-2 + d)*Pi^d*
         (3*d*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) - 
          4*(9 - 30*sw^2 + 24*sw^4 + sw^2*(-30 + 74*sw^2 - 40*sw^4) + 
            8*sw^4*(3 - 5*sw^2 + 8*sw^4)))*(s + t) + 
        (2*Pi)^d*(3*s*(d*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) - 
            2*(9 - 30*sw^2 + 24*sw^4 - 10*sw^2*(3 - 10*sw^2 + 8*sw^4) + 
              8*sw^4*(3 - 10*sw^2 + 16*sw^4))) - 2*(9 - 30*sw^2 + 24*sw^4 + 
            8*sw^4*(3 - 20*sw^2 + 32*sw^4) - 2*sw^2*(15 - 76*sw^2 + 80*sw^4))*
           t) + ((2*Pi)^d*((-2 + d)*s - 2*t)*
          (s*(-3*d*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
             4*(9 - 30*sw^2 + 24*sw^4 + sw^2*(-30 + 74*sw^2 - 40*sw^4) + 8*
                sw^4*(3 - 5*sw^2 + 8*sw^4))) + 2*(9 - 30*sw^2 + 24*sw^4 + 
             8*sw^4*(3 - 20*sw^2 + 32*sw^4) - 2*sw^2*(15 - 76*sw^2 + 80*
                sw^4))*t))/s + 2^(1 + d)*Pi^d*
         (3*s*(-9 + 30*sw^2 - 24*sw^4 + 10*sw^2*(3 - 10*sw^2 + 8*sw^4) - 
            8*sw^4*(3 - 10*sw^2 + 16*sw^4) + d*(3 - 5*sw^2 + 8*sw^4 + 
              sw^2*(-5 + 8*sw^2))) + (-9 + 30*sw^2 - 24*sw^4 - 
            8*sw^4*(3 - 20*sw^2 + 32*sw^4) + 2*sw^2*(15 - 76*sw^2 + 80*sw^4))*
           t) - (2^(1 + d)*(-2 + d)*Pi^d*
          (3*s*(d*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) - 
             2*(9 - 30*sw^2 + 24*sw^4 - 10*sw^2*(3 - 10*sw^2 + 8*sw^4) + 8*
                sw^4*(3 - 10*sw^2 + 16*sw^4))) - 2*(9 - 30*sw^2 + 24*sw^4 + 
             8*sw^4*(3 - 20*sw^2 + 32*sw^4) - 2*sw^2*(15 - 76*sw^2 + 80*
                sw^4))*t)*(s - mz^2*GaugeXi[Z]))/(-2*s + 2*mz^2*GaugeXi[Z]) - 
        (2*(-2 + d)*(s*(9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
              (3*s*(-9 - 5*(-6 + d)*sw^2 + 4*(-6 + d)*sw^4 + 4*sw^4*
                  (-6 + d + 20*sw^2 - 32*sw^4) + sw^2*(30 - 5*d - 100*sw^2 + 
                   8*d*sw^2 + 80*sw^4)) + (-9 + 30*sw^2 - 24*sw^4 - 
                 8*sw^4*(3 - 20*sw^2 + 32*sw^4) + 2*sw^2*(15 - 76*sw^2 + 
                   80*sw^4))*t)) + mz^2*(9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
              (-3*s*(-9 + 30*sw^2 - 24*sw^4 + 10*sw^2*(3 - 10*sw^2 + 
                   8*sw^4) - 8*sw^4*(3 - 10*sw^2 + 16*sw^4) + 
                 d*(3 - 5*sw^2 + 8*sw^4 + sw^2*(-5 + 8*sw^2))) + 
               (9 - 30*sw^2 + 24*sw^4 + 8*sw^4*(3 - 20*sw^2 + 32*sw^4) - 
                 2*sw^2*(15 - 76*sw^2 + 80*sw^4))*t))*GaugeXi[Z]))/
         (-2*s + 2*mz^2*GaugeXi[Z])))/(mz^2*(mz^2 - s))))/
   (2^(2*(4 + d))*Pi^(2*d)*sw^6*(1 - sw^2)^3), 0, 0, 0, 0, 0, 
  ((-I/27)*2^(-7 - d)*(-2 + d)*EL^6*
    (s*(3*d*(9 - 30*sw^2 + 24*sw^4 + 64*sw^8 + 32*sw^6*(-5 + 8*sw^2) - 
         20*sw^2*(3 - 10*sw^2 + 8*sw^4) + 4*sw^4*(37 - 100*sw^2 + 64*sw^4)) + 
       2*(-9*(3 - 10*sw^2 + 8*sw^4) + 60*sw^2*(3 - 10*sw^2 + 8*sw^4) + 
         64*sw^8*(-3 - 10*sw^2 + 16*sw^4) - 32*sw^6*(-15 - 2*sw^2 + 
           40*sw^4) - 4*sw^4*(111 - 230*sw^2 + 88*sw^4))) + 
     2*(9*(3 - 10*sw^2 + 8*sw^4) - 60*sw^2*(3 - 10*sw^2 + 8*sw^4) + 
       64*sw^8*(3 - 20*sw^2 + 32*sw^4) - 32*sw^6*(15 - 76*sw^2 + 80*sw^4) + 
       4*sw^4*(111 - 440*sw^2 + 400*sw^4))*t))/(Pi^d*(mz^2 - s)*sw^6*
    (1 - sw^2)^3), ((I/27)*2^(-7 - d)*EL^6*s*
    (-6*(-60 + 50*d - 13*d^2 + d^3)*mz^2*(9 - 30*sw^2 + 24*sw^4 + 64*sw^8 + 
       32*sw^6*(-5 + 8*sw^2) - 20*sw^2*(3 - 10*sw^2 + 8*sw^4) + 
       4*sw^4*(37 - 100*sw^2 + 64*sw^4)) + 
     s*(162*d*(9 - 30*sw^2 + 24*sw^4 + 64*sw^8 + 32*sw^6*(-5 + 8*sw^2) - 
         20*sw^2*(3 - 10*sw^2 + 8*sw^4) + 4*sw^4*(37 - 100*sw^2 + 64*sw^4)) - 
       39*d^2*(9 - 30*sw^2 + 24*sw^4 + 64*sw^8 + 32*sw^6*(-5 + 8*sw^2) - 
         20*sw^2*(3 - 10*sw^2 + 8*sw^4) + 4*sw^4*(37 - 100*sw^2 + 64*sw^4)) + 
       3*d^3*(9 - 30*sw^2 + 24*sw^4 + 64*sw^8 + 32*sw^6*(-5 + 8*sw^2) - 
         20*sw^2*(3 - 10*sw^2 + 8*sw^4) + 4*sw^4*(37 - 100*sw^2 + 64*sw^4)) + 
       4*(-153*(3 - 10*sw^2 + 8*sw^4) + 1020*sw^2*(3 - 10*sw^2 + 8*sw^4) + 
         64*sw^8*(-51 - 20*sw^2 + 32*sw^4) - 32*sw^6*(-255 + 356*sw^2 + 
           80*sw^4) - 4*sw^4*(1887 - 4960*sw^2 + 3056*sw^4))) + 
     8*(9*(3 - 10*sw^2 + 8*sw^4) - 60*sw^2*(3 - 10*sw^2 + 8*sw^4) + 
       64*sw^8*(3 - 20*sw^2 + 32*sw^4) - 32*sw^6*(15 - 76*sw^2 + 80*sw^4) + 
       4*sw^4*(111 - 440*sw^2 + 400*sw^4))*t))/(Pi^d*(mz^2 - s)*sw^6*
    (1 - sw^2)^3), ((I/27)*2^(-9 - d)*EL^6*
    (4*mz^2*t*(s*(-18*d^2*(9 - 30*sw^2 + 24*sw^4 + 64*sw^8 + 
           32*sw^6*(-5 + 8*sw^2) - 20*sw^2*(3 - 10*sw^2 + 8*sw^4) + 
           4*sw^4*(37 - 100*sw^2 + 64*sw^4)) + 3*d^3*(9 - 30*sw^2 + 24*sw^4 + 
           64*sw^8 + 32*sw^6*(-5 + 8*sw^2) - 20*sw^2*(3 - 10*sw^2 + 8*sw^4) + 
           4*sw^4*(37 - 100*sw^2 + 64*sw^4)) - 
         4*d*(-9*(3 - 10*sw^2 + 8*sw^4) + 60*sw^2*(3 - 10*sw^2 + 8*sw^4) + 
           64*sw^8*(-3 - 5*sw^2 + 8*sw^4) - 32*sw^6*(-15 + 11*sw^2 + 
             20*sw^4) - 4*sw^4*(111 - 265*sw^2 + 140*sw^4)) + 
         16*(9*(3 - 10*sw^2 + 8*sw^4) - 60*sw^2*(3 - 10*sw^2 + 8*sw^4) + 
           64*sw^8*(3 - 5*sw^2 + 8*sw^4) - 32*sw^6*(15 - 37*sw^2 + 20*sw^4) + 
           4*sw^4*(111 - 335*sw^2 + 244*sw^4))) + 
       4*(90*(3 - 10*sw^2 + 8*sw^4) - 600*sw^2*(3 - 10*sw^2 + 8*sw^4) + 
         128*sw^8*(15 - 10*sw^2 + 16*sw^4) - 64*sw^6*(75 - 146*sw^2 + 
           40*sw^4) + 8*sw^4*(555 - 1570*sw^2 + 1064*sw^4) - 
         18*d*(9 - 30*sw^2 + 24*sw^4 + 64*sw^8 + 32*sw^6*(-5 + 8*sw^2) - 
           20*sw^2*(3 - 10*sw^2 + 8*sw^4) + 4*sw^4*(37 - 100*sw^2 + 
             64*sw^4)) + 3*d^2*(9 - 30*sw^2 + 24*sw^4 + 64*sw^8 + 
           32*sw^6*(-5 + 8*sw^2) - 20*sw^2*(3 - 10*sw^2 + 8*sw^4) + 
           4*sw^4*(37 - 100*sw^2 + 64*sw^4)))*t) + 
     2*mz^4*(s*(-24*d^2*(9 - 30*sw^2 + 24*sw^4 + 64*sw^8 + 
           32*sw^6*(-5 + 8*sw^2) - 20*sw^2*(3 - 10*sw^2 + 8*sw^4) + 
           4*sw^4*(37 - 100*sw^2 + 64*sw^4)) + 3*d^3*(9 - 30*sw^2 + 24*sw^4 + 
           64*sw^8 + 32*sw^6*(-5 + 8*sw^2) - 20*sw^2*(3 - 10*sw^2 + 8*sw^4) + 
           4*sw^4*(37 - 100*sw^2 + 64*sw^4)) - 
         12*d*(-9*(3 - 10*sw^2 + 8*sw^4) + 60*sw^2*(3 - 10*sw^2 + 8*sw^4) + 
           64*sw^8*(-3 - 5*sw^2 + 8*sw^4) - 32*sw^6*(-15 + 11*sw^2 + 
             20*sw^4) - 4*sw^4*(111 - 265*sw^2 + 140*sw^4)) + 
         8*(9*(3 - 10*sw^2 + 8*sw^4) - 60*sw^2*(3 - 10*sw^2 + 8*sw^4) + 
           64*sw^8*(3 - 20*sw^2 + 32*sw^4) - 32*sw^6*(15 - 76*sw^2 + 
             80*sw^4) + 4*sw^4*(111 - 440*sw^2 + 400*sw^4))) - 
       2*(-36*d^2*(9 - 30*sw^2 + 24*sw^4 + 64*sw^8 + 32*sw^6*(-5 + 8*sw^2) - 
           20*sw^2*(3 - 10*sw^2 + 8*sw^4) + 4*sw^4*(37 - 100*sw^2 + 
             64*sw^4)) + 3*d^3*(9 - 30*sw^2 + 24*sw^4 + 64*sw^8 + 
           32*sw^6*(-5 + 8*sw^2) - 20*sw^2*(3 - 10*sw^2 + 8*sw^4) + 
           4*sw^4*(37 - 100*sw^2 + 64*sw^4)) - 
         4*d*(-99*(3 - 10*sw^2 + 8*sw^4) + 660*sw^2*(3 - 10*sw^2 + 8*sw^4) + 
           64*sw^8*(-33 - 5*sw^2 + 8*sw^4) - 32*sw^6*(-165 + 251*sw^2 + 
             20*sw^4) - 4*sw^4*(1221 - 3265*sw^2 + 2060*sw^4)) + 
         4*(-117*(3 - 10*sw^2 + 8*sw^4) + 780*sw^2*(3 - 10*sw^2 + 8*sw^4) + 
           64*sw^8*(-39 - 10*sw^2 + 16*sw^4) - 32*sw^6*(-195 + 286*sw^2 + 
             40*sw^4) - 4*sw^4*(1443 - 3830*sw^2 + 2392*sw^4)))*t) + 
     t*(-(s^2*(-24*d^2*(9 - 30*sw^2 + 24*sw^4 + 64*sw^8 + 
            32*sw^6*(-5 + 8*sw^2) - 20*sw^2*(3 - 10*sw^2 + 8*sw^4) + 
            4*sw^4*(37 - 100*sw^2 + 64*sw^4)) + 3*d^3*(9 - 30*sw^2 + 
            24*sw^4 + 64*sw^8 + 32*sw^6*(-5 + 8*sw^2) - 
            20*sw^2*(3 - 10*sw^2 + 8*sw^4) + 4*sw^4*(37 - 100*sw^2 + 
              64*sw^4)) - 12*d*(-9*(3 - 10*sw^2 + 8*sw^4) + 
            60*sw^2*(3 - 10*sw^2 + 8*sw^4) + 64*sw^8*(-3 - 5*sw^2 + 8*sw^4) - 
            32*sw^6*(-15 + 11*sw^2 + 20*sw^4) - 4*sw^4*(111 - 265*sw^2 + 
              140*sw^4)) + 8*(9*(3 - 10*sw^2 + 8*sw^4) - 
            60*sw^2*(3 - 10*sw^2 + 8*sw^4) + 64*sw^8*(3 - 20*sw^2 + 
              32*sw^4) - 32*sw^6*(15 - 76*sw^2 + 80*sw^4) + 
            4*sw^4*(111 - 440*sw^2 + 400*sw^4)))) + 
       8*s*(3*d*(9 - 30*sw^2 + 24*sw^4 + 64*sw^8 + 32*sw^6*(-5 + 8*sw^2) - 
           20*sw^2*(3 - 10*sw^2 + 8*sw^4) + 4*sw^4*(37 - 100*sw^2 + 
             64*sw^4)) + 2*(-9*(3 - 10*sw^2 + 8*sw^4) + 
           60*sw^2*(3 - 10*sw^2 + 8*sw^4) + 64*sw^8*(-3 - 10*sw^2 + 
             16*sw^4) - 32*sw^6*(-15 - 2*sw^2 + 40*sw^4) - 
           4*sw^4*(111 - 230*sw^2 + 88*sw^4)))*t + 
       16*(9*(3 - 10*sw^2 + 8*sw^4) - 60*sw^2*(3 - 10*sw^2 + 8*sw^4) + 
         64*sw^8*(3 - 20*sw^2 + 32*sw^4) - 32*sw^6*(15 - 76*sw^2 + 80*sw^4) + 
         4*sw^4*(111 - 440*sw^2 + 400*sw^4))*t^2)))/
   (Pi^d*(mz^2 - s)*sw^6*(1 - sw^2)^3), 
  ((I/27)*EL^6*((9*2^(2 + d)*(-4 + d)*Pi^d*(3 - 10*sw^2 + 8*sw^4)*
       ((-4 - 2*d + d^2)*s + 2*(14 - 8*d + d^2)*t))/sw^4 + 
     (2^(4 + d)*Pi^d*(s*(-450*d^2*(3 - 10*sw^2 + 16*sw^4 + 
            2*sw^2*(-5 + 8*sw^2)) + 45*d^3*(3 - 10*sw^2 + 16*sw^4 + 
            2*sw^2*(-5 + 8*sw^2)) - 24*d*(sw^2*(620 - 979*sw^2 - 20*sw^4) - 
            62*(3 - 10*sw^2 + 8*sw^4) + 4*sw^4*(-124 - 5*sw^2 + 8*sw^4)) + 
          32*(-10*sw^2*(-51 + 79*sw^2 + 4*sw^4) - 51*(3 - 10*sw^2 + 8*sw^4) + 
            8*sw^4*(-51 - 5*sw^2 + 8*sw^4))) + 
        mz^2*(-63*d^3*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
          3*d^4*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
          192*(sw^2*(-60 + 109*sw^2 - 20*sw^4) + 6*(3 - 10*sw^2 + 8*sw^4) + 
            4*sw^4*(12 - 5*sw^2 + 8*sw^4)) + 
          6*d^2*(71*(3 - 10*sw^2 + 8*sw^4) + 8*sw^4*(71 - 10*sw^2 + 
              16*sw^4) - 2*sw^2*(355 - 594*sw^2 + 40*sw^4)) - 
          8*d*(sw^2*(-1470 + 2573*sw^2 - 340*sw^4) + 
            147*(3 - 10*sw^2 + 8*sw^4) + 4*sw^4*(294 - 85*sw^2 + 
              136*sw^4))) + 2*(-36*d^3*(3 - 10*sw^2 + 16*sw^4 + 
            2*sw^2*(-5 + 8*sw^2)) + 3*d^4*(3 - 10*sw^2 + 16*sw^4 + 
            2*sw^2*(-5 + 8*sw^2)) + 2*d^2*(87*(3 - 10*sw^2 + 8*sw^4) + 
            8*sw^4*(87 - 10*sw^2 + 16*sw^4) - 2*sw^2*(435 - 722*sw^2 + 
              40*sw^4)) + 32*(sw^2*(-120 + 257*sw^2 - 100*sw^4) + 
            12*(3 - 10*sw^2 + 8*sw^4) + 4*sw^4*(24 - 25*sw^2 + 40*sw^4)) - 
          8*d*(sw^2*(-510 + 946*sw^2 - 200*sw^4) + 
            51*(3 - 10*sw^2 + 8*sw^4) + 8*sw^4*(51 - 25*sw^2 + 40*sw^4)))*t))/
      ((-4 + d)*sw^2*(1 - sw^2)) + 
     ((2*Pi)^d*(s*(-18*d^2*(9 - 30*sw^2 + 24*sw^4 + 64*sw^8 + 
            32*sw^6*(-5 + 8*sw^2) - 20*sw^2*(3 - 10*sw^2 + 8*sw^4) + 
            4*sw^4*(37 - 100*sw^2 + 64*sw^4)) + 3*d^3*(9 - 30*sw^2 + 
            24*sw^4 + 64*sw^8 + 32*sw^6*(-5 + 8*sw^2) - 
            20*sw^2*(3 - 10*sw^2 + 8*sw^4) + 4*sw^4*(37 - 100*sw^2 + 
              64*sw^4)) - 4*d*(-9*(3 - 10*sw^2 + 8*sw^4) + 
            60*sw^2*(3 - 10*sw^2 + 8*sw^4) + 64*sw^8*(-3 - 5*sw^2 + 8*sw^4) - 
            32*sw^6*(-15 + 11*sw^2 + 20*sw^4) - 4*sw^4*(111 - 265*sw^2 + 
              140*sw^4)) + 16*(9*(3 - 10*sw^2 + 8*sw^4) - 
            60*sw^2*(3 - 10*sw^2 + 8*sw^4) + 64*sw^8*(3 - 5*sw^2 + 8*sw^4) - 
            32*sw^6*(15 - 37*sw^2 + 20*sw^4) + 4*sw^4*(111 - 335*sw^2 + 
              244*sw^4))) + 2*(-36*d^2*(9 - 30*sw^2 + 24*sw^4 + 64*sw^8 + 
            32*sw^6*(-5 + 8*sw^2) - 20*sw^2*(3 - 10*sw^2 + 8*sw^4) + 
            4*sw^4*(37 - 100*sw^2 + 64*sw^4)) + 3*d^3*(9 - 30*sw^2 + 
            24*sw^4 + 64*sw^8 + 32*sw^6*(-5 + 8*sw^2) - 
            20*sw^2*(3 - 10*sw^2 + 8*sw^4) + 4*sw^4*(37 - 100*sw^2 + 
              64*sw^4)) - 8*(63*(3 - 10*sw^2 + 8*sw^4) - 
            420*sw^2*(3 - 10*sw^2 + 8*sw^4) + 64*sw^8*(21 - 5*sw^2 + 
              8*sw^4) - 32*sw^6*(105 - 181*sw^2 + 20*sw^4) + 
            4*sw^4*(777 - 2135*sw^2 + 1396*sw^4)) + 
          2*d*(207*(3 - 10*sw^2 + 8*sw^4) - 1380*sw^2*(3 - 10*sw^2 + 
              8*sw^4) + 64*sw^8*(69 - 10*sw^2 + 16*sw^4) - 
            32*sw^6*(345 - 578*sw^2 + 40*sw^4) + 4*sw^4*(2553 - 6970*sw^2 + 
              4520*sw^4)))*t))/(sw^4*(1 - sw^2)^2) - 
     (64*(-9*d^4*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
         (2*s*(-30*d^3 + 3*d^4 + 32*(24 + 5*sw^2 - 8*sw^4) + 
            d^2*(246 + 5*sw^2 - 8*sw^4) + 2*d*(-372 - 35*sw^2 + 56*sw^4)) + 
          (24*d^3 - 3*d^4 + d^2*(-66 + 20*sw^2 - 32*sw^4) - 
            32*(3 - 20*sw^2 + 32*sw^4) + 8*d*(12 - 35*sw^2 + 56*sw^4))*t)))/
      (-4 + d)))/(2^(2*(4 + d))*Pi^(2*d)*(mz^2 - s)*sw^2*(1 - sw^2)), 
  ((I/27)*2^(-3 - 2*d)*EL^6*(s + t)*(-3*d^3*(2*Pi)^d*s^2 + 
     2^(1 + d)*Pi^d*(3*s^2*(-72 - 9*d^2 + d^3 + 2*d*(24 - 5*sw^2 + 8*sw^4)) + 
       12*s*(d + 4*sw^2*(-5 + 8*sw^2))*t + 8*(3 - 20*sw^2 + 32*sw^4)*t^2)))/
   (Pi^(2*d)*(mz^2 - s)*sw^2*(1 - sw^2)), 
  ((I/27)*EL^6*((2*Pi)^d*(s + t)*
      (s*(16*d*(sw^4*(-3108 + 8365*sw^2 - 5324*sw^4) - 
           63*(3 - 10*sw^2 + 8*sw^4) + 420*sw^2*(3 - 10*sw^2 + 8*sw^4) + 
           16*sw^8*(-84 - 5*sw^2 + 8*sw^4) - 8*sw^6*(-420 + 659*sw^2 + 
             20*sw^4)) + 66*d^2*(9 - 30*sw^2 + 24*sw^4 + 64*sw^8 + 
           32*sw^6*(-5 + 8*sw^2) - 20*sw^2*(3 - 10*sw^2 + 8*sw^4) + 
           4*sw^4*(37 - 100*sw^2 + 64*sw^4)) - 3*d^3*(9 - 30*sw^2 + 24*sw^4 + 
           64*sw^8 + 32*sw^6*(-5 + 8*sw^2) - 20*sw^2*(3 - 10*sw^2 + 8*sw^4) + 
           4*sw^4*(37 - 100*sw^2 + 64*sw^4)) - 
         32*(-45*(3 - 10*sw^2 + 8*sw^4) + 300*sw^2*(3 - 10*sw^2 + 8*sw^4) + 
           64*sw^8*(-15 - 5*sw^2 + 8*sw^4) - 32*sw^6*(-75 + 107*sw^2 + 
             20*sw^4) - 4*sw^4*(555 - 1465*sw^2 + 908*sw^4))) + 
       4*mz^2*(-36*d^2*(9 - 30*sw^2 + 24*sw^4 + 64*sw^8 + 
           32*sw^6*(-5 + 8*sw^2) - 20*sw^2*(3 - 10*sw^2 + 8*sw^4) + 
           4*sw^4*(37 - 100*sw^2 + 64*sw^4)) + 3*d^3*(9 - 30*sw^2 + 24*sw^4 + 
           64*sw^8 + 32*sw^6*(-5 + 8*sw^2) - 20*sw^2*(3 - 10*sw^2 + 8*sw^4) + 
           4*sw^4*(37 - 100*sw^2 + 64*sw^4)) - 8*(63*(3 - 10*sw^2 + 8*sw^4) - 
           420*sw^2*(3 - 10*sw^2 + 8*sw^4) + 64*sw^8*(21 - 5*sw^2 + 8*sw^4) - 
           32*sw^6*(105 - 181*sw^2 + 20*sw^4) + 4*sw^4*(777 - 2135*sw^2 + 
             1396*sw^4)) + 2*d*(207*(3 - 10*sw^2 + 8*sw^4) - 
           1380*sw^2*(3 - 10*sw^2 + 8*sw^4) + 64*sw^8*(69 - 10*sw^2 + 
             16*sw^4) - 32*sw^6*(345 - 578*sw^2 + 40*sw^4) + 
           4*sw^4*(2553 - 6970*sw^2 + 4520*sw^4))) + 
       8*(-18*d*(9 - 30*sw^2 + 24*sw^4 + 64*sw^8 + 32*sw^6*(-5 + 8*sw^2) - 
           20*sw^2*(3 - 10*sw^2 + 8*sw^4) + 4*sw^4*(37 - 100*sw^2 + 
             64*sw^4)) + 3*d^2*(9 - 30*sw^2 + 24*sw^4 + 64*sw^8 + 
           32*sw^6*(-5 + 8*sw^2) - 20*sw^2*(3 - 10*sw^2 + 8*sw^4) + 
           4*sw^4*(37 - 100*sw^2 + 64*sw^4)) - 
         8*(-80*sw^6*(-6 + 7*sw^2 + 4*sw^4) - 9*(3 - 10*sw^2 + 8*sw^4) + 
           60*sw^2*(3 - 10*sw^2 + 8*sw^4) + 32*sw^8*(-6 - 5*sw^2 + 8*sw^4) - 
           2*sw^4*(222 - 565*sw^2 + 332*sw^4)))*t) + 
     4*sw^2*(1 - sw^2)*(2^(1 + d)*Pi^d*
        (s^2*(432*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
           60*d^2*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) - 
           3*d^3*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) - 
           4*d*(75*(3 - 10*sw^2 + 8*sw^4) + 8*sw^4*(75 - 5*sw^2 + 8*sw^4) - 
             2*sw^2*(375 - 613*sw^2 + 20*sw^4))) + 
         s*(72*d^2*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) - 
           3*d^3*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) - 
           16*(sw^2*(330 - 502*sw^2 - 40*sw^4) - 33*(3 - 10*sw^2 + 8*sw^4) + 
             8*sw^4*(-33 - 5*sw^2 + 8*sw^4)) - 
           4*d*(93*(3 - 10*sw^2 + 8*sw^4) + 8*sw^4*(93 - 5*sw^2 + 8*sw^4) - 
             2*sw^2*(465 - 757*sw^2 + 20*sw^4)))*t + 
         4*(-18*d*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
           3*d^2*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) - 
           8*(-9 + 30*sw^2 - 24*sw^4 - 5*sw^2*(-6 + 7*sw^2 + 4*sw^4) + 
             4*sw^4*(-6 - 5*sw^2 + 8*sw^4)))*t^2 + 
         mz^2*(2*s*(-36*d^2*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
             3*d^3*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) - 
             8*(sw^2*(-210 + 362*sw^2 - 40*sw^4) + 21*(3 - 10*sw^2 + 
                 8*sw^4) + 8*sw^4*(21 - 5*sw^2 + 8*sw^4)) + 
             2*d*(69*(3 - 10*sw^2 + 8*sw^4) + 8*sw^4*(69 - 10*sw^2 + 
                 16*sw^4) - 2*sw^2*(345 - 578*sw^2 + 40*sw^4))) + 
           (-18*d^2*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
             3*d^3*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) - 
             4*d*(-9 + 30*sw^2 - 24*sw^4 + sw^2*(30 - 22*sw^2 - 40*sw^4) + 8*
                sw^4*(-3 - 5*sw^2 + 8*sw^4)) + 16*(9 - 30*sw^2 + 24*sw^4 + 
               sw^2*(-30 + 74*sw^2 - 40*sw^4) + 8*sw^4*(3 - 5*sw^2 + 
                 8*sw^4)))*t)) + (s + (mz^2*(-s + t))/(s + t))*
        (-9*d^3*(2*Pi)^d*(s - t) + 2^(1 + d)*Pi^d*
          (s*(3*d^3*(3 - 5*sw^2 + 8*sw^4 + sw^2*(-5 + 8*sw^2)) - 
             27*d^2*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) - 
             32*(sw^2*(-60 + 109*sw^2 - 20*sw^4) + 6*(3 - 10*sw^2 + 8*sw^4) + 
               4*sw^4*(12 - 5*sw^2 + 8*sw^4)) + 12*d*(sw^2*(-110 + 189*sw^2 - 
                 20*sw^4) + 11*(3 - 10*sw^2 + 8*sw^4) + 4*sw^4*(22 - 5*sw^2 + 
                 8*sw^4))) + (3*d^3*(4*sw^4 + sw^2*(-5 + 4*sw^2) + sw^2*
                (-5 + 8*sw^2)) - 27*d^2*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*
                (-5 + 8*sw^2)) - 32*(sw^2*(-60 + 109*sw^2 - 20*sw^4) + 6*
                (3 - 10*sw^2 + 8*sw^4) + 4*sw^4*(12 - 5*sw^2 + 8*sw^4)) + 
             12*d*(sw^2*(-110 + 189*sw^2 - 20*sw^4) + 11*(3 - 10*sw^2 + 
                 8*sw^4) + 4*sw^4*(22 - 5*sw^2 + 8*sw^4)))*t))) + 
     4*sw^2*(1 - sw^2)*((9*d^3*(2*Pi)^d + 2^(1 + d)*Pi^d*
          (3*d^3*(4*sw^4 + sw^2*(-5 + 4*sw^2) + sw^2*(-5 + 8*sw^2)) - 
           27*d^2*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) - 
           32*(sw^2*(-60 + 109*sw^2 - 20*sw^4) + 6*(3 - 10*sw^2 + 8*sw^4) + 
             4*sw^4*(12 - 5*sw^2 + 8*sw^4)) + 
           12*d*(sw^2*(-110 + 189*sw^2 - 20*sw^4) + 11*(3 - 10*sw^2 + 8*
                sw^4) + 4*sw^4*(22 - 5*sw^2 + 8*sw^4))))*
        (mz^2*(-s + t) + s*(s + t)) - 2*(s + t)*(9*d^3*(2*Pi)^d*s + 
         2^(1 + d)*Pi^d*(s*(3*d^3*(4*sw^4 + sw^2*(-5 + 4*sw^2) + sw^2*
                (-5 + 8*sw^2)) - 216*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*
                (-5 + 8*sw^2)) - 30*d^2*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*
                (-5 + 8*sw^2)) + 2*d*(75*(3 - 10*sw^2 + 8*sw^4) + 8*sw^4*
                (75 - 5*sw^2 + 8*sw^4) - 2*sw^2*(375 - 613*sw^2 + 
                 20*sw^4))) + 2*(18*d*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*
                (-5 + 8*sw^2)) - 3*d^2*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*
                (-5 + 8*sw^2)) + 8*(-9 + 30*sw^2 - 24*sw^4 - 5*sw^2*
                (-6 + 7*sw^2 + 4*sw^4) + 4*sw^4*(-6 - 5*sw^2 + 8*sw^4)))*
            t)) + 2*mz^2*(9*d^3*(2*Pi)^d*t + 2^(1 + d)*Pi^d*
          (s*(-36*d^2*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
             3*d^3*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) - 
             8*(sw^2*(-210 + 362*sw^2 - 40*sw^4) + 21*(3 - 10*sw^2 + 
                 8*sw^4) + 8*sw^4*(21 - 5*sw^2 + 8*sw^4)) + 
             2*d*(69*(3 - 10*sw^2 + 8*sw^4) + 8*sw^4*(69 - 10*sw^2 + 
                 16*sw^4) - 2*sw^2*(345 - 578*sw^2 + 40*sw^4))) + 
           (3*d^3*(4*sw^4 + sw^2*(-5 + 4*sw^2) + sw^2*(-5 + 8*sw^2)) - 
             9*d^2*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
             8*(9 - 30*sw^2 + 24*sw^4 + sw^2*(-30 + 74*sw^2 - 40*sw^4) + 8*
                sw^4*(3 - 5*sw^2 + 8*sw^4)) + d*(6*(3 - 10*sw^2 + 8*sw^4) - 
               16*sw^4*(-3 - 5*sw^2 + 8*sw^4) + sw^2*(-60 + 44*sw^2 + 
                 80*sw^4)))*t)))))/(2^(2*(4 + d))*Pi^(2*d)*(mz^2 - s)*sw^6*
    (1 - sw^2)^3), 
  ((I/27)*EL^6*(-2*mz^2*(s + t)*(9*d^3*(2*Pi)^d*s + 
       2^(1 + d)*Pi^d*(s*(3*d^3*(4*sw^4 + sw^2*(-5 + 4*sw^2) + 
             sw^2*(-5 + 8*sw^2)) - 216*(3 - 10*sw^2 + 16*sw^4 + 
             2*sw^2*(-5 + 8*sw^2)) - 30*d^2*(3 - 10*sw^2 + 16*sw^4 + 
             2*sw^2*(-5 + 8*sw^2)) + 2*d*(75*(3 - 10*sw^2 + 8*sw^4) + 
             8*sw^4*(75 - 5*sw^2 + 8*sw^4) - 2*sw^2*(375 - 613*sw^2 + 20*
                sw^4))) + 2*(18*d*(3 - 10*sw^2 + 16*sw^4 + 
             2*sw^2*(-5 + 8*sw^2)) - 3*d^2*(3 - 10*sw^2 + 16*sw^4 + 
             2*sw^2*(-5 + 8*sw^2)) + 8*(-9 + 30*sw^2 - 24*sw^4 - 
             5*sw^2*(-6 + 7*sw^2 + 4*sw^4) + 4*sw^4*(-6 - 5*sw^2 + 8*sw^4)))*
          t)) + mz^4*(-9*d^3*(2*Pi)^d*(s - t) + 2^(1 + d)*Pi^d*
        (s*(3*d^3*(3 - 5*sw^2 + 8*sw^4 + sw^2*(-5 + 8*sw^2)) - 
           27*d^2*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) - 
           32*(sw^2*(-60 + 109*sw^2 - 20*sw^4) + 6*(3 - 10*sw^2 + 8*sw^4) + 
             4*sw^4*(12 - 5*sw^2 + 8*sw^4)) + 
           12*d*(sw^2*(-110 + 189*sw^2 - 20*sw^4) + 11*(3 - 10*sw^2 + 8*
                sw^4) + 4*sw^4*(22 - 5*sw^2 + 8*sw^4))) + 
         (3*d^3*(4*sw^4 + sw^2*(-5 + 4*sw^2) + sw^2*(-5 + 8*sw^2)) - 
           27*d^2*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) - 
           32*(sw^2*(-60 + 109*sw^2 - 20*sw^4) + 6*(3 - 10*sw^2 + 8*sw^4) + 
             4*sw^4*(12 - 5*sw^2 + 8*sw^4)) + 
           12*d*(sw^2*(-110 + 189*sw^2 - 20*sw^4) + 11*(3 - 10*sw^2 + 8*
                sw^4) + 4*sw^4*(22 - 5*sw^2 + 8*sw^4)))*t)) + 
     (s + t)*(9*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (3*s^2*(d^3*(4*sw^4 + sw^2*(-5 + 4*sw^2) + sw^2*(-5 + 8*sw^2)) - 
           72*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) - 
           9*d^2*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
           4*d*(-5*sw^2*(24 - 41*sw^2 + 4*sw^4) + 12*(3 - 10*sw^2 + 8*sw^4) + 
             4*sw^4*(24 - 5*sw^2 + 8*sw^4))) + 
         12*s*(d*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
           8*sw^4*(13 - 20*sw^2 + 4*sw^2*(-5 + 8*sw^2)))*t + 
         8*(9 - 30*sw^2 + 24*sw^4 + 8*sw^4*(3 - 20*sw^2 + 32*sw^4) - 
           2*sw^2*(15 - 76*sw^2 + 80*sw^4))*t^2)) + 
     (s + t)*(9*d^3*(2*Pi)^d*s^2 + mz^4*(9*d^3*(2*Pi)^d + 
         2^(1 + d)*Pi^d*(3*d^3*(4*sw^4 + sw^2*(-5 + 4*sw^2) + 
             sw^2*(-5 + 8*sw^2)) - 27*d^2*(3 - 10*sw^2 + 16*sw^4 + 
             2*sw^2*(-5 + 8*sw^2)) - 32*(sw^2*(-60 + 109*sw^2 - 20*sw^4) + 
             6*(3 - 10*sw^2 + 8*sw^4) + 4*sw^4*(12 - 5*sw^2 + 8*sw^4)) + 
           12*d*(sw^2*(-110 + 189*sw^2 - 20*sw^4) + 11*(3 - 10*sw^2 + 8*
                sw^4) + 4*sw^4*(22 - 5*sw^2 + 8*sw^4)))) + 
       2^(1 + d)*mz^2*Pi^d*(s*(432*(3 - 10*sw^2 + 16*sw^4 + 
             2*sw^2*(-5 + 8*sw^2)) + 60*d^2*(3 - 10*sw^2 + 16*sw^4 + 
             2*sw^2*(-5 + 8*sw^2)) - 3*d^3*(3 - 10*sw^2 + 16*sw^4 + 
             2*sw^2*(-5 + 8*sw^2)) - 4*d*(75*(3 - 10*sw^2 + 8*sw^4) + 
             8*sw^4*(75 - 5*sw^2 + 8*sw^4) - 2*sw^2*(375 - 613*sw^2 + 20*
                sw^4))) + 4*(-18*d*(3 - 10*sw^2 + 16*sw^4 + 
             2*sw^2*(-5 + 8*sw^2)) + 3*d^2*(3 - 10*sw^2 + 16*sw^4 + 
             2*sw^2*(-5 + 8*sw^2)) - 8*(-9 + 30*sw^2 - 24*sw^4 - 
             5*sw^2*(-6 + 7*sw^2 + 4*sw^4) + 4*sw^4*(-6 - 5*sw^2 + 8*sw^4)))*
          t) + 2^(1 + d)*Pi^d*(3*s^2*(d^3*(4*sw^4 + sw^2*(-5 + 4*sw^2) + 
             sw^2*(-5 + 8*sw^2)) - 72*(3 - 10*sw^2 + 16*sw^4 + 
             2*sw^2*(-5 + 8*sw^2)) - 9*d^2*(3 - 10*sw^2 + 16*sw^4 + 
             2*sw^2*(-5 + 8*sw^2)) + 4*d*(-5*sw^2*(24 - 41*sw^2 + 4*sw^4) + 
             12*(3 - 10*sw^2 + 8*sw^4) + 4*sw^4*(24 - 5*sw^2 + 8*sw^4))) + 
         12*s*(d*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
           8*sw^4*(13 - 20*sw^2 + 4*sw^2*(-5 + 8*sw^2)))*t + 
         8*(9 - 30*sw^2 + 24*sw^4 + 8*sw^4*(3 - 20*sw^2 + 32*sw^4) - 
           2*sw^2*(15 - 76*sw^2 + 80*sw^4))*t^2))))/
   (2^(2*(3 + d))*Pi^(2*d)*(mz^2 - s)*sw^4*(1 - sw^2)^2), 
  ((I/27)*2^(-9 - d)*EL^6*
    (3*s^3*(-144*(9 - 30*sw^2 + 24*sw^4 + 64*sw^8 + 32*sw^6*(-5 + 8*sw^2) - 
         20*sw^2*(3 - 10*sw^2 + 8*sw^4) + 4*sw^4*(37 - 100*sw^2 + 64*sw^4)) - 
       18*d^2*(9 - 30*sw^2 + 24*sw^4 + 64*sw^8 + 32*sw^6*(-5 + 8*sw^2) - 
         20*sw^2*(3 - 10*sw^2 + 8*sw^4) + 4*sw^4*(37 - 100*sw^2 + 64*sw^4)) + 
       d^3*(9 - 30*sw^2 + 24*sw^4 + 64*sw^8 + 32*sw^6*(-5 + 8*sw^2) - 
         20*sw^2*(3 - 10*sw^2 + 8*sw^4) + 4*sw^4*(37 - 100*sw^2 + 64*sw^4)) + 
       16*d*(-40*sw^6*(24 - 41*sw^2 + 4*sw^4) + 18*(3 - 10*sw^2 + 8*sw^4) - 
         120*sw^2*(3 - 10*sw^2 + 8*sw^4) + 16*sw^8*(24 - 5*sw^2 + 8*sw^4) + 
         sw^4*(888 - 2435*sw^2 + 1588*sw^4))) + 
     3*s^2*(-18*d^2*(9 - 30*sw^2 + 24*sw^4 + 64*sw^8 + 
         32*sw^6*(-5 + 8*sw^2) - 20*sw^2*(3 - 10*sw^2 + 8*sw^4) + 
         4*sw^4*(37 - 100*sw^2 + 64*sw^4)) + 
       d^3*(9 - 30*sw^2 + 24*sw^4 + 64*sw^8 + 32*sw^6*(-5 + 8*sw^2) - 
         20*sw^2*(3 - 10*sw^2 + 8*sw^4) + 4*sw^4*(37 - 100*sw^2 + 64*sw^4)) + 
       16*(-27*(3 - 10*sw^2 + 8*sw^4) + 180*sw^2*(3 - 10*sw^2 + 8*sw^4) + 
         64*sw^8*(-9 - 10*sw^2 + 16*sw^4) - 32*sw^6*(-45 + 46*sw^2 + 
           40*sw^4) - 4*sw^4*(333 - 830*sw^2 + 472*sw^4)) + 
       8*d*(39*(3 - 10*sw^2 + 8*sw^4) - 260*sw^2*(3 - 10*sw^2 + 8*sw^4) + 
         32*sw^8*(26 - 5*sw^2 + 8*sw^4) - 16*sw^6*(130 - 221*sw^2 + 
           20*sw^4) + 2*sw^4*(962 - 2635*sw^2 + 1716*sw^4)))*t + 
     8*s*(3*d*(9 - 30*sw^2 + 24*sw^4 + 64*sw^8 + 32*sw^6*(-5 + 8*sw^2) - 
         20*sw^2*(3 - 10*sw^2 + 8*sw^4) + 4*sw^4*(37 - 100*sw^2 + 64*sw^4)) + 
       2*(9*(3 - 10*sw^2 + 8*sw^4) - 60*sw^2*(3 - 10*sw^2 + 8*sw^4) + 
         64*sw^8*(3 - 50*sw^2 + 80*sw^4) - 32*sw^6*(15 - 154*sw^2 + 
           200*sw^4) + 4*sw^4*(111 - 650*sw^2 + 712*sw^4)))*t^2 + 
     16*(9*(3 - 10*sw^2 + 8*sw^4) - 60*sw^2*(3 - 10*sw^2 + 8*sw^4) + 
       64*sw^8*(3 - 20*sw^2 + 32*sw^4) - 32*sw^6*(15 - 76*sw^2 + 80*sw^4) + 
       4*sw^4*(111 - 440*sw^2 + 400*sw^4))*t^3 + 
     2*mz^4*(s*(-126*d^2*(9 - 30*sw^2 + 24*sw^4 + 64*sw^8 + 
           32*sw^6*(-5 + 8*sw^2) - 20*sw^2*(3 - 10*sw^2 + 8*sw^4) + 
           4*sw^4*(37 - 100*sw^2 + 64*sw^4)) + 9*d^3*(9 - 30*sw^2 + 24*sw^4 + 
           64*sw^8 + 32*sw^6*(-5 + 8*sw^2) - 20*sw^2*(3 - 10*sw^2 + 8*sw^4) + 
           4*sw^4*(37 - 100*sw^2 + 64*sw^4)) - 
         48*(45*(3 - 10*sw^2 + 8*sw^4) - 300*sw^2*(3 - 10*sw^2 + 8*sw^4) + 
           64*sw^8*(15 - 5*sw^2 + 8*sw^4) - 32*sw^6*(75 - 133*sw^2 + 
             20*sw^4) + 4*sw^4*(555 - 1535*sw^2 + 1012*sw^4)) + 
         20*d*(81*(3 - 10*sw^2 + 8*sw^4) - 540*sw^2*(3 - 10*sw^2 + 8*sw^4) + 
           64*sw^8*(27 - 5*sw^2 + 8*sw^4) - 32*sw^6*(135 - 229*sw^2 + 
             20*sw^4) + 4*sw^4*(999 - 2735*sw^2 + 1780*sw^4))) + 
       2*(-36*d^2*(9 - 30*sw^2 + 24*sw^4 + 64*sw^8 + 32*sw^6*(-5 + 8*sw^2) - 
           20*sw^2*(3 - 10*sw^2 + 8*sw^4) + 4*sw^4*(37 - 100*sw^2 + 
             64*sw^4)) + 3*d^3*(9 - 30*sw^2 + 24*sw^4 + 64*sw^8 + 
           32*sw^6*(-5 + 8*sw^2) - 20*sw^2*(3 - 10*sw^2 + 8*sw^4) + 
           4*sw^4*(37 - 100*sw^2 + 64*sw^4)) - 8*(63*(3 - 10*sw^2 + 8*sw^4) - 
           420*sw^2*(3 - 10*sw^2 + 8*sw^4) + 64*sw^8*(21 - 5*sw^2 + 8*sw^4) - 
           32*sw^6*(105 - 181*sw^2 + 20*sw^4) + 4*sw^4*(777 - 2135*sw^2 + 
             1396*sw^4)) + 2*d*(207*(3 - 10*sw^2 + 8*sw^4) - 
           1380*sw^2*(3 - 10*sw^2 + 8*sw^4) + 64*sw^8*(69 - 10*sw^2 + 
             16*sw^4) - 32*sw^6*(345 - 578*sw^2 + 40*sw^4) + 
           4*sw^4*(2553 - 6970*sw^2 + 4520*sw^4)))*t) - 
     4*mz^2*(s^2*(-432*(9 - 30*sw^2 + 24*sw^4 + 64*sw^8 + 
           32*sw^6*(-5 + 8*sw^2) - 20*sw^2*(3 - 10*sw^2 + 8*sw^4) + 
           4*sw^4*(37 - 100*sw^2 + 64*sw^4)) - 
         60*d^2*(9 - 30*sw^2 + 24*sw^4 + 64*sw^8 + 32*sw^6*(-5 + 8*sw^2) - 
           20*sw^2*(3 - 10*sw^2 + 8*sw^4) + 4*sw^4*(37 - 100*sw^2 + 
             64*sw^4)) + 3*d^3*(9 - 30*sw^2 + 24*sw^4 + 64*sw^8 + 
           32*sw^6*(-5 + 8*sw^2) - 20*sw^2*(3 - 10*sw^2 + 8*sw^4) + 
           4*sw^4*(37 - 100*sw^2 + 64*sw^4)) + 
         4*d*(225*(3 - 10*sw^2 + 8*sw^4) - 1500*sw^2*(3 - 10*sw^2 + 8*sw^4) + 
           64*sw^8*(75 - 5*sw^2 + 8*sw^4) - 32*sw^6*(375 - 613*sw^2 + 
             20*sw^4) + 4*sw^4*(2775 - 7535*sw^2 + 4852*sw^4))) + 
       s*(-72*d^2*(9 - 30*sw^2 + 24*sw^4 + 64*sw^8 + 32*sw^6*(-5 + 8*sw^2) - 
           20*sw^2*(3 - 10*sw^2 + 8*sw^4) + 4*sw^4*(37 - 100*sw^2 + 
             64*sw^4)) + 3*d^3*(9 - 30*sw^2 + 24*sw^4 + 64*sw^8 + 
           32*sw^6*(-5 + 8*sw^2) - 20*sw^2*(3 - 10*sw^2 + 8*sw^4) + 
           4*sw^4*(37 - 100*sw^2 + 64*sw^4)) + 
         16*(-99*(3 - 10*sw^2 + 8*sw^4) + 660*sw^2*(3 - 10*sw^2 + 8*sw^4) + 
           64*sw^8*(-33 - 5*sw^2 + 8*sw^4) - 32*sw^6*(-165 + 251*sw^2 + 
             20*sw^4) - 4*sw^4*(1221 - 3265*sw^2 + 2060*sw^4)) + 
         4*d*(279*(3 - 10*sw^2 + 8*sw^4) - 1860*sw^2*(3 - 10*sw^2 + 8*sw^4) + 
           64*sw^8*(93 - 5*sw^2 + 8*sw^4) - 32*sw^6*(465 - 757*sw^2 + 
             20*sw^4) + 4*sw^4*(3441 - 9335*sw^2 + 6004*sw^4)))*t - 
       4*(-18*d*(9 - 30*sw^2 + 24*sw^4 + 64*sw^8 + 32*sw^6*(-5 + 8*sw^2) - 
           20*sw^2*(3 - 10*sw^2 + 8*sw^4) + 4*sw^4*(37 - 100*sw^2 + 
             64*sw^4)) + 3*d^2*(9 - 30*sw^2 + 24*sw^4 + 64*sw^8 + 
           32*sw^6*(-5 + 8*sw^2) - 20*sw^2*(3 - 10*sw^2 + 8*sw^4) + 
           4*sw^4*(37 - 100*sw^2 + 64*sw^4)) - 
         8*(-80*sw^6*(-6 + 7*sw^2 + 4*sw^4) - 9*(3 - 10*sw^2 + 8*sw^4) + 
           60*sw^2*(3 - 10*sw^2 + 8*sw^4) + 32*sw^8*(-6 - 5*sw^2 + 8*sw^4) - 
           2*sw^4*(222 - 565*sw^2 + 332*sw^4)))*t^2)))/
   (Pi^d*(mz^2 - s)*sw^6*(1 - sw^2)^3), 
  ((I/9)*EL^6*(2^(1 + d)*(1 - d)*d*mz^2*Pi^d*(mz^2 - s)*s^2*(1 - 2*sw^2)*
      (1 - sw^2)^2*((-2 + d)*s^2*(18 - 24*sw^2 - 8*sw^2*(3 + 4*sw^2) + 
         3*d*(-3 + 8*sw^2)) + 2*s*(-72 + 96*sw^2 + sw^2*(96 - 64*sw^2) - 
         15*d*(-3 + 8*sw^2) + 3*d^2*(-3 + 8*sw^2))*t + 
       4*(-9 + 12*sw^2 - 4*sw^2*(-3 + 8*sw^2))*t^2)*(-1 + GaugeXi[W])^2 - 
     2^(1 + d)*d*Pi^d*(mz^2 - s)*s^3*(1 - 2*sw^2)*(1 - sw^2)^2*
      ((-2 + d)*s^2*(18 - 24*sw^2 - 8*sw^2*(3 + 4*sw^2) + 
         3*d*(-3 + 8*sw^2)) + 2*s*(-72 + 96*sw^2 + sw^2*(96 - 64*sw^2) - 
         15*d*(-3 + 8*sw^2) + 3*d^2*(-3 + 8*sw^2))*t + 
       4*(-9 + 12*sw^2 - 4*sw^2*(-3 + 8*sw^2))*t^2)*(-1 + GaugeXi[W])^2 + 
     2^(3 + d)*(1 - d)*d*mz^4*Pi^d*(mz^2 - s)*s*sw^2*(1 - 2*sw^2)*
      (1 - sw^2)^3*(s^2*(3*d^2*(-3 + 8*sw^2) + 4*d*(-3*(-3 + sw^2 + 4*sw^4) + 
           4*sw^2*(-3 - 5*sw^2 + 8*sw^4)) - 4*(9 + 6*sw^2 - 24*sw^4 + 
           4*sw^2*(-3 - 10*sw^2 + 16*sw^4))) + 
       2*s*(-15*d*(-3 + 8*sw^2) + 3*d^2*(-3 + 8*sw^2) - 
         24*(3 - 7*sw^2 + 4*sw^4) + 32*sw^2*(3 - 5*sw^2 + 8*sw^4))*t + 
       4*(-1 + 4*sw^2)*(9 - 12*sw^2 + 4*sw^2*(-3 + 8*sw^2))*t^2)*
      (-1 + GaugeXi[W])^2 + 2^(1 + d)*(1 - d)*d*mz^2*Pi^d*(mz^2 - s)*s^2*
      (3 - 4*sw^2)*(3 - 2*sw^2)*(1 - sw^2)^2*
      ((-2 + d)*s^2*(2 - 4*sw^2 - 4*sw^2*(1 + 2*sw^2) + d*(-1 + 4*sw^2)) + 
       2*s*(-8 + 16*sw^2 - 16*sw^2*(-1 + sw^2) - 5*d*(-1 + 4*sw^2) + 
         d^2*(-1 + 4*sw^2))*t - 4*(1 - 2*sw^2 + sw^2*(-2 + 8*sw^2))*t^2)*
      (-1 + GaugeXi[W])^2 + 2^(1 + d)*d*Pi^d*s^4*(1 - sw^2)^2*
      (s^2*(3*d^2*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
         4*d*(-9 + 30*sw^2 - 24*sw^4 + sw^2*(30 - 22*sw^2 - 40*sw^4) + 
           8*sw^4*(-3 - 5*sw^2 + 8*sw^4)) - 4*(-9 + 30*sw^2 - 24*sw^4 + 
           sw^2*(30 + 4*sw^2 - 80*sw^4) + 8*sw^4*(-3 - 10*sw^2 + 16*sw^4))) + 
       2*s*(-15*d*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
         3*d^2*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
         8*(9 - 30*sw^2 + 24*sw^4 + sw^2*(-30 + 74*sw^2 - 40*sw^4) + 
           8*sw^4*(3 - 5*sw^2 + 8*sw^4)))*t + 
       4*(9 - 30*sw^2 + 24*sw^4 + 8*sw^4*(3 - 20*sw^2 + 32*sw^4) - 
         2*sw^2*(15 - 76*sw^2 + 80*sw^4))*t^2)*(-1 + GaugeXi[W])^2 + 
     2^(1 + d)*d*mz^4*Pi^d*s^2*(1 - 2*sw^2)^2*(1 - sw^2)^2*
      (s^2*(3*d^2*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
         4*d*(-9 + 30*sw^2 - 24*sw^4 + sw^2*(30 - 22*sw^2 - 40*sw^4) + 
           8*sw^4*(-3 - 5*sw^2 + 8*sw^4)) - 4*(-9 + 30*sw^2 - 24*sw^4 + 
           sw^2*(30 + 4*sw^2 - 80*sw^4) + 8*sw^4*(-3 - 10*sw^2 + 16*sw^4))) + 
       2*s*(-15*d*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
         3*d^2*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
         8*(9 - 30*sw^2 + 24*sw^4 + sw^2*(-30 + 74*sw^2 - 40*sw^4) + 
           8*sw^4*(3 - 5*sw^2 + 8*sw^4)))*t + 
       4*(9 - 30*sw^2 + 24*sw^4 + 8*sw^4*(3 - 20*sw^2 + 32*sw^4) - 
         2*sw^2*(15 - 76*sw^2 + 80*sw^4))*t^2)*(-1 + GaugeXi[W])^2 + 
     2^(1 + d)*(1 - d)*d*mz^4*Pi^d*s^2*(1 - 2*sw^2)^2*(1 - sw^2)^2*
      (s^2*(3*d^2*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
         4*d*(-9 + 30*sw^2 - 24*sw^4 + sw^2*(30 - 22*sw^2 - 40*sw^4) + 
           8*sw^4*(-3 - 5*sw^2 + 8*sw^4)) - 4*(-9 + 30*sw^2 - 24*sw^4 + 
           sw^2*(30 + 4*sw^2 - 80*sw^4) + 8*sw^4*(-3 - 10*sw^2 + 16*sw^4))) + 
       2*s*(-15*d*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
         3*d^2*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
         8*(9 - 30*sw^2 + 24*sw^4 + sw^2*(-30 + 74*sw^2 - 40*sw^4) + 
           8*sw^4*(3 - 5*sw^2 + 8*sw^4)))*t + 
       4*(9 - 30*sw^2 + 24*sw^4 + 8*sw^4*(3 - 20*sw^2 + 32*sw^4) - 
         2*sw^2*(15 - 76*sw^2 + 80*sw^4))*t^2)*(-1 + GaugeXi[W])^2 + 
     8*(1 - d)*d*mz^2*(mz^2 - s)^2*s*sw^2*(1 - sw^2)^3*
      (3*d^2*(2*Pi)^d*s^2 - 2^(1 + d)*Pi^d*
        (2*s^2*(-3 - 2*sw^2 + d^2*sw^2 + 8*sw^4 - d*(-3 + sw^2 + 4*sw^4)) + 
         s*(8 - 5*d + d^2 - 8*sw^2)*(-3 + 4*sw^2)*t - 
         2*(3 - 16*sw^2 + 16*sw^4)*t^2))*(-1 + GaugeXi[W])^2 + 
     64*(1 - d)*d*mz^4*(mz^2 - s)^2*sw^4*(1 - sw^2)^4*
      (3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
         s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
         2*(3 - 20*sw^2 + 32*sw^4)*t^2))*(-1 + GaugeXi[W])^2 - 
     8*d*mz^4*(mz^2 - s)*s*sw^2*(1 - 2*sw^2)*(1 - sw^2)^3*
      (9*d^2*(2*Pi)^d*s^2 - 2^(1 + d)*Pi^d*
        (2*s^2*(-9 - 6*sw^2 + 6*d^2*sw^2 + 24*sw^4 + 
           sw^2*(12 + 40*sw^2 - 64*sw^4) - 3*d*(-3 + sw^2 + 4*sw^4) + 
           4*d*sw^2*(-3 - 5*sw^2 + 8*sw^4)) + s*(-15*d*(-3 + 8*sw^2) + 
           3*d^2*(-3 + 8*sw^2) - 24*(3 - 7*sw^2 + 4*sw^4) + 
           32*sw^2*(3 - 5*sw^2 + 8*sw^4))*t + 2*(-1 + 4*sw^2)*
          (9 - 12*sw^2 + 4*sw^2*(-3 + 8*sw^2))*t^2))*(-1 + GaugeXi[W])^2 - 
     16*d*mz^4*(mz^2 - s)*s*sw^2*(1 - 2*sw^2)*(1 - sw^2)^3*
      (3*d^2*(2*Pi)^d*s^2 - 2^(1 + d)*Pi^d*
        (s^2*(-6 + 4*sw^2 + 6*d^2*sw^2 + 16*sw^4 + 
           sw^2*(12 + 40*sw^2 - 64*sw^4) + 2*d*(3 - 4*sw^2 - 4*sw^4 + 
             2*sw^2*(-3 - 5*sw^2 + 8*sw^4))) + s*(-15*d*(-1 + 4*sw^2) + 
           d^2*(-3 + 12*sw^2) + 8*(-3 + 8*sw^2 - 4*sw^4 + 
             2*sw^2*(3 - 5*sw^2 + 8*sw^4)))*t + 2*(-3 + 8*sw^2)*
          (1 - 2*sw^2 + sw^2*(-2 + 8*sw^2))*t^2))*(-1 + GaugeXi[W])^2 - 
     16*(1 - d)*d*mz^4*(mz^2 - s)*s*sw^2*(1 - 2*sw^2)*(1 - sw^2)^3*
      (3*d^2*(2*Pi)^d*s^2 - 2^(1 + d)*Pi^d*
        (s^2*(-6 + 4*sw^2 + 6*d^2*sw^2 + 16*sw^4 + 
           sw^2*(12 + 40*sw^2 - 64*sw^4) + 2*d*(3 - 4*sw^2 - 4*sw^4 + 
             2*sw^2*(-3 - 5*sw^2 + 8*sw^4))) + s*(-15*d*(-1 + 4*sw^2) + 
           d^2*(-3 + 12*sw^2) + 8*(-3 + 8*sw^2 - 4*sw^4 + 
             2*sw^2*(3 - 5*sw^2 + 8*sw^4)))*t + 2*(-3 + 8*sw^2)*
          (1 - 2*sw^2 + sw^2*(-2 + 8*sw^2))*t^2))*(-1 + GaugeXi[W])^2 - 
     2^(6 + d)*(-1 + d)^2*mz^4*Pi^d*(mz^2 - s)^2*sw^4*(1 - sw^2)^4*
      (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
       2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
       4*(3 - 20*sw^2 + 32*sw^4)*t^2)*(-1 + GaugeXi[W])^2*GaugeXi[W] - 
     2^(5 + d)*(-1 + d)^2*mz^4*Pi^d*(mz^2 - s)*s*sw^2*(1 - sw^2)^4*
      (s^2*(d^2*(-3 + 12*sw^2) + 4*(-3 + 2*sw^2 + 8*sw^4 + 
           sw^2*(6 + 20*sw^2 - 32*sw^4)) + 4*d*(3 - 4*sw^2 - 4*sw^4 + 
           2*sw^2*(-3 - 5*sw^2 + 8*sw^4))) + 
       2*s*(-15*d*(-1 + 4*sw^2) + d^2*(-3 + 12*sw^2) + 
         8*(-3 + 8*sw^2 - 4*sw^4 + 2*sw^2*(3 - 5*sw^2 + 8*sw^4)))*t + 
       4*(-3 + 8*sw^2)*(1 - 2*sw^2 + sw^2*(-2 + 8*sw^2))*t^2)*
      (-1 + GaugeXi[W])^2*GaugeXi[W] - 2^(3 + d)*(-1 + d)^2*mz^4*Pi^d*s^2*
      (1 - sw^2)^4*(s^2*(3*d^2*(3 - 10*sw^2 + 16*sw^4 + 
           2*sw^2*(-5 + 8*sw^2)) + 4*d*(-9 + 30*sw^2 - 24*sw^4 + 
           sw^2*(30 - 22*sw^2 - 40*sw^4) + 8*sw^4*(-3 - 5*sw^2 + 8*sw^4)) - 
         4*(-9 + 30*sw^2 - 24*sw^4 + sw^2*(30 + 4*sw^2 - 80*sw^4) + 
           8*sw^4*(-3 - 10*sw^2 + 16*sw^4))) + 
       2*s*(-15*d*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
         3*d^2*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
         8*(9 - 30*sw^2 + 24*sw^4 + sw^2*(-30 + 74*sw^2 - 40*sw^4) + 
           8*sw^4*(3 - 5*sw^2 + 8*sw^4)))*t + 
       4*(9 - 30*sw^2 + 24*sw^4 + 8*sw^4*(3 - 20*sw^2 + 32*sw^4) - 
         2*sw^2*(15 - 76*sw^2 + 80*sw^4))*t^2)*(-1 + GaugeXi[W])^2*
      GaugeXi[W] - 2^(2 + d)*d*mz^4*Pi^d*sw^4*(1 - sw^2)^2*
      (s^2*(3*d^2*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
         4*d*(-9 + 30*sw^2 - 24*sw^4 + sw^2*(30 - 22*sw^2 - 40*sw^4) + 
           8*sw^4*(-3 - 5*sw^2 + 8*sw^4)) - 4*(-9 + 30*sw^2 - 24*sw^4 + 
           sw^2*(30 + 4*sw^2 - 80*sw^4) + 8*sw^4*(-3 - 10*sw^2 + 16*sw^4))) + 
       2*s*(-15*d*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
         3*d^2*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
         8*(9 - 30*sw^2 + 24*sw^4 + sw^2*(-30 + 74*sw^2 - 40*sw^4) + 
           8*sw^4*(3 - 5*sw^2 + 8*sw^4)))*t + 
       4*(9 - 30*sw^2 + 24*sw^4 + 8*sw^4*(3 - 20*sw^2 + 32*sw^4) - 
         2*sw^2*(15 - 76*sw^2 + 80*sw^4))*t^2)*(s - s*GaugeXi[W])^2 - 
     2^(2 + d)*d*mz^4*Pi^d*(1 - sw^2)^4*
      (s^2*(3*d^2*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
         4*d*(-9 + 30*sw^2 - 24*sw^4 + sw^2*(30 - 22*sw^2 - 40*sw^4) + 
           8*sw^4*(-3 - 5*sw^2 + 8*sw^4)) - 4*(-9 + 30*sw^2 - 24*sw^4 + 
           sw^2*(30 + 4*sw^2 - 80*sw^4) + 8*sw^4*(-3 - 10*sw^2 + 16*sw^4))) + 
       2*s*(-15*d*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
         3*d^2*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
         8*(9 - 30*sw^2 + 24*sw^4 + sw^2*(-30 + 74*sw^2 - 40*sw^4) + 
           8*sw^4*(3 - 5*sw^2 + 8*sw^4)))*t + 
       4*(9 - 30*sw^2 + 24*sw^4 + 8*sw^4*(3 - 20*sw^2 + 32*sw^4) - 
         2*sw^2*(15 - 76*sw^2 + 80*sw^4))*t^2)*(s - s*GaugeXi[W])^2 - 
     2^(3 + d)*d*mz^4*Pi^d*(mz^2 - s)*s*(1 - sw^2)^4*
      (s^2*(3*d^2*(-3 + 8*sw^2) + 4*d*(-3*(-3 + sw^2 + 4*sw^4) + 
           4*sw^2*(-3 - 5*sw^2 + 8*sw^4)) - 4*(9 + 6*sw^2 - 24*sw^4 + 
           4*sw^2*(-3 - 10*sw^2 + 16*sw^4))) + 
       2*s*(-15*d*(-3 + 8*sw^2) + 3*d^2*(-3 + 8*sw^2) - 
         24*(3 - 7*sw^2 + 4*sw^4) + 32*sw^2*(3 - 5*sw^2 + 8*sw^4))*t + 
       4*(-1 + 4*sw^2)*(9 - 12*sw^2 + 4*sw^2*(-3 + 8*sw^2))*t^2)*
      (sw - sw*GaugeXi[W])^2 + 16*d*mz^4*(mz^2 - s)*s*(1 - sw^2)^4*
      (3*d^2*(2*Pi)^d*s^2 - 2^(1 + d)*Pi^d*
        (s^2*(-6 + 4*sw^2 + 6*d^2*sw^2 + 16*sw^4 + 
           sw^2*(12 + 40*sw^2 - 64*sw^4) + 2*d*(3 - 4*sw^2 - 4*sw^4 + 
             2*sw^2*(-3 - 5*sw^2 + 8*sw^4))) + s*(-15*d*(-1 + 4*sw^2) + 
           d^2*(-3 + 12*sw^2) + 8*(-3 + 8*sw^2 - 4*sw^4 + 
             2*sw^2*(3 - 5*sw^2 + 8*sw^4)))*t + 2*(-3 + 8*sw^2)*
          (1 - 2*sw^2 + sw^2*(-2 + 8*sw^2))*t^2))*(sw - sw*GaugeXi[W])^2 - 
     16*(1 - d)*mz^4*(mz^2 - s)*s*(1 - sw^2)^4*(9*(-5 + d)*d^2*(2*Pi)^d*s^2 - 
       2^(1 + d)*Pi^d*(2*s^2*(9 + 6*sw^2 + 6*d^3*sw^2 - 24*sw^4 + 
           4*sw^2*(-3 - 10*sw^2 + 16*sw^4) - 3*d*(6 + sw^2 - 12*sw^4 + 
             4*sw^2*(-2 - 5*sw^2 + 8*sw^4)) + d^2*(-6*(sw^2 + 2*sw^4) + 
             sw^2*(-15 - 20*sw^2 + 32*sw^4))) + (-1 + d)*s*
          (-15*d*(-3 + 8*sw^2) + 3*d^2*(-3 + 8*sw^2) - 
           24*(3 - 7*sw^2 + 4*sw^4) + 32*sw^2*(3 - 5*sw^2 + 8*sw^4))*t + 
         2*(-1 + d)*(-1 + 4*sw^2)*(9 - 12*sw^2 + 4*sw^2*(-3 + 8*sw^2))*t^2))*
      GaugeXi[W]*(sw - sw*GaugeXi[W])^2 + 2^(3 + d)*d*mz^4*Pi^d*(mz^2 - s)*s*
      sw^4*(1 - sw^2)^2*(s^2*(3*d^2*(-3 + 8*sw^2) + 
         4*d*(-3*(-3 + sw^2 + 4*sw^4) + 4*sw^2*(-3 - 5*sw^2 + 8*sw^4)) - 
         4*(9 + 6*sw^2 - 24*sw^4 + 4*sw^2*(-3 - 10*sw^2 + 16*sw^4))) + 
       2*s*(-15*d*(-3 + 8*sw^2) + 3*d^2*(-3 + 8*sw^2) - 
         24*(3 - 7*sw^2 + 4*sw^4) + 32*sw^2*(3 - 5*sw^2 + 8*sw^4))*t + 
       4*(-1 + 4*sw^2)*(9 - 12*sw^2 + 4*sw^2*(-3 + 8*sw^2))*t^2)*
      (Sqrt[1 - sw^2] - Sqrt[1 - sw^2]*GaugeXi[W])^2 - 
     16*d*mz^4*(mz^2 - s)*s*sw^4*(1 - sw^2)^2*(3*d^2*(2*Pi)^d*s^2 - 
       2^(1 + d)*Pi^d*(s^2*(-6 + 4*sw^2 + 6*d^2*sw^2 + 16*sw^4 + 
           sw^2*(12 + 40*sw^2 - 64*sw^4) + 2*d*(3 - 4*sw^2 - 4*sw^4 + 
             2*sw^2*(-3 - 5*sw^2 + 8*sw^4))) + s*(-15*d*(-1 + 4*sw^2) + 
           d^2*(-3 + 12*sw^2) + 8*(-3 + 8*sw^2 - 4*sw^4 + 
             2*sw^2*(3 - 5*sw^2 + 8*sw^4)))*t + 2*(-3 + 8*sw^2)*
          (1 - 2*sw^2 + sw^2*(-2 + 8*sw^2))*t^2))*
      (Sqrt[1 - sw^2] - Sqrt[1 - sw^2]*GaugeXi[W])^2 + 
     3*d*(2*Pi)^d*(mz^2 - s)^2*s*(1 - sw^2)^2*(3 - 10*sw^2 + 8*sw^4)*
      ((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 4*t^2)*(-1 + GaugeXi[W])^2*
      (s + mz^2*(1 - sw^2) - mz^2*(1 - sw^2)*GaugeXi[W]) - 
     3*d*(2*Pi)^d*(mz^2 - s)*s*(3 - 4*sw^2)*(1 - sw^2)^2*
      ((-2 + d)*s^2*(-2 + 4*sw^2 + d*(1 - 4*sw^2) + sw^2*(4 + 8*sw^2)) - 
       2*s*(-8 + 16*sw^2 - 16*sw^2*(-1 + sw^2) - 5*d*(-1 + 4*sw^2) + 
         d^2*(-1 + 4*sw^2))*t - 4*(-1 + 2*sw^2 + sw^2*(2 - 8*sw^2))*t^2)*
      (-1 + GaugeXi[W])^2*(-s^2 + 2*(-3 + 2*d)*mz^2*s*(1 - sw^2) + 
       mz^4*(1 - sw^2)^2 + (mz^2*s*(1 - sw^2) - mz^4*(1 - sw^2)^2)*
        GaugeXi[W]) + 6*d*(mz^2 - s)^2*sw^2*(1 - sw^2)^2*(-1 + GaugeXi[W])^2*
      (3*d^2*(2*Pi)^d*s^4 - 2^(1 + d)*(-3 + 2*d)*mz^2*Pi^d*s*(1 - sw^2)*
        (-3 + 4*sw^2)*(s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2)) + 
         2*s*(8 - 5*d + d^2 - 8*sw^2)*t + 4*(1 - 4*sw^2)*t^2) + 
       2^(1 + d)*Pi^d*s^2*(s^2*(-6 - 4*sw^2 + 16*sw^4 + d^2*(-3 + 2*sw^2) - 
           2*d*(-3 + sw^2 + 4*sw^4)) + s*(8 - 5*d + d^2 - 8*sw^2)*
          (-3 + 4*sw^2)*t - 2*(3 - 16*sw^2 + 16*sw^4)*t^2) + 
       mz^4*(1 - sw^2)^2*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
          (s^2*(6 + 4*sw^2 - 2*d^2*sw^2 - 16*sw^4 + 2*d*(-3 + sw^2 + 4*
                sw^4)) - s*(8 - 5*d + d^2 - 8*sw^2)*(-3 + 4*sw^2)*t + 
           2*(3 - 16*sw^2 + 16*sw^4)*t^2)) + mz^2*(1 - sw^2)*
        (-s + mz^2*(1 - sw^2))*(-9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
          (s^2*(-6 - 4*sw^2 + 16*sw^4 + d^2*(3 + 2*sw^2) - 
             2*d*(-3 + sw^2 + 4*sw^4)) + s*(8 - 5*d + d^2 - 8*sw^2)*
            (-3 + 4*sw^2)*t - 2*(3 - 16*sw^2 + 16*sw^4)*t^2))*GaugeXi[W]) - 
     8*d*(mz^2 - s)^2*s^2*sw^2*(1 - sw^2)^2*(3*d^2*(2*Pi)^d*s^2 - 
       2^(1 + d)*Pi^d*(s^2*(-6 + 4*sw^2 + 3*d^2*sw^2 + 16*sw^4 + 
           d*(6 - 8*sw^2 - 8*sw^4)) + s*(24 - 15*d + 3*d^2 - 16*sw^2)*
          (-1 + 2*sw^2)*t - 2*(3 - 14*sw^2 + 16*sw^4)*t^2) - 
       2^(1 + d)*Pi^d*(-1 + 2*sw^2)*(s^2*(-3*d^2 + 4*d*(3 + 2*sw^2) - 
           4*(3 + 4*sw^2)) + 2*s*(-24 + 15*d - 3*d^2 + 16*sw^2)*t + 
         4*(-3 + 8*sw^2)*t^2)*GaugeXi[W] - 
       (-3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
          (s^2*(-6 + 4*sw^2 + 3*d^2*sw^2 + 16*sw^4 + 
             d*(6 - 8*sw^2 - 8*sw^4)) + s*(24 - 15*d + 3*d^2 - 16*sw^2)*
            (-1 + 2*sw^2)*t - 2*(3 - 14*sw^2 + 16*sw^4)*t^2))*GaugeXi[W]^2) + 
     16*d*(mz^2 - s)^2*s^2*sw^4*(1 - sw^2)^2*(3*d^2*(2*Pi)^d*s^2 + 
       2^(1 + d)*Pi^d*(2*s^2*(3 + 10*sw^2 - 16*sw^4 + 
           d*(-3 - 5*sw^2 + 8*sw^4)) + s*(-15*d + 3*d^2 + 
           8*(3 - 5*sw^2 + 8*sw^4))*t + 2*(3 - 20*sw^2 + 32*sw^4)*t^2) - 
       2^(1 + d)*Pi^d*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
           4*d*(-3 - 5*sw^2 + 8*sw^4)) + 2*s*(-15*d + 3*d^2 + 
           8*(3 - 5*sw^2 + 8*sw^4))*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2)*
        GaugeXi[W] + (3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
          (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
           s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
           2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[W]^2) + 
     4*d*(mz^2 - s)*s^3*sw^2*(1 - sw^2)^2*(9*d^2*(2*Pi)^d*s^2 + 
       2^(1 + d)*Pi^d*(s^2*(d^2*(-9 + 12*sw^2) - 6*d*(-3 + sw^2 + 4*sw^4) + 
           8*d*sw^2*(-3 - 5*sw^2 + 8*sw^4) + 2*(-9 - 6*sw^2 + 24*sw^4 + 
             sw^2*(12 + 40*sw^2 - 64*sw^4))) + s*(-15*d*(-3 + 8*sw^2) + 
           3*d^2*(-3 + 8*sw^2) - 24*(3 - 7*sw^2 + 4*sw^4) + 
           32*sw^2*(3 - 5*sw^2 + 8*sw^4))*t + 2*(-1 + 4*sw^2)*
          (9 - 12*sw^2 + 4*sw^2*(-3 + 8*sw^2))*t^2) - 
       2*(-9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
          (2*s^2*(-9 - 6*sw^2 + 6*d^2*sw^2 + 24*sw^4 + 
             sw^2*(12 + 40*sw^2 - 64*sw^4) - 3*d*(-3 + sw^2 + 4*sw^4) + 
             4*d*sw^2*(-3 - 5*sw^2 + 8*sw^4)) + s*(-15*d*(-3 + 8*sw^2) + 
             3*d^2*(-3 + 8*sw^2) - 24*(3 - 7*sw^2 + 4*sw^4) + 
             32*sw^2*(3 - 5*sw^2 + 8*sw^4))*t + 2*(-1 + 4*sw^2)*
            (9 - 12*sw^2 + 4*sw^2*(-3 + 8*sw^2))*t^2))*GaugeXi[W] + 
       (9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
          (s^2*(d^2*(-9 + 12*sw^2) - 6*d*(-3 + sw^2 + 4*sw^4) + 
             8*d*sw^2*(-3 - 5*sw^2 + 8*sw^4) + 2*(-9 - 6*sw^2 + 24*sw^4 + 
               sw^2*(12 + 40*sw^2 - 64*sw^4))) + s*(-15*d*(-3 + 8*sw^2) + 
             3*d^2*(-3 + 8*sw^2) - 24*(3 - 7*sw^2 + 4*sw^4) + 
             32*sw^2*(3 - 5*sw^2 + 8*sw^4))*t + 2*(-1 + 4*sw^2)*
            (9 - 12*sw^2 + 4*sw^2*(-3 + 8*sw^2))*t^2))*GaugeXi[W]^2) + 
     8*d*(mz^2 - s)*s^3*sw^2*(1 - sw^2)^2*(9*d^2*(2*Pi)^d*s^2 + 
       2^(1 + d)*Pi^d*(s^2*(-6 + 4*sw^2 + 16*sw^4 + 3*d^2*(-2 + 2*sw^2) + 
           sw^2*(12 + 40*sw^2 - 64*sw^4) + 2*d*(3 - 4*sw^2 - 4*sw^4 + 
             2*sw^2*(-3 - 5*sw^2 + 8*sw^4))) + s*(-15*d*(-1 + 4*sw^2) + 
           d^2*(-3 + 12*sw^2) + 8*(-3 + 8*sw^2 - 4*sw^4 + 
             2*sw^2*(3 - 5*sw^2 + 8*sw^4)))*t + 2*(-3 + 8*sw^2)*
          (1 - 2*sw^2 + sw^2*(-2 + 8*sw^2))*t^2) - 
       2*(-3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
          (s^2*(-6 + 4*sw^2 + 6*d^2*sw^2 + 16*sw^4 + sw^2*(12 + 40*sw^2 - 64*
                sw^4) + 2*d*(3 - 4*sw^2 - 4*sw^4 + 2*sw^2*(-3 - 5*sw^2 + 
                 8*sw^4))) + s*(-15*d*(-1 + 4*sw^2) + d^2*(-3 + 12*sw^2) + 
             8*(-3 + 8*sw^2 - 4*sw^4 + 2*sw^2*(3 - 5*sw^2 + 8*sw^4)))*t + 
           2*(-3 + 8*sw^2)*(1 - 2*sw^2 + sw^2*(-2 + 8*sw^2))*t^2))*
        GaugeXi[W] + (9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
          (s^2*(-6 + 4*sw^2 + 16*sw^4 + 3*d^2*(-2 + 2*sw^2) + 
             sw^2*(12 + 40*sw^2 - 64*sw^4) + 2*d*(3 - 4*sw^2 - 4*sw^4 + 2*
                sw^2*(-3 - 5*sw^2 + 8*sw^4))) + s*(-15*d*(-1 + 4*sw^2) + 
             d^2*(-3 + 12*sw^2) + 8*(-3 + 8*sw^2 - 4*sw^4 + 2*sw^2*
                (3 - 5*sw^2 + 8*sw^4)))*t + 2*(-3 + 8*sw^2)*
            (1 - 2*sw^2 + sw^2*(-2 + 8*sw^2))*t^2))*GaugeXi[W]^2)))/
   (2^(2*(4 + d))*(-1 + d)*d*mz^4*Pi^(2*d)*(mz^2 - s)^3*s^2*sw^6*(1 - sw^2)^5*
    (-1 + GaugeXi[W])^2), ((I/9)*2^(-8 - 5*d)*EL^6*
    (-3*(2*Pi)^(4*d)*(mz^2 - s)^2*s*(1 - sw^2)^2*(3 - 10*sw^2 + 8*sw^4)*
      ((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 4*t^2)*(-1 + GaugeXi[W])^2*
      (s - 4*mz^2*(1 - sw^2)*GaugeXi[W]) + 3*2^(1 + 4*d)*Pi^(4*d)*
      (mz^2 - s)^2*s*sw^2*(3 - 4*sw^2)*(1 - sw^2)^2*
      (s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2)) + 2*s*(8 - 5*d + d^2 - 8*sw^2)*
        t + 4*(1 - 4*sw^2)*t^2)*(-1 + GaugeXi[W])^2*
      (s - 4*mz^2*(1 - sw^2)*GaugeXi[W]) - (2*Pi)^(4*d)*s^3*(1 - sw^2)^2*
      (s^2*(3*d^2*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
         4*d*(-9 + 30*sw^2 - 24*sw^4 + sw^2*(30 - 22*sw^2 - 40*sw^4) + 
           8*sw^4*(-3 - 5*sw^2 + 8*sw^4)) - 4*(-9 + 30*sw^2 - 24*sw^4 + 
           sw^2*(30 + 4*sw^2 - 80*sw^4) + 8*sw^4*(-3 - 10*sw^2 + 16*sw^4))) + 
       2*s*(-15*d*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
         3*d^2*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
         8*(9 - 30*sw^2 + 24*sw^4 + sw^2*(-30 + 74*sw^2 - 40*sw^4) + 
           8*sw^4*(3 - 5*sw^2 + 8*sw^4)))*t + 
       4*(9 - 30*sw^2 + 24*sw^4 + 8*sw^4*(3 - 20*sw^2 + 32*sw^4) - 
         2*sw^2*(15 - 76*sw^2 + 80*sw^4))*t^2)*(-1 + GaugeXi[W])^2*
      (s - 4*mz^2*(1 - sw^2)*GaugeXi[W]) + 2^(1 + 4*d)*mz^4*Pi^(4*d)*s*sw^4*
      (1 - sw^2)^2*(s^2*(3*d^2*(3 - 10*sw^2 + 16*sw^4 + 
           2*sw^2*(-5 + 8*sw^2)) + 4*d*(-9 + 30*sw^2 - 24*sw^4 + 
           sw^2*(30 - 22*sw^2 - 40*sw^4) + 8*sw^4*(-3 - 5*sw^2 + 8*sw^4)) - 
         4*(-9 + 30*sw^2 - 24*sw^4 + sw^2*(30 + 4*sw^2 - 80*sw^4) + 
           8*sw^4*(-3 - 10*sw^2 + 16*sw^4))) + 
       2*s*(-15*d*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
         3*d^2*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
         8*(9 - 30*sw^2 + 24*sw^4 + sw^2*(-30 + 74*sw^2 - 40*sw^4) + 
           8*sw^4*(3 - 5*sw^2 + 8*sw^4)))*t + 
       4*(9 - 30*sw^2 + 24*sw^4 + 8*sw^4*(3 - 20*sw^2 + 32*sw^4) - 
         2*sw^2*(15 - 76*sw^2 + 80*sw^4))*t^2)*(-1 + GaugeXi[W])^2*
      (s - 4*mz^2*(1 - sw^2)*GaugeXi[W]) - mz^4*(2*Pi)^(4*d)*s*(1 - 2*sw^2)^2*
      (1 - sw^2)^2*(s^2*(3*d^2*(3 - 10*sw^2 + 16*sw^4 + 
           2*sw^2*(-5 + 8*sw^2)) + 4*d*(-9 + 30*sw^2 - 24*sw^4 + 
           sw^2*(30 - 22*sw^2 - 40*sw^4) + 8*sw^4*(-3 - 5*sw^2 + 8*sw^4)) - 
         4*(-9 + 30*sw^2 - 24*sw^4 + sw^2*(30 + 4*sw^2 - 80*sw^4) + 
           8*sw^4*(-3 - 10*sw^2 + 16*sw^4))) + 
       2*s*(-15*d*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
         3*d^2*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
         8*(9 - 30*sw^2 + 24*sw^4 + sw^2*(-30 + 74*sw^2 - 40*sw^4) + 
           8*sw^4*(3 - 5*sw^2 + 8*sw^4)))*t + 
       4*(9 - 30*sw^2 + 24*sw^4 + 8*sw^4*(3 - 20*sw^2 + 32*sw^4) - 
         2*sw^2*(15 - 76*sw^2 + 80*sw^4))*t^2)*(-1 + GaugeXi[W])^2*
      (s - 4*mz^2*(1 - sw^2)*GaugeXi[W]) + 2^(1 + 4*d)*mz^4*Pi^(4*d)*s*
      (1 - sw^2)^4*(s^2*(3*d^2*(3 - 10*sw^2 + 16*sw^4 + 
           2*sw^2*(-5 + 8*sw^2)) + 4*d*(-9 + 30*sw^2 - 24*sw^4 + 
           sw^2*(30 - 22*sw^2 - 40*sw^4) + 8*sw^4*(-3 - 5*sw^2 + 8*sw^4)) - 
         4*(-9 + 30*sw^2 - 24*sw^4 + sw^2*(30 + 4*sw^2 - 80*sw^4) + 
           8*sw^4*(-3 - 10*sw^2 + 16*sw^4))) + 
       2*s*(-15*d*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
         3*d^2*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
         8*(9 - 30*sw^2 + 24*sw^4 + sw^2*(-30 + 74*sw^2 - 40*sw^4) + 
           8*sw^4*(3 - 5*sw^2 + 8*sw^4)))*t + 
       4*(9 - 30*sw^2 + 24*sw^4 + 8*sw^4*(3 - 20*sw^2 + 32*sw^4) - 
         2*sw^2*(15 - 76*sw^2 + 80*sw^4))*t^2)*(-1 + GaugeXi[W])^2*
      (s - 4*mz^2*(1 - sw^2)*GaugeXi[W]) - 3*(2*Pi)^(4*d)*(mz^2 - s)*
      (3 - 4*sw^2)*(1 - sw^2)^2*((-2 + d)*s^2*(-2 + 4*sw^2 + d*(1 - 4*sw^2) + 
         sw^2*(4 + 8*sw^2)) - 2*s*(-8 + 16*sw^2 - 16*sw^2*(-1 + sw^2) - 
         5*d*(-1 + 4*sw^2) + d^2*(-1 + 4*sw^2))*t - 
       4*(-1 + 2*sw^2 + sw^2*(2 - 8*sw^2))*t^2)*(s - s*GaugeXi[W])^2*
      (s - 4*mz^2*(1 - sw^2)*GaugeXi[W]) + (2*Pi)^(4*d)*(mz^2 - s)*
      (1 - 2*sw^2)*(1 - sw^2)^2*((-2 + d)*s^2*(18 - 24*sw^2 - 
         8*sw^2*(3 + 4*sw^2) + 3*d*(-3 + 8*sw^2)) + 
       2*s*(-72 + 96*sw^2 + sw^2*(96 - 64*sw^2) - 15*d*(-3 + 8*sw^2) + 
         3*d^2*(-3 + 8*sw^2))*t + 4*(-9 + 12*sw^2 - 4*sw^2*(-3 + 8*sw^2))*
        t^2)*(s - s*GaugeXi[W])^2*(s - 4*mz^2*(1 - sw^2)*GaugeXi[W]) + 
     4^(1 + 2*d)*mz^4*Pi^(4*d)*(mz^2 - s)*(1 - sw^2)^4*
      (s^2*(3*d^2*(-3 + 8*sw^2) + 4*d*(-3*(-3 + sw^2 + 4*sw^4) + 
           4*sw^2*(-3 - 5*sw^2 + 8*sw^4)) - 4*(9 + 6*sw^2 - 24*sw^4 + 
           4*sw^2*(-3 - 10*sw^2 + 16*sw^4))) + 
       2*s*(-15*d*(-3 + 8*sw^2) + 3*d^2*(-3 + 8*sw^2) - 
         24*(3 - 7*sw^2 + 4*sw^4) + 32*sw^2*(3 - 5*sw^2 + 8*sw^4))*t + 
       4*(-1 + 4*sw^2)*(9 - 12*sw^2 + 4*sw^2*(-3 + 8*sw^2))*t^2)*
      (sw - sw*GaugeXi[W])^2*(s - 4*mz^2*(1 - sw^2)*GaugeXi[W]) - 
     4^(1 + 2*d)*mz^4*Pi^(4*d)*(mz^2 - s)*sw^4*(1 - sw^2)^2*
      (s^2*(3*d^2*(-3 + 8*sw^2) + 4*d*(-3*(-3 + sw^2 + 4*sw^4) + 
           4*sw^2*(-3 - 5*sw^2 + 8*sw^4)) - 4*(9 + 6*sw^2 - 24*sw^4 + 
           4*sw^2*(-3 - 10*sw^2 + 16*sw^4))) + 
       2*s*(-15*d*(-3 + 8*sw^2) + 3*d^2*(-3 + 8*sw^2) - 
         24*(3 - 7*sw^2 + 4*sw^4) + 32*sw^2*(3 - 5*sw^2 + 8*sw^4))*t + 
       4*(-1 + 4*sw^2)*(9 - 12*sw^2 + 4*sw^2*(-3 + 8*sw^2))*t^2)*
      (Sqrt[1 - sw^2] - Sqrt[1 - sw^2]*GaugeXi[W])^2*
      (s - 4*mz^2*(1 - sw^2)*GaugeXi[W]) + 2^(2 + 3*d)*mz^4*Pi^(3*d)*
      (mz^2 - s)*sw^2*(1 - 2*sw^2)*(1 - sw^2)^3*(-1 + GaugeXi[W])^2*
      (9*d^2*(2*Pi)^d*s^3 - 2^(1 + d)*Pi^d*s*
        (2*s^2*(-9 - 6*sw^2 + 6*d^2*sw^2 + 24*sw^4 + 
           sw^2*(12 + 40*sw^2 - 64*sw^4) - 3*d*(-3 + sw^2 + 4*sw^4) + 
           4*d*sw^2*(-3 - 5*sw^2 + 8*sw^4)) + s*(-15*d*(-3 + 8*sw^2) + 
           3*d^2*(-3 + 8*sw^2) - 24*(3 - 7*sw^2 + 4*sw^4) + 
           32*sw^2*(3 - 5*sw^2 + 8*sw^4))*t + 2*(-1 + 4*sw^2)*
          (9 - 12*sw^2 + 4*sw^2*(-3 + 8*sw^2))*t^2) + 
       4*mz^2*(1 - sw^2)*(-9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
          (2*s^2*(-9 - 6*sw^2 + 6*d^2*sw^2 + 24*sw^4 + 
             sw^2*(12 + 40*sw^2 - 64*sw^4) - 3*d*(-3 + sw^2 + 4*sw^4) + 
             4*d*sw^2*(-3 - 5*sw^2 + 8*sw^4)) + s*(-15*d*(-3 + 8*sw^2) + 
             3*d^2*(-3 + 8*sw^2) - 24*(3 - 7*sw^2 + 4*sw^4) + 
             32*sw^2*(3 - 5*sw^2 + 8*sw^4))*t + 2*(-1 + 4*sw^2)*
            (9 - 12*sw^2 + 4*sw^2*(-3 + 8*sw^2))*t^2))*GaugeXi[W]) + 
     8^(1 + d)*mz^4*Pi^(3*d)*(mz^2 - s)*sw^2*(1 - 2*sw^2)*(1 - sw^2)^3*
      (-1 + GaugeXi[W])^2*(3*d^2*(2*Pi)^d*s^3 - 2^(1 + d)*Pi^d*s*
        (s^2*(-6 + 4*sw^2 + 6*d^2*sw^2 + 16*sw^4 + 
           sw^2*(12 + 40*sw^2 - 64*sw^4) + 2*d*(3 - 4*sw^2 - 4*sw^4 + 
             2*sw^2*(-3 - 5*sw^2 + 8*sw^4))) + s*(-15*d*(-1 + 4*sw^2) + 
           d^2*(-3 + 12*sw^2) + 8*(-3 + 8*sw^2 - 4*sw^4 + 
             2*sw^2*(3 - 5*sw^2 + 8*sw^4)))*t + 2*(-3 + 8*sw^2)*
          (1 - 2*sw^2 + sw^2*(-2 + 8*sw^2))*t^2) + 4*mz^2*(1 - sw^2)*
        (-3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
          (s^2*(-6 + 4*sw^2 + 6*d^2*sw^2 + 16*sw^4 + sw^2*(12 + 40*sw^2 - 64*
                sw^4) + 2*d*(3 - 4*sw^2 - 4*sw^4 + 2*sw^2*(-3 - 5*sw^2 + 
                 8*sw^4))) + s*(-15*d*(-1 + 4*sw^2) + d^2*(-3 + 12*sw^2) + 
             8*(-3 + 8*sw^2 - 4*sw^4 + 2*sw^2*(3 - 5*sw^2 + 8*sw^4)))*t + 
           2*(-3 + 8*sw^2)*(1 - 2*sw^2 + sw^2*(-2 + 8*sw^2))*t^2))*
        GaugeXi[W]) - 8^(1 + d)*mz^4*Pi^(3*d)*(mz^2 - s)*(1 - sw^2)^4*
      (sw - sw*GaugeXi[W])^2*(3*d^2*(2*Pi)^d*s^3 - 2^(1 + d)*Pi^d*s*
        (s^2*(-6 + 4*sw^2 + 6*d^2*sw^2 + 16*sw^4 + 
           sw^2*(12 + 40*sw^2 - 64*sw^4) + 2*d*(3 - 4*sw^2 - 4*sw^4 + 
             2*sw^2*(-3 - 5*sw^2 + 8*sw^4))) + s*(-15*d*(-1 + 4*sw^2) + 
           d^2*(-3 + 12*sw^2) + 8*(-3 + 8*sw^2 - 4*sw^4 + 
             2*sw^2*(3 - 5*sw^2 + 8*sw^4)))*t + 2*(-3 + 8*sw^2)*
          (1 - 2*sw^2 + sw^2*(-2 + 8*sw^2))*t^2) + 4*mz^2*(1 - sw^2)*
        (-3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
          (s^2*(-6 + 4*sw^2 + 6*d^2*sw^2 + 16*sw^4 + sw^2*(12 + 40*sw^2 - 64*
                sw^4) + 2*d*(3 - 4*sw^2 - 4*sw^4 + 2*sw^2*(-3 - 5*sw^2 + 
                 8*sw^4))) + s*(-15*d*(-1 + 4*sw^2) + d^2*(-3 + 12*sw^2) + 
             8*(-3 + 8*sw^2 - 4*sw^4 + 2*sw^2*(3 - 5*sw^2 + 8*sw^4)))*t + 
           2*(-3 + 8*sw^2)*(1 - 2*sw^2 + sw^2*(-2 + 8*sw^2))*t^2))*
        GaugeXi[W]) + 8^(1 + d)*mz^4*Pi^(3*d)*(mz^2 - s)*sw^4*(1 - sw^2)^2*
      (Sqrt[1 - sw^2] - Sqrt[1 - sw^2]*GaugeXi[W])^2*
      (3*d^2*(2*Pi)^d*s^3 - 2^(1 + d)*Pi^d*s*
        (s^2*(-6 + 4*sw^2 + 6*d^2*sw^2 + 16*sw^4 + 
           sw^2*(12 + 40*sw^2 - 64*sw^4) + 2*d*(3 - 4*sw^2 - 4*sw^4 + 
             2*sw^2*(-3 - 5*sw^2 + 8*sw^4))) + s*(-15*d*(-1 + 4*sw^2) + 
           d^2*(-3 + 12*sw^2) + 8*(-3 + 8*sw^2 - 4*sw^4 + 
             2*sw^2*(3 - 5*sw^2 + 8*sw^4)))*t + 2*(-3 + 8*sw^2)*
          (1 - 2*sw^2 + sw^2*(-2 + 8*sw^2))*t^2) + 4*mz^2*(1 - sw^2)*
        (-3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
          (s^2*(-6 + 4*sw^2 + 6*d^2*sw^2 + 16*sw^4 + sw^2*(12 + 40*sw^2 - 64*
                sw^4) + 2*d*(3 - 4*sw^2 - 4*sw^4 + 2*sw^2*(-3 - 5*sw^2 + 
                 8*sw^4))) + s*(-15*d*(-1 + 4*sw^2) + d^2*(-3 + 12*sw^2) + 
             8*(-3 + 8*sw^2 - 4*sw^4 + 2*sw^2*(3 - 5*sw^2 + 8*sw^4)))*t + 
           2*(-3 + 8*sw^2)*(1 - 2*sw^2 + sw^2*(-2 + 8*sw^2))*t^2))*
        GaugeXi[W]) - 8^(1 + d)*Pi^(3*d)*(mz^2 - s)^2*s*sw^4*(1 - sw^2)^2*
      (3*d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
        (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
         s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
         2*(3 - 20*sw^2 + 32*sw^4)*t^2) - 2*(3*d^2*(2*Pi)^d*s^3 + 
         2^(1 + d)*Pi^d*s*(2*s^2*(3 + 10*sw^2 - 16*sw^4 + 
             d*(-3 - 5*sw^2 + 8*sw^4)) + s*(-15*d + 3*d^2 + 
             8*(3 - 5*sw^2 + 8*sw^4))*t + 2*(3 - 20*sw^2 + 32*sw^4)*t^2) + 
         2^(1 + d)*mz^2*Pi^d*(1 - sw^2)*(s^2*(12 + 3*d^2 + 40*sw^2 - 
             64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
           2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
           4*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[W] + 
       (3*d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
          (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
           s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
           2*(3 - 20*sw^2 + 32*sw^4)*t^2) + 2^(3 + d)*mz^2*Pi^d*(1 - sw^2)*
          (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*
                sw^4)) + 2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
           4*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[W]^2 - 
       4*mz^2*(1 - sw^2)*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
          (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
           s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
           2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[W]^3) - 
     2^(2 + 3*d)*Pi^(3*d)*(mz^2 - s)*s^2*sw^2*(1 - sw^2)^2*
      (9*d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
        (s^2*(-6 + 4*sw^2 + 16*sw^4 + 3*d^2*(-2 + 2*sw^2) + 
           sw^2*(12 + 40*sw^2 - 64*sw^4) + 2*d*(3 - 4*sw^2 - 4*sw^4 + 
             2*sw^2*(-3 - 5*sw^2 + 8*sw^4))) + s*(-15*d*(-1 + 4*sw^2) + 
           d^2*(-3 + 12*sw^2) + 8*(-3 + 8*sw^2 - 4*sw^4 + 
             2*sw^2*(3 - 5*sw^2 + 8*sw^4)))*t + 2*(-3 + 8*sw^2)*
          (1 - 2*sw^2 + sw^2*(-2 + 8*sw^2))*t^2) - 2*(s + 2*mz^2*(1 - sw^2))*
        (-3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
          (s^2*(-6 + 4*sw^2 + 6*d^2*sw^2 + 16*sw^4 + sw^2*(12 + 40*sw^2 - 64*
                sw^4) + 2*d*(3 - 4*sw^2 - 4*sw^4 + 2*sw^2*(-3 - 5*sw^2 + 
                 8*sw^4))) + s*(-15*d*(-1 + 4*sw^2) + d^2*(-3 + 12*sw^2) + 
             8*(-3 + 8*sw^2 - 4*sw^4 + 2*sw^2*(3 - 5*sw^2 + 8*sw^4)))*t + 
           2*(-3 + 8*sw^2)*(1 - 2*sw^2 + sw^2*(-2 + 8*sw^2))*t^2))*
        GaugeXi[W] + (9*d^2*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
          (s^2*(-6 + 4*sw^2 + 16*sw^4 + 3*d^2*(-2 + 2*sw^2) + 
             sw^2*(12 + 40*sw^2 - 64*sw^4) + 2*d*(3 - 4*sw^2 - 4*sw^4 + 2*
                sw^2*(-3 - 5*sw^2 + 8*sw^4))) + s*(-15*d*(-1 + 4*sw^2) + 
             d^2*(-3 + 12*sw^2) + 8*(-3 + 8*sw^2 - 4*sw^4 + 2*sw^2*
                (3 - 5*sw^2 + 8*sw^4)))*t + 2*(-3 + 8*sw^2)*
            (1 - 2*sw^2 + sw^2*(-2 + 8*sw^2))*t^2) + 8*mz^2*(1 - sw^2)*
          (-3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
            (s^2*(-6 + 4*sw^2 + 6*d^2*sw^2 + 16*sw^4 + sw^2*(12 + 40*sw^2 - 
                 64*sw^4) + 2*d*(3 - 4*sw^2 - 4*sw^4 + 2*sw^2*(-3 - 5*sw^2 + 
                   8*sw^4))) + s*(-15*d*(-1 + 4*sw^2) + d^2*(-3 + 12*sw^2) + 
               8*(-3 + 8*sw^2 - 4*sw^4 + 2*sw^2*(3 - 5*sw^2 + 8*sw^4)))*t + 
             2*(-3 + 8*sw^2)*(1 - 2*sw^2 + sw^2*(-2 + 8*sw^2))*t^2)))*
        GaugeXi[W]^2 - 4*mz^2*(1 - sw^2)*(-3*d^2*(2*Pi)^d*s^2 + 
         2^(1 + d)*Pi^d*(s^2*(-6 + 4*sw^2 + 6*d^2*sw^2 + 16*sw^4 + 
             sw^2*(12 + 40*sw^2 - 64*sw^4) + 2*d*(3 - 4*sw^2 - 4*sw^4 + 2*
                sw^2*(-3 - 5*sw^2 + 8*sw^4))) + s*(-15*d*(-1 + 4*sw^2) + 
             d^2*(-3 + 12*sw^2) + 8*(-3 + 8*sw^2 - 4*sw^4 + 2*sw^2*
                (3 - 5*sw^2 + 8*sw^4)))*t + 2*(-3 + 8*sw^2)*
            (1 - 2*sw^2 + sw^2*(-2 + 8*sw^2))*t^2))*GaugeXi[W]^3) - 
     4*(mz^2 - s)^2*s*sw^2*(1 - sw^2)^2*(2^(1 + 4*d)*(-1 + d)*Pi^(4*d)*
        (-1 + 2*sw^2)*(s*(-6 + 3*d - 8*sw^2) + 2*(-3 + 8*sw^2)*t)*
        (-1 + GaugeXi[W])^2*(s - 2*mz^2*(1 - sw^2)*GaugeXi[W])^2 + 
       2^(1 + 4*d)*Pi^(4*d)*s*(3 - 14*sw^2 + 16*sw^4)*(-1 + GaugeXi[W])^2*
        (d*s^2 - 4*d*mz^2*s*(1 - sw^2)*GaugeXi[W] + 4*(-1 + d)*mz^4*
          (1 - sw^2)^2*GaugeXi[W]^2) + (2*Pi)^(4*d)*(1 - 2*sw^2)*
        (s*(-12 + 3*d + 8*sw^2) + 2*(-3 + 8*sw^2)*t)*(-1 + GaugeXi[W])^2*
        (s*(d*s + 2*t) - 4*mz^2*(1 - sw^2)*(d*s + 2*t)*GaugeXi[W] + 
         4*(-1 + d)*mz^4*(1 - sw^2)^2*GaugeXi[W]^2) + 2*(1 - d)*(1 - 2*sw^2)*
        ((2*Pi)^(4*d)*s^2*(-6 + 3*d - 8*sw^2)*t - 2^(1 + 4*d)*Pi^(4*d)*s*
          (-6 + 3*d - 8*sw^2)*(s + 2*mz^2*(1 - sw^2))*t*GaugeXi[W] - 
         (-((2*Pi)^(4*d)*s^2*(-6 + 3*d - 8*sw^2)*t) - 2^(3 + 4*d)*mz^2*
            Pi^(4*d)*s*(-6 + 3*d - 8*sw^2)*(1 - sw^2)*t + 2^(1 + 4*d)*mz^4*
            Pi^(4*d)*(1 - sw^2)^2*(s*(-6 + 3*d - 8*sw^2) + 2*(-3 + 8*sw^2)*
              t))*GaugeXi[W]^2 + 4^(1 + 2*d)*mz^2*Pi^(4*d)*(1 - sw^2)*
          (s*(6 - 3*d + 8*sw^2)*t + mz^2*(1 - sw^2)*(s*(-6 + 3*d - 8*sw^2) + 
             2*(-3 + 8*sw^2)*t))*GaugeXi[W]^3 + 2^(1 + 4*d)*mz^4*Pi^(4*d)*
          (1 - sw^2)^2*(s*(6 - 3*d + 8*sw^2) + 2*(3 - 8*sw^2)*t)*
          GaugeXi[W]^4)) + 2^(1 + 3*d)*Pi^(3*d)*(mz^2 - s)*s^2*sw^2*
      (1 - sw^2)^2*((1 - d)*(2*Pi)^d*(s*(18 + 12*sw^2 - 48*sw^4 + 
           3*d*(-3 + 8*sw^2) + 8*sw^2*(-3 - 10*sw^2 + 16*sw^4)) - 
         2*(-1 + 4*sw^2)*(9 - 12*sw^2 + 4*sw^2*(-3 + 8*sw^2))*t)*
        (-1 + GaugeXi[W])^2*(s - 2*mz^2*(1 - sw^2)*GaugeXi[W])^2 - 
       2^(1 + d)*Pi^d*s*(1 - 4*sw^2)*(9 - 12*sw^2 + 4*sw^2*(-3 + 8*sw^2))*
        (-1 + GaugeXi[W])^2*(d*s^2 - 4*d*mz^2*s*(1 - sw^2)*GaugeXi[W] + 
         4*(-1 + d)*mz^4*(1 - sw^2)^2*GaugeXi[W]^2) + 
       (2*Pi)^d*(s*(3*d*(-3 + 8*sw^2) + 12*(3 - 7*sw^2 + 4*sw^4) - 
           16*sw^2*(3 - 5*sw^2 + 8*sw^4)) - 2*(-1 + 4*sw^2)*
          (9 - 12*sw^2 + 4*sw^2*(-3 + 8*sw^2))*t)*(-1 + GaugeXi[W])^2*
        (s*(d*s + 2*t) - 4*mz^2*(1 - sw^2)*(d*s + 2*t)*GaugeXi[W] + 
         4*(-1 + d)*mz^4*(1 - sw^2)^2*GaugeXi[W]^2) + 
       (1 - d)*(s - 2*mz^2*(1 - sw^2)*GaugeXi[W])*
        (s*(9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(9 + 6*sw^2 - 24*sw^4 + d*
                (-9 + 12*sw^2) + 4*sw^2*(-3 - 10*sw^2 + 16*sw^4)) - 
             (-1 + 4*sw^2)*(9 - 12*sw^2 + 4*sw^2*(-3 + 8*sw^2))*t)) - 
         2*(s + mz^2*(1 - sw^2))*(-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (s*(9 + 6*(1 + d)*sw^2 - 24*sw^4 + 2*sw^2*(-6 + 3*d - 20*sw^2 + 
                 32*sw^4)) - (-1 + 4*sw^2)*(9 - 12*sw^2 + 4*sw^2*
                (-3 + 8*sw^2))*t))*GaugeXi[W] + 
         (2^(2 + d)*mz^2*Pi^d*(1 - sw^2)*(s*(18 + 12*sw^2 - 48*sw^4 + 3*d*
                (-3 + 8*sw^2) + 8*sw^2*(-3 - 10*sw^2 + 16*sw^4)) - 
             2*(-1 + 4*sw^2)*(9 - 12*sw^2 + 4*sw^2*(-3 + 8*sw^2))*t) + 
           s*(9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(9 + 6*sw^2 - 24*sw^4 + 
                 d*(-9 + 12*sw^2) + 4*sw^2*(-3 - 10*sw^2 + 16*sw^4)) - 
               (-1 + 4*sw^2)*(9 - 12*sw^2 + 4*sw^2*(-3 + 8*sw^2))*t)))*
          GaugeXi[W]^2 - 2^(1 + d)*mz^2*Pi^d*(1 - sw^2)*
          (s*(18 + 12*sw^2 - 48*sw^4 + 3*d*(-3 + 8*sw^2) + 
             8*sw^2*(-3 - 10*sw^2 + 16*sw^4)) - 2*(-1 + 4*sw^2)*
            (9 - 12*sw^2 + 4*sw^2*(-3 + 8*sw^2))*t)*GaugeXi[W]^3) + 
       2*(1 - d)*(s^2*(-9*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(9 + 6*(1 + d)*sw^2 - 
             24*sw^4 + 2*sw^2*(-6 + 3*d - 20*sw^2 + 32*sw^4)))*t - 
         2*s*(2^(1 + d)*mz^2*Pi^d*(1 - sw^2)*(18 + 12*sw^2 - 48*sw^4 + 
             3*d*(-3 + 8*sw^2) + 8*sw^2*(-3 - 10*sw^2 + 16*sw^4)) + 
           s*(-9*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(9 + 6*(1 + d)*sw^2 - 24*sw^4 + 
               2*sw^2*(-6 + 3*d - 20*sw^2 + 32*sw^4))))*t*GaugeXi[W] + 
         (2^(3 + d)*mz^2*Pi^d*s*(1 - sw^2)*(18 + 12*sw^2 - 48*sw^4 + 
             3*d*(-3 + 8*sw^2) + 8*sw^2*(-3 - 10*sw^2 + 16*sw^4))*t + 
           s^2*(-9*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(9 + 6*(1 + d)*sw^2 - 24*
                sw^4 + 2*sw^2*(-6 + 3*d - 20*sw^2 + 32*sw^4)))*t - 
           2^(1 + d)*mz^4*Pi^d*(1 - sw^2)^2*(s*(18 + 12*sw^2 - 48*sw^4 + 3*d*
                (-3 + 8*sw^2) + 8*sw^2*(-3 - 10*sw^2 + 16*sw^4)) - 
             2*(-1 + 4*sw^2)*(9 - 12*sw^2 + 4*sw^2*(-3 + 8*sw^2))*t))*
          GaugeXi[W]^2 + 4*(-(mz^2*s*(1 - sw^2)*(-9*d*(2*Pi)^d + 
              2^(1 + d)*Pi^d*(9 + 6*(1 + d)*sw^2 - 24*sw^4 + 2*sw^2*
                 (-6 + 3*d - 20*sw^2 + 32*sw^4)))*t) + mz^4*(1 - sw^2)^2*
            (-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(9 + 6*(1 + d)*sw^2 - 
                 24*sw^4 + 2*sw^2*(-6 + 3*d - 20*sw^2 + 32*sw^4)) - 
               (-1 + 4*sw^2)*(9 - 12*sw^2 + 4*sw^2*(-3 + 8*sw^2))*t)))*
          GaugeXi[W]^3 - 2^(1 + d)*mz^4*Pi^d*(1 - sw^2)^2*
          (s*(18 + 12*sw^2 - 48*sw^4 + 3*d*(-3 + 8*sw^2) + 
             8*sw^2*(-3 - 10*sw^2 + 16*sw^4)) - 2*(-1 + 4*sw^2)*
            (9 - 12*sw^2 + 4*sw^2*(-3 + 8*sw^2))*t)*GaugeXi[W]^4))))/
   ((-1 + d)*mz^4*Pi^(5*d)*(mz^2 - s)^3*s*sw^6*(1 - sw^2)^5*
    (-1 + GaugeXi[W])^2), 
  ((I/9)*EL^6*((2^(6 + d)*(-1 + d)^2*Pi^d*
       (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
        2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
        4*(3 - 20*sw^2 + 32*sw^4)*t^2))/(d*s^2*(-mz^2 + s)) + 
     (2^(1 + d)*Pi^d*(-3 + 2*sw^2)*(-3 + 4*sw^2)*(3*s + 2*mz^2*(1 - sw^2))*
       (-((-2 + d)*s^2*(-2 + 4*sw^2 + d*(1 - 4*sw^2) + sw^2*(4 + 8*sw^2))) + 
        2*s*(-8 + 16*sw^2 - 16*sw^2*(-1 + sw^2) - 5*d*(-1 + 4*sw^2) + 
          d^2*(-1 + 4*sw^2))*t + 4*(-1 + 2*sw^2 + sw^2*(2 - 8*sw^2))*t^2))/
      (mz^2*(mz^2 - s)*s*(-mz^2 + s)*sw^4*(1 - sw^2)^2) - 
     (2^(1 + d)*Pi^d*(-1 + 2*sw^2)*(3*s + 2*mz^2*(1 - sw^2))*
       ((-2 + d)*s^2*(18 - 24*sw^2 - 8*sw^2*(3 + 4*sw^2) + 
          3*d*(-3 + 8*sw^2)) + 2*s*(-72 + 96*sw^2 + sw^2*(96 - 64*sw^2) - 
          15*d*(-3 + 8*sw^2) + 3*d^2*(-3 + 8*sw^2))*t + 
        4*(-9 + 12*sw^2 - 4*sw^2*(-3 + 8*sw^2))*t^2))/
      (mz^2*(mz^2 - s)*s*(-mz^2 + s)*sw^4*(1 - sw^2)^2) - 
     (2^(5 + d)*(-1 + d)^2*Pi^d*(s^2*(d^2*(-3 + 12*sw^2) + 
          4*(-3 + 2*sw^2 + 8*sw^4 + sw^2*(6 + 20*sw^2 - 32*sw^4)) + 
          4*d*(3 - 4*sw^2 - 4*sw^4 + 2*sw^2*(-3 - 5*sw^2 + 8*sw^4))) + 
        2*s*(-15*d*(-1 + 4*sw^2) + d^2*(-3 + 12*sw^2) + 
          8*(-3 + 8*sw^2 - 4*sw^4 + 2*sw^2*(3 - 5*sw^2 + 8*sw^4)))*t + 
        4*(-3 + 8*sw^2)*(1 - 2*sw^2 + sw^2*(-2 + 8*sw^2))*t^2))/
      (d*s*(-mz^2 + s)^2*sw^2) + (2^(3 + d)*(-1 + d)^2*Pi^d*
       (s^2*(3*d^2*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
          4*d*(-9 + 30*sw^2 - 24*sw^4 + sw^2*(30 - 22*sw^2 - 40*sw^4) + 
            8*sw^4*(-3 - 5*sw^2 + 8*sw^4)) - 4*(-9 + 30*sw^2 - 24*sw^4 + 
            sw^2*(30 + 4*sw^2 - 80*sw^4) + 8*sw^4*(-3 - 10*sw^2 + 
              16*sw^4))) + 2*s*(-15*d*(3 - 10*sw^2 + 16*sw^4 + 
            2*sw^2*(-5 + 8*sw^2)) + 3*d^2*(3 - 10*sw^2 + 16*sw^4 + 
            2*sw^2*(-5 + 8*sw^2)) + 8*(9 - 30*sw^2 + 24*sw^4 + 
            sw^2*(-30 + 74*sw^2 - 40*sw^4) + 8*sw^4*(3 - 5*sw^2 + 8*sw^4)))*
         t + 4*(9 - 30*sw^2 + 24*sw^4 + 8*sw^4*(3 - 20*sw^2 + 32*sw^4) - 
          2*sw^2*(15 - 76*sw^2 + 80*sw^4))*t^2))/(d*(mz^2 - s)^2*(-mz^2 + s)*
       sw^4) + (16*(-9*d^2*(13 + d^2)*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(12*d^4*sw^2 + 2*(-9 - 6*sw^2 + 24*sw^4 + sw^2*(12 + 40*sw^2 - 
                64*sw^4)) + d^3*(-3*(-9 + 6*sw^2 + 8*sw^4) + 4*sw^2*(-9 - 
                10*sw^2 + 16*sw^4)) + d^2*(sw^2*(78 + 160*sw^2 - 256*sw^4) + 
              6*(sw^2 + 16*sw^4)) + 2*d*(27 + 9*sw^2 - 60*sw^4 + 
              4*sw^2*(-9 - 25*sw^2 + 40*sw^4))) + (-1 + d)^2*s*
           (-15*d*(-3 + 8*sw^2) + 3*d^2*(-3 + 8*sw^2) - 
            24*(3 - 7*sw^2 + 4*sw^4) + 32*sw^2*(3 - 5*sw^2 + 8*sw^4))*t + 
          2*(-1 + d)^2*(-1 + 4*sw^2)*(9 - 12*sw^2 + 4*sw^2*(-3 + 8*sw^2))*
           t^2)))/(d*(mz^2 - s)*s*(-mz^2 + s)*sw^2) - 
     (8*(2*mz^2*(1 - sw^2)*(-3*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
           (s^2*(12 + 8*sw^2 + 2*d^3*sw^2 - 32*sw^4 + d^2*(9 - 6*sw^2 - 
                8*sw^4) + 2*d*(-9 + 16*sw^4)) + (-2 + d)*s*(8 - 5*d + d^2 - 
              8*sw^2)*(-3 + 4*sw^2)*t - 2*(-2 + d)*(3 - 16*sw^2 + 16*sw^4)*
             t^2)) + 3*(d^3*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
           (s^2*(12 + 8*sw^2 - 32*sw^4 + 2*d^3*(-1 + sw^2) + 
              d^2*(9 - 6*sw^2 - 8*sw^4) + 2*d*(-9 + 16*sw^4)) + 
            (-2 + d)*s*(8 - 5*d + d^2 - 8*sw^2)*(-3 + 4*sw^2)*t - 
            2*(-2 + d)*(3 - 16*sw^2 + 16*sw^4)*t^2))))/
      ((-2 + d)*mz^2*s^2*(-mz^2 + s)*sw^2*(1 - sw^2)) + 
     (2^(2 + d)*Pi^d*(s^2*(3*d^2*(-3 + 8*sw^2) + 
          4*d*(-3*(-3 + sw^2 + 4*sw^4) + 4*sw^2*(-3 - 5*sw^2 + 8*sw^4)) - 
          4*(9 + 6*sw^2 - 24*sw^4 + 4*sw^2*(-3 - 10*sw^2 + 16*sw^4))) + 
        2*s*(-15*d*(-3 + 8*sw^2) + 3*d^2*(-3 + 8*sw^2) - 
          24*(3 - 7*sw^2 + 4*sw^4) + 32*sw^2*(3 - 5*sw^2 + 8*sw^4))*t + 
        4*(-1 + 4*sw^2)*(9 - 12*sw^2 + 4*sw^2*(-3 + 8*sw^2))*t^2)*
       (s + mz^2*(1 - sw^2) - mz^2*(1 - sw^2)*GaugeXi[W]))/
      ((-1 + d)*(mz^2 - s)*s^2*(-mz^2 + s)*(1 - sw^2)) - 
     (2^(1 + d)*Pi^d*(s^2*(3*d^2*(3 - 10*sw^2 + 16*sw^4 + 
            2*sw^2*(-5 + 8*sw^2)) + 4*d*(-9 + 30*sw^2 - 24*sw^4 + 
            sw^2*(30 - 22*sw^2 - 40*sw^4) + 8*sw^4*(-3 - 5*sw^2 + 8*sw^4)) - 
          4*(-9 + 30*sw^2 - 24*sw^4 + sw^2*(30 + 4*sw^2 - 80*sw^4) + 
            8*sw^4*(-3 - 10*sw^2 + 16*sw^4))) + 
        2*s*(-15*d*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
          3*d^2*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
          8*(9 - 30*sw^2 + 24*sw^4 + sw^2*(-30 + 74*sw^2 - 40*sw^4) + 
            8*sw^4*(3 - 5*sw^2 + 8*sw^4)))*t + 
        4*(9 - 30*sw^2 + 24*sw^4 + 8*sw^4*(3 - 20*sw^2 + 32*sw^4) - 
          2*sw^2*(15 - 76*sw^2 + 80*sw^4))*t^2)*(s + mz^2*(1 - sw^2) - 
        mz^2*(1 - sw^2)*GaugeXi[W]))/((-1 + d)*(mz^2 - s)^2*s*(-mz^2 + s)*
       (1 - sw^2)^2) + (3*(2*Pi)^d*(3 - 10*sw^2 + 8*sw^4)*
       ((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 4*t^2)*
       (s - mz^2*(1 - sw^2) + mz^2*(1 - sw^2)*GaugeXi[W]))/
      ((-1 + d)*mz^4*(mz^2 - s)*s*sw^4*(1 - sw^2)^2) + 
     (2^(3 + d)*Pi^d*(-1 + 2*sw^2)*(s^2*(3*d^2 - 4*d*(3 + 2*sw^2) + 
          4*(3 + 4*sw^2)) + 2*s*(24 - 15*d + 3*d^2 - 16*sw^2)*t + 
        4*(3 - 8*sw^2)*t^2)*(2*(-1 + 2*d)*s + (-5 + 4*d)*mz^2*(1 - sw^2) + 
        (-s + mz^2*(1 - sw^2))*GaugeXi[W]))/((-1 + d)*mz^2*s^2*(-mz^2 + s)*
       sw^2*(1 - sw^2)) - (2^(1 + d)*Pi^d*(-1 + 2*sw^2)*
       ((-2 + d)*s^2*(18 - 24*sw^2 - 8*sw^2*(3 + 4*sw^2) + 
          3*d*(-3 + 8*sw^2)) + 2*s*(-72 + 96*sw^2 + sw^2*(96 - 64*sw^2) - 
          15*d*(-3 + 8*sw^2) + 3*d^2*(-3 + 8*sw^2))*t + 
        4*(-9 + 12*sw^2 - 4*sw^2*(-3 + 8*sw^2))*t^2)*(2*(-1 + 2*d)*s + 
        (-5 + 4*d)*mz^2*(1 - sw^2) + (-s + mz^2*(1 - sw^2))*GaugeXi[W]))/
      ((-1 + d)*mz^2*s*(-mz^2 + s)^2*sw^4*(1 - sw^2)) - 
     (2^(4 + d)*Pi^d*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
          4*d*(-3 - 5*sw^2 + 8*sw^4)) + 2*s*(-15*d + 3*d^2 + 
          8*(3 - 5*sw^2 + 8*sw^4))*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2)*
       (4*d^2*s^2 - 4*mz^2*s*(1 - sw^2) - d*(7*s^2 - 5*mz^2*s*(1 - sw^2) + 
          mz^4*(1 - sw^2)^2) + d*(-s + mz^2*(1 - sw^2))^2*GaugeXi[W]))/
      ((-1 + d)*d*mz^2*s^3*(-mz^2 + s)*(1 - sw^2)) - 
     (2^(3 + d)*Pi^d*(s^2*(d^2*(-3 + 12*sw^2) + 4*(-3 + 2*sw^2 + 8*sw^4 + 
            sw^2*(6 + 20*sw^2 - 32*sw^4)) + 4*d*(3 - 4*sw^2 - 4*sw^4 + 
            2*sw^2*(-3 - 5*sw^2 + 8*sw^4))) + 2*s*(-15*d*(-1 + 4*sw^2) + 
          d^2*(-3 + 12*sw^2) + 8*(-3 + 8*sw^2 - 4*sw^4 + 
            2*sw^2*(3 - 5*sw^2 + 8*sw^4)))*t + 4*(-3 + 8*sw^2)*
         (1 - 2*sw^2 + sw^2*(-2 + 8*sw^2))*t^2)*(4*d^2*s^2 - 
        4*mz^2*s*(1 - sw^2) - d*(7*s^2 - 5*mz^2*s*(1 - sw^2) + 
          mz^4*(1 - sw^2)^2) + d*(-s + mz^2*(1 - sw^2))^2*GaugeXi[W]))/
      ((-1 + d)*d*mz^2*(mz^2 - s)*s^2*(-mz^2 + s)*sw^2*(1 - sw^2)) - 
     (3*(2*Pi)^d*(-3 + 4*sw^2)*
       (-((-2 + d)*s^2*(-2 + 4*sw^2 + d*(1 - 4*sw^2) + sw^2*(4 + 8*sw^2))) + 
        2*s*(-8 + 16*sw^2 - 16*sw^2*(-1 + sw^2) - 5*d*(-1 + 4*sw^2) + 
          d^2*(-1 + 4*sw^2))*t + 4*(-1 + 2*sw^2 + sw^2*(2 - 8*sw^2))*t^2)*
       (s^2 + (4 - 8*d)*mz^2*s*(1 - sw^2) + (9 - 8*d)*mz^4*(1 - sw^2)^2 + 
        (mz^2*s*(1 - sw^2) - mz^4*(1 - sw^2)^2)*GaugeXi[W]))/
      ((-1 + d)*mz^4*(mz^2 - s)*s*(-mz^2 + s)*sw^4*(1 - sw^2)^2) + 
     (6*(3*d^3*(2*Pi)^d*s^4 - 2^(1 + d)*Pi^d*s^2*
         (s^2*(12 + 8*sw^2 + 2*d^3*sw^2 - 32*sw^4 + 
            d^2*(9 - 6*sw^2 - 8*sw^4) + 2*d*(-9 + 16*sw^4)) + 
          (-2 + d)*s*(8 - 5*d + d^2 - 8*sw^2)*(-3 + 4*sw^2)*t - 
          2*(-2 + d)*(3 - 16*sw^2 + 16*sw^4)*t^2) + 4*mz^2*s*(1 - sw^2)*
         (39*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
           (s^2*(d^4*(-3 + 4*sw^2) - 2*d^3*sw^2*(7 + 8*sw^2) + 
              d*(42 + 16*sw^2 - 96*sw^4) + 4*(-3 - 2*sw^2 + 8*sw^4) + 
              d^2*(-45 + 6*sw^2 + 72*sw^4)) + (2 - 5*d + 2*d^2)*s*
             (8 - 5*d + d^2 - 8*sw^2)*(-3 + 4*sw^2)*t - 2*(2 - 5*d + 2*d^2)*
             (3 - 16*sw^2 + 16*sw^4)*t^2)) + mz^4*(1 - sw^2)^2*
         (129*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
           (s^2*(4*d^4*(-3 + 4*sw^2) + d*(258 + 64*sw^2 - 544*sw^4) + 
              d^3*(21 - 66*sw^2 - 64*sw^4) + 36*(-3 - 2*sw^2 + 8*sw^4) + 
              d^2*(-225 + 54*sw^2 + 328*sw^4)) + (18 - 25*d + 8*d^2)*s*
             (8 - 5*d + d^2 - 8*sw^2)*(-3 + 4*sw^2)*t - 2*(18 - 25*d + 8*d^2)*
             (3 - 16*sw^2 + 16*sw^4)*t^2)) + mz^2*(1 - sw^2)*
         (-s + mz^2*(1 - sw^2))*(3*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
           (s^2*(12 + 8*sw^2 - 32*sw^4 + d^3*(-3 + 2*sw^2) + 
              d^2*(9 - 6*sw^2 - 8*sw^4) + 2*d*(-9 + 16*sw^4)) + 
            (-2 + d)*s*(8 - 5*d + d^2 - 8*sw^2)*(-3 + 4*sw^2)*t - 
            2*(-2 + d)*(3 - 16*sw^2 + 16*sw^4)*t^2))*GaugeXi[W]))/
      ((-2 + d)*(-1 + d)*mz^4*s^2*(-mz^2 + s)*sw^2*(1 - sw^2)^2) - 
     (16*(9*d^2*(2*Pi)^d*s^3 - 2^(1 + d)*Pi^d*s*
         (s^2*(-6 + 3*d^2 - 20*sw^2 + 32*sw^4 + d*(6 + 10*sw^2 - 16*sw^4)) + 
          s*(15*d - 3*d^2 - 8*(3 - 5*sw^2 + 8*sw^4))*t - 
          2*(3 - 20*sw^2 + 32*sw^4)*t^2) + mz^2*(1 - sw^2)*
         (-3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
           (s^2*(6 + 3*d^2 + 20*sw^2 - 32*sw^4 + 2*d*(-3 - 5*sw^2 + 
                8*sw^4)) + s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
            2*(3 - 20*sw^2 + 32*sw^4)*t^2)) - mz^2*(1 - sw^2)*
         (3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
           (2*s^2*(3 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 8*sw^4)) + 
            s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
            2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[W]))/
      ((-1 + d)*s^3*(-mz^2 + s)) - 
     (8*(3*d^2*(2*Pi)^d*s^3 - 2^(1 + d)*Pi^d*s*
         (s^2*(-6 + 4*sw^2 + 6*d^2*sw^2 + 16*sw^4 + 
            sw^2*(12 + 40*sw^2 - 64*sw^4) + 2*d*(3 - 4*sw^2 - 4*sw^4 + 
              2*sw^2*(-3 - 5*sw^2 + 8*sw^4))) + s*(-15*d*(-1 + 4*sw^2) + 
            d^2*(-3 + 12*sw^2) + 8*(-3 + 8*sw^2 - 4*sw^4 + 2*sw^2*(3 - 
                5*sw^2 + 8*sw^4)))*t + 2*(-3 + 8*sw^2)*(1 - 2*sw^2 + 
            sw^2*(-2 + 8*sw^2))*t^2) - mz^2*(1 - sw^2)*(9*d^2*(2*Pi)^d*s^2 + 
          2^(1 + d)*Pi^d*(s^2*(-6 + 4*sw^2 + 16*sw^4 + 3*d^2*(-2 + 2*sw^2) + 
              sw^2*(12 + 40*sw^2 - 64*sw^4) + 2*d*(3 - 4*sw^2 - 4*sw^4 + 
                2*sw^2*(-3 - 5*sw^2 + 8*sw^4))) + s*(-15*d*(-1 + 4*sw^2) + 
              d^2*(-3 + 12*sw^2) + 8*(-3 + 8*sw^2 - 4*sw^4 + 2*sw^2*
                 (3 - 5*sw^2 + 8*sw^4)))*t + 2*(-3 + 8*sw^2)*
             (1 - 2*sw^2 + sw^2*(-2 + 8*sw^2))*t^2)) + 
        mz^2*(1 - sw^2)*(-3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
           (s^2*(-6 + 4*sw^2 + 6*d^2*sw^2 + 16*sw^4 + sw^2*(12 + 40*sw^2 - 
                64*sw^4) + 2*d*(3 - 4*sw^2 - 4*sw^4 + 2*sw^2*(-3 - 5*sw^2 + 
                  8*sw^4))) + s*(-15*d*(-1 + 4*sw^2) + d^2*(-3 + 12*sw^2) + 
              8*(-3 + 8*sw^2 - 4*sw^4 + 2*sw^2*(3 - 5*sw^2 + 8*sw^4)))*t + 
            2*(-3 + 8*sw^2)*(1 - 2*sw^2 + sw^2*(-2 + 8*sw^2))*t^2))*
         GaugeXi[W]))/((-1 + d)*(mz^2 - s)*s^2*(-mz^2 + s)*(1 - sw^2)) + 
     (2*(s*(3*2^(2 + d)*d^4*Pi^d*s^3*(3 - 10*sw^2 + 16*sw^4 + 
            2*sw^2*(-5 + 8*sw^2))*(s + 2*t) - 16*mz^2*s*(1 - sw^2)*
           (s^2*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*(3*sw^2*(-5 + 4*sw^2) + 
                sw^4*(12 + 40*sw^2 - 64*sw^4) + sw^2*(-15 - 2*sw^2 + 
                  40*sw^4))) + 2^(2 + d)*Pi^d*s*(9 - 30*sw^2 + 24*sw^4 + 
              sw^2*(-30 + 74*sw^2 - 40*sw^4) + 8*sw^4*(3 - 5*sw^2 + 8*sw^4))*
             t + (9*(2*Pi)^d + 2^(1 + d)*Pi^d*(3*sw^2*(-5 + 4*sw^2) + 
                sw^2*(-15 + 76*sw^2 - 80*sw^4) + 4*sw^4*(3 - 20*sw^2 + 
                  32*sw^4)))*t^2) - 
          4*d*(7*s^2*(s^2*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*(3*sw^2*(-5 + 
                    4*sw^2) + sw^4*(12 + 40*sw^2 - 64*sw^4) + 
                  sw^2*(-15 - 2*sw^2 + 40*sw^4))) + 2^(2 + d)*Pi^d*s*(9 - 
                30*sw^2 + 24*sw^4 + sw^2*(-30 + 74*sw^2 - 40*sw^4) + 
                8*sw^4*(3 - 5*sw^2 + 8*sw^4))*t + (9*(2*Pi)^d + 2^(1 + d)*
                 Pi^d*(3*sw^2*(-5 + 4*sw^2) + sw^2*(-15 + 76*sw^2 - 
                    80*sw^4) + 4*sw^4*(3 - 20*sw^2 + 32*sw^4)))*t^2) + 
            mz^4*(1 - sw^2)^2*(s^2*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*
                 (3*sw^2*(-5 + 4*sw^2) + sw^4*(12 + 40*sw^2 - 64*sw^4) + 
                  sw^2*(-15 - 2*sw^2 + 40*sw^4))) + 2^(2 + d)*Pi^d*s*(9 - 
                30*sw^2 + 24*sw^4 + sw^2*(-30 + 74*sw^2 - 40*sw^4) + 
                8*sw^4*(3 - 5*sw^2 + 8*sw^4))*t + (9*(2*Pi)^d + 2^(1 + d)*
                 Pi^d*(3*sw^2*(-5 + 4*sw^2) + sw^2*(-15 + 76*sw^2 - 
                    80*sw^4) + 4*sw^4*(3 - 20*sw^2 + 32*sw^4)))*t^2) - 
            mz^2*s*(1 - sw^2)*(s^2*(81*(2*Pi)^d + 2^(1 + d)*Pi^d*
                 (27*sw^2*(-5 + 4*sw^2) + sw^4*(108 + 280*sw^2 - 448*sw^4) + 
                  sw^2*(-135 + 34*sw^2 + 280*sw^4))) + 5*2^(1 + d)*Pi^d*s*(
                9*(3 - 10*sw^2 + 8*sw^4) + 8*sw^4*(9 - 10*sw^2 + 16*sw^4) - 
                2*sw^2*(45 - 98*sw^2 + 40*sw^4))*t + 5*(9*(2*Pi)^d + 
                2^(1 + d)*Pi^d*(3*sw^2*(-5 + 4*sw^2) + sw^2*(-15 + 76*sw^2 - 
                    80*sw^4) + 4*sw^4*(3 - 20*sw^2 + 32*sw^4)))*t^2)) - 
          d^3*s*(-(s^2*(-99*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-54 + 345*sw^2 - 
                   276*sw^4 + sw^2*(345 - 344*sw^2 - 320*sw^4) + 4*sw^4*
                    (-69 - 80*sw^2 + 128*sw^4)) - 81*(3 - 10*sw^2 + 16*sw^4 + 
                   2*sw^2*(-5 + 8*sw^2))*t))) + 3*mz^4*(1 - sw^2)^2*
             (-33*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(18 - 5*sw^2 + 8*sw^4 + 
                  sw^2*(-5 + 8*sw^2)) + (3 - 10*sw^2 + 16*sw^4 + 
                  2*sw^2*(-5 + 8*sw^2))*t)) - 3*mz^2*s*(1 - sw^2)*
             (129*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-57 - 25*sw^2 + 40*sw^4 + 
                  5*sw^2*(-5 + 8*sw^2)) + 5*(3 - 10*sw^2 + 16*sw^4 + 
                  2*sw^2*(-5 + 8*sw^2))*t))) - 2*d^2*s*
           (-(mz^2*s*(1 - sw^2)*(-261*(2*Pi)^d*t + 2^(1 + d)*Pi^d*
                (2*s*(sw^2*(90 - 79*sw^2 - 100*sw^4) - 9*(3 - 10*sw^2 + 
                     8*sw^4) + 4*sw^4*(-18 - 25*sw^2 + 40*sw^4)) - 
                 87*(4*sw^4 + sw^2*(-5 + 4*sw^2) + sw^2*(-5 + 8*sw^2))*t))) + 
            mz^4*(1 - sw^2)^2*(-45*(2*Pi)^d*t + 2^(1 + d)*Pi^d*(
                s*(-9 + 30*sw^2 - 24*sw^4 + sw^2*(30 - 22*sw^2 - 40*sw^4) + 
                  8*sw^4*(-3 - 5*sw^2 + 8*sw^4)) - 15*(4*sw^4 + 
                  sw^2*(-5 + 4*sw^2) + sw^2*(-5 + 8*sw^2))*t)) + 
            s*(-603*(2*Pi)^d*s*t + 2^(1 + d)*Pi^d*(3*s^2*(-11*(3 - 10*sw^2 + 
                    8*sw^4) + 8*sw^4*(-11 - 25*sw^2 + 40*sw^4) - 
                  2*sw^2*(-55 + 23*sw^2 + 100*sw^4)) + 
                s*(201*sw^2*(5 - 4*sw^2) - 4*sw^4*(201 - 160*sw^2 + 
                    256*sw^4) + sw^2*(1005 - 2024*sw^2 + 640*sw^4))*t - 
                4*(9 - 30*sw^2 + 24*sw^4 + 8*sw^4*(3 - 20*sw^2 + 32*sw^4) - 
                  2*sw^2*(15 - 76*sw^2 + 80*sw^4))*t^2)))) + 
        mz^2*(-3*2^(2 + d)*d^4*Pi^d*s^3*(3 - 10*sw^2 + 16*sw^4 + 
            2*sw^2*(-5 + 8*sw^2))*(s + 2*t) + 16*mz^2*s*(1 - sw^2)*
           (s^2*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*(3*sw^2*(-5 + 4*sw^2) + 
                sw^4*(12 + 40*sw^2 - 64*sw^4) + sw^2*(-15 - 2*sw^2 + 
                  40*sw^4))) + 2^(2 + d)*Pi^d*s*(9 - 30*sw^2 + 24*sw^4 + 
              sw^2*(-30 + 74*sw^2 - 40*sw^4) + 8*sw^4*(3 - 5*sw^2 + 8*sw^4))*
             t + (9*(2*Pi)^d + 2^(1 + d)*Pi^d*(3*sw^2*(-5 + 4*sw^2) + 
                sw^2*(-15 + 76*sw^2 - 80*sw^4) + 4*sw^4*(3 - 20*sw^2 + 
                  32*sw^4)))*t^2) + 
          4*d*(7*s^2*(s^2*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*(3*sw^2*(-5 + 
                    4*sw^2) + sw^4*(12 + 40*sw^2 - 64*sw^4) + 
                  sw^2*(-15 - 2*sw^2 + 40*sw^4))) + 2^(2 + d)*Pi^d*s*(9 - 
                30*sw^2 + 24*sw^4 + sw^2*(-30 + 74*sw^2 - 40*sw^4) + 
                8*sw^4*(3 - 5*sw^2 + 8*sw^4))*t + (9*(2*Pi)^d + 2^(1 + d)*
                 Pi^d*(3*sw^2*(-5 + 4*sw^2) + sw^2*(-15 + 76*sw^2 - 
                    80*sw^4) + 4*sw^4*(3 - 20*sw^2 + 32*sw^4)))*t^2) + 
            mz^4*(1 - sw^2)^2*(s^2*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*
                 (3*sw^2*(-5 + 4*sw^2) + sw^4*(12 + 40*sw^2 - 64*sw^4) + 
                  sw^2*(-15 - 2*sw^2 + 40*sw^4))) + 2^(2 + d)*Pi^d*s*(9 - 
                30*sw^2 + 24*sw^4 + sw^2*(-30 + 74*sw^2 - 40*sw^4) + 
                8*sw^4*(3 - 5*sw^2 + 8*sw^4))*t + (9*(2*Pi)^d + 2^(1 + d)*
                 Pi^d*(3*sw^2*(-5 + 4*sw^2) + sw^2*(-15 + 76*sw^2 - 
                    80*sw^4) + 4*sw^4*(3 - 20*sw^2 + 32*sw^4)))*t^2) - 
            mz^2*s*(1 - sw^2)*(s^2*(81*(2*Pi)^d + 2^(1 + d)*Pi^d*
                 (27*sw^2*(-5 + 4*sw^2) + sw^4*(108 + 280*sw^2 - 448*sw^4) + 
                  sw^2*(-135 + 34*sw^2 + 280*sw^4))) + 5*2^(1 + d)*Pi^d*s*(
                9*(3 - 10*sw^2 + 8*sw^4) + 8*sw^4*(9 - 10*sw^2 + 16*sw^4) - 
                2*sw^2*(45 - 98*sw^2 + 40*sw^4))*t + 5*(9*(2*Pi)^d + 
                2^(1 + d)*Pi^d*(3*sw^2*(-5 + 4*sw^2) + sw^2*(-15 + 76*sw^2 - 
                    80*sw^4) + 4*sw^4*(3 - 20*sw^2 + 32*sw^4)))*t^2)) + 
          d^3*s*(-(s^2*(-99*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-54 + 345*sw^2 - 
                   276*sw^4 + sw^2*(345 - 344*sw^2 - 320*sw^4) + 4*sw^4*
                    (-69 - 80*sw^2 + 128*sw^4)) - 81*(3 - 10*sw^2 + 16*sw^4 + 
                   2*sw^2*(-5 + 8*sw^2))*t))) - 15*mz^2*s*(1 - sw^2)*
             (15*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-6 - 5*sw^2 + 8*sw^4 + 
                  sw^2*(-5 + 8*sw^2)) + (3 - 10*sw^2 + 16*sw^4 + 
                  2*sw^2*(-5 + 8*sw^2))*t)) + 3*mz^4*(1 - sw^2)^2*
             (-21*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(12 - 5*sw^2 + 8*sw^4 + 
                  sw^2*(-5 + 8*sw^2)) + (3 - 10*sw^2 + 16*sw^4 + 
                  2*sw^2*(-5 + 8*sw^2))*t))) + 2*d^2*s*
           (-(mz^2*s*(1 - sw^2)*(-261*(2*Pi)^d*t + 2^(1 + d)*Pi^d*
                (2*s*(sw^2*(90 - 79*sw^2 - 100*sw^4) - 9*(3 - 10*sw^2 + 
                     8*sw^4) + 4*sw^4*(-18 - 25*sw^2 + 40*sw^4)) - 
                 87*(4*sw^4 + sw^2*(-5 + 4*sw^2) + sw^2*(-5 + 8*sw^2))*t))) + 
            mz^4*(1 - sw^2)^2*(-45*(2*Pi)^d*t + 2^(1 + d)*Pi^d*(
                s*(-9 + 30*sw^2 - 24*sw^4 + sw^2*(30 - 22*sw^2 - 40*sw^4) + 
                  8*sw^4*(-3 - 5*sw^2 + 8*sw^4)) - 15*(4*sw^4 + 
                  sw^2*(-5 + 4*sw^2) + sw^2*(-5 + 8*sw^2))*t)) + 
            s*(-603*(2*Pi)^d*s*t + 2^(1 + d)*Pi^d*(3*s^2*(-11*(3 - 10*sw^2 + 
                    8*sw^4) + 8*sw^4*(-11 - 25*sw^2 + 40*sw^4) - 
                  2*sw^2*(-55 + 23*sw^2 + 100*sw^4)) + 
                s*(201*sw^2*(5 - 4*sw^2) - 4*sw^4*(201 - 160*sw^2 + 
                    256*sw^4) + sw^2*(1005 - 2024*sw^2 + 640*sw^4))*t - 
                4*(9 - 30*sw^2 + 24*sw^4 + 8*sw^4*(3 - 20*sw^2 + 32*sw^4) - 
                  2*sw^2*(15 - 76*sw^2 + 80*sw^4))*t^2))))*GaugeXi[Z] + 
        d*(-s + mz^2*(1 - sw^2))^2*(9*d^2*(2*Pi)^d*s^2 + 
          2^(1 + d)*Pi^d*(s^2*(3*d^2*(4*sw^4 + sw^2*(-5 + 4*sw^2) + 
                sw^2*(-5 + 8*sw^2)) + 2*d*(-9 + 30*sw^2 - 24*sw^4 + 
                sw^2*(30 - 22*sw^2 - 40*sw^4) + 8*sw^4*(-3 - 5*sw^2 + 
                  8*sw^4)) + 2*(9 - 30*sw^2 + 24*sw^4 + sw^4*(24 + 80*sw^2 - 
                  128*sw^4) + sw^2*(-30 - 4*sw^2 + 80*sw^4))) + 
            s*(-15*d*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
              3*d^2*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
              8*(9 - 30*sw^2 + 24*sw^4 + sw^2*(-30 + 74*sw^2 - 40*sw^4) + 
                8*sw^4*(3 - 5*sw^2 + 8*sw^4)))*t + 2*(9 - 30*sw^2 + 24*sw^4 + 
              8*sw^4*(3 - 20*sw^2 + 32*sw^4) - 2*sw^2*(15 - 76*sw^2 + 
                80*sw^4))*t^2))*GaugeXi[W]*(s - mz^2*GaugeXi[Z])))/
      ((-1 + d)*d*mz^2*(mz^2 - s)^2*s*(-mz^2 + s)*sw^4*(1 - sw^2)*
       (-s + mz^2*GaugeXi[Z])) + 
     (4*(s*(3*2^(2 + d)*d^4*Pi^d*s^3*(-3 + 8*sw^2)*(s + 2*t) + 
          16*mz^2*s*(1 - sw^2)*(s^2*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*(3*sw^2 - 
                12*sw^4 + sw^2*(-6 - 20*sw^2 + 32*sw^4))) - 
            2^(2 + d)*Pi^d*s*(-3*(3 - 7*sw^2 + 4*sw^4) + 4*sw^2*(3 - 5*sw^2 + 
                8*sw^4))*t + (9*(2*Pi)^d + 2^(2 + d)*Pi^d*(12*sw^2*
                 (-1 + sw^2) + sw^2*(-3 + 20*sw^2 - 32*sw^4)))*t^2) + 
          4*d*(mz^2*s*(1 - sw^2)*(s^2*(-81*(2*Pi)^d + 2^(1 + d)*Pi^d*
                 (-9*sw^2 + 84*sw^4 + sw^2*(54 + 140*sw^2 - 224*sw^4))) + 
              5*2^(1 + d)*Pi^d*s*(-3*(9 - 18*sw^2 + 8*sw^4) + 4*sw^2*
                 (9 - 10*sw^2 + 16*sw^4))*t - 5*(9*(2*Pi)^d + 2^(2 + d)*Pi^d*
                 (12*sw^2*(-1 + sw^2) + sw^2*(-3 + 20*sw^2 - 32*sw^4)))*t^
                2) + 7*s^2*(s^2*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*(3*sw^2 - 
                  12*sw^4 + sw^2*(-6 - 20*sw^2 + 32*sw^4))) - 
              2^(2 + d)*Pi^d*s*(-3*(3 - 7*sw^2 + 4*sw^4) + 4*sw^2*
                 (3 - 5*sw^2 + 8*sw^4))*t + (9*(2*Pi)^d + 2^(2 + d)*Pi^d*
                 (12*sw^2*(-1 + sw^2) + sw^2*(-3 + 20*sw^2 - 32*sw^4)))*t^
                2) + mz^4*(1 - sw^2)^2*(s^2*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*
                 (3*sw^2 - 12*sw^4 + sw^2*(-6 - 20*sw^2 + 32*sw^4))) - 
              2^(2 + d)*Pi^d*s*(-3*(3 - 7*sw^2 + 4*sw^4) + 4*sw^2*
                 (3 - 5*sw^2 + 8*sw^4))*t + (9*(2*Pi)^d + 2^(2 + d)*Pi^d*
                 (12*sw^2*(-1 + sw^2) + sw^2*(-3 + 20*sw^2 - 32*sw^4)))*t^
                2)) + d^3*s*(s^2*(45*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(
                s*(81 - 66*sw^2 - 96*sw^4 + 2*sw^2*(-69 - 80*sw^2 + 
                    128*sw^4)) - 81*(-3 + 8*sw^2)*t)) - 3*mz^4*(1 - sw^2)^2*
             (39*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-21 + 4*sw^2) + 
                (-3 + 8*sw^2)*t)) + 15*mz^2*s*(1 - sw^2)*(-45*(2*Pi)^d*s + 
              2^(1 + d)*Pi^d*(s*(21 + 4*sw^2) + (-3 + 8*sw^2)*t))) - 
          2*d^2*s*(-(mz^2*s*(1 - sw^2)*(261*(2*Pi)^d*t + 2^(1 + d)*Pi^d*
                (s*(54 - 27*sw^2 - 60*sw^4 + 4*sw^2*(-18 - 25*sw^2 + 
                     40*sw^4)) - 348*sw^2*t))) + mz^4*(1 - sw^2)^2*
             (45*(2*Pi)^d*t + 2^(1 + d)*Pi^d*(-3*s*(-3 + sw^2 + 4*sw^4) + 
                4*s*sw^2*(-3 - 5*sw^2 + 8*sw^4) - 60*sw^2*t)) + 
            s*(603*(2*Pi)^d*s*t + 2^(1 + d)*Pi^d*(3*s^2*(33 + sw^2 - 
                  60*sw^4 + 4*sw^2*(-11 - 25*sw^2 + 40*sw^4)) - 
                2*s*(273*sw^2 - 96*sw^4 + sw^2*(201 - 160*sw^2 + 256*sw^4))*
                 t - 4*(-1 + 4*sw^2)*(9 - 12*sw^2 + 4*sw^2*(-3 + 8*sw^2))*
                 t^2)))) + mz^2*(-3*2^(2 + d)*d^4*Pi^d*s^3*(-3 + 8*sw^2)*
           (s + 2*t) - 16*mz^2*s*(1 - sw^2)*
           (s^2*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*(3*sw^2 - 12*sw^4 + 
                sw^2*(-6 - 20*sw^2 + 32*sw^4))) - 2^(2 + d)*Pi^d*s*
             (-3*(3 - 7*sw^2 + 4*sw^4) + 4*sw^2*(3 - 5*sw^2 + 8*sw^4))*t + 
            (9*(2*Pi)^d + 2^(2 + d)*Pi^d*(12*sw^2*(-1 + sw^2) + 
                sw^2*(-3 + 20*sw^2 - 32*sw^4)))*t^2) - 
          4*d*(mz^2*s*(1 - sw^2)*(s^2*(-81*(2*Pi)^d + 2^(1 + d)*Pi^d*
                 (-9*sw^2 + 84*sw^4 + sw^2*(54 + 140*sw^2 - 224*sw^4))) + 
              5*2^(1 + d)*Pi^d*s*(-3*(9 - 18*sw^2 + 8*sw^4) + 4*sw^2*
                 (9 - 10*sw^2 + 16*sw^4))*t - 5*(9*(2*Pi)^d + 2^(2 + d)*Pi^d*
                 (12*sw^2*(-1 + sw^2) + sw^2*(-3 + 20*sw^2 - 32*sw^4)))*t^
                2) + 7*s^2*(s^2*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*(3*sw^2 - 
                  12*sw^4 + sw^2*(-6 - 20*sw^2 + 32*sw^4))) - 
              2^(2 + d)*Pi^d*s*(-3*(3 - 7*sw^2 + 4*sw^4) + 4*sw^2*
                 (3 - 5*sw^2 + 8*sw^4))*t + (9*(2*Pi)^d + 2^(2 + d)*Pi^d*
                 (12*sw^2*(-1 + sw^2) + sw^2*(-3 + 20*sw^2 - 32*sw^4)))*t^
                2) + mz^4*(1 - sw^2)^2*(s^2*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*
                 (3*sw^2 - 12*sw^4 + sw^2*(-6 - 20*sw^2 + 32*sw^4))) - 
              2^(2 + d)*Pi^d*s*(-3*(3 - 7*sw^2 + 4*sw^4) + 4*sw^2*
                 (3 - 5*sw^2 + 8*sw^4))*t + (9*(2*Pi)^d + 2^(2 + d)*Pi^d*
                 (12*sw^2*(-1 + sw^2) + sw^2*(-3 + 20*sw^2 - 32*sw^4)))*t^
                2)) + d^3*s*(-(s^2*(63*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
                (2*s*(36 - 33*sw^2 - 48*sw^4 + sw^2*(-69 - 80*sw^2 + 
                     128*sw^4)) - 81*(-3 + 8*sw^2)*t))) + 3*mz^4*(1 - sw^2)^2*
             (3*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-3 + 4*sw^2) + (-3 + 8*sw^2)*
                 t)) - 15*mz^2*s*(1 - sw^2)*(-21*(2*Pi)^d*s + 
              2^(1 + d)*Pi^d*(s*(9 + 4*sw^2) + (-3 + 8*sw^2)*t))) + 
          2*d^2*s*(-(mz^2*s*(1 - sw^2)*(261*(2*Pi)^d*t + 2^(1 + d)*Pi^d*
                (s*(54 - 27*sw^2 - 60*sw^4 + 4*sw^2*(-18 - 25*sw^2 + 
                     40*sw^4)) - 348*sw^2*t))) + mz^4*(1 - sw^2)^2*
             (45*(2*Pi)^d*t + 2^(1 + d)*Pi^d*(-3*s*(-3 + sw^2 + 4*sw^4) + 
                4*s*sw^2*(-3 - 5*sw^2 + 8*sw^4) - 60*sw^2*t)) + 
            s*(603*(2*Pi)^d*s*t + 2^(1 + d)*Pi^d*(3*s^2*(33 + sw^2 - 
                  60*sw^4 + 4*sw^2*(-11 - 25*sw^2 + 40*sw^4)) - 
                2*s*(273*sw^2 - 96*sw^4 + sw^2*(201 - 160*sw^2 + 256*sw^4))*
                 t - 4*(-1 + 4*sw^2)*(9 - 12*sw^2 + 4*sw^2*(-3 + 8*sw^2))*
                 t^2))))*GaugeXi[Z] + d*GaugeXi[W]^3*
         (s*(9*d^2*(2*Pi)^d*s^4 + 2^(1 + d)*Pi^d*s^2*
             (s^2*(d^2*(-9 + 12*sw^2) - 6*d*(-3 + sw^2 + 4*sw^4) + 
                8*d*sw^2*(-3 - 5*sw^2 + 8*sw^4) + 2*(-9 - 6*sw^2 + 24*sw^4 + 
                  sw^2*(12 + 40*sw^2 - 64*sw^4))) + s*(-15*d*(-3 + 8*sw^2) + 
                3*d^2*(-3 + 8*sw^2) - 24*(3 - 7*sw^2 + 4*sw^4) + 
                32*sw^2*(3 - 5*sw^2 + 8*sw^4))*t + 2*(-1 + 4*sw^2)*(9 - 
                12*sw^2 + 4*sw^2*(-3 + 8*sw^2))*t^2) - 2*mz^2*s*(1 - sw^2)*
             (-9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*(2*s^2*(-9 - 6*sw^2 + 
                  6*d^2*sw^2 + 24*sw^4 + sw^2*(12 + 40*sw^2 - 64*sw^4) - 
                  3*d*(-3 + sw^2 + 4*sw^4) + 4*d*sw^2*(-3 - 5*sw^2 + 
                    8*sw^4)) + s*(-15*d*(-3 + 8*sw^2) + 3*d^2*(-3 + 8*sw^2) - 
                  24*(3 - 7*sw^2 + 4*sw^4) + 32*sw^2*(3 - 5*sw^2 + 8*sw^4))*
                 t + 2*(-1 + 4*sw^2)*(9 - 12*sw^2 + 4*sw^2*(-3 + 8*sw^2))*
                 t^2)) + mz^4*(1 - sw^2)^2*(-81*d^2*(2*Pi)^d*s^2 + 
              2^(1 + d)*Pi^d*(2*s^2*(-9 - 6*sw^2 + 24*sw^4 + 3*d^2*
                   (6 + 2*sw^2) + sw^2*(12 + 40*sw^2 - 64*sw^4) - 
                  3*d*(-3 + sw^2 + 4*sw^4) + 4*d*sw^2*(-3 - 5*sw^2 + 
                    8*sw^4)) + s*(-15*d*(-3 + 8*sw^2) + 3*d^2*(-3 + 8*sw^2) - 
                  24*(3 - 7*sw^2 + 4*sw^4) + 32*sw^2*(3 - 5*sw^2 + 8*sw^4))*
                 t + 2*(-1 + 4*sw^2)*(9 - 12*sw^2 + 4*sw^2*(-3 + 8*sw^2))*
                 t^2))) - mz^2*(-s + mz^2*(1 - sw^2))*
           (-(s*(9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
                (s^2*(d^2*(-9 + 12*sw^2) - 6*d*(-3 + sw^2 + 4*sw^4) + 
                   8*d*sw^2*(-3 - 5*sw^2 + 8*sw^4) + 2*(-9 - 6*sw^2 + 
                     24*sw^4 + sw^2*(12 + 40*sw^2 - 64*sw^4))) + 
                 s*(-15*d*(-3 + 8*sw^2) + 3*d^2*(-3 + 8*sw^2) - 
                   24*(3 - 7*sw^2 + 4*sw^4) + 32*sw^2*(3 - 5*sw^2 + 8*sw^4))*
                  t + 2*(-1 + 4*sw^2)*(9 - 12*sw^2 + 4*sw^2*(-3 + 8*sw^2))*
                  t^2))) + mz^2*(1 - sw^2)*(-27*d^2*(2*Pi)^d*s^2 + 
              2^(1 + d)*Pi^d*(s^2*(d^2*(9 + 12*sw^2) - 6*d*(-3 + sw^2 + 
                    4*sw^4) + 8*d*sw^2*(-3 - 5*sw^2 + 8*sw^4) + 
                  2*(-9 - 6*sw^2 + 24*sw^4 + sw^2*(12 + 40*sw^2 - 
                      64*sw^4))) + s*(-15*d*(-3 + 8*sw^2) + 3*d^2*
                   (-3 + 8*sw^2) - 24*(3 - 7*sw^2 + 4*sw^4) + 32*sw^2*
                   (3 - 5*sw^2 + 8*sw^4))*t + 2*(-1 + 4*sw^2)*(9 - 12*sw^2 + 
                  4*sw^2*(-3 + 8*sw^2))*t^2)))*GaugeXi[Z]) + 
        GaugeXi[W]*(s*(-3*2^(3 + d)*d^4*Pi^d*s^3*(-3 + 8*sw^2)*(s + 2*t) - 
            32*mz^2*s*(1 - sw^2)*(s^2*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*
                 (3*sw^2 - 12*sw^4 + sw^2*(-6 - 20*sw^2 + 32*sw^4))) - 
              2^(2 + d)*Pi^d*s*(-3*(3 - 7*sw^2 + 4*sw^4) + 4*sw^2*
                 (3 - 5*sw^2 + 8*sw^4))*t + (9*(2*Pi)^d + 2^(2 + d)*Pi^d*
                 (12*sw^2*(-1 + sw^2) + sw^2*(-3 + 20*sw^2 - 32*sw^4)))*t^
                2) - 4*d*(15*s^2*(s^2*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*
                   (3*sw^2 - 12*sw^4 + sw^2*(-6 - 20*sw^2 + 32*sw^4))) - 
                2^(2 + d)*Pi^d*s*(-3*(3 - 7*sw^2 + 4*sw^4) + 4*sw^2*
                   (3 - 5*sw^2 + 8*sw^4))*t + (9*(2*Pi)^d + 2^(2 + d)*Pi^d*
                   (12*sw^2*(-1 + sw^2) + sw^2*(-3 + 20*sw^2 - 32*sw^4)))*
                 t^2) + 3*mz^4*(1 - sw^2)^2*(s^2*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*
                   (3*sw^2 - 12*sw^4 + sw^2*(-6 - 20*sw^2 + 32*sw^4))) - 
                2^(2 + d)*Pi^d*s*(-3*(3 - 7*sw^2 + 4*sw^4) + 4*sw^2*
                   (3 - 5*sw^2 + 8*sw^4))*t + (9*(2*Pi)^d + 2^(2 + d)*Pi^d*
                   (12*sw^2*(-1 + sw^2) + sw^2*(-3 + 20*sw^2 - 32*sw^4)))*
                 t^2) - 4*mz^2*s*(1 - sw^2)*(s^2*(45*(2*Pi)^d + 2^(2 + d)*
                   Pi^d*(3*sw^2 - 24*sw^4 + sw^2*(-15 - 40*sw^2 + 
                      64*sw^4))) + 3*s*(51*(2*Pi)^d + 2^(2 + d)*Pi^d*
                   (2*sw^2*(-13 + 6*sw^2) + sw^2*(-17 + 20*sw^2 - 32*sw^4)))*
                 t + 3*(9*(2*Pi)^d + 2^(2 + d)*Pi^d*(12*sw^2*(-1 + sw^2) + 
                    sw^2*(-3 + 20*sw^2 - 32*sw^4)))*t^2)) + 
            d^3*s*(-9*2^(2 + d)*mz^2*Pi^d*s*(1 - sw^2)*(-3 + 8*sw^2)*(s + 
                2*t) - s^2*(765*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
                 (-3*s*(57 + 46*sw^2 + 64*sw^4) + s*sw^2*(-282 - 320*sw^2 + 
                    512*sw^4) - 165*(-3 + 8*sw^2)*t)) + 9*mz^4*(1 - sw^2)^2*(
                23*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-13 + 4*sw^2) + 
                  (-3 + 8*sw^2)*t))) + 2*d^2*s*(-3*2^(2 + d)*mz^2*Pi^d*s*(1 - 
                sw^2)*(s*(21 - 10*sw^2 - 24*sw^4 + 4*sw^2*(-7 - 10*sw^2 + 
                    16*sw^4)) - 17*(-3 + 8*sw^2)*t) + 3*mz^4*(1 - sw^2)^2*(
                45*(2*Pi)^d*t + 2^(1 + d)*Pi^d*(-3*s*(-3 + sw^2 + 4*sw^4) + 
                  4*s*sw^2*(-3 - 5*sw^2 + 8*sw^4) - 60*sw^2*t)) + 
              s*(1251*(2*Pi)^d*s*t + 2^(1 + d)*Pi^d*(s^2*(3*(69 + sw^2 - 
                      124*sw^4) + 4*sw^2*(-69 - 155*sw^2 + 248*sw^4)) - 
                  2*s*(561*sw^2 - 192*sw^4 + sw^2*(417 - 320*sw^2 + 
                      512*sw^4))*t - 8*(-1 + 4*sw^2)*(9 - 12*sw^2 + 
                    4*sw^2*(-3 + 8*sw^2))*t^2)))) + 
          mz^2*(3*2^(3 + d)*d^4*Pi^d*s^3*(-3 + 8*sw^2)*(s + 2*t) + 
            32*mz^2*s*(1 - sw^2)*(s^2*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*
                 (3*sw^2 - 12*sw^4 + sw^2*(-6 - 20*sw^2 + 32*sw^4))) - 
              2^(2 + d)*Pi^d*s*(-3*(3 - 7*sw^2 + 4*sw^4) + 4*sw^2*
                 (3 - 5*sw^2 + 8*sw^4))*t + (9*(2*Pi)^d + 2^(2 + d)*Pi^d*
                 (12*sw^2*(-1 + sw^2) + sw^2*(-3 + 20*sw^2 - 32*sw^4)))*t^
                2) + 4*d*(15*s^2*(s^2*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*
                   (3*sw^2 - 12*sw^4 + sw^2*(-6 - 20*sw^2 + 32*sw^4))) - 
                2^(2 + d)*Pi^d*s*(-3*(3 - 7*sw^2 + 4*sw^4) + 4*sw^2*
                   (3 - 5*sw^2 + 8*sw^4))*t + (9*(2*Pi)^d + 2^(2 + d)*Pi^d*
                   (12*sw^2*(-1 + sw^2) + sw^2*(-3 + 20*sw^2 - 32*sw^4)))*
                 t^2) + 3*mz^4*(1 - sw^2)^2*(s^2*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*
                   (3*sw^2 - 12*sw^4 + sw^2*(-6 - 20*sw^2 + 32*sw^4))) - 
                2^(2 + d)*Pi^d*s*(-3*(3 - 7*sw^2 + 4*sw^4) + 4*sw^2*
                   (3 - 5*sw^2 + 8*sw^4))*t + (9*(2*Pi)^d + 2^(2 + d)*Pi^d*
                   (12*sw^2*(-1 + sw^2) + sw^2*(-3 + 20*sw^2 - 32*sw^4)))*
                 t^2) - 4*mz^2*s*(1 - sw^2)*(s^2*(45*(2*Pi)^d + 2^(2 + d)*
                   Pi^d*(3*sw^2 - 24*sw^4 + sw^2*(-15 - 40*sw^2 + 
                      64*sw^4))) + 3*s*(51*(2*Pi)^d + 2^(2 + d)*Pi^d*
                   (2*sw^2*(-13 + 6*sw^2) + sw^2*(-17 + 20*sw^2 - 32*sw^4)))*
                 t + 3*(9*(2*Pi)^d + 2^(2 + d)*Pi^d*(12*sw^2*(-1 + sw^2) + 
                    sw^2*(-3 + 20*sw^2 - 32*sw^4)))*t^2)) - 
            d^3*s*(-9*2^(2 + d)*mz^2*Pi^d*s*(1 - sw^2)*(-3 + 8*sw^2)*(s + 
                2*t) - s^2*(675*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
                 (-6*s*(21 + 23*sw^2 + 32*sw^4) + 2*s*sw^2*(-141 - 160*sw^2 + 
                    256*sw^4) - 165*(-3 + 8*sw^2)*t)) + 9*mz^4*(1 - sw^2)^2*(
                25*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(2*s*(-7 + 2*sw^2) + 
                  (-3 + 8*sw^2)*t))) - 2*d^2*s*(-3*2^(2 + d)*mz^2*Pi^d*s*(1 - 
                sw^2)*(s*(21 - 10*sw^2 - 24*sw^4 + 4*sw^2*(-7 - 10*sw^2 + 
                    16*sw^4)) - 17*(-3 + 8*sw^2)*t) + 3*mz^4*(1 - sw^2)^2*(
                45*(2*Pi)^d*t + 2^(1 + d)*Pi^d*(-3*s*(-3 + sw^2 + 4*sw^4) + 
                  4*s*sw^2*(-3 - 5*sw^2 + 8*sw^4) - 60*sw^2*t)) + 
              s*(1251*(2*Pi)^d*s*t + 2^(1 + d)*Pi^d*(s^2*(3*(69 + sw^2 - 
                      124*sw^4) + 4*sw^2*(-69 - 155*sw^2 + 248*sw^4)) - 
                  2*s*(561*sw^2 - 192*sw^4 + sw^2*(417 - 320*sw^2 + 
                      512*sw^4))*t - 8*(-1 + 4*sw^2)*(9 - 12*sw^2 + 
                    4*sw^2*(-3 + 8*sw^2))*t^2))))*GaugeXi[Z]) + 
        GaugeXi[W]^2*(s*(3*2^(2 + d)*d^4*Pi^d*s^3*(-3 + 8*sw^2)*(s + 2*t) + 
            16*mz^2*s*(1 - sw^2)*(s^2*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*
                 (3*sw^2 - 12*sw^4 + sw^2*(-6 - 20*sw^2 + 32*sw^4))) - 
              2^(2 + d)*Pi^d*s*(-3*(3 - 7*sw^2 + 4*sw^4) + 4*sw^2*
                 (3 - 5*sw^2 + 8*sw^4))*t + (9*(2*Pi)^d + 2^(2 + d)*Pi^d*
                 (12*sw^2*(-1 + sw^2) + sw^2*(-3 + 20*sw^2 - 32*sw^4)))*t^
                2) + 4*d*(mz^2*s*(1 - sw^2)*(s^2*(-117*(2*Pi)^d + 2^(1 + d)*
                   Pi^d*(3*sw^2*(-7 + 44*sw^2) + sw^2*(78 + 220*sw^2 - 
                      352*sw^4))) + 3*2^(1 + d)*Pi^d*s*(-69 + 146*sw^2 - 
                  72*sw^4 + 4*sw^2*(23 - 30*sw^2 + 48*sw^4))*t - 
                9*(9*(2*Pi)^d + 2^(2 + d)*Pi^d*(12*sw^2*(-1 + sw^2) + 
                    sw^2*(-3 + 20*sw^2 - 32*sw^4)))*t^2) + 
              9*s^2*(s^2*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*(3*sw^2 - 12*sw^4 + 
                    sw^2*(-6 - 20*sw^2 + 32*sw^4))) - 2^(2 + d)*Pi^d*s*
                 (-3*(3 - 7*sw^2 + 4*sw^4) + 4*sw^2*(3 - 5*sw^2 + 8*sw^4))*
                 t + (9*(2*Pi)^d + 2^(2 + d)*Pi^d*(12*sw^2*(-1 + sw^2) + 
                    sw^2*(-3 + 20*sw^2 - 32*sw^4)))*t^2) + 3*mz^4*(1 - sw^2)^
                2*(s^2*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*(3*sw^2 - 12*sw^4 + 
                    sw^2*(-6 - 20*sw^2 + 32*sw^4))) - 2^(2 + d)*Pi^d*s*
                 (-3*(3 - 7*sw^2 + 4*sw^4) + 4*sw^2*(3 - 5*sw^2 + 8*sw^4))*
                 t + (9*(2*Pi)^d + 2^(2 + d)*Pi^d*(12*sw^2*(-1 + sw^2) + 
                    sw^2*(-3 + 20*sw^2 - 32*sw^4)))*t^2)) + 
            d^3*s*(s^2*(171*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(27 - 78*sw^2 - 
                    96*sw^4 + 2*sw^2*(-75 - 80*sw^2 + 128*sw^4)) - 
                  87*(-3 + 8*sw^2)*t)) + 27*mz^2*s*(1 - sw^2)*(-11*(2*Pi)^d*
                 s + 2^(1 + d)*Pi^d*(2*s*(2 + 2*sw^2) + (-3 + 8*sw^2)*t)) - 
              9*mz^4*(1 - sw^2)^2*(-45*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
                 (s*(21 + 4*sw^2) + (-3 + 8*sw^2)*t))) - 
            2*d^2*s*(-3*mz^2*s*(1 - sw^2)*(147*(2*Pi)^d*t + 2^(1 + d)*Pi^d*
                 (s*(30 - 13*sw^2 - 36*sw^4 + sw^2*(-40 - 60*sw^2 + 
                      96*sw^4)) - 196*sw^2*t)) + 3*mz^4*(1 - sw^2)^2*(
                45*(2*Pi)^d*t + 2^(1 + d)*Pi^d*(-3*s*(-3 + sw^2 + 4*sw^4) + 
                  4*s*sw^2*(-3 - 5*sw^2 + 8*sw^4) - 60*sw^2*t)) + 
              s*(693*(2*Pi)^d*s*t + 2^(1 + d)*Pi^d*(s^2*(-3*(-39 + sw^2 + 
                      68*sw^4) + 4*sw^2*(-39 - 85*sw^2 + 136*sw^4)) - 
                  2*s*(303*sw^2 - 96*sw^4 + sw^2*(231 - 160*sw^2 + 256*sw^4))*
                   t - 4*(-1 + 4*sw^2)*(9 - 12*sw^2 + 4*sw^2*(-3 + 8*sw^2))*
                   t^2)))) - mz^2*(3*2^(2 + d)*d^4*Pi^d*s^3*(-3 + 8*sw^2)*
             (s + 2*t) + 16*mz^2*s*(1 - sw^2)*(s^2*(9*(2*Pi)^d + 
                2^(1 + d)*Pi^d*(3*sw^2 - 12*sw^4 + sw^2*(-6 - 20*sw^2 + 
                    32*sw^4))) - 2^(2 + d)*Pi^d*s*(-3*(3 - 7*sw^2 + 4*sw^4) + 
                4*sw^2*(3 - 5*sw^2 + 8*sw^4))*t + (9*(2*Pi)^d + 2^(2 + d)*
                 Pi^d*(12*sw^2*(-1 + sw^2) + sw^2*(-3 + 20*sw^2 - 32*sw^4)))*
               t^2) + 4*d*(mz^2*s*(1 - sw^2)*(s^2*(-117*(2*Pi)^d + 
                  2^(1 + d)*Pi^d*(3*sw^2*(-7 + 44*sw^2) + sw^2*(78 + 
                      220*sw^2 - 352*sw^4))) + 3*2^(1 + d)*Pi^d*s*
                 (-69 + 146*sw^2 - 72*sw^4 + 4*sw^2*(23 - 30*sw^2 + 48*sw^4))*
                 t - 9*(9*(2*Pi)^d + 2^(2 + d)*Pi^d*(12*sw^2*(-1 + sw^2) + 
                    sw^2*(-3 + 20*sw^2 - 32*sw^4)))*t^2) + 
              9*s^2*(s^2*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*(3*sw^2 - 12*sw^4 + 
                    sw^2*(-6 - 20*sw^2 + 32*sw^4))) - 2^(2 + d)*Pi^d*s*
                 (-3*(3 - 7*sw^2 + 4*sw^4) + 4*sw^2*(3 - 5*sw^2 + 8*sw^4))*
                 t + (9*(2*Pi)^d + 2^(2 + d)*Pi^d*(12*sw^2*(-1 + sw^2) + 
                    sw^2*(-3 + 20*sw^2 - 32*sw^4)))*t^2) + 3*mz^4*(1 - sw^2)^
                2*(s^2*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*(3*sw^2 - 12*sw^4 + 
                    sw^2*(-6 - 20*sw^2 + 32*sw^4))) - 2^(2 + d)*Pi^d*s*
                 (-3*(3 - 7*sw^2 + 4*sw^4) + 4*sw^2*(3 - 5*sw^2 + 8*sw^4))*
                 t + (9*(2*Pi)^d + 2^(2 + d)*Pi^d*(12*sw^2*(-1 + sw^2) + 
                    sw^2*(-3 + 20*sw^2 - 32*sw^4)))*t^2)) + 
            d^3*s*(s^2*(81*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(2*s*(36 - 39*sw^2 - 
                    48*sw^4 + sw^2*(-75 - 80*sw^2 + 128*sw^4)) - 
                  87*(-3 + 8*sw^2)*t)) + 27*mz^2*s*(1 - sw^2)*(-5*(2*Pi)^d*
                 s + 2^(1 + d)*Pi^d*(s*(1 + 4*sw^2) + (-3 + 8*sw^2)*t)) - 
              9*mz^4*(1 - sw^2)^2*(-29*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
                 (s*(13 + 4*sw^2) + (-3 + 8*sw^2)*t))) - 
            2*d^2*s*(-3*mz^2*s*(1 - sw^2)*(147*(2*Pi)^d*t + 2^(1 + d)*Pi^d*
                 (s*(30 - 13*sw^2 - 36*sw^4 + sw^2*(-40 - 60*sw^2 + 
                      96*sw^4)) - 196*sw^2*t)) + 3*mz^4*(1 - sw^2)^2*(
                45*(2*Pi)^d*t + 2^(1 + d)*Pi^d*(-3*s*(-3 + sw^2 + 4*sw^4) + 
                  4*s*sw^2*(-3 - 5*sw^2 + 8*sw^4) - 60*sw^2*t)) + 
              s*(693*(2*Pi)^d*s*t + 2^(1 + d)*Pi^d*(s^2*(-3*(-39 + sw^2 + 
                      68*sw^4) + 4*sw^2*(-39 - 85*sw^2 + 136*sw^4)) - 
                  2*s*(303*sw^2 - 96*sw^4 + sw^2*(231 - 160*sw^2 + 256*sw^4))*
                   t - 4*(-1 + 4*sw^2)*(9 - 12*sw^2 + 4*sw^2*(-3 + 8*sw^2))*
                   t^2))))*GaugeXi[Z])))/((-1 + d)*d*mz^2*(mz^2 - s)*s^2*
       (-mz^2 + s)*sw^2*(1 - sw^2)*(-1 + GaugeXi[W])^2*
       (-s + mz^2*GaugeXi[Z]))))/(2^(2*(4 + d))*Pi^(2*d)*sw^2*(1 - sw^2)), 
  ((I/2304)*EL^6*((3*(-3 + 4*sw^2)*(-s + 2*mz^2*(1 - sw^2))*
       (s^2 + 4*(-3 + 2*d)*mz^2*s*(1 - sw^2) + 4*(-1 + d)*mz^4*(1 - sw^2)^2)*
       (-((-2 + d)*s^2*(-2 + 4*sw^2 + d*(1 - 4*sw^2) + sw^2*(4 + 8*sw^2))) + 
        2*s*(-8 + 16*sw^2 - 16*sw^2*(-1 + sw^2) - 5*d*(-1 + 4*sw^2) + 
          d^2*(-1 + 4*sw^2))*t + 4*(-1 + 2*sw^2 + sw^2*(2 - 8*sw^2))*t^2))/
      ((-1 + d)*mz^4*(2*Pi)^d*s*(-mz^2 + s)^2*sw^4*(1 - sw^2)^2) + 
     ((-1 + 2*sw^2)*(-s + 2*mz^2*(1 - sw^2))*
       (s^2 + 4*(-3 + 2*d)*mz^2*s*(1 - sw^2) + 4*(-1 + d)*mz^4*(1 - sw^2)^2)*
       ((-2 + d)*s^2*(18 - 24*sw^2 - 8*sw^2*(3 + 4*sw^2) + 
          3*d*(-3 + 8*sw^2)) + 2*s*(-72 + 96*sw^2 + sw^2*(96 - 64*sw^2) - 
          15*d*(-3 + 8*sw^2) + 3*d^2*(-3 + 8*sw^2))*t + 
        4*(-9 + 12*sw^2 - 4*sw^2*(-3 + 8*sw^2))*t^2))/
      ((-1 + d)*mz^4*(2*Pi)^d*s*(-mz^2 + s)^2*sw^4*(1 - sw^2)^2) - 
     (3*(3 - 10*sw^2 + 8*sw^4)*(4*(4 - 5*d + d^2)*mz^4*(1 - sw^2)^2*
         ((-4 - 2*d + d^2)*s + 2*(14 - 8*d + d^2)*t) + 
        s*((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 4*t^2) + 
        4*(-3 + 2*d)*mz^2*(1 - sw^2)*((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*
           t + 4*t^2)))/((-1 + d)*mz^4*(2*Pi)^d*(mz^2 - s)*sw^4*
       (1 - sw^2)^2) + (3*2^(1 - 2*d)*((-2 + d)*(2*Pi)^d*s^2*
         (3 - 16*sw^2 + 16*sw^4)*(-s + 2*mz^2*(1 - sw^2))*
         (d*s^2 - 4*d*mz^2*s*(1 - sw^2) + 4*(-1 + d)*mz^4*(1 - sw^2)^2) - 
        (2 - d)*s^2*(3 - 16*sw^2 + 16*sw^4)*(-((2*Pi)^d*s) + 
          2^(1 + d)*mz^2*Pi^d*(1 - sw^2))*(d*s^2 - 4*d*mz^2*s*(1 - sw^2) + 
          4*(-1 + d)*mz^4*(1 - sw^2)^2) + 4*(1 - d)*mz^4*
         (2^(1 + d)*Pi^d - d*(2*Pi)^d)*(1 - 4*sw^2)*(3 - 4*sw^2)*(1 - sw^2)^2*
         (-s + 2*mz^2*(1 - sw^2))*((-2 + d)*s^2 - 4*s*t - 4*(-1 + d)*t^2) - 
        (2 - d)*(2*Pi)^d*s*(3 - 4*sw^2)*(-s + 2*mz^2*(1 - sw^2))*
         (s*(-4 + d + 4*sw^2) + 2*(-1 + 4*sw^2)*t)*
         (4*(-1 + d)*mz^4*(1 - sw^2)^2 + s*(d*s + 2*t) - 4*mz^2*(1 - sw^2)*
           (d*s + 2*t)) + 2*(1 - d)*(2 - d)*s*(-s/2 + mz^2*(1 - sw^2))*
         (2^(2 + d)*mz^2*Pi^d*s*(1 - sw^2)*(-3 + 4*sw^2)*
           (s*(2 - d + 4*sw^2) + (2 - 8*sw^2)*t) + 2^(3 + d)*mz^4*Pi^d*
           (1 - sw^2)^2*(-3 + 4*sw^2)*(2*(-3 + d)*s*sw^2 + (-1 + 4*sw^2)*t) + 
          s^2*(3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(3 - 3*d + 2*sw^2 + 
                2*d*sw^2 - 8*sw^4) + (3 - 16*sw^2 + 16*sw^4)*t))) - 
        2*(1 - d)*(2 - d)*s*(-s/2 + mz^2*(1 - sw^2))*
         (2^(2 + d)*mz^2*Pi^d*s*(1 - sw^2)*(-3 + 4*sw^2)*
           (s*(-2 + d - 4*sw^2) + 2*(-1 + 4*sw^2)*t) + 2^(2 + d)*mz^4*Pi^d*
           (1 - sw^2)^2*(-3 + 4*sw^2)*(s*(10 + d^2 - 4*sw^2 + 
              d*(-7 + 4*sw^2)) + 2*(-3 + d)*(-1 + 4*sw^2)*t) - 
          s^2*(-3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(3 + 2*(1 + d)*sw^2 - 
                8*sw^4) + (3 - 16*sw^2 + 16*sw^4)*t))) + 
        4*(1 - d)*(2 - d)*mz^4*(1 - sw^2)^2*(s + 2*t)*
         (2^(1 + d)*(-2 + d)*mz^2*Pi^d*(1 - sw^2)*(-3 + 4*sw^2)*
           (s*(-2 + d - 4*sw^2) + 2*(-1 + 4*sw^2)*t) - 
          s*(-3*d^2*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(2*s*(-9 - 6*sw^2 + 
                d^2*sw^2 + 24*sw^4 + d*(6 - 5*sw^2 - 4*sw^4)) + 
              (2 + d)*(3 - 16*sw^2 + 16*sw^4)*t))) - 2*(1 - d)*(2 - d)*s*
         (s^3*(-3*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(3 + 2*(1 + d)*sw^2 - 8*sw^4))*
           t - 2^(2 + d)*(-3 + d)*mz^6*Pi^d*(1 - sw^2)^3*(-3 + 4*sw^2)*
           (s*(-2 + d - 4*sw^2) + 2*(-1 + 4*sw^2)*t) + 2^(1 + d)*mz^4*Pi^d*s*
           (1 - sw^2)^2*(-3 + 4*sw^2)*(-3*s*(6 + d^2 + 12*sw^2 - 
              d*(5 + 4*sw^2)) - 2*(37 + 4*d^2 + 20*sw^2 - d*(25 + 4*sw^2))*
             t) + 2*mz^2*s*(1 - sw^2)*(69*d*(2*Pi)^d*s*t + 
            2^(1 + d)*Pi^d*(s^2*(-3 + 4*sw^2)*(4 + d^2 + 8*sw^2 - 
                4*d*(1 + sw^2)) + s*(-57 + 106*sw^2 - 46*d*sw^2 - 40*sw^4 + 
                d^2*(-6 + 8*sw^2))*t - 4*(3 - 16*sw^2 + 16*sw^4)*t^2)))))/
      ((-2 + d)*(-1 + d)*mz^4*Pi^(2*d)*(mz^2 - s)*s^2*sw^2*(1 - sw^2)^2) - 
     (4^(1 - 2*d)*(-(2^(1 + 3*d)*Pi^(3*d)*s^2*(3 - 14*sw^2 + 16*sw^4)*
          (-s + 2*mz^2*(1 - sw^2))*(d*s^2 - 4*d*mz^2*s*(1 - sw^2) + 
           4*(-1 + d)*mz^4*(1 - sw^2)^2)) + 2^(2 + 3*d)*(1 - d)*mz^4*Pi^(3*d)*
         (1 - sw^2)^2*(3 - 14*sw^2 + 16*sw^4)*(-s + 2*mz^2*(1 - sw^2))*
         ((-2 + d)*s^2 - 4*s*t - 4*(-1 + d)*t^2) - (2*Pi)^(3*d)*s*
         (1 - 2*sw^2)*(-s + 2*mz^2*(1 - sw^2))*(s*(-12 + 3*d + 8*sw^2) + 
          2*(-3 + 8*sw^2)*t)*(4*(-1 + d)*mz^4*(1 - sw^2)^2 + s*(d*s + 2*t) - 
          4*mz^2*(1 - sw^2)*(d*s + 2*t)) - 2^(1 + 3*d)*(1 - d)*Pi^(3*d)*s*
         (1 - 2*sw^2)*(-s/2 + mz^2*(1 - sw^2))*
         (8*mz^4*(1 - sw^2)^2*(4*(-3 + d)*s*sw^2 + (-3 + 8*sw^2)*t) + 
          s^2*(s*(-6 + 3*d - 8*sw^2) + 2*(-3 + 8*sw^2)*t) - 
          4*mz^2*s*(1 - sw^2)*(s*(-6 + 3*d - 8*sw^2) + 2*(-3 + 8*sw^2)*t)) + 
        2*(1 - d)*s*(1 - 2*sw^2)*(-s/2 + mz^2*(1 - sw^2))*
         ((2*Pi)^(3*d)*s^2*(s*(6 - 3*d + 8*sw^2) + 2*(3 - 8*sw^2)*t) + 
          2^(2 + 3*d)*mz^2*Pi^(3*d)*s*(1 - sw^2)*(s*(-6 + 3*d - 8*sw^2) + 
            2*(-3 + 8*sw^2)*t) + 2^(2 + 3*d)*mz^4*Pi^(3*d)*(1 - sw^2)^2*
           (s*(30 + 3*d^2 - 8*sw^2 + d*(-21 + 8*sw^2)) + 
            2*(-3 + d)*(-3 + 8*sw^2)*t)) - 2^(2 + 3*d)*(1 - d)*mz^4*Pi^(3*d)*
         (1 - 2*sw^2)*(1 - sw^2)^2*(s + 2*t)*(2*(-2 + d)*mz^2*(1 - sw^2)*
           (s*(-6 + 3*d - 8*sw^2) + 2*(-3 + 8*sw^2)*t) - 
          s*(s*(36 + 3*d^2 + 48*sw^2 - 8*d*(3 + sw^2)) + 
            2*(2 + d)*(-3 + 8*sw^2)*t)) - 2*(1 - d)*s*
         ((2*Pi)^(3*d)*s^3*(-6 + 3*d - 8*sw^2)*(-1 + 2*sw^2)*t - 
          2^(2 + 3*d)*(-3 + d)*mz^6*Pi^(3*d)*(1 - sw^2)^3*(-1 + 2*sw^2)*
           (s*(-6 + 3*d - 8*sw^2) + 2*(-3 + 8*sw^2)*t) - 
          2^(1 + 3*d)*mz^4*Pi^(3*d)*s*(1 - sw^2)^2*(-1 + 2*sw^2)*
           (3*s*(18 - 15*d + 3*d^2 + 24*sw^2 - 8*d*sw^2) + 
            2*(111 + 12*d^2 + 40*sw^2 - d*(75 + 8*sw^2))*t) + 
          2*mz^2*s*(1 - sw^2)*(69*d*(2*Pi)^(3*d)*s*t + 2^(1 + 3*d)*Pi^(3*d)*
             (s^2*(-1 + 2*sw^2)*(3*d^2 - 4*d*(3 + 2*sw^2) + 4*(3 + 4*sw^2)) + 
              s*(-57 + 134*sw^2 - 69*d*sw^2 - 40*sw^4 + 6*d^2*(-1 + 2*sw^2))*
               t - 4*(3 - 14*sw^2 + 16*sw^4)*t^2)))))/
      ((-1 + d)*mz^4*Pi^(4*d)*(mz^2 - s)*s^2*sw^2*(1 - sw^2)^2) - 
     ((2^(1 + d)*Pi^d*s*(s^2 - 4*mz^2*s*(1 - sw^2) + 4*(-1 + d)*mz^4*
           (1 - sw^2)^2)*(d*s^2 - 4*d*mz^2*s*(1 - sw^2) + 
          4*(-1 + d)*mz^4*(1 - sw^2)^2)*(9 - 30*sw^2 + 24*sw^4 + 
          8*sw^4*(3 - 20*sw^2 + 32*sw^4) - 2*sw^2*(15 - 76*sw^2 + 80*sw^4)))/
        (-1 + d) - 2^(1 + d)*Pi^d*(-s/2 + mz^2*(1 - sw^2))*
        (-s + 2*mz^2*(1 - sw^2))*(s^2 - 4*mz^2*s*(1 - sw^2) + 
         4*(-1 + d)*mz^4*(1 - sw^2)^2)*
        (s*(3*d*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
           2*(-9 + 30*sw^2 - 24*sw^4 + sw^2*(30 + 4*sw^2 - 80*sw^4) + 
             8*sw^4*(-3 - 10*sw^2 + 16*sw^4))) - 
         2*(9 - 30*sw^2 + 24*sw^4 + 8*sw^4*(3 - 20*sw^2 + 32*sw^4) - 
           2*sw^2*(15 - 76*sw^2 + 80*sw^4))*t) + 
       ((2*Pi)^d*(s^2 - 4*mz^2*s*(1 - sw^2) + 4*(-1 + d)*mz^4*(1 - sw^2)^2)*
         (s*(3*d*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) - 
            4*(9 - 30*sw^2 + 24*sw^4 + sw^2*(-30 + 74*sw^2 - 40*sw^4) + 
              8*sw^4*(3 - 5*sw^2 + 8*sw^4))) - 2*(9 - 30*sw^2 + 24*sw^4 + 
            8*sw^4*(3 - 20*sw^2 + 32*sw^4) - 2*sw^2*(15 - 76*sw^2 + 80*sw^4))*
           t)*(4*(-1 + d)*mz^4*(1 - sw^2)^2 + s*(d*s + 2*t) - 
          4*mz^2*(1 - sw^2)*(d*s + 2*t)))/(-1 + d) - 
       2*(-s/2 + mz^2*(1 - sw^2))*(s^3*(9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (s*(9 - 30*sw^2 + 24*sw^4 + sw^4*(24 + 80*sw^2 - 128*sw^4) + sw^2*
                (-30 - 4*sw^2 + 80*sw^4) - 3*d*(3 - 5*sw^2 + 8*sw^4 + 
                 sw^2*(-5 + 8*sw^2))) + (9 - 30*sw^2 + 24*sw^4 + 8*sw^4*
                (3 - 20*sw^2 + 32*sw^4) - 2*sw^2*(15 - 76*sw^2 + 80*sw^4))*
              t)) + 8*mz^6*(1 - sw^2)^3*(9*(-3 + d)*d*(2*Pi)^d*s + 
           2^(1 + d)*Pi^d*(s*(3*(3 - 5*(2 - 3*d + d^2)*sw^2 + 
                 4*(2 - 3*d + d^2)*sw^4) + sw^2*(-30 - 4*sw^2 + 80*sw^4 + 
                 3*d^2*(-5 + 8*sw^2) - 5*d*(-9 + 4*sw^2 + 16*sw^4)) + 4*sw^4*
                (6 + 3*d^2 + 20*sw^2 - 32*sw^4 + d*(-9 - 20*sw^2 + 
                   32*sw^4))) - (-1 + d)*(9 - 30*sw^2 + 24*sw^4 + 8*sw^4*
                (3 - 20*sw^2 + 32*sw^4) - 2*sw^2*(15 - 76*sw^2 + 80*sw^4))*
              t)) - 4*mz^4*s*(1 - sw^2)^2*(9*(-1 + d)*d*(2*Pi)^d*s + 
           2^(1 + d)*Pi^d*(s*(3*(-3 - 5*(-2 - d + d^2)*sw^2 + 
                 4*(-2 - d + d^2)*sw^4) + sw^2*(30 + 4*sw^2 - 80*sw^4 + 
                 3*d^2*(-5 + 8*sw^2) + d*(15 + 28*sw^2 - 80*sw^4)) + 4*sw^4*
                (-6 + 3*d^2 - 20*sw^2 + 32*sw^4 + d*(-3 - 20*sw^2 + 
                   32*sw^4))) - (1 + d)*(9 - 30*sw^2 + 24*sw^4 + 8*sw^4*
                (3 - 20*sw^2 + 32*sw^4) - 2*sw^2*(15 - 76*sw^2 + 80*sw^4))*
              t)) + 6*mz^2*s^2*(1 - sw^2)*(9*d*(2*Pi)^d*s + 
           2^(1 + d)*Pi^d*(s*(4*sw^4*(-6 + 3*d - 20*sw^2 + 32*sw^4) + 3*
                (-3 - 5*(-2 + d)*sw^2 + 4*(-2 + d)*sw^4) + sw^2*
                (30 + 4*sw^2 - 80*sw^4 + 3*d*(-5 + 8*sw^2))) + 
             (-9 + 30*sw^2 - 24*sw^4 - 8*sw^4*(3 - 20*sw^2 + 32*sw^4) + 2*
                sw^2*(15 - 76*sw^2 + 80*sw^4))*t))) + 
       2*(-(s^4*(9*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(4*sw^4*(-6 + 3*d - 20*sw^2 + 
                32*sw^4) + 3*(-3 - 5*(-2 + d)*sw^2 + 4*(-2 + d)*sw^4) + 
              sw^2*(30 + 4*sw^2 - 80*sw^4 + 3*d*(-5 + 8*sw^2))))*t) + 
         8*mz^8*(1 - sw^2)^4*(9*(-3 + d)*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (s*(3*(3 - 5*(2 - 3*d + d^2)*sw^2 + 4*(2 - 3*d + d^2)*sw^4) + 
               sw^2*(-30 - 4*sw^2 + 80*sw^4 + 3*d^2*(-5 + 8*sw^2) - 
                 5*d*(-9 + 4*sw^2 + 16*sw^4)) + 4*sw^4*(6 + 3*d^2 + 20*sw^2 - 
                 32*sw^4 + d*(-9 - 20*sw^2 + 32*sw^4))) - 
             (-1 + d)*(9 - 30*sw^2 + 24*sw^4 + 8*sw^4*(3 - 20*sw^2 + 
                 32*sw^4) - 2*sw^2*(15 - 76*sw^2 + 80*sw^4))*t)) - 
         8*mz^6*s*(1 - sw^2)^3*(9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (s*(4*sw^4*(-6 + 3*d - 20*sw^2 + 32*sw^4) + 3*(-3 - 5*(-2 + d)*
                  sw^2 + 4*(-2 + d)*sw^4) + sw^2*(30 + 4*sw^2 - 80*sw^4 + 
                 3*d*(-5 + 8*sw^2))) + (-9*(3 - 10*sw^2 + 16*sw^4 + 
                 2*sw^2*(-5 + 8*sw^2)) - 3*d^2*(3 - 10*sw^2 + 16*sw^4 + 
                 2*sw^2*(-5 + 8*sw^2)) + d*(9*(3 - 10*sw^2 + 8*sw^4) + 
                 10*sw^2*(-9 + 4*sw^2 + 16*sw^4) - 8*sw^4*(-9 - 20*sw^2 + 
                   32*sw^4)))*t)) - 4*mz^2*(1 - sw^2)*(9*d^2*(2*Pi)^d*s^4 + 
           2^(1 + d)*Pi^d*s^2*(s^2*(3*d^2*(4*sw^4 + sw^2*(-5 + 4*sw^2) + 
                 sw^2*(-5 + 8*sw^2)) + 2*d*(-9 + 30*sw^2 - 24*sw^4 + 
                 sw^2*(30 - 22*sw^2 - 40*sw^4) + 8*sw^4*(-3 - 5*sw^2 + 
                   8*sw^4)) + 2*(9 - 30*sw^2 + 24*sw^4 + sw^4*(24 + 80*sw^2 - 
                   128*sw^4) + sw^2*(-30 - 4*sw^2 + 80*sw^4))) + 
             s*(30*(3 - 10*sw^2 + 8*sw^4) + 16*sw^4*(15 - 10*sw^2 + 
                 16*sw^4) - 4*sw^2*(75 - 146*sw^2 + 40*sw^4) - 18*d*
                (3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 3*d^2*
                (3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)))*t + 
             2*(9 - 30*sw^2 + 24*sw^4 + 8*sw^4*(3 - 20*sw^2 + 32*sw^4) - 2*
                sw^2*(15 - 76*sw^2 + 80*sw^4))*t^2)) + 2*mz^4*(1 - sw^2)^2*
          (-279*d*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
            (s^2*(12*d^2*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) - 15*
                (-9 + 30*sw^2 - 24*sw^4 + sw^2*(30 + 4*sw^2 - 80*sw^4) + 
                 8*sw^4*(-3 - 10*sw^2 + 16*sw^4)) + d*(93*sw^2*(5 - 4*sw^2) + 
                 sw^2*(465 - 328*sw^2 - 640*sw^4) + 4*sw^4*(-93 - 160*sw^2 + 
                   256*sw^4))) + s*(21*d^2*(3 - 10*sw^2 + 16*sw^4 + 
                 2*sw^2*(-5 + 8*sw^2)) + d*(-123*(3 - 10*sw^2 + 8*sw^4) - 
                 8*sw^4*(123 - 20*sw^2 + 32*sw^4) + 2*sw^2*(615 - 1036*sw^2 + 
                   80*sw^4)) + 3*(69*(3 - 10*sw^2 + 8*sw^4) - 10*sw^2*
                  (69 - 152*sw^2 + 64*sw^4) + 8*sw^4*(69 - 80*sw^2 + 
                   128*sw^4)))*t + 16*(9 - 30*sw^2 + 24*sw^4 + 8*sw^4*
                (3 - 20*sw^2 + 32*sw^4) - 2*sw^2*(15 - 76*sw^2 + 80*sw^4))*
              t^2))))/(mz^4*(2*Pi)^(2*d)*(mz^2 - s)^2*(-mz^2 + s)*sw^4*
       (1 - sw^2)^2) - 
     (8^(1 - 2*d)*(-(2^(1 + 5*d)*Pi^(5*d)*s*(3 - 20*sw^2 + 32*sw^4)*
          (s^2 - 4*mz^2*s*(1 - sw^2) + 4*(-1 + d)*mz^4*(1 - sw^2)^2)*
          (d*s^2 - 4*d*mz^2*s*(1 - sw^2) + 4*(-1 + d)*mz^4*(1 - sw^2)^2)*
          (-1 + GaugeXi[W])^2) - 2^(1 + d)*(1 - d)*Pi^d*
         ((2*Pi)^(4*d)*s^4*(-6 + 3*d - 20*sw^2 + 32*sw^4)*t - 
          2^(3 + 4*d)*(-1 + d)*mz^8*Pi^(4*d)*(1 - sw^2)^4*
           (s*(-6 + 3*d - 20*sw^2 + 32*sw^4) - 2*(3 - 20*sw^2 + 32*sw^4)*t) + 
          2^(3 + 4*d)*mz^6*Pi^(4*d)*s*(1 - sw^2)^3*
           (s*(-6 + 3*d - 20*sw^2 + 32*sw^4) - 2*(9 + 3*d^2 + 
              d*(-9 - 20*sw^2 + 32*sw^4))*t) + 4^(1 + 2*d)*mz^2*Pi^(4*d)*s^2*
           (1 - sw^2)*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
              4*d*(-3 - 5*sw^2 + 8*sw^4)) + 2*s*(30 - 18*d + 3*d^2 - 
              20*sw^2 + 32*sw^4)*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2) - 
          2^(1 + 4*d)*mz^4*Pi^(4*d)*s*(1 - sw^2)^2*
           (s^2*(90 + 24*d^2 + 300*sw^2 - 480*sw^4 + d*(-93 - 160*sw^2 + 
                256*sw^4)) + 2*s*(21*d^2 + d*(-123 + 20*sw^2 - 32*sw^4) + 
              3*(69 - 80*sw^2 + 128*sw^4))*t + 32*(3 - 20*sw^2 + 32*sw^4)*
             t^2))*(-1 + GaugeXi[W])^2 + (-1 + d)*(2*Pi)^(3*d)*
         (s - 2*mz^2*(1 - sw^2))^2*(s^2 - 4*mz^2*s*(1 - sw^2) + 
          4*(-1 + d)*mz^4*(1 - sw^2)^2)*(s*(-6 + 3*d - 20*sw^2 + 32*sw^4) - 
          2*(3 - 20*sw^2 + 32*sw^4)*t)*((2*Pi)^(2*d) - 2^(1 + 2*d)*Pi^(2*d)*
           GaugeXi[W] + (2*Pi)^(2*d)*GaugeXi[W]^2) - 
        (2*Pi)^(2*d)*(s^2 - 4*mz^2*s*(1 - sw^2) + 4*(-1 + d)*mz^4*
           (1 - sw^2)^2)*(3*d*s - 4*s*(3 - 5*sw^2 + 8*sw^4) - 
          2*(3 - 20*sw^2 + 32*sw^4)*t)*(4*(-1 + d)*mz^4*(1 - sw^2)^2 + 
          s*(d*s + 2*t) - 4*mz^2*(1 - sw^2)*(d*s + 2*t))*
         ((2*Pi)^(3*d) - 2^(1 + 3*d)*Pi^(3*d)*GaugeXi[W] + 
          (2*Pi)^(3*d)*GaugeXi[W]^2) + (-1 + d)*(s - 2*mz^2*(1 - sw^2))^2*
         (s^2 - 4*mz^2*s*(1 - sw^2) + 4*(-1 + d)*mz^4*(1 - sw^2)^2)*
         (s*(-6 + 3*d - 20*sw^2 + 32*sw^4) - 2*(3 - 20*sw^2 + 32*sw^4)*t)*
         ((2*Pi)^(5*d) - 2^(1 + 5*d)*Pi^(5*d)*GaugeXi[W] + 
          (2*Pi)^(5*d)*GaugeXi[W]^2)))/((-1 + d)*mz^4*Pi^(6*d)*(mz^2 - s)*s^2*
       (1 - sw^2)^2*(-1 + GaugeXi[W])^2) - 
     (4*(((-3 + 8*sw^2)*(s^2 - 4*mz^2*s*(1 - sw^2) + 4*(-1 + d)*mz^4*
            (1 - sw^2)^2)*(d*s^2 - 4*d*mz^2*s*(1 - sw^2) + 
           4*(-1 + d)*mz^4*(1 - sw^2)^2)*(1 - 2*sw^2 + sw^2*(-2 + 8*sw^2)))/
         ((-1 + d)*mz^4*(2*Pi)^d*(1 - sw^2)^2) + 
        ((-3 + 8*sw^2)*(d*s^2 - 4*d*mz^2*s*(1 - sw^2) + 4*(-1 + d)*mz^4*
            (1 - sw^2)^2)*((2*Pi)^d*s^2 - 2^(2 + d)*mz^2*Pi^d*s*(1 - sw^2) + 
           2^(2 + d)*(-1 + d)*mz^4*Pi^d*(1 - sw^2)^2)*(1 - 2*sw^2 + 
           sw^2*(-2 + 8*sw^2)))/((-1 + d)*mz^4*(2*Pi)^(2*d)*(1 - sw^2)^2) + 
        ((4*(-1 + d)*mz^4*(1 - sw^2)^2 + s*(d*s + 2*t) - 4*mz^2*(1 - sw^2)*
            (d*s + 2*t))*((2*Pi)^(3*d)*s^2*(s*(12 - 32*sw^2 + 16*sw^4 + d*
                (-3 + 12*sw^2) - 8*sw^2*(3 - 5*sw^2 + 8*sw^4)) - 
             2*(-3 + 8*sw^2)*(1 - 2*sw^2 + sw^2*(-2 + 8*sw^2))*t) - 
           2^(2 + 3*d)*mz^2*Pi^(3*d)*s*(1 - sw^2)*
            (s*(12 - 32*sw^2 + 16*sw^4 + d*(-3 + 12*sw^2) - 8*sw^2*
                (3 - 5*sw^2 + 8*sw^4)) - 2*(-3 + 8*sw^2)*(1 - 2*sw^2 + sw^2*
                (-2 + 8*sw^2))*t) + 4*mz^4*(1 - sw^2)^2*
            (-3*(-5 + d)*d*(2*Pi)^(3*d)*s + 2^(1 + 3*d)*Pi^(3*d)*
              (s*(-6 + (16 - 19*d + 3*d^2)*sw^2 + 8*(-1 + d)*sw^4 + 
                 sw^2*(3*d^2 + d*(-15 + 20*sw^2 - 32*sw^4) + 4*(3 - 5*sw^2 + 
                     8*sw^4))) - (-1 + d)*(-3 + 8*sw^2)*(1 - 2*sw^2 + 
                 sw^2*(-2 + 8*sw^2))*t))))/((-1 + d)*mz^4*(2*Pi)^(4*d)*s*
          (1 - sw^2)^2) - (2^(1 - 4*d)*(-s/2 + mz^2*(1 - sw^2))*
          (-((2*Pi)^(3*d)*s^3*(s*(6 - 4*sw^2 - 16*sw^4 + d*(-3 + 12*sw^2) + 
                4*sw^2*(-3 - 10*sw^2 + 16*sw^4)) - 2*(-3 + 8*sw^2)*(1 - 
                2*sw^2 + sw^2*(-2 + 8*sw^2))*t)) + 3*2^(1 + 3*d)*mz^2*
            Pi^(3*d)*s^2*(1 - sw^2)*(s*(6 - 4*sw^2 - 16*sw^4 + d*
                (-3 + 12*sw^2) + 4*sw^2*(-3 - 10*sw^2 + 16*sw^4)) - 
             2*(-3 + 8*sw^2)*(1 - 2*sw^2 + sw^2*(-2 + 8*sw^2))*t) + 
           8*mz^6*(1 - sw^2)^3*(-3*(-3 + d)*d*(2*Pi)^(3*d)*s + 
             2^(1 + 3*d)*Pi^(3*d)*(s*(-3 + (2 - 5*d + 3*d^2)*sw^2 - 
                 8*(-1 + d)*sw^4 + sw^2*(6 + 3*d^2 + 20*sw^2 - 32*sw^4 + 
                   d*(-9 - 20*sw^2 + 32*sw^4))) - (-1 + d)*(-3 + 8*sw^2)*
                (1 - 2*sw^2 + sw^2*(-2 + 8*sw^2))*t)) - 4*mz^4*s*(1 - sw^2)^2*
            (-3*(-1 + d)*d*(2*Pi)^(3*d)*s + 2^(1 + 3*d)*Pi^(3*d)*
              (s*(3 + (-2 + d + 3*d^2)*sw^2 - 8*(1 + d)*sw^4 + 
                 sw^2*(-6 + 3*d^2 - 20*sw^2 + 32*sw^4 + d*(-3 - 20*sw^2 + 
                     32*sw^4))) - (1 + d)*(-3 + 8*sw^2)*(1 - 2*sw^2 + 
                 sw^2*(-2 + 8*sw^2))*t))))/(mz^4*Pi^(4*d)*s*(1 - sw^2)^2) + 
        (2^(1 - 4*d)*(-((2*Pi)^(3*d)*s^4*(6 - 4*sw^2 - 16*sw^4 + 
              d*(-3 + 12*sw^2) + 4*sw^2*(-3 - 10*sw^2 + 16*sw^4))*t) + 
           8*mz^8*(1 - sw^2)^4*(-3*(-3 + d)*d*(2*Pi)^(3*d)*s + 
             2^(1 + 3*d)*Pi^(3*d)*(s*(-3 + (2 - 5*d + 3*d^2)*sw^2 - 
                 8*(-1 + d)*sw^4 + sw^2*(6 + 3*d^2 + 20*sw^2 - 32*sw^4 + 
                   d*(-9 - 20*sw^2 + 32*sw^4))) - (-1 + d)*(-3 + 8*sw^2)*
                (1 - 2*sw^2 + sw^2*(-2 + 8*sw^2))*t)) - 8*mz^6*s*(1 - sw^2)^3*
            (-3*d*(2*Pi)^(3*d)*s + 2^(1 + 3*d)*Pi^(3*d)*
              (s*(3 + (-2 + 3*d)*sw^2 - 8*sw^4 + sw^2*(-6 + 3*d - 20*sw^2 + 
                   32*sw^4)) + (d^2*(3 - 12*sw^2) - 9*(-1 + 4*sw^2) + 
                 d*(-9 + 10*sw^2 + 16*sw^4 + sw^2*(18 + 40*sw^2 - 64*sw^4)))*
                t)) - 4*mz^2*(1 - sw^2)*(-3*d^2*(2*Pi)^(3*d)*s^4 + 
             2^(1 + 3*d)*Pi^(3*d)*s^2*(s^2*(-6 + 4*sw^2 + 6*d^2*sw^2 + 
                 16*sw^4 + sw^2*(12 + 40*sw^2 - 64*sw^4) + 2*d*(3 - 4*sw^2 - 
                   4*sw^4 + 2*sw^2*(-3 - 5*sw^2 + 8*sw^4))) + s*
                (-30 + 68*sw^2 - 16*sw^4 - 18*d*(-1 + 4*sw^2) + 
                 d^2*(-3 + 12*sw^2) + sw^2*(60 - 40*sw^2 + 64*sw^4))*t + 2*
                (-3 + 8*sw^2)*(1 - 2*sw^2 + sw^2*(-2 + 8*sw^2))*t^2)) + 
           2*mz^4*(1 - sw^2)^2*(93*d*(2*Pi)^(3*d)*s^3 + 2^(1 + 3*d)*Pi^(3*d)*
              s*(s^2*(12*d^2*(-1 + 4*sw^2) - 15*(3 - 2*sw^2 - 8*sw^4 + 
                   sw^2*(-6 - 20*sw^2 + 32*sw^4)) + 
                 d*(-(sw^2*(61 + 64*sw^2)) + sw^2*(-93 - 160*sw^2 + 
                     256*sw^4))) + s*(21*d^2*(-1 + 4*sw^2) + 
                 d*(123 - 254*sw^2 + 16*sw^4 + sw^2*(-246 + 40*sw^2 - 
                     64*sw^4)) + 3*(-69 + 170*sw^2 - 64*sw^4 + 2*sw^2*
                    (69 - 80*sw^2 + 128*sw^4)))*t + 16*(-3 + 8*sw^2)*
                (1 - 2*sw^2 + sw^2*(-2 + 8*sw^2))*t^2))))/
         (mz^4*Pi^(4*d)*s*(1 - sw^2)^2) - 2*(-s/2 + mz^2*(1 - sw^2))*
         ((3*d*s)/(2*Pi)^d - (4^(1 - d)*(2^(1 + d)*Pi^d - (2*Pi)^d)*s*
            (-3 + 8*sw^2)*(1 - 2*sw^2 + sw^2*(-2 + 8*sw^2)))/Pi^(2*d) + 
          (2^(2 - d)*mz^2*(1 - sw^2)*(-3 + 8*sw^2)*(1 - 2*sw^2 + 
             sw^2*(-2 + 8*sw^2)))/Pi^d + (4^(1 - d)*mz^2*(2^(1 + d)*Pi^d - 
             (2*Pi)^d)*(1 - sw^2)*(-3 + 8*sw^2)*(1 - 2*sw^2 + 
             sw^2*(-2 + 8*sw^2)))/Pi^(2*d) + (2^(2 - d)*(-3 + 8*sw^2)*
            (s^2 - 3*mz^2*s*(1 - sw^2) + (-6 + 4*d)*mz^4*(1 - sw^2)^2)*
            (1 - 2*sw^2 + sw^2*(-2 + 8*sw^2)))/(mz^2*Pi^d*(1 - sw^2)) + 
          (2^(1 - d)*mz^2*(1 - sw^2)*(s*(12 - 32*sw^2 + 16*sw^4 + d*
                (-3 + 12*sw^2) - 8*sw^2*(3 - 5*sw^2 + 8*sw^4)) - 
             2*(-3 + 8*sw^2)*(1 - 2*sw^2 + sw^2*(-2 + 8*sw^2))*t))/(Pi^d*s) + 
          (2^(1 - d)*(-3 + 2*d)*mz^2*(1 - sw^2)*
            (s*(6 - 4*sw^2 - 16*sw^4 + d*(-3 + 12*sw^2) + 4*sw^2*
                (-3 - 10*sw^2 + 16*sw^4)) - 2*(-3 + 8*sw^2)*(1 - 2*sw^2 + 
               sw^2*(-2 + 8*sw^2))*t))/(Pi^d*s) + 
          (2^(1 - d)*(-3 + 2*d)*mz^2*(1 - sw^2)*
            (3*s*(6 - 20*sw^2 + 16*sw^4 + d*(-1 + 4*sw^2) - 4*sw^2*
                (3 - 10*sw^2 + 16*sw^4)) - 2*(-3 + 8*sw^2)*(1 - 2*sw^2 + sw^2*
                (-2 + 8*sw^2))*t))/(Pi^d*s) + 
          (2^(1 - d)*(-3*s*(3 + (-10 + d)*sw^2 + 8*sw^4 + sw^2*(-6 + d + 
                 20*sw^2 - 32*sw^4)) + (-3 + 8*sw^2)*(1 - 2*sw^2 + sw^2*
                (-2 + 8*sw^2))*t))/Pi^d + 
          (2^(1 - d)*(s*(d*(3 - 12*sw^2) + 4*(-3 + 8*sw^2 - 4*sw^4 + 
                 2*sw^2*(3 - 5*sw^2 + 8*sw^4))) + 2*(-3 + 8*sw^2)*
              (1 - 2*sw^2 + sw^2*(-2 + 8*sw^2))*t))/Pi^d - 
          (2^(1 - 2*d)*(3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(3*s*(3 - 10*sw^2 + 
                 8*sw^4 + d*(-1 + 2*sw^2) + sw^2*(-6 + 20*sw^2 - 32*sw^4)) - 
               (-3 + 8*sw^2)*(1 - 2*sw^2 + sw^2*(-2 + 8*sw^2))*t)))/
           Pi^(2*d) + (mz^2*(1 - sw^2)*(-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
              (3*s*(3 - 10*sw^2 + 8*sw^4 + d*(1 + 2*sw^2) + sw^2*
                  (-6 + 20*sw^2 - 32*sw^4)) - (-3 + 8*sw^2)*(1 - 2*sw^2 + 
                 sw^2*(-2 + 8*sw^2))*t)))/((2*Pi)^(2*d)*s) - 
          (2^(1 - 2*d)*(3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(3 - 2*sw^2 - 
                 8*sw^4 + 3*d*(-1 + 2*sw^2) + sw^2*(-6 - 20*sw^2 + 
                   32*sw^4)) - (-3 + 8*sw^2)*(1 - 2*sw^2 + sw^2*
                  (-2 + 8*sw^2))*t)))/Pi^(2*d) + 
          (2^(1 - 2*d)*(3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
              (s*(-3 + (2 - 3*d)*sw^2 + 8*sw^4 + sw^2*(6 - 3*d + 20*sw^2 - 
                   32*sw^4)) + (-3 + 8*sw^2)*(1 - 2*sw^2 + sw^2*
                  (-2 + 8*sw^2))*t)))/Pi^(2*d) + 
          (3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-3 + (2 - 3*d)*sw^2 + 8*sw^4 + 
                sw^2*(6 - 3*d + 20*sw^2 - 32*sw^4)) + (-3 + 8*sw^2)*(1 - 
                2*sw^2 + sw^2*(-2 + 8*sw^2))*t))/(2*Pi)^(2*d) - 
          (s*(3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-3 + (2 - 3*d)*sw^2 + 
                 8*sw^4 + sw^2*(6 - 3*d + 20*sw^2 - 32*sw^4)) + (-3 + 8*sw^2)*
                (1 - 2*sw^2 + sw^2*(-2 + 8*sw^2))*t)))/(mz^2*(2*Pi)^(2*d)*
            (1 - sw^2)) - (mz^2*(1 - sw^2)*(3*d*(2*Pi)^d*s + 
             2^(1 + d)*Pi^d*(s*(-3 + (2 - 3*d)*sw^2 + 8*sw^4 + 
                 sw^2*(6 - 3*d + 20*sw^2 - 32*sw^4)) + (-3 + 8*sw^2)*
                (1 - 2*sw^2 + sw^2*(-2 + 8*sw^2))*t)))/((2*Pi)^(2*d)*s) + 
          (s*(-3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(3*s*(3 + (-10 + d)*sw^2 + 
                 8*sw^4 + sw^2*(-6 + d + 20*sw^2 - 32*sw^4)) - (-3 + 8*sw^2)*
                (1 - 2*sw^2 + sw^2*(-2 + 8*sw^2))*t) - 2^(1 + d)*Pi^d*
              (3*s*(6 - 20*sw^2 + 16*sw^4 + d*(-1 + 4*sw^2) - 4*sw^2*
                  (3 - 10*sw^2 + 16*sw^4)) - 2*(-3 + 8*sw^2)*(1 - 2*sw^2 + 
                 sw^2*(-2 + 8*sw^2))*t)*GaugeXi[W] + 
             (-3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(3*s*(3 + (-10 + d)*sw^2 + 
                   8*sw^4 + sw^2*(-6 + d + 20*sw^2 - 32*sw^4)) - 
                 (-3 + 8*sw^2)*(1 - 2*sw^2 + sw^2*(-2 + 8*sw^2))*t))*
              GaugeXi[W]^2))/(mz^2*(2*Pi)^(2*d)*(1 - sw^2)*(-1 + GaugeXi[W])^
             2) + (s*(-3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
              (s*(3 + (-2 + 3*d)*sw^2 - 8*sw^4 + sw^2*(-6 + 3*d - 20*sw^2 + 
                   32*sw^4)) - (-3 + 8*sw^2)*(1 - 2*sw^2 + sw^2*
                  (-2 + 8*sw^2))*t) - 2^(1 + d)*Pi^d*(s*(6 - 4*sw^2 - 
                 16*sw^4 + d*(-3 + 12*sw^2) + 4*sw^2*(-3 - 10*sw^2 + 
                   16*sw^4)) - 2*(-3 + 8*sw^2)*(1 - 2*sw^2 + 
                 sw^2*(-2 + 8*sw^2))*t)*GaugeXi[W] + 
             (-3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(3 + (-2 + 3*d)*sw^2 - 
                   8*sw^4 + sw^2*(-6 + 3*d - 20*sw^2 + 32*sw^4)) - 
                 (-3 + 8*sw^2)*(1 - 2*sw^2 + sw^2*(-2 + 8*sw^2))*t))*
              GaugeXi[W]^2))/(mz^2*(2*Pi)^(2*d)*(1 - sw^2)*(-1 + GaugeXi[W])^
             2) - s*((2^(1 - d)*(-3 + 2*d)*(s*(6 - 4*sw^2 - 16*sw^4 + 
                 d*(-3 + 12*sw^2) + 4*sw^2*(-3 - 10*sw^2 + 16*sw^4)) - 2*
                (-3 + 8*sw^2)*(1 - 2*sw^2 + sw^2*(-2 + 8*sw^2))*t))/
             (Pi^d*s) - (2^(1 - 2*d)*(3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
                (s*(3 - 2*sw^2 - 8*sw^4 + 3*d*(-1 + 2*sw^2) + sw^2*
                    (-6 - 20*sw^2 + 32*sw^4)) - (-3 + 8*sw^2)*(1 - 2*sw^2 + 
                   sw^2*(-2 + 8*sw^2))*t)))/(mz^2*Pi^(2*d)*(1 - sw^2)) + 
            (3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-3 + (2 - 3*d)*sw^2 + 
                  8*sw^4 + sw^2*(6 - 3*d + 20*sw^2 - 32*sw^4)) + 
                (-3 + 8*sw^2)*(1 - 2*sw^2 + sw^2*(-2 + 8*sw^2))*t))/
             (mz^2*(2*Pi)^(2*d)*(1 - sw^2)) + (s*(-3*d*(2*Pi)^d*s + 2^(1 + d)*
                Pi^d*(s*(3 + (-2 + 3*d)*sw^2 - 8*sw^4 + sw^2*(-6 + 3*d - 
                     20*sw^2 + 32*sw^4)) - (-3 + 8*sw^2)*(1 - 2*sw^2 + 
                   sw^2*(-2 + 8*sw^2))*t) - 2^(1 + d)*Pi^d*
                (s*(6 - 4*sw^2 - 16*sw^4 + d*(-3 + 12*sw^2) + 4*sw^2*
                    (-3 - 10*sw^2 + 16*sw^4)) - 2*(-3 + 8*sw^2)*(1 - 2*sw^2 + 
                   sw^2*(-2 + 8*sw^2))*t)*GaugeXi[W] + (-3*d*(2*Pi)^d*s + 
                 2^(1 + d)*Pi^d*(s*(3 + (-2 + 3*d)*sw^2 - 8*sw^4 + 
                     sw^2*(-6 + 3*d - 20*sw^2 + 32*sw^4)) - (-3 + 8*sw^2)*
                    (1 - 2*sw^2 + sw^2*(-2 + 8*sw^2))*t))*GaugeXi[W]^2))/
             (mz^4*(2*Pi)^(2*d)*(1 - sw^2)^2*(-1 + GaugeXi[W])^2)))))/
      ((mz^2 - s)*(-mz^2 + s)*sw^2) - 
     (2^(1 - 2*d)*(((2*Pi)^d*(-1 + 4*sw^2)*(s^2 - 4*mz^2*s*(1 - sw^2) + 
           4*(-1 + d)*mz^4*(1 - sw^2)^2)*(d*s^2 - 4*d*mz^2*s*(1 - sw^2) + 
           4*(-1 + d)*mz^4*(1 - sw^2)^2)*(9 - 12*sw^2 + 
           4*sw^2*(-3 + 8*sw^2)))/(-1 + d) + 
        ((d*s^2 - 4*d*mz^2*s*(1 - sw^2) + 4*(-1 + d)*mz^4*(1 - sw^2)^2)*
          (-(2^(2 + d)*mz^2*Pi^d*s*(1 - sw^2)*(-1 + 4*sw^2)*
             (9 - 12*sw^2 + 4*sw^2*(-3 + 8*sw^2))) + 2^(2 + d)*(-1 + d)*mz^4*
            Pi^d*(1 - sw^2)^2*(-1 + 4*sw^2)*(9 - 12*sw^2 + 
             4*sw^2*(-3 + 8*sw^2)) - s^2*(9*(2*Pi)^d + 2^(2 + d)*Pi^d*
              (12*sw^2*(-1 + sw^2) + sw^2*(-3 + 20*sw^2 - 32*sw^4)))))/
         (-1 + d) + ((4*(-1 + d)*mz^4*(1 - sw^2)^2 + s*(d*s + 2*t) - 
           4*mz^2*(1 - sw^2)*(d*s + 2*t))*(-(2^(2 + d)*mz^2*Pi^d*s*(1 - sw^2)*
             (s*(3*d*(-3 + 8*sw^2) + 12*(3 - 7*sw^2 + 4*sw^4) - 
                16*sw^2*(3 - 5*sw^2 + 8*sw^4)) - 2*(-1 + 4*sw^2)*(9 - 
                12*sw^2 + 4*sw^2*(-3 + 8*sw^2))*t)) + 
           s^2*(-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(2*s*(3*(3 + (-7 + d)*sw^2 + 
                   4*sw^4) + sw^2*(3*d - 4*(3 - 5*sw^2 + 8*sw^4))) - 
               (-1 + 4*sw^2)*(9 - 12*sw^2 + 4*sw^2*(-3 + 8*sw^2))*t)) + 
           4*mz^4*(1 - sw^2)^2*(-9*(-5 + d)*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
              (2*s*(3*(-3 + (7 - 8*d + d^2)*sw^2 + 4*(-1 + d)*sw^4) + 
                 sw^2*(3*d^2 + d*(-15 + 20*sw^2 - 32*sw^4) + 4*(3 - 5*sw^2 + 
                     8*sw^4))) - (-1 + d)*(-1 + 4*sw^2)*(9 - 12*sw^2 + 
                 4*sw^2*(-3 + 8*sw^2))*t))))/((-1 + d)*s) - 
        (2*(-s/2 + mz^2*(1 - sw^2))*(3*2^(1 + d)*mz^2*Pi^d*s^2*(1 - sw^2)*
            (s*(18 + 12*sw^2 - 48*sw^4 + 3*d*(-3 + 8*sw^2) + 8*sw^2*
                (-3 - 10*sw^2 + 16*sw^4)) - 2*(-1 + 4*sw^2)*(9 - 12*sw^2 + 4*
                sw^2*(-3 + 8*sw^2))*t) - s^3*(-9*d*(2*Pi)^d*s + 
             2^(1 + d)*Pi^d*(s*(9 + 6*(1 + d)*sw^2 - 24*sw^4 + 2*sw^2*
                  (-6 + 3*d - 20*sw^2 + 32*sw^4)) - (-1 + 4*sw^2)*
                (9 - 12*sw^2 + 4*sw^2*(-3 + 8*sw^2))*t)) + 
           8*mz^6*(1 - sw^2)^3*(-9*(-3 + d)*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
              (s*(-9 + 6*(-1 + d^2)*sw^2 - 24*(-1 + d)*sw^4 + 2*sw^2*
                  (6 + 3*d^2 + 20*sw^2 - 32*sw^4 + d*(-9 - 20*sw^2 + 
                     32*sw^4))) - (-1 + d)*(-1 + 4*sw^2)*(9 - 12*sw^2 + 
                 4*sw^2*(-3 + 8*sw^2))*t)) - 4*mz^4*s*(1 - sw^2)^2*
            (-9*(-1 + d)*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
              (s*(9 + 6*(1 + d)^2*sw^2 - 24*(1 + d)*sw^4 + 2*sw^2*
                  (-6 + 3*d^2 - 20*sw^2 + 32*sw^4 + d*(-3 - 20*sw^2 + 
                     32*sw^4))) - (1 + d)*(-1 + 4*sw^2)*(9 - 12*sw^2 + 
                 4*sw^2*(-3 + 8*sw^2))*t))))/s - 
        (2*(-s/2 + mz^2*(1 - sw^2))*(3*2^(1 + d)*mz^2*Pi^d*s^2*(1 - sw^2)*
            (s*(18 + 12*sw^2 - 48*sw^4 + 3*d*(-3 + 8*sw^2) + 8*sw^2*
                (-3 - 10*sw^2 + 16*sw^4)) - 2*(-1 + 4*sw^2)*(9 - 12*sw^2 + 4*
                sw^2*(-3 + 8*sw^2))*t) - s^3*(9*d*(2*Pi)^d*s + 
             2^(1 + d)*Pi^d*(s*(9 + 6*sw^2 - 24*sw^4 + d*(-9 + 12*sw^2) + 
                 4*sw^2*(-3 - 10*sw^2 + 16*sw^4)) - (-1 + 4*sw^2)*
                (9 - 12*sw^2 + 4*sw^2*(-3 + 8*sw^2))*t)) + 
           8*mz^6*(1 - sw^2)^3*(-9*(-3 + d)*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
              (s*(-9 + 6*(-1 + d^2)*sw^2 - 24*(-1 + d)*sw^4 + 2*sw^2*
                  (6 + 3*d^2 + 20*sw^2 - 32*sw^4 + d*(-9 - 20*sw^2 + 
                     32*sw^4))) - (-1 + d)*(-1 + 4*sw^2)*(9 - 12*sw^2 + 
                 4*sw^2*(-3 + 8*sw^2))*t)) - 4*mz^4*s*(1 - sw^2)^2*
            (-9*(-1 + d)*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
              (s*(9 + 6*(1 + d)^2*sw^2 - 24*(1 + d)*sw^4 + 2*sw^2*
                  (-6 + 3*d^2 - 20*sw^2 + 32*sw^4 + d*(-3 - 20*sw^2 + 
                     32*sw^4))) - (1 + d)*(-1 + 4*sw^2)*(9 - 12*sw^2 + 
                 4*sw^2*(-3 + 8*sw^2))*t)) - 2*(3*2^(1 + d)*mz^2*Pi^d*s^2*
              (1 - sw^2)*(s*(18 + 12*sw^2 - 48*sw^4 + 3*d*(-3 + 8*sw^2) + 
                 8*sw^2*(-3 - 10*sw^2 + 16*sw^4)) - 2*(-1 + 4*sw^2)*
                (9 - 12*sw^2 + 4*sw^2*(-3 + 8*sw^2))*t) - 
             s^3*(-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(9 + 6*(1 + d)*sw^2 - 
                   24*sw^4 + 2*sw^2*(-6 + 3*d - 20*sw^2 + 32*sw^4)) - 
                 (-1 + 4*sw^2)*(9 - 12*sw^2 + 4*sw^2*(-3 + 8*sw^2))*t)) + 
             8*mz^6*(1 - sw^2)^3*(-9*(-3 + d)*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
                (s*(-9 + 6*(-1 + d^2)*sw^2 - 24*(-1 + d)*sw^4 + 2*sw^2*
                    (6 + 3*d^2 + 20*sw^2 - 32*sw^4 + d*(-9 - 20*sw^2 + 
                       32*sw^4))) - (-1 + d)*(-1 + 4*sw^2)*(9 - 12*sw^2 + 
                   4*sw^2*(-3 + 8*sw^2))*t)) - 4*mz^4*s*(1 - sw^2)^2*
              (-9*(-1 + d)*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
                (s*(9 + 6*(1 + d)^2*sw^2 - 24*(1 + d)*sw^4 + 2*sw^2*
                    (-6 + 3*d^2 - 20*sw^2 + 32*sw^4 + d*(-3 - 20*sw^2 + 
                       32*sw^4))) - (1 + d)*(-1 + 4*sw^2)*(9 - 12*sw^2 + 
                   4*sw^2*(-3 + 8*sw^2))*t)))*GaugeXi[W] + 
           (3*2^(1 + d)*mz^2*Pi^d*s^2*(1 - sw^2)*(s*(18 + 12*sw^2 - 48*sw^4 + 
                 3*d*(-3 + 8*sw^2) + 8*sw^2*(-3 - 10*sw^2 + 16*sw^4)) - 2*
                (-1 + 4*sw^2)*(9 - 12*sw^2 + 4*sw^2*(-3 + 8*sw^2))*t) - 
             s^3*(9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(9 + 6*sw^2 - 24*sw^4 + 
                   d*(-9 + 12*sw^2) + 4*sw^2*(-3 - 10*sw^2 + 16*sw^4)) - 
                 (-1 + 4*sw^2)*(9 - 12*sw^2 + 4*sw^2*(-3 + 8*sw^2))*t)) + 
             8*mz^6*(1 - sw^2)^3*(-9*(-3 + d)*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
                (s*(-9 + 6*(-1 + d^2)*sw^2 - 24*(-1 + d)*sw^4 + 2*sw^2*
                    (6 + 3*d^2 + 20*sw^2 - 32*sw^4 + d*(-9 - 20*sw^2 + 
                       32*sw^4))) - (-1 + d)*(-1 + 4*sw^2)*(9 - 12*sw^2 + 
                   4*sw^2*(-3 + 8*sw^2))*t)) - 4*mz^4*s*(1 - sw^2)^2*
              (-9*(-1 + d)*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
                (s*(9 + 6*(1 + d)^2*sw^2 - 24*(1 + d)*sw^4 + 2*sw^2*
                    (-6 + 3*d^2 - 20*sw^2 + 32*sw^4 + d*(-3 - 20*sw^2 + 
                       32*sw^4))) - (1 + d)*(-1 + 4*sw^2)*(9 - 12*sw^2 + 
                   4*sw^2*(-3 + 8*sw^2))*t)))*GaugeXi[W]^2))/
         (s*(-1 + GaugeXi[W])^2) - 
        (2*(-(s^4*(-9*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(9 + 6*(1 + d)*sw^2 - 
                24*sw^4 + 2*sw^2*(-6 + 3*d - 20*sw^2 + 32*sw^4)))*t) + 
           8*mz^8*(1 - sw^2)^4*(-9*(-3 + d)*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
              (s*(-9 + 6*(-1 + d^2)*sw^2 - 24*(-1 + d)*sw^4 + 2*sw^2*
                  (6 + 3*d^2 + 20*sw^2 - 32*sw^4 + d*(-9 - 20*sw^2 + 
                     32*sw^4))) - (-1 + d)*(-1 + 4*sw^2)*(9 - 12*sw^2 + 
                 4*sw^2*(-3 + 8*sw^2))*t)) - 8*mz^6*s*(1 - sw^2)^3*
            (-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(9 + 6*(1 + d)*sw^2 - 
                 24*sw^4 + 2*sw^2*(-6 + 3*d - 20*sw^2 + 32*sw^4)) + 
               (-9*(-3 + 8*sw^2) - 3*d^2*(-3 + 8*sw^2) + d*(-27 + 48*sw^4 + 
                   sw^2*(36 + 80*sw^2 - 128*sw^4)))*t)) - 4*mz^2*(1 - sw^2)*
            (-9*d^2*(2*Pi)^d*s^4 + 2^(1 + d)*Pi^d*s^2*(2*s^2*(-9 - 6*sw^2 + 
                 6*d^2*sw^2 + 24*sw^4 + sw^2*(12 + 40*sw^2 - 64*sw^4) - 
                 3*d*(-3 + sw^2 + 4*sw^4) + 4*d*sw^2*(-3 - 5*sw^2 + 
                   8*sw^4)) + s*(-90 + 156*sw^2 - 48*sw^4 - 18*d*
                  (-3 + 8*sw^2) + 3*d^2*(-3 + 8*sw^2) + 8*sw^2*(15 - 
                   10*sw^2 + 16*sw^4))*t + 2*(-1 + 4*sw^2)*(9 - 12*sw^2 + 
                 4*sw^2*(-3 + 8*sw^2))*t^2)) + 2*mz^4*(1 - sw^2)^2*
            (279*d*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
              (s^2*(12*d^2*(-3 + 8*sw^2) - 15*(9 + 6*sw^2 - 24*sw^4 + 
                   4*sw^2*(-3 - 10*sw^2 + 16*sw^4)) + 2*d*(-3*sw^2*
                    (7 + 32*sw^2) + sw^2*(-93 - 160*sw^2 + 256*sw^4))) + s*
                (21*d^2*(-3 + 8*sw^2) - 9*(69 - 140*sw^2 + 64*sw^4) + 
                 12*sw^2*(69 - 80*sw^2 + 128*sw^4) + d*(369 - 528*sw^2 + 
                   48*sw^4 - 4*sw^2*(123 - 20*sw^2 + 32*sw^4)))*t + 16*
                (-1 + 4*sw^2)*(9 - 12*sw^2 + 4*sw^2*(-3 + 8*sw^2))*t^2)))*
          (s - mz^2*GaugeXi[Z]))/(s*(-s + mz^2*GaugeXi[Z]))))/
      (mz^4*Pi^(2*d)*(mz^2 - s)*(-mz^2 + s)*sw^2*(1 - sw^2)^2)))/
   (sw^2*(1 - sw^2)), 
  ((I/9)*EL^6*((3*(2*Pi)^d*(3 - 10*sw^2 + 8*sw^4)*
       ((-144 + 96*d - 18*d^2 + d^3)*s^2 - 2*(-128 + 88*d - 18*d^2 + d^3)*
         mz^2*s*(1 - sw^2) + 8*d*s*t + 16*t^2))/(mz^2 - s) - 
     (2^(3 + d)*mz^2*Pi^d*sw^2*(1 - sw^2)*(-1 + 2*sw^2)*
       (2*s + mz^2*(1 - sw^2))*(s^2*(-3*d^2 + 4*d*(3 + 2*sw^2) - 
          4*(3 + 4*sw^2)) + 2*s*(-24 + 15*d - 3*d^2 + 16*sw^2)*t + 
        4*(-3 + 8*sw^2)*t^2))/(s^2*(-mz^2 + s)) - 
     (3*2^(1 + d)*mz^2*Pi^d*(1 - sw^2)*(-3 + 4*sw^2)*(2*s + mz^2*(1 - sw^2))*
       (-((-2 + d)*s^2*(-2 + 4*sw^2 + d*(1 - 4*sw^2) + sw^2*(4 + 8*sw^2))) + 
        2*s*(-8 + 16*sw^2 - 16*sw^2*(-1 + sw^2) - 5*d*(-1 + 4*sw^2) + 
          d^2*(-1 + 4*sw^2))*t + 4*(-1 + 2*sw^2 + sw^2*(2 - 8*sw^2))*t^2))/
      (s*(-mz^2 + s)^2) - (2^(1 + d)*mz^2*Pi^d*(1 - sw^2)*(-1 + 2*sw^2)*
       (2*s + mz^2*(1 - sw^2))*((-2 + d)*s^2*(18 - 24*sw^2 - 
          8*sw^2*(3 + 4*sw^2) + 3*d*(-3 + 8*sw^2)) + 
        2*s*(-72 + 96*sw^2 + sw^2*(96 - 64*sw^2) - 15*d*(-3 + 8*sw^2) + 
          3*d^2*(-3 + 8*sw^2))*t + 4*(-9 + 12*sw^2 - 4*sw^2*(-3 + 8*sw^2))*
         t^2))/(s*(-mz^2 + s)^2) + 
     (6*sw^2*(-((2^(1 + d)*(-2 + d)*mz^4*Pi^d*(1 - sw^2)^2*(-3 + 4*sw^2)*
           (s*(-2 + d - 4*sw^2) + 2*(-1 + 4*sw^2)*t))/s) + 
        2^(2 + d)*mz^2*Pi^d*(1 - sw^2)*(-3 + 4*sw^2)*
         (-(s*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2))) + 
          (-24 - 3*d^2 + 4*d*(4 + sw^2))*t) - 2*(2^(1 + d)*Pi^d - d*(2*Pi)^d)*
         (-3 + 4*sw^2)*(-1 + 4*sw^2)*t*(t - (4*mz^2*(1 - sw^2)*t)/s + 
          (4*mz^4*(1 - sw^2)^2*(s + (-1 + d)*t))/((-2 + d)*s^2)) + 
        t*(-3*d^2*(2*Pi)^d*s + 2^(2 + d)*Pi^d*
           (s*(-9 - 6*sw^2 + d^2*sw^2 + 24*sw^4 + d*(6 - 5*sw^2 - 4*sw^4)) + 
            2*(3 - 16*sw^2 + 16*sw^4)*t)) + ((t - (2*mz^2*(1 - sw^2)*t)/s)*
          (2^(1 + d)*(-2 + d)*mz^2*Pi^d*(1 - sw^2)*(-3 + 4*sw^2)*
            (s*(-2 + d - 4*sw^2) + 2*(-1 + 4*sw^2)*t) - 
           s*(-3*d^2*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(2*s*(-9 - 6*sw^2 + 
                 d^2*sw^2 + 24*sw^4 + d*(6 - 5*sw^2 - 4*sw^4)) + (2 + d)*
                (3 - 16*sw^2 + 16*sw^4)*t))))/s))/(mz^2 - s)))/
   (2^(2*(3 + d))*Pi^(2*d)*sw^6*(1 - sw^2)), 
  ((-I/3)*2^(-6 - d)*(-4 + d)*EL^6*(3 - 10*sw^2 + 8*sw^4)*(s + t)*
    ((40 - 18*d + d^2)*s - 4*(14 - 8*d + d^2)*mz^2*(1 - sw^2) - 
     8*(-2 + d)*t))/(Pi^d*(mz^2 - s)*sw^6*(1 - sw^2)), 
  ((I/3)*2^(-7 - d)*EL^6*(3 - 10*sw^2 + 8*sw^4)*
    (-4*(-4 + d)*mz^2*(1 - sw^2)*(s + t)*((36 - 16*d + d^2)*s - 
       4*(-2 + d)*t) + 2*(-4 + d)*mz^4*(1 - sw^2)^2*(3*(20 - 10*d + d^2)*s + 
       2*(14 - 8*d + d^2)*t) + (s + t)*((-144 + 96*d - 18*d^2 + d^3)*s^2 + 
       8*d*s*t + 16*t^2)))/(Pi^d*(mz^2 - s)*sw^6*(1 - sw^2)), 
  ((-I/9)*2^(-8 - 7*d)*EL^6*((3*(2*Pi)^(6*d)*s^2*(3 - 10*sw^2 + 8*sw^4)*
       ((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 4*t^2)*
       (s - mz^2*(1 - sw^2) + mz^2*(1 - sw^2)*GaugeXi[W]))/
      (mz^4*(mz^2 - s)*sw^4*(1 - sw^2)^2) - 
     (4^(1 + 3*d)*Pi^(6*d)*s*(s^2*(3*d^2*(-3 + 8*sw^2) + 
          4*d*(-3*(-3 + sw^2 + 4*sw^4) + 4*sw^2*(-3 - 5*sw^2 + 8*sw^4)) - 
          4*(9 + 6*sw^2 - 24*sw^4 + 4*sw^2*(-3 - 10*sw^2 + 16*sw^4))) + 
        2*s*(-15*d*(-3 + 8*sw^2) + 3*d^2*(-3 + 8*sw^2) - 
          24*(3 - 7*sw^2 + 4*sw^4) + 32*sw^2*(3 - 5*sw^2 + 8*sw^4))*t + 
        4*(-1 + 4*sw^2)*(9 - 12*sw^2 + 4*sw^2*(-3 + 8*sw^2))*t^2)*
       (s - mz^2*(1 - sw^2) + mz^2*(1 - sw^2)*GaugeXi[W]))/
      ((mz^2 - s)*(-mz^2 + s)*(1 - sw^2)) + 
     (2^(1 + 6*d)*Pi^(6*d)*s^2*
       (s^2*(3*d^2*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
          4*d*(-9 + 30*sw^2 - 24*sw^4 + sw^2*(30 - 22*sw^2 - 40*sw^4) + 
            8*sw^4*(-3 - 5*sw^2 + 8*sw^4)) - 4*(-9 + 30*sw^2 - 24*sw^4 + 
            sw^2*(30 + 4*sw^2 - 80*sw^4) + 8*sw^4*(-3 - 10*sw^2 + 
              16*sw^4))) + 2*s*(-15*d*(3 - 10*sw^2 + 16*sw^4 + 
            2*sw^2*(-5 + 8*sw^2)) + 3*d^2*(3 - 10*sw^2 + 16*sw^4 + 
            2*sw^2*(-5 + 8*sw^2)) + 8*(9 - 30*sw^2 + 24*sw^4 + 
            sw^2*(-30 + 74*sw^2 - 40*sw^4) + 8*sw^4*(3 - 5*sw^2 + 8*sw^4)))*
         t + 4*(9 - 30*sw^2 + 24*sw^4 + 8*sw^4*(3 - 20*sw^2 + 32*sw^4) - 
          2*sw^2*(15 - 76*sw^2 + 80*sw^4))*t^2)*(s - mz^2*(1 - sw^2) + 
        mz^2*(1 - sw^2)*GaugeXi[W]))/((mz^2 - s)^2*(-mz^2 + s)*
       (1 - sw^2)^2) + (3*(2*Pi)^(6*d)*s^2*(-3 + 4*sw^2)*
       (-((-2 + d)*s^2*(-2 + 4*sw^2 + d*(1 - 4*sw^2) + sw^2*(4 + 8*sw^2))) + 
        2*s*(-8 + 16*sw^2 - 16*sw^2*(-1 + sw^2) - 5*d*(-1 + 4*sw^2) + 
          d^2*(-1 + 4*sw^2))*t + 4*(-1 + 2*sw^2 + sw^2*(2 - 8*sw^2))*t^2)*
       (s^2 + 2*(-3 + 2*d)*mz^2*s*(1 - sw^2) + mz^4*(1 - sw^2)^2 + 
        (mz^2*s*(1 - sw^2) - mz^4*(1 - sw^2)^2)*GaugeXi[W]))/
      (mz^4*(-mz^2 + s)^2*sw^4*(1 - sw^2)^2) + 
     (2^(1 + 6*d)*Pi^(6*d)*s^2*(-1 + 2*sw^2)*
       ((-2 + d)*s^2*(18 - 24*sw^2 - 8*sw^2*(3 + 4*sw^2) + 
          3*d*(-3 + 8*sw^2)) + 2*s*(-72 + 96*sw^2 + sw^2*(96 - 64*sw^2) - 
          15*d*(-3 + 8*sw^2) + 3*d^2*(-3 + 8*sw^2))*t + 
        4*(-9 + 12*sw^2 - 4*sw^2*(-3 + 8*sw^2))*t^2)*
       (s^2 + 2*(-3 + 2*d)*mz^2*s*(1 - sw^2) + mz^4*(1 - sw^2)^2 + 
        (mz^2*s*(1 - sw^2) - mz^4*(1 - sw^2)^2)*GaugeXi[W]))/
      (mz^4*(-mz^2 + s)^2*sw^4*(1 - sw^2)^2) + 
     (3*2^(1 + 5*d)*Pi^(5*d)*s*(3*d^2*(2*Pi)^d*s^4 - 2^(1 + d)*(-3 + 2*d)*
         mz^2*Pi^d*s*(1 - sw^2)*(-3 + 4*sw^2)*
         (s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2)) + 
          2*s*(8 - 5*d + d^2 - 8*sw^2)*t + 4*(1 - 4*sw^2)*t^2) + 
        2^(1 + d)*Pi^d*s^2*(s^2*(6 + 4*sw^2 - 2*d^2*sw^2 - 16*sw^4 + 
            2*d*(-3 + sw^2 + 4*sw^4)) - s*(8 - 5*d + d^2 - 8*sw^2)*
           (-3 + 4*sw^2)*t + 2*(3 - 16*sw^2 + 16*sw^4)*t^2) + 
        mz^4*(1 - sw^2)^2*(-3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
           (s^2*(6 + 4*sw^2 - 16*sw^4 + d^2*(3 - 2*sw^2) + 2*d*(-3 + sw^2 + 
                4*sw^4)) - s*(8 - 5*d + d^2 - 8*sw^2)*(-3 + 4*sw^2)*t + 
            2*(3 - 16*sw^2 + 16*sw^4)*t^2)) + mz^2*(1 - sw^2)*
         (-s + mz^2*(1 - sw^2))*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
           (s^2*(-6 - 4*sw^2 + 16*sw^4 + d^2*(-3 + 2*sw^2) - 2*d*(-3 + sw^2 + 
                4*sw^4)) + s*(8 - 5*d + d^2 - 8*sw^2)*(-3 + 4*sw^2)*t - 
            2*(3 - 16*sw^2 + 16*sw^4)*t^2))*GaugeXi[W]))/
      (mz^4*(-mz^2 + s)*sw^2*(1 - sw^2)^2) + 
     (2^(4 + 5*d)*Pi^(5*d)*((-s + mz^2*(1 - sw^2))*(-9*d^2*(2*Pi)^d*s^2 + 
          2^(1 + d)*Pi^d*(s^2*(-6 + 3*d^2 - 20*sw^2 + 32*sw^4 + 
              d*(6 + 10*sw^2 - 16*sw^4)) + s*(15*d - 3*d^2 - 8*(3 - 5*sw^2 + 
                8*sw^4))*t - 2*(3 - 20*sw^2 + 32*sw^4)*t^2)) + 
        mz^2*(1 - sw^2)*(-9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
           (2*s^2*(3 + 3*d^2 + 10*sw^2 - 16*sw^4 + d*(-3 - 5*sw^2 + 
                8*sw^4)) + s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
            2*(3 - 20*sw^2 + 32*sw^4)*t^2))*GaugeXi[W]))/(-mz^2 + s) - 
     (2^(3 + 5*d)*Pi^(5*d)*s*(-((-s + mz^2*(1 - sw^2))*(-3*d^2*(2*Pi)^d*s^2 + 
           2^(1 + d)*Pi^d*(s^2*(-6 + 4*sw^2 + 6*d^2*sw^2 + 16*sw^4 + sw^2*
                (12 + 40*sw^2 - 64*sw^4) + 2*d*(3 - 4*sw^2 - 4*sw^4 + 
                 2*sw^2*(-3 - 5*sw^2 + 8*sw^4))) + s*(-15*d*(-1 + 4*sw^2) + 
               d^2*(-3 + 12*sw^2) + 8*(-3 + 8*sw^2 - 4*sw^4 + 2*sw^2*
                  (3 - 5*sw^2 + 8*sw^4)))*t + 2*(-3 + 8*sw^2)*
              (1 - 2*sw^2 + sw^2*(-2 + 8*sw^2))*t^2))) + 
        mz^2*(1 - sw^2)*(9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
           (s^2*(-6 + 4*sw^2 + 16*sw^4 + 3*d^2*(-2 + 2*sw^2) + 
              sw^2*(12 + 40*sw^2 - 64*sw^4) + 2*d*(3 - 4*sw^2 - 4*sw^4 + 
                2*sw^2*(-3 - 5*sw^2 + 8*sw^4))) + s*(-15*d*(-1 + 4*sw^2) + 
              d^2*(-3 + 12*sw^2) + 8*(-3 + 8*sw^2 - 4*sw^4 + 2*sw^2*
                 (3 - 5*sw^2 + 8*sw^4)))*t + 2*(-3 + 8*sw^2)*
             (1 - 2*sw^2 + sw^2*(-2 + 8*sw^2))*t^2))*GaugeXi[W]))/
      ((mz^2 - s)*(-mz^2 + s)*(1 - sw^2)) - 
     (2^(1 + 5*d)*Pi^(5*d)*s^2*(d*(-s + mz^2*(1 - sw^2))*
         (9*d^2*(2*Pi)^d*s^4 + 2^(1 + d)*Pi^d*s^2*
           (s^2*(3*d^2*(4*sw^4 + sw^2*(-5 + 4*sw^2) + sw^2*(-5 + 8*sw^2)) + 
              2*d*(-9 + 30*sw^2 - 24*sw^4 + sw^2*(30 - 22*sw^2 - 40*sw^4) + 
                8*sw^4*(-3 - 5*sw^2 + 8*sw^4)) + 2*(9 - 30*sw^2 + 24*sw^4 + 
                sw^4*(24 + 80*sw^2 - 128*sw^4) + sw^2*(-30 - 4*sw^2 + 
                  80*sw^4))) + s*(-15*d*(3 - 10*sw^2 + 16*sw^4 + 
                2*sw^2*(-5 + 8*sw^2)) + 3*d^2*(3 - 10*sw^2 + 16*sw^4 + 
                2*sw^2*(-5 + 8*sw^2)) + 8*(9 - 30*sw^2 + 24*sw^4 + 
                sw^2*(-30 + 74*sw^2 - 40*sw^4) + 8*sw^4*(3 - 5*sw^2 + 
                  8*sw^4)))*t + 2*(9 - 30*sw^2 + 24*sw^4 + 8*sw^4*(3 - 
                20*sw^2 + 32*sw^4) - 2*sw^2*(15 - 76*sw^2 + 80*sw^4))*t^2) + 
          mz^4*(1 - sw^2)^2*(9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
             (s^2*(3*d^2*(4*sw^4 + sw^2*(-5 + 4*sw^2) + sw^2*(-5 + 8*sw^2)) + 
                2*d*(-9 + 30*sw^2 - 24*sw^4 + sw^2*(30 - 22*sw^2 - 40*sw^4) + 
                  8*sw^4*(-3 - 5*sw^2 + 8*sw^4)) + 2*(9 - 30*sw^2 + 24*sw^4 + 
                  sw^4*(24 + 80*sw^2 - 128*sw^4) + sw^2*(-30 - 4*sw^2 + 
                    80*sw^4))) + s*(-15*d*(3 - 10*sw^2 + 16*sw^4 + 
                  2*sw^2*(-5 + 8*sw^2)) + 3*d^2*(3 - 10*sw^2 + 16*sw^4 + 
                  2*sw^2*(-5 + 8*sw^2)) + 8*(9 - 30*sw^2 + 24*sw^4 + 
                  sw^2*(-30 + 74*sw^2 - 40*sw^4) + 8*sw^4*(3 - 5*sw^2 + 
                    8*sw^4)))*t + 2*(9 - 30*sw^2 + 24*sw^4 + 8*sw^4*
                 (3 - 20*sw^2 + 32*sw^4) - 2*sw^2*(15 - 76*sw^2 + 80*sw^4))*t^
                2)) + 2*mz^2*s*(1 - sw^2)*(-99*d^2*(2*Pi)^d*s^2 + 
            2^(1 + d)*Pi^d*(s^2*(3*d^3*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*
                   (-5 + 8*sw^2)) + 6*(-9 + 30*sw^2 - 24*sw^4 + 
                  sw^2*(30 + 4*sw^2 - 80*sw^4) + 8*sw^4*(-3 - 10*sw^2 + 
                    16*sw^4)) + d^2*(33*sw^2*(5 - 4*sw^2) - 5*sw^2*
                   (-33 + 32*sw^2 + 32*sw^4) + 4*sw^4*(-33 - 40*sw^2 + 
                    64*sw^4)) + d*(sw^4*(240 + 560*sw^2 - 896*sw^4) + 
                  30*(3 - 10*sw^2 + 8*sw^4) + 4*sw^2*(-75 + 29*sw^2 + 
                    140*sw^4))) + s*(-39*d^2*(3 - 10*sw^2 + 16*sw^4 + 
                  2*sw^2*(-5 + 8*sw^2)) + 6*d^3*(3 - 10*sw^2 + 16*sw^4 + 
                  2*sw^2*(-5 + 8*sw^2)) - 24*(9 - 30*sw^2 + 24*sw^4 + 
                  sw^2*(-30 + 74*sw^2 - 40*sw^4) + 8*sw^4*(3 - 5*sw^2 + 
                    8*sw^4)) + d*(93*(3 - 10*sw^2 + 8*sw^4) + 8*sw^4*
                   (93 - 80*sw^2 + 128*sw^4) - 2*sw^2*(465 - 952*sw^2 + 
                    320*sw^4)))*t + 2*(-3 + 2*d)*(9 - 30*sw^2 + 24*sw^4 + 
                8*sw^4*(3 - 20*sw^2 + 32*sw^4) - 2*sw^2*(15 - 76*sw^2 + 
                  80*sw^4))*t^2))) + mz^2*(1 - sw^2)*
         (3*2^(2 + d)*d^4*mz^2*Pi^d*s^2*(1 - sw^2)*(3 - 10*sw^2 + 16*sw^4 + 
            2*sw^2*(-5 + 8*sw^2))*(s + 2*t) + 16*mz^2*s*(1 - sw^2)*
           (s^2*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*(3*sw^2*(-5 + 4*sw^2) + 
                sw^4*(12 + 40*sw^2 - 64*sw^4) + sw^2*(-15 - 2*sw^2 + 
                  40*sw^4))) + 2^(2 + d)*Pi^d*s*(9 - 30*sw^2 + 24*sw^4 + 
              sw^2*(-30 + 74*sw^2 - 40*sw^4) + 8*sw^4*(3 - 5*sw^2 + 8*sw^4))*
             t + (9*(2*Pi)^d + 2^(1 + d)*Pi^d*(3*sw^2*(-5 + 4*sw^2) + 
                sw^2*(-15 + 76*sw^2 - 80*sw^4) + 4*sw^4*(3 - 20*sw^2 + 
                  32*sw^4)))*t^2) - d^3*s*(-(2^(1 + d)*mz^2*Pi^d*s*(1 - sw^2)*
              (s*(-33*(3 - 10*sw^2 + 8*sw^4) - 10*sw^2*(-33 + 32*sw^2 + 
                   32*sw^4) + 8*sw^4*(-33 - 40*sw^2 + 64*sw^4)) - 78*
                (3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2))*t)) + 
            3*s^2*(s*(3*(2*Pi)^d + 2^(1 + d)*Pi^d*(4*sw^4 + sw^2*
                   (-5 + 4*sw^2) + sw^2*(-5 + 8*sw^2))) + 2^(1 + d)*Pi^d*(3 - 
                10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2))*t) + 
            3*mz^4*(1 - sw^2)^2*(s*(3*(2*Pi)^d + 2^(1 + d)*Pi^d*(4*sw^4 + 
                  sw^2*(-5 + 4*sw^2) + sw^2*(-5 + 8*sw^2))) + 
              2^(1 + d)*Pi^d*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2))*
               t)) + 2^(1 + d)*d^2*Pi^d*s*
           (s^2*(s*(6*(3 - 10*sw^2 + 8*sw^4) - 16*sw^4*(-3 - 5*sw^2 + 
                  8*sw^4) + sw^2*(-60 + 44*sw^2 + 80*sw^4)) + 
              15*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2))*t) + 
            mz^4*(1 - sw^2)^2*(s*(6*(3 - 10*sw^2 + 8*sw^4) - 16*sw^4*
                 (-3 - 5*sw^2 + 8*sw^4) + sw^2*(-60 + 44*sw^2 + 80*sw^4)) + 
              15*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2))*t) - 
            2*mz^2*(1 - sw^2)*(s^2*(-33*(3 - 10*sw^2 + 8*sw^4) + 
                8*sw^4*(-33 - 70*sw^2 + 112*sw^4) - 2*sw^2*(-165 + 82*sw^2 + 
                  280*sw^4)) + s*(-99*(3 - 10*sw^2 + 8*sw^4) + 10*sw^2*
                 (99 - 200*sw^2 + 64*sw^4) - 8*sw^4*(99 - 80*sw^2 + 
                  128*sw^4))*t - 4*(9 - 30*sw^2 + 24*sw^4 + 8*sw^4*
                 (3 - 20*sw^2 + 32*sw^4) - 2*sw^2*(15 - 76*sw^2 + 80*sw^4))*t^
                2)) - 4*d*(s^2*(s^2*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*
                 (3*sw^2*(-5 + 4*sw^2) + sw^4*(12 + 40*sw^2 - 64*sw^4) + 
                  sw^2*(-15 - 2*sw^2 + 40*sw^4))) + 2^(2 + d)*Pi^d*s*(9 - 
                30*sw^2 + 24*sw^4 + sw^2*(-30 + 74*sw^2 - 40*sw^4) + 
                8*sw^4*(3 - 5*sw^2 + 8*sw^4))*t + (9*(2*Pi)^d + 2^(1 + d)*
                 Pi^d*(3*sw^2*(-5 + 4*sw^2) + sw^2*(-15 + 76*sw^2 - 
                    80*sw^4) + 4*sw^4*(3 - 20*sw^2 + 32*sw^4)))*t^2) + 
            mz^4*(1 - sw^2)^2*(s^2*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*
                 (3*sw^2*(-5 + 4*sw^2) + sw^4*(12 + 40*sw^2 - 64*sw^4) + 
                  sw^2*(-15 - 2*sw^2 + 40*sw^4))) + 2^(2 + d)*Pi^d*s*(9 - 
                30*sw^2 + 24*sw^4 + sw^2*(-30 + 74*sw^2 - 40*sw^4) + 
                8*sw^4*(3 - 5*sw^2 + 8*sw^4))*t + (9*(2*Pi)^d + 2^(1 + d)*
                 Pi^d*(3*sw^2*(-5 + 4*sw^2) + sw^2*(-15 + 76*sw^2 - 
                    80*sw^4) + 4*sw^4*(3 - 20*sw^2 + 32*sw^4)))*t^2) + 
            2*mz^2*s*(1 - sw^2)*(s^2*(45*(2*Pi)^d + 2^(1 + d)*Pi^d*
                 (15*sw^2*(-5 + 4*sw^2) + sw^4*(60 + 160*sw^2 - 256*sw^4) + 
                  sw^2*(-75 + 16*sw^2 + 160*sw^4))) + 3*s*(51*(2*Pi)^d + 
                2^(1 + d)*Pi^d*(17*sw^2*(-5 + 4*sw^2) + sw^2*(-85 + 
                    188*sw^2 - 80*sw^4) + 4*sw^4*(17 - 20*sw^2 + 32*sw^4)))*
               t + 3*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*(3*sw^2*(-5 + 4*sw^2) + 
                  sw^2*(-15 + 76*sw^2 - 80*sw^4) + 4*sw^4*(3 - 20*sw^2 + 
                    32*sw^4)))*t^2)))*GaugeXi[W]))/(d*mz^4*(mz^2 - s)^3*sw^4*
       (1 - sw^2)^2) + (8^(1 + d)*Pi^(3*d)*s*(3*d^2*(2*Pi)^(3*d)*s^4 + 
        2^(1 + 3*d)*Pi^(3*d)*s^2*(s^2*(6 - 4*sw^2 - 3*d^2*sw^2 - 16*sw^4 + 
            d*(-6 + 8*sw^2 + 8*sw^4)) - s*(24 - 15*d + 3*d^2 - 16*sw^2)*
           (-1 + 2*sw^2)*t + 2*(3 - 14*sw^2 + 16*sw^4)*t^2) + 
        mz^4*(1 - sw^2)^2*(3*d^2*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
           (s^2*(6 - 4*sw^2 - 3*d^2*sw^2 - 16*sw^4 + d*(-6 + 8*sw^2 + 
                8*sw^4)) - s*(24 - 15*d + 3*d^2 - 16*sw^2)*(-1 + 2*sw^2)*t + 
            2*(3 - 14*sw^2 + 16*sw^4)*t^2)) - 2*mz^2*s*(1 - sw^2)*
         (33*d^2*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
           (s^2*(d^3*(-3 + 6*sw^2) - d^2*sw^2*(25 + 16*sw^2) - 
              6*(-3 + 2*sw^2 + 8*sw^4) + d*(-30 + 32*sw^2 + 56*sw^4)) + 
            (-3 + 2*d)*s*(24 - 15*d + 3*d^2 - 16*sw^2)*(-1 + 2*sw^2)*t - 
            2*(-3 + 2*d)*(3 - 14*sw^2 + 16*sw^4)*t^2)) + 
        (2*s^2*(-3*d^2*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
             (s^2*(-6 + 4*sw^2 + 3*d^2*sw^2 + 16*sw^4 + d*(6 - 8*sw^2 - 
                  8*sw^4)) + s*(24 - 15*d + 3*d^2 - 16*sw^2)*(-1 + 2*sw^2)*
               t - 2*(3 - 14*sw^2 + 16*sw^4)*t^2)) + 3*mz^4*(1 - sw^2)^2*
           (-3*d^2*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
             (s^2*(-6 + 4*sw^2 + 3*d^2*sw^2 + 16*sw^4 + d*(6 - 8*sw^2 - 
                  8*sw^4)) + s*(24 - 15*d + 3*d^2 - 16*sw^2)*(-1 + 2*sw^2)*
               t - 2*(3 - 14*sw^2 + 16*sw^4)*t^2)) + mz^2*s*(1 - sw^2)*
           (135*d^2*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
             (s^2*(12*d^3*(-1 + 2*sw^2) - d^2*sw^2*(103 + 64*sw^2) - 
                26*(-3 + 2*sw^2 + 8*sw^4) + 2*d*(-63 + 68*sw^2 + 116*sw^4)) + 
              (-13 + 8*d)*s*(24 - 15*d + 3*d^2 - 16*sw^2)*(-1 + 2*sw^2)*t - 
              2*(-13 + 8*d)*(3 - 14*sw^2 + 16*sw^4)*t^2)))*GaugeXi[W] + 
        (3*d^2*(2*Pi)^(3*d)*s^4 + 2^(1 + 3*d)*Pi^(3*d)*s^2*
           (s^2*(6 - 4*sw^2 - 3*d^2*sw^2 - 16*sw^4 + d*(-6 + 8*sw^2 + 
                8*sw^4)) - s*(24 - 15*d + 3*d^2 - 16*sw^2)*(-1 + 2*sw^2)*t + 
            2*(3 - 14*sw^2 + 16*sw^4)*t^2) - 3*mz^4*(1 - sw^2)^2*
           (-3*d^2*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
             (s^2*(-6 + 4*sw^2 + 3*d^2*sw^2 + 16*sw^4 + d*(6 - 8*sw^2 - 
                  8*sw^4)) + s*(24 - 15*d + 3*d^2 - 16*sw^2)*(-1 + 2*sw^2)*
               t - 2*(3 - 14*sw^2 + 16*sw^4)*t^2)) - 4*mz^2*s*(1 - sw^2)*
           (-3*d^3*(2*Pi)^(3*d)*s^2 + 2^(1 + 3*d)*Pi^(3*d)*
             (s^2*(3*d^3*sw^2 + d^2*(9 - 14*sw^2 - 8*sw^4) - 
                4*(-3 + 2*sw^2 + 8*sw^4) + 2*d*(-9 + 10*sw^2 + 16*sw^4)) + 
              (-2 + d)*s*(24 - 15*d + 3*d^2 - 16*sw^2)*(-1 + 2*sw^2)*t - 
              2*(-2 + d)*(3 - 14*sw^2 + 16*sw^4)*t^2)))*GaugeXi[W]^2 + 
        mz^2*(1 - sw^2)*(-s + mz^2*(1 - sw^2))*(-3*d^2*(2*Pi)^(3*d)*s^2 + 
          2^(1 + 3*d)*Pi^(3*d)*(s^2*(-6 + 4*sw^2 + 3*d^2*sw^2 + 16*sw^4 + 
              d*(6 - 8*sw^2 - 8*sw^4)) + s*(24 - 15*d + 3*d^2 - 16*sw^2)*
             (-1 + 2*sw^2)*t - 2*(3 - 14*sw^2 + 16*sw^4)*t^2))*GaugeXi[W]^3))/
      (mz^4*(-mz^2 + s)*sw^2*(1 - sw^2)^2*(-1 + GaugeXi[W])^2) + 
     (16*(d*(-s + mz^2*(1 - sw^2))*((2*Pi)^(6*d)*s^2*
           (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 
                8*sw^4)) + 2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
            4*(3 - 20*sw^2 + 32*sw^4)*t^2) + mz^4*(2*Pi)^(6*d)*(1 - sw^2)^2*
           (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 
                8*sw^4)) + 2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
            4*(3 - 20*sw^2 + 32*sw^4)*t^2) + 2*mz^2*s*(1 - sw^2)*
           (-33*d^2*(2*Pi)^(6*d)*s^2 + 2^(1 + 6*d)*Pi^(6*d)*
             (s^2*(-18 + 3*d^3 - 60*sw^2 + 96*sw^4 + 4*d^2*sw^2*
                 (-5 + 8*sw^2) + d*(30 + 70*sw^2 - 112*sw^4)) + 
              s*(-39*d^2 + 6*d^3 - 24*(3 - 5*sw^2 + 8*sw^4) + 
                d*(93 - 80*sw^2 + 128*sw^4))*t + 2*(-3 + 2*d)*(3 - 20*sw^2 + 
                32*sw^4)*t^2))) + (-3*4^(1 + 3*d)*d^4*mz^2*Pi^(6*d)*s^2*
           (1 - sw^2)*(-2*s + mz^2*(1 - sw^2))*(s + 2*t) - 
          4^(2 + 3*d)*mz^4*Pi^(6*d)*s*(1 - sw^2)^2*
           (s^2*(-3 - 10*sw^2 + 16*sw^4) - 4*s*(3 - 5*sw^2 + 8*sw^4)*t + 
            (-3 + 20*sw^2 - 32*sw^4)*t^2) + d^3*(2*Pi)^(6*d)*s*
           (mz^2*s^2*(1 - sw^2)*(s*(-141 - 160*sw^2 + 256*sw^4) - 330*t) + 
            6*s^3*(s + 2*t) - 9*mz^6*(1 - sw^2)^3*(s + 2*t) + 
            8*mz^4*s*(1 - sw^2)^2*(s*(9 + 10*sw^2 - 16*sw^4) + 21*t)) + 
          2*d^2*s*(2^(1 + 6*d)*Pi^(6*d)*s^3*(2*s*(-3 - 5*sw^2 + 8*sw^4) - 
              15*t) - 3*mz^6*(2*Pi)^(6*d)*(1 - sw^2)^3*
             (2*s*(-3 - 5*sw^2 + 8*sw^4) - 15*t) - mz^2*(2*Pi)^(6*d)*s*
             (1 - sw^2)*(2*s^2*(-69 - 155*sw^2 + 248*sw^4) + 
              s*(-417 + 320*sw^2 - 512*sw^4)*t - 16*(3 - 20*sw^2 + 32*sw^4)*t^
                2) + 2^(1 + 6*d)*mz^4*Pi^(6*d)*(1 - sw^2)^2*
             (s^2*(-33 - 80*sw^2 + 128*sw^4) - 2*s*(51 - 40*sw^2 + 64*sw^4)*
               t - 4*(3 - 20*sw^2 + 32*sw^4)*t^2)) + 
          4*d*(-(2^(1 + 6*d)*Pi^(6*d)*s^3*(s^2*(-3 - 10*sw^2 + 16*sw^4) - 4*s*
                (3 - 5*sw^2 + 8*sw^4)*t + (-3 + 20*sw^2 - 32*sw^4)*t^2)) - 
            2^(1 + 6*d)*mz^4*Pi^(6*d)*s*(1 - sw^2)^2*(6*s^2*(-1 - 5*sw^2 + 
                8*sw^4) + s*(-33 + 80*sw^2 - 128*sw^4)*t - 4*(3 - 20*sw^2 + 
                32*sw^4)*t^2) - 15*mz^2*(2*Pi)^(6*d)*s^2*(1 - sw^2)*
             (s^2*(3 + 10*sw^2 - 16*sw^4) + 4*s*(3 - 5*sw^2 + 8*sw^4)*t + 
              (3 - 20*sw^2 + 32*sw^4)*t^2) - 3*mz^6*(2*Pi)^(6*d)*(1 - sw^2)^3*
             (s^2*(3 + 10*sw^2 - 16*sw^4) + 4*s*(3 - 5*sw^2 + 8*sw^4)*t + 
              (3 - 20*sw^2 + 32*sw^4)*t^2)))*GaugeXi[W] - 
        (3*4^(1 + 3*d)*d^4*mz^2*Pi^(6*d)*s^2*(1 - sw^2)*(s + mz^2*(1 - sw^2))*
           (s + 2*t) - 2^(5 + 6*d)*mz^4*Pi^(6*d)*s*(1 - sw^2)^2*
           (s^2*(-3 - 10*sw^2 + 16*sw^4) - 4*s*(3 - 5*sw^2 + 8*sw^4)*t + 
            (-3 + 20*sw^2 - 32*sw^4)*t^2) - d^3*(2*Pi)^(6*d)*s*
           (-3*s^3*(s + 2*t) + 9*mz^6*(1 - sw^2)^3*(s + 2*t) + 
            mz^4*s*(1 - sw^2)^2*(s*(63 + 80*sw^2 - 128*sw^4) + 150*t) + 
            mz^2*s^2*(1 - sw^2)*(s*(75 + 80*sw^2 - 128*sw^4) + 174*t)) - 
          4^(1 + 3*d)*d*Pi^(6*d)*(-(s^3*(s^2*(3 + 10*sw^2 - 16*sw^4) + 4*s*
                (3 - 5*sw^2 + 8*sw^4)*t + (3 - 20*sw^2 + 32*sw^4)*t^2)) + 
            9*mz^2*s^2*(1 - sw^2)*(s^2*(3 + 10*sw^2 - 16*sw^4) + 
              4*s*(3 - 5*sw^2 + 8*sw^4)*t + (3 - 20*sw^2 + 32*sw^4)*t^2) + 
            3*mz^6*(1 - sw^2)^3*(s^2*(3 + 10*sw^2 - 16*sw^4) + 
              4*s*(3 - 5*sw^2 + 8*sw^4)*t + (3 - 20*sw^2 + 32*sw^4)*t^2) + 
            mz^4*s*(1 - sw^2)^2*(s^2*(39 + 90*sw^2 - 144*sw^4) + 
              20*s*(6 - 5*sw^2 + 8*sw^4)*t + 5*(3 - 20*sw^2 + 32*sw^4)*t^
                2)) + 2^(1 + 6*d)*d^2*Pi^(6*d)*s*
           (s^3*(2*s*(-3 - 5*sw^2 + 8*sw^4) - 15*t) + mz^6*(1 - sw^2)^3*
             (-6*s*(-3 - 5*sw^2 + 8*sw^4) + 45*t) + mz^4*(1 - sw^2)^2*
             (s^2*(66 + 130*sw^2 - 208*sw^4) + s*(195 - 160*sw^2 + 256*sw^4)*
               t + 8*(3 - 20*sw^2 + 32*sw^4)*t^2) + mz^2*s*(1 - sw^2)*
             (s^2*(78 + 170*sw^2 - 272*sw^4) + s*(231 - 160*sw^2 + 256*sw^4)*
               t + 8*(3 - 20*sw^2 + 32*sw^4)*t^2)))*GaugeXi[W]^2 - 
        mz^2*(1 - sw^2)*(-3*4^(1 + 3*d)*d^4*mz^2*Pi^(6*d)*s^2*(1 - sw^2)*
           (s + 2*t) + 4^(2 + 3*d)*mz^2*Pi^(6*d)*s*(1 - sw^2)*
           (s^2*(-3 - 10*sw^2 + 16*sw^4) - 4*s*(3 - 5*sw^2 + 8*sw^4)*t + 
            (-3 + 20*sw^2 - 32*sw^4)*t^2) + d^3*(2*Pi)^(6*d)*s*
           (3*s^2*(s + 2*t) + 3*mz^4*(1 - sw^2)^2*(s + 2*t) + 
            2*mz^2*s*(1 - sw^2)*(s*(33 + 40*sw^2 - 64*sw^4) + 78*t)) + 
          2*d^2*s*((2*Pi)^(6*d)*s^2*(2*s*(-3 - 5*sw^2 + 8*sw^4) - 15*t) + 
            mz^4*(2*Pi)^(6*d)*(1 - sw^2)^2*(2*s*(-3 - 5*sw^2 + 8*sw^4) - 
              15*t) + 2^(1 + 6*d)*mz^2*Pi^(6*d)*(1 - sw^2)*
             (s^2*(-33 - 70*sw^2 + 112*sw^4) + s*(-99 + 80*sw^2 - 128*sw^4)*
               t - 4*(3 - 20*sw^2 + 32*sw^4)*t^2)) + 
          4*d*(-(2^(1 + 6*d)*mz^2*Pi^(6*d)*s*(1 - sw^2)*(s^2*(-15 - 40*sw^2 + 
                 64*sw^4) - 3*s*(17 - 20*sw^2 + 32*sw^4)*t - 3*(3 - 20*sw^2 + 
                 32*sw^4)*t^2)) + (2*Pi)^(6*d)*s^2*(s^2*(3 + 10*sw^2 - 
                16*sw^4) + 4*s*(3 - 5*sw^2 + 8*sw^4)*t + (3 - 20*sw^2 + 
                32*sw^4)*t^2) + mz^4*(2*Pi)^(6*d)*(1 - sw^2)^2*
             (s^2*(3 + 10*sw^2 - 16*sw^4) + 4*s*(3 - 5*sw^2 + 8*sw^4)*t + 
              (3 - 20*sw^2 + 32*sw^4)*t^2)))*GaugeXi[W]^3))/
      (d*mz^4*(-mz^2 + s)*(1 - sw^2)^2*(-1 + GaugeXi[W])^2) + 
     (2^(3 + d)*Pi^d*s*(d*(-s + mz^2*(1 - sw^2))*(-3*d^2*(2*Pi)^(5*d)*s^4 + 
          2^(1 + 5*d)*Pi^(5*d)*s^2*(s^2*(-6 + 4*sw^2 + 6*d^2*sw^2 + 16*sw^4 + 
              sw^2*(12 + 40*sw^2 - 64*sw^4) + 2*d*(3 - 4*sw^2 - 4*sw^4 + 
                2*sw^2*(-3 - 5*sw^2 + 8*sw^4))) + s*(-15*d*(-1 + 4*sw^2) + 
              d^2*(-3 + 12*sw^2) + 8*(-3 + 8*sw^2 - 4*sw^4 + 2*sw^2*
                 (3 - 5*sw^2 + 8*sw^4)))*t + 2*(-3 + 8*sw^2)*
             (1 - 2*sw^2 + sw^2*(-2 + 8*sw^2))*t^2) + mz^4*(1 - sw^2)^2*
           (-3*d^2*(2*Pi)^(5*d)*s^2 + 2^(1 + 5*d)*Pi^(5*d)*
             (s^2*(-6 + 4*sw^2 + 6*d^2*sw^2 + 16*sw^4 + sw^2*(12 + 40*sw^2 - 
                  64*sw^4) + 2*d*(3 - 4*sw^2 - 4*sw^4 + 2*sw^2*(-3 - 5*sw^2 + 
                    8*sw^4))) + s*(-15*d*(-1 + 4*sw^2) + d^2*(-3 + 12*sw^2) + 
                8*(-3 + 8*sw^2 - 4*sw^4 + 2*sw^2*(3 - 5*sw^2 + 8*sw^4)))*t + 
              2*(-3 + 8*sw^2)*(1 - 2*sw^2 + sw^2*(-2 + 8*sw^2))*t^2)) + 
          2*mz^2*s*(1 - sw^2)*(33*d^2*(2*Pi)^(5*d)*s^2 + 2^(1 + 5*d)*Pi^(5*d)*
             (s^2*(d^3*(-3 + 12*sw^2) + d*(-30 + 32*sw^2 + 56*sw^4 + 
                  sw^2*(60 + 140*sw^2 - 224*sw^4)) + 6*(3 - 2*sw^2 - 8*sw^4 + 
                  sw^2*(-6 - 20*sw^2 + 32*sw^4)) + d^2*
                 (-(sw^2*(25 + 16*sw^2)) + sw^2*(-33 - 40*sw^2 + 64*sw^4))) + 
              (-3 + 2*d)*s*(-15*d*(-1 + 4*sw^2) + d^2*(-3 + 12*sw^2) + 
                8*(-3 + 8*sw^2 - 4*sw^4 + 2*sw^2*(3 - 5*sw^2 + 8*sw^4)))*t + 
              2*(-3 + 2*d)*(-3 + 8*sw^2)*(1 - 2*sw^2 + sw^2*(-2 + 8*sw^2))*t^
                2))) + (-3*2^(2 + 5*d)*d^4*mz^2*Pi^(5*d)*s^2*(1 - sw^2)*
           (-1 + 4*sw^2)*(-2*s + mz^2*(1 - sw^2))*(s + 2*t) - 
          16*mz^4*s*(1 - sw^2)^2*((2*Pi)^(5*d)*s^2*(3 - 2*sw^2 - 8*sw^4 + 
              sw^2*(-6 - 20*sw^2 + 32*sw^4)) - 2^(2 + 5*d)*Pi^(5*d)*s*
             (-3 + 8*sw^2 - 4*sw^4 + 2*sw^2*(3 - 5*sw^2 + 8*sw^4))*t - 
            (2*Pi)^(5*d)*(-3 + 8*sw^2)*(1 - 2*sw^2 + sw^2*(-2 + 8*sw^2))*
             t^2) + d^3*s*(3*2^(1 + 5*d)*Pi^(5*d)*s^3*(-1 + 4*sw^2)*
             (s + 2*t) - 9*mz^6*(2*Pi)^(5*d)*(1 - sw^2)^3*(-1 + 4*sw^2)*
             (s + 2*t) + mz^2*(2*Pi)^(5*d)*s^2*(1 - sw^2)*
             (s*(141 - 218*sw^2 - 128*sw^4 + sw^2*(-282 - 320*sw^2 + 
                  512*sw^4)) - 330*(-1 + 4*sw^2)*t) - 2^(3 + 5*d)*mz^4*
             Pi^(5*d)*s*(1 - sw^2)^2*(s*(9 - 14*sw^2 - 8*sw^4 + 
                2*sw^2*(-9 - 10*sw^2 + 16*sw^4)) - 21*(-1 + 4*sw^2)*t)) - 
          2*d^2*s*(-(2^(1 + 5*d)*Pi^(5*d)*s^3*(2*s*(3 - 4*sw^2 - 4*sw^4 + 
                 2*sw^2*(-3 - 5*sw^2 + 8*sw^4)) - 15*(-1 + 4*sw^2)*t)) + 
            3*mz^6*(2*Pi)^(5*d)*(1 - sw^2)^3*(2*s*(3 - 4*sw^2 - 4*sw^4 + 
                2*sw^2*(-3 - 5*sw^2 + 8*sw^4)) - 15*(-1 + 4*sw^2)*t) - 
            2*mz^4*(1 - sw^2)^2*((2*Pi)^(5*d)*s^2*(33 - 34*sw^2 - 64*sw^4 + 
                2*sw^2*(-33 - 80*sw^2 + 128*sw^4)) - 2^(1 + 5*d)*Pi^(5*d)*s*(
                -51 + 118*sw^2 - 32*sw^4 + 2*sw^2*(51 - 40*sw^2 + 64*sw^4))*
               t - 2^(2 + 5*d)*Pi^(5*d)*(-3 + 8*sw^2)*(1 - 2*sw^2 + 
                sw^2*(-2 + 8*sw^2))*t^2) + mz^2*s*(1 - sw^2)*
             (417*(2*Pi)^(5*d)*s*t + 2^(1 + 5*d)*Pi^(5*d)*(
                s^2*(69 - 76*sw^2 - 124*sw^4 + 2*sw^2*(-69 - 155*sw^2 + 
                    248*sw^4)) + s*(sw^2*(-481 + 128*sw^2) + sw^2*(-417 + 
                    320*sw^2 - 512*sw^4))*t - 8*(-3 + 8*sw^2)*(1 - 2*sw^2 + 
                  sw^2*(-2 + 8*sw^2))*t^2))) + 
          4*d*(-2*s^3*((2*Pi)^(5*d)*s^2*(3 - 2*sw^2 - 8*sw^4 + 
                sw^2*(-6 - 20*sw^2 + 32*sw^4)) - 2^(2 + 5*d)*Pi^(5*d)*s*(-3 + 
                8*sw^2 - 4*sw^4 + 2*sw^2*(3 - 5*sw^2 + 8*sw^4))*t - 
              (2*Pi)^(5*d)*(-3 + 8*sw^2)*(1 - 2*sw^2 + sw^2*(-2 + 8*sw^2))*t^
                2) + 15*mz^2*s^2*(1 - sw^2)*((2*Pi)^(5*d)*s^2*(3 - 2*sw^2 - 
                8*sw^4 + sw^2*(-6 - 20*sw^2 + 32*sw^4)) - 2^(2 + 5*d)*Pi^
                (5*d)*s*(-3 + 8*sw^2 - 4*sw^4 + 2*sw^2*(3 - 5*sw^2 + 8*sw^4))*
               t - (2*Pi)^(5*d)*(-3 + 8*sw^2)*(1 - 2*sw^2 + 
                sw^2*(-2 + 8*sw^2))*t^2) + 3*mz^6*(1 - sw^2)^3*
             ((2*Pi)^(5*d)*s^2*(3 - 2*sw^2 - 8*sw^4 + sw^2*(-6 - 20*sw^2 + 
                  32*sw^4)) - 2^(2 + 5*d)*Pi^(5*d)*s*(-3 + 8*sw^2 - 4*sw^4 + 
                2*sw^2*(3 - 5*sw^2 + 8*sw^4))*t - (2*Pi)^(5*d)*(-3 + 8*sw^2)*(
                1 - 2*sw^2 + sw^2*(-2 + 8*sw^2))*t^2) - 2*mz^4*s*(1 - sw^2)^2*
             (33*(2*Pi)^(5*d)*s*t + 2^(1 + 5*d)*Pi^(5*d)*(3*s^2*(1 - 4*sw^4 + 
                  2*sw^2*(-1 - 5*sw^2 + 8*sw^4)) + s*(sw^2*(-49 + 32*sw^2) + 
                  sw^2*(-33 + 80*sw^2 - 128*sw^4))*t - 2*(-3 + 8*sw^2)*
                 (1 - 2*sw^2 + sw^2*(-2 + 8*sw^2))*t^2))))*GaugeXi[W] - 
        (3*2^(2 + 5*d)*d^4*mz^2*Pi^(5*d)*s^2*(1 - sw^2)*(-1 + 4*sw^2)*
           (s + mz^2*(1 - sw^2))*(s + 2*t) - 32*mz^4*s*(1 - sw^2)^2*
           ((2*Pi)^(5*d)*s^2*(3 - 2*sw^2 - 8*sw^4 + sw^2*(-6 - 20*sw^2 + 
                32*sw^4)) - 2^(2 + 5*d)*Pi^(5*d)*s*(-3 + 8*sw^2 - 4*sw^4 + 
              2*sw^2*(3 - 5*sw^2 + 8*sw^4))*t - (2*Pi)^(5*d)*(-3 + 8*sw^2)*
             (1 - 2*sw^2 + sw^2*(-2 + 8*sw^2))*t^2) - d^3*(2*Pi)^(5*d)*s*
           (-3*s^3*(-1 + 4*sw^2)*(s + 2*t) + 9*mz^6*(1 - sw^2)^3*
             (-1 + 4*sw^2)*(s + 2*t) + mz^4*s*(1 - sw^2)^2*
             (s*(-63 + 94*sw^2 + 64*sw^4 + sw^2*(126 + 160*sw^2 - 
                  256*sw^4)) + 150*(-1 + 4*sw^2)*t) + mz^2*s^2*(1 - sw^2)*
             (s*(-75 + 118*sw^2 + 64*sw^4 + sw^2*(150 + 160*sw^2 - 
                  256*sw^4)) + 174*(-1 + 4*sw^2)*t)) + 
          4*d*(mz^4*s*(1 - sw^2)^2*(3*(2*Pi)^(5*d)*s^2*(13 - 14*sw^2 - 
                24*sw^4 + sw^2*(-26 - 60*sw^2 + 96*sw^4)) - 5*2^(3 + 5*d)*Pi^
                (5*d)*s*(-3 + 7*sw^2 - 2*sw^4 + sw^2*(6 - 5*sw^2 + 8*sw^4))*
               t - 5*(2*Pi)^(5*d)*(-3 + 8*sw^2)*(1 - 2*sw^2 + 
                sw^2*(-2 + 8*sw^2))*t^2) + 9*mz^2*s^2*(1 - sw^2)*
             ((2*Pi)^(5*d)*s^2*(3 - 2*sw^2 - 8*sw^4 + sw^2*(-6 - 20*sw^2 + 
                  32*sw^4)) - 2^(2 + 5*d)*Pi^(5*d)*s*(-3 + 8*sw^2 - 4*sw^4 + 
                2*sw^2*(3 - 5*sw^2 + 8*sw^4))*t - (2*Pi)^(5*d)*(-3 + 8*sw^2)*(
                1 - 2*sw^2 + sw^2*(-2 + 8*sw^2))*t^2) + 3*mz^6*(1 - sw^2)^3*
             ((2*Pi)^(5*d)*s^2*(3 - 2*sw^2 - 8*sw^4 + sw^2*(-6 - 20*sw^2 + 
                  32*sw^4)) - 2^(2 + 5*d)*Pi^(5*d)*s*(-3 + 8*sw^2 - 4*sw^4 + 
                2*sw^2*(3 - 5*sw^2 + 8*sw^4))*t - (2*Pi)^(5*d)*(-3 + 8*sw^2)*(
                1 - 2*sw^2 + sw^2*(-2 + 8*sw^2))*t^2) + 
            s^3*((2*Pi)^(5*d)*s^2*(-3 + 2*sw^2 + 8*sw^4 + sw^2*(6 + 20*sw^2 - 
                  32*sw^4)) + 2^(2 + 5*d)*Pi^(5*d)*s*(-3 + 8*sw^2 - 4*sw^4 + 
                2*sw^2*(3 - 5*sw^2 + 8*sw^4))*t + (2*Pi)^(5*d)*(-3 + 8*sw^2)*(
                1 - 2*sw^2 + sw^2*(-2 + 8*sw^2))*t^2)) + 
          2*d^2*s*((2*Pi)^(5*d)*s^3*(2*s*(3 - 4*sw^2 - 4*sw^4 + 
                2*sw^2*(-3 - 5*sw^2 + 8*sw^4)) - 15*(-1 + 4*sw^2)*t) + 
            3*mz^6*(2*Pi)^(5*d)*(1 - sw^2)^3*(s*(-6 + 8*sw^2 + 8*sw^4 - 
                4*sw^2*(-3 - 5*sw^2 + 8*sw^4)) + 15*(-1 + 4*sw^2)*t) + 
            mz^4*(1 - sw^2)^2*(-195*(2*Pi)^(5*d)*s*t + 2^(1 + 5*d)*Pi^(5*d)*(
                s^2*(-33 + 40*sw^2 + 52*sw^4 + sw^2*(66 + 130*sw^2 - 
                    208*sw^4)) + s*(227*sw^2 - 64*sw^4 + sw^2*(195 - 
                    160*sw^2 + 256*sw^4))*t + 4*(-3 + 8*sw^2)*(1 - 2*sw^2 + 
                  sw^2*(-2 + 8*sw^2))*t^2)) + mz^2*s*(1 - sw^2)*
             (-231*(2*Pi)^(5*d)*s*t + 2^(1 + 5*d)*Pi^(5*d)*(
                s^2*(-39 + 44*sw^2 + 68*sw^4 + sw^2*(78 + 170*sw^2 - 
                    272*sw^4)) + s*(263*sw^2 - 64*sw^4 + sw^2*(231 - 
                    160*sw^2 + 256*sw^4))*t + 4*(-3 + 8*sw^2)*(1 - 2*sw^2 + 
                  sw^2*(-2 + 8*sw^2))*t^2))))*GaugeXi[W]^2 + 
        mz^2*(1 - sw^2)*(3*2^(2 + 5*d)*d^4*mz^2*Pi^(5*d)*s^2*(1 - sw^2)*
           (-1 + 4*sw^2)*(s + 2*t) - 16*mz^2*s*(1 - sw^2)*
           ((2*Pi)^(5*d)*s^2*(3 - 2*sw^2 - 8*sw^4 + sw^2*(-6 - 20*sw^2 + 
                32*sw^4)) - 2^(2 + 5*d)*Pi^(5*d)*s*(-3 + 8*sw^2 - 4*sw^4 + 
              2*sw^2*(3 - 5*sw^2 + 8*sw^4))*t - (2*Pi)^(5*d)*(-3 + 8*sw^2)*
             (1 - 2*sw^2 + sw^2*(-2 + 8*sw^2))*t^2) + 
          d^3*s*(-3*(2*Pi)^(5*d)*s^2*(-1 + 4*sw^2)*(s + 2*t) - 
            3*mz^4*(2*Pi)^(5*d)*(1 - sw^2)^2*(-1 + 4*sw^2)*(s + 2*t) + 
            2^(1 + 5*d)*mz^2*Pi^(5*d)*s*(1 - sw^2)*(s*(33 - 50*sw^2 - 
                32*sw^4 + 2*sw^2*(-33 - 40*sw^2 + 64*sw^4)) - 
              78*(-1 + 4*sw^2)*t)) - 2*d^2*s*((2*Pi)^(5*d)*s^2*
             (2*s*(3 - 4*sw^2 - 4*sw^4 + 2*sw^2*(-3 - 5*sw^2 + 8*sw^4)) - 
              15*(-1 + 4*sw^2)*t) + mz^4*(2*Pi)^(5*d)*(1 - sw^2)^2*
             (2*s*(3 - 4*sw^2 - 4*sw^4 + 2*sw^2*(-3 - 5*sw^2 + 8*sw^4)) - 
              15*(-1 + 4*sw^2)*t) + 2*mz^2*(1 - sw^2)*
             ((2*Pi)^(5*d)*s^2*(33 - 38*sw^2 - 56*sw^4 + 2*sw^2*
                 (-33 - 70*sw^2 + 112*sw^4)) + (2*Pi)^(5*d)*s*(99 - 
                230*sw^2 + 64*sw^4 - 2*sw^2*(99 - 80*sw^2 + 128*sw^4))*t - 
              2^(2 + 5*d)*Pi^(5*d)*(-3 + 8*sw^2)*(1 - 2*sw^2 + 
                sw^2*(-2 + 8*sw^2))*t^2)) + 
          4*d*(2^(1 + 5*d)*mz^2*Pi^(5*d)*s*(1 - sw^2)*
             (s^2*(15 - 14*sw^2 - 32*sw^4 + 2*sw^2*(-15 - 40*sw^2 + 
                  64*sw^4)) + 3*s*(17 - 42*sw^2 + 16*sw^4 + 
                sw^2*(-34 + 40*sw^2 - 64*sw^4))*t - 3*(-3 + 8*sw^2)*(1 - 
                2*sw^2 + sw^2*(-2 + 8*sw^2))*t^2) + 
            s^2*((2*Pi)^(5*d)*s^2*(3 - 2*sw^2 - 8*sw^4 + sw^2*(-6 - 20*sw^2 + 
                  32*sw^4)) - 2^(2 + 5*d)*Pi^(5*d)*s*(-3 + 8*sw^2 - 4*sw^4 + 
                2*sw^2*(3 - 5*sw^2 + 8*sw^4))*t - (2*Pi)^(5*d)*(-3 + 8*sw^2)*(
                1 - 2*sw^2 + sw^2*(-2 + 8*sw^2))*t^2) + mz^4*(1 - sw^2)^2*
             ((2*Pi)^(5*d)*s^2*(3 - 2*sw^2 - 8*sw^4 + sw^2*(-6 - 20*sw^2 + 
                  32*sw^4)) - 2^(2 + 5*d)*Pi^(5*d)*s*(-3 + 8*sw^2 - 4*sw^4 + 
                2*sw^2*(3 - 5*sw^2 + 8*sw^4))*t - (2*Pi)^(5*d)*(-3 + 8*sw^2)*(
                1 - 2*sw^2 + sw^2*(-2 + 8*sw^2))*t^2)))*GaugeXi[W]^3))/
      (d*mz^4*(mz^2 - s)*(-mz^2 + s)*sw^2*(1 - sw^2)^2*(-1 + GaugeXi[W])^2) - 
     (2^(2 + 5*d)*Pi^(5*d)*s*
       (d*(s*(9*d^2*(2*Pi)^d*s^5 + 2^(1 + d)*Pi^d*s^3*
             (-2*s^2*(-9 - 6*sw^2 + 6*d^2*sw^2 + 24*sw^4 + 
                sw^2*(12 + 40*sw^2 - 64*sw^4) - 3*d*(-3 + sw^2 + 4*sw^4) + 
                4*d*sw^2*(-3 - 5*sw^2 + 8*sw^4)) + s*(15*d*(-3 + 8*sw^2) - 
                3*d^2*(-3 + 8*sw^2) + 24*(3 - 7*sw^2 + 4*sw^4) - 
                32*sw^2*(3 - 5*sw^2 + 8*sw^4))*t - 2*(-1 + 4*sw^2)*(9 - 
                12*sw^2 + 4*sw^2*(-3 + 8*sw^2))*t^2) + mz^6*(1 - sw^2)^3*
             (171*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*(2*s^2*(-9 - 6*sw^2 + 
                  24*sw^4 + 3*d^2*(-15 + 2*sw^2) + sw^2*(12 + 40*sw^2 - 
                    64*sw^4) - 3*d*(-3 + sw^2 + 4*sw^4) + 4*d*sw^2*
                   (-3 - 5*sw^2 + 8*sw^4)) + s*(-15*d*(-3 + 8*sw^2) + 
                  3*d^2*(-3 + 8*sw^2) - 24*(3 - 7*sw^2 + 4*sw^4) + 
                  32*sw^2*(3 - 5*sw^2 + 8*sw^4))*t + 2*(-1 + 4*sw^2)*
                 (9 - 12*sw^2 + 4*sw^2*(-3 + 8*sw^2))*t^2)) + 
            mz^2*s^2*(1 - sw^2)*(27*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*(
                s^2*(-6*d^3*(-3 + 8*sw^2) + d^2*(-117 + 66*sw^2 + 96*sw^4 + 
                    sw^2*(138 + 160*sw^2 - 256*sw^4)) - 14*(9 + 6*sw^2 - 
                    24*sw^4 + 4*sw^2*(-3 - 10*sw^2 + 16*sw^4)) + 
                  6*d*(33 + sw^2 - 60*sw^4 + 4*sw^2*(-11 - 25*sw^2 + 
                      40*sw^4))) - (-7 + 4*d)*s*(-15*d*(-3 + 8*sw^2) + 
                  3*d^2*(-3 + 8*sw^2) - 24*(3 - 7*sw^2 + 4*sw^4) + 
                  32*sw^2*(3 - 5*sw^2 + 8*sw^4))*t - 2*(-7 + 4*d)*
                 (-1 + 4*sw^2)*(9 - 12*sw^2 + 4*sw^2*(-3 + 8*sw^2))*t^2)) + 
            mz^4*s*(1 - sw^2)^2*(387*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*(
                2*s^2*(3*d^3*(-3 + 8*sw^2) + 7*(9 + 6*sw^2 - 24*sw^4 + 
                    4*sw^2*(-3 - 10*sw^2 + 16*sw^4)) - 3*d*(33 + sw^2 - 
                    60*sw^4 + 4*sw^2*(-11 - 25*sw^2 + 40*sw^4)) + 
                  d^2*(-3*(15 + 11*sw^2 + 16*sw^4) + sw^2*(-69 - 80*sw^2 + 
                      128*sw^4))) + (-7 + 4*d)*s*(-15*d*(-3 + 8*sw^2) + 
                  3*d^2*(-3 + 8*sw^2) - 24*(3 - 7*sw^2 + 4*sw^4) + 
                  32*sw^2*(3 - 5*sw^2 + 8*sw^4))*t + 2*(-7 + 4*d)*
                 (-1 + 4*sw^2)*(9 - 12*sw^2 + 4*sw^2*(-3 + 8*sw^2))*t^2))) + 
          mz^2*(-9*d^2*(2*Pi)^d*s^5 + 2^(1 + d)*Pi^d*s^3*
             (2*s^2*(-9 - 6*sw^2 + 6*d^2*sw^2 + 24*sw^4 + sw^2*
                 (12 + 40*sw^2 - 64*sw^4) - 3*d*(-3 + sw^2 + 4*sw^4) + 
                4*d*sw^2*(-3 - 5*sw^2 + 8*sw^4)) + s*(-15*d*(-3 + 8*sw^2) + 
                3*d^2*(-3 + 8*sw^2) - 24*(3 - 7*sw^2 + 4*sw^4) + 
                32*sw^2*(3 - 5*sw^2 + 8*sw^4))*t + 2*(-1 + 4*sw^2)*(9 - 
                12*sw^2 + 4*sw^2*(-3 + 8*sw^2))*t^2) - mz^6*(1 - sw^2)^3*
             (81*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*(s^2*
                 (d^2*(-45 + 12*sw^2) - 6*d*(-3 + sw^2 + 4*sw^4) + 
                  8*d*sw^2*(-3 - 5*sw^2 + 8*sw^4) + 2*(-9 - 6*sw^2 + 
                    24*sw^4 + sw^2*(12 + 40*sw^2 - 64*sw^4))) + 
                s*(-15*d*(-3 + 8*sw^2) + 3*d^2*(-3 + 8*sw^2) - 
                  24*(3 - 7*sw^2 + 4*sw^4) + 32*sw^2*(3 - 5*sw^2 + 8*sw^4))*
                 t + 2*(-1 + 4*sw^2)*(9 - 12*sw^2 + 4*sw^2*(-3 + 8*sw^2))*
                 t^2)) + mz^4*s*(1 - sw^2)^2*(-297*d^2*(2*Pi)^d*s^2 + 
              2^(1 + d)*Pi^d*(s^2*(-6*d^3*(-3 + 8*sw^2) + d^2*(45 + 66*sw^2 + 
                    96*sw^4 + sw^2*(138 + 160*sw^2 - 256*sw^4)) - 
                  14*(9 + 6*sw^2 - 24*sw^4 + 4*sw^2*(-3 - 10*sw^2 + 
                      16*sw^4)) + 6*d*(33 + sw^2 - 60*sw^4 + 4*sw^2*
                     (-11 - 25*sw^2 + 40*sw^4))) - (-7 + 4*d)*s*
                 (-15*d*(-3 + 8*sw^2) + 3*d^2*(-3 + 8*sw^2) - 
                  24*(3 - 7*sw^2 + 4*sw^4) + 32*sw^2*(3 - 5*sw^2 + 8*sw^4))*
                 t - 2*(-7 + 4*d)*(-1 + 4*sw^2)*(9 - 12*sw^2 + 4*sw^2*
                   (-3 + 8*sw^2))*t^2)) + mz^2*s^2*(1 - sw^2)*
             (27*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*(2*s^2*
                 (3*d^3*(-3 + 8*sw^2) + 7*(9 + 6*sw^2 - 24*sw^4 + 4*sw^2*
                     (-3 - 10*sw^2 + 16*sw^4)) - 3*d*(33 + sw^2 - 60*sw^4 + 
                    4*sw^2*(-11 - 25*sw^2 + 40*sw^4)) + d^2*(45 - 33*sw^2 - 
                    48*sw^4 + sw^2*(-69 - 80*sw^2 + 128*sw^4))) + 
                (-7 + 4*d)*s*(-15*d*(-3 + 8*sw^2) + 3*d^2*(-3 + 8*sw^2) - 
                  24*(3 - 7*sw^2 + 4*sw^4) + 32*sw^2*(3 - 5*sw^2 + 8*sw^4))*
                 t + 2*(-7 + 4*d)*(-1 + 4*sw^2)*(9 - 12*sw^2 + 4*sw^2*
                   (-3 + 8*sw^2))*t^2)))*GaugeXi[Z]) + 
        mz^2*(1 - sw^2)*GaugeXi[W]^3*
         (s*(3*2^(2 + d)*d^4*mz^2*Pi^d*s^2*(1 - sw^2)*(-3 + 8*sw^2)*
             (s + 2*t) - 16*mz^2*s*(1 - sw^2)*(s^2*(9*(2*Pi)^d + 
                2^(1 + d)*Pi^d*(3*sw^2 - 12*sw^4 + sw^2*(-6 - 20*sw^2 + 
                    32*sw^4))) - 2^(2 + d)*Pi^d*s*(-3*(3 - 7*sw^2 + 4*sw^4) + 
                4*sw^2*(3 - 5*sw^2 + 8*sw^4))*t + (9*(2*Pi)^d + 2^(2 + d)*
                 Pi^d*(12*sw^2*(-1 + sw^2) + sw^2*(-3 + 20*sw^2 - 32*sw^4)))*
               t^2) + 2^(1 + d)*d^2*Pi^d*s*(s^2*(6*s*(-3 + sw^2 + 4*sw^4) - 
                8*s*sw^2*(-3 - 5*sw^2 + 8*sw^4) + 15*(-3 + 8*sw^2)*t) + 
              mz^4*(1 - sw^2)^2*(6*s*(-3 + sw^2 + 4*sw^4) - 8*s*sw^2*
                 (-3 - 5*sw^2 + 8*sw^4) + 15*(-3 + 8*sw^2)*t) - 
              2*mz^2*(1 - sw^2)*(s^2*(99 - 6*sw^2 - 168*sw^4 + 4*sw^2*
                   (-33 - 70*sw^2 + 112*sw^4)) + s*(3*(99 - 180*sw^2 + 
                    64*sw^4) - 4*sw^2*(99 - 80*sw^2 + 128*sw^4))*t - 
                4*(-1 + 4*sw^2)*(9 - 12*sw^2 + 4*sw^2*(-3 + 8*sw^2))*t^2)) + 
            4*d*(s^2*(s^2*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*(3*sw^2 - 12*sw^4 + 
                    sw^2*(-6 - 20*sw^2 + 32*sw^4))) - 2^(2 + d)*Pi^d*s*
                 (-3*(3 - 7*sw^2 + 4*sw^4) + 4*sw^2*(3 - 5*sw^2 + 8*sw^4))*
                 t + (9*(2*Pi)^d + 2^(2 + d)*Pi^d*(12*sw^2*(-1 + sw^2) + 
                    sw^2*(-3 + 20*sw^2 - 32*sw^4)))*t^2) + mz^4*(1 - sw^2)^2*(
                s^2*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*(3*sw^2 - 12*sw^4 + 
                    sw^2*(-6 - 20*sw^2 + 32*sw^4))) - 2^(2 + d)*Pi^d*s*
                 (-3*(3 - 7*sw^2 + 4*sw^4) + 4*sw^2*(3 - 5*sw^2 + 8*sw^4))*
                 t + (9*(2*Pi)^d + 2^(2 + d)*Pi^d*(12*sw^2*(-1 + sw^2) + 
                    sw^2*(-3 + 20*sw^2 - 32*sw^4)))*t^2) + 2*mz^2*s*(1 - 
                sw^2)*(s^2*(45*(2*Pi)^d + 2^(2 + d)*Pi^d*(3*sw^2 - 24*sw^4 + 
                    sw^2*(-15 - 40*sw^2 + 64*sw^4))) + 3*s*(51*(2*Pi)^d + 
                  2^(2 + d)*Pi^d*(2*sw^2*(-13 + 6*sw^2) + sw^2*(-17 + 
                      20*sw^2 - 32*sw^4)))*t + 3*(9*(2*Pi)^d + 2^(2 + d)*Pi^d*
                   (12*sw^2*(-1 + sw^2) + sw^2*(-3 + 20*sw^2 - 32*sw^4)))*
                 t^2)) - d^3*s*(-(2^(1 + d)*mz^2*Pi^d*s*(1 - sw^2)*
                (s*(99 - 60*sw^2 - 96*sw^4 + 4*sw^2*(-33 - 40*sw^2 + 
                     64*sw^4)) - 78*(-3 + 8*sw^2)*t)) + 3*s^2*(-15*(2*Pi)^d*
                 s + 2^(1 + d)*Pi^d*(2*s*(3 + 2*sw^2) + (-3 + 8*sw^2)*t)) + 
              3*mz^4*(1 - sw^2)^2*(-27*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
                 (2*s*(6 + 2*sw^2) + (-3 + 8*sw^2)*t)))) - 
          mz^2*(3*2^(2 + d)*d^4*mz^2*Pi^d*s^2*(1 - sw^2)*(-3 + 8*sw^2)*
             (s + 2*t) - 16*mz^2*s*(1 - sw^2)*(s^2*(9*(2*Pi)^d + 
                2^(1 + d)*Pi^d*(3*sw^2 - 12*sw^4 + sw^2*(-6 - 20*sw^2 + 
                    32*sw^4))) - 2^(2 + d)*Pi^d*s*(-3*(3 - 7*sw^2 + 4*sw^4) + 
                4*sw^2*(3 - 5*sw^2 + 8*sw^4))*t + (9*(2*Pi)^d + 2^(2 + d)*
                 Pi^d*(12*sw^2*(-1 + sw^2) + sw^2*(-3 + 20*sw^2 - 32*sw^4)))*
               t^2) + 2^(1 + d)*d^2*Pi^d*s*(s^2*(6*s*(-3 + sw^2 + 4*sw^4) - 
                8*s*sw^2*(-3 - 5*sw^2 + 8*sw^4) + 15*(-3 + 8*sw^2)*t) + 
              mz^4*(1 - sw^2)^2*(6*s*(-3 + sw^2 + 4*sw^4) - 8*s*sw^2*
                 (-3 - 5*sw^2 + 8*sw^4) + 15*(-3 + 8*sw^2)*t) - 
              2*mz^2*(1 - sw^2)*(s^2*(99 - 6*sw^2 - 168*sw^4 + 4*sw^2*
                   (-33 - 70*sw^2 + 112*sw^4)) + s*(3*(99 - 180*sw^2 + 
                    64*sw^4) - 4*sw^2*(99 - 80*sw^2 + 128*sw^4))*t - 
                4*(-1 + 4*sw^2)*(9 - 12*sw^2 + 4*sw^2*(-3 + 8*sw^2))*t^2)) + 
            4*d*(s^2*(s^2*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*(3*sw^2 - 12*sw^4 + 
                    sw^2*(-6 - 20*sw^2 + 32*sw^4))) - 2^(2 + d)*Pi^d*s*
                 (-3*(3 - 7*sw^2 + 4*sw^4) + 4*sw^2*(3 - 5*sw^2 + 8*sw^4))*
                 t + (9*(2*Pi)^d + 2^(2 + d)*Pi^d*(12*sw^2*(-1 + sw^2) + 
                    sw^2*(-3 + 20*sw^2 - 32*sw^4)))*t^2) + mz^4*(1 - sw^2)^2*(
                s^2*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*(3*sw^2 - 12*sw^4 + 
                    sw^2*(-6 - 20*sw^2 + 32*sw^4))) - 2^(2 + d)*Pi^d*s*
                 (-3*(3 - 7*sw^2 + 4*sw^4) + 4*sw^2*(3 - 5*sw^2 + 8*sw^4))*
                 t + (9*(2*Pi)^d + 2^(2 + d)*Pi^d*(12*sw^2*(-1 + sw^2) + 
                    sw^2*(-3 + 20*sw^2 - 32*sw^4)))*t^2) + 2*mz^2*s*(1 - 
                sw^2)*(s^2*(45*(2*Pi)^d + 2^(2 + d)*Pi^d*(3*sw^2 - 24*sw^4 + 
                    sw^2*(-15 - 40*sw^2 + 64*sw^4))) + 3*s*(51*(2*Pi)^d + 
                  2^(2 + d)*Pi^d*(2*sw^2*(-13 + 6*sw^2) + sw^2*(-17 + 
                      20*sw^2 - 32*sw^4)))*t + 3*(9*(2*Pi)^d + 2^(2 + d)*Pi^d*
                   (12*sw^2*(-1 + sw^2) + sw^2*(-3 + 20*sw^2 - 32*sw^4)))*
                 t^2)) - d^3*s*(-(2^(1 + d)*mz^2*Pi^d*s*(1 - sw^2)*
                (s*(99 - 60*sw^2 - 96*sw^4 + 4*sw^2*(-33 - 40*sw^2 + 
                     64*sw^4)) - 78*(-3 + 8*sw^2)*t)) + 3*s^2*(-15*(2*Pi)^d*
                 s + 2^(1 + d)*Pi^d*(2*s*(3 + 2*sw^2) + (-3 + 8*sw^2)*t)) + 
              3*mz^4*(1 - sw^2)^2*(159*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
                 (s*(-81 + 4*sw^2) + (-3 + 8*sw^2)*t))))*GaugeXi[Z]) + 
        GaugeXi[W]^2*(-(s*(3*2^(2 + d)*d^4*mz^2*Pi^d*s^2*(1 - sw^2)*
              (-3 + 8*sw^2)*(s + mz^2*(1 - sw^2))*(s + 2*t) - 
             32*mz^4*s*(1 - sw^2)^2*(s^2*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*
                  (3*sw^2 - 12*sw^4 + sw^2*(-6 - 20*sw^2 + 32*sw^4))) - 
               2^(2 + d)*Pi^d*s*(-3*(3 - 7*sw^2 + 4*sw^4) + 4*sw^2*
                  (3 - 5*sw^2 + 8*sw^4))*t + (9*(2*Pi)^d + 2^(2 + d)*Pi^d*
                  (12*sw^2*(-1 + sw^2) + sw^2*(-3 + 20*sw^2 - 32*sw^4)))*
                t^2) + 4*d*(s^3*(s^2*(-9*(2*Pi)^d + 2^(1 + d)*Pi^d*
                    (3*sw^2*(-1 + 4*sw^2) + sw^2*(6 + 20*sw^2 - 32*sw^4))) + 
                 2^(2 + d)*Pi^d*s*(-3*(3 - 7*sw^2 + 4*sw^4) + 4*sw^2*
                    (3 - 5*sw^2 + 8*sw^4))*t - (9*(2*Pi)^d + 2^(2 + d)*Pi^d*
                    (12*sw^2*(-1 + sw^2) + sw^2*(-3 + 20*sw^2 - 32*sw^4)))*
                  t^2) + 9*mz^2*s^2*(1 - sw^2)*(s^2*(9*(2*Pi)^d + 2^(1 + d)*
                    Pi^d*(3*sw^2 - 12*sw^4 + sw^2*(-6 - 20*sw^2 + 
                       32*sw^4))) - 2^(2 + d)*Pi^d*s*(-3*(3 - 7*sw^2 + 
                     4*sw^4) + 4*sw^2*(3 - 5*sw^2 + 8*sw^4))*t + 
                 (9*(2*Pi)^d + 2^(2 + d)*Pi^d*(12*sw^2*(-1 + sw^2) + 
                     sw^2*(-3 + 20*sw^2 - 32*sw^4)))*t^2) + 3*mz^6*
                (1 - sw^2)^3*(s^2*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*(3*sw^2 - 
                     12*sw^4 + sw^2*(-6 - 20*sw^2 + 32*sw^4))) - 2^(2 + d)*
                  Pi^d*s*(-3*(3 - 7*sw^2 + 4*sw^4) + 4*sw^2*(3 - 5*sw^2 + 
                     8*sw^4))*t + (9*(2*Pi)^d + 2^(2 + d)*Pi^d*
                    (12*sw^2*(-1 + sw^2) + sw^2*(-3 + 20*sw^2 - 32*sw^4)))*
                  t^2) + mz^4*s*(1 - sw^2)^2*(3*s^2*(39*(2*Pi)^d + 
                   2^(1 + d)*Pi^d*(sw^2 - 36*sw^4 + sw^2*(-26 - 60*sw^2 + 
                       96*sw^4))) - 5*2^(2 + d)*Pi^d*s*(-3*(6 - 11*sw^2 + 
                     4*sw^4) + 4*sw^2*(6 - 5*sw^2 + 8*sw^4))*t + 
                 5*(9*(2*Pi)^d + 2^(2 + d)*Pi^d*(12*sw^2*(-1 + sw^2) + 
                     sw^2*(-3 + 20*sw^2 - 32*sw^4)))*t^2)) - 
             d^3*s*(-(mz^2*s^2*(1 - sw^2)*(225*(2*Pi)^d*s + 2^(2 + d)*Pi^d*s*
                   (-3*sw^2*(13 + 16*sw^2) + sw^2*(-75 - 80*sw^2 + 
                      128*sw^4)) - 87*2^(1 + d)*Pi^d*(-3 + 8*sw^2)*t)) + 3*
                s^3*(3*(2*Pi)^d*s - 2^(3 + d)*Pi^d*s*sw^2 - 2^(1 + d)*Pi^d*
                  (-3 + 8*sw^2)*t) + 9*mz^6*(1 - sw^2)^3*(-5*(2*Pi)^d*s + 
                 2^(1 + d)*Pi^d*(s + 4*s*sw^2 - 3*t + 8*sw^2*t)) - mz^4*s*
                (1 - sw^2)^2*(63*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
                  (s*(63 - 54*sw^2 - 96*sw^4 + 2*sw^2*(-63 - 80*sw^2 + 
                       128*sw^4)) - 75*(-3 + 8*sw^2)*t))) + 
             2*d^2*s*(s^3*(45*(2*Pi)^d*t + 2^(1 + d)*Pi^d*(-3*s*(-3 + sw^2 + 
                     4*sw^4) + 4*s*sw^2*(-3 - 5*sw^2 + 8*sw^4) - 60*sw^2*
                    t)) + 3*mz^6*(1 - sw^2)^3*(-45*(2*Pi)^d*t + 2^(1 + d)*
                  Pi^d*(3*s*(-3 + sw^2 + 4*sw^4) - 4*s*sw^2*(-3 - 5*sw^2 + 
                     8*sw^4) + 60*sw^2*t)) + mz^4*(1 - sw^2)^2*
                (-585*(2*Pi)^d*s*t + 2^(1 + d)*Pi^d*(s^2*(sw^2*(132 + 
                       260*sw^2 - 416*sw^4) + 3*(-33 + 5*sw^2 + 52*sw^4)) + 
                   2*s*(267*sw^2 - 96*sw^4 + sw^2*(195 - 160*sw^2 + 
                       256*sw^4))*t + 4*(-1 + 4*sw^2)*(9 - 12*sw^2 + 
                     4*sw^2*(-3 + 8*sw^2))*t^2)) + mz^2*s*(1 - sw^2)*
                (-693*(2*Pi)^d*s*t + 2^(1 + d)*Pi^d*(s^2*(sw^2*(156 + 
                       340*sw^2 - 544*sw^4) + 3*(-39 + sw^2 + 68*sw^4)) + 
                   2*s*(303*sw^2 - 96*sw^4 + sw^2*(231 - 160*sw^2 + 
                       256*sw^4))*t + 4*(-1 + 4*sw^2)*(9 - 12*sw^2 + 
                     4*sw^2*(-3 + 8*sw^2))*t^2))))) + 
          mz^2*(3*2^(2 + d)*d^4*mz^2*Pi^d*s^2*(1 - sw^2)*(-3 + 8*sw^2)*
             (s + mz^2*(1 - sw^2))*(s + 2*t) - 32*mz^4*s*(1 - sw^2)^2*
             (s^2*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*(3*sw^2 - 12*sw^4 + 
                  sw^2*(-6 - 20*sw^2 + 32*sw^4))) - 2^(2 + d)*Pi^d*s*(
                -3*(3 - 7*sw^2 + 4*sw^4) + 4*sw^2*(3 - 5*sw^2 + 8*sw^4))*t + 
              (9*(2*Pi)^d + 2^(2 + d)*Pi^d*(12*sw^2*(-1 + sw^2) + 
                  sw^2*(-3 + 20*sw^2 - 32*sw^4)))*t^2) + 
            4*d*(s^3*(s^2*(-9*(2*Pi)^d + 2^(1 + d)*Pi^d*(3*sw^2*(-1 + 
                      4*sw^2) + sw^2*(6 + 20*sw^2 - 32*sw^4))) + 
                2^(2 + d)*Pi^d*s*(-3*(3 - 7*sw^2 + 4*sw^4) + 4*sw^2*
                   (3 - 5*sw^2 + 8*sw^4))*t - (9*(2*Pi)^d + 2^(2 + d)*Pi^d*
                   (12*sw^2*(-1 + sw^2) + sw^2*(-3 + 20*sw^2 - 32*sw^4)))*
                 t^2) + 9*mz^2*s^2*(1 - sw^2)*(s^2*(9*(2*Pi)^d + 2^(1 + d)*
                   Pi^d*(3*sw^2 - 12*sw^4 + sw^2*(-6 - 20*sw^2 + 32*sw^4))) - 
                2^(2 + d)*Pi^d*s*(-3*(3 - 7*sw^2 + 4*sw^4) + 4*sw^2*
                   (3 - 5*sw^2 + 8*sw^4))*t + (9*(2*Pi)^d + 2^(2 + d)*Pi^d*
                   (12*sw^2*(-1 + sw^2) + sw^2*(-3 + 20*sw^2 - 32*sw^4)))*
                 t^2) + 3*mz^6*(1 - sw^2)^3*(s^2*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*
                   (3*sw^2 - 12*sw^4 + sw^2*(-6 - 20*sw^2 + 32*sw^4))) - 
                2^(2 + d)*Pi^d*s*(-3*(3 - 7*sw^2 + 4*sw^4) + 4*sw^2*
                   (3 - 5*sw^2 + 8*sw^4))*t + (9*(2*Pi)^d + 2^(2 + d)*Pi^d*
                   (12*sw^2*(-1 + sw^2) + sw^2*(-3 + 20*sw^2 - 32*sw^4)))*
                 t^2) + mz^4*s*(1 - sw^2)^2*(3*s^2*(39*(2*Pi)^d + 2^(1 + d)*
                   Pi^d*(sw^2 - 36*sw^4 + sw^2*(-26 - 60*sw^2 + 96*sw^4))) - 
                5*2^(2 + d)*Pi^d*s*(-3*(6 - 11*sw^2 + 4*sw^4) + 4*sw^2*
                   (6 - 5*sw^2 + 8*sw^4))*t + 5*(9*(2*Pi)^d + 2^(2 + d)*Pi^d*
                   (12*sw^2*(-1 + sw^2) + sw^2*(-3 + 20*sw^2 - 32*sw^4)))*
                 t^2)) - d^3*s*(3*s^3*(3*(2*Pi)^d*s - 2^(3 + d)*Pi^d*s*sw^2 - 
                2^(1 + d)*Pi^d*(-3 + 8*sw^2)*t) - mz^2*s^2*(1 - sw^2)*(
                45*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(2*s*(45 - 39*sw^2 - 48*sw^4 + 
                    sw^2*(-75 - 80*sw^2 + 128*sw^4)) - 87*(-3 + 8*sw^2)*t)) - 
              mz^4*s*(1 - sw^2)^2*(369*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
                 (-6*s*(15 + 9*sw^2 + 16*sw^4) + 2*s*sw^2*(-63 - 80*sw^2 + 
                    128*sw^4) - 75*(-3 + 8*sw^2)*t)) + 9*mz^6*(1 - sw^2)^3*(
                -35*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(2*s*(8 + 2*sw^2) + 
                  (-3 + 8*sw^2)*t))) + 2*d^2*s*(s^3*(45*(2*Pi)^d*t + 
                2^(1 + d)*Pi^d*(-3*s*(-3 + sw^2 + 4*sw^4) + 4*s*sw^2*
                   (-3 - 5*sw^2 + 8*sw^4) - 60*sw^2*t)) + 3*mz^6*(1 - sw^2)^
                3*(-45*(2*Pi)^d*t + 2^(1 + d)*Pi^d*(3*s*(-3 + sw^2 + 
                    4*sw^4) - 4*s*sw^2*(-3 - 5*sw^2 + 8*sw^4) + 60*sw^2*t)) + 
              mz^4*(1 - sw^2)^2*(-585*(2*Pi)^d*s*t + 2^(1 + d)*Pi^d*
                 (s^2*(sw^2*(132 + 260*sw^2 - 416*sw^4) + 3*(-33 + 5*sw^2 + 
                      52*sw^4)) + 2*s*(267*sw^2 - 96*sw^4 + sw^2*(195 - 
                      160*sw^2 + 256*sw^4))*t + 4*(-1 + 4*sw^2)*
                   (9 - 12*sw^2 + 4*sw^2*(-3 + 8*sw^2))*t^2)) + 
              mz^2*s*(1 - sw^2)*(-693*(2*Pi)^d*s*t + 2^(1 + d)*Pi^d*
                 (s^2*(sw^2*(156 + 340*sw^2 - 544*sw^4) + 3*(-39 + sw^2 + 
                      68*sw^4)) + 2*s*(303*sw^2 - 96*sw^4 + sw^2*(231 - 
                      160*sw^2 + 256*sw^4))*t + 4*(-1 + 4*sw^2)*
                   (9 - 12*sw^2 + 4*sw^2*(-3 + 8*sw^2))*t^2))))*GaugeXi[Z]) + 
        GaugeXi[W]*(s*(-3*2^(2 + d)*d^4*mz^2*Pi^d*s^2*(1 - sw^2)*
             (-3 + 8*sw^2)*(-2*s + mz^2*(1 - sw^2))*(s + 2*t) - 
            16*mz^4*s*(1 - sw^2)^2*(s^2*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*
                 (3*sw^2 - 12*sw^4 + sw^2*(-6 - 20*sw^2 + 32*sw^4))) - 
              2^(2 + d)*Pi^d*s*(-3*(3 - 7*sw^2 + 4*sw^4) + 4*sw^2*
                 (3 - 5*sw^2 + 8*sw^4))*t + (9*(2*Pi)^d + 2^(2 + d)*Pi^d*
                 (12*sw^2*(-1 + sw^2) + sw^2*(-3 + 20*sw^2 - 32*sw^4)))*t^
                2) + d^3*s*(3*2^(1 + d)*Pi^d*s^3*(-3 + 8*sw^2)*(s + 2*t) - 
              2^(3 + d)*mz^4*Pi^d*s*(1 - sw^2)^2*(-3*s*(-9 + 6*sw^2 + 
                  8*sw^4) + 4*s*sw^2*(-9 - 10*sw^2 + 16*sw^4) - 
                21*(-3 + 8*sw^2)*t) + mz^2*s^2*(1 - sw^2)*(9*(2*Pi)^d*s + 
                2^(1 + d)*Pi^d*(-3*s*(-69 + 46*sw^2 + 64*sw^4) + 
                  s*sw^2*(-282 - 320*sw^2 + 512*sw^4) - 165*(-3 + 8*sw^2)*
                   t)) - 9*mz^6*(1 - sw^2)^3*(-39*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
                 (2*s*(9 + 2*sw^2) + (-3 + 8*sw^2)*t))) + 
            4*d*(-2*s^3*(s^2*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*(3*sw^2 - 12*sw^4 + 
                    sw^2*(-6 - 20*sw^2 + 32*sw^4))) - 2^(2 + d)*Pi^d*s*
                 (-3*(3 - 7*sw^2 + 4*sw^4) + 4*sw^2*(3 - 5*sw^2 + 8*sw^4))*
                 t + (9*(2*Pi)^d + 2^(2 + d)*Pi^d*(12*sw^2*(-1 + sw^2) + 
                    sw^2*(-3 + 20*sw^2 - 32*sw^4)))*t^2) + 15*mz^2*s^2*(1 - 
                sw^2)*(s^2*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*(3*sw^2 - 12*sw^4 + 
                    sw^2*(-6 - 20*sw^2 + 32*sw^4))) - 2^(2 + d)*Pi^d*s*
                 (-3*(3 - 7*sw^2 + 4*sw^4) + 4*sw^2*(3 - 5*sw^2 + 8*sw^4))*
                 t + (9*(2*Pi)^d + 2^(2 + d)*Pi^d*(12*sw^2*(-1 + sw^2) + 
                    sw^2*(-3 + 20*sw^2 - 32*sw^4)))*t^2) + 3*mz^6*(1 - sw^2)^
                3*(s^2*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*(3*sw^2 - 12*sw^4 + 
                    sw^2*(-6 - 20*sw^2 + 32*sw^4))) - 2^(2 + d)*Pi^d*s*
                 (-3*(3 - 7*sw^2 + 4*sw^4) + 4*sw^2*(3 - 5*sw^2 + 8*sw^4))*
                 t + (9*(2*Pi)^d + 2^(2 + d)*Pi^d*(12*sw^2*(-1 + sw^2) + 
                    sw^2*(-3 + 20*sw^2 - 32*sw^4)))*t^2) - 
              2*mz^4*s*(1 - sw^2)^2*(99*(2*Pi)^d*s*t + 2^(1 + d)*Pi^d*
                 (3*s^2*(3 + 5*sw^2 - 12*sw^4 + 4*sw^2*(-1 - 5*sw^2 + 
                      8*sw^4)) - 2*s*(69*sw^2 - 48*sw^4 + sw^2*(33 - 
                      80*sw^2 + 128*sw^4))*t - 2*(-1 + 4*sw^2)*(9 - 12*sw^2 + 
                    4*sw^2*(-3 + 8*sw^2))*t^2))) + 2*d^2*s*
             (2^(1 + d)*Pi^d*s^3*(-6*s*(-3 + sw^2 + 4*sw^4) + 8*s*sw^2*
                 (-3 - 5*sw^2 + 8*sw^4) - 15*(-3 + 8*sw^2)*t) + 
              2*mz^4*(1 - sw^2)^2*(s^2*(99*(2*Pi)^d + 2^(2 + d)*Pi^d*
                   (3*sw^2 - 48*sw^4 + sw^2*(-33 - 80*sw^2 + 128*sw^4))) - 
                2^(1 + d)*Pi^d*s*(-3*(51 - 92*sw^2 + 32*sw^4) + 4*sw^2*
                   (51 - 40*sw^2 + 64*sw^4))*t - 2^(2 + d)*Pi^d*(-1 + 4*sw^2)*
                 (9 - 12*sw^2 + 4*sw^2*(-3 + 8*sw^2))*t^2) + 
              3*mz^6*(1 - sw^2)^3*(-45*(2*Pi)^d*t + 2^(1 + d)*Pi^d*
                 (3*s*(-3 + sw^2 + 4*sw^4) - 4*s*sw^2*(-3 - 5*sw^2 + 
                    8*sw^4) + 60*sw^2*t)) + mz^2*s*(1 - sw^2)*(-1251*(2*Pi)^d*
                 s*t + 2^(1 + d)*Pi^d*(s^2*(-207 - 3*sw^2 + 372*sw^4 + 
                    sw^2*(276 + 620*sw^2 - 992*sw^4)) + 2*s*(561*sw^2 - 
                    192*sw^4 + sw^2*(417 - 320*sw^2 + 512*sw^4))*t + 
                  8*(-1 + 4*sw^2)*(9 - 12*sw^2 + 4*sw^2*(-3 + 8*sw^2))*
                   t^2)))) + mz^2*(3*2^(2 + d)*d^4*mz^2*Pi^d*s^2*(1 - sw^2)*
             (-3 + 8*sw^2)*(-2*s + mz^2*(1 - sw^2))*(s + 2*t) + 
            16*mz^4*s*(1 - sw^2)^2*(s^2*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*
                 (3*sw^2 - 12*sw^4 + sw^2*(-6 - 20*sw^2 + 32*sw^4))) - 
              2^(2 + d)*Pi^d*s*(-3*(3 - 7*sw^2 + 4*sw^4) + 4*sw^2*
                 (3 - 5*sw^2 + 8*sw^4))*t + (9*(2*Pi)^d + 2^(2 + d)*Pi^d*
                 (12*sw^2*(-1 + sw^2) + sw^2*(-3 + 20*sw^2 - 32*sw^4)))*t^
                2) + d^3*s*(-3*2^(1 + d)*Pi^d*s^3*(-3 + 8*sw^2)*(s + 2*t) + 
              2^(3 + d)*mz^4*Pi^d*s*(1 - sw^2)^2*(-3*s*(-9 + 6*sw^2 + 
                  8*sw^4) + 4*s*sw^2*(-9 - 10*sw^2 + 16*sw^4) - 
                21*(-3 + 8*sw^2)*t) - mz^2*s^2*(1 - sw^2)*(-45*(2*Pi)^d*s + 
                2^(1 + d)*Pi^d*(2*s*(117 - 69*sw^2 - 96*sw^4 + sw^2*
                     (-141 - 160*sw^2 + 256*sw^4)) - 165*(-3 + 8*sw^2)*t)) + 
              9*mz^6*(1 - sw^2)^3*(-49*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
                 (s*(23 + 4*sw^2) + (-3 + 8*sw^2)*t))) - 
            4*d*(-2*s^3*(s^2*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*(3*sw^2 - 12*sw^4 + 
                    sw^2*(-6 - 20*sw^2 + 32*sw^4))) - 2^(2 + d)*Pi^d*s*
                 (-3*(3 - 7*sw^2 + 4*sw^4) + 4*sw^2*(3 - 5*sw^2 + 8*sw^4))*
                 t + (9*(2*Pi)^d + 2^(2 + d)*Pi^d*(12*sw^2*(-1 + sw^2) + 
                    sw^2*(-3 + 20*sw^2 - 32*sw^4)))*t^2) + 15*mz^2*s^2*(1 - 
                sw^2)*(s^2*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*(3*sw^2 - 12*sw^4 + 
                    sw^2*(-6 - 20*sw^2 + 32*sw^4))) - 2^(2 + d)*Pi^d*s*
                 (-3*(3 - 7*sw^2 + 4*sw^4) + 4*sw^2*(3 - 5*sw^2 + 8*sw^4))*
                 t + (9*(2*Pi)^d + 2^(2 + d)*Pi^d*(12*sw^2*(-1 + sw^2) + 
                    sw^2*(-3 + 20*sw^2 - 32*sw^4)))*t^2) + 3*mz^6*(1 - sw^2)^
                3*(s^2*(9*(2*Pi)^d + 2^(1 + d)*Pi^d*(3*sw^2 - 12*sw^4 + 
                    sw^2*(-6 - 20*sw^2 + 32*sw^4))) - 2^(2 + d)*Pi^d*s*
                 (-3*(3 - 7*sw^2 + 4*sw^4) + 4*sw^2*(3 - 5*sw^2 + 8*sw^4))*
                 t + (9*(2*Pi)^d + 2^(2 + d)*Pi^d*(12*sw^2*(-1 + sw^2) + 
                    sw^2*(-3 + 20*sw^2 - 32*sw^4)))*t^2) - 
              2*mz^4*s*(1 - sw^2)^2*(99*(2*Pi)^d*s*t + 2^(1 + d)*Pi^d*
                 (3*s^2*(3 + 5*sw^2 - 12*sw^4 + 4*sw^2*(-1 - 5*sw^2 + 
                      8*sw^4)) - 2*s*(69*sw^2 - 48*sw^4 + sw^2*(33 - 
                      80*sw^2 + 128*sw^4))*t - 2*(-1 + 4*sw^2)*(9 - 12*sw^2 + 
                    4*sw^2*(-3 + 8*sw^2))*t^2))) - 2*d^2*s*
             (2^(1 + d)*Pi^d*s^3*(-6*s*(-3 + sw^2 + 4*sw^4) + 8*s*sw^2*
                 (-3 - 5*sw^2 + 8*sw^4) - 15*(-3 + 8*sw^2)*t) + 
              2*mz^4*(1 - sw^2)^2*(s^2*(99*(2*Pi)^d + 2^(2 + d)*Pi^d*
                   (3*sw^2 - 48*sw^4 + sw^2*(-33 - 80*sw^2 + 128*sw^4))) - 
                2^(1 + d)*Pi^d*s*(-3*(51 - 92*sw^2 + 32*sw^4) + 4*sw^2*
                   (51 - 40*sw^2 + 64*sw^4))*t - 2^(2 + d)*Pi^d*(-1 + 4*sw^2)*
                 (9 - 12*sw^2 + 4*sw^2*(-3 + 8*sw^2))*t^2) + 
              3*mz^6*(1 - sw^2)^3*(-45*(2*Pi)^d*t + 2^(1 + d)*Pi^d*
                 (3*s*(-3 + sw^2 + 4*sw^4) - 4*s*sw^2*(-3 - 5*sw^2 + 
                    8*sw^4) + 60*sw^2*t)) + mz^2*s*(1 - sw^2)*(-1251*(2*Pi)^d*
                 s*t + 2^(1 + d)*Pi^d*(s^2*(-207 - 3*sw^2 + 372*sw^4 + 
                    sw^2*(276 + 620*sw^2 - 992*sw^4)) + 2*s*(561*sw^2 - 
                    192*sw^4 + sw^2*(417 - 320*sw^2 + 512*sw^4))*t + 
                  8*(-1 + 4*sw^2)*(9 - 12*sw^2 + 4*sw^2*(-3 + 8*sw^2))*
                   t^2))))*GaugeXi[Z])))/(d*mz^4*(mz^2 - s)*(-mz^2 + s)*sw^2*
       (1 - sw^2)^2*(-1 + GaugeXi[W])^2*(-s + mz^2*GaugeXi[Z]))))/
   ((-1 + d)*Pi^(7*d)*s^3*sw^2*(1 - sw^2)), 
  ((I/9)*4^(-4 - 3*d)*EL^6*((3*(2*Pi)^(5*d)*(3 - 10*sw^2 + 8*sw^4)*
       ((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 4*t^2)*
       (s^2 + 2*(-3 + 2*d)*mz^2*s*(1 - sw^2) + mz^4*(1 - sw^2)^2 - 
        2*mz^2*(1 - sw^2)*(s + mz^2*(1 - sw^2))*GaugeXi[W] + 
        mz^4*(1 - sw^2)^2*GaugeXi[W]^2))/((-1 + d)*mz^4*(mz^2 - s)*s*sw^4*
       (1 - sw^2)^2) + (2^(3 + 5*d)*Pi^(5*d)*(-1 + 2*sw^2)*
       (-s + mz^2*(1 - sw^2))*(s^2*(3*d^2 - 4*d*(3 + 2*sw^2) + 
          4*(3 + 4*sw^2)) + 2*s*(24 - 15*d + 3*d^2 - 16*sw^2)*t + 
        4*(3 - 8*sw^2)*t^2)*(s^2 + 2*(-3 + 2*d)*mz^2*s*(1 - sw^2) + 
        mz^4*(1 - sw^2)^2 - 2*mz^2*(1 - sw^2)*(s + mz^2*(1 - sw^2))*
         GaugeXi[W] + mz^4*(1 - sw^2)^2*GaugeXi[W]^2))/
      ((-1 + d)*mz^4*s^2*(-mz^2 + s)*sw^2*(1 - sw^2)^2) - 
     (3*(2*Pi)^(5*d)*(-3 + 4*sw^2)*(-s + mz^2*(1 - sw^2))*
       (-((-2 + d)*s^2*(-2 + 4*sw^2 + d*(1 - 4*sw^2) + sw^2*(4 + 8*sw^2))) + 
        2*s*(-8 + 16*sw^2 - 16*sw^2*(-1 + sw^2) - 5*d*(-1 + 4*sw^2) + 
          d^2*(-1 + 4*sw^2))*t + 4*(-1 + 2*sw^2 + sw^2*(2 - 8*sw^2))*t^2)*
       (s^2 + 2*(-3 + 2*d)*mz^2*s*(1 - sw^2) + mz^4*(1 - sw^2)^2 - 
        2*mz^2*(1 - sw^2)*(s + mz^2*(1 - sw^2))*GaugeXi[W] + 
        mz^4*(1 - sw^2)^2*GaugeXi[W]^2))/((-1 + d)*mz^4*s*(-mz^2 + s)^2*sw^4*
       (1 - sw^2)^2) - (2^(1 + 5*d)*Pi^(5*d)*(-1 + 2*sw^2)*
       (-s + mz^2*(1 - sw^2))*((-2 + d)*s^2*(18 - 24*sw^2 - 
          8*sw^2*(3 + 4*sw^2) + 3*d*(-3 + 8*sw^2)) + 
        2*s*(-72 + 96*sw^2 + sw^2*(96 - 64*sw^2) - 15*d*(-3 + 8*sw^2) + 
          3*d^2*(-3 + 8*sw^2))*t + 4*(-9 + 12*sw^2 - 4*sw^2*(-3 + 8*sw^2))*
         t^2)*(s^2 + 2*(-3 + 2*d)*mz^2*s*(1 - sw^2) + mz^4*(1 - sw^2)^2 - 
        2*mz^2*(1 - sw^2)*(s + mz^2*(1 - sw^2))*GaugeXi[W] + 
        mz^4*(1 - sw^2)^2*GaugeXi[W]^2))/((-1 + d)*mz^4*s*(-mz^2 + s)^2*sw^4*
       (1 - sw^2)^2) - (2^(2 + 5*d)*Pi^(5*d)*
       (s^2*(3*d^2*(-3 + 8*sw^2) + 4*d*(-3*(-3 + sw^2 + 4*sw^4) + 
            4*sw^2*(-3 - 5*sw^2 + 8*sw^4)) - 4*(9 + 6*sw^2 - 24*sw^4 + 
            4*sw^2*(-3 - 10*sw^2 + 16*sw^4))) + 
        2*s*(-15*d*(-3 + 8*sw^2) + 3*d^2*(-3 + 8*sw^2) - 
          24*(3 - 7*sw^2 + 4*sw^4) + 32*sw^2*(3 - 5*sw^2 + 8*sw^4))*t + 
        4*(-1 + 4*sw^2)*(9 - 12*sw^2 + 4*sw^2*(-3 + 8*sw^2))*t^2)*
       (s^2 + 2*(-3 + 2*d)*mz^2*s*(1 - sw^2) + mz^4*(1 - sw^2)^2 - 
        2*mz^2*(1 - sw^2)*(s + mz^2*(1 - sw^2))*GaugeXi[W] + 
        mz^4*(1 - sw^2)^2*GaugeXi[W]^2))/((-1 + d)*(mz^2 - s)*s^2*(-mz^2 + s)*
       (1 - sw^2)) + (2^(2 + 5*d)*Pi^(5*d)*(-s + mz^2*(1 - sw^2))^2*
       (s^2*(3*d^2*(-3 + 8*sw^2) + 4*d*(-3*(-3 + sw^2 + 4*sw^4) + 
            4*sw^2*(-3 - 5*sw^2 + 8*sw^4)) - 4*(9 + 6*sw^2 - 24*sw^4 + 
            4*sw^2*(-3 - 10*sw^2 + 16*sw^4))) + 
        2*s*(-15*d*(-3 + 8*sw^2) + 3*d^2*(-3 + 8*sw^2) - 
          24*(3 - 7*sw^2 + 4*sw^4) + 32*sw^2*(3 - 5*sw^2 + 8*sw^4))*t + 
        4*(-1 + 4*sw^2)*(9 - 12*sw^2 + 4*sw^2*(-3 + 8*sw^2))*t^2)*
       (s^2 + 2*(-3 + 2*d)*mz^2*s*(1 - sw^2) + mz^4*(1 - sw^2)^2 - 
        2*mz^2*(1 - sw^2)*(s + mz^2*(1 - sw^2))*GaugeXi[W] + 
        mz^4*(1 - sw^2)^2*GaugeXi[W]^2))/((-1 + d)*mz^4*s^2*(-mz^2 + s)^2*
       sw^2*(1 - sw^2)^2) + (2^(1 + 5*d)*Pi^(5*d)*
       (s^2*(3*d^2*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
          4*d*(-9 + 30*sw^2 - 24*sw^4 + sw^2*(30 - 22*sw^2 - 40*sw^4) + 
            8*sw^4*(-3 - 5*sw^2 + 8*sw^4)) - 4*(-9 + 30*sw^2 - 24*sw^4 + 
            sw^2*(30 + 4*sw^2 - 80*sw^4) + 8*sw^4*(-3 - 10*sw^2 + 
              16*sw^4))) + 2*s*(-15*d*(3 - 10*sw^2 + 16*sw^4 + 
            2*sw^2*(-5 + 8*sw^2)) + 3*d^2*(3 - 10*sw^2 + 16*sw^4 + 
            2*sw^2*(-5 + 8*sw^2)) + 8*(9 - 30*sw^2 + 24*sw^4 + 
            sw^2*(-30 + 74*sw^2 - 40*sw^4) + 8*sw^4*(3 - 5*sw^2 + 8*sw^4)))*
         t + 4*(9 - 30*sw^2 + 24*sw^4 + 8*sw^4*(3 - 20*sw^2 + 32*sw^4) - 
          2*sw^2*(15 - 76*sw^2 + 80*sw^4))*t^2)*
       (s^2 + 2*(-3 + 2*d)*mz^2*s*(1 - sw^2) + mz^4*(1 - sw^2)^2 - 
        2*mz^2*(1 - sw^2)*(s + mz^2*(1 - sw^2))*GaugeXi[W] + 
        mz^4*(1 - sw^2)^2*GaugeXi[W]^2))/((-1 + d)*(mz^2 - s)^2*s*(-mz^2 + s)*
       (1 - sw^2)^2) - (2^(4 + d)*Pi^d*
       ((2*Pi)^(4*d)*s^4*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
            4*d*(-3 - 5*sw^2 + 8*sw^4)) + 2*s*(-15*d + 3*d^2 + 
            8*(3 - 5*sw^2 + 8*sw^4))*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2) + 
        mz^8*(2*Pi)^(4*d)*(1 - sw^2)^4*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
            4*d*(-3 - 5*sw^2 + 8*sw^4)) + 2*s*(-15*d + 3*d^2 + 
            8*(3 - 5*sw^2 + 8*sw^4))*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2) + 
        4*mz^2*s^3*(1 - sw^2)*(3*d^3*(2*Pi)^(4*d)*s^2 + 2^(1 + 4*d)*Pi^(4*d)*
           (s^2*(-12 - 40*sw^2 + 64*sw^4 + d*(18 + 40*sw^2 - 64*sw^4) + 
              d^2*(-9 - 10*sw^2 + 16*sw^4)) + s*(-21*d^2 + 3*d^3 - 
              16*(3 - 5*sw^2 + 8*sw^4) + d*(54 - 40*sw^2 + 64*sw^4))*t + 
            2*(-2 + d)*(3 - 20*sw^2 + 32*sw^4)*t^2)) + 4*mz^6*s*(1 - sw^2)^3*
         (3*d^3*(2*Pi)^(4*d)*s^2 + 2^(1 + 4*d)*Pi^(4*d)*
           (s^2*(-12 - 40*sw^2 + 64*sw^4 + d*(18 + 40*sw^2 - 64*sw^4) + 
              d^2*(-9 - 10*sw^2 + 16*sw^4)) + s*(-21*d^2 + 3*d^3 - 
              16*(3 - 5*sw^2 + 8*sw^4) + d*(54 - 40*sw^2 + 64*sw^4))*t + 
            2*(-2 + d)*(3 - 20*sw^2 + 32*sw^4)*t^2)) - 
        2*mz^4*s^2*(1 - sw^2)^2*(-69*d^2*(2*Pi)^(4*d)*s^2 + 
          2^(1 + 4*d)*Pi^(4*d)*(2*s^2*(3*d^3 + 4*d^2*sw^2*(-5 + 8*sw^2) + 
              d*(33 + 75*sw^2 - 120*sw^4) + 7*(-3 - 10*sw^2 + 16*sw^4)) + 
            s*(-81*d^2 + 12*d^3 - 56*(3 - 5*sw^2 + 8*sw^4) + 
              d*(201 - 160*sw^2 + 256*sw^4))*t + 2*(-7 + 4*d)*
             (3 - 20*sw^2 + 32*sw^4)*t^2)) - 
        2*((2*Pi)^(4*d)*s^4*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
              4*d*(-3 - 5*sw^2 + 8*sw^4)) + 2*s*(-15*d + 3*d^2 + 
              8*(3 - 5*sw^2 + 8*sw^4))*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2) + 
          2^(1 + 4*d)*mz^8*Pi^(4*d)*(1 - sw^2)^4*
           (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 
                8*sw^4)) + 2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
            4*(3 - 20*sw^2 + 32*sw^4)*t^2) + mz^6*s*(1 - sw^2)^3*
           (-75*d^2*(2*Pi)^(4*d)*s^2 + 2^(1 + 4*d)*Pi^(4*d)*
             (2*s^2*(3*d^3 + 4*d^2*sw^2*(-5 + 8*sw^2) + d*(39 + 85*sw^2 - 
                  136*sw^4) + 9*(-3 - 10*sw^2 + 16*sw^4)) + s*(-87*d^2 + 
                12*d^3 - 72*(3 - 5*sw^2 + 8*sw^4) + d*(231 - 160*sw^2 + 
                  256*sw^4))*t + 2*(-9 + 4*d)*(3 - 20*sw^2 + 32*sw^4)*t^2)) + 
          mz^2*s^3*(1 - sw^2)*(-69*d^2*(2*Pi)^(4*d)*s^2 + 
            2^(1 + 4*d)*Pi^(4*d)*(2*s^2*(3*d^3 + 4*d^2*sw^2*(-5 + 8*sw^2) + 
                d*(33 + 75*sw^2 - 120*sw^4) + 7*(-3 - 10*sw^2 + 16*sw^4)) + 
              s*(-81*d^2 + 12*d^3 - 56*(3 - 5*sw^2 + 8*sw^4) + 
                d*(201 - 160*sw^2 + 256*sw^4))*t + 2*(-7 + 4*d)*(3 - 
                20*sw^2 + 32*sw^4)*t^2)) - mz^4*s^2*(1 - sw^2)^2*
           (-135*d^2*(2*Pi)^(4*d)*s^2 + 2^(1 + 4*d)*Pi^(4*d)*
             (2*s^2*(6*d^3 + 8*d^2*sw^2*(-5 + 8*sw^2) + d*(63 + 145*sw^2 - 
                  232*sw^4) + 13*(-3 - 10*sw^2 + 16*sw^4)) + s*(-159*d^2 + 
                24*d^3 - 104*(3 - 5*sw^2 + 8*sw^4) + d*(387 - 320*sw^2 + 
                  512*sw^4))*t + 2*(-13 + 8*d)*(3 - 20*sw^2 + 32*sw^4)*t^2)))*
         GaugeXi[W] + ((2*Pi)^(4*d)*s^4*(s^2*(12 + 3*d^2 + 40*sw^2 - 
              64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
            2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
            4*(3 - 20*sw^2 + 32*sw^4)*t^2) + 3*2^(1 + 4*d)*mz^8*Pi^(4*d)*
           (1 - sw^2)^4*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
              4*d*(-3 - 5*sw^2 + 8*sw^4)) + 2*s*(-15*d + 3*d^2 + 
              8*(3 - 5*sw^2 + 8*sw^4))*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2) + 
          4*mz^2*s^3*(1 - sw^2)*(3*(-5 + d)*d^2*(2*Pi)^(4*d)*s^2 + 
            2^(1 + 4*d)*Pi^(4*d)*(2*s^2*(-3 - 10*sw^2 + 16*sw^4 + 
                d^2*sw^2*(-5 + 8*sw^2) + d*(6 + 15*sw^2 - 24*sw^4)) + 
              s*(-18*d^2 + 3*d^3 - 8*(3 - 5*sw^2 + 8*sw^4) + 
                d*(39 - 40*sw^2 + 64*sw^4))*t + 2*(-1 + d)*(3 - 20*sw^2 + 
                32*sw^4)*t^2)) + 2*mz^6*s*(1 - sw^2)^3*
           (-45*d^2*(2*Pi)^(4*d)*s^2 + 2^(1 + 4*d)*Pi^(4*d)*
             (s^2*(3*d^3 + 4*d^2*sw^2*(-5 + 8*sw^2) + d*(54 + 110*sw^2 - 
                  176*sw^4) + 14*(-3 - 10*sw^2 + 16*sw^4)) + s*(-51*d^2 + 
                6*d^3 - 56*(3 - 5*sw^2 + 8*sw^4) + d*(153 - 80*sw^2 + 
                  128*sw^4))*t + 2*(-7 + 2*d)*(3 - 20*sw^2 + 32*sw^4)*t^2)) - 
          mz^4*s^2*(1 - sw^2)^2*(-129*d^2*(2*Pi)^(4*d)*s^2 + 
            2^(1 + 4*d)*Pi^(4*d)*(2*s^2*(6*d^3 + 8*d^2*sw^2*(-5 + 8*sw^2) + 
                d*(57 + 135*sw^2 - 216*sw^4) + 11*(-3 - 10*sw^2 + 16*sw^4)) + 
              s*(-153*d^2 + 24*d^3 - 88*(3 - 5*sw^2 + 8*sw^4) + 
                d*(357 - 320*sw^2 + 512*sw^4))*t + 2*(-11 + 8*d)*(3 - 
                20*sw^2 + 32*sw^4)*t^2)))*GaugeXi[W]^2 - 
        2^(1 + 4*d)*Pi^(4*d)*(s + 2*mz^2*(1 - sw^2))*
         (-(mz*s*Sqrt[1 - sw^2]) + mz^3*(1 - sw^2)^(3/2))^2*
         (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
          2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          4*(3 - 20*sw^2 + 32*sw^4)*t^2)*GaugeXi[W]^3 + 
        mz^4*(2*Pi)^(4*d)*(1 - sw^2)^2*(-s + mz^2*(1 - sw^2))^2*
         (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
          2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          4*(3 - 20*sw^2 + 32*sw^4)*t^2)*GaugeXi[W]^4))/
      ((-1 + d)*mz^4*s^3*(-mz^2 + s)*(1 - sw^2)^2*(-1 + GaugeXi[W])^2) + 
     (8*(-3*d^2*(2*Pi)^(5*d)*s^6 + 2^(1 + 5*d)*Pi^(5*d)*s^4*
         (s^2*(-6 + 4*sw^2 + 6*d^2*sw^2 + 16*sw^4 + 
            sw^2*(12 + 40*sw^2 - 64*sw^4) + 2*d*(3 - 4*sw^2 - 4*sw^4 + 
              2*sw^2*(-3 - 5*sw^2 + 8*sw^4))) + s*(-15*d*(-1 + 4*sw^2) + 
            d^2*(-3 + 12*sw^2) + 8*(-3 + 8*sw^2 - 4*sw^4 + 2*sw^2*(3 - 
                5*sw^2 + 8*sw^4)))*t + 2*(-3 + 8*sw^2)*(1 - 2*sw^2 + 
            sw^2*(-2 + 8*sw^2))*t^2) + mz^8*(1 - sw^2)^4*
         (-3*d^2*(2*Pi)^(5*d)*s^2 + 2^(1 + 5*d)*Pi^(5*d)*
           (s^2*(-6 + 4*sw^2 + 6*d^2*sw^2 + 16*sw^4 + sw^2*(12 + 40*sw^2 - 
                64*sw^4) + 2*d*(3 - 4*sw^2 - 4*sw^4 + 2*sw^2*(-3 - 5*sw^2 + 
                  8*sw^4))) + s*(-15*d*(-1 + 4*sw^2) + d^2*(-3 + 12*sw^2) + 
              8*(-3 + 8*sw^2 - 4*sw^4 + 2*sw^2*(3 - 5*sw^2 + 8*sw^4)))*t + 
            2*(-3 + 8*sw^2)*(1 - 2*sw^2 + sw^2*(-2 + 8*sw^2))*t^2)) + 
        4*mz^2*s^3*(1 - sw^2)*(-3*d^3*(2*Pi)^(5*d)*s^2 + 2^(1 + 5*d)*Pi^(5*d)*
           (s^2*(6*d^3*sw^2 + d*(-18 + 20*sw^2 + 32*sw^4 + 
                sw^2*(36 + 80*sw^2 - 128*sw^4)) + d^2*(9 - 14*sw^2 - 8*sw^4 + 
                2*sw^2*(-9 - 10*sw^2 + 16*sw^4)) + 4*(3 - 2*sw^2 - 8*sw^4 + 
                sw^2*(-6 - 20*sw^2 + 32*sw^4))) + (-2 + d)*s*
             (-15*d*(-1 + 4*sw^2) + d^2*(-3 + 12*sw^2) + 8*(-3 + 8*sw^2 - 
                4*sw^4 + 2*sw^2*(3 - 5*sw^2 + 8*sw^4)))*t + 
            2*(-2 + d)*(-3 + 8*sw^2)*(1 - 2*sw^2 + sw^2*(-2 + 8*sw^2))*
             t^2)) + 4*mz^6*s*(1 - sw^2)^3*(-3*d^3*(2*Pi)^(5*d)*s^2 + 
          2^(1 + 5*d)*Pi^(5*d)*(s^2*(6*d^3*sw^2 + d*(-18 + 20*sw^2 + 
                32*sw^4 + sw^2*(36 + 80*sw^2 - 128*sw^4)) + 
              d^2*(9 - 14*sw^2 - 8*sw^4 + 2*sw^2*(-9 - 10*sw^2 + 16*sw^4)) + 
              4*(3 - 2*sw^2 - 8*sw^4 + sw^2*(-6 - 20*sw^2 + 32*sw^4))) + 
            (-2 + d)*s*(-15*d*(-1 + 4*sw^2) + d^2*(-3 + 12*sw^2) + 
              8*(-3 + 8*sw^2 - 4*sw^4 + 2*sw^2*(3 - 5*sw^2 + 8*sw^4)))*t + 
            2*(-2 + d)*(-3 + 8*sw^2)*(1 - 2*sw^2 + sw^2*(-2 + 8*sw^2))*
             t^2)) - 2*mz^4*s^2*(1 - sw^2)^2*(69*d^2*(2*Pi)^(5*d)*s^2 + 
          2^(1 + 5*d)*Pi^(5*d)*(s^2*(6*d^3*(-1 + 4*sw^2) + 14*(3 - 2*sw^2 - 
                8*sw^4 + sw^2*(-6 - 20*sw^2 + 32*sw^4)) - 6*d*(11 - 12*sw^2 - 
                20*sw^4 + sw^2*(-22 - 50*sw^2 + 80*sw^4)) + 
              d^2*(-(sw^2*(53 + 32*sw^2)) + sw^2*(-69 - 80*sw^2 + 
                  128*sw^4))) + (-7 + 4*d)*s*(-15*d*(-1 + 4*sw^2) + 
              d^2*(-3 + 12*sw^2) + 8*(-3 + 8*sw^2 - 4*sw^4 + 2*sw^2*
                 (3 - 5*sw^2 + 8*sw^4)))*t + 2*(-7 + 4*d)*(-3 + 8*sw^2)*
             (1 - 2*sw^2 + sw^2*(-2 + 8*sw^2))*t^2)) - 
        2*(-s + mz^2*(1 - sw^2))^2*(-3*d^2*(2*Pi)^(5*d)*s^4 + 
          2^(1 + 5*d)*Pi^(5*d)*s^2*(s^2*(-6 + 4*sw^2 + 6*d^2*sw^2 + 16*sw^4 + 
              sw^2*(12 + 40*sw^2 - 64*sw^4) + 2*d*(3 - 4*sw^2 - 4*sw^4 + 
                2*sw^2*(-3 - 5*sw^2 + 8*sw^4))) + s*(-15*d*(-1 + 4*sw^2) + 
              d^2*(-3 + 12*sw^2) + 8*(-3 + 8*sw^2 - 4*sw^4 + 2*sw^2*
                 (3 - 5*sw^2 + 8*sw^4)))*t + 2*(-3 + 8*sw^2)*
             (1 - 2*sw^2 + sw^2*(-2 + 8*sw^2))*t^2) + 2*mz^4*(1 - sw^2)^2*
           (-3*d^2*(2*Pi)^(5*d)*s^2 + 2^(1 + 5*d)*Pi^(5*d)*
             (s^2*(-6 + 4*sw^2 + 6*d^2*sw^2 + 16*sw^4 + sw^2*(12 + 40*sw^2 - 
                  64*sw^4) + 2*d*(3 - 4*sw^2 - 4*sw^4 + 2*sw^2*(-3 - 5*sw^2 + 
                    8*sw^4))) + s*(-15*d*(-1 + 4*sw^2) + d^2*(-3 + 12*sw^2) + 
                8*(-3 + 8*sw^2 - 4*sw^4 + 2*sw^2*(3 - 5*sw^2 + 8*sw^4)))*t + 
              2*(-3 + 8*sw^2)*(1 - 2*sw^2 + sw^2*(-2 + 8*sw^2))*t^2)) + 
          mz^2*s*(1 - sw^2)*(63*d^2*(2*Pi)^(5*d)*s^2 + 2^(1 + 5*d)*Pi^(5*d)*
             (s^2*(6*d^3*(-1 + 4*sw^2) + d*(-54 + 56*sw^2 + 104*sw^4 + 
                  sw^2*(108 + 260*sw^2 - 416*sw^4)) + 10*(3 - 2*sw^2 - 
                  8*sw^4 + sw^2*(-6 - 20*sw^2 + 32*sw^4)) + 
                d^2*(-(sw^2*(47 + 32*sw^2)) + sw^2*(-63 - 80*sw^2 + 
                    128*sw^4))) + (-5 + 4*d)*s*(-15*d*(-1 + 4*sw^2) + 
                d^2*(-3 + 12*sw^2) + 8*(-3 + 8*sw^2 - 4*sw^4 + 2*sw^2*
                   (3 - 5*sw^2 + 8*sw^4)))*t + 2*(-5 + 4*d)*(-3 + 8*sw^2)*(
                1 - 2*sw^2 + sw^2*(-2 + 8*sw^2))*t^2)))*GaugeXi[W] + 
        (-3*d^2*(2*Pi)^(5*d)*s^6 + 2^(1 + 5*d)*Pi^(5*d)*s^4*
           (s^2*(-6 + 4*sw^2 + 6*d^2*sw^2 + 16*sw^4 + sw^2*(12 + 40*sw^2 - 
                64*sw^4) + 2*d*(3 - 4*sw^2 - 4*sw^4 + 2*sw^2*(-3 - 5*sw^2 + 
                  8*sw^4))) + s*(-15*d*(-1 + 4*sw^2) + d^2*(-3 + 12*sw^2) + 
              8*(-3 + 8*sw^2 - 4*sw^4 + 2*sw^2*(3 - 5*sw^2 + 8*sw^4)))*t + 
            2*(-3 + 8*sw^2)*(1 - 2*sw^2 + sw^2*(-2 + 8*sw^2))*t^2) + 
          6*mz^8*(1 - sw^2)^4*(-3*d^2*(2*Pi)^(5*d)*s^2 + 2^(1 + 5*d)*Pi^(5*d)*
             (s^2*(-6 + 4*sw^2 + 6*d^2*sw^2 + 16*sw^4 + sw^2*(12 + 40*sw^2 - 
                  64*sw^4) + 2*d*(3 - 4*sw^2 - 4*sw^4 + 2*sw^2*(-3 - 5*sw^2 + 
                    8*sw^4))) + s*(-15*d*(-1 + 4*sw^2) + d^2*(-3 + 12*sw^2) + 
                8*(-3 + 8*sw^2 - 4*sw^4 + 2*sw^2*(3 - 5*sw^2 + 8*sw^4)))*t + 
              2*(-3 + 8*sw^2)*(1 - 2*sw^2 + sw^2*(-2 + 8*sw^2))*t^2)) + 
          4*mz^2*s^3*(1 - sw^2)*(-3*(-5 + d)*d^2*(2*Pi)^(5*d)*s^2 + 
            2^(1 + 5*d)*Pi^(5*d)*(s^2*(6*d^3*sw^2 - 12*d*(1 - sw^2 - 2*sw^4 + 
                  sw^2*(-2 - 5*sw^2 + 8*sw^4)) + d^2*(-(sw^2*(11 + 8*sw^2)) + 
                  sw^2*(-15 - 20*sw^2 + 32*sw^4)) + 2*(3 - 2*sw^2 - 8*sw^4 + 
                  sw^2*(-6 - 20*sw^2 + 32*sw^4))) + (-1 + d)*s*(
                -15*d*(-1 + 4*sw^2) + d^2*(-3 + 12*sw^2) + 8*(-3 + 8*sw^2 - 
                  4*sw^4 + 2*sw^2*(3 - 5*sw^2 + 8*sw^4)))*t + 
              2*(-1 + d)*(-3 + 8*sw^2)*(1 - 2*sw^2 + sw^2*(-2 + 8*sw^2))*t^
                2)) + 2*mz^6*s*(1 - sw^2)^3*(45*d^2*(2*Pi)^(5*d)*s^2 + 
            2^(1 + 5*d)*Pi^(5*d)*(s^2*(d^3*(-3 + 12*sw^2) + 
                14*(3 - 2*sw^2 - 8*sw^4 + sw^2*(-6 - 20*sw^2 + 32*sw^4)) + 
                d^2*(-(sw^2*(37 + 16*sw^2)) + sw^2*(-45 - 40*sw^2 + 
                    64*sw^4)) + d*(-54 + 64*sw^2 + 88*sw^4 - 4*sw^2*
                   (-27 - 55*sw^2 + 88*sw^4))) + (-7 + 2*d)*s*(
                -15*d*(-1 + 4*sw^2) + d^2*(-3 + 12*sw^2) + 8*(-3 + 8*sw^2 - 
                  4*sw^4 + 2*sw^2*(3 - 5*sw^2 + 8*sw^4)))*t + 
              2*(-7 + 2*d)*(-3 + 8*sw^2)*(1 - 2*sw^2 + sw^2*(-2 + 8*sw^2))*t^
                2)) + mz^4*s^2*(1 - sw^2)^2*(-129*d^2*(2*Pi)^(5*d)*s^2 + 
            2^(1 + 5*d)*Pi^(5*d)*(s^2*(-12*d^3*(-1 + 4*sw^2) + 
                d^2*(sw^2*(97 + 64*sw^2) + sw^2*(129 + 160*sw^2 - 
                    256*sw^4)) - 22*(3 - 2*sw^2 - 8*sw^4 + sw^2*(-6 - 
                    20*sw^2 + 32*sw^4)) + 6*d*(19 - 20*sw^2 - 36*sw^4 + 
                  2*sw^2*(-19 - 45*sw^2 + 72*sw^4))) - (-11 + 8*d)*s*(
                -15*d*(-1 + 4*sw^2) + d^2*(-3 + 12*sw^2) + 8*(-3 + 8*sw^2 - 
                  4*sw^4 + 2*sw^2*(3 - 5*sw^2 + 8*sw^4)))*t - 
              2*(-11 + 8*d)*(-3 + 8*sw^2)*(1 - 2*sw^2 + sw^2*(-2 + 8*sw^2))*t^
                2)))*GaugeXi[W]^2 - 2*mz^2*(1 - sw^2)*
         (s^3 - 3*mz^4*s*(1 - sw^2)^2 + 2*mz^6*(1 - sw^2)^3)*
         (-3*d^2*(2*Pi)^(5*d)*s^2 + 2^(1 + 5*d)*Pi^(5*d)*
           (s^2*(-6 + 4*sw^2 + 6*d^2*sw^2 + 16*sw^4 + sw^2*(12 + 40*sw^2 - 
                64*sw^4) + 2*d*(3 - 4*sw^2 - 4*sw^4 + 2*sw^2*(-3 - 5*sw^2 + 
                  8*sw^4))) + s*(-15*d*(-1 + 4*sw^2) + d^2*(-3 + 12*sw^2) + 
              8*(-3 + 8*sw^2 - 4*sw^4 + 2*sw^2*(3 - 5*sw^2 + 8*sw^4)))*t + 
            2*(-3 + 8*sw^2)*(1 - 2*sw^2 + sw^2*(-2 + 8*sw^2))*t^2))*
         GaugeXi[W]^3 + mz^4*(1 - sw^2)^2*(-s + mz^2*(1 - sw^2))^2*
         (-3*d^2*(2*Pi)^(5*d)*s^2 + 2^(1 + 5*d)*Pi^(5*d)*
           (s^2*(-6 + 4*sw^2 + 6*d^2*sw^2 + 16*sw^4 + sw^2*(12 + 40*sw^2 - 
                64*sw^4) + 2*d*(3 - 4*sw^2 - 4*sw^4 + 2*sw^2*(-3 - 5*sw^2 + 
                  8*sw^4))) + s*(-15*d*(-1 + 4*sw^2) + d^2*(-3 + 12*sw^2) + 
              8*(-3 + 8*sw^2 - 4*sw^4 + 2*sw^2*(3 - 5*sw^2 + 8*sw^4)))*t + 
            2*(-3 + 8*sw^2)*(1 - 2*sw^2 + sw^2*(-2 + 8*sw^2))*t^2))*
         GaugeXi[W]^4))/((-1 + d)*mz^4*s^2*(-mz^2 + s)^2*sw^2*(1 - sw^2)^2*
       (-1 + GaugeXi[W])^2) + (3*2^(1 + 4*d)*Pi^(4*d)*
       (((-s + mz^2*(1 - sw^2))*(-s + mz^2*(1 - sw^2) + mz^2*(1 - sw^2)*
            GaugeXi[W])*(-(s*(3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(
                s*(3 - 3*d + 2*sw^2 + 2*d*sw^2 - 8*sw^4) + (3 - 16*sw^2 + 
                  16*sw^4)*t))) + mz^2*(1 - sw^2)*(-3*d*(2*Pi)^d*s + 
             2^(1 + d)*Pi^d*(s*(3 + 2*(1 + d)*sw^2 - 8*sw^4) + (3 - 16*sw^2 + 
                 16*sw^4)*t)) + mz^2*(1 - sw^2)*(-3*d*(2*Pi)^d*s + 
             2^(1 + d)*Pi^d*(s*(3 + 2*(1 + d)*sw^2 - 8*sw^4) + (3 - 16*sw^2 + 
                 16*sw^4)*t))*GaugeXi[W]))/s + 
        ((-s + mz^2*(1 - sw^2) + mz^2*(1 - sw^2)*GaugeXi[W])*
          (2^(1 + d)*mz^2*Pi^d*s*(1 - sw^2)*(-3 + 4*sw^2)*
            (s*(2 - d + 4*sw^2) + (2 - 8*sw^2)*t) + 
           s^2*(-3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(3 + 2*(1 + d)*sw^2 - 
                 8*sw^4) + (3 - 16*sw^2 + 16*sw^4)*t)) + mz^4*(1 - sw^2)^2*
            (-3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(3 + 2*(1 + d)*sw^2 - 
                 8*sw^4) + (3 - 16*sw^2 + 16*sw^4)*t)) + mz^2*(1 - sw^2)*
            (-s + mz^2*(1 - sw^2))*(-3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
              (s*(3 + 2*(1 + d)*sw^2 - 8*sw^4) + (3 - 16*sw^2 + 16*sw^4)*t))*
            GaugeXi[W]))/s + (2^(1 + d)*Pi^d*(3 - 16*sw^2 + 16*sw^4)*
          (-s + mz^2*(1 - sw^2))*(d*(-s + mz^2*(1 - sw^2))^2 + 
           2*(-(d*mz^2*s*(1 - sw^2)) + (-2 + d)*mz^4*(1 - sw^2)^2)*
            GaugeXi[W] + d*mz^4*(1 - sw^2)^2*GaugeXi[W]^2))/(-1 + d) - 
        (2*(-s + mz^2*(1 - sw^2))*(-(s^2*(-3*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(3 + 
                2*(1 + d)*sw^2 - 8*sw^4))*t) - mz^4*(1 - sw^2)^2*
            (-3*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(3 + 2*(1 + d)*sw^2 - 8*sw^4))*
            t - 2*mz^2*(1 - sw^2)*(-3*d*(2*Pi)^d*s*(d*s - 11*t) + 
             2^(1 + d)*Pi^d*(2*s^2*(-3 - 2*sw^2 + d^2*sw^2 + 8*sw^4 - 
                 d*(-3 + sw^2 + 4*sw^4)) + s*(-22*d*sw^2 + 
                 d^2*(-3 + 4*sw^2) - 3*(9 - 18*sw^2 + 8*sw^4))*t - 2*
                (3 - 16*sw^2 + 16*sw^4)*t^2)) + 2*mz^2*(1 - sw^2)*
            (s*(-3*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(3 + 2*(1 + d)*sw^2 - 8*sw^4))*
              t + mz^2*(1 - sw^2)*(-3*d*(2*Pi)^d*(s + t) + 2^(1 + d)*Pi^d*
                (s*(3 + 2*(1 + d)*sw^2 - 8*sw^4) + 2*(3 + (-7 + d)*sw^2 + 
                   4*sw^4)*t)))*GaugeXi[W] - mz^4*(1 - sw^2)^2*
            (-3*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(3 + 2*(1 + d)*sw^2 - 8*sw^4))*t*
            GaugeXi[W]^2))/s - ((2*Pi)^d*(-3 + 4*sw^2)*(-s + mz^2*(1 - sw^2))*
          (s*(-4 + d + 4*sw^2) + 2*(-1 + 4*sw^2)*t)*
          ((-s + mz^2*(1 - sw^2))^2*(d*s + 2*t) + 
           2*(mz^4*(1 - sw^2)^2*((-2 + d)*s - 2*t) - mz^2*s*(1 - sw^2)*
              (d*s + 2*t))*GaugeXi[W] + mz^4*(1 - sw^2)^2*(d*s + 2*t)*
            GaugeXi[W]^2))/((-1 + d)*s^2)))/(mz^4*(-mz^2 + s)*sw^2*
       (1 - sw^2)^2) + (2^(3 + 4*d)*Pi^(4*d)*
       (-(((2*Pi)^d*(s*(6 - 4*sw^2 - 16*sw^4 + d*(-3 + 12*sw^2) + 
              4*sw^2*(-3 - 10*sw^2 + 16*sw^4)) - 2*(-3 + 8*sw^2)*
             (1 - 2*sw^2 + sw^2*(-2 + 8*sw^2))*t)*(-s + mz^2*(1 - sw^2) + 
             mz^2*(1 - sw^2)*GaugeXi[W])^2)/s) + 
        ((3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-3 + (2 - 3*d)*sw^2 + 8*sw^4 + 
               sw^2*(6 - 3*d + 20*sw^2 - 32*sw^4)) + (-3 + 8*sw^2)*
              (1 - 2*sw^2 + sw^2*(-2 + 8*sw^2))*t))*
          (-s + mz^2*(1 - sw^2) + mz^2*(1 - sw^2)*GaugeXi[W])^2)/s + 
        (2^(1 + d)*Pi^d*(-3 + 8*sw^2)*(1 - 2*sw^2 + sw^2*(-2 + 8*sw^2))*
          (d*(-s + mz^2*(1 - sw^2))^2 + 2*(-(d*mz^2*s*(1 - sw^2)) + 
             (-2 + d)*mz^4*(1 - sw^2)^2)*GaugeXi[W] + d*mz^4*(1 - sw^2)^2*
            GaugeXi[W]^2))/(-1 + d) - 
        (2*(s^2*(-3*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(3 + (-2 + 3*d)*sw^2 - 8*
                sw^4 + sw^2*(-6 + 3*d - 20*sw^2 + 32*sw^4)))*t + 
           mz^4*(1 - sw^2)^2*(-3*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(3 + (-2 + 3*d)*
                sw^2 - 8*sw^4 + sw^2*(-6 + 3*d - 20*sw^2 + 32*sw^4)))*t + 
           2*mz^2*(1 - sw^2)*(-3*d*(2*Pi)^d*s*(d*s - 11*t) + 
             2^(1 + d)*Pi^d*(s^2*(-6 + 4*sw^2 + 6*d^2*sw^2 + 16*sw^4 + 
                 sw^2*(12 + 40*sw^2 - 64*sw^4) + 2*d*(3 - 4*sw^2 - 4*sw^4 + 
                   2*sw^2*(-3 - 5*sw^2 + 8*sw^4))) + 3*s*(-9 + 22*sw^2 - 
                 22*d*sw^2 - 8*sw^4 + d^2*(-1 + 4*sw^2) + 2*sw^2*
                  (9 - 10*sw^2 + 16*sw^4))*t + 2*(-3 + 8*sw^2)*(1 - 2*sw^2 + 
                 sw^2*(-2 + 8*sw^2))*t^2)) - 
           2*(mz^2*s*(1 - sw^2)*(-3*d*(2*Pi)^d + 2^(1 + d)*Pi^d*
                (3 + (-2 + 3*d)*sw^2 - 8*sw^4 + sw^2*(-6 + 3*d - 20*sw^2 + 
                   32*sw^4)))*t + mz^4*(1 - sw^2)^2*(-3*d*(2*Pi)^d*(s + t) + 
               2^(1 + d)*Pi^d*(s*(3 + (-2 + 3*d)*sw^2 - 8*sw^4 + 
                   sw^2*(-6 + 3*d - 20*sw^2 + 32*sw^4)) + 
                 (6 + (-16 + 3*d)*sw^2 + 8*sw^4 + sw^2*(3*d - 4*(3 - 5*sw^2 + 
                       8*sw^4)))*t)))*GaugeXi[W] + mz^4*(1 - sw^2)^2*
            (-3*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(3 + (-2 + 3*d)*sw^2 - 8*sw^4 + 
               sw^2*(-6 + 3*d - 20*sw^2 + 32*sw^4)))*t*GaugeXi[W]^2))/s + 
        ((2*Pi)^d*(s*(12 - 32*sw^2 + 16*sw^4 + d*(-3 + 12*sw^2) - 
             8*sw^2*(3 - 5*sw^2 + 8*sw^4)) - 2*(-3 + 8*sw^2)*
            (1 - 2*sw^2 + sw^2*(-2 + 8*sw^2))*t)*((-s + mz^2*(1 - sw^2))^2*
            (d*s + 2*t) + 2*(mz^4*(1 - sw^2)^2*((-2 + d)*s - 2*t) - 
             mz^2*s*(1 - sw^2)*(d*s + 2*t))*GaugeXi[W] + mz^4*(1 - sw^2)^2*
            (d*s + 2*t)*GaugeXi[W]^2))/((-1 + d)*s^2)))/
      ((mz^2 - s)*(-mz^2 + s)*(1 - sw^2)) + 
     (16^(1 + d)*Pi^(4*d)*(s*(3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
           (s*(-3 - 10*sw^2 + 16*sw^4) + (-3 + 20*sw^2 - 32*sw^4)*t))*
         (-s + mz^2*(1 - sw^2) + mz^2*(1 - sw^2)*GaugeXi[W])^2 - 
        s*(-s + mz^2*(1 - sw^2) + mz^2*(1 - sw^2)*GaugeXi[W])*
         ((-s + mz^2*(1 - sw^2))*(-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
             (s*(3 + 3*d + 10*sw^2 - 16*sw^4) + (3 - 20*sw^2 + 32*sw^4)*t)) - 
          mz^2*(1 - sw^2)*(3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
             (s*(-3 - 10*sw^2 + 16*sw^4) + (-3 + 20*sw^2 - 32*sw^4)*t))*
           GaugeXi[W]) - ((2*Pi)^d*s^2*(-1 + 4*sw^2)*(-3 + 8*sw^2)*
          (d*(-s + mz^2*(1 - sw^2))^2 + 2*(-(d*mz^2*s*(1 - sw^2)) + 
             (-2 + d)*mz^4*(1 - sw^2)^2)*GaugeXi[W] + d*mz^4*(1 - sw^2)^2*
            GaugeXi[W]^2))/(-1 + d) - ((2*Pi)^d*s^2*(3 - 20*sw^2 + 32*sw^4)*
          (d*(-s + mz^2*(1 - sw^2))^2 + 2*(-(d*mz^2*s*(1 - sw^2)) + 
             (-2 + d)*mz^4*(1 - sw^2)^2)*GaugeXi[W] + d*mz^4*(1 - sw^2)^2*
            GaugeXi[W]^2))/(-1 + d) + 
        2*s*(s^2*(3*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(-3 - 10*sw^2 + 16*sw^4))*t + 
          mz^4*(1 - sw^2)^2*(3*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(-3 - 10*sw^2 + 
              16*sw^4))*t + 2^(1 + d)*mz^2*Pi^d*(1 - sw^2)*
           (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 
                8*sw^4)) + 3*s*(18 - 11*d + 2*d^2 - 20*sw^2 + 32*sw^4)*t + 
            4*(3 - 20*sw^2 + 32*sw^4)*t^2) - 2^(1 + d)*mz^2*Pi^d*(1 - sw^2)*
           (s*(-6 + 3*d - 20*sw^2 + 32*sw^4)*t + mz^2*(1 - sw^2)*
             (s*(-6 + 3*d - 20*sw^2 + 32*sw^4) + 3*d*t - 4*(3 - 5*sw^2 + 
                8*sw^4)*t))*GaugeXi[W] + mz^4*(1 - sw^2)^2*
           (3*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(-3 - 10*sw^2 + 16*sw^4))*t*
           GaugeXi[W]^2) + ((-3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (2*s*(3 - 5*sw^2 + 8*sw^4) + (3 - 20*sw^2 + 32*sw^4)*t))*
          ((-s + mz^2*(1 - sw^2))^2*(d*s + 2*t) + 
           2*(mz^4*(1 - sw^2)^2*((-2 + d)*s - 2*t) - mz^2*s*(1 - sw^2)*
              (d*s + 2*t))*GaugeXi[W] + mz^4*(1 - sw^2)^2*(d*s + 2*t)*
            GaugeXi[W]^2))/(-1 + d)))/(s^3*(-mz^2 + s)) + 
     ((2*Pi)^(4*d)*(-(2^(1 + d)*(1 - d)*Pi^d*s*(-s + mz^2*(1 - sw^2))^2*
          (s*(3*d*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
             2*(-9 + 30*sw^2 - 24*sw^4 + sw^2*(30 + 4*sw^2 - 80*sw^4) + 8*
                sw^4*(-3 - 10*sw^2 + 16*sw^4))) - 2*(9 - 30*sw^2 + 24*sw^4 + 
             8*sw^4*(3 - 20*sw^2 + 32*sw^4) - 2*sw^2*(15 - 76*sw^2 + 80*
                sw^4))*t)*(-s + mz^2*(1 - sw^2) + mz^2*(1 - sw^2)*GaugeXi[W])^
           2*(s - mz^2*GaugeXi[Z])) - 2^(2 + d)*Pi^d*s^2*
         (-s + mz^2*(1 - sw^2))^2*(9 - 30*sw^2 + 24*sw^4 + 
          8*sw^4*(3 - 20*sw^2 + 32*sw^4) - 2*sw^2*(15 - 76*sw^2 + 80*sw^4))*
         (d*(-s + mz^2*(1 - sw^2))^2 + 2*(-(d*mz^2*s*(1 - sw^2)) + 
            (-2 + d)*mz^4*(1 - sw^2)^2)*GaugeXi[W] + d*mz^4*(1 - sw^2)^2*
           GaugeXi[W]^2)*(s - mz^2*GaugeXi[Z]) - 2*(1 - d)*s*
         (s^4*(9*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(4*sw^4*(-6 + 3*d - 20*sw^2 + 
                32*sw^4) + 3*(-3 - 5*(-2 + d)*sw^2 + 4*(-2 + d)*sw^4) + 
              sw^2*(30 + 4*sw^2 - 80*sw^4 + 3*d*(-5 + 8*sw^2))))*t + 
          mz^8*(1 - sw^2)^4*(9*d*(2*Pi)^d + 2^(1 + d)*Pi^d*
             (4*sw^4*(-6 + 3*d - 20*sw^2 + 32*sw^4) + 3*(-3 - 5*(-2 + d)*
                 sw^2 + 4*(-2 + d)*sw^4) + sw^2*(30 + 4*sw^2 - 80*sw^4 + 
                3*d*(-5 + 8*sw^2))))*t + 2*mz^2*s^2*(1 - sw^2)*
           (9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
             (s^2*(3*d^2*(4*sw^4 + sw^2*(-5 + 4*sw^2) + sw^2*(-5 + 8*sw^2)) + 
                2*d*(-9 + 30*sw^2 - 24*sw^4 + sw^2*(30 - 22*sw^2 - 40*sw^4) + 
                  8*sw^4*(-3 - 5*sw^2 + 8*sw^4)) + 2*(9 - 30*sw^2 + 24*sw^4 + 
                  sw^4*(24 + 80*sw^2 - 128*sw^4) + sw^2*(-30 - 4*sw^2 + 
                    80*sw^4))) + s*(30*(3 - 10*sw^2 + 8*sw^4) + 
                16*sw^4*(15 - 10*sw^2 + 16*sw^4) - 4*sw^2*(75 - 146*sw^2 + 
                  40*sw^4) - 18*d*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*
                   (-5 + 8*sw^2)) + 3*d^2*(3 - 10*sw^2 + 16*sw^4 + 
                  2*sw^2*(-5 + 8*sw^2)))*t + 2*(9 - 30*sw^2 + 24*sw^4 + 
                8*sw^4*(3 - 20*sw^2 + 32*sw^4) - 2*sw^2*(15 - 76*sw^2 + 
                  80*sw^4))*t^2)) + 2*mz^6*(1 - sw^2)^3*(9*d^2*(2*Pi)^d*s^2 + 
            2^(1 + d)*Pi^d*(s^2*(3*d^2*(4*sw^4 + sw^2*(-5 + 4*sw^2) + 
                  sw^2*(-5 + 8*sw^2)) + 2*d*(-9 + 30*sw^2 - 24*sw^4 + 
                  sw^2*(30 - 22*sw^2 - 40*sw^4) + 8*sw^4*(-3 - 5*sw^2 + 
                    8*sw^4)) + 2*(9 - 30*sw^2 + 24*sw^4 + sw^4*(24 + 
                    80*sw^2 - 128*sw^4) + sw^2*(-30 - 4*sw^2 + 80*sw^4))) + 
              s*(30*(3 - 10*sw^2 + 8*sw^4) + 16*sw^4*(15 - 10*sw^2 + 
                  16*sw^4) - 4*sw^2*(75 - 146*sw^2 + 40*sw^4) - 
                18*d*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
                3*d^2*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)))*t + 
              2*(9 - 30*sw^2 + 24*sw^4 + 8*sw^4*(3 - 20*sw^2 + 32*sw^4) - 
                2*sw^2*(15 - 76*sw^2 + 80*sw^4))*t^2)) - 
          2*mz^4*s*(1 - sw^2)^2*(-207*d*(2*Pi)^d*s*t + 2^(1 + d)*Pi^d*
             (s^2*(3*d^2*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
                4*d*(-9 + 30*sw^2 - 24*sw^4 + sw^2*(30 - 22*sw^2 - 40*sw^4) + 
                  8*sw^4*(-3 - 5*sw^2 + 8*sw^4)) - 4*(-9 + 30*sw^2 - 
                  24*sw^4 + sw^2*(30 + 4*sw^2 - 80*sw^4) + 8*sw^4*
                   (-3 - 10*sw^2 + 16*sw^4))) + s*(57*(3 - 10*sw^2 + 
                  8*sw^4) + 8*sw^4*(57 - 50*sw^2 + 80*sw^4) - 2*sw^2*
                 (285 - 586*sw^2 + 200*sw^4) - 69*d*(4*sw^4 + 
                  sw^2*(-5 + 4*sw^2) + sw^2*(-5 + 8*sw^2)) + 
                6*d^2*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)))*t + 
              4*(9 - 30*sw^2 + 24*sw^4 + 8*sw^4*(3 - 20*sw^2 + 32*sw^4) - 
                2*sw^2*(15 - 76*sw^2 + 80*sw^4))*t^2)) - 
          2*(mz^2*s^3*(1 - sw^2)*(9*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(
                4*sw^4*(-6 + 3*d - 20*sw^2 + 32*sw^4) + 3*(-3 - 5*(-2 + d)*
                   sw^2 + 4*(-2 + d)*sw^4) + sw^2*(30 + 4*sw^2 - 80*sw^4 + 
                  3*d*(-5 + 8*sw^2))))*t - mz^6*s*(1 - sw^2)^3*
             (9*d*(2*Pi)^d*t + 2^(1 + d)*Pi^d*(s*(3*d*(3 - 10*sw^2 + 
                    16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 2*(-9 + 30*sw^2 - 
                    24*sw^4 + sw^2*(30 + 4*sw^2 - 80*sw^4) + 8*sw^4*
                     (-3 - 10*sw^2 + 16*sw^4))) + 3*(-9 - 5*(-6 + d)*sw^2 + 
                  4*(-6 + d)*sw^4 + 4*sw^4*(-6 + d + 20*sw^2 - 32*sw^4) + 
                  sw^2*(30 - 5*d - 100*sw^2 + 8*d*sw^2 + 80*sw^4))*t)) + 
            mz^4*s^2*(1 - sw^2)^2*(9*d*(2*Pi)^d*(s - t) + 2^(1 + d)*Pi^d*(
                s*(4*sw^4*(-6 + 3*d - 20*sw^2 + 32*sw^4) + 
                  3*(-3 - 5*(-2 + d)*sw^2 + 4*(-2 + d)*sw^4) + 
                  sw^2*(30 + 4*sw^2 - 80*sw^4 + 3*d*(-5 + 8*sw^2))) - 
                3*(d*(4*sw^4 + sw^2*(-5 + 4*sw^2) + sw^2*(-5 + 8*sw^2)) + 
                  4*sw^4*(13 - 20*sw^2 + 4*sw^2*(-5 + 8*sw^2)))*t)) + 
            mz^8*(1 - sw^2)^4*(9*d*(2*Pi)^d*(s + t) + 2^(1 + d)*Pi^d*(
                s*(4*sw^4*(-6 + 3*d - 20*sw^2 + 32*sw^4) + 
                  3*(-3 - 5*(-2 + d)*sw^2 + 4*(-2 + d)*sw^4) + 
                  sw^2*(30 + 4*sw^2 - 80*sw^4 + 3*d*(-5 + 8*sw^2))) + 
                (3*(-6 - 5*(-4 + d)*sw^2 + 4*(-4 + d)*sw^4) + 
                  sw^2*(60 - 148*sw^2 + 80*sw^4 + 3*d*(-5 + 8*sw^2)) + 
                  4*sw^4*(3*d - 4*(3 - 5*sw^2 + 8*sw^4)))*t)))*GaugeXi[W] + 
          mz^4*(1 - sw^2)^2*(-(2^(1 + d)*mz^2*Pi^d*s*(1 - sw^2)*
              (3*d*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 2*
                (-9 + 30*sw^2 - 24*sw^4 + sw^2*(30 + 4*sw^2 - 80*sw^4) + 
                 8*sw^4*(-3 - 10*sw^2 + 16*sw^4)))) + 
            s^2*(9*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(4*sw^4*(-6 + 3*d - 20*sw^2 + 
                  32*sw^4) + 3*(-3 - 5*(-2 + d)*sw^2 + 4*(-2 + d)*sw^4) + 
                sw^2*(30 + 4*sw^2 - 80*sw^4 + 3*d*(-5 + 8*sw^2)))) + 
            mz^4*(1 - sw^2)^2*(9*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(4*sw^4*
                 (-6 + 3*d - 20*sw^2 + 32*sw^4) + 3*(-3 - 5*(-2 + d)*sw^2 + 
                  4*(-2 + d)*sw^4) + sw^2*(30 + 4*sw^2 - 80*sw^4 + 
                  3*d*(-5 + 8*sw^2)))))*t*GaugeXi[W]^2)*
         (s - mz^2*GaugeXi[Z]) - 2^(1 + d)*Pi^d*(-s + mz^2*(1 - sw^2))^2*
         (s*(3*d*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) - 
            4*(9 - 30*sw^2 + 24*sw^4 + sw^2*(-30 + 74*sw^2 - 40*sw^4) + 
              8*sw^4*(3 - 5*sw^2 + 8*sw^4))) - 2*(9 - 30*sw^2 + 24*sw^4 + 
            8*sw^4*(3 - 20*sw^2 + 32*sw^4) - 2*sw^2*(15 - 76*sw^2 + 80*sw^4))*
           t)*((-s + mz^2*(1 - sw^2))^2*(d*s + 2*t) + 
          2*(mz^4*(1 - sw^2)^2*((-2 + d)*s - 2*t) - mz^2*s*(1 - sw^2)*
             (d*s + 2*t))*GaugeXi[W] + mz^4*(1 - sw^2)^2*(d*s + 2*t)*
           GaugeXi[W]^2)*(s - mz^2*GaugeXi[Z]) - 
        (1 - d)*s*(-s + mz^2*(1 - sw^2) + mz^2*(1 - sw^2)*GaugeXi[W])^2*
         (s*(s^2*(9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(4*sw^4*(-6 + 3*d - 
                    20*sw^2 + 32*sw^4) + 3*(-3 - 5*(-2 + d)*sw^2 + 4*(-2 + d)*
                     sw^4) + sw^2*(30 + 4*sw^2 - 80*sw^4 + 3*d*(-5 + 
                      8*sw^2))) + (-9 + 30*sw^2 - 24*sw^4 - 8*sw^4*
                   (3 - 20*sw^2 + 32*sw^4) + 2*sw^2*(15 - 76*sw^2 + 80*sw^4))*
                 t)) - 2*mz^2*s*(1 - sw^2)*(9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(
                s*(4*sw^4*(-6 + 3*d - 20*sw^2 + 32*sw^4) + 
                  3*(-3 - 5*(-2 + d)*sw^2 + 4*(-2 + d)*sw^4) + 
                  sw^2*(30 + 4*sw^2 - 80*sw^4 + 3*d*(-5 + 8*sw^2))) + 
                (-9 + 30*sw^2 - 24*sw^4 - 8*sw^4*(3 - 20*sw^2 + 32*sw^4) + 
                  2*sw^2*(15 - 76*sw^2 + 80*sw^4))*t)) + mz^4*(1 - sw^2)^2*
             (-63*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-9 + 30*sw^2 - 24*sw^4 + 
                  sw^2*(30 + 4*sw^2 - 80*sw^4) + 8*sw^4*(-3 - 10*sw^2 + 
                    16*sw^4) + 3*d*(12 - 5*sw^2 + 8*sw^4 + sw^2*(-5 + 
                      8*sw^2))) + (-9 + 30*sw^2 - 24*sw^4 - 8*sw^4*
                   (3 - 20*sw^2 + 32*sw^4) + 2*sw^2*(15 - 76*sw^2 + 80*sw^4))*
                 t))) - mz^2*(-s + mz^2*(1 - sw^2))^2*(9*d*(2*Pi)^d*s + 
            2^(1 + d)*Pi^d*(s*(4*sw^4*(-6 + 3*d - 20*sw^2 + 32*sw^4) + 
                3*(-3 - 5*(-2 + d)*sw^2 + 4*(-2 + d)*sw^4) + 
                sw^2*(30 + 4*sw^2 - 80*sw^4 + 3*d*(-5 + 8*sw^2))) + 
              (-9 + 30*sw^2 - 24*sw^4 - 8*sw^4*(3 - 20*sw^2 + 32*sw^4) + 
                2*sw^2*(15 - 76*sw^2 + 80*sw^4))*t))*GaugeXi[Z]) + 
        2*(1 - d)*s*(2^(1 + d)*mz^8*Pi^d*s*(1 - sw^2)^4*(9 - 30*sw^2 + 
            24*sw^4 + 8*sw^4*(3 - 20*sw^2 + 32*sw^4) - 
            2*sw^2*(15 - 76*sw^2 + 80*sw^4))*(s - mz^2*GaugeXi[Z]) - 
          2^(1 + d)*mz^4*Pi^d*s^2*(1 - sw^2)^2*(-s + 2*mz^2*(1 - sw^2))*
           (9 - 30*sw^2 + 24*sw^4 + 8*sw^4*(3 - 20*sw^2 + 32*sw^4) - 
            2*sw^2*(15 - 76*sw^2 + 80*sw^4))*(s - mz^2*GaugeXi[Z]) - 
          mz^4*(2*Pi)^d*s^2*(1 - sw^2)^2*(3*d*(3 - 10*sw^2 + 16*sw^4 + 
              2*sw^2*(-5 + 8*sw^2)) + 2*(-9 + 30*sw^2 - 24*sw^4 + 
              sw^2*(30 + 4*sw^2 - 80*sw^4) + 8*sw^4*(-3 - 10*sw^2 + 
                16*sw^4)))*t*(s - mz^2*GaugeXi[Z]) + (2*Pi)^d*s^3*
           (-s + 2*mz^2*(1 - sw^2))*(3*d*(3 - 10*sw^2 + 16*sw^4 + 
              2*sw^2*(-5 + 8*sw^2)) + 2*(-9 + 30*sw^2 - 24*sw^4 + 
              sw^2*(30 + 4*sw^2 - 80*sw^4) + 8*sw^4*(-3 - 10*sw^2 + 
                16*sw^4)))*t*(s - mz^2*GaugeXi[Z]) - mz^8*(2*Pi)^d*
           (1 - sw^2)^4*(3*d*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) - 
            4*(9 - 30*sw^2 + 24*sw^4 + sw^2*(-30 + 74*sw^2 - 40*sw^4) + 
              8*sw^4*(3 - 5*sw^2 + 8*sw^4)))*(s + t)*(s - mz^2*GaugeXi[Z]) + 
          mz^8*(2*Pi)^d*(1 - sw^2)^4*(3*d*s*(3 - 10*sw^2 + 16*sw^4 + 
              2*sw^2*(-5 + 8*sw^2)) - 6*s*(9 - 30*sw^2 + 24*sw^4 - 
              10*sw^2*(3 - 10*sw^2 + 8*sw^4) + 8*sw^4*(3 - 10*sw^2 + 
                16*sw^4)) - 2*(9 - 30*sw^2 + 24*sw^4 + 8*sw^4*(3 - 20*sw^2 + 
                32*sw^4) - 2*sw^2*(15 - 76*sw^2 + 80*sw^4))*t)*
           (s - mz^2*GaugeXi[Z]) - mz^4*(2*Pi)^d*s*(1 - sw^2)^2*
           (-s + 2*mz^2*(1 - sw^2))*(3*d*s*(3 - 10*sw^2 + 16*sw^4 + 
              2*sw^2*(-5 + 8*sw^2)) - 6*s*(9 - 30*sw^2 + 24*sw^4 - 
              10*sw^2*(3 - 10*sw^2 + 8*sw^4) + 8*sw^4*(3 - 10*sw^2 + 
                16*sw^4)) - 2*(9 - 30*sw^2 + 24*sw^4 + 8*sw^4*(3 - 20*sw^2 + 
                32*sw^4) - 2*sw^2*(15 - 76*sw^2 + 80*sw^4))*t)*
           (s - mz^2*GaugeXi[Z]) + mz^6*(2*Pi)^d*(1 - sw^2)^3*t*
           (3*d*s*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) - 
            6*s*(9 - 30*sw^2 + 24*sw^4 - 10*sw^2*(3 - 10*sw^2 + 8*sw^4) + 
              8*sw^4*(3 - 10*sw^2 + 16*sw^4)) - 2*(9 - 30*sw^2 + 24*sw^4 + 
              8*sw^4*(3 - 20*sw^2 + 32*sw^4) - 2*sw^2*(15 - 76*sw^2 + 
                80*sw^4))*t)*(s - mz^2*GaugeXi[Z]) - mz^6*(2*Pi)^d*s*
           (1 - sw^2)^3*(s*(3*d*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*
                 (-5 + 8*sw^2)) + 2*(-9 + 30*sw^2 - 24*sw^4 + 
                sw^2*(30 + 4*sw^2 - 80*sw^4) + 8*sw^4*(-3 - 10*sw^2 + 
                  16*sw^4))) - 2*(9 - 30*sw^2 + 24*sw^4 + 8*sw^4*(3 - 
                20*sw^2 + 32*sw^4) - 2*sw^2*(15 - 76*sw^2 + 80*sw^4))*t)*
           (s - mz^2*GaugeXi[Z]) + mz^2*(2*Pi)^d*s^2*(1 - sw^2)*
           (-s + 2*mz^2*(1 - sw^2))*(s*(3*d*(3 - 10*sw^2 + 16*sw^4 + 
                2*sw^2*(-5 + 8*sw^2)) + 2*(-9 + 30*sw^2 - 24*sw^4 + 
                sw^2*(30 + 4*sw^2 - 80*sw^4) + 8*sw^4*(-3 - 10*sw^2 + 
                  16*sw^4))) - 2*(9 - 30*sw^2 + 24*sw^4 + 8*sw^4*(3 - 
                20*sw^2 + 32*sw^4) - 2*sw^2*(15 - 76*sw^2 + 80*sw^4))*t)*
           (s - mz^2*GaugeXi[Z]) - mz^6*(2*Pi)^d*(1 - sw^2)^3*t*
           (3*s*(d*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) - 
              2*(9 - 30*sw^2 + 24*sw^4 - 10*sw^2*(3 - 10*sw^2 + 8*sw^4) + 
                8*sw^4*(3 - 10*sw^2 + 16*sw^4))) - 2*(9 - 30*sw^2 + 24*sw^4 + 
              8*sw^4*(3 - 20*sw^2 + 32*sw^4) - 2*sw^2*(15 - 76*sw^2 + 
                80*sw^4))*t)*(s - mz^2*GaugeXi[Z]) - 2^(1 + d)*mz^2*Pi^d*s^2*
           (1 - sw^2)*(s^2*(3*d^2*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*
                 (-5 + 8*sw^2)) + 4*d*(-9 + 30*sw^2 - 24*sw^4 + 
                sw^2*(30 - 22*sw^2 - 40*sw^4) + 8*sw^4*(-3 - 5*sw^2 + 
                  8*sw^4)) - 4*(-9 + 30*sw^2 - 24*sw^4 + sw^2*(30 + 4*sw^2 - 
                  80*sw^4) + 8*sw^4*(-3 - 10*sw^2 + 16*sw^4))) + 
            2*s*(-15*d*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
              3*d^2*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
              8*(9 - 30*sw^2 + 24*sw^4 + sw^2*(-30 + 74*sw^2 - 40*sw^4) + 
                8*sw^4*(3 - 5*sw^2 + 8*sw^4)))*t + 4*(9 - 30*sw^2 + 24*sw^4 + 
              8*sw^4*(3 - 20*sw^2 + 32*sw^4) - 2*sw^2*(15 - 76*sw^2 + 
                80*sw^4))*t^2)*(s - mz^2*GaugeXi[Z]) + 2^(1 + d)*mz^2*Pi^d*
           (1 - sw^2)*(s^3*(s*(3*d*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*
                   (-5 + 8*sw^2)) + 2*(-9 + 30*sw^2 - 24*sw^4 + 
                  sw^2*(30 + 4*sw^2 - 80*sw^4) + 8*sw^4*(-3 - 10*sw^2 + 
                    16*sw^4))) + 6*(-3 + d)*(3 - 10*sw^2 + 16*sw^4 + 
                2*sw^2*(-5 + 8*sw^2))*t) + 2*mz^2*s*(1 - sw^2)*
             (s^2*(3*d^2*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) - 
                6*(-9 + 30*sw^2 - 24*sw^4 + sw^2*(30 + 4*sw^2 - 80*sw^4) + 
                  8*sw^4*(-3 - 10*sw^2 + 16*sw^4)) + d*(-15*(3 - 10*sw^2 + 
                    8*sw^4) + 8*sw^4*(-15 - 20*sw^2 + 32*sw^4) - 
                  2*sw^2*(-75 + 68*sw^2 + 80*sw^4))) + 
              2*s*(sw^2*(-330 + 736*sw^2 - 320*sw^4) + 33*(3 - 10*sw^2 + 
                  8*sw^4) + 8*sw^4*(33 - 40*sw^2 + 64*sw^4) - 
                18*d*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
                3*d^2*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)))*t + 
              4*(9 - 30*sw^2 + 24*sw^4 + 8*sw^4*(3 - 20*sw^2 + 32*sw^4) - 
                2*sw^2*(15 - 76*sw^2 + 80*sw^4))*t^2))*
           (s - mz^2*GaugeXi[Z]) - mz^4*(2*Pi)^d*(1 - sw^2)^2*
           (s^2*(3*d*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) - 
              4*(9 - 30*sw^2 + 24*sw^4 + sw^2*(-30 + 74*sw^2 - 40*sw^4) + 
                8*sw^4*(3 - 5*sw^2 + 8*sw^4)))*(s + t) + 2*mz^2*(1 - sw^2)*
             (s^2*(sw^4*(240 + 320*sw^2 - 512*sw^4) + 30*(3 - 10*sw^2 + 
                  8*sw^4) + 4*sw^2*(-75 + 68*sw^2 + 80*sw^4) + 
                3*d^2*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
                2*d*(sw^2*(90 - 92*sw^2 - 80*sw^4) - 9*(3 - 10*sw^2 + 
                    8*sw^4) + 8*sw^4*(-9 - 10*sw^2 + 16*sw^4))) + 
              s*(-39*d*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
                6*d^2*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
                2*(sw^2*(-390 + 884*sw^2 - 400*sw^4) + 39*(3 - 10*sw^2 + 
                    8*sw^4) + 8*sw^4*(39 - 50*sw^2 + 80*sw^4)))*t + 
              4*(9 - 30*sw^2 + 24*sw^4 + 8*sw^4*(3 - 20*sw^2 + 32*sw^4) - 
                2*sw^2*(15 - 76*sw^2 + 80*sw^4))*t^2))*
           (s - mz^2*GaugeXi[Z]) - mz^2*s^2*(1 - sw^2)*
           ((2*Pi)^d*s*(s*(3*d*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 
                    8*sw^2)) + 2*(-9 + 30*sw^2 - 24*sw^4 + sw^2*(30 + 
                    4*sw^2 - 80*sw^4) + 8*sw^4*(-3 - 10*sw^2 + 16*sw^4))) + 
              6*(-3 + d)*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2))*t) - 
            2*mz^2*(1 - sw^2)*(9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(
                s*(4*sw^4*(-6 + 3*d - 20*sw^2 + 32*sw^4) + 
                  3*(-3 - 5*(-2 + d)*sw^2 + 4*(-2 + d)*sw^4) + 
                  sw^2*(30 + 4*sw^2 - 80*sw^4 + 3*d*(-5 + 8*sw^2))) + 
                3*(-3 + d)*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2))*
                 t)))*(s - mz^2*GaugeXi[Z]) + 2^(1 + d)*mz^6*Pi^d*s*
           (1 - sw^2)^3*(3*d*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
            2*(-9 + 30*sw^2 - 24*sw^4 + sw^2*(30 + 4*sw^2 - 80*sw^4) + 
              8*sw^4*(-3 - 10*sw^2 + 16*sw^4)))*t*GaugeXi[W]*
           (s - mz^2*GaugeXi[Z]) - 2^(1 + d)*mz^2*Pi^d*s^2*(1 - sw^2)*
           (-s + 2*mz^2*(1 - sw^2))*(3*d*(3 - 10*sw^2 + 16*sw^4 + 
              2*sw^2*(-5 + 8*sw^2)) + 2*(-9 + 30*sw^2 - 24*sw^4 + 
              sw^2*(30 + 4*sw^2 - 80*sw^4) + 8*sw^4*(-3 - 10*sw^2 + 
                16*sw^4)))*t*GaugeXi[W]*(s - mz^2*GaugeXi[Z]) + 
          mz^8*(2*Pi)^d*(1 - sw^2)^4*(s*(3*d*(3 - 10*sw^2 + 16*sw^4 + 
                2*sw^2*(-5 + 8*sw^2)) + 2*(-9 + 30*sw^2 - 24*sw^4 + 
                sw^2*(30 + 4*sw^2 - 80*sw^4) + 8*sw^4*(-3 - 10*sw^2 + 
                  16*sw^4))) - 2*(9 - 30*sw^2 + 24*sw^4 + 8*sw^4*(3 - 
                20*sw^2 + 32*sw^4) - 2*sw^2*(15 - 76*sw^2 + 80*sw^4))*t)*
           GaugeXi[W]*(s - mz^2*GaugeXi[Z]) - mz^4*(2*Pi)^d*s*(1 - sw^2)^2*
           (-s + 2*mz^2*(1 - sw^2))*(s*(3*d*(3 - 10*sw^2 + 16*sw^4 + 
                2*sw^2*(-5 + 8*sw^2)) + 2*(-9 + 30*sw^2 - 24*sw^4 + 
                sw^2*(30 + 4*sw^2 - 80*sw^4) + 8*sw^4*(-3 - 10*sw^2 + 
                  16*sw^4))) - 2*(9 - 30*sw^2 + 24*sw^4 + 8*sw^4*(3 - 
                20*sw^2 + 32*sw^4) - 2*sw^2*(15 - 76*sw^2 + 80*sw^4))*t)*
           GaugeXi[W]*(s - mz^2*GaugeXi[Z]) + mz^4*s*(1 - sw^2)^2*
           ((2*Pi)^d*s*(s*(3*d*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 
                    8*sw^2)) + 2*(-9 + 30*sw^2 - 24*sw^4 + sw^2*(30 + 
                    4*sw^2 - 80*sw^4) + 8*sw^4*(-3 - 10*sw^2 + 16*sw^4))) + 
              6*(-3 + d)*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2))*t) - 
            2*mz^2*(1 - sw^2)*(9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(
                s*(4*sw^4*(-6 + 3*d - 20*sw^2 + 32*sw^4) + 
                  3*(-3 - 5*(-2 + d)*sw^2 + 4*(-2 + d)*sw^4) + 
                  sw^2*(30 + 4*sw^2 - 80*sw^4 + 3*d*(-5 + 8*sw^2))) + 
                3*(-3 + d)*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2))*
                 t)))*GaugeXi[W]*(s - mz^2*GaugeXi[Z]) - 
          mz^8*(2*Pi)^d*(1 - sw^2)^4*(3*d*(3 - 10*sw^2 + 16*sw^4 + 
              2*sw^2*(-5 + 8*sw^2)) + 2*(-9 + 30*sw^2 - 24*sw^4 + 
              sw^2*(30 + 4*sw^2 - 80*sw^4) + 8*sw^4*(-3 - 10*sw^2 + 
                16*sw^4)))*t*GaugeXi[W]^2*(s - mz^2*GaugeXi[Z]) + 
          mz^4*(2*Pi)^d*s*(1 - sw^2)^2*(-s + 2*mz^2*(1 - sw^2))*
           (3*d*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
            2*(-9 + 30*sw^2 - 24*sw^4 + sw^2*(30 + 4*sw^2 - 80*sw^4) + 
              8*sw^4*(-3 - 10*sw^2 + 16*sw^4)))*t*GaugeXi[W]^2*
           (s - mz^2*GaugeXi[Z]) - mz^6*s*(1 - sw^2)^3*
           (s*(-63*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-9 + 30*sw^2 - 24*sw^4 + 
                  sw^2*(30 + 4*sw^2 - 80*sw^4) + 8*sw^4*(-3 - 10*sw^2 + 
                    16*sw^4) + 3*d*(12 - 5*sw^2 + 8*sw^4 + sw^2*(-5 + 
                      8*sw^2))) + 3*(-3 + d)*(3 - 10*sw^2 + 16*sw^4 + 
                  2*sw^2*(-5 + 8*sw^2))*t)) - mz^2*(9*d*(2*Pi)^d*s + 
              2^(1 + d)*Pi^d*(s*(4*sw^4*(-6 + 3*d - 20*sw^2 + 32*sw^4) + 
                  3*(-3 - 5*(-2 + d)*sw^2 + 4*(-2 + d)*sw^4) + 
                  sw^2*(30 + 4*sw^2 - 80*sw^4 + 3*d*(-5 + 8*sw^2))) + 
                3*(-3 + d)*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2))*t))*
             GaugeXi[Z]) + mz^8*(1 - sw^2)^4*GaugeXi[W]*
           (s*(-63*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-9 + 30*sw^2 - 24*sw^4 + 
                  sw^2*(30 + 4*sw^2 - 80*sw^4) + 8*sw^4*(-3 - 10*sw^2 + 
                    16*sw^4) + 3*d*(12 - 5*sw^2 + 8*sw^4 + sw^2*(-5 + 
                      8*sw^2))) + 3*(-3 + d)*(3 - 10*sw^2 + 16*sw^4 + 
                  2*sw^2*(-5 + 8*sw^2))*t)) - mz^2*(9*d*(2*Pi)^d*s + 
              2^(1 + d)*Pi^d*(s*(4*sw^4*(-6 + 3*d - 20*sw^2 + 32*sw^4) + 
                  3*(-3 - 5*(-2 + d)*sw^2 + 4*(-2 + d)*sw^4) + 
                  sw^2*(30 + 4*sw^2 - 80*sw^4 + 3*d*(-5 + 8*sw^2))) + 
                3*(-3 + d)*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2))*t))*
             GaugeXi[Z])) - (1 - d)*s*(-s + mz^2*(1 - sw^2) + 
          mz^2*(1 - sw^2)*GaugeXi[W])*
         ((s^3*(-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-4*sw^4*(-6 + 3*d - 
                    20*sw^2 + 32*sw^4) + 3*(3 + 5*(-2 + d)*sw^2 - 4*(-2 + d)*
                     sw^4) + sw^2*(-30 - 4*sw^2 + 80*sw^4 - 3*d*(-5 + 
                      8*sw^2))) + (9 - 30*sw^2 + 24*sw^4 + 8*sw^4*
                   (3 - 20*sw^2 + 32*sw^4) - 2*sw^2*(15 - 76*sw^2 + 80*sw^4))*
                 t)) + mz^6*(1 - sw^2)^3*(9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(
                s*(4*sw^4*(-6 + 3*d - 20*sw^2 + 32*sw^4) + 
                  3*(-3 - 5*(-2 + d)*sw^2 + 4*(-2 + d)*sw^4) + 
                  sw^2*(30 + 4*sw^2 - 80*sw^4 + 3*d*(-5 + 8*sw^2))) + 
                (-9 + 30*sw^2 - 24*sw^4 - 8*sw^4*(3 - 20*sw^2 + 32*sw^4) + 
                  2*sw^2*(15 - 76*sw^2 + 80*sw^4))*t)) - 
            3*mz^4*s*(1 - sw^2)^2*(51*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(
                s*(-9 + 30*sw^2 - 24*sw^4 + sw^2*(30 + 4*sw^2 - 80*sw^4) + 
                  8*sw^4*(-3 - 10*sw^2 + 16*sw^4) + 3*d*(-7 - 5*sw^2 + 
                    8*sw^4 + sw^2*(-5 + 8*sw^2))) + (-9 + 30*sw^2 - 24*sw^4 - 
                  8*sw^4*(3 - 20*sw^2 + 32*sw^4) + 2*sw^2*(15 - 76*sw^2 + 
                    80*sw^4))*t)) + 3*mz^2*s^2*(1 - sw^2)*(-45*d*(2*Pi)^d*s + 
              2^(1 + d)*Pi^d*(s*(-9 + 30*sw^2 - 24*sw^4 + sw^2*(30 + 4*sw^2 - 
                    80*sw^4) + 8*sw^4*(-3 - 10*sw^2 + 16*sw^4) + 
                  3*d*(9 - 5*sw^2 + 8*sw^4 + sw^2*(-5 + 8*sw^2))) + 
                (-9 + 30*sw^2 - 24*sw^4 - 8*sw^4*(3 - 20*sw^2 + 32*sw^4) + 
                  2*sw^2*(15 - 76*sw^2 + 80*sw^4))*t)))*
           (s - mz^2*GaugeXi[Z]) + mz^2*(1 - sw^2)*GaugeXi[W]*
           (s*(s^2*(9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(4*sw^4*(-6 + 3*d - 
                      20*sw^2 + 32*sw^4) + 3*(-3 - 5*(-2 + d)*sw^2 + 
                      4*(-2 + d)*sw^4) + sw^2*(30 + 4*sw^2 - 80*sw^4 + 
                      3*d*(-5 + 8*sw^2))) + (-9 + 30*sw^2 - 24*sw^4 - 
                    8*sw^4*(3 - 20*sw^2 + 32*sw^4) + 2*sw^2*(15 - 76*sw^2 + 
                      80*sw^4))*t)) - 2*mz^2*s*(1 - sw^2)*(9*d*(2*Pi)^d*s + 
                2^(1 + d)*Pi^d*(s*(4*sw^4*(-6 + 3*d - 20*sw^2 + 32*sw^4) + 
                    3*(-3 - 5*(-2 + d)*sw^2 + 4*(-2 + d)*sw^4) + 
                    sw^2*(30 + 4*sw^2 - 80*sw^4 + 3*d*(-5 + 8*sw^2))) + 
                  (-9 + 30*sw^2 - 24*sw^4 - 8*sw^4*(3 - 20*sw^2 + 32*sw^4) + 
                    2*sw^2*(15 - 76*sw^2 + 80*sw^4))*t)) + mz^4*(1 - sw^2)^2*(
                63*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-9 + 30*sw^2 - 24*sw^4 + 
                    sw^2*(30 + 4*sw^2 - 80*sw^4) + 8*sw^4*(-3 - 10*sw^2 + 
                      16*sw^4) + 3*d*(-9 - 5*sw^2 + 8*sw^4 + sw^2*(-5 + 
                        8*sw^2))) + (-9 + 30*sw^2 - 24*sw^4 - 8*sw^4*
                     (3 - 20*sw^2 + 32*sw^4) + 2*sw^2*(15 - 76*sw^2 + 
                      80*sw^4))*t))) - mz^2*(-s + mz^2*(1 - sw^2))*
             (s*(-9*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*(s*(-4*sw^4*(-6 + 3*d - 
                      20*sw^2 + 32*sw^4) + 3*(3 + 5*(-2 + d)*sw^2 - 
                      4*(-2 + d)*sw^4) + sw^2*(-30 - 4*sw^2 + 80*sw^4 - 
                      3*d*(-5 + 8*sw^2))) + (9 - 30*sw^2 + 24*sw^4 + 
                    8*sw^4*(3 - 20*sw^2 + 32*sw^4) - 2*sw^2*(15 - 76*sw^2 + 
                      80*sw^4))*t)) + mz^2*(1 - sw^2)*(-9*d*(2*Pi)^d*s + 
                2^(1 + d)*Pi^d*(s*(-9 + 30*sw^2 - 24*sw^4 + sw^2*(30 + 
                      4*sw^2 - 80*sw^4) + 8*sw^4*(-3 - 10*sw^2 + 16*sw^4) + 
                    3*d*(3 - 5*sw^2 + 8*sw^4 + sw^2*(-5 + 8*sw^2))) + 
                  (-9 + 30*sw^2 - 24*sw^4 - 8*sw^4*(3 - 20*sw^2 + 32*sw^4) + 
                    2*sw^2*(15 - 76*sw^2 + 80*sw^4))*t)))*GaugeXi[Z]))))/
      ((-1 + d)*mz^4*(mz^2 - s)^3*s*sw^4*(1 - sw^2)^2*
       (s - mz^2*GaugeXi[Z]))))/(Pi^(6*d)*sw^2*(1 - sw^2)), 
  ((-I/3)*EL^6*(((2*Pi)^d*s*(3 - 10*sw^2 + 8*sw^4)*((-2 + d)^2*s^2 + 
        2*(8 - 5*d + d^2)*s*t + 4*t^2)*(s + mz^2*(1 - sw^2) - 
        mz^2*(1 - sw^2)*GaugeXi[W]))/(mz^2 - s) - 
     ((2*Pi)^d*s*(-3 + 4*sw^2)*(-s + mz^2*(1 - sw^2))*
       (-((-2 + d)*s^2*(-2 + 4*sw^2 + d*(1 - 4*sw^2) + sw^2*(4 + 8*sw^2))) + 
        2*s*(-8 + 16*sw^2 - 16*sw^2*(-1 + sw^2) - 5*d*(-1 + 4*sw^2) + 
          d^2*(-1 + 4*sw^2))*t + 4*(-1 + 2*sw^2 + sw^2*(2 - 8*sw^2))*t^2)*
       (s + mz^2*(1 - sw^2) - mz^2*(1 - sw^2)*GaugeXi[W]))/(-mz^2 + s)^2 - 
     (2*sw^2*(-3*d^2*(2*Pi)^d*s^4 + 2^(1 + d)*Pi^d*s^2*
         (2*s^2*(-3 - 2*sw^2 + d^2*sw^2 + 8*sw^4 - d*(-3 + sw^2 + 4*sw^4)) + 
          s*(8 - 5*d + d^2 - 8*sw^2)*(-3 + 4*sw^2)*t - 
          2*(3 - 16*sw^2 + 16*sw^4)*t^2) + mz^4*(1 - sw^2)^2*
         (-3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
           (s^2*(6 + 4*sw^2 - 16*sw^4 + d^2*(3 - 2*sw^2) + 2*d*(-3 + sw^2 + 
                4*sw^4)) - s*(8 - 5*d + d^2 - 8*sw^2)*(-3 + 4*sw^2)*t + 
            2*(3 - 16*sw^2 + 16*sw^4)*t^2)) + mz^2*(1 - sw^2)*
         (-s + mz^2*(1 - sw^2))*(-3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
           (2*s^2*(-3 - 2*sw^2 + d^2*sw^2 + 8*sw^4 - d*(-3 + sw^2 + 
                4*sw^4)) + s*(8 - 5*d + d^2 - 8*sw^2)*(-3 + 4*sw^2)*t - 
            2*(3 - 16*sw^2 + 16*sw^4)*t^2))*GaugeXi[W]))/(-mz^2 + s)))/
   (2^(2*(4 + d))*(-1 + d)*mz^4*Pi^(2*d)*s^2*sw^6*(1 - sw^2)^3), 
  ((I/3)*EL^6*(-((2*Pi)^d*(mz^2 - s)*s*(3 - 10*sw^2 + 8*sw^4)*
       ((-2 + d)^2*s^2 + 2*(8 - 5*d + d^2)*s*t + 4*t^2)*
       (s^2 + 2*(-3 + 2*d)*mz^2*s*(1 - sw^2) + mz^4*(1 - sw^2)^2 - 
        2*mz^2*(1 - sw^2)*(s + mz^2*(1 - sw^2))*GaugeXi[W] + 
        mz^4*(1 - sw^2)^2*GaugeXi[W]^2)) + (2*Pi)^d*s*(3 - 4*sw^2)*
      (-s + mz^2*(1 - sw^2))*((-2 + d)*s^2*(-2 + 4*sw^2 + d*(1 - 4*sw^2) + 
         sw^2*(4 + 8*sw^2)) - 2*s*(-8 + 16*sw^2 - 16*sw^2*(-1 + sw^2) - 
         5*d*(-1 + 4*sw^2) + d^2*(-1 + 4*sw^2))*t - 
       4*(-1 + 2*sw^2 + sw^2*(2 - 8*sw^2))*t^2)*
      (s^2 + 2*(-3 + 2*d)*mz^2*s*(1 - sw^2) + mz^4*(1 - sw^2)^2 - 
       2*mz^2*(1 - sw^2)*(s + mz^2*(1 - sw^2))*GaugeXi[W] + 
       mz^4*(1 - sw^2)^2*GaugeXi[W]^2) + 2*(mz^2 - s)*sw^2*
      ((-1 + d)*(2*Pi)^d*s*(-3 + 4*sw^2)*(-s + mz^2*(1 - sw^2))*
        (s*(-2 + d - 4*sw^2) + 2*(-1 + 4*sw^2)*t)*
        (-s + mz^2*(1 - sw^2) + mz^2*(1 - sw^2)*GaugeXi[W])^2 - 
       (1 - d)*s*(-s + mz^2*(1 - sw^2) + mz^2*(1 - sw^2)*GaugeXi[W])*
        (2^(1 + d)*mz^2*Pi^d*s*(1 - sw^2)*(-3 + 4*sw^2)*(s*(2 - d + 4*sw^2) + 
           (2 - 8*sw^2)*t) + s^2*(-3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (s*(3 + 2*(1 + d)*sw^2 - 8*sw^4) + (3 - 16*sw^2 + 16*sw^4)*t)) + 
         mz^4*(1 - sw^2)^2*(-3*d*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
            (s*(3 + 2*(1 + d)*sw^2 - 8*sw^4) + (3 - 16*sw^2 + 16*sw^4)*t)) + 
         mz^2*(1 - sw^2)*(-s + mz^2*(1 - sw^2))*(-3*d*(2*Pi)^d*s + 
           2^(1 + d)*Pi^d*(s*(3 + 2*(1 + d)*sw^2 - 8*sw^4) + 
             (3 - 16*sw^2 + 16*sw^4)*t))*GaugeXi[W]) + 
       2^(1 + d)*Pi^d*s^2*(3 - 16*sw^2 + 16*sw^4)*(-s + mz^2*(1 - sw^2))*
        (d*(-s + mz^2*(1 - sw^2))^2 + 2*(-(d*mz^2*s*(1 - sw^2)) + 
           (-2 + d)*mz^4*(1 - sw^2)^2)*GaugeXi[W] + d*mz^4*(1 - sw^2)^2*
          GaugeXi[W]^2) - 2*(1 - d)*s*
        (-(s^3*(-3*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(3 + 2*(1 + d)*sw^2 - 8*sw^4))*
           t) + mz^6*(1 - sw^2)^3*(-3*d*(2*Pi)^d + 2^(1 + d)*Pi^d*
            (3 + 2*(1 + d)*sw^2 - 8*sw^4))*t - mz^2*s*(1 - sw^2)*
          (3*d*(2*Pi)^d*s*t + 2^(1 + d)*Pi^d*(s^2*(-3 + 4*sw^2)*
              (4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2)) + s*(-57 + 106*sw^2 - 40*
                sw^4 + d*(33 - 46*sw^2) + d^2*(-6 + 8*sw^2))*t - 
             4*(3 - 16*sw^2 + 16*sw^4)*t^2)) - mz^4*(1 - sw^2)^2*
          (57*d*(2*Pi)^d*s*t + 2^(1 + d)*Pi^d*(-(s^2*(-3 + 4*sw^2)*(4 + d^2 + 
                8*sw^2 - 4*d*(1 + sw^2))) + s*(57 - 106*sw^2 + 40*sw^4 + d^2*
                (6 - 8*sw^2) + d*(-63 + 46*sw^2))*t + 
             4*(3 - 16*sw^2 + 16*sw^4)*t^2)) - 2*mz^2*(1 - sw^2)*
          (-s + mz^2*(1 - sw^2))*(s*(-3*d*(2*Pi)^d + 2^(1 + d)*Pi^d*
              (3 + 2*(1 + d)*sw^2 - 8*sw^4))*t + mz^2*(1 - sw^2)*
            (-3*d*(2*Pi)^d*(s + t) + 2^(1 + d)*Pi^d*(s*(3 + 2*(1 + d)*sw^2 - 
                 8*sw^4) + 2*(3 + (-7 + d)*sw^2 + 4*sw^4)*t)))*GaugeXi[W] + 
         mz^4*(1 - sw^2)^2*(-s + mz^2*(1 - sw^2))*(-3*d*(2*Pi)^d + 
           2^(1 + d)*Pi^d*(3 + 2*(1 + d)*sw^2 - 8*sw^4))*t*GaugeXi[W]^2) + 
       (2*Pi)^d*(3 - 4*sw^2)*(-s + mz^2*(1 - sw^2))*(s*(-4 + d + 4*sw^2) + 
         2*(-1 + 4*sw^2)*t)*((-s + mz^2*(1 - sw^2))^2*(d*s + 2*t) + 
         2*(mz^4*(1 - sw^2)^2*((-2 + d)*s - 2*t) - mz^2*s*(1 - sw^2)*
            (d*s + 2*t))*GaugeXi[W] + mz^4*(1 - sw^2)^2*(d*s + 2*t)*
          GaugeXi[W]^2))))/(2^(2*(4 + d))*(-1 + d)*mz^4*Pi^(2*d)*(mz^2 - s)*
    s^2*(-mz^2 + s)*sw^6*(1 - sw^2)^3), 
  ((-I/81)*2^(-8 - 3*d)*EL^6*
    ((9*(2*Pi)^(2*d)*(2*mz^4 - (-8 + d)*mz^2*s + 2*s^2)*
       (s^2*(3*d^2*(3 - 10*sw^2 + 8*sw^4 + 32*sw^8 + 8*sw^6*(-9 + 16*sw^2) + 
            sw^2*(-22 + 68*sw^2 - 48*sw^4) + 12*sw^4*(5 - 14*sw^2 + 
              8*sw^4)) + 4*(9 - 30*sw^2 + 24*sw^4 + 
            sw^8*(96 + 320*sw^2 - 512*sw^4) + 12*sw^4*(15 - 34*sw^2 + 
              8*sw^4) + 24*sw^6*(-9 + 2*sw^2 + 24*sw^4) - 
            2*sw^2*(33 - 94*sw^2 + 56*sw^4)) + 4*d*(-9 + 30*sw^2 - 24*sw^4 - 
            72*sw^6*(-3 + 3*sw^2 + 4*sw^4) + 32*sw^8*(-3 - 5*sw^2 + 8*sw^4) - 
            12*sw^4*(15 - 38*sw^2 + 16*sw^4) + 2*sw^2*(33 - 98*sw^2 + 
              64*sw^4))) + 2*s*(-15*d*(3 - 10*sw^2 + 8*sw^4 + 32*sw^8 + 
            8*sw^6*(-9 + 16*sw^2) + sw^2*(-22 + 68*sw^2 - 48*sw^4) + 
            12*sw^4*(5 - 14*sw^2 + 8*sw^4)) + 3*d^2*(3 - 10*sw^2 + 8*sw^4 + 
            32*sw^8 + 8*sw^6*(-9 + 16*sw^2) + sw^2*(-22 + 68*sw^2 - 
              48*sw^4) + 12*sw^4*(5 - 14*sw^2 + 8*sw^4)) + 
          8*(9 - 30*sw^2 + 24*sw^4 + 32*sw^8*(3 - 5*sw^2 + 8*sw^4) - 
            24*sw^6*(9 - 23*sw^2 + 12*sw^4) + 12*sw^4*(15 - 46*sw^2 + 
              32*sw^4) - 2*sw^2*(33 - 106*sw^2 + 80*sw^4)))*t + 
        4*(9 - 30*sw^2 + 24*sw^4 + sw^2*(-66 + 236*sw^2 - 208*sw^4) + 
          32*sw^8*(3 - 20*sw^2 + 32*sw^4) - 24*sw^6*(9 - 44*sw^2 + 48*sw^4) + 
          12*sw^4*(15 - 58*sw^2 + 56*sw^4))*t^2))/
      ((mz^2 - s)*s*(-mz^2 + s)) + 
     ((2*Pi)^(2*d)*(2*mz^4 - (-8 + d)*mz^2*s + 2*s^2)*
       (s^2*(3*d^2*(128*sw^8 - 18*sw^2*(3 - 4*sw^2)^2 + 
            32*sw^6*(-11 + 16*sw^2) + 9*(3 - 10*sw^2 + 8*sw^4) + 
            24*sw^4*(15 - 32*sw^2 + 16*sw^4)) + 
          4*d*(-72*sw^4*(15 - 23*sw^2 + 4*sw^4) + 162*sw^2*(3 - 7*sw^2 + 
              4*sw^4) - 27*(3 - 10*sw^2 + 8*sw^4) + 128*sw^8*
             (-3 - 5*sw^2 + 8*sw^4) - 32*sw^6*(-33 + 17*sw^2 + 44*sw^4)) - 
          4*(54*sw^2*(9 - 18*sw^2 + 8*sw^4) - 27*(3 - 10*sw^2 + 8*sw^4) + 
            72*sw^4*(-15 + 14*sw^2 + 8*sw^4) + 128*sw^8*(-3 - 10*sw^2 + 
              16*sw^4) - 32*sw^6*(-33 - 14*sw^2 + 88*sw^4))) + 
        2*s*(-15*d*(128*sw^8 - 18*sw^2*(3 - 4*sw^2)^2 + 
            32*sw^6*(-11 + 16*sw^2) + 9*(3 - 10*sw^2 + 8*sw^4) + 
            24*sw^4*(15 - 32*sw^2 + 16*sw^4)) + 
          3*d^2*(128*sw^8 - 18*sw^2*(3 - 4*sw^2)^2 + 
            32*sw^6*(-11 + 16*sw^2) + 9*(3 - 10*sw^2 + 8*sw^4) + 
            24*sw^4*(15 - 32*sw^2 + 16*sw^4)) + 
          8*(27*(3 - 10*sw^2 + 8*sw^4) + 128*sw^8*(3 - 5*sw^2 + 8*sw^4) - 
            54*sw^2*(9 - 27*sw^2 + 20*sw^4) + 72*sw^4*(15 - 41*sw^2 + 
              28*sw^4) - 32*sw^6*(33 - 79*sw^2 + 44*sw^4)))*t + 
        4*(27*(3 - 10*sw^2 + 8*sw^4) - 54*sw^2*(9 - 36*sw^2 + 32*sw^4) + 
          128*sw^8*(3 - 20*sw^2 + 32*sw^4) + 72*sw^4*(15 - 68*sw^2 + 
            64*sw^4) - 32*sw^6*(33 - 172*sw^2 + 176*sw^4))*t^2))/
      ((mz^2 - s)*s*(-mz^2 + s)) + (72*sw^2*(1 - sw^2)*
       (2^(1 + 2*d)*(-2 + d)*mz^4*Pi^(2*d)*(-3 + 8*sw^2)*
         (-1 + 2*sw^2 + sw^2*(4 - 8*sw^2) + 4*sw^4*(-1 + 4*sw^2)) + 
        (2^(1 + 2*d)*Pi^(2*d)*(t + (mz^2*(s + 2*t))/s)*
          ((-2 + d)*mz^2*(s*(3*d*(1 - 2*sw^2 + 4*sw^4 + sw^2*(-4 + 8*sw^2)) - 
               4*(3 - 8*sw^2 + 4*sw^4 - 4*sw^2*(3 - 8*sw^2 + 4*sw^4) + 
                 4*sw^4*(3 - 5*sw^2 + 8*sw^4))) - 2*(-3 + 8*sw^2)*
              (-1 + 2*sw^2 + sw^2*(4 - 8*sw^2) + 4*sw^4*(-1 + 4*sw^2))*t) + 
           2*s*(s*(-6 + 4*sw^2 + 16*sw^4 - 8*sw^2*(-3 + 2*sw^2 + 8*sw^4) + 8*
                sw^4*(-3 - 10*sw^2 + 16*sw^4) + 3*d*(1 - 2*sw^2 + 4*sw^4 + 
                 sw^2*(-4 + 8*sw^2))) - (-4 + d)*(-3 + 8*sw^2)*
              (-1 + 2*sw^2 + sw^2*(4 - 8*sw^2) + 4*sw^4*(-1 + 4*sw^2))*t)))/
         s + mz^2*(-3*d^3*(2*Pi)^(2*d)*s + 2^(1 + 2*d)*Pi^(2*d)*
           (s*(3*d^3*(sw^2 - 2*sw^4 + sw^2*(2 - 4*sw^2)) + d^2*(18 - 
                32*sw^2 - 8*sw^4 + 8*sw^2*(-9 + 16*sw^2 + 4*sw^4) - 
                8*sw^4*(-9 - 5*sw^2 + 8*sw^4)) + 20*d*(-3 + 4*sw^2 + 4*sw^4 - 
                4*sw^2*(-3 + 4*sw^2 + 4*sw^4) + 4*sw^4*(-3 - 5*sw^2 + 
                  8*sw^4)) - 20*(-3 + 2*sw^2 + 8*sw^4 - 4*sw^2*(-3 + 2*sw^2 + 
                  8*sw^4) + 4*sw^4*(-3 - 10*sw^2 + 16*sw^4))) + 
            (36*d^2*(1 - 2*sw^2 + 4*sw^4 + sw^2*(-4 + 8*sw^2)) - 
              3*d^3*(1 - 2*sw^2 + 4*sw^4 + sw^2*(-4 + 8*sw^2)) + 
              8*(21 - 44*sw^2 + 4*sw^4 - 4*sw^2*(21 - 44*sw^2 + 4*sw^4) + 
                4*sw^4*(21 - 5*sw^2 + 8*sw^4)) - 2*d*(69 - 142*sw^2 + 
                8*sw^4 - 4*sw^2*(69 - 142*sw^2 + 8*sw^4) + 4*sw^4*
                 (69 - 10*sw^2 + 16*sw^4)))*t)) + 
        2*(3*d*(2*Pi)^(2*d)*(d*s^2 + t^2) + 2^(1 + 2*d)*Pi^(2*d)*
           (s^2*(3*d^2*(-sw^2 + 2*sw^4 + sw^2*(-2 + 4*sw^2)) + 
              d*(-6 + 8*sw^2 + 8*sw^4 - 8*sw^2*(-3 + 4*sw^2 + 4*sw^4) + 
                8*sw^4*(-3 - 5*sw^2 + 8*sw^4)) + 2*(3 - 2*sw^2 - 8*sw^4 + 
                sw^4*(12 + 40*sw^2 - 64*sw^4) + 4*sw^2*(-3 + 2*sw^2 + 
                  8*sw^4))) + s*(-18*d*(1 - 2*sw^2 + 4*sw^4 + 
                sw^2*(-4 + 8*sw^2)) + 3*d^2*(1 - 2*sw^2 + 4*sw^4 + 
                sw^2*(-4 + 8*sw^2)) + 2*(15 - 34*sw^2 + 8*sw^4 - 
                4*sw^2*(15 - 34*sw^2 + 8*sw^4) + sw^4*(60 - 40*sw^2 + 
                  64*sw^4)))*t + (-3 - 7*(-2 + d)*sw^2 + 8*(-2 + d)*sw^4 - 
              2*(-2 + d)*sw^2*(3 - 14*sw^2 + 16*sw^4) + 2*(-2 + d)*sw^4*(3 - 
                20*sw^2 + 32*sw^4))*t^2)) + (2^(1 + 2*d)*Pi^(2*d)*
          (-3 + 8*sw^2)*(-1 + 2*sw^2 + sw^2*(4 - 8*sw^2) + 
           4*sw^4*(-1 + 4*sw^2))*((-2 + d)*s^2*t^2 + 
           mz^4*((-2 + d)*s^2 + 4*(-1 + d)*s*t + 4*(-1 + d)*t^2) + 
           2*mz^2*s*t*(-2*t + d*(s + 2*t))))/s^2))/(mz^2 - s) + 
     (2^(3 + d)*Pi^d*sw^2*(1 - sw^2)*(2^(1 + d)*(-2 + d)*mz^4*Pi^d*
         (-1 + 4*sw^2)*(sw^2*(72 - 96*sw^2) + 9*(-3 + 4*sw^2) + 
          16*sw^4*(-3 + 8*sw^2)) + mz^2*(-27*d^3*(2*Pi)^d*s + 
          2^(1 + d)*Pi^d*(-2*s*(3*d^3*(-3*sw^2 + 4*sw^4 + sw^2*
                 (-6 + 8*sw^2)) + d^2*(9*(-9 + 9*sw^2 + 4*sw^4) - 
                24*sw^2*(-9 + 9*sw^2 + 4*sw^4) + 16*sw^4*(-9 - 5*sw^2 + 
                  8*sw^4)) - 10*d*(9*(-3 + sw^2 + 4*sw^4) - 24*sw^2*
                 (-3 + sw^2 + 4*sw^4) + 16*sw^4*(-3 - 5*sw^2 + 8*sw^4)) + 
              10*(9*(-3 - 2*sw^2 + 8*sw^4) - 24*sw^2*(-3 - 2*sw^2 + 8*sw^4) + 
                16*sw^4*(-3 - 10*sw^2 + 16*sw^4))) + 
            (36*d^2*(9 - 12*sw^2 + 16*sw^4 + 8*sw^2*(-3 + 4*sw^2)) - 
              3*d^3*(9 - 12*sw^2 + 16*sw^4 + 8*sw^2*(-3 + 4*sw^2)) + 
              8*(9*(21 - 31*sw^2 + 4*sw^4) - 24*sw^2*(21 - 31*sw^2 + 
                  4*sw^4) + 16*sw^4*(21 - 5*sw^2 + 8*sw^4)) - 
              2*d*(9*(69 - 98*sw^2 + 8*sw^4) - 24*sw^2*(69 - 98*sw^2 + 
                  8*sw^4) + 16*sw^4*(69 - 10*sw^2 + 16*sw^4)))*t)) + 
        2*(27*d*(2*Pi)^d*(d*s^2 + t^2) + 2^(1 + d)*Pi^d*
           (2*s^2*(sw^4*(48 + 160*sw^2 - 256*sw^4) + 9*(3 + 2*sw^2 - 
                8*sw^4) + 24*sw^2*(-3 - 2*sw^2 + 8*sw^4) + 3*d^2*(-3*sw^2 + 
                4*sw^4 + sw^2*(-6 + 8*sw^2)) + d*(9*(-3 + sw^2 + 4*sw^4) - 
                24*sw^2*(-3 + sw^2 + 4*sw^4) + 16*sw^4*(-3 - 5*sw^2 + 
                  8*sw^4))) + s*(18*(15 - 26*sw^2 + 8*sw^4) - 
              48*sw^2*(15 - 26*sw^2 + 8*sw^4) + 32*sw^4*(15 - 10*sw^2 + 
                16*sw^4) - 18*d*(9 - 12*sw^2 + 16*sw^4 + 8*sw^2*
                 (-3 + 4*sw^2)) + 3*d^2*(9 - 12*sw^2 + 16*sw^4 + 
                8*sw^2*(-3 + 4*sw^2)))*t + (-12*(-2 + d)*sw^2*(3 - 16*sw^2 + 
                16*sw^4) + 8*(-2 + d)*sw^4*(3 - 20*sw^2 + 32*sw^4) + 
              9*(-3 - 8*(-2 + d)*sw^2 + 8*(-2 + d)*sw^4))*t^2)) + 
        (2*(27*d*(2*Pi)^d + 2^(1 + d)*Pi^d*(-12*(-2 + d)*sw^2*
              (3 - 16*sw^2 + 16*sw^4) + 8*(-2 + d)*sw^4*(3 - 20*sw^2 + 32*
                sw^4) + 9*(-3 - 8*(-2 + d)*sw^2 + 8*(-2 + d)*sw^4)))*
          ((-2 + d)*s^2*t^2 + mz^4*((-2 + d)*s^2 + 4*(-1 + d)*s*t + 
             4*(-1 + d)*t^2) + 2*mz^2*s*t*(-2*t + d*(s + 2*t))))/
         ((-2 + d)*s^2) + (2*(t + (mz^2*(s + 2*t))/s)*
          (mz^2*(27*d^2*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
              (s*(36*(3 - 7*sw^2 + 4*sw^4) - 96*sw^2*(3 - 7*sw^2 + 4*sw^4) + 
                 64*sw^4*(3 - 5*sw^2 + 8*sw^4) + 6*d^2*(-3*sw^2 + 4*sw^4 + 
                   sw^2*(-6 + 8*sw^2)) + d*(-9*(9 - 18*sw^2 + 8*sw^4) + 
                   24*sw^2*(9 - 18*sw^2 + 8*sw^4) - 16*sw^4*(9 - 10*sw^2 + 
                     16*sw^4))) - (-2 + d)*(-1 + 4*sw^2)*
                (sw^2*(72 - 96*sw^2) + 9*(-3 + 4*sw^2) + 16*sw^4*
                  (-3 + 8*sw^2))*t)) + 2*s*(27*d*(2*Pi)^d*(s - t) + 
             2^(1 + d)*Pi^d*(s*(12*sw^2*(-2 + d - 4*sw^2)*(-3 + 4*sw^2) - 
                 9*(3 + 2*(1 + d)*sw^2 - 8*sw^4) + 8*sw^4*(-6 + 3*d - 
                   20*sw^2 + 32*sw^4)) - 2*(-6*(-4 + d)*sw^2*(3 - 16*sw^2 + 
                   16*sw^4) + 4*(-4 + d)*sw^4*(3 - 20*sw^2 + 32*sw^4) + 
                 9*(-3 - 4*(-4 + d)*sw^2 + 4*(-4 + d)*sw^4))*t))))/s))/
      (mz^2 - s)))/(Pi^(3*d)*sw^6*(1 - sw^2)^3), 
  ((-I/9)*2^(-7 - 2*d)*EL^6*(((2*Pi)^d*(-3 + 2*sw^2)*(-3 + 4*sw^2)*
       (2*s^2 - (-8 + d)*mz^2*s*(1 - sw^2) + 2*mz^4*(1 - sw^2)^2)*
       (-((-2 + d)*s^2*(-2 + 4*sw^2 + d*(1 - 4*sw^2) + sw^2*(4 + 8*sw^2))) + 
        2*s*(-8 + 16*sw^2 - 16*sw^2*(-1 + sw^2) - 5*d*(-1 + 4*sw^2) + 
          d^2*(-1 + 4*sw^2))*t + 4*(-1 + 2*sw^2 + sw^2*(2 - 8*sw^2))*t^2))/
      ((mz^2 - s)*s*(-mz^2 + s)*(1 - sw^2)) - 
     ((2*Pi)^d*(-1 + 2*sw^2)*(2*s^2 - (-8 + d)*mz^2*s*(1 - sw^2) + 
        2*mz^4*(1 - sw^2)^2)*((-2 + d)*s^2*(18 - 24*sw^2 - 
          8*sw^2*(3 + 4*sw^2) + 3*d*(-3 + 8*sw^2)) + 
        2*s*(-72 + 96*sw^2 + sw^2*(96 - 64*sw^2) - 15*d*(-3 + 8*sw^2) + 
          3*d^2*(-3 + 8*sw^2))*t + 4*(-9 + 12*sw^2 - 4*sw^2*(-3 + 8*sw^2))*
         t^2))/((mz^2 - s)*s*(-mz^2 + s)*(1 - sw^2)) + 
     (4*sw^2*(-(2^(1 + d)*(-2 + d)*mz^4*Pi^d*(1 - sw^2)^2*
          (3 - 16*sw^2 + 16*sw^4)) + 2^(1 + d)*Pi^d*(-3 + 4*sw^2)*
         (s^2*(4 + d^2 + 8*sw^2 - 4*d*(1 + sw^2)) + 
          2*s*(10 - 6*d + d^2 - 4*sw^2)*t - (-2 + d)*(-1 + 4*sw^2)*t^2) - 
        mz^2*(1 - sw^2)*(-3*d^3*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
           (2*s*(30 + 20*sw^2 + d^3*sw^2 - 80*sw^4 + d^2*(9 - 9*sw^2 - 
                4*sw^4) + 10*d*(-3 + sw^2 + 4*sw^4)) + (-3 + 4*sw^2)*
             (-12*d^2 + d^3 + d*(46 - 4*sw^2) + 8*(-7 + sw^2))*t)) + 
        (2*(2^(1 + d)*Pi^d - d*(2*Pi)^d)*(-3 + 4*sw^2)*(-1 + 4*sw^2)*
          ((-2 + d)*s^2*t^2 + mz^4*(1 - sw^2)^2*((-2 + d)*s^2 + 
             4*(-1 + d)*s*t + 4*(-1 + d)*t^2) + 2*mz^2*s*(1 - sw^2)*t*
            (-2*t + d*(s + 2*t))))/((-2 + d)*s^2) + 
        (2*(t + (mz^2*(1 - sw^2)*(s + 2*t))/s)*
          (2^(1 + d)*Pi^d*s*(-3 + 4*sw^2)*(s*(-2 + d - 4*sw^2) + 
             (-4 + d)*(-1 + 4*sw^2)*t) + mz^2*(1 - sw^2)*(-3*d^2*(2*Pi)^d*s + 
             2^(1 + d)*Pi^d*(s*(2*d^2*sw^2 - 4*(3 - 7*sw^2 + 4*sw^4) + 
                 d*(9 - 18*sw^2 + 8*sw^4)) + (-2 + d)*(3 - 16*sw^2 + 16*sw^4)*
                t))))/s))/(mz^2 - s)))/(Pi^(2*d)*sw^6*(1 - sw^2)), 
  ((I/9)*2^(-8 - d)*EL^6*(mz^2*(1 - sw^2) - (mh^2 + 2*s - d*s)*(1 - sw^2))*
    (s^2*(3*d^2*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
       4*d*(-9 + 30*sw^2 - 24*sw^4 + sw^2*(30 - 22*sw^2 - 40*sw^4) + 
         8*sw^4*(-3 - 5*sw^2 + 8*sw^4)) - 4*(-9 + 30*sw^2 - 24*sw^4 + 
         sw^2*(30 + 4*sw^2 - 80*sw^4) + 8*sw^4*(-3 - 10*sw^2 + 16*sw^4))) + 
     2*s*(-15*d*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
       3*d^2*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
       8*(9 - 30*sw^2 + 24*sw^4 + sw^2*(-30 + 74*sw^2 - 40*sw^4) + 
         8*sw^4*(3 - 5*sw^2 + 8*sw^4)))*t + 
     4*(9 - 30*sw^2 + 24*sw^4 + 8*sw^4*(3 - 20*sw^2 + 32*sw^4) - 
       2*sw^2*(15 - 76*sw^2 + 80*sw^4))*t^2))/((-1 + d)*Pi^d*(mz^2 - s)^2*s*
    (-mz^2 + s)*sw^6*(1 - sw^2)^4), 
  ((-I/9)*2^(-7 - 2*d)*EL^6*
    ((2^(6 + d)*(-2 + d)*Pi^d*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
          4*d*(-3 - 5*sw^2 + 8*sw^4)) + 2*s*(-15*d + 3*d^2 + 
          8*(3 - 5*sw^2 + 8*sw^4))*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2))/s^2 + 
     ((-2 + d)*(2*Pi)^d*(1 - 4*sw^2 + 8*sw^4)*
       (s^2*(3*d^2*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
          4*d*(-9 + 30*sw^2 - 24*sw^4 + sw^2*(30 - 22*sw^2 - 40*sw^4) + 
            8*sw^4*(-3 - 5*sw^2 + 8*sw^4)) - 4*(-9 + 30*sw^2 - 24*sw^4 + 
            sw^2*(30 + 4*sw^2 - 80*sw^4) + 8*sw^4*(-3 - 10*sw^2 + 
              16*sw^4))) + 2*s*(-15*d*(3 - 10*sw^2 + 16*sw^4 + 
            2*sw^2*(-5 + 8*sw^2)) + 3*d^2*(3 - 10*sw^2 + 16*sw^4 + 
            2*sw^2*(-5 + 8*sw^2)) + 8*(9 - 30*sw^2 + 24*sw^4 + 
            sw^2*(-30 + 74*sw^2 - 40*sw^4) + 8*sw^4*(3 - 5*sw^2 + 8*sw^4)))*
         t + 4*(9 - 30*sw^2 + 24*sw^4 + 8*sw^4*(3 - 20*sw^2 + 32*sw^4) - 
          2*sw^2*(15 - 76*sw^2 + 80*sw^4))*t^2))/((mz^2 - s)^2*sw^4*
       (1 - sw^2)^2) - (4*(-9*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(3*d^3*(3 - 2*sw^2 + 8*sw^4 + 8*sw^2*(-1 + sw^2)) + 
            d^2*(-1 + 4*sw^2)*(-3*(-9 + 6*sw^2 + 8*sw^4) + 4*sw^2*(-9 - 
                10*sw^2 + 16*sw^4)) + 4*(-1 + 4*sw^2)*(9 + 6*sw^2 - 24*sw^4 + 
              4*sw^2*(-3 - 10*sw^2 + 16*sw^4)) - 2*d*(-1 + 4*sw^2)*
             (27 - 48*sw^4 + 4*sw^2*(-9 - 20*sw^2 + 32*sw^4))) + 
          (-2 + d)*s*(-1 + 4*sw^2)*(-15*d*(-3 + 8*sw^2) + 
            3*d^2*(-3 + 8*sw^2) - 24*(3 - 7*sw^2 + 4*sw^4) + 
            32*sw^2*(3 - 5*sw^2 + 8*sw^4))*t + 2*(-2 + d)*(-1 + 4*sw^2)^2*
           (9 - 12*sw^2 + 4*sw^2*(-3 + 8*sw^2))*t^2)))/
      ((mz^2 - s)*s*sw^2*(1 - sw^2)) - 
     (8*(3*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(3*d^3*(-sw^2 + 4*sw^4 + sw^2*(-3 + 4*sw^2)) + 
            d^2*(-1 + 4*sw^2)*(9 - 14*sw^2 - 8*sw^4 + 2*sw^2*(-9 - 10*sw^2 + 
                16*sw^4)) - 2*d*(-1 + 4*sw^2)*(9 - 10*sw^2 - 16*sw^4 + 
              2*sw^2*(-9 - 20*sw^2 + 32*sw^4)) + 4*(-1 + 4*sw^2)*
             (3 - 2*sw^2 - 8*sw^4 + sw^2*(-6 - 20*sw^2 + 32*sw^4))) + 
          (-2 + d)*s*(-1 + 4*sw^2)*(-15*d*(-1 + 4*sw^2) + 
            d^2*(-3 + 12*sw^2) + 8*(-3 + 8*sw^2 - 4*sw^4 + 2*sw^2*(3 - 
                5*sw^2 + 8*sw^4)))*t + 2*(-2 + d)*(-1 + 4*sw^2)*(-3 + 8*sw^2)*
           (1 - 2*sw^2 + sw^2*(-2 + 8*sw^2))*t^2)))/((mz^2 - s)*s*sw^2*
       (1 - sw^2))))/((-1 + d)*Pi^(2*d)*(-mz^2 + s)*sw^2*(1 - sw^2)), 
  ((I/9)*EL^6*((64*(3*d^3*(2*Pi)^(3*d)*s^3 + 2^(2 + 3*d)*ml^2*Pi^(3*d)*
         (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
          2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          4*(3 - 20*sw^2 + 32*sw^4)*t^2) + 2^(1 + 3*d)*Pi^(3*d)*s*
         (s^2*(-12 - 40*sw^2 + 64*sw^4 + d*(18 + 40*sw^2 - 64*sw^4) + 
            d^2*(-9 - 10*sw^2 + 16*sw^4)) + s*(-21*d^2 + 3*d^3 - 
            16*(3 - 5*sw^2 + 8*sw^4) + d*(54 - 40*sw^2 + 64*sw^4))*t + 
          2*(-2 + d)*(3 - 20*sw^2 + 32*sw^4)*t^2)))/s^2 - 
     (4^(1 + d)*Pi^(2*d)*(9*d^3*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
         (s^2*(6*d^3*(-sw^2 + 4*sw^4 + 4*sw^2*(-1 + sw^2)) + 
            d^2*(-1 + 4*sw^2)*(-3*(-9 + 6*sw^2 + 8*sw^4) + 4*sw^2*(-9 - 
                10*sw^2 + 16*sw^4)) + 4*(-1 + 4*sw^2)*(9 + 6*sw^2 - 24*sw^4 + 
              4*sw^2*(-3 - 10*sw^2 + 16*sw^4)) - 2*d*(-1 + 4*sw^2)*
             (27 - 48*sw^4 + 4*sw^2*(-9 - 20*sw^2 + 32*sw^4))) + 
          (-2 + d)*s*(-1 + 4*sw^2)*(-15*d*(-3 + 8*sw^2) + 
            3*d^2*(-3 + 8*sw^2) - 24*(3 - 7*sw^2 + 4*sw^4) + 
            32*sw^2*(3 - 5*sw^2 + 8*sw^4))*t + 2*(-2 + d)*(-1 + 4*sw^2)^2*
           (9 - 12*sw^2 + 4*sw^2*(-3 + 8*sw^2))*t^2) + 
        4*ml^2*(9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
           (2*s^2*(3*d^2*(-sw^2 + 4*sw^4 + 4*sw^2*(-1 + sw^2)) + 
              d*(8*sw^2*(6 + sw^2 - 10*sw^4) + 3*(-3 + sw^2 + 4*sw^4) + 
                16*sw^4*(-3 - 5*sw^2 + 8*sw^4)) - (-1 + 4*sw^2)*(9 + 6*sw^2 - 
                24*sw^4 + 4*sw^2*(-3 - 10*sw^2 + 16*sw^4))) + 
            s*(-1 + 4*sw^2)*(-15*d*(-3 + 8*sw^2) + 3*d^2*(-3 + 8*sw^2) - 
              24*(3 - 7*sw^2 + 4*sw^4) + 32*sw^2*(3 - 5*sw^2 + 8*sw^4))*t + 
            2*(-1 + 4*sw^2)^2*(9 - 12*sw^2 + 4*sw^2*(-3 + 8*sw^2))*t^2))))/
      ((mz^2 - s)*s*sw^2*(1 - sw^2)) - 
     (2^(3 + 2*d)*Pi^(2*d)*(3*d^3*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
         (s^2*(3*d^3*(-sw^2 + 4*sw^4 + sw^2*(-3 + 4*sw^2)) + 
            d^2*(-1 + 4*sw^2)*(9 - 14*sw^2 - 8*sw^4 + 2*sw^2*(-9 - 10*sw^2 + 
                16*sw^4)) - 2*d*(-1 + 4*sw^2)*(9 - 10*sw^2 - 16*sw^4 + 
              2*sw^2*(-9 - 20*sw^2 + 32*sw^4)) + 4*(-1 + 4*sw^2)*
             (3 - 2*sw^2 - 8*sw^4 + sw^2*(-6 - 20*sw^2 + 32*sw^4))) + 
          (-2 + d)*s*(-1 + 4*sw^2)*(-15*d*(-1 + 4*sw^2) + 
            d^2*(-3 + 12*sw^2) + 8*(-3 + 8*sw^2 - 4*sw^4 + 2*sw^2*(3 - 
                5*sw^2 + 8*sw^4)))*t + 2*(-2 + d)*(-1 + 4*sw^2)*(-3 + 8*sw^2)*
           (1 - 2*sw^2 + sw^2*(-2 + 8*sw^2))*t^2) + 
        4*ml^2*(3*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
           (s^2*(3*d^2*(-sw^2 + 4*sw^4 + sw^2*(-3 + 4*sw^2)) + 
              2*d*(-1 + 4*sw^2)*(3 - 4*sw^2 - 4*sw^4 + 2*sw^2*(-3 - 5*sw^2 + 
                  8*sw^4)) - 2*(-1 + 4*sw^2)*(3 - 2*sw^2 - 8*sw^4 + 
                sw^2*(-6 - 20*sw^2 + 32*sw^4))) + s*(-1 + 4*sw^2)*
             (-15*d*(-1 + 4*sw^2) + d^2*(-3 + 12*sw^2) + 8*(-3 + 8*sw^2 - 
                4*sw^4 + 2*sw^2*(3 - 5*sw^2 + 8*sw^4)))*t + 
            2*(-1 + 4*sw^2)*(-3 + 8*sw^2)*(1 - 2*sw^2 + sw^2*(-2 + 8*sw^2))*
             t^2))))/((mz^2 - s)*s*sw^2*(1 - sw^2)) - 
     ((2*Pi)^(2*d)*(-9*d^3*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
         (s^2*(-3*d^3*(32*sw^8 + sw^2*(-5 + 4*sw^2) + 8*sw^6*(-7 + 8*sw^2) + 
              sw^2*(-11 + 28*sw^2 - 16*sw^4) + 4*sw^4*(9 - 18*sw^2 + 
                8*sw^4)) - d^2*(1 - 4*sw^2 + 8*sw^4)*(sw^2*(90 - 92*sw^2 - 
                80*sw^4) - 9*(3 - 10*sw^2 + 8*sw^4) + 8*sw^4*(-9 - 10*sw^2 + 
                16*sw^4)) - 4*(1 - 4*sw^2 + 8*sw^4)*(-9 + 30*sw^2 - 24*sw^4 + 
              sw^2*(30 + 4*sw^2 - 80*sw^4) + 8*sw^4*(-3 - 10*sw^2 + 
                16*sw^4)) + 2*d*(1 - 4*sw^2 + 8*sw^4)*
             (-9*(3 - 10*sw^2 + 8*sw^4) - 10*sw^2*(-9 + 4*sw^2 + 16*sw^4) + 
              8*sw^4*(-9 - 20*sw^2 + 32*sw^4))) - s*(1 - 4*sw^2 + 8*sw^4)*
           (-21*d^2*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
            3*d^3*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) - 
            16*(9 - 30*sw^2 + 24*sw^4 + sw^2*(-30 + 74*sw^2 - 40*sw^4) + 
              8*sw^4*(3 - 5*sw^2 + 8*sw^4)) + 2*d*(27*(3 - 10*sw^2 + 
                8*sw^4) + 8*sw^4*(27 - 20*sw^2 + 32*sw^4) - 2*sw^2*(135 - 
                268*sw^2 + 80*sw^4)))*t - 2*(-2 + d)*(1 - 4*sw^2 + 8*sw^4)*
           (9 - 30*sw^2 + 24*sw^4 + 8*sw^4*(3 - 20*sw^2 + 32*sw^4) - 
            2*sw^2*(15 - 76*sw^2 + 80*sw^4))*t^2) + 
        2*ml^2*(9*(-7 + d)*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
           (s^2*(3*d^3*(4*sw^4 + sw^2*(-5 + 4*sw^2) + sw^2*(-5 + 8*sw^2)) + 
              d^2*(-192*sw^8 + 21*sw^2*(5 - 4*sw^2) - 48*sw^6*(-7 + 8*sw^2) + 
                sw^2*(141 - 236*sw^2 + 16*sw^4) - 4*sw^4*(69 - 88*sw^2 + 
                  16*sw^4)) + 2*(3 - 8*sw^2 + 16*sw^4)*(-9 + 30*sw^2 - 
                24*sw^4 + sw^2*(30 + 4*sw^2 - 80*sw^4) + 8*sw^4*
                 (-3 - 10*sw^2 + 16*sw^4)) - 4*d*(sw^2*(96 - 151*sw^2 - 
                  4*sw^4) - 6*(3 - 10*sw^2 + 8*sw^4) + 64*sw^8*(-3 - 5*sw^2 + 
                  8*sw^4) + 4*sw^4*(-60 + 57*sw^2 + 32*sw^4) - 16*sw^6*
                 (-21 + sw^2 + 36*sw^4))) + s*(3*d^3*(3 - 10*sw^2 + 16*sw^4 + 
                2*sw^2*(-5 + 8*sw^2)) - 24*d^2*(1 - sw^2 + 2*sw^4)*(3 - 
                10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) - 8*(3 - 8*sw^2 + 
                16*sw^4)*(9 - 30*sw^2 + 24*sw^4 + sw^2*(-30 + 74*sw^2 - 
                  40*sw^4) + 8*sw^4*(3 - 5*sw^2 + 8*sw^4)) + d*(1920*sw^8 + 
                480*sw^6*(-7 + 8*sw^2) + 69*(3 - 10*sw^2 + 8*sw^4) + 
                8*sw^4*(309 - 580*sw^2 + 304*sw^4) - 2*sw^2*(525 - 
                  1256*sw^2 + 640*sw^4)))*t + 2*(-3 + d + 8*sw^2 - 16*sw^4)*
             (9 - 30*sw^2 + 24*sw^4 + 8*sw^4*(3 - 20*sw^2 + 32*sw^4) - 
              2*sw^2*(15 - 76*sw^2 + 80*sw^4))*t^2))))/
      ((mz^2 - s)^2*sw^4*(1 - sw^2)^2)))/(2^(4*(2 + d))*(-1 + d)*Pi^(4*d)*
    (-mz^2 + s)*sw^2*(1 - sw^2)), 
  ((-I/27)*2^(-7 - 2*d)*EL^6*
    ((2^(8 + d)*(-2 + d)*Pi^d*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
          4*d*(-3 - 5*sw^2 + 8*sw^4)) + 2*s*(-15*d + 3*d^2 + 
          8*(3 - 5*sw^2 + 8*sw^4))*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2))/s^2 - 
     (8*(9*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(3*d^3*(3 - 6*sw^2 + 16*sw^4 + 2*sw^2*(-9 + 8*sw^2)) + 
            d^2*(-3 + 8*sw^2)*(-3*(-9 + 6*sw^2 + 8*sw^4) + 4*sw^2*(-9 - 
                10*sw^2 + 16*sw^4)) + 4*(-3 + 8*sw^2)*(9 + 6*sw^2 - 24*sw^4 + 
              4*sw^2*(-3 - 10*sw^2 + 16*sw^4)) - 
            2*d*(sw^2*(324 + 240*sw^2 - 768*sw^4) + 9*(-9 + 16*sw^4) + 
              32*sw^4*(-9 - 20*sw^2 + 32*sw^4))) + (-2 + d)*s*(-3 + 8*sw^2)*
           (-15*d*(-3 + 8*sw^2) + 3*d^2*(-3 + 8*sw^2) - 
            24*(3 - 7*sw^2 + 4*sw^4) + 32*sw^2*(3 - 5*sw^2 + 8*sw^4))*t + 
          2*(-2 + d)*(-1 + 4*sw^2)*(-3 + 8*sw^2)*(9 - 12*sw^2 + 
            4*sw^2*(-3 + 8*sw^2))*t^2)))/((mz^2 - s)*s*sw^2*(1 - sw^2)) - 
     (16*(9*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(3*d^3*(-3*sw^2 + 8*sw^4 + sw^2*(-7 + 8*sw^2)) + 
            d^2*(-3 + 8*sw^2)*(9 - 14*sw^2 - 8*sw^4 + 2*sw^2*(-9 - 10*sw^2 + 
                16*sw^4)) - 2*d*(-3 + 8*sw^2)*(9 - 10*sw^2 - 16*sw^4 + 
              2*sw^2*(-9 - 20*sw^2 + 32*sw^4)) + 4*(-3 + 8*sw^2)*
             (3 - 2*sw^2 - 8*sw^4 + sw^2*(-6 - 20*sw^2 + 32*sw^4))) + 
          (-2 + d)*s*(-3 + 8*sw^2)*(-15*d*(-1 + 4*sw^2) + 
            d^2*(-3 + 12*sw^2) + 8*(-3 + 8*sw^2 - 4*sw^4 + 2*sw^2*(3 - 
                5*sw^2 + 8*sw^4)))*t + 2*(-2 + d)*(-3 + 8*sw^2)^2*
           (1 - 2*sw^2 + sw^2*(-2 + 8*sw^2))*t^2)))/((mz^2 - s)*s*sw^2*
       (1 - sw^2)) + (81*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (s^2*(d^2*(9 - 24*sw^2 + 32*sw^4)*(sw^2*(90 - 92*sw^2 - 80*sw^4) - 
             9*(3 - 10*sw^2 + 8*sw^4) + 8*sw^4*(-9 - 10*sw^2 + 16*sw^4)) + 
           4*(9 - 24*sw^2 + 32*sw^4)*(-9 + 30*sw^2 - 24*sw^4 + 
             sw^2*(30 + 4*sw^2 - 80*sw^4) + 8*sw^4*(-3 - 10*sw^2 + 16*
                sw^4)) + 3*d^3*(128*sw^8 + 256*sw^6*(-1 + sw^2) + 
             9*sw^2*(-5 + 4*sw^2) + 4*sw^4*(51 - 88*sw^2 + 32*sw^4) - 
             3*sw^2*(27 - 64*sw^2 + 32*sw^4)) - 2*d*(9 - 24*sw^2 + 32*sw^4)*
            (-9*(3 - 10*sw^2 + 8*sw^4) - 10*sw^2*(-9 + 4*sw^2 + 16*sw^4) + 
             8*sw^4*(-9 - 20*sw^2 + 32*sw^4))) + s*(9 - 24*sw^2 + 32*sw^4)*
          (-21*d^2*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
           3*d^3*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) - 
           16*(9 - 30*sw^2 + 24*sw^4 + sw^2*(-30 + 74*sw^2 - 40*sw^4) + 
             8*sw^4*(3 - 5*sw^2 + 8*sw^4)) + 2*d*(27*(3 - 10*sw^2 + 8*sw^4) + 
             8*sw^4*(27 - 20*sw^2 + 32*sw^4) - 2*sw^2*(135 - 268*sw^2 + 80*
                sw^4)))*t + 2*(-2 + d)*(9 - 24*sw^2 + 32*sw^4)*
          (9 - 30*sw^2 + 24*sw^4 + 8*sw^4*(3 - 20*sw^2 + 32*sw^4) - 
           2*sw^2*(15 - 76*sw^2 + 80*sw^4))*t^2))/((mz^2 - s)^2*sw^4*
       (1 - sw^2)^2)))/((-1 + d)*Pi^(2*d)*(-mz^2 + s)*sw^2*(1 - sw^2)), 
  ((I/6912)*EL^6*((2^(8 - d)*(4*mc^2 + (-2 + d)*s)*
       (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
        2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
        4*(3 - 20*sw^2 + 32*sw^4)*t^2))/(Pi^d*s^2) - 
     (2^(3 - 2*d)*(9*d^3*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
         (s^2*(3*d^3*(3 - 6*sw^2 + 16*sw^4 + 2*sw^2*(-9 + 8*sw^2)) + 
            d^2*(-3 + 8*sw^2)*(-3*(-9 + 6*sw^2 + 8*sw^4) + 4*sw^2*(-9 - 
                10*sw^2 + 16*sw^4)) + 4*(-3 + 8*sw^2)*(9 + 6*sw^2 - 24*sw^4 + 
              4*sw^2*(-3 - 10*sw^2 + 16*sw^4)) - 
            2*d*(sw^2*(324 + 240*sw^2 - 768*sw^4) + 9*(-9 + 16*sw^4) + 
              32*sw^4*(-9 - 20*sw^2 + 32*sw^4))) + (-2 + d)*s*(-3 + 8*sw^2)*
           (-15*d*(-3 + 8*sw^2) + 3*d^2*(-3 + 8*sw^2) - 
            24*(3 - 7*sw^2 + 4*sw^4) + 32*sw^2*(3 - 5*sw^2 + 8*sw^4))*t + 
          2*(-2 + d)*(-1 + 4*sw^2)*(-3 + 8*sw^2)*(9 - 12*sw^2 + 
            4*sw^2*(-3 + 8*sw^2))*t^2) + 4*mc^2*(27*d^2*(2*Pi)^d*s^2 + 
          2^(1 + d)*Pi^d*(2*s^2*(sw^4*(96 + 320*sw^2 - 512*sw^4) + 
              9*(3 + 2*sw^2 - 8*sw^4) + 12*sw^2*(-9 - 14*sw^2 + 32*sw^4) + 
              3*d^2*(-3*sw^2 + 8*sw^4 + sw^2*(-9 + 8*sw^2)) + 
              d*(-3 + 8*sw^2)*(-3*(-3 + sw^2 + 4*sw^4) + 4*sw^2*
                 (-3 - 5*sw^2 + 8*sw^4))) + s*(-3 + 8*sw^2)*
             (-15*d*(-3 + 8*sw^2) + 3*d^2*(-3 + 8*sw^2) - 24*(3 - 7*sw^2 + 
                4*sw^4) + 32*sw^2*(3 - 5*sw^2 + 8*sw^4))*t + 
            2*(-1 + 4*sw^2)*(-3 + 8*sw^2)*(9 - 12*sw^2 + 4*sw^2*(-3 + 
                8*sw^2))*t^2))))/(Pi^(2*d)*(mz^2 - s)*s*sw^2*(1 - sw^2)) - 
     (4^(2 - d)*(3*d^3*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
         (s^2*(3*d^3*(1 - 3*sw^2 + 8*sw^4 + sw^2*(-7 + 8*sw^2)) + 
            d^2*(-3 + 8*sw^2)*(9 - 14*sw^2 - 8*sw^4 + 2*sw^2*(-9 - 10*sw^2 + 
                16*sw^4)) - 2*d*(-3 + 8*sw^2)*(9 - 10*sw^2 - 16*sw^4 + 
              2*sw^2*(-9 - 20*sw^2 + 32*sw^4)) + 4*(-3 + 8*sw^2)*
             (3 - 2*sw^2 - 8*sw^4 + sw^2*(-6 - 20*sw^2 + 32*sw^4))) + 
          (-2 + d)*s*(-3 + 8*sw^2)*(-15*d*(-1 + 4*sw^2) + 
            d^2*(-3 + 12*sw^2) + 8*(-3 + 8*sw^2 - 4*sw^4 + 2*sw^2*(3 - 
                5*sw^2 + 8*sw^4)))*t + 2*(-2 + d)*(-3 + 8*sw^2)^2*
           (1 - 2*sw^2 + sw^2*(-2 + 8*sw^2))*t^2) + 
        4*mc^2*(9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
           (s^2*(3*d^2*(-3*sw^2 + 8*sw^4 + sw^2*(-7 + 8*sw^2)) + 
              2*d*(-3 + 8*sw^2)*(3 - 4*sw^2 - 4*sw^4 + 2*sw^2*(-3 - 5*sw^2 + 
                  8*sw^4)) - 2*(-3 + 8*sw^2)*(3 - 2*sw^2 - 8*sw^4 + 
                sw^2*(-6 - 20*sw^2 + 32*sw^4))) + s*(-3 + 8*sw^2)*
             (-15*d*(-1 + 4*sw^2) + d^2*(-3 + 12*sw^2) + 8*(-3 + 8*sw^2 - 
                4*sw^4 + 2*sw^2*(3 - 5*sw^2 + 8*sw^4)))*t + 
            2*(-3 + 8*sw^2)^2*(1 - 2*sw^2 + sw^2*(-2 + 8*sw^2))*t^2))))/
      (Pi^(2*d)*(mz^2 - s)*s*sw^2*(1 - sw^2)) - 
     (-81*d^3*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
        (s^2*(-(d^2*(9 - 24*sw^2 + 32*sw^4)*(sw^2*(90 - 92*sw^2 - 80*sw^4) - 
              9*(3 - 10*sw^2 + 8*sw^4) + 8*sw^4*(-9 - 10*sw^2 + 16*sw^4))) - 
           4*(9 - 24*sw^2 + 32*sw^4)*(-9 + 30*sw^2 - 24*sw^4 + 
             sw^2*(30 + 4*sw^2 - 80*sw^4) + 8*sw^4*(-3 - 10*sw^2 + 16*
                sw^4)) - 3*d^3*(128*sw^8 + 256*sw^6*(-1 + sw^2) + 
             9*sw^2*(-5 + 4*sw^2) + 4*sw^4*(51 - 88*sw^2 + 32*sw^4) - 
             3*sw^2*(27 - 64*sw^2 + 32*sw^4)) + 2*d*(9 - 24*sw^2 + 32*sw^4)*
            (-9*(3 - 10*sw^2 + 8*sw^4) - 10*sw^2*(-9 + 4*sw^2 + 16*sw^4) + 
             8*sw^4*(-9 - 20*sw^2 + 32*sw^4))) - s*(9 - 24*sw^2 + 32*sw^4)*
          (-21*d^2*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
           3*d^3*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) - 
           16*(9 - 30*sw^2 + 24*sw^4 + sw^2*(-30 + 74*sw^2 - 40*sw^4) + 
             8*sw^4*(3 - 5*sw^2 + 8*sw^4)) + 2*d*(27*(3 - 10*sw^2 + 8*sw^4) + 
             8*sw^4*(27 - 20*sw^2 + 32*sw^4) - 2*sw^2*(135 - 268*sw^2 + 80*
                sw^4)))*t - 2*(-2 + d)*(9 - 24*sw^2 + 32*sw^4)*
          (9 - 30*sw^2 + 24*sw^4 + 8*sw^4*(3 - 20*sw^2 + 32*sw^4) - 
           2*sw^2*(15 - 76*sw^2 + 80*sw^4))*t^2) + 
       2*mc^2*(81*(-7 + d)*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
          (s^2*(27*d^3*(4*sw^4 + sw^2*(-5 + 4*sw^2) + sw^2*(-5 + 8*sw^2)) + 
             2*(27 - 48*sw^2 + 64*sw^4)*(-9 + 30*sw^2 - 24*sw^4 + sw^2*
                (30 + 4*sw^2 - 80*sw^4) + 8*sw^4*(-3 - 10*sw^2 + 16*sw^4)) - 
             3*d^2*(256*sw^8 + 512*sw^6*(-1 + sw^2) + 63*sw^2*(-5 + 4*sw^2) - 
               4*sw^4*(-147 + 116*sw^2 + 32*sw^4) + sw^2*(-387 + 588*sw^2 + 
                 48*sw^4)) - 4*d*(-54*(3 - 10*sw^2 + 8*sw^4) + 256*sw^8*
                (-3 - 5*sw^2 + 8*sw^4) - 256*sw^6*(-6 - sw^2 + 11*sw^4) - 27*
                sw^2*(-28 + 37*sw^2 + 12*sw^4) + 12*sw^4*(-120 + 49*sw^2 + 
                 136*sw^4))) + s*(27*d^3*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*
                (-5 + 8*sw^2)) - 24*d^2*(9 - 6*sw^2 + 8*sw^4)*
              (3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) - 
             8*(27 - 48*sw^2 + 64*sw^4)*(9 - 30*sw^2 + 24*sw^4 + sw^2*
                (-30 + 74*sw^2 - 40*sw^4) + 8*sw^4*(3 - 5*sw^2 + 8*sw^4)) + 
             3*d*(2560*sw^8 + 5120*sw^6*(-1 + sw^2) + 207*(3 - 10*sw^2 + 
                 8*sw^4) - 18*sw^2*(155 - 352*sw^2 + 160*sw^4) + 8*sw^4*
                (627 - 1000*sw^2 + 512*sw^4)))*t + 
           2*(-27 + 9*d + 48*sw^2 - 64*sw^4)*(9 - 30*sw^2 + 24*sw^4 + 
             8*sw^4*(3 - 20*sw^2 + 32*sw^4) - 2*sw^2*(15 - 76*sw^2 + 80*
                sw^4))*t^2)))/((2*Pi)^(2*d)*(mz^2 - s)^2*sw^4*(1 - sw^2)^2)))/
   ((-1 + d)*(-mz^2 + s)*sw^2*(1 - sw^2)), 
  ((-I/27)*2^(-7 - 2*d)*EL^6*
    ((2^(8 + d)*(-2 + d)*Pi^d*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
          4*d*(-3 - 5*sw^2 + 8*sw^4)) + 2*s*(-15*d + 3*d^2 + 
          8*(3 - 5*sw^2 + 8*sw^4))*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2))/s^2 - 
     (8*(9*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(3*d^3*(3 - 6*sw^2 + 16*sw^4 + 2*sw^2*(-9 + 8*sw^2)) + 
            d^2*(-3 + 8*sw^2)*(-3*(-9 + 6*sw^2 + 8*sw^4) + 4*sw^2*(-9 - 
                10*sw^2 + 16*sw^4)) + 4*(-3 + 8*sw^2)*(9 + 6*sw^2 - 24*sw^4 + 
              4*sw^2*(-3 - 10*sw^2 + 16*sw^4)) - 
            2*d*(sw^2*(324 + 240*sw^2 - 768*sw^4) + 9*(-9 + 16*sw^4) + 
              32*sw^4*(-9 - 20*sw^2 + 32*sw^4))) + (-2 + d)*s*(-3 + 8*sw^2)*
           (-15*d*(-3 + 8*sw^2) + 3*d^2*(-3 + 8*sw^2) - 
            24*(3 - 7*sw^2 + 4*sw^4) + 32*sw^2*(3 - 5*sw^2 + 8*sw^4))*t + 
          2*(-2 + d)*(-1 + 4*sw^2)*(-3 + 8*sw^2)*(9 - 12*sw^2 + 
            4*sw^2*(-3 + 8*sw^2))*t^2)))/((mz^2 - s)*s*sw^2*(1 - sw^2)) - 
     (16*(9*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(3*d^3*(-3*sw^2 + 8*sw^4 + sw^2*(-7 + 8*sw^2)) + 
            d^2*(-3 + 8*sw^2)*(9 - 14*sw^2 - 8*sw^4 + 2*sw^2*(-9 - 10*sw^2 + 
                16*sw^4)) - 2*d*(-3 + 8*sw^2)*(9 - 10*sw^2 - 16*sw^4 + 
              2*sw^2*(-9 - 20*sw^2 + 32*sw^4)) + 4*(-3 + 8*sw^2)*
             (3 - 2*sw^2 - 8*sw^4 + sw^2*(-6 - 20*sw^2 + 32*sw^4))) + 
          (-2 + d)*s*(-3 + 8*sw^2)*(-15*d*(-1 + 4*sw^2) + 
            d^2*(-3 + 12*sw^2) + 8*(-3 + 8*sw^2 - 4*sw^4 + 2*sw^2*(3 - 
                5*sw^2 + 8*sw^4)))*t + 2*(-2 + d)*(-3 + 8*sw^2)^2*
           (1 - 2*sw^2 + sw^2*(-2 + 8*sw^2))*t^2)))/((mz^2 - s)*s*sw^2*
       (1 - sw^2)) + (81*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (s^2*(d^2*(9 - 24*sw^2 + 32*sw^4)*(sw^2*(90 - 92*sw^2 - 80*sw^4) - 
             9*(3 - 10*sw^2 + 8*sw^4) + 8*sw^4*(-9 - 10*sw^2 + 16*sw^4)) + 
           4*(9 - 24*sw^2 + 32*sw^4)*(-9 + 30*sw^2 - 24*sw^4 + 
             sw^2*(30 + 4*sw^2 - 80*sw^4) + 8*sw^4*(-3 - 10*sw^2 + 16*
                sw^4)) + 3*d^3*(128*sw^8 + 256*sw^6*(-1 + sw^2) + 
             9*sw^2*(-5 + 4*sw^2) + 4*sw^4*(51 - 88*sw^2 + 32*sw^4) - 
             3*sw^2*(27 - 64*sw^2 + 32*sw^4)) - 2*d*(9 - 24*sw^2 + 32*sw^4)*
            (-9*(3 - 10*sw^2 + 8*sw^4) - 10*sw^2*(-9 + 4*sw^2 + 16*sw^4) + 
             8*sw^4*(-9 - 20*sw^2 + 32*sw^4))) + s*(9 - 24*sw^2 + 32*sw^4)*
          (-21*d^2*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
           3*d^3*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) - 
           16*(9 - 30*sw^2 + 24*sw^4 + sw^2*(-30 + 74*sw^2 - 40*sw^4) + 
             8*sw^4*(3 - 5*sw^2 + 8*sw^4)) + 2*d*(27*(3 - 10*sw^2 + 8*sw^4) + 
             8*sw^4*(27 - 20*sw^2 + 32*sw^4) - 2*sw^2*(135 - 268*sw^2 + 80*
                sw^4)))*t + 2*(-2 + d)*(9 - 24*sw^2 + 32*sw^4)*
          (9 - 30*sw^2 + 24*sw^4 + 8*sw^4*(3 - 20*sw^2 + 32*sw^4) - 
           2*sw^2*(15 - 76*sw^2 + 80*sw^4))*t^2))/((mz^2 - s)^2*sw^4*
       (1 - sw^2)^2)))/((-1 + d)*Pi^(2*d)*(-mz^2 + s)*sw^2*(1 - sw^2)), 
  ((I/6912)*EL^6*((2^(8 - d)*(4*mt^2 + (-2 + d)*s)*
       (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
        2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
        4*(3 - 20*sw^2 + 32*sw^4)*t^2))/(Pi^d*s^2) - 
     (2^(3 - 2*d)*(9*d^3*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
         (s^2*(3*d^3*(3 - 6*sw^2 + 16*sw^4 + 2*sw^2*(-9 + 8*sw^2)) + 
            d^2*(-3 + 8*sw^2)*(-3*(-9 + 6*sw^2 + 8*sw^4) + 4*sw^2*(-9 - 
                10*sw^2 + 16*sw^4)) + 4*(-3 + 8*sw^2)*(9 + 6*sw^2 - 24*sw^4 + 
              4*sw^2*(-3 - 10*sw^2 + 16*sw^4)) - 
            2*d*(sw^2*(324 + 240*sw^2 - 768*sw^4) + 9*(-9 + 16*sw^4) + 
              32*sw^4*(-9 - 20*sw^2 + 32*sw^4))) + (-2 + d)*s*(-3 + 8*sw^2)*
           (-15*d*(-3 + 8*sw^2) + 3*d^2*(-3 + 8*sw^2) - 
            24*(3 - 7*sw^2 + 4*sw^4) + 32*sw^2*(3 - 5*sw^2 + 8*sw^4))*t + 
          2*(-2 + d)*(-1 + 4*sw^2)*(-3 + 8*sw^2)*(9 - 12*sw^2 + 
            4*sw^2*(-3 + 8*sw^2))*t^2) + 4*mt^2*(27*d^2*(2*Pi)^d*s^2 + 
          2^(1 + d)*Pi^d*(2*s^2*(sw^4*(96 + 320*sw^2 - 512*sw^4) + 
              9*(3 + 2*sw^2 - 8*sw^4) + 12*sw^2*(-9 - 14*sw^2 + 32*sw^4) + 
              3*d^2*(-3*sw^2 + 8*sw^4 + sw^2*(-9 + 8*sw^2)) + 
              d*(-3 + 8*sw^2)*(-3*(-3 + sw^2 + 4*sw^4) + 4*sw^2*
                 (-3 - 5*sw^2 + 8*sw^4))) + s*(-3 + 8*sw^2)*
             (-15*d*(-3 + 8*sw^2) + 3*d^2*(-3 + 8*sw^2) - 24*(3 - 7*sw^2 + 
                4*sw^4) + 32*sw^2*(3 - 5*sw^2 + 8*sw^4))*t + 
            2*(-1 + 4*sw^2)*(-3 + 8*sw^2)*(9 - 12*sw^2 + 4*sw^2*(-3 + 
                8*sw^2))*t^2))))/(Pi^(2*d)*(mz^2 - s)*s*sw^2*(1 - sw^2)) - 
     (4^(2 - d)*(3*d^3*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
         (s^2*(3*d^3*(1 - 3*sw^2 + 8*sw^4 + sw^2*(-7 + 8*sw^2)) + 
            d^2*(-3 + 8*sw^2)*(9 - 14*sw^2 - 8*sw^4 + 2*sw^2*(-9 - 10*sw^2 + 
                16*sw^4)) - 2*d*(-3 + 8*sw^2)*(9 - 10*sw^2 - 16*sw^4 + 
              2*sw^2*(-9 - 20*sw^2 + 32*sw^4)) + 4*(-3 + 8*sw^2)*
             (3 - 2*sw^2 - 8*sw^4 + sw^2*(-6 - 20*sw^2 + 32*sw^4))) + 
          (-2 + d)*s*(-3 + 8*sw^2)*(-15*d*(-1 + 4*sw^2) + 
            d^2*(-3 + 12*sw^2) + 8*(-3 + 8*sw^2 - 4*sw^4 + 2*sw^2*(3 - 
                5*sw^2 + 8*sw^4)))*t + 2*(-2 + d)*(-3 + 8*sw^2)^2*
           (1 - 2*sw^2 + sw^2*(-2 + 8*sw^2))*t^2) + 
        4*mt^2*(9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
           (s^2*(3*d^2*(-3*sw^2 + 8*sw^4 + sw^2*(-7 + 8*sw^2)) + 
              2*d*(-3 + 8*sw^2)*(3 - 4*sw^2 - 4*sw^4 + 2*sw^2*(-3 - 5*sw^2 + 
                  8*sw^4)) - 2*(-3 + 8*sw^2)*(3 - 2*sw^2 - 8*sw^4 + 
                sw^2*(-6 - 20*sw^2 + 32*sw^4))) + s*(-3 + 8*sw^2)*
             (-15*d*(-1 + 4*sw^2) + d^2*(-3 + 12*sw^2) + 8*(-3 + 8*sw^2 - 
                4*sw^4 + 2*sw^2*(3 - 5*sw^2 + 8*sw^4)))*t + 
            2*(-3 + 8*sw^2)^2*(1 - 2*sw^2 + sw^2*(-2 + 8*sw^2))*t^2))))/
      (Pi^(2*d)*(mz^2 - s)*s*sw^2*(1 - sw^2)) - 
     (-81*d^3*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
        (s^2*(-(d^2*(9 - 24*sw^2 + 32*sw^4)*(sw^2*(90 - 92*sw^2 - 80*sw^4) - 
              9*(3 - 10*sw^2 + 8*sw^4) + 8*sw^4*(-9 - 10*sw^2 + 16*sw^4))) - 
           4*(9 - 24*sw^2 + 32*sw^4)*(-9 + 30*sw^2 - 24*sw^4 + 
             sw^2*(30 + 4*sw^2 - 80*sw^4) + 8*sw^4*(-3 - 10*sw^2 + 16*
                sw^4)) - 3*d^3*(128*sw^8 + 256*sw^6*(-1 + sw^2) + 
             9*sw^2*(-5 + 4*sw^2) + 4*sw^4*(51 - 88*sw^2 + 32*sw^4) - 
             3*sw^2*(27 - 64*sw^2 + 32*sw^4)) + 2*d*(9 - 24*sw^2 + 32*sw^4)*
            (-9*(3 - 10*sw^2 + 8*sw^4) - 10*sw^2*(-9 + 4*sw^2 + 16*sw^4) + 
             8*sw^4*(-9 - 20*sw^2 + 32*sw^4))) - s*(9 - 24*sw^2 + 32*sw^4)*
          (-21*d^2*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
           3*d^3*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) - 
           16*(9 - 30*sw^2 + 24*sw^4 + sw^2*(-30 + 74*sw^2 - 40*sw^4) + 
             8*sw^4*(3 - 5*sw^2 + 8*sw^4)) + 2*d*(27*(3 - 10*sw^2 + 8*sw^4) + 
             8*sw^4*(27 - 20*sw^2 + 32*sw^4) - 2*sw^2*(135 - 268*sw^2 + 80*
                sw^4)))*t - 2*(-2 + d)*(9 - 24*sw^2 + 32*sw^4)*
          (9 - 30*sw^2 + 24*sw^4 + 8*sw^4*(3 - 20*sw^2 + 32*sw^4) - 
           2*sw^2*(15 - 76*sw^2 + 80*sw^4))*t^2) + 
       2*mt^2*(81*(-7 + d)*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
          (s^2*(27*d^3*(4*sw^4 + sw^2*(-5 + 4*sw^2) + sw^2*(-5 + 8*sw^2)) + 
             2*(27 - 48*sw^2 + 64*sw^4)*(-9 + 30*sw^2 - 24*sw^4 + sw^2*
                (30 + 4*sw^2 - 80*sw^4) + 8*sw^4*(-3 - 10*sw^2 + 16*sw^4)) - 
             3*d^2*(256*sw^8 + 512*sw^6*(-1 + sw^2) + 63*sw^2*(-5 + 4*sw^2) - 
               4*sw^4*(-147 + 116*sw^2 + 32*sw^4) + sw^2*(-387 + 588*sw^2 + 
                 48*sw^4)) - 4*d*(-54*(3 - 10*sw^2 + 8*sw^4) + 256*sw^8*
                (-3 - 5*sw^2 + 8*sw^4) - 256*sw^6*(-6 - sw^2 + 11*sw^4) - 27*
                sw^2*(-28 + 37*sw^2 + 12*sw^4) + 12*sw^4*(-120 + 49*sw^2 + 
                 136*sw^4))) + s*(27*d^3*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*
                (-5 + 8*sw^2)) - 24*d^2*(9 - 6*sw^2 + 8*sw^4)*
              (3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) - 
             8*(27 - 48*sw^2 + 64*sw^4)*(9 - 30*sw^2 + 24*sw^4 + sw^2*
                (-30 + 74*sw^2 - 40*sw^4) + 8*sw^4*(3 - 5*sw^2 + 8*sw^4)) + 
             3*d*(2560*sw^8 + 5120*sw^6*(-1 + sw^2) + 207*(3 - 10*sw^2 + 
                 8*sw^4) - 18*sw^2*(155 - 352*sw^2 + 160*sw^4) + 8*sw^4*
                (627 - 1000*sw^2 + 512*sw^4)))*t + 
           2*(-27 + 9*d + 48*sw^2 - 64*sw^4)*(9 - 30*sw^2 + 24*sw^4 + 
             8*sw^4*(3 - 20*sw^2 + 32*sw^4) - 2*sw^2*(15 - 76*sw^2 + 80*
                sw^4))*t^2)))/((2*Pi)^(2*d)*(mz^2 - s)^2*sw^4*(1 - sw^2)^2)))/
   ((-1 + d)*(-mz^2 + s)*sw^2*(1 - sw^2)), 
  ((-I/27)*2^(-7 - 2*d)*EL^6*
    ((2^(6 + d)*(-2 + d)*Pi^d*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
          4*d*(-3 - 5*sw^2 + 8*sw^4)) + 2*s*(-15*d + 3*d^2 + 
          8*(3 - 5*sw^2 + 8*sw^4))*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2))/s^2 - 
     (4*(27*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(6*d^3*(-3*sw^2 + 4*sw^4 + sw^2*(-6 + 4*sw^2)) + 
            d^2*(-3 + 4*sw^2)*(-3*(-9 + 6*sw^2 + 8*sw^4) + 4*sw^2*(-9 - 
                10*sw^2 + 16*sw^4)) + 4*(-72*sw^2*(-1 - 2*sw^2 + 4*sw^4) + 
              9*(-3 - 2*sw^2 + 8*sw^4) + 16*sw^4*(-3 - 10*sw^2 + 16*sw^4)) - 
            2*d*(-3 + 4*sw^2)*(27 - 48*sw^4 + 4*sw^2*(-9 - 20*sw^2 + 
                32*sw^4))) + (-2 + d)*s*(-3 + 4*sw^2)*(-15*d*(-3 + 8*sw^2) + 
            3*d^2*(-3 + 8*sw^2) - 24*(3 - 7*sw^2 + 4*sw^4) + 
            32*sw^2*(3 - 5*sw^2 + 8*sw^4))*t + 2*(-2 + d)*(-3 + 4*sw^2)*
           (-1 + 4*sw^2)*(9 - 12*sw^2 + 4*sw^2*(-3 + 8*sw^2))*t^2)))/
      ((mz^2 - s)*s*sw^2*(1 - sw^2)) - 
     (8*(3*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(3*d^3*(1 - 3*sw^2 + 4*sw^4 + sw^2*(-5 + 4*sw^2)) + 
            d^2*(sw^2*(90 + 4*sw^2 - 128*sw^4) + 3*(-9 + 14*sw^2 + 8*sw^4) + 
              8*sw^4*(-9 - 10*sw^2 + 16*sw^4)) - 2*d*(-3 + 4*sw^2)*
             (9 - 10*sw^2 - 16*sw^4 + 2*sw^2*(-9 - 20*sw^2 + 32*sw^4)) + 
            4*(-3 + 4*sw^2)*(3 - 2*sw^2 - 8*sw^4 + sw^2*(-6 - 20*sw^2 + 
                32*sw^4))) + (-2 + d)*s*(-3 + 4*sw^2)*(-15*d*(-1 + 4*sw^2) + 
            d^2*(-3 + 12*sw^2) + 8*(-3 + 8*sw^2 - 4*sw^4 + 2*sw^2*(3 - 
                5*sw^2 + 8*sw^4)))*t + 2*(-2 + d)*(-3 + 4*sw^2)*(-3 + 8*sw^2)*
           (1 - 2*sw^2 + sw^2*(-2 + 8*sw^2))*t^2)))/((mz^2 - s)*s*sw^2*
       (1 - sw^2)) + (-81*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (s^2*(3*d^3*(32*sw^8 + 8*sw^6*(-11 + 8*sw^2) + 
             9*(3 - 5*sw^2 + 4*sw^4) + 4*sw^4*(27 - 34*sw^2 + 8*sw^4) - 
             3*sw^2*(21 - 44*sw^2 + 16*sw^4)) + d^2*(9 - 12*sw^2 + 8*sw^4)*
            (sw^2*(90 - 92*sw^2 - 80*sw^4) - 9*(3 - 10*sw^2 + 8*sw^4) + 
             8*sw^4*(-9 - 10*sw^2 + 16*sw^4)) + 4*(9 - 12*sw^2 + 8*sw^4)*
            (-9 + 30*sw^2 - 24*sw^4 + sw^2*(30 + 4*sw^2 - 80*sw^4) + 
             8*sw^4*(-3 - 10*sw^2 + 16*sw^4)) - 2*d*(9 - 12*sw^2 + 8*sw^4)*
            (-9*(3 - 10*sw^2 + 8*sw^4) - 10*sw^2*(-9 + 4*sw^2 + 16*sw^4) + 
             8*sw^4*(-9 - 20*sw^2 + 32*sw^4))) + s*(9 - 12*sw^2 + 8*sw^4)*
          (-21*d^2*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
           3*d^3*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) - 
           16*(9 - 30*sw^2 + 24*sw^4 + sw^2*(-30 + 74*sw^2 - 40*sw^4) + 
             8*sw^4*(3 - 5*sw^2 + 8*sw^4)) + 2*d*(27*(3 - 10*sw^2 + 8*sw^4) + 
             8*sw^4*(27 - 20*sw^2 + 32*sw^4) - 2*sw^2*(135 - 268*sw^2 + 80*
                sw^4)))*t + 2*(-2 + d)*(9 - 12*sw^2 + 8*sw^4)*
          (9 - 30*sw^2 + 24*sw^4 + 8*sw^4*(3 - 20*sw^2 + 32*sw^4) - 
           2*sw^2*(15 - 76*sw^2 + 80*sw^4))*t^2))/((mz^2 - s)^2*sw^4*
       (1 - sw^2)^2)))/((-1 + d)*Pi^(2*d)*(-mz^2 + s)*sw^2*(1 - sw^2)), 
  ((I/27)*EL^6*((64*(3*d^3*(2*Pi)^(3*d)*s^3 + 2^(2 + 3*d)*ms^2*Pi^(3*d)*
         (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
          2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          4*(3 - 20*sw^2 + 32*sw^4)*t^2) + 2^(1 + 3*d)*Pi^(3*d)*s*
         (s^2*(-12 - 40*sw^2 + 64*sw^4 + d*(18 + 40*sw^2 - 64*sw^4) + 
            d^2*(-9 - 10*sw^2 + 16*sw^4)) + s*(-21*d^2 + 3*d^3 - 
            16*(3 - 5*sw^2 + 8*sw^4) + d*(54 - 40*sw^2 + 64*sw^4))*t + 
          2*(-2 + d)*(3 - 20*sw^2 + 32*sw^4)*t^2)))/s^2 - 
     (4^(1 + d)*Pi^(2*d)*(27*d^3*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
         (s^2*(6*d^3*(-3*sw^2 + 4*sw^4 + sw^2*(-6 + 4*sw^2)) + 
            d^2*(-3 + 4*sw^2)*(-3*(-9 + 6*sw^2 + 8*sw^4) + 4*sw^2*(-9 - 
                10*sw^2 + 16*sw^4)) + 4*(-72*sw^2*(-1 - 2*sw^2 + 4*sw^4) + 
              9*(-3 - 2*sw^2 + 8*sw^4) + 16*sw^4*(-3 - 10*sw^2 + 16*sw^4)) - 
            2*d*(-3 + 4*sw^2)*(27 - 48*sw^4 + 4*sw^2*(-9 - 20*sw^2 + 
                32*sw^4))) + (-2 + d)*s*(-3 + 4*sw^2)*(-15*d*(-3 + 8*sw^2) + 
            3*d^2*(-3 + 8*sw^2) - 24*(3 - 7*sw^2 + 4*sw^4) + 
            32*sw^2*(3 - 5*sw^2 + 8*sw^4))*t + 2*(-2 + d)*(-3 + 4*sw^2)*
           (-1 + 4*sw^2)*(9 - 12*sw^2 + 4*sw^2*(-3 + 8*sw^2))*t^2) + 
        4*ms^2*(27*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
           (2*s^2*(sw^4*(48 + 160*sw^2 - 256*sw^4) + 9*(3 + 2*sw^2 - 
                8*sw^4) + 72*sw^2*(-1 - 2*sw^2 + 4*sw^4) + 3*d^2*(-3*sw^2 + 
                4*sw^4 + sw^2*(-6 + 4*sw^2)) + d*(-3 + 4*sw^2)*(
                -3*(-3 + sw^2 + 4*sw^4) + 4*sw^2*(-3 - 5*sw^2 + 8*sw^4))) + 
            s*(-3 + 4*sw^2)*(-15*d*(-3 + 8*sw^2) + 3*d^2*(-3 + 8*sw^2) - 
              24*(3 - 7*sw^2 + 4*sw^4) + 32*sw^2*(3 - 5*sw^2 + 8*sw^4))*t + 
            2*(-3 + 4*sw^2)*(-1 + 4*sw^2)*(9 - 12*sw^2 + 4*sw^2*(-3 + 
                8*sw^2))*t^2))))/((mz^2 - s)*s*sw^2*(1 - sw^2)) - 
     (2^(3 + 2*d)*Pi^(2*d)*(3*d^3*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
         (s^2*(3*d^3*(1 - 3*sw^2 + 4*sw^4 + sw^2*(-5 + 4*sw^2)) + 
            d^2*(sw^2*(90 + 4*sw^2 - 128*sw^4) + 3*(-9 + 14*sw^2 + 8*sw^4) + 
              8*sw^4*(-9 - 10*sw^2 + 16*sw^4)) - 2*d*(-3 + 4*sw^2)*
             (9 - 10*sw^2 - 16*sw^4 + 2*sw^2*(-9 - 20*sw^2 + 32*sw^4)) + 
            4*(-3 + 4*sw^2)*(3 - 2*sw^2 - 8*sw^4 + sw^2*(-6 - 20*sw^2 + 
                32*sw^4))) + (-2 + d)*s*(-3 + 4*sw^2)*(-15*d*(-1 + 4*sw^2) + 
            d^2*(-3 + 12*sw^2) + 8*(-3 + 8*sw^2 - 4*sw^4 + 2*sw^2*(3 - 
                5*sw^2 + 8*sw^4)))*t + 2*(-2 + d)*(-3 + 4*sw^2)*(-3 + 8*sw^2)*
           (1 - 2*sw^2 + sw^2*(-2 + 8*sw^2))*t^2) + 
        4*ms^2*(9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
           (s^2*(3*d^2*(-3*sw^2 + 4*sw^4 + sw^2*(-5 + 4*sw^2)) + 
              2*d*(sw^2*(30 + 14*sw^2 - 64*sw^4) + 3*(-3 + 4*sw^2 + 4*sw^4) + 
                8*sw^4*(-3 - 5*sw^2 + 8*sw^4)) - 2*(-3 + 4*sw^2)*(3 - 
                2*sw^2 - 8*sw^4 + sw^2*(-6 - 20*sw^2 + 32*sw^4))) + 
            s*(-3 + 4*sw^2)*(-15*d*(-1 + 4*sw^2) + d^2*(-3 + 12*sw^2) + 
              8*(-3 + 8*sw^2 - 4*sw^4 + 2*sw^2*(3 - 5*sw^2 + 8*sw^4)))*t + 
            2*(-3 + 4*sw^2)*(-3 + 8*sw^2)*(1 - 2*sw^2 + sw^2*(-2 + 8*sw^2))*
             t^2))))/((mz^2 - s)*s*sw^2*(1 - sw^2)) - 
     ((2*Pi)^(2*d)*(2*ms^2*(81*(-7 + d)*d^2*(2*Pi)^d*s^2 + 
          2^(1 + d)*Pi^d*(s^2*(27*d^3*(4*sw^4 + sw^2*(-5 + 4*sw^2) + 
                sw^2*(-5 + 8*sw^2)) + 2*(27 - 24*sw^2 + 16*sw^4)*(-9 + 
                30*sw^2 - 24*sw^4 + sw^2*(30 + 4*sw^2 - 80*sw^4) + 
                8*sw^4*(-3 - 10*sw^2 + 16*sw^4)) - 4*d*(-54*(3 - 10*sw^2 + 
                  8*sw^4) + 64*sw^8*(-3 - 5*sw^2 + 8*sw^4) + 36*sw^4*
                 (-24 - 11*sw^2 + 48*sw^4) - 16*sw^6*(-33 - 19*sw^2 + 
                  68*sw^4) - 9*sw^2*(-72 + 71*sw^2 + 68*sw^4)) - 
              3*d^2*(64*sw^8 + 63*sw^2*(-5 + 4*sw^2) + 16*sw^6*(-11 + 
                  8*sw^2) + 9*sw^2*(-39 + 52*sw^2 + 16*sw^4) - 
                4*sw^4*(-99 + 8*sw^2 + 80*sw^4))) + 
            s*(27*d^3*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) - 
              24*d^2*(9 - 3*sw^2 + 2*sw^4)*(3 - 10*sw^2 + 16*sw^4 + 
                2*sw^2*(-5 + 8*sw^2)) - 8*(27 - 24*sw^2 + 16*sw^4)*(9 - 
                30*sw^2 + 24*sw^4 + sw^2*(-30 + 74*sw^2 - 40*sw^4) + 
                8*sw^4*(3 - 5*sw^2 + 8*sw^4)) + 3*d*(640*sw^8 + 
                160*sw^6*(-11 + 8*sw^2) + 207*(3 - 10*sw^2 + 8*sw^4) + 
                8*sw^4*(387 - 460*sw^2 + 272*sw^4) - 6*sw^2*(405 - 856*sw^2 + 
                  320*sw^4)))*t + 2*(-27 + 9*d + 24*sw^2 - 16*sw^4)*
             (9 - 30*sw^2 + 24*sw^4 + 8*sw^4*(3 - 20*sw^2 + 32*sw^4) - 
              2*sw^2*(15 - 76*sw^2 + 80*sw^4))*t^2)) - 
        s*(81*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
           (s^2*(3*d^3*(32*sw^8 + 9*sw^2*(-5 + 4*sw^2) + 8*sw^6*
                 (-11 + 8*sw^2) + 4*sw^4*(27 - 34*sw^2 + 8*sw^4) - 
                3*sw^2*(21 - 44*sw^2 + 16*sw^4)) + d^2*(9 - 12*sw^2 + 8*sw^4)*
               (sw^2*(90 - 92*sw^2 - 80*sw^4) - 9*(3 - 10*sw^2 + 8*sw^4) + 
                8*sw^4*(-9 - 10*sw^2 + 16*sw^4)) + 4*(9 - 12*sw^2 + 8*sw^4)*(
                -9 + 30*sw^2 - 24*sw^4 + sw^2*(30 + 4*sw^2 - 80*sw^4) + 
                8*sw^4*(-3 - 10*sw^2 + 16*sw^4)) - 2*d*(9 - 12*sw^2 + 8*sw^4)*
               (-9*(3 - 10*sw^2 + 8*sw^4) - 10*sw^2*(-9 + 4*sw^2 + 16*sw^4) + 
                8*sw^4*(-9 - 20*sw^2 + 32*sw^4))) + s*(9 - 12*sw^2 + 8*sw^4)*
             (-21*d^2*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
              3*d^3*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) - 
              16*(9 - 30*sw^2 + 24*sw^4 + sw^2*(-30 + 74*sw^2 - 40*sw^4) + 
                8*sw^4*(3 - 5*sw^2 + 8*sw^4)) + 2*d*(27*(3 - 10*sw^2 + 
                  8*sw^4) + 8*sw^4*(27 - 20*sw^2 + 32*sw^4) - 2*sw^2*
                 (135 - 268*sw^2 + 80*sw^4)))*t + 2*(-2 + d)*
             (9 - 12*sw^2 + 8*sw^4)*(9 - 30*sw^2 + 24*sw^4 + 
              8*sw^4*(3 - 20*sw^2 + 32*sw^4) - 2*sw^2*(15 - 76*sw^2 + 
                80*sw^4))*t^2))))/((mz^2 - s)^2*sw^4*(1 - sw^2)^2)))/
   (2^(4*(2 + d))*(-1 + d)*Pi^(4*d)*(-mz^2 + s)*sw^2*(1 - sw^2)), 
  ((-I/27)*2^(-7 - 2*d)*EL^6*
    ((2^(6 + d)*(-2 + d)*Pi^d*(s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 
          4*d*(-3 - 5*sw^2 + 8*sw^4)) + 2*s*(-15*d + 3*d^2 + 
          8*(3 - 5*sw^2 + 8*sw^4))*t + 4*(3 - 20*sw^2 + 32*sw^4)*t^2))/s^2 - 
     (4*(27*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(6*d^3*(-3*sw^2 + 4*sw^4 + sw^2*(-6 + 4*sw^2)) + 
            d^2*(-3 + 4*sw^2)*(-3*(-9 + 6*sw^2 + 8*sw^4) + 4*sw^2*(-9 - 
                10*sw^2 + 16*sw^4)) + 4*(-72*sw^2*(-1 - 2*sw^2 + 4*sw^4) + 
              9*(-3 - 2*sw^2 + 8*sw^4) + 16*sw^4*(-3 - 10*sw^2 + 16*sw^4)) - 
            2*d*(-3 + 4*sw^2)*(27 - 48*sw^4 + 4*sw^2*(-9 - 20*sw^2 + 
                32*sw^4))) + (-2 + d)*s*(-3 + 4*sw^2)*(-15*d*(-3 + 8*sw^2) + 
            3*d^2*(-3 + 8*sw^2) - 24*(3 - 7*sw^2 + 4*sw^4) + 
            32*sw^2*(3 - 5*sw^2 + 8*sw^4))*t + 2*(-2 + d)*(-3 + 4*sw^2)*
           (-1 + 4*sw^2)*(9 - 12*sw^2 + 4*sw^2*(-3 + 8*sw^2))*t^2)))/
      ((mz^2 - s)*s*sw^2*(1 - sw^2)) - 
     (8*(3*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
         (s^2*(3*d^3*(1 - 3*sw^2 + 4*sw^4 + sw^2*(-5 + 4*sw^2)) + 
            d^2*(sw^2*(90 + 4*sw^2 - 128*sw^4) + 3*(-9 + 14*sw^2 + 8*sw^4) + 
              8*sw^4*(-9 - 10*sw^2 + 16*sw^4)) - 2*d*(-3 + 4*sw^2)*
             (9 - 10*sw^2 - 16*sw^4 + 2*sw^2*(-9 - 20*sw^2 + 32*sw^4)) + 
            4*(-3 + 4*sw^2)*(3 - 2*sw^2 - 8*sw^4 + sw^2*(-6 - 20*sw^2 + 
                32*sw^4))) + (-2 + d)*s*(-3 + 4*sw^2)*(-15*d*(-1 + 4*sw^2) + 
            d^2*(-3 + 12*sw^2) + 8*(-3 + 8*sw^2 - 4*sw^4 + 2*sw^2*(3 - 
                5*sw^2 + 8*sw^4)))*t + 2*(-2 + d)*(-3 + 4*sw^2)*(-3 + 8*sw^2)*
           (1 - 2*sw^2 + sw^2*(-2 + 8*sw^2))*t^2)))/((mz^2 - s)*s*sw^2*
       (1 - sw^2)) + (-81*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
        (s^2*(3*d^3*(32*sw^8 + 8*sw^6*(-11 + 8*sw^2) + 
             9*(3 - 5*sw^2 + 4*sw^4) + 4*sw^4*(27 - 34*sw^2 + 8*sw^4) - 
             3*sw^2*(21 - 44*sw^2 + 16*sw^4)) + d^2*(9 - 12*sw^2 + 8*sw^4)*
            (sw^2*(90 - 92*sw^2 - 80*sw^4) - 9*(3 - 10*sw^2 + 8*sw^4) + 
             8*sw^4*(-9 - 10*sw^2 + 16*sw^4)) + 4*(9 - 12*sw^2 + 8*sw^4)*
            (-9 + 30*sw^2 - 24*sw^4 + sw^2*(30 + 4*sw^2 - 80*sw^4) + 
             8*sw^4*(-3 - 10*sw^2 + 16*sw^4)) - 2*d*(9 - 12*sw^2 + 8*sw^4)*
            (-9*(3 - 10*sw^2 + 8*sw^4) - 10*sw^2*(-9 + 4*sw^2 + 16*sw^4) + 
             8*sw^4*(-9 - 20*sw^2 + 32*sw^4))) + s*(9 - 12*sw^2 + 8*sw^4)*
          (-21*d^2*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
           3*d^3*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) - 
           16*(9 - 30*sw^2 + 24*sw^4 + sw^2*(-30 + 74*sw^2 - 40*sw^4) + 
             8*sw^4*(3 - 5*sw^2 + 8*sw^4)) + 2*d*(27*(3 - 10*sw^2 + 8*sw^4) + 
             8*sw^4*(27 - 20*sw^2 + 32*sw^4) - 2*sw^2*(135 - 268*sw^2 + 80*
                sw^4)))*t + 2*(-2 + d)*(9 - 12*sw^2 + 8*sw^4)*
          (9 - 30*sw^2 + 24*sw^4 + 8*sw^4*(3 - 20*sw^2 + 32*sw^4) - 
           2*sw^2*(15 - 76*sw^2 + 80*sw^4))*t^2))/((mz^2 - s)^2*sw^4*
       (1 - sw^2)^2)))/((-1 + d)*Pi^(2*d)*(-mz^2 + s)*sw^2*(1 - sw^2)), 
  ((I/27)*EL^6*((64*(3*d^3*(2*Pi)^(3*d)*s^3 + 2^(2 + 3*d)*mb^2*Pi^(3*d)*
         (s^2*(12 + 3*d^2 + 40*sw^2 - 64*sw^4 + 4*d*(-3 - 5*sw^2 + 8*sw^4)) + 
          2*s*(-15*d + 3*d^2 + 8*(3 - 5*sw^2 + 8*sw^4))*t + 
          4*(3 - 20*sw^2 + 32*sw^4)*t^2) + 2^(1 + 3*d)*Pi^(3*d)*s*
         (s^2*(-12 - 40*sw^2 + 64*sw^4 + d*(18 + 40*sw^2 - 64*sw^4) + 
            d^2*(-9 - 10*sw^2 + 16*sw^4)) + s*(-21*d^2 + 3*d^3 - 
            16*(3 - 5*sw^2 + 8*sw^4) + d*(54 - 40*sw^2 + 64*sw^4))*t + 
          2*(-2 + d)*(3 - 20*sw^2 + 32*sw^4)*t^2)))/s^2 - 
     (4^(1 + d)*Pi^(2*d)*(27*d^3*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
         (s^2*(6*d^3*(-3*sw^2 + 4*sw^4 + sw^2*(-6 + 4*sw^2)) + 
            d^2*(-3 + 4*sw^2)*(-3*(-9 + 6*sw^2 + 8*sw^4) + 4*sw^2*(-9 - 
                10*sw^2 + 16*sw^4)) + 4*(-72*sw^2*(-1 - 2*sw^2 + 4*sw^4) + 
              9*(-3 - 2*sw^2 + 8*sw^4) + 16*sw^4*(-3 - 10*sw^2 + 16*sw^4)) - 
            2*d*(-3 + 4*sw^2)*(27 - 48*sw^4 + 4*sw^2*(-9 - 20*sw^2 + 
                32*sw^4))) + (-2 + d)*s*(-3 + 4*sw^2)*(-15*d*(-3 + 8*sw^2) + 
            3*d^2*(-3 + 8*sw^2) - 24*(3 - 7*sw^2 + 4*sw^4) + 
            32*sw^2*(3 - 5*sw^2 + 8*sw^4))*t + 2*(-2 + d)*(-3 + 4*sw^2)*
           (-1 + 4*sw^2)*(9 - 12*sw^2 + 4*sw^2*(-3 + 8*sw^2))*t^2) + 
        4*mb^2*(27*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
           (2*s^2*(sw^4*(48 + 160*sw^2 - 256*sw^4) + 9*(3 + 2*sw^2 - 
                8*sw^4) + 72*sw^2*(-1 - 2*sw^2 + 4*sw^4) + 3*d^2*(-3*sw^2 + 
                4*sw^4 + sw^2*(-6 + 4*sw^2)) + d*(-3 + 4*sw^2)*(
                -3*(-3 + sw^2 + 4*sw^4) + 4*sw^2*(-3 - 5*sw^2 + 8*sw^4))) + 
            s*(-3 + 4*sw^2)*(-15*d*(-3 + 8*sw^2) + 3*d^2*(-3 + 8*sw^2) - 
              24*(3 - 7*sw^2 + 4*sw^4) + 32*sw^2*(3 - 5*sw^2 + 8*sw^4))*t + 
            2*(-3 + 4*sw^2)*(-1 + 4*sw^2)*(9 - 12*sw^2 + 4*sw^2*(-3 + 
                8*sw^2))*t^2))))/((mz^2 - s)*s*sw^2*(1 - sw^2)) - 
     (2^(3 + 2*d)*Pi^(2*d)*(3*d^3*(2*Pi)^d*s^3 + 2^(1 + d)*Pi^d*s*
         (s^2*(3*d^3*(1 - 3*sw^2 + 4*sw^4 + sw^2*(-5 + 4*sw^2)) + 
            d^2*(sw^2*(90 + 4*sw^2 - 128*sw^4) + 3*(-9 + 14*sw^2 + 8*sw^4) + 
              8*sw^4*(-9 - 10*sw^2 + 16*sw^4)) - 2*d*(-3 + 4*sw^2)*
             (9 - 10*sw^2 - 16*sw^4 + 2*sw^2*(-9 - 20*sw^2 + 32*sw^4)) + 
            4*(-3 + 4*sw^2)*(3 - 2*sw^2 - 8*sw^4 + sw^2*(-6 - 20*sw^2 + 
                32*sw^4))) + (-2 + d)*s*(-3 + 4*sw^2)*(-15*d*(-1 + 4*sw^2) + 
            d^2*(-3 + 12*sw^2) + 8*(-3 + 8*sw^2 - 4*sw^4 + 2*sw^2*(3 - 
                5*sw^2 + 8*sw^4)))*t + 2*(-2 + d)*(-3 + 4*sw^2)*(-3 + 8*sw^2)*
           (1 - 2*sw^2 + sw^2*(-2 + 8*sw^2))*t^2) + 
        4*mb^2*(9*d^2*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
           (s^2*(3*d^2*(-3*sw^2 + 4*sw^4 + sw^2*(-5 + 4*sw^2)) + 
              2*d*(sw^2*(30 + 14*sw^2 - 64*sw^4) + 3*(-3 + 4*sw^2 + 4*sw^4) + 
                8*sw^4*(-3 - 5*sw^2 + 8*sw^4)) - 2*(-3 + 4*sw^2)*(3 - 
                2*sw^2 - 8*sw^4 + sw^2*(-6 - 20*sw^2 + 32*sw^4))) + 
            s*(-3 + 4*sw^2)*(-15*d*(-1 + 4*sw^2) + d^2*(-3 + 12*sw^2) + 
              8*(-3 + 8*sw^2 - 4*sw^4 + 2*sw^2*(3 - 5*sw^2 + 8*sw^4)))*t + 
            2*(-3 + 4*sw^2)*(-3 + 8*sw^2)*(1 - 2*sw^2 + sw^2*(-2 + 8*sw^2))*
             t^2))))/((mz^2 - s)*s*sw^2*(1 - sw^2)) - 
     ((2*Pi)^(2*d)*(2*mb^2*(81*(-7 + d)*d^2*(2*Pi)^d*s^2 + 
          2^(1 + d)*Pi^d*(s^2*(27*d^3*(4*sw^4 + sw^2*(-5 + 4*sw^2) + 
                sw^2*(-5 + 8*sw^2)) + 2*(27 - 24*sw^2 + 16*sw^4)*(-9 + 
                30*sw^2 - 24*sw^4 + sw^2*(30 + 4*sw^2 - 80*sw^4) + 
                8*sw^4*(-3 - 10*sw^2 + 16*sw^4)) - 4*d*(-54*(3 - 10*sw^2 + 
                  8*sw^4) + 64*sw^8*(-3 - 5*sw^2 + 8*sw^4) + 36*sw^4*
                 (-24 - 11*sw^2 + 48*sw^4) - 16*sw^6*(-33 - 19*sw^2 + 
                  68*sw^4) - 9*sw^2*(-72 + 71*sw^2 + 68*sw^4)) - 
              3*d^2*(64*sw^8 + 63*sw^2*(-5 + 4*sw^2) + 16*sw^6*(-11 + 
                  8*sw^2) + 9*sw^2*(-39 + 52*sw^2 + 16*sw^4) - 
                4*sw^4*(-99 + 8*sw^2 + 80*sw^4))) + 
            s*(27*d^3*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) - 
              24*d^2*(9 - 3*sw^2 + 2*sw^4)*(3 - 10*sw^2 + 16*sw^4 + 
                2*sw^2*(-5 + 8*sw^2)) - 8*(27 - 24*sw^2 + 16*sw^4)*(9 - 
                30*sw^2 + 24*sw^4 + sw^2*(-30 + 74*sw^2 - 40*sw^4) + 
                8*sw^4*(3 - 5*sw^2 + 8*sw^4)) + 3*d*(640*sw^8 + 
                160*sw^6*(-11 + 8*sw^2) + 207*(3 - 10*sw^2 + 8*sw^4) + 
                8*sw^4*(387 - 460*sw^2 + 272*sw^4) - 6*sw^2*(405 - 856*sw^2 + 
                  320*sw^4)))*t + 2*(-27 + 9*d + 24*sw^2 - 16*sw^4)*
             (9 - 30*sw^2 + 24*sw^4 + 8*sw^4*(3 - 20*sw^2 + 32*sw^4) - 
              2*sw^2*(15 - 76*sw^2 + 80*sw^4))*t^2)) - 
        s*(81*d^3*(2*Pi)^d*s^2 + 2^(1 + d)*Pi^d*
           (s^2*(3*d^3*(32*sw^8 + 9*sw^2*(-5 + 4*sw^2) + 8*sw^6*
                 (-11 + 8*sw^2) + 4*sw^4*(27 - 34*sw^2 + 8*sw^4) - 
                3*sw^2*(21 - 44*sw^2 + 16*sw^4)) + d^2*(9 - 12*sw^2 + 8*sw^4)*
               (sw^2*(90 - 92*sw^2 - 80*sw^4) - 9*(3 - 10*sw^2 + 8*sw^4) + 
                8*sw^4*(-9 - 10*sw^2 + 16*sw^4)) + 4*(9 - 12*sw^2 + 8*sw^4)*(
                -9 + 30*sw^2 - 24*sw^4 + sw^2*(30 + 4*sw^2 - 80*sw^4) + 
                8*sw^4*(-3 - 10*sw^2 + 16*sw^4)) - 2*d*(9 - 12*sw^2 + 8*sw^4)*
               (-9*(3 - 10*sw^2 + 8*sw^4) - 10*sw^2*(-9 + 4*sw^2 + 16*sw^4) + 
                8*sw^4*(-9 - 20*sw^2 + 32*sw^4))) + s*(9 - 12*sw^2 + 8*sw^4)*
             (-21*d^2*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
              3*d^3*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) - 
              16*(9 - 30*sw^2 + 24*sw^4 + sw^2*(-30 + 74*sw^2 - 40*sw^4) + 
                8*sw^4*(3 - 5*sw^2 + 8*sw^4)) + 2*d*(27*(3 - 10*sw^2 + 
                  8*sw^4) + 8*sw^4*(27 - 20*sw^2 + 32*sw^4) - 2*sw^2*
                 (135 - 268*sw^2 + 80*sw^4)))*t + 2*(-2 + d)*
             (9 - 12*sw^2 + 8*sw^4)*(9 - 30*sw^2 + 24*sw^4 + 
              8*sw^4*(3 - 20*sw^2 + 32*sw^4) - 2*sw^2*(15 - 76*sw^2 + 
                80*sw^4))*t^2))))/((mz^2 - s)^2*sw^4*(1 - sw^2)^2)))/
   (2^(4*(2 + d))*(-1 + d)*Pi^(4*d)*(-mz^2 + s)*sw^2*(1 - sw^2)), 0, 0, 
  ((-I/9)*2^(-8 - d)*EL^6*(-mh^2 + mz^2 + s)*
    (s^2*(3*d^2*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
       4*d*(-9 + 30*sw^2 - 24*sw^4 + sw^2*(30 - 22*sw^2 - 40*sw^4) + 
         8*sw^4*(-3 - 5*sw^2 + 8*sw^4)) - 4*(-9 + 30*sw^2 - 24*sw^4 + 
         sw^2*(30 + 4*sw^2 - 80*sw^4) + 8*sw^4*(-3 - 10*sw^2 + 16*sw^4))) + 
     2*s*(-15*d*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
       3*d^2*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
       8*(9 - 30*sw^2 + 24*sw^4 + sw^2*(-30 + 74*sw^2 - 40*sw^4) + 
         8*sw^4*(3 - 5*sw^2 + 8*sw^4)))*t + 
     4*(9 - 30*sw^2 + 24*sw^4 + 8*sw^4*(3 - 20*sw^2 + 32*sw^4) - 
       2*sw^2*(15 - 76*sw^2 + 80*sw^4))*t^2))/((-1 + d)*Pi^d*(mz^2 - s)^2*s*
    (-mz^2 + s)*sw^6*(1 - sw^2)^3), 
  ((I/9)*2^(-8 - d)*EL^6*(mh^4 + mz^4 + 2*(-3 + 2*d)*mz^2*s + s^2 - 
     2*mh^2*(mz^2 + s))*
    (s^2*(3*d^2*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
       4*d*(-9 + 30*sw^2 - 24*sw^4 + sw^2*(30 - 22*sw^2 - 40*sw^4) + 
         8*sw^4*(-3 - 5*sw^2 + 8*sw^4)) - 4*(-9 + 30*sw^2 - 24*sw^4 + 
         sw^2*(30 + 4*sw^2 - 80*sw^4) + 8*sw^4*(-3 - 10*sw^2 + 16*sw^4))) + 
     2*s*(-15*d*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
       3*d^2*(3 - 10*sw^2 + 16*sw^4 + 2*sw^2*(-5 + 8*sw^2)) + 
       8*(9 - 30*sw^2 + 24*sw^4 + sw^2*(-30 + 74*sw^2 - 40*sw^4) + 
         8*sw^4*(3 - 5*sw^2 + 8*sw^4)))*t + 
     4*(9 - 30*sw^2 + 24*sw^4 + 8*sw^4*(3 - 20*sw^2 + 32*sw^4) - 
       2*sw^2*(15 - 76*sw^2 + 80*sw^4))*t^2))/((-1 + d)*Pi^d*(mz^2 - s)^2*s*
    (-mz^2 + s)*sw^6*(1 - sw^2)^3)}}
