(* Created with the Wolfram Language : www.wolfram.com *)
{((I/9)*2^(-5 - d)*d*EL^6*s^3*(1 - 4*sw^2 + 8*sw^4)*
    (9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 
     2*sw^2*(15 - 76*swC^2 + 80*swC^4)))/(cw^4*cwC^2*(-4 + 4*d)*Pi^d*
    (mz^2 - s)^2*(-mzC^2 + s)*sw^4*swC^2) + 
  ((I/9)*2^(-8 - d)*EL^6*s*(1 - 4*sw^2 + 8*sw^4)*(d*s + 2*t)*
    (s*(3*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) - 
       4*(9 - 30*swC^2 + 24*swC^4 + sw^2*(-30 + 74*swC^2 - 40*swC^4) + 
         8*sw^4*(3 - 5*swC^2 + 8*swC^4))) - 
     2*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 
       2*sw^2*(15 - 76*swC^2 + 80*swC^4))*t))/(cw^4*cwC^2*(-1 + d)*Pi^d*
    (mz^2 - s)^2*(-mzC^2 + s)*sw^4*swC^2) + 
  ((I/9)*2^(-8 - d)*EL^6*s*
    (s^2*(2*d*(9*(3 - 10*swC^2 + 8*swC^4) + 128*sw^8*(-3 - 5*swC^2 + 
           8*swC^4) - 32*sw^6*(-6 - 49*swC^2 + 36*swC^4) + 
         32*sw^4*(9 - 57*swC^2 + 52*swC^4) - 6*sw^2*(33 - 136*swC^2 + 
           128*swC^4)) - 8*(9 - 30*swC^2 + 24*swC^4 + 
         sw^2*(-66 + 272*swC^2 - 256*swC^4) + 32*sw^8*(-3 - 10*swC^2 + 
           16*swC^4) - 8*sw^6*(-3 - 82*swC^2 + 72*swC^4) + 
         4*sw^4*(27 - 162*swC^2 + 152*swC^4)) + 
       d^2*(-9 + 192*sw^8 + 30*swC^2 - 24*swC^4 - 16*sw^6*(9 + 16*swC^2) - 
         8*sw^4*(9 - 66*swC^2 + 56*swC^4) + sw^2*(66 - 272*swC^2 + 
           256*swC^4))) + 2*s*(3*d^2*(1 - 4*sw^2 + 8*sw^4)*
        (3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) - 
       8*d*(9 + 144*sw^8 - 30*swC^2 + 24*swC^4 + 92*sw^6*(-3 + 4*swC^2) + 
         sw^2*(-66 + 181*swC^2 - 116*swC^4) + 2*sw^4*(99 - 222*swC^2 + 
           112*swC^4)) + 16*(9 - 30*swC^2 + 24*swC^4 + 
         8*sw^8*(15 - 10*swC^2 + 16*swC^4) - 2*sw^2*(33 - 97*swC^2 + 
           68*swC^4) - 2*sw^6*(123 - 226*swC^2 + 72*swC^4) + 
         sw^4*(189 - 486*swC^2 + 296*swC^4)))*t + 4*(1 - 4*sw^2 + 8*sw^4)*
      (9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 
       2*sw^2*(15 - 76*swC^2 + 80*swC^4))*t^2))/(cw^4*cwC^2*Pi^d*(mz^2 - s)^2*
    (-mzC^2 + s)*sw^4*swC^2) + ((I/9)*2^(-8 - 2*d)*EL^6*s^2*
    (9*d^2*(2*Pi)^d*s + 2^(1 + d)*Pi^d*
      (s*(3*d^2*(swC^2*(-5 + 4*swC^2) + 16*sw^6*(-1 + 4*swC^2) + 
           sw^2*(-11 + 40*swC^2 - 32*swC^4) + 8*sw^4*(3 - 12*swC^2 + 
             8*swC^4)) + 4*(9 - 30*swC^2 + 24*swC^4 + 
           sw^8*(48 + 160*swC^2 - 256*swC^4) + 4*sw^6*(-39 + 62*swC^2 + 
             72*swC^4) - 2*sw^2*(33 - 112*swC^2 + 80*swC^4) + 
           2*sw^4*(81 - 270*swC^2 + 136*swC^4)) - 
         d*(96*sw^8 + 8*sw^6*(-51 + 152*swC^2) + 9*(3 - 10*swC^2 + 8*swC^4) - 
           2*sw^2*(99 - 352*swC^2 + 272*swC^4) + 4*sw^4*(117 - 438*swC^2 + 
             280*swC^4))) + (-2 + 4*swC^2 + 2*sw^2*(6 - 4*swC^2) + 
         d*(-1 + 4*sw^2)*(-1 + 2*sw^2 + 2*swC^2) + 16*sw^6*(-1 + 4*swC^2) - 
         8*sw^4*(1 + 6*swC^2))*(9 - 12*swC^2 + 4*sw^2*(-3 + 8*swC^2))*t)))/
   (cw^4*cwC^2*Pi^(2*d)*(mz^2 - s)^2*(-mzC^2 + s)*sw^4*swC^2) + 
  ((I/9)*2^(-8 - d)*EL^6*s^2*((-3 + d)*(-1 + 4*sw^2)*
      (s*(-6*(-3 + 10*swC^2 - 8*swC^4 + 8*sw^4*(-1 + 2*swC^2) + 
           2*sw^2*(5 - 10*swC^2 + 8*swC^4)) + d*(-9 + 30*swC^2 - 24*swC^4 + 
           8*sw^4*(-3 + 8*swC^2) + sw^2*(30 - 80*swC^2 + 64*swC^4))) + 
       6*(-3 + 10*swC^2 - 8*swC^4 + 8*sw^4*(-1 + 4*swC^2) + 
         2*sw^2*(5 - 20*swC^2 + 16*swC^4))*t) - (1 - 4*sw^2 + 8*sw^4)*
      (s*(3*d*(3 + 8*sw^4 - 10*swC^2 + 8*swC^4 + 2*sw^2*(-5 + 8*swC^2)) + 
         2*(-9 + 30*swC^2 - 24*swC^4 + sw^2*(30 + 4*swC^2 - 80*swC^4) + 
           8*sw^4*(-3 - 10*swC^2 + 16*swC^4))) - 
       2*(9 - 30*swC^2 + 24*swC^4 + 8*sw^4*(3 - 20*swC^2 + 32*swC^4) - 
         2*sw^2*(15 - 76*swC^2 + 80*swC^4))*t)))/
   (cw^4*cwC^2*Pi^d*(mz^2 - s)^2*(-mzC^2 + s)*sw^4*swC^2), 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
