(* Created with the Wolfram Language : www.wolfram.com *)
PropList[KiraPropagator[p1 - q1, 0], KiraPropagator[-p2 - q1, 0], 
   KiraPropagator[p1 - p3 - q1, mz]]*
  (((I/9)*2^(-8 - d)*EL^6*
     ((-2 + d)*t*(s^2*(3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 
            8*sw^6*(-9 + 16*swC^2) + sw^2*(-22 + 68*swC^2 - 48*swC^4) + 
            12*sw^4*(5 - 14*swC^2 + 8*swC^4)) - 8*(-9 + 30*swC^2 - 24*swC^4 - 
            12*sw^4*(15 - 34*swC^2 + 8*swC^4) + 32*sw^8*(-3 - 10*swC^2 + 
              16*swC^4) - 24*sw^6*(-9 + 2*swC^2 + 24*swC^4) + 
            2*sw^2*(33 - 94*swC^2 + 56*swC^4)) + 
          2*d*(-9*(3 - 10*swC^2 + 8*swC^4) + 32*sw^8*(-9 - 10*swC^2 + 
              16*swC^4) - 24*sw^6*(-27 + 34*swC^2 + 24*swC^4) - 
            12*sw^4*(45 - 118*swC^2 + 56*swC^4) + 2*sw^2*(99 - 298*swC^2 + 
              200*swC^4))) + 2*s*(42*(3 - 10*swC^2 + 8*swC^4) + 
          64*sw^8*(21 - 20*swC^2 + 32*swC^4) + 120*sw^4*(21 - 62*swC^2 + 
            40*swC^4) - 48*sw^6*(63 - 140*swC^2 + 48*swC^4) - 
          4*sw^2*(231 - 730*swC^2 + 536*swC^4) - 
          21*d*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
            sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
              8*swC^4)) + 3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 
            8*sw^6*(-9 + 16*swC^2) + sw^2*(-22 + 68*swC^2 - 48*swC^4) + 
            12*sw^4*(5 - 14*swC^2 + 8*swC^4)))*t + 
        4*(9 - 30*swC^2 + 24*swC^4 + sw^2*(-66 + 236*swC^2 - 208*swC^4) + 
          32*sw^8*(3 - 20*swC^2 + 32*swC^4) - 24*sw^6*(9 - 44*swC^2 + 
            48*swC^4) + 12*sw^4*(15 - 58*swC^2 + 56*swC^4))*t^2) - 
      2*s*(s^2*(3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 
            8*sw^6*(-9 + 16*swC^2) + sw^2*(-22 + 68*swC^2 - 48*swC^4) + 
            12*sw^4*(5 - 14*swC^2 + 8*swC^4)) + 4*(9 - 30*swC^2 + 24*swC^4 + 
            sw^8*(96 + 320*swC^2 - 512*swC^4) + 12*sw^4*(15 - 34*swC^2 + 
              8*swC^4) + 24*sw^6*(-9 + 2*swC^2 + 24*swC^4) - 
            2*sw^2*(33 - 94*swC^2 + 56*swC^4)) + 
          4*d*(-9 + 30*swC^2 - 24*swC^4 - 72*sw^6*(-3 + 3*swC^2 + 4*swC^4) + 
            32*sw^8*(-3 - 5*swC^2 + 8*swC^4) - 12*sw^4*(15 - 38*swC^2 + 
              16*swC^4) + 2*sw^2*(33 - 98*swC^2 + 64*swC^4))) + 
        2*s*(-15*d*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 
            8*sw^6*(-9 + 16*swC^2) + sw^2*(-22 + 68*swC^2 - 48*swC^4) + 
            12*sw^4*(5 - 14*swC^2 + 8*swC^4)) + 3*d^2*(3 + 32*sw^8 - 
            10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
            sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
              8*swC^4)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
            32*sw^8*(3 - 5*swC^2 + 8*swC^4) - 24*sw^6*(9 - 23*swC^2 + 
              12*swC^4) + 12*sw^4*(15 - 46*swC^2 + 32*swC^4) - 
            2*sw^2*(33 - 106*swC^2 + 80*swC^4)))*t + 
        4*(9 - 30*swC^2 + 24*swC^4 + sw^2*(-66 + 236*swC^2 - 208*swC^4) + 
          32*sw^8*(3 - 20*swC^2 + 32*swC^4) - 24*sw^6*(9 - 44*swC^2 + 
            48*swC^4) + 12*sw^4*(15 - 58*swC^2 + 56*swC^4))*t^2) - 
      (t^2*(s^2*(3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 
             8*sw^6*(-9 + 16*swC^2) + sw^2*(-22 + 68*swC^2 - 48*swC^4) + 
             12*sw^4*(5 - 14*swC^2 + 8*swC^4)) + 4*(9 - 30*swC^2 + 24*swC^4 + 
             sw^8*(96 + 320*swC^2 - 512*swC^4) + 12*sw^4*(15 - 34*swC^2 + 8*
                swC^4) + 24*sw^6*(-9 + 2*swC^2 + 24*swC^4) - 
             2*sw^2*(33 - 94*swC^2 + 56*swC^4)) + 
           4*d*(-9 + 30*swC^2 - 24*swC^4 - 72*sw^6*(-3 + 3*swC^2 + 4*swC^4) + 
             32*sw^8*(-3 - 5*swC^2 + 8*swC^4) - 12*sw^4*(15 - 38*swC^2 + 16*
                swC^4) + 2*sw^2*(33 - 98*swC^2 + 64*swC^4))) + 
         2*s*(-15*d*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 
             8*sw^6*(-9 + 16*swC^2) + sw^2*(-22 + 68*swC^2 - 48*swC^4) + 
             12*sw^4*(5 - 14*swC^2 + 8*swC^4)) + 3*d^2*(3 + 32*sw^8 - 
             10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
             sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 8*
                swC^4)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
             32*sw^8*(3 - 5*swC^2 + 8*swC^4) - 24*sw^6*(9 - 23*swC^2 + 12*
                swC^4) + 12*sw^4*(15 - 46*swC^2 + 32*swC^4) - 
             2*sw^2*(33 - 106*swC^2 + 80*swC^4)))*t + 
         4*(9 - 30*swC^2 + 24*swC^4 + sw^2*(-66 + 236*swC^2 - 208*swC^4) + 
           32*sw^8*(3 - 20*swC^2 + 32*swC^4) - 24*sw^6*(9 - 44*swC^2 + 
             48*swC^4) + 12*sw^4*(15 - 58*swC^2 + 56*swC^4))*t^2))/mz^2))/
    (cw^4*cwC^2*Pi^d*(mz^2 - s)*(-mzC^2 + s)*sw^4*swC^2) - 
   ((I/9)*2^(-7 - d)*EL^6*
     (2*mz^2*s*(s*(3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 
            8*sw^6*(-9 + 16*swC^2) + sw^2*(-22 + 68*swC^2 - 48*swC^4) + 
            12*sw^4*(5 - 14*swC^2 + 8*swC^4)) + 4*(9 - 30*swC^2 + 24*swC^4 + 
            sw^8*(96 + 320*swC^2 - 512*swC^4) + 12*sw^4*(15 - 34*swC^2 + 
              8*swC^4) + 24*sw^6*(-9 + 2*swC^2 + 24*swC^4) - 
            2*sw^2*(33 - 94*swC^2 + 56*swC^4)) + 
          4*d*(-9 + 30*swC^2 - 24*swC^4 - 72*sw^6*(-3 + 3*swC^2 + 4*swC^4) + 
            32*sw^8*(-3 - 5*swC^2 + 8*swC^4) - 12*sw^4*(15 - 38*swC^2 + 
              16*swC^4) + 2*sw^2*(33 - 98*swC^2 + 64*swC^4))) + 
        2*(30*(3 - 10*swC^2 + 8*swC^4) + 64*sw^8*(15 - 10*swC^2 + 16*swC^4) - 
          48*sw^6*(45 - 94*swC^2 + 24*swC^4) + 24*sw^4*(75 - 218*swC^2 + 
            136*swC^4) - 4*sw^2*(165 - 518*swC^2 + 376*swC^4) - 
          18*d*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
            sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
              8*swC^4)) + 3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 
            8*sw^6*(-9 + 16*swC^2) + sw^2*(-22 + 68*swC^2 - 48*swC^4) + 
            12*sw^4*(5 - 14*swC^2 + 8*swC^4)))*t) - 
      t*(s^2*(3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 
            8*sw^6*(-9 + 16*swC^2) + sw^2*(-22 + 68*swC^2 - 48*swC^4) + 
            12*sw^4*(5 - 14*swC^2 + 8*swC^4)) + 4*(9 - 30*swC^2 + 24*swC^4 + 
            sw^8*(96 + 320*swC^2 - 512*swC^4) + 12*sw^4*(15 - 34*swC^2 + 
              8*swC^4) + 24*sw^6*(-9 + 2*swC^2 + 24*swC^4) - 
            2*sw^2*(33 - 94*swC^2 + 56*swC^4)) + 
          4*d*(-9 + 30*swC^2 - 24*swC^4 - 72*sw^6*(-3 + 3*swC^2 + 4*swC^4) + 
            32*sw^8*(-3 - 5*swC^2 + 8*swC^4) - 12*sw^4*(15 - 38*swC^2 + 
              16*swC^4) + 2*sw^2*(33 - 98*swC^2 + 64*swC^4))) + 
        2*s*(-15*d*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 
            8*sw^6*(-9 + 16*swC^2) + sw^2*(-22 + 68*swC^2 - 48*swC^4) + 
            12*sw^4*(5 - 14*swC^2 + 8*swC^4)) + 3*d^2*(3 + 32*sw^8 - 
            10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
            sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
              8*swC^4)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
            32*sw^8*(3 - 5*swC^2 + 8*swC^4) - 24*sw^6*(9 - 23*swC^2 + 
              12*swC^4) + 12*sw^4*(15 - 46*swC^2 + 32*swC^4) - 
            2*sw^2*(33 - 106*swC^2 + 80*swC^4)))*t + 
        4*(9 - 30*swC^2 + 24*swC^4 + sw^2*(-66 + 236*swC^2 - 208*swC^4) + 
          32*sw^8*(3 - 20*swC^2 + 32*swC^4) - 24*sw^6*(9 - 44*swC^2 + 
            48*swC^4) + 12*sw^4*(15 - 58*swC^2 + 56*swC^4))*t^2))*
     SPList[SP[p1, p2]])/(cw^4*cwC^2*mz^2*Pi^d*(mz^2 - s)*(-mzC^2 + s)*sw^4*
     swC^2) + ((I/9)*2^(-7 - d)*EL^6*
     (2*mz^2*s*(s*(9*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 
            8*sw^6*(-9 + 16*swC^2) + sw^2*(-22 + 68*swC^2 - 48*swC^4) + 
            12*sw^4*(5 - 14*swC^2 + 8*swC^4)) + 48*d*(-3 + 10*swC^2 - 
            8*swC^4 + sw^6*(72 - 86*swC^2 - 72*swC^4) + 
            22*sw^2*(1 - 3*swC^2 + 2*swC^4) - 12*sw^4*(5 - 13*swC^2 + 
              6*swC^4) + 8*sw^8*(-4 - 5*swC^2 + 8*swC^4)) - 
          20*(-9 + 30*swC^2 - 24*swC^4 - 12*sw^4*(15 - 34*swC^2 + 8*swC^4) + 
            32*sw^8*(-3 - 10*swC^2 + 16*swC^4) - 24*sw^6*(-9 + 2*swC^2 + 
              24*swC^4) + 2*sw^2*(33 - 94*swC^2 + 56*swC^4))) + 
        2*(78*(3 - 10*swC^2 + 8*swC^4) - 64*sw^8*(-39 - 10*swC^2 + 
            16*swC^4) + 48*sw^6*(-117 + 194*swC^2 + 24*swC^4) + 
          24*sw^4*(195 - 538*swC^2 + 296*swC^4) - 
          4*sw^2*(429 - 1318*swC^2 + 920*swC^4) - 
          54*d*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
            sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
              8*swC^4)) + 9*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 
            8*sw^6*(-9 + 16*swC^2) + sw^2*(-22 + 68*swC^2 - 48*swC^4) + 
            12*sw^4*(5 - 14*swC^2 + 8*swC^4)))*t) - 
      3*t*(s^2*(3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 
            8*sw^6*(-9 + 16*swC^2) + sw^2*(-22 + 68*swC^2 - 48*swC^4) + 
            12*sw^4*(5 - 14*swC^2 + 8*swC^4)) + 4*(9 - 30*swC^2 + 24*swC^4 + 
            sw^8*(96 + 320*swC^2 - 512*swC^4) + 12*sw^4*(15 - 34*swC^2 + 
              8*swC^4) + 24*sw^6*(-9 + 2*swC^2 + 24*swC^4) - 
            2*sw^2*(33 - 94*swC^2 + 56*swC^4)) + 
          4*d*(-9 + 30*swC^2 - 24*swC^4 - 72*sw^6*(-3 + 3*swC^2 + 4*swC^4) + 
            32*sw^8*(-3 - 5*swC^2 + 8*swC^4) - 12*sw^4*(15 - 38*swC^2 + 
              16*swC^4) + 2*sw^2*(33 - 98*swC^2 + 64*swC^4))) + 
        2*s*(-15*d*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 
            8*sw^6*(-9 + 16*swC^2) + sw^2*(-22 + 68*swC^2 - 48*swC^4) + 
            12*sw^4*(5 - 14*swC^2 + 8*swC^4)) + 3*d^2*(3 + 32*sw^8 - 
            10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
            sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
              8*swC^4)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
            32*sw^8*(3 - 5*swC^2 + 8*swC^4) - 24*sw^6*(9 - 23*swC^2 + 
              12*swC^4) + 12*sw^4*(15 - 46*swC^2 + 32*swC^4) - 
            2*sw^2*(33 - 106*swC^2 + 80*swC^4)))*t + 
        4*(9 - 30*swC^2 + 24*swC^4 + sw^2*(-66 + 236*swC^2 - 208*swC^4) + 
          32*sw^8*(3 - 20*swC^2 + 32*swC^4) - 24*sw^6*(9 - 44*swC^2 + 
            48*swC^4) + 12*sw^4*(15 - 58*swC^2 + 56*swC^4))*t^2))*
     SPList[SP[p1, p3]])/(cw^4*cwC^2*mz^2*Pi^d*(mz^2 - s)*(-mzC^2 + s)*sw^4*
     swC^2) - ((I/9)*2^(-7 - d)*EL^6*
     (-(t*(s^2*(3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 
             8*sw^6*(-9 + 16*swC^2) + sw^2*(-22 + 68*swC^2 - 48*swC^4) + 
             12*sw^4*(5 - 14*swC^2 + 8*swC^4)) + 4*(9 - 30*swC^2 + 24*swC^4 + 
             sw^8*(96 + 320*swC^2 - 512*swC^4) + 12*sw^4*(15 - 34*swC^2 + 8*
                swC^4) + 24*sw^6*(-9 + 2*swC^2 + 24*swC^4) - 
             2*sw^2*(33 - 94*swC^2 + 56*swC^4)) + 
           4*d*(-9 + 30*swC^2 - 24*swC^4 - 72*sw^6*(-3 + 3*swC^2 + 4*swC^4) + 
             32*sw^8*(-3 - 5*swC^2 + 8*swC^4) - 12*sw^4*(15 - 38*swC^2 + 16*
                swC^4) + 2*sw^2*(33 - 98*swC^2 + 64*swC^4))) + 
         2*s*(-15*d*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 
             8*sw^6*(-9 + 16*swC^2) + sw^2*(-22 + 68*swC^2 - 48*swC^4) + 
             12*sw^4*(5 - 14*swC^2 + 8*swC^4)) + 3*d^2*(3 + 32*sw^8 - 
             10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
             sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 8*
                swC^4)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
             32*sw^8*(3 - 5*swC^2 + 8*swC^4) - 24*sw^6*(9 - 23*swC^2 + 12*
                swC^4) + 12*sw^4*(15 - 46*swC^2 + 32*swC^4) - 
             2*sw^2*(33 - 106*swC^2 + 80*swC^4)))*t + 
         4*(9 - 30*swC^2 + 24*swC^4 + sw^2*(-66 + 236*swC^2 - 208*swC^4) + 
           32*sw^8*(3 - 20*swC^2 + 32*swC^4) - 24*sw^6*(9 - 44*swC^2 + 
             48*swC^4) + 12*sw^4*(15 - 58*swC^2 + 56*swC^4))*t^2)) + 
      mz^2*((-4 + d)^2*s^2*(-18 + 60*swC^2 - 48*swC^4 - 
          24*sw^4*(15 - 34*swC^2 + 8*swC^4) + 64*sw^8*(-3 - 10*swC^2 + 
            16*swC^4) - 48*sw^6*(-9 + 2*swC^2 + 24*swC^4) + 
          4*sw^2*(33 - 94*swC^2 + 56*swC^4) + 3*d*(3 + 32*sw^8 - 10*swC^2 + 
            8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + sw^2*(-22 + 68*swC^2 - 
              48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 8*swC^4))) + 
        2*s*(-33*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 
            8*sw^6*(-9 + 16*swC^2) + sw^2*(-22 + 68*swC^2 - 48*swC^4) + 
            12*sw^4*(5 - 14*swC^2 + 8*swC^4)) + 3*d^3*(3 + 32*sw^8 - 
            10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
            sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
              8*swC^4)) + 8*d*(-72*sw^6*(15 - 29*swC^2 + 4*swC^4) + 
            15*(3 - 10*swC^2 + 8*swC^4) + 32*sw^8*(15 - 5*swC^2 + 8*swC^4) + 
            12*sw^4*(75 - 214*swC^2 + 128*swC^4) - 2*sw^2*(165 - 514*swC^2 + 
              368*swC^4)) - 4*(33*(3 - 10*swC^2 + 8*swC^4) + 
            32*sw^8*(33 - 10*swC^2 + 16*swC^4) - 24*sw^6*(99 - 190*swC^2 + 
              24*swC^4) + 60*sw^4*(33 - 94*swC^2 + 56*swC^4) - 
            2*sw^2*(363 - 1130*swC^2 + 808*swC^4)))*t + 
        4*(-2 + d)*(9 - 30*swC^2 + 24*swC^4 + sw^2*(-66 + 236*swC^2 - 
            208*swC^4) + 32*sw^8*(3 - 20*swC^2 + 32*swC^4) - 
          24*sw^6*(9 - 44*swC^2 + 48*swC^4) + 12*sw^4*(15 - 58*swC^2 + 
            56*swC^4))*t^2))*SPList[SP[p1, q1]])/(cw^4*cwC^2*mz^2*Pi^d*
     (mz^2 - s)*(-mzC^2 + s)*sw^4*swC^2) + 
   ((I/9)*2^(-7 - d)*EL^6*
     (2*mz^2*s*(s*(3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 
            8*sw^6*(-9 + 16*swC^2) + sw^2*(-22 + 68*swC^2 - 48*swC^4) + 
            12*sw^4*(5 - 14*swC^2 + 8*swC^4)) + 4*(9 - 30*swC^2 + 24*swC^4 + 
            sw^8*(96 + 320*swC^2 - 512*swC^4) + 12*sw^4*(15 - 34*swC^2 + 
              8*swC^4) + 24*sw^6*(-9 + 2*swC^2 + 24*swC^4) - 
            2*sw^2*(33 - 94*swC^2 + 56*swC^4)) + 
          4*d*(-9 + 30*swC^2 - 24*swC^4 - 72*sw^6*(-3 + 3*swC^2 + 4*swC^4) + 
            32*sw^8*(-3 - 5*swC^2 + 8*swC^4) - 12*sw^4*(15 - 38*swC^2 + 
              16*swC^4) + 2*sw^2*(33 - 98*swC^2 + 64*swC^4))) + 
        2*(30*(3 - 10*swC^2 + 8*swC^4) + 64*sw^8*(15 - 10*swC^2 + 16*swC^4) - 
          48*sw^6*(45 - 94*swC^2 + 24*swC^4) + 24*sw^4*(75 - 218*swC^2 + 
            136*swC^4) - 4*sw^2*(165 - 518*swC^2 + 376*swC^4) - 
          18*d*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
            sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
              8*swC^4)) + 3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 
            8*sw^6*(-9 + 16*swC^2) + sw^2*(-22 + 68*swC^2 - 48*swC^4) + 
            12*sw^4*(5 - 14*swC^2 + 8*swC^4)))*t) - 
      t*(s^2*(3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 
            8*sw^6*(-9 + 16*swC^2) + sw^2*(-22 + 68*swC^2 - 48*swC^4) + 
            12*sw^4*(5 - 14*swC^2 + 8*swC^4)) + 4*(9 - 30*swC^2 + 24*swC^4 + 
            sw^8*(96 + 320*swC^2 - 512*swC^4) + 12*sw^4*(15 - 34*swC^2 + 
              8*swC^4) + 24*sw^6*(-9 + 2*swC^2 + 24*swC^4) - 
            2*sw^2*(33 - 94*swC^2 + 56*swC^4)) + 
          4*d*(-9 + 30*swC^2 - 24*swC^4 - 72*sw^6*(-3 + 3*swC^2 + 4*swC^4) + 
            32*sw^8*(-3 - 5*swC^2 + 8*swC^4) - 12*sw^4*(15 - 38*swC^2 + 
              16*swC^4) + 2*sw^2*(33 - 98*swC^2 + 64*swC^4))) + 
        2*s*(-15*d*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 
            8*sw^6*(-9 + 16*swC^2) + sw^2*(-22 + 68*swC^2 - 48*swC^4) + 
            12*sw^4*(5 - 14*swC^2 + 8*swC^4)) + 3*d^2*(3 + 32*sw^8 - 
            10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
            sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
              8*swC^4)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
            32*sw^8*(3 - 5*swC^2 + 8*swC^4) - 24*sw^6*(9 - 23*swC^2 + 
              12*swC^4) + 12*sw^4*(15 - 46*swC^2 + 32*swC^4) - 
            2*sw^2*(33 - 106*swC^2 + 80*swC^4)))*t + 
        4*(9 - 30*swC^2 + 24*swC^4 + sw^2*(-66 + 236*swC^2 - 208*swC^4) + 
          32*sw^8*(3 - 20*swC^2 + 32*swC^4) - 24*sw^6*(9 - 44*swC^2 + 
            48*swC^4) + 12*sw^4*(15 - 58*swC^2 + 56*swC^4))*t^2))*
     SPList[SP[p2, p3]])/(cw^4*cwC^2*mz^2*Pi^d*(mz^2 - s)*(-mzC^2 + s)*sw^4*
     swC^2) + ((I/9)*2^(-7 - d)*EL^6*
     (2*mz^2*s*(s*(3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 
            8*sw^6*(-9 + 16*swC^2) + sw^2*(-22 + 68*swC^2 - 48*swC^4) + 
            12*sw^4*(5 - 14*swC^2 + 8*swC^4)) + 4*(9 - 30*swC^2 + 24*swC^4 + 
            sw^8*(96 + 320*swC^2 - 512*swC^4) + 12*sw^4*(15 - 34*swC^2 + 
              8*swC^4) + 24*sw^6*(-9 + 2*swC^2 + 24*swC^4) - 
            2*sw^2*(33 - 94*swC^2 + 56*swC^4)) + 
          4*d*(-9 + 30*swC^2 - 24*swC^4 - 72*sw^6*(-3 + 3*swC^2 + 4*swC^4) + 
            32*sw^8*(-3 - 5*swC^2 + 8*swC^4) - 12*sw^4*(15 - 38*swC^2 + 
              16*swC^4) + 2*sw^2*(33 - 98*swC^2 + 64*swC^4))) + 
        2*(30*(3 - 10*swC^2 + 8*swC^4) + 64*sw^8*(15 - 10*swC^2 + 16*swC^4) - 
          48*sw^6*(45 - 94*swC^2 + 24*swC^4) + 24*sw^4*(75 - 218*swC^2 + 
            136*swC^4) - 4*sw^2*(165 - 518*swC^2 + 376*swC^4) - 
          18*d*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
            sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
              8*swC^4)) + 3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 
            8*sw^6*(-9 + 16*swC^2) + sw^2*(-22 + 68*swC^2 - 48*swC^4) + 
            12*sw^4*(5 - 14*swC^2 + 8*swC^4)))*t) - 
      t*(s^2*(3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 
            8*sw^6*(-9 + 16*swC^2) + sw^2*(-22 + 68*swC^2 - 48*swC^4) + 
            12*sw^4*(5 - 14*swC^2 + 8*swC^4)) + 4*(9 - 30*swC^2 + 24*swC^4 + 
            sw^8*(96 + 320*swC^2 - 512*swC^4) + 12*sw^4*(15 - 34*swC^2 + 
              8*swC^4) + 24*sw^6*(-9 + 2*swC^2 + 24*swC^4) - 
            2*sw^2*(33 - 94*swC^2 + 56*swC^4)) + 
          4*d*(-9 + 30*swC^2 - 24*swC^4 - 72*sw^6*(-3 + 3*swC^2 + 4*swC^4) + 
            32*sw^8*(-3 - 5*swC^2 + 8*swC^4) - 12*sw^4*(15 - 38*swC^2 + 
              16*swC^4) + 2*sw^2*(33 - 98*swC^2 + 64*swC^4))) + 
        2*s*(-15*d*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 
            8*sw^6*(-9 + 16*swC^2) + sw^2*(-22 + 68*swC^2 - 48*swC^4) + 
            12*sw^4*(5 - 14*swC^2 + 8*swC^4)) + 3*d^2*(3 + 32*sw^8 - 
            10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
            sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
              8*swC^4)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
            32*sw^8*(3 - 5*swC^2 + 8*swC^4) - 24*sw^6*(9 - 23*swC^2 + 
              12*swC^4) + 12*sw^4*(15 - 46*swC^2 + 32*swC^4) - 
            2*sw^2*(33 - 106*swC^2 + 80*swC^4)))*t + 
        4*(9 - 30*swC^2 + 24*swC^4 + sw^2*(-66 + 236*swC^2 - 208*swC^4) + 
          32*sw^8*(3 - 20*swC^2 + 32*swC^4) - 24*sw^6*(9 - 44*swC^2 + 
            48*swC^4) + 12*sw^4*(15 - 58*swC^2 + 56*swC^4))*t^2))*
     SPList[SP[p2, q1]])/(cw^4*cwC^2*mz^2*Pi^d*(mz^2 - s)*(-mzC^2 + s)*sw^4*
     swC^2) + ((I/9)*2^(-7 - d)*EL^6*
     (s^2*(3*d^3*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
          sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
            8*swC^4)) + 40*(-9 + 30*swC^2 - 24*swC^4 - 
          12*sw^4*(15 - 34*swC^2 + 8*swC^4) + 32*sw^8*(-3 - 10*swC^2 + 
            16*swC^4) - 24*sw^6*(-9 + 2*swC^2 + 24*swC^4) + 
          2*sw^2*(33 - 94*swC^2 + 56*swC^4)) - 
        40*d*(-9 + 30*swC^2 - 24*swC^4 - 72*sw^6*(-3 + 3*swC^2 + 4*swC^4) + 
          32*sw^8*(-3 - 5*swC^2 + 8*swC^4) - 12*sw^4*(15 - 38*swC^2 + 
            16*swC^4) + 2*sw^2*(33 - 98*swC^2 + 64*swC^4)) + 
        4*d^2*(-9*(3 - 10*swC^2 + 8*swC^4) + 32*sw^8*(-9 - 5*swC^2 + 
            8*swC^4) - 24*sw^6*(-27 + 41*swC^2 + 12*swC^4) - 
          12*sw^4*(45 - 122*swC^2 + 64*swC^4) + 2*sw^2*(99 - 302*swC^2 + 
            208*swC^4))) + 2*s*(-39*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 
          8*sw^6*(-9 + 16*swC^2) + sw^2*(-22 + 68*swC^2 - 48*swC^4) + 
          12*sw^4*(5 - 14*swC^2 + 8*swC^4)) + 3*d^3*(3 + 32*sw^8 - 10*swC^2 + 
          8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + sw^2*(-22 + 68*swC^2 - 
            48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 8*swC^4)) - 
        64*(9 - 30*swC^2 + 24*swC^4 + 8*sw^8*(12 - 5*swC^2 + 8*swC^4) - 
          6*sw^6*(36 - 71*swC^2 + 12*swC^4) + 12*sw^4*(15 - 43*swC^2 + 
            26*swC^4) - 2*sw^2*(33 - 103*swC^2 + 74*swC^4)) + 
        4*d*(-72*sw^6*(39 - 74*swC^2 + 8*swC^4) + 
          39*(3 - 10*swC^2 + 8*swC^4) + 32*sw^8*(39 - 10*swC^2 + 16*swC^4) + 
          12*sw^4*(195 - 554*swC^2 + 328*swC^4) - 
          2*sw^2*(429 - 1334*swC^2 + 952*swC^4)))*t + 
      4*(-2 + d)*(9 - 30*swC^2 + 24*swC^4 + sw^2*(-66 + 236*swC^2 - 
          208*swC^4) + 32*sw^8*(3 - 20*swC^2 + 32*swC^4) - 
        24*sw^6*(9 - 44*swC^2 + 48*swC^4) + 12*sw^4*(15 - 58*swC^2 + 
          56*swC^4))*t^2)*SPList[SP[p3, q1]])/(cw^4*cwC^2*Pi^d*(mz^2 - s)*
     (-mzC^2 + s)*sw^4*swC^2) + ((I/9)*2^(-8 - d)*EL^6*
     ((-2 + d)*(s^2*(3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 
            8*sw^6*(-9 + 16*swC^2) + sw^2*(-22 + 68*swC^2 - 48*swC^4) + 
            12*sw^4*(5 - 14*swC^2 + 8*swC^4)) - 8*(-9 + 30*swC^2 - 24*swC^4 - 
            12*sw^4*(15 - 34*swC^2 + 8*swC^4) + 32*sw^8*(-3 - 10*swC^2 + 
              16*swC^4) - 24*sw^6*(-9 + 2*swC^2 + 24*swC^4) + 
            2*sw^2*(33 - 94*swC^2 + 56*swC^4)) + 
          2*d*(-9*(3 - 10*swC^2 + 8*swC^4) + 32*sw^8*(-9 - 10*swC^2 + 
              16*swC^4) - 24*sw^6*(-27 + 34*swC^2 + 24*swC^4) - 
            12*sw^4*(45 - 118*swC^2 + 56*swC^4) + 2*sw^2*(99 - 298*swC^2 + 
              200*swC^4))) + 2*s*(42*(3 - 10*swC^2 + 8*swC^4) + 
          64*sw^8*(21 - 20*swC^2 + 32*swC^4) + 120*sw^4*(21 - 62*swC^2 + 
            40*swC^4) - 48*sw^6*(63 - 140*swC^2 + 48*swC^4) - 
          4*sw^2*(231 - 730*swC^2 + 536*swC^4) - 
          21*d*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
            sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
              8*swC^4)) + 3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 
            8*sw^6*(-9 + 16*swC^2) + sw^2*(-22 + 68*swC^2 - 48*swC^4) + 
            12*sw^4*(5 - 14*swC^2 + 8*swC^4)))*t + 
        4*(9 - 30*swC^2 + 24*swC^4 + sw^2*(-66 + 236*swC^2 - 208*swC^4) + 
          32*sw^8*(3 - 20*swC^2 + 32*swC^4) - 24*sw^6*(9 - 44*swC^2 + 
            48*swC^4) + 12*sw^4*(15 - 58*swC^2 + 56*swC^4))*t^2) - 
      (2*t*(s^2*(3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 
             8*sw^6*(-9 + 16*swC^2) + sw^2*(-22 + 68*swC^2 - 48*swC^4) + 
             12*sw^4*(5 - 14*swC^2 + 8*swC^4)) + 4*(9 - 30*swC^2 + 24*swC^4 + 
             sw^8*(96 + 320*swC^2 - 512*swC^4) + 12*sw^4*(15 - 34*swC^2 + 8*
                swC^4) + 24*sw^6*(-9 + 2*swC^2 + 24*swC^4) - 
             2*sw^2*(33 - 94*swC^2 + 56*swC^4)) + 
           4*d*(-9 + 30*swC^2 - 24*swC^4 - 72*sw^6*(-3 + 3*swC^2 + 4*swC^4) + 
             32*sw^8*(-3 - 5*swC^2 + 8*swC^4) - 12*sw^4*(15 - 38*swC^2 + 16*
                swC^4) + 2*sw^2*(33 - 98*swC^2 + 64*swC^4))) + 
         2*s*(-15*d*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 
             8*sw^6*(-9 + 16*swC^2) + sw^2*(-22 + 68*swC^2 - 48*swC^4) + 
             12*sw^4*(5 - 14*swC^2 + 8*swC^4)) + 3*d^2*(3 + 32*sw^8 - 
             10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
             sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 8*
                swC^4)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
             32*sw^8*(3 - 5*swC^2 + 8*swC^4) - 24*sw^6*(9 - 23*swC^2 + 12*
                swC^4) + 12*sw^4*(15 - 46*swC^2 + 32*swC^4) - 
             2*sw^2*(33 - 106*swC^2 + 80*swC^4)))*t + 
         4*(9 - 30*swC^2 + 24*swC^4 + sw^2*(-66 + 236*swC^2 - 208*swC^4) + 
           32*sw^8*(3 - 20*swC^2 + 32*swC^4) - 24*sw^6*(9 - 44*swC^2 + 
             48*swC^4) + 12*sw^4*(15 - 58*swC^2 + 56*swC^4))*t^2))/mz^2)*
     SPList[SP[q1, q1]])/(cw^4*cwC^2*Pi^d*(mz^2 - s)*(-mzC^2 + s)*sw^4*
     swC^2) + ((I/9)*2^(-6 - d)*EL^6*
     (3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
        sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
          8*swC^4)) + 4*(9 - 30*swC^2 + 24*swC^4 + 
        sw^8*(96 + 320*swC^2 - 512*swC^4) + 12*sw^4*(15 - 34*swC^2 + 
          8*swC^4) + 24*sw^6*(-9 + 2*swC^2 + 24*swC^4) - 
        2*sw^2*(33 - 94*swC^2 + 56*swC^4)) + 
      4*d*(-9 + 30*swC^2 - 24*swC^4 - 72*sw^6*(-3 + 3*swC^2 + 4*swC^4) + 
        32*sw^8*(-3 - 5*swC^2 + 8*swC^4) - 12*sw^4*(15 - 38*swC^2 + 
          16*swC^4) + 2*sw^2*(33 - 98*swC^2 + 64*swC^4)))*t*
     SPList[SP[p1, p2], SP[p1, p2]])/(cw^4*cwC^2*Pi^d*(mz^2 - s)*(-mzC^2 + s)*
     sw^4*swC^2) + ((I/9)*2^(-6 - d)*EL^6*
     (s^2*(3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
          sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
            8*swC^4)) + 4*(9 - 30*swC^2 + 24*swC^4 + 
          sw^8*(96 + 320*swC^2 - 512*swC^4) + 12*sw^4*(15 - 34*swC^2 + 
            8*swC^4) + 24*sw^6*(-9 + 2*swC^2 + 24*swC^4) - 
          2*sw^2*(33 - 94*swC^2 + 56*swC^4)) + 
        4*d*(-9 + 30*swC^2 - 24*swC^4 - 72*sw^6*(-3 + 3*swC^2 + 4*swC^4) + 
          32*sw^8*(-3 - 5*swC^2 + 8*swC^4) - 12*sw^4*(15 - 38*swC^2 + 
            16*swC^4) + 2*sw^2*(33 - 98*swC^2 + 64*swC^4))) + 
      2*s*(-15*d*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
          sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
            8*swC^4)) + 3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 
          8*sw^6*(-9 + 16*swC^2) + sw^2*(-22 + 68*swC^2 - 48*swC^4) + 
          12*sw^4*(5 - 14*swC^2 + 8*swC^4)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
          32*sw^8*(3 - 5*swC^2 + 8*swC^4) - 24*sw^6*(9 - 23*swC^2 + 
            12*swC^4) + 12*sw^4*(15 - 46*swC^2 + 32*swC^4) - 
          2*sw^2*(33 - 106*swC^2 + 80*swC^4)))*t - 
      2*t*(mz^2*(3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 
            8*sw^6*(-9 + 16*swC^2) + sw^2*(-22 + 68*swC^2 - 48*swC^4) + 
            12*sw^4*(5 - 14*swC^2 + 8*swC^4)) + 4*(9 - 30*swC^2 + 24*swC^4 + 
            sw^8*(96 + 320*swC^2 - 512*swC^4) + 12*sw^4*(15 - 34*swC^2 + 
              8*swC^4) + 24*sw^6*(-9 + 2*swC^2 + 24*swC^4) - 
            2*sw^2*(33 - 94*swC^2 + 56*swC^4)) + 
          4*d*(-9 + 30*swC^2 - 24*swC^4 - 72*sw^6*(-3 + 3*swC^2 + 4*swC^4) + 
            32*sw^8*(-3 - 5*swC^2 + 8*swC^4) - 12*sw^4*(15 - 38*swC^2 + 
              16*swC^4) + 2*sw^2*(33 - 98*swC^2 + 64*swC^4))) - 
        2*(9 - 30*swC^2 + 24*swC^4 + sw^2*(-66 + 236*swC^2 - 208*swC^4) + 
          32*sw^8*(3 - 20*swC^2 + 32*swC^4) - 24*sw^6*(9 - 44*swC^2 + 
            48*swC^4) + 12*sw^4*(15 - 58*swC^2 + 56*swC^4))*t))*
     SPList[SP[p1, p2], SP[p1, p3]])/(cw^4*cwC^2*mz^2*Pi^d*(mz^2 - s)*
     (-mzC^2 + s)*sw^4*swC^2) - ((I/9)*2^(-6 - d)*EL^6*
     ((-2 + d)*(s*(-18 + 60*swC^2 - 48*swC^4 - 24*sw^4*(15 - 34*swC^2 + 
            8*swC^4) + 64*sw^8*(-3 - 10*swC^2 + 16*swC^4) - 
          48*sw^6*(-9 + 2*swC^2 + 24*swC^4) + 4*sw^2*(33 - 94*swC^2 + 
            56*swC^4) + 3*d*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 
            8*sw^6*(-9 + 16*swC^2) + sw^2*(-22 + 68*swC^2 - 48*swC^4) + 
            12*sw^4*(5 - 14*swC^2 + 8*swC^4))) + 6*(-3 + d)*
         (3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
          sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
            8*swC^4))*t) + 
      (s^2*(3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 
            8*sw^6*(-9 + 16*swC^2) + sw^2*(-22 + 68*swC^2 - 48*swC^4) + 
            12*sw^4*(5 - 14*swC^2 + 8*swC^4)) + 4*(9 - 30*swC^2 + 24*swC^4 + 
            sw^8*(96 + 320*swC^2 - 512*swC^4) + 12*sw^4*(15 - 34*swC^2 + 
              8*swC^4) + 24*sw^6*(-9 + 2*swC^2 + 24*swC^4) - 
            2*sw^2*(33 - 94*swC^2 + 56*swC^4)) + 
          4*d*(-9 + 30*swC^2 - 24*swC^4 - 72*sw^6*(-3 + 3*swC^2 + 4*swC^4) + 
            32*sw^8*(-3 - 5*swC^2 + 8*swC^4) - 12*sw^4*(15 - 38*swC^2 + 
              16*swC^4) + 2*sw^2*(33 - 98*swC^2 + 64*swC^4))) + 
        2*s*(-15*d*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 
            8*sw^6*(-9 + 16*swC^2) + sw^2*(-22 + 68*swC^2 - 48*swC^4) + 
            12*sw^4*(5 - 14*swC^2 + 8*swC^4)) + 3*d^2*(3 + 32*sw^8 - 
            10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
            sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
              8*swC^4)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
            32*sw^8*(3 - 5*swC^2 + 8*swC^4) - 24*sw^6*(9 - 23*swC^2 + 
              12*swC^4) + 12*sw^4*(15 - 46*swC^2 + 32*swC^4) - 
            2*sw^2*(33 - 106*swC^2 + 80*swC^4)))*t + 
        4*(9 - 30*swC^2 + 24*swC^4 + sw^2*(-66 + 236*swC^2 - 208*swC^4) + 
          32*sw^8*(3 - 20*swC^2 + 32*swC^4) - 24*sw^6*(9 - 44*swC^2 + 
            48*swC^4) + 12*sw^4*(15 - 58*swC^2 + 56*swC^4))*t^2)/mz^2)*
     SPList[SP[p1, p2], SP[p1, q1]])/(cw^4*cwC^2*Pi^d*(mz^2 - s)*(-mzC^2 + s)*
     sw^4*swC^2) - ((I/9)*2^(-5 - d)*EL^6*
     (3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
        sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
          8*swC^4)) + 4*(9 - 30*swC^2 + 24*swC^4 + 
        sw^8*(96 + 320*swC^2 - 512*swC^4) + 12*sw^4*(15 - 34*swC^2 + 
          8*swC^4) + 24*sw^6*(-9 + 2*swC^2 + 24*swC^4) - 
        2*sw^2*(33 - 94*swC^2 + 56*swC^4)) + 
      4*d*(-9 + 30*swC^2 - 24*swC^4 - 72*sw^6*(-3 + 3*swC^2 + 4*swC^4) + 
        32*sw^8*(-3 - 5*swC^2 + 8*swC^4) - 12*sw^4*(15 - 38*swC^2 + 
          16*swC^4) + 2*sw^2*(33 - 98*swC^2 + 64*swC^4)))*t*
     SPList[SP[p1, p2], SP[p2, p3]])/(cw^4*cwC^2*Pi^d*(mz^2 - s)*(-mzC^2 + s)*
     sw^4*swC^2) - ((I/9)*2^(-5 - d)*EL^6*
     (3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
        sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
          8*swC^4)) + 4*(9 - 30*swC^2 + 24*swC^4 + 
        sw^8*(96 + 320*swC^2 - 512*swC^4) + 12*sw^4*(15 - 34*swC^2 + 
          8*swC^4) + 24*sw^6*(-9 + 2*swC^2 + 24*swC^4) - 
        2*sw^2*(33 - 94*swC^2 + 56*swC^4)) + 
      4*d*(-9 + 30*swC^2 - 24*swC^4 - 72*sw^6*(-3 + 3*swC^2 + 4*swC^4) + 
        32*sw^8*(-3 - 5*swC^2 + 8*swC^4) - 12*sw^4*(15 - 38*swC^2 + 
          16*swC^4) + 2*sw^2*(33 - 98*swC^2 + 64*swC^4)))*t*
     SPList[SP[p1, p2], SP[p2, q1]])/(cw^4*cwC^2*Pi^d*(mz^2 - s)*(-mzC^2 + s)*
     sw^4*swC^2) - ((I/9)*2^(-6 - d)*(-2 + d)*EL^6*
     (s*(-18 + 60*swC^2 - 48*swC^4 - 24*sw^4*(15 - 34*swC^2 + 8*swC^4) + 
        64*sw^8*(-3 - 10*swC^2 + 16*swC^4) - 48*sw^6*(-9 + 2*swC^2 + 
          24*swC^4) + 4*sw^2*(33 - 94*swC^2 + 56*swC^4) + 
        3*d*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
          sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
            8*swC^4))) - 2*(9 - 30*swC^2 + 24*swC^4 + 
        sw^2*(-66 + 236*swC^2 - 208*swC^4) + 32*sw^8*(3 - 20*swC^2 + 
          32*swC^4) - 24*sw^6*(9 - 44*swC^2 + 48*swC^4) + 
        12*sw^4*(15 - 58*swC^2 + 56*swC^4))*t)*SPList[SP[p1, p2], 
      SP[p3, q1]])/(cw^4*cwC^2*Pi^d*(mz^2 - s)*(-mzC^2 + s)*sw^4*swC^2) + 
   ((I/9)*2^(-7 - d)*EL^6*
     (s^2*(3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
          sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
            8*swC^4)) + 4*(9 - 30*swC^2 + 24*swC^4 + 
          sw^8*(96 + 320*swC^2 - 512*swC^4) + 12*sw^4*(15 - 34*swC^2 + 
            8*swC^4) + 24*sw^6*(-9 + 2*swC^2 + 24*swC^4) - 
          2*sw^2*(33 - 94*swC^2 + 56*swC^4)) + 
        4*d*(-9 + 30*swC^2 - 24*swC^4 - 72*sw^6*(-3 + 3*swC^2 + 4*swC^4) + 
          32*sw^8*(-3 - 5*swC^2 + 8*swC^4) - 12*sw^4*(15 - 38*swC^2 + 
            16*swC^4) + 2*sw^2*(33 - 98*swC^2 + 64*swC^4))) + 
      2*s*(-15*d*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
          sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
            8*swC^4)) + 3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 
          8*sw^6*(-9 + 16*swC^2) + sw^2*(-22 + 68*swC^2 - 48*swC^4) + 
          12*sw^4*(5 - 14*swC^2 + 8*swC^4)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
          32*sw^8*(3 - 5*swC^2 + 8*swC^4) - 24*sw^6*(9 - 23*swC^2 + 
            12*swC^4) + 12*sw^4*(15 - 46*swC^2 + 32*swC^4) - 
          2*sw^2*(33 - 106*swC^2 + 80*swC^4)))*t + 
      4*(9 - 30*swC^2 + 24*swC^4 + sw^2*(-66 + 236*swC^2 - 208*swC^4) + 
        32*sw^8*(3 - 20*swC^2 + 32*swC^4) - 24*sw^6*(9 - 44*swC^2 + 
          48*swC^4) + 12*sw^4*(15 - 58*swC^2 + 56*swC^4))*t^2)*
     SPList[SP[p1, p2], SP[q1, q1]])/(cw^4*cwC^2*mz^2*Pi^d*(mz^2 - s)*
     (-mzC^2 + s)*sw^4*swC^2) + ((I/9)*2^(-6 - d)*EL^6*
     (3*mz^2*(d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 
          8*sw^6*(-9 + 16*swC^2) + sw^2*(-22 + 68*swC^2 - 48*swC^4) + 
          12*sw^4*(5 - 14*swC^2 + 8*swC^4)) + 4*(9 - 30*swC^2 + 24*swC^4 - 
          22*sw^2*(3 - 10*swC^2 + 8*swC^4) + 60*sw^4*(3 - 10*swC^2 + 
            8*swC^4) - 72*sw^6*(3 - 10*swC^2 + 8*swC^4) + 
          32*sw^8*(3 - 10*swC^2 + 16*swC^4)) - 
        8*d*(3 - 10*swC^2 + 8*swC^4 + sw^2*(-22 + 72*swC^2 - 56*swC^4) + 
          16*sw^8*(2 - 5*swC^2 + 8*swC^4) + 12*sw^4*(5 - 16*swC^2 + 
            12*swC^4) - 4*sw^6*(18 - 53*swC^2 + 36*swC^4)))*(2*s + t) - 
      2*(s^2*(3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 
            8*sw^6*(-9 + 16*swC^2) + sw^2*(-22 + 68*swC^2 - 48*swC^4) + 
            12*sw^4*(5 - 14*swC^2 + 8*swC^4)) + 4*(9 - 30*swC^2 + 24*swC^4 + 
            sw^8*(96 + 320*swC^2 - 512*swC^4) + 12*sw^4*(15 - 34*swC^2 + 
              8*swC^4) + 24*sw^6*(-9 + 2*swC^2 + 24*swC^4) - 
            2*sw^2*(33 - 94*swC^2 + 56*swC^4)) + 
          4*d*(-9 + 30*swC^2 - 24*swC^4 - 72*sw^6*(-3 + 3*swC^2 + 4*swC^4) + 
            32*sw^8*(-3 - 5*swC^2 + 8*swC^4) - 12*sw^4*(15 - 38*swC^2 + 
              16*swC^4) + 2*sw^2*(33 - 98*swC^2 + 64*swC^4))) + 
        2*s*(-15*d*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 
            8*sw^6*(-9 + 16*swC^2) + sw^2*(-22 + 68*swC^2 - 48*swC^4) + 
            12*sw^4*(5 - 14*swC^2 + 8*swC^4)) + 3*d^2*(3 + 32*sw^8 - 
            10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
            sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
              8*swC^4)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
            32*sw^8*(3 - 5*swC^2 + 8*swC^4) - 24*sw^6*(9 - 23*swC^2 + 
              12*swC^4) + 12*sw^4*(15 - 46*swC^2 + 32*swC^4) - 
            2*sw^2*(33 - 106*swC^2 + 80*swC^4)))*t + 
        4*(9 - 30*swC^2 + 24*swC^4 + sw^2*(-66 + 236*swC^2 - 208*swC^4) + 
          32*sw^8*(3 - 20*swC^2 + 32*swC^4) - 24*sw^6*(9 - 44*swC^2 + 
            48*swC^4) + 12*sw^4*(15 - 58*swC^2 + 56*swC^4))*t^2))*
     SPList[SP[p1, p3], SP[p1, p3]])/(cw^4*cwC^2*mz^2*Pi^d*(mz^2 - s)*
     (-mzC^2 + s)*sw^4*swC^2) + ((I/9)*2^(-6 - d)*EL^6*
     (2*s^2*(3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 
          8*sw^6*(-9 + 16*swC^2) + sw^2*(-22 + 68*swC^2 - 48*swC^4) + 
          12*sw^4*(5 - 14*swC^2 + 8*swC^4)) + 4*(9 - 30*swC^2 + 24*swC^4 + 
          sw^8*(96 + 320*swC^2 - 512*swC^4) + 12*sw^4*(15 - 34*swC^2 + 
            8*swC^4) + 24*sw^6*(-9 + 2*swC^2 + 24*swC^4) - 
          2*sw^2*(33 - 94*swC^2 + 56*swC^4)) + 
        4*d*(-9 + 30*swC^2 - 24*swC^4 - 72*sw^6*(-3 + 3*swC^2 + 4*swC^4) + 
          32*sw^8*(-3 - 5*swC^2 + 8*swC^4) - 12*sw^4*(15 - 38*swC^2 + 
            16*swC^4) + 2*sw^2*(33 - 98*swC^2 + 64*swC^4))) + 
      4*s*(-15*d*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
          sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
            8*swC^4)) + 3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 
          8*sw^6*(-9 + 16*swC^2) + sw^2*(-22 + 68*swC^2 - 48*swC^4) + 
          12*sw^4*(5 - 14*swC^2 + 8*swC^4)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
          32*sw^8*(3 - 5*swC^2 + 8*swC^4) - 24*sw^6*(9 - 23*swC^2 + 
            12*swC^4) + 12*sw^4*(15 - 46*swC^2 + 32*swC^4) - 
          2*sw^2*(33 - 106*swC^2 + 80*swC^4)))*t + 
      8*(9 - 30*swC^2 + 24*swC^4 + sw^2*(-66 + 236*swC^2 - 208*swC^4) + 
        32*sw^8*(3 - 20*swC^2 + 32*swC^4) - 24*sw^6*(9 - 44*swC^2 + 
          48*swC^4) + 12*sw^4*(15 - 58*swC^2 + 56*swC^4))*t^2 + 
      (-2 + d)*mz^2*(s*(-42*(3 - 10*swC^2 + 8*swC^4) - 
          64*sw^8*(21 - 50*swC^2 + 80*swC^4) + 48*sw^6*(63 - 182*swC^2 + 
            120*swC^4) - 24*sw^4*(105 - 334*swC^2 + 248*swC^4) + 
          4*sw^2*(231 - 754*swC^2 + 584*swC^4) + 
          9*d*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
            sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
              8*swC^4))) + 2*(-15*(3 - 10*swC^2 + 8*swC^4) - 
          32*sw^8*(15 - 40*swC^2 + 64*swC^4) + 24*sw^6*(45 - 136*swC^2 + 
            96*swC^4) - 12*sw^4*(75 - 242*swC^2 + 184*swC^4) + 
          2*sw^2*(165 - 542*swC^2 + 424*swC^4) + 
          3*d*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
            sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
              8*swC^4)))*t))*SPList[SP[p1, p3], SP[p1, q1]])/
    (cw^4*cwC^2*mz^2*Pi^d*(mz^2 - s)*(-mzC^2 + s)*sw^4*swC^2) - 
   ((I/9)*2^(-6 - d)*EL^6*
     (s^2*(3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
          sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
            8*swC^4)) + 4*(9 - 30*swC^2 + 24*swC^4 + 
          sw^8*(96 + 320*swC^2 - 512*swC^4) + 12*sw^4*(15 - 34*swC^2 + 
            8*swC^4) + 24*sw^6*(-9 + 2*swC^2 + 24*swC^4) - 
          2*sw^2*(33 - 94*swC^2 + 56*swC^4)) + 
        4*d*(-9 + 30*swC^2 - 24*swC^4 - 72*sw^6*(-3 + 3*swC^2 + 4*swC^4) + 
          32*sw^8*(-3 - 5*swC^2 + 8*swC^4) - 12*sw^4*(15 - 38*swC^2 + 
            16*swC^4) + 2*sw^2*(33 - 98*swC^2 + 64*swC^4))) + 
      2*s*(-15*d*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
          sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
            8*swC^4)) + 3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 
          8*sw^6*(-9 + 16*swC^2) + sw^2*(-22 + 68*swC^2 - 48*swC^4) + 
          12*sw^4*(5 - 14*swC^2 + 8*swC^4)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
          32*sw^8*(3 - 5*swC^2 + 8*swC^4) - 24*sw^6*(9 - 23*swC^2 + 
            12*swC^4) + 12*sw^4*(15 - 46*swC^2 + 32*swC^4) - 
          2*sw^2*(33 - 106*swC^2 + 80*swC^4)))*t - 
      2*t*(mz^2*(3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 
            8*sw^6*(-9 + 16*swC^2) + sw^2*(-22 + 68*swC^2 - 48*swC^4) + 
            12*sw^4*(5 - 14*swC^2 + 8*swC^4)) + 4*(9 - 30*swC^2 + 24*swC^4 + 
            sw^8*(96 + 320*swC^2 - 512*swC^4) + 12*sw^4*(15 - 34*swC^2 + 
              8*swC^4) + 24*sw^6*(-9 + 2*swC^2 + 24*swC^4) - 
            2*sw^2*(33 - 94*swC^2 + 56*swC^4)) + 
          4*d*(-9 + 30*swC^2 - 24*swC^4 - 72*sw^6*(-3 + 3*swC^2 + 4*swC^4) + 
            32*sw^8*(-3 - 5*swC^2 + 8*swC^4) - 12*sw^4*(15 - 38*swC^2 + 
              16*swC^4) + 2*sw^2*(33 - 98*swC^2 + 64*swC^4))) - 
        2*(9 - 30*swC^2 + 24*swC^4 + sw^2*(-66 + 236*swC^2 - 208*swC^4) + 
          32*sw^8*(3 - 20*swC^2 + 32*swC^4) - 24*sw^6*(9 - 44*swC^2 + 
            48*swC^4) + 12*sw^4*(15 - 58*swC^2 + 56*swC^4))*t))*
     SPList[SP[p1, p3], SP[p2, p3]])/(cw^4*cwC^2*mz^2*Pi^d*(mz^2 - s)*
     (-mzC^2 + s)*sw^4*swC^2) - ((I/9)*2^(-6 - d)*EL^6*
     (s^2*(3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
          sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
            8*swC^4)) + 4*(9 - 30*swC^2 + 24*swC^4 + 
          sw^8*(96 + 320*swC^2 - 512*swC^4) + 12*sw^4*(15 - 34*swC^2 + 
            8*swC^4) + 24*sw^6*(-9 + 2*swC^2 + 24*swC^4) - 
          2*sw^2*(33 - 94*swC^2 + 56*swC^4)) + 
        4*d*(-9 + 30*swC^2 - 24*swC^4 - 72*sw^6*(-3 + 3*swC^2 + 4*swC^4) + 
          32*sw^8*(-3 - 5*swC^2 + 8*swC^4) - 12*sw^4*(15 - 38*swC^2 + 
            16*swC^4) + 2*sw^2*(33 - 98*swC^2 + 64*swC^4))) + 
      2*s*(-15*d*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
          sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
            8*swC^4)) + 3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 
          8*sw^6*(-9 + 16*swC^2) + sw^2*(-22 + 68*swC^2 - 48*swC^4) + 
          12*sw^4*(5 - 14*swC^2 + 8*swC^4)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
          32*sw^8*(3 - 5*swC^2 + 8*swC^4) - 24*sw^6*(9 - 23*swC^2 + 
            12*swC^4) + 12*sw^4*(15 - 46*swC^2 + 32*swC^4) - 
          2*sw^2*(33 - 106*swC^2 + 80*swC^4)))*t - 
      2*t*(mz^2*(3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 
            8*sw^6*(-9 + 16*swC^2) + sw^2*(-22 + 68*swC^2 - 48*swC^4) + 
            12*sw^4*(5 - 14*swC^2 + 8*swC^4)) + 4*(9 - 30*swC^2 + 24*swC^4 + 
            sw^8*(96 + 320*swC^2 - 512*swC^4) + 12*sw^4*(15 - 34*swC^2 + 
              8*swC^4) + 24*sw^6*(-9 + 2*swC^2 + 24*swC^4) - 
            2*sw^2*(33 - 94*swC^2 + 56*swC^4)) + 
          4*d*(-9 + 30*swC^2 - 24*swC^4 - 72*sw^6*(-3 + 3*swC^2 + 4*swC^4) + 
            32*sw^8*(-3 - 5*swC^2 + 8*swC^4) - 12*sw^4*(15 - 38*swC^2 + 
              16*swC^4) + 2*sw^2*(33 - 98*swC^2 + 64*swC^4))) - 
        2*(9 - 30*swC^2 + 24*swC^4 + sw^2*(-66 + 236*swC^2 - 208*swC^4) + 
          32*sw^8*(3 - 20*swC^2 + 32*swC^4) - 24*sw^6*(9 - 44*swC^2 + 
            48*swC^4) + 12*sw^4*(15 - 58*swC^2 + 56*swC^4))*t))*
     SPList[SP[p1, p3], SP[p2, q1]])/(cw^4*cwC^2*mz^2*Pi^d*(mz^2 - s)*
     (-mzC^2 + s)*sw^4*swC^2) - ((I/9)*2^(-6 - d)*(-2 + d)*EL^6*
     (s*(-30*(3 - 10*swC^2 + 8*swC^4) - 64*sw^8*(15 - 70*swC^2 + 112*swC^4) + 
        48*sw^6*(45 - 178*swC^2 + 168*swC^4) - 
        24*sw^4*(75 - 266*swC^2 + 232*swC^4) + 
        4*sw^2*(165 - 566*swC^2 + 472*swC^4) + 
        3*d*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
          sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
            8*swC^4))) - 2*(9 - 30*swC^2 + 24*swC^4 + 
        sw^2*(-66 + 236*swC^2 - 208*swC^4) + 32*sw^8*(3 - 20*swC^2 + 
          32*swC^4) - 24*sw^6*(9 - 44*swC^2 + 48*swC^4) + 
        12*sw^4*(15 - 58*swC^2 + 56*swC^4))*t)*SPList[SP[p1, p3], 
      SP[p3, q1]])/(cw^4*cwC^2*Pi^d*(mz^2 - s)*(-mzC^2 + s)*sw^4*swC^2) - 
   ((I/3)*2^(-7 - d)*EL^6*
     (s^2*(3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
          sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
            8*swC^4)) + 4*(9 - 30*swC^2 + 24*swC^4 + 
          sw^8*(96 + 320*swC^2 - 512*swC^4) + 12*sw^4*(15 - 34*swC^2 + 
            8*swC^4) + 24*sw^6*(-9 + 2*swC^2 + 24*swC^4) - 
          2*sw^2*(33 - 94*swC^2 + 56*swC^4)) + 
        4*d*(-9 + 30*swC^2 - 24*swC^4 - 72*sw^6*(-3 + 3*swC^2 + 4*swC^4) + 
          32*sw^8*(-3 - 5*swC^2 + 8*swC^4) - 12*sw^4*(15 - 38*swC^2 + 
            16*swC^4) + 2*sw^2*(33 - 98*swC^2 + 64*swC^4))) + 
      2*s*(-15*d*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
          sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
            8*swC^4)) + 3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 
          8*sw^6*(-9 + 16*swC^2) + sw^2*(-22 + 68*swC^2 - 48*swC^4) + 
          12*sw^4*(5 - 14*swC^2 + 8*swC^4)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
          32*sw^8*(3 - 5*swC^2 + 8*swC^4) - 24*sw^6*(9 - 23*swC^2 + 
            12*swC^4) + 12*sw^4*(15 - 46*swC^2 + 32*swC^4) - 
          2*sw^2*(33 - 106*swC^2 + 80*swC^4)))*t + 
      4*(9 - 30*swC^2 + 24*swC^4 + sw^2*(-66 + 236*swC^2 - 208*swC^4) + 
        32*sw^8*(3 - 20*swC^2 + 32*swC^4) - 24*sw^6*(9 - 44*swC^2 + 
          48*swC^4) + 12*sw^4*(15 - 58*swC^2 + 56*swC^4))*t^2)*
     SPList[SP[p1, p3], SP[q1, q1]])/(cw^4*cwC^2*mz^2*Pi^d*(mz^2 - s)*
     (-mzC^2 + s)*sw^4*swC^2) + ((I/9)*2^(-6 - d)*EL^6*
     (3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
        sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
          8*swC^4)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
        32*sw^8*(3 - 5*swC^2 + 8*swC^4) - 24*sw^6*(9 - 23*swC^2 + 12*swC^4) + 
        12*sw^4*(15 - 46*swC^2 + 32*swC^4) - 2*sw^2*(33 - 106*swC^2 + 
          80*swC^4)) - 2*d*(9*(3 - 10*swC^2 + 8*swC^4) + 
        32*sw^8*(9 - 10*swC^2 + 16*swC^4) - 24*sw^6*(27 - 62*swC^2 + 
          24*swC^4) + 12*sw^4*(45 - 134*swC^2 + 88*swC^4) - 
        2*sw^2*(99 - 314*swC^2 + 232*swC^4)))*(s + t)*
     SPList[SP[p1, q1], SP[p1, q1]])/(cw^4*cwC^2*Pi^d*(mz^2 - s)*(-mzC^2 + s)*
     sw^4*swC^2) + ((I/9)*2^(-6 - d)*EL^6*
     ((-2 + d)*(s*(-18 + 60*swC^2 - 48*swC^4 - 24*sw^4*(15 - 34*swC^2 + 
            8*swC^4) + 64*sw^8*(-3 - 10*swC^2 + 16*swC^4) - 
          48*sw^6*(-9 + 2*swC^2 + 24*swC^4) + 4*sw^2*(33 - 94*swC^2 + 
            56*swC^4) + 3*d*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 
            8*sw^6*(-9 + 16*swC^2) + sw^2*(-22 + 68*swC^2 - 48*swC^4) + 
            12*sw^4*(5 - 14*swC^2 + 8*swC^4))) + 6*(-3 + d)*
         (3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
          sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
            8*swC^4))*t) + 
      (s^2*(3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 
            8*sw^6*(-9 + 16*swC^2) + sw^2*(-22 + 68*swC^2 - 48*swC^4) + 
            12*sw^4*(5 - 14*swC^2 + 8*swC^4)) + 4*(9 - 30*swC^2 + 24*swC^4 + 
            sw^8*(96 + 320*swC^2 - 512*swC^4) + 12*sw^4*(15 - 34*swC^2 + 
              8*swC^4) + 24*sw^6*(-9 + 2*swC^2 + 24*swC^4) - 
            2*sw^2*(33 - 94*swC^2 + 56*swC^4)) + 
          4*d*(-9 + 30*swC^2 - 24*swC^4 - 72*sw^6*(-3 + 3*swC^2 + 4*swC^4) + 
            32*sw^8*(-3 - 5*swC^2 + 8*swC^4) - 12*sw^4*(15 - 38*swC^2 + 
              16*swC^4) + 2*sw^2*(33 - 98*swC^2 + 64*swC^4))) + 
        2*s*(-15*d*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 
            8*sw^6*(-9 + 16*swC^2) + sw^2*(-22 + 68*swC^2 - 48*swC^4) + 
            12*sw^4*(5 - 14*swC^2 + 8*swC^4)) + 3*d^2*(3 + 32*sw^8 - 
            10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
            sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
              8*swC^4)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
            32*sw^8*(3 - 5*swC^2 + 8*swC^4) - 24*sw^6*(9 - 23*swC^2 + 
              12*swC^4) + 12*sw^4*(15 - 46*swC^2 + 32*swC^4) - 
            2*sw^2*(33 - 106*swC^2 + 80*swC^4)))*t + 
        4*(9 - 30*swC^2 + 24*swC^4 + sw^2*(-66 + 236*swC^2 - 208*swC^4) + 
          32*sw^8*(3 - 20*swC^2 + 32*swC^4) - 24*sw^6*(9 - 44*swC^2 + 
            48*swC^4) + 12*sw^4*(15 - 58*swC^2 + 56*swC^4))*t^2)/mz^2)*
     SPList[SP[p1, q1], SP[p2, p3]])/(cw^4*cwC^2*Pi^d*(mz^2 - s)*(-mzC^2 + s)*
     sw^4*swC^2) + ((I/9)*2^(-6 - d)*EL^6*
     ((-2 + d)*(s*(-18 + 60*swC^2 - 48*swC^4 - 24*sw^4*(15 - 34*swC^2 + 
            8*swC^4) + 64*sw^8*(-3 - 10*swC^2 + 16*swC^4) - 
          48*sw^6*(-9 + 2*swC^2 + 24*swC^4) + 4*sw^2*(33 - 94*swC^2 + 
            56*swC^4) + 3*d*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 
            8*sw^6*(-9 + 16*swC^2) + sw^2*(-22 + 68*swC^2 - 48*swC^4) + 
            12*sw^4*(5 - 14*swC^2 + 8*swC^4))) + 6*(-3 + d)*
         (3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
          sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
            8*swC^4))*t) + 
      (s^2*(3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 
            8*sw^6*(-9 + 16*swC^2) + sw^2*(-22 + 68*swC^2 - 48*swC^4) + 
            12*sw^4*(5 - 14*swC^2 + 8*swC^4)) + 4*(9 - 30*swC^2 + 24*swC^4 + 
            sw^8*(96 + 320*swC^2 - 512*swC^4) + 12*sw^4*(15 - 34*swC^2 + 
              8*swC^4) + 24*sw^6*(-9 + 2*swC^2 + 24*swC^4) - 
            2*sw^2*(33 - 94*swC^2 + 56*swC^4)) + 
          4*d*(-9 + 30*swC^2 - 24*swC^4 - 72*sw^6*(-3 + 3*swC^2 + 4*swC^4) + 
            32*sw^8*(-3 - 5*swC^2 + 8*swC^4) - 12*sw^4*(15 - 38*swC^2 + 
              16*swC^4) + 2*sw^2*(33 - 98*swC^2 + 64*swC^4))) + 
        2*s*(-15*d*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 
            8*sw^6*(-9 + 16*swC^2) + sw^2*(-22 + 68*swC^2 - 48*swC^4) + 
            12*sw^4*(5 - 14*swC^2 + 8*swC^4)) + 3*d^2*(3 + 32*sw^8 - 
            10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
            sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
              8*swC^4)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
            32*sw^8*(3 - 5*swC^2 + 8*swC^4) - 24*sw^6*(9 - 23*swC^2 + 
              12*swC^4) + 12*sw^4*(15 - 46*swC^2 + 32*swC^4) - 
            2*sw^2*(33 - 106*swC^2 + 80*swC^4)))*t + 
        4*(9 - 30*swC^2 + 24*swC^4 + sw^2*(-66 + 236*swC^2 - 208*swC^4) + 
          32*sw^8*(3 - 20*swC^2 + 32*swC^4) - 24*sw^6*(9 - 44*swC^2 + 
            48*swC^4) + 12*sw^4*(15 - 58*swC^2 + 56*swC^4))*t^2)/mz^2)*
     SPList[SP[p1, q1], SP[p2, q1]])/(cw^4*cwC^2*Pi^d*(mz^2 - s)*(-mzC^2 + s)*
     sw^4*swC^2) - ((I/9)*2^(-6 - d)*(-2 + d)*EL^6*
     (3*s*(d*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
          sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
            8*swC^4)) - 2*(9 - 30*swC^2 + 24*swC^4 - 
          22*sw^2*(3 - 10*swC^2 + 8*swC^4) + 60*sw^4*(3 - 10*swC^2 + 
            8*swC^4) - 72*sw^6*(3 - 10*swC^2 + 8*swC^4) + 
          32*sw^8*(3 - 10*swC^2 + 16*swC^4))) - 
      2*(9 - 30*swC^2 + 24*swC^4 + sw^2*(-66 + 236*swC^2 - 208*swC^4) + 
        32*sw^8*(3 - 20*swC^2 + 32*swC^4) - 24*sw^6*(9 - 44*swC^2 + 
          48*swC^4) + 12*sw^4*(15 - 58*swC^2 + 56*swC^4))*t)*
     SPList[SP[p1, q1], SP[p3, q1]])/(cw^4*cwC^2*Pi^d*(mz^2 - s)*(-mzC^2 + s)*
     sw^4*swC^2) + ((I/9)*2^(-7 - d)*EL^6*
     (s^2*(3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
          sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
            8*swC^4)) + 4*(9 - 30*swC^2 + 24*swC^4 + 
          sw^8*(96 + 320*swC^2 - 512*swC^4) + 12*sw^4*(15 - 34*swC^2 + 
            8*swC^4) + 24*sw^6*(-9 + 2*swC^2 + 24*swC^4) - 
          2*sw^2*(33 - 94*swC^2 + 56*swC^4)) + 
        4*d*(-9 + 30*swC^2 - 24*swC^4 - 72*sw^6*(-3 + 3*swC^2 + 4*swC^4) + 
          32*sw^8*(-3 - 5*swC^2 + 8*swC^4) - 12*sw^4*(15 - 38*swC^2 + 
            16*swC^4) + 2*sw^2*(33 - 98*swC^2 + 64*swC^4))) + 
      2*s*(-15*d*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
          sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
            8*swC^4)) + 3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 
          8*sw^6*(-9 + 16*swC^2) + sw^2*(-22 + 68*swC^2 - 48*swC^4) + 
          12*sw^4*(5 - 14*swC^2 + 8*swC^4)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
          32*sw^8*(3 - 5*swC^2 + 8*swC^4) - 24*sw^6*(9 - 23*swC^2 + 
            12*swC^4) + 12*sw^4*(15 - 46*swC^2 + 32*swC^4) - 
          2*sw^2*(33 - 106*swC^2 + 80*swC^4)))*t + 
      4*(9 - 30*swC^2 + 24*swC^4 + sw^2*(-66 + 236*swC^2 - 208*swC^4) + 
        32*sw^8*(3 - 20*swC^2 + 32*swC^4) - 24*sw^6*(9 - 44*swC^2 + 
          48*swC^4) + 12*sw^4*(15 - 58*swC^2 + 56*swC^4))*t^2)*
     SPList[SP[p1, q1], SP[q1, q1]])/(cw^4*cwC^2*mz^2*Pi^d*(mz^2 - s)*
     (-mzC^2 + s)*sw^4*swC^2) + ((I/9)*2^(-6 - d)*EL^6*
     (3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
        sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
          8*swC^4)) + 4*(9 - 30*swC^2 + 24*swC^4 + 
        sw^8*(96 + 320*swC^2 - 512*swC^4) + 12*sw^4*(15 - 34*swC^2 + 
          8*swC^4) + 24*sw^6*(-9 + 2*swC^2 + 24*swC^4) - 
        2*sw^2*(33 - 94*swC^2 + 56*swC^4)) + 
      4*d*(-9 + 30*swC^2 - 24*swC^4 - 72*sw^6*(-3 + 3*swC^2 + 4*swC^4) + 
        32*sw^8*(-3 - 5*swC^2 + 8*swC^4) - 12*sw^4*(15 - 38*swC^2 + 
          16*swC^4) + 2*sw^2*(33 - 98*swC^2 + 64*swC^4)))*t*
     SPList[SP[p2, p3], SP[p2, p3]])/(cw^4*cwC^2*Pi^d*(mz^2 - s)*(-mzC^2 + s)*
     sw^4*swC^2) + ((I/9)*2^(-5 - d)*EL^6*
     (3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
        sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
          8*swC^4)) + 4*(9 - 30*swC^2 + 24*swC^4 + 
        sw^8*(96 + 320*swC^2 - 512*swC^4) + 12*sw^4*(15 - 34*swC^2 + 
          8*swC^4) + 24*sw^6*(-9 + 2*swC^2 + 24*swC^4) - 
        2*sw^2*(33 - 94*swC^2 + 56*swC^4)) + 
      4*d*(-9 + 30*swC^2 - 24*swC^4 - 72*sw^6*(-3 + 3*swC^2 + 4*swC^4) + 
        32*sw^8*(-3 - 5*swC^2 + 8*swC^4) - 12*sw^4*(15 - 38*swC^2 + 
          16*swC^4) + 2*sw^2*(33 - 98*swC^2 + 64*swC^4)))*t*
     SPList[SP[p2, p3], SP[p2, q1]])/(cw^4*cwC^2*Pi^d*(mz^2 - s)*(-mzC^2 + s)*
     sw^4*swC^2) + ((I/9)*2^(-6 - d)*(-2 + d)*EL^6*
     (s*(-18 + 60*swC^2 - 48*swC^4 - 24*sw^4*(15 - 34*swC^2 + 8*swC^4) + 
        64*sw^8*(-3 - 10*swC^2 + 16*swC^4) - 48*sw^6*(-9 + 2*swC^2 + 
          24*swC^4) + 4*sw^2*(33 - 94*swC^2 + 56*swC^4) + 
        3*d*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
          sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
            8*swC^4))) - 2*(9 - 30*swC^2 + 24*swC^4 + 
        sw^2*(-66 + 236*swC^2 - 208*swC^4) + 32*sw^8*(3 - 20*swC^2 + 
          32*swC^4) - 24*sw^6*(9 - 44*swC^2 + 48*swC^4) + 
        12*sw^4*(15 - 58*swC^2 + 56*swC^4))*t)*SPList[SP[p2, p3], 
      SP[p3, q1]])/(cw^4*cwC^2*Pi^d*(mz^2 - s)*(-mzC^2 + s)*sw^4*swC^2) - 
   ((I/9)*2^(-7 - d)*EL^6*
     (s^2*(3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
          sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
            8*swC^4)) + 4*(9 - 30*swC^2 + 24*swC^4 + 
          sw^8*(96 + 320*swC^2 - 512*swC^4) + 12*sw^4*(15 - 34*swC^2 + 
            8*swC^4) + 24*sw^6*(-9 + 2*swC^2 + 24*swC^4) - 
          2*sw^2*(33 - 94*swC^2 + 56*swC^4)) + 
        4*d*(-9 + 30*swC^2 - 24*swC^4 - 72*sw^6*(-3 + 3*swC^2 + 4*swC^4) + 
          32*sw^8*(-3 - 5*swC^2 + 8*swC^4) - 12*sw^4*(15 - 38*swC^2 + 
            16*swC^4) + 2*sw^2*(33 - 98*swC^2 + 64*swC^4))) + 
      2*s*(-15*d*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
          sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
            8*swC^4)) + 3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 
          8*sw^6*(-9 + 16*swC^2) + sw^2*(-22 + 68*swC^2 - 48*swC^4) + 
          12*sw^4*(5 - 14*swC^2 + 8*swC^4)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
          32*sw^8*(3 - 5*swC^2 + 8*swC^4) - 24*sw^6*(9 - 23*swC^2 + 
            12*swC^4) + 12*sw^4*(15 - 46*swC^2 + 32*swC^4) - 
          2*sw^2*(33 - 106*swC^2 + 80*swC^4)))*t + 
      4*(9 - 30*swC^2 + 24*swC^4 + sw^2*(-66 + 236*swC^2 - 208*swC^4) + 
        32*sw^8*(3 - 20*swC^2 + 32*swC^4) - 24*sw^6*(9 - 44*swC^2 + 
          48*swC^4) + 12*sw^4*(15 - 58*swC^2 + 56*swC^4))*t^2)*
     SPList[SP[p2, p3], SP[q1, q1]])/(cw^4*cwC^2*mz^2*Pi^d*(mz^2 - s)*
     (-mzC^2 + s)*sw^4*swC^2) + ((I/9)*2^(-6 - d)*EL^6*
     (3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
        sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
          8*swC^4)) + 4*(9 - 30*swC^2 + 24*swC^4 + 
        sw^8*(96 + 320*swC^2 - 512*swC^4) + 12*sw^4*(15 - 34*swC^2 + 
          8*swC^4) + 24*sw^6*(-9 + 2*swC^2 + 24*swC^4) - 
        2*sw^2*(33 - 94*swC^2 + 56*swC^4)) + 
      4*d*(-9 + 30*swC^2 - 24*swC^4 - 72*sw^6*(-3 + 3*swC^2 + 4*swC^4) + 
        32*sw^8*(-3 - 5*swC^2 + 8*swC^4) - 12*sw^4*(15 - 38*swC^2 + 
          16*swC^4) + 2*sw^2*(33 - 98*swC^2 + 64*swC^4)))*t*
     SPList[SP[p2, q1], SP[p2, q1]])/(cw^4*cwC^2*Pi^d*(mz^2 - s)*(-mzC^2 + s)*
     sw^4*swC^2) + ((I/9)*2^(-6 - d)*(-2 + d)*EL^6*
     (s*(-18 + 60*swC^2 - 48*swC^4 - 24*sw^4*(15 - 34*swC^2 + 8*swC^4) + 
        64*sw^8*(-3 - 10*swC^2 + 16*swC^4) - 48*sw^6*(-9 + 2*swC^2 + 
          24*swC^4) + 4*sw^2*(33 - 94*swC^2 + 56*swC^4) + 
        3*d*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
          sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
            8*swC^4))) - 2*(9 - 30*swC^2 + 24*swC^4 + 
        sw^2*(-66 + 236*swC^2 - 208*swC^4) + 32*sw^8*(3 - 20*swC^2 + 
          32*swC^4) - 24*sw^6*(9 - 44*swC^2 + 48*swC^4) + 
        12*sw^4*(15 - 58*swC^2 + 56*swC^4))*t)*SPList[SP[p2, q1], 
      SP[p3, q1]])/(cw^4*cwC^2*Pi^d*(mz^2 - s)*(-mzC^2 + s)*sw^4*swC^2) - 
   ((I/9)*2^(-7 - d)*EL^6*
     (s^2*(3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
          sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
            8*swC^4)) + 4*(9 - 30*swC^2 + 24*swC^4 + 
          sw^8*(96 + 320*swC^2 - 512*swC^4) + 12*sw^4*(15 - 34*swC^2 + 
            8*swC^4) + 24*sw^6*(-9 + 2*swC^2 + 24*swC^4) - 
          2*sw^2*(33 - 94*swC^2 + 56*swC^4)) + 
        4*d*(-9 + 30*swC^2 - 24*swC^4 - 72*sw^6*(-3 + 3*swC^2 + 4*swC^4) + 
          32*sw^8*(-3 - 5*swC^2 + 8*swC^4) - 12*sw^4*(15 - 38*swC^2 + 
            16*swC^4) + 2*sw^2*(33 - 98*swC^2 + 64*swC^4))) + 
      2*s*(-15*d*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
          sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
            8*swC^4)) + 3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 
          8*sw^6*(-9 + 16*swC^2) + sw^2*(-22 + 68*swC^2 - 48*swC^4) + 
          12*sw^4*(5 - 14*swC^2 + 8*swC^4)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
          32*sw^8*(3 - 5*swC^2 + 8*swC^4) - 24*sw^6*(9 - 23*swC^2 + 
            12*swC^4) + 12*sw^4*(15 - 46*swC^2 + 32*swC^4) - 
          2*sw^2*(33 - 106*swC^2 + 80*swC^4)))*t + 
      4*(9 - 30*swC^2 + 24*swC^4 + sw^2*(-66 + 236*swC^2 - 208*swC^4) + 
        32*sw^8*(3 - 20*swC^2 + 32*swC^4) - 24*sw^6*(9 - 44*swC^2 + 
          48*swC^4) + 12*sw^4*(15 - 58*swC^2 + 56*swC^4))*t^2)*
     SPList[SP[p2, q1], SP[q1, q1]])/(cw^4*cwC^2*mz^2*Pi^d*(mz^2 - s)*
     (-mzC^2 + s)*sw^4*swC^2) - ((I/9)*2^(-5 - d)*(-2 + d)*EL^6*s*
     (9 - 30*swC^2 + 24*swC^4 + sw^2*(-66 + 236*swC^2 - 208*swC^4) + 
      32*sw^8*(3 - 20*swC^2 + 32*swC^4) - 24*sw^6*(9 - 44*swC^2 + 48*swC^4) + 
      12*sw^4*(15 - 58*swC^2 + 56*swC^4))*SPList[SP[p3, q1], SP[p3, q1]])/
    (cw^4*cwC^2*Pi^d*(mz^2 - s)*(-mzC^2 + s)*sw^4*swC^2) - 
   ((I/9)*2^(-8 - d)*EL^6*
     (s^2*(3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
          sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
            8*swC^4)) + 4*(9 - 30*swC^2 + 24*swC^4 + 
          sw^8*(96 + 320*swC^2 - 512*swC^4) + 12*sw^4*(15 - 34*swC^2 + 
            8*swC^4) + 24*sw^6*(-9 + 2*swC^2 + 24*swC^4) - 
          2*sw^2*(33 - 94*swC^2 + 56*swC^4)) + 
        4*d*(-9 + 30*swC^2 - 24*swC^4 - 72*sw^6*(-3 + 3*swC^2 + 4*swC^4) + 
          32*sw^8*(-3 - 5*swC^2 + 8*swC^4) - 12*sw^4*(15 - 38*swC^2 + 
            16*swC^4) + 2*sw^2*(33 - 98*swC^2 + 64*swC^4))) + 
      2*s*(-15*d*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
          sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
            8*swC^4)) + 3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 
          8*sw^6*(-9 + 16*swC^2) + sw^2*(-22 + 68*swC^2 - 48*swC^4) + 
          12*sw^4*(5 - 14*swC^2 + 8*swC^4)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
          32*sw^8*(3 - 5*swC^2 + 8*swC^4) - 24*sw^6*(9 - 23*swC^2 + 
            12*swC^4) + 12*sw^4*(15 - 46*swC^2 + 32*swC^4) - 
          2*sw^2*(33 - 106*swC^2 + 80*swC^4)))*t + 
      4*(9 - 30*swC^2 + 24*swC^4 + sw^2*(-66 + 236*swC^2 - 208*swC^4) + 
        32*sw^8*(3 - 20*swC^2 + 32*swC^4) - 24*sw^6*(9 - 44*swC^2 + 
          48*swC^4) + 12*sw^4*(15 - 58*swC^2 + 56*swC^4))*t^2)*
     SPList[SP[q1, q1], SP[q1, q1]])/(cw^4*cwC^2*mz^2*Pi^d*(mz^2 - s)*
     (-mzC^2 + s)*sw^4*swC^2)) + PropList[KiraPropagator[p1 - q1, 0], 
   KiraPropagator[-p2 - q1, 0], KiraPropagator[p1 - p3 - q1, 
    mz*Sqrt[GaugeXi[Z]]]]*
  (((I/9)*2^(-8 - d)*EL^6*t^2*
     (s^2*(3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
          sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
            8*swC^4)) + 4*(9 - 30*swC^2 + 24*swC^4 + 
          sw^8*(96 + 320*swC^2 - 512*swC^4) + 12*sw^4*(15 - 34*swC^2 + 
            8*swC^4) + 24*sw^6*(-9 + 2*swC^2 + 24*swC^4) - 
          2*sw^2*(33 - 94*swC^2 + 56*swC^4)) + 
        4*d*(-9 + 30*swC^2 - 24*swC^4 - 72*sw^6*(-3 + 3*swC^2 + 4*swC^4) + 
          32*sw^8*(-3 - 5*swC^2 + 8*swC^4) - 12*sw^4*(15 - 38*swC^2 + 
            16*swC^4) + 2*sw^2*(33 - 98*swC^2 + 64*swC^4))) + 
      2*s*(-15*d*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
          sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
            8*swC^4)) + 3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 
          8*sw^6*(-9 + 16*swC^2) + sw^2*(-22 + 68*swC^2 - 48*swC^4) + 
          12*sw^4*(5 - 14*swC^2 + 8*swC^4)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
          32*sw^8*(3 - 5*swC^2 + 8*swC^4) - 24*sw^6*(9 - 23*swC^2 + 
            12*swC^4) + 12*sw^4*(15 - 46*swC^2 + 32*swC^4) - 
          2*sw^2*(33 - 106*swC^2 + 80*swC^4)))*t + 
      4*(9 - 30*swC^2 + 24*swC^4 + sw^2*(-66 + 236*swC^2 - 208*swC^4) + 
        32*sw^8*(3 - 20*swC^2 + 32*swC^4) - 24*sw^6*(9 - 44*swC^2 + 
          48*swC^4) + 12*sw^4*(15 - 58*swC^2 + 56*swC^4))*t^2))/
    (cw^4*cwC^2*mz^2*Pi^d*(mz^2 - s)*(-mzC^2 + s)*sw^4*swC^2) - 
   ((I/9)*2^(-7 - d)*EL^6*t*
     (s^2*(3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
          sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
            8*swC^4)) + 4*(9 - 30*swC^2 + 24*swC^4 + 
          sw^8*(96 + 320*swC^2 - 512*swC^4) + 12*sw^4*(15 - 34*swC^2 + 
            8*swC^4) + 24*sw^6*(-9 + 2*swC^2 + 24*swC^4) - 
          2*sw^2*(33 - 94*swC^2 + 56*swC^4)) + 
        4*d*(-9 + 30*swC^2 - 24*swC^4 - 72*sw^6*(-3 + 3*swC^2 + 4*swC^4) + 
          32*sw^8*(-3 - 5*swC^2 + 8*swC^4) - 12*sw^4*(15 - 38*swC^2 + 
            16*swC^4) + 2*sw^2*(33 - 98*swC^2 + 64*swC^4))) + 
      2*s*(-15*d*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
          sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
            8*swC^4)) + 3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 
          8*sw^6*(-9 + 16*swC^2) + sw^2*(-22 + 68*swC^2 - 48*swC^4) + 
          12*sw^4*(5 - 14*swC^2 + 8*swC^4)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
          32*sw^8*(3 - 5*swC^2 + 8*swC^4) - 24*sw^6*(9 - 23*swC^2 + 
            12*swC^4) + 12*sw^4*(15 - 46*swC^2 + 32*swC^4) - 
          2*sw^2*(33 - 106*swC^2 + 80*swC^4)))*t + 
      4*(9 - 30*swC^2 + 24*swC^4 + sw^2*(-66 + 236*swC^2 - 208*swC^4) + 
        32*sw^8*(3 - 20*swC^2 + 32*swC^4) - 24*sw^6*(9 - 44*swC^2 + 
          48*swC^4) + 12*sw^4*(15 - 58*swC^2 + 56*swC^4))*t^2)*
     SPList[SP[p1, p2]])/(cw^4*cwC^2*mz^2*Pi^d*(mz^2 - s)*(-mzC^2 + s)*sw^4*
     swC^2) + ((I/3)*2^(-7 - d)*EL^6*t*
     (s^2*(3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
          sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
            8*swC^4)) + 4*(9 - 30*swC^2 + 24*swC^4 + 
          sw^8*(96 + 320*swC^2 - 512*swC^4) + 12*sw^4*(15 - 34*swC^2 + 
            8*swC^4) + 24*sw^6*(-9 + 2*swC^2 + 24*swC^4) - 
          2*sw^2*(33 - 94*swC^2 + 56*swC^4)) + 
        4*d*(-9 + 30*swC^2 - 24*swC^4 - 72*sw^6*(-3 + 3*swC^2 + 4*swC^4) + 
          32*sw^8*(-3 - 5*swC^2 + 8*swC^4) - 12*sw^4*(15 - 38*swC^2 + 
            16*swC^4) + 2*sw^2*(33 - 98*swC^2 + 64*swC^4))) + 
      2*s*(-15*d*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
          sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
            8*swC^4)) + 3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 
          8*sw^6*(-9 + 16*swC^2) + sw^2*(-22 + 68*swC^2 - 48*swC^4) + 
          12*sw^4*(5 - 14*swC^2 + 8*swC^4)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
          32*sw^8*(3 - 5*swC^2 + 8*swC^4) - 24*sw^6*(9 - 23*swC^2 + 
            12*swC^4) + 12*sw^4*(15 - 46*swC^2 + 32*swC^4) - 
          2*sw^2*(33 - 106*swC^2 + 80*swC^4)))*t + 
      4*(9 - 30*swC^2 + 24*swC^4 + sw^2*(-66 + 236*swC^2 - 208*swC^4) + 
        32*sw^8*(3 - 20*swC^2 + 32*swC^4) - 24*sw^6*(9 - 44*swC^2 + 
          48*swC^4) + 12*sw^4*(15 - 58*swC^2 + 56*swC^4))*t^2)*
     SPList[SP[p1, p3]])/(cw^4*cwC^2*mz^2*Pi^d*(mz^2 - s)*(-mzC^2 + s)*sw^4*
     swC^2) - ((I/9)*2^(-7 - d)*EL^6*t*
     (s^2*(3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
          sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
            8*swC^4)) + 4*(9 - 30*swC^2 + 24*swC^4 + 
          sw^8*(96 + 320*swC^2 - 512*swC^4) + 12*sw^4*(15 - 34*swC^2 + 
            8*swC^4) + 24*sw^6*(-9 + 2*swC^2 + 24*swC^4) - 
          2*sw^2*(33 - 94*swC^2 + 56*swC^4)) + 
        4*d*(-9 + 30*swC^2 - 24*swC^4 - 72*sw^6*(-3 + 3*swC^2 + 4*swC^4) + 
          32*sw^8*(-3 - 5*swC^2 + 8*swC^4) - 12*sw^4*(15 - 38*swC^2 + 
            16*swC^4) + 2*sw^2*(33 - 98*swC^2 + 64*swC^4))) + 
      2*s*(-15*d*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
          sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
            8*swC^4)) + 3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 
          8*sw^6*(-9 + 16*swC^2) + sw^2*(-22 + 68*swC^2 - 48*swC^4) + 
          12*sw^4*(5 - 14*swC^2 + 8*swC^4)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
          32*sw^8*(3 - 5*swC^2 + 8*swC^4) - 24*sw^6*(9 - 23*swC^2 + 
            12*swC^4) + 12*sw^4*(15 - 46*swC^2 + 32*swC^4) - 
          2*sw^2*(33 - 106*swC^2 + 80*swC^4)))*t + 
      4*(9 - 30*swC^2 + 24*swC^4 + sw^2*(-66 + 236*swC^2 - 208*swC^4) + 
        32*sw^8*(3 - 20*swC^2 + 32*swC^4) - 24*sw^6*(9 - 44*swC^2 + 
          48*swC^4) + 12*sw^4*(15 - 58*swC^2 + 56*swC^4))*t^2)*
     SPList[SP[p1, q1]])/(cw^4*cwC^2*mz^2*Pi^d*(mz^2 - s)*(-mzC^2 + s)*sw^4*
     swC^2) + ((I/9)*2^(-7 - d)*EL^6*t*
     (s^2*(3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
          sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
            8*swC^4)) + 4*(9 - 30*swC^2 + 24*swC^4 + 
          sw^8*(96 + 320*swC^2 - 512*swC^4) + 12*sw^4*(15 - 34*swC^2 + 
            8*swC^4) + 24*sw^6*(-9 + 2*swC^2 + 24*swC^4) - 
          2*sw^2*(33 - 94*swC^2 + 56*swC^4)) + 
        4*d*(-9 + 30*swC^2 - 24*swC^4 - 72*sw^6*(-3 + 3*swC^2 + 4*swC^4) + 
          32*sw^8*(-3 - 5*swC^2 + 8*swC^4) - 12*sw^4*(15 - 38*swC^2 + 
            16*swC^4) + 2*sw^2*(33 - 98*swC^2 + 64*swC^4))) + 
      2*s*(-15*d*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
          sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
            8*swC^4)) + 3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 
          8*sw^6*(-9 + 16*swC^2) + sw^2*(-22 + 68*swC^2 - 48*swC^4) + 
          12*sw^4*(5 - 14*swC^2 + 8*swC^4)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
          32*sw^8*(3 - 5*swC^2 + 8*swC^4) - 24*sw^6*(9 - 23*swC^2 + 
            12*swC^4) + 12*sw^4*(15 - 46*swC^2 + 32*swC^4) - 
          2*sw^2*(33 - 106*swC^2 + 80*swC^4)))*t + 
      4*(9 - 30*swC^2 + 24*swC^4 + sw^2*(-66 + 236*swC^2 - 208*swC^4) + 
        32*sw^8*(3 - 20*swC^2 + 32*swC^4) - 24*sw^6*(9 - 44*swC^2 + 
          48*swC^4) + 12*sw^4*(15 - 58*swC^2 + 56*swC^4))*t^2)*
     SPList[SP[p2, p3]])/(cw^4*cwC^2*mz^2*Pi^d*(mz^2 - s)*(-mzC^2 + s)*sw^4*
     swC^2) + ((I/9)*2^(-7 - d)*EL^6*t*
     (s^2*(3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
          sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
            8*swC^4)) + 4*(9 - 30*swC^2 + 24*swC^4 + 
          sw^8*(96 + 320*swC^2 - 512*swC^4) + 12*sw^4*(15 - 34*swC^2 + 
            8*swC^4) + 24*sw^6*(-9 + 2*swC^2 + 24*swC^4) - 
          2*sw^2*(33 - 94*swC^2 + 56*swC^4)) + 
        4*d*(-9 + 30*swC^2 - 24*swC^4 - 72*sw^6*(-3 + 3*swC^2 + 4*swC^4) + 
          32*sw^8*(-3 - 5*swC^2 + 8*swC^4) - 12*sw^4*(15 - 38*swC^2 + 
            16*swC^4) + 2*sw^2*(33 - 98*swC^2 + 64*swC^4))) + 
      2*s*(-15*d*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
          sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
            8*swC^4)) + 3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 
          8*sw^6*(-9 + 16*swC^2) + sw^2*(-22 + 68*swC^2 - 48*swC^4) + 
          12*sw^4*(5 - 14*swC^2 + 8*swC^4)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
          32*sw^8*(3 - 5*swC^2 + 8*swC^4) - 24*sw^6*(9 - 23*swC^2 + 
            12*swC^4) + 12*sw^4*(15 - 46*swC^2 + 32*swC^4) - 
          2*sw^2*(33 - 106*swC^2 + 80*swC^4)))*t + 
      4*(9 - 30*swC^2 + 24*swC^4 + sw^2*(-66 + 236*swC^2 - 208*swC^4) + 
        32*sw^8*(3 - 20*swC^2 + 32*swC^4) - 24*sw^6*(9 - 44*swC^2 + 
          48*swC^4) + 12*sw^4*(15 - 58*swC^2 + 56*swC^4))*t^2)*
     SPList[SP[p2, q1]])/(cw^4*cwC^2*mz^2*Pi^d*(mz^2 - s)*(-mzC^2 + s)*sw^4*
     swC^2) + ((I/9)*2^(-7 - d)*EL^6*t*
     (s^2*(3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
          sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
            8*swC^4)) + 4*(9 - 30*swC^2 + 24*swC^4 + 
          sw^8*(96 + 320*swC^2 - 512*swC^4) + 12*sw^4*(15 - 34*swC^2 + 
            8*swC^4) + 24*sw^6*(-9 + 2*swC^2 + 24*swC^4) - 
          2*sw^2*(33 - 94*swC^2 + 56*swC^4)) + 
        4*d*(-9 + 30*swC^2 - 24*swC^4 - 72*sw^6*(-3 + 3*swC^2 + 4*swC^4) + 
          32*sw^8*(-3 - 5*swC^2 + 8*swC^4) - 12*sw^4*(15 - 38*swC^2 + 
            16*swC^4) + 2*sw^2*(33 - 98*swC^2 + 64*swC^4))) + 
      2*s*(-15*d*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
          sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
            8*swC^4)) + 3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 
          8*sw^6*(-9 + 16*swC^2) + sw^2*(-22 + 68*swC^2 - 48*swC^4) + 
          12*sw^4*(5 - 14*swC^2 + 8*swC^4)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
          32*sw^8*(3 - 5*swC^2 + 8*swC^4) - 24*sw^6*(9 - 23*swC^2 + 
            12*swC^4) + 12*sw^4*(15 - 46*swC^2 + 32*swC^4) - 
          2*sw^2*(33 - 106*swC^2 + 80*swC^4)))*t + 
      4*(9 - 30*swC^2 + 24*swC^4 + sw^2*(-66 + 236*swC^2 - 208*swC^4) + 
        32*sw^8*(3 - 20*swC^2 + 32*swC^4) - 24*sw^6*(9 - 44*swC^2 + 
          48*swC^4) + 12*sw^4*(15 - 58*swC^2 + 56*swC^4))*t^2)*
     SPList[SP[q1, q1]])/(cw^4*cwC^2*mz^2*Pi^d*(mz^2 - s)*(-mzC^2 + s)*sw^4*
     swC^2) - ((I/9)*2^(-6 - d)*EL^6*
     (s^2*(3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
          sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
            8*swC^4)) + 4*(9 - 30*swC^2 + 24*swC^4 + 
          sw^8*(96 + 320*swC^2 - 512*swC^4) + 12*sw^4*(15 - 34*swC^2 + 
            8*swC^4) + 24*sw^6*(-9 + 2*swC^2 + 24*swC^4) - 
          2*sw^2*(33 - 94*swC^2 + 56*swC^4)) + 
        4*d*(-9 + 30*swC^2 - 24*swC^4 - 72*sw^6*(-3 + 3*swC^2 + 4*swC^4) + 
          32*sw^8*(-3 - 5*swC^2 + 8*swC^4) - 12*sw^4*(15 - 38*swC^2 + 
            16*swC^4) + 2*sw^2*(33 - 98*swC^2 + 64*swC^4))) + 
      2*s*(-15*d*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
          sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
            8*swC^4)) + 3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 
          8*sw^6*(-9 + 16*swC^2) + sw^2*(-22 + 68*swC^2 - 48*swC^4) + 
          12*sw^4*(5 - 14*swC^2 + 8*swC^4)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
          32*sw^8*(3 - 5*swC^2 + 8*swC^4) - 24*sw^6*(9 - 23*swC^2 + 
            12*swC^4) + 12*sw^4*(15 - 46*swC^2 + 32*swC^4) - 
          2*sw^2*(33 - 106*swC^2 + 80*swC^4)))*t + 
      4*(9 - 30*swC^2 + 24*swC^4 + sw^2*(-66 + 236*swC^2 - 208*swC^4) + 
        32*sw^8*(3 - 20*swC^2 + 32*swC^4) - 24*sw^6*(9 - 44*swC^2 + 
          48*swC^4) + 12*sw^4*(15 - 58*swC^2 + 56*swC^4))*t^2)*
     SPList[SP[p1, p2], SP[p1, p3]])/(cw^4*cwC^2*mz^2*Pi^d*(mz^2 - s)*
     (-mzC^2 + s)*sw^4*swC^2) + ((I/9)*2^(-6 - d)*EL^6*
     (s^2*(3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
          sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
            8*swC^4)) + 4*(9 - 30*swC^2 + 24*swC^4 + 
          sw^8*(96 + 320*swC^2 - 512*swC^4) + 12*sw^4*(15 - 34*swC^2 + 
            8*swC^4) + 24*sw^6*(-9 + 2*swC^2 + 24*swC^4) - 
          2*sw^2*(33 - 94*swC^2 + 56*swC^4)) + 
        4*d*(-9 + 30*swC^2 - 24*swC^4 - 72*sw^6*(-3 + 3*swC^2 + 4*swC^4) + 
          32*sw^8*(-3 - 5*swC^2 + 8*swC^4) - 12*sw^4*(15 - 38*swC^2 + 
            16*swC^4) + 2*sw^2*(33 - 98*swC^2 + 64*swC^4))) + 
      2*s*(-15*d*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
          sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
            8*swC^4)) + 3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 
          8*sw^6*(-9 + 16*swC^2) + sw^2*(-22 + 68*swC^2 - 48*swC^4) + 
          12*sw^4*(5 - 14*swC^2 + 8*swC^4)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
          32*sw^8*(3 - 5*swC^2 + 8*swC^4) - 24*sw^6*(9 - 23*swC^2 + 
            12*swC^4) + 12*sw^4*(15 - 46*swC^2 + 32*swC^4) - 
          2*sw^2*(33 - 106*swC^2 + 80*swC^4)))*t + 
      4*(9 - 30*swC^2 + 24*swC^4 + sw^2*(-66 + 236*swC^2 - 208*swC^4) + 
        32*sw^8*(3 - 20*swC^2 + 32*swC^4) - 24*sw^6*(9 - 44*swC^2 + 
          48*swC^4) + 12*sw^4*(15 - 58*swC^2 + 56*swC^4))*t^2)*
     SPList[SP[p1, p2], SP[p1, q1]])/(cw^4*cwC^2*mz^2*Pi^d*(mz^2 - s)*
     (-mzC^2 + s)*sw^4*swC^2) - ((I/9)*2^(-7 - d)*EL^6*
     (s^2*(3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
          sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
            8*swC^4)) + 4*(9 - 30*swC^2 + 24*swC^4 + 
          sw^8*(96 + 320*swC^2 - 512*swC^4) + 12*sw^4*(15 - 34*swC^2 + 
            8*swC^4) + 24*sw^6*(-9 + 2*swC^2 + 24*swC^4) - 
          2*sw^2*(33 - 94*swC^2 + 56*swC^4)) + 
        4*d*(-9 + 30*swC^2 - 24*swC^4 - 72*sw^6*(-3 + 3*swC^2 + 4*swC^4) + 
          32*sw^8*(-3 - 5*swC^2 + 8*swC^4) - 12*sw^4*(15 - 38*swC^2 + 
            16*swC^4) + 2*sw^2*(33 - 98*swC^2 + 64*swC^4))) + 
      2*s*(-15*d*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
          sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
            8*swC^4)) + 3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 
          8*sw^6*(-9 + 16*swC^2) + sw^2*(-22 + 68*swC^2 - 48*swC^4) + 
          12*sw^4*(5 - 14*swC^2 + 8*swC^4)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
          32*sw^8*(3 - 5*swC^2 + 8*swC^4) - 24*sw^6*(9 - 23*swC^2 + 
            12*swC^4) + 12*sw^4*(15 - 46*swC^2 + 32*swC^4) - 
          2*sw^2*(33 - 106*swC^2 + 80*swC^4)))*t + 
      4*(9 - 30*swC^2 + 24*swC^4 + sw^2*(-66 + 236*swC^2 - 208*swC^4) + 
        32*sw^8*(3 - 20*swC^2 + 32*swC^4) - 24*sw^6*(9 - 44*swC^2 + 
          48*swC^4) + 12*sw^4*(15 - 58*swC^2 + 56*swC^4))*t^2)*
     SPList[SP[p1, p2], SP[q1, q1]])/(cw^4*cwC^2*mz^2*Pi^d*(mz^2 - s)*
     (-mzC^2 + s)*sw^4*swC^2) + ((I/9)*2^(-5 - d)*EL^6*
     (s^2*(3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
          sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
            8*swC^4)) + 4*(9 - 30*swC^2 + 24*swC^4 + 
          sw^8*(96 + 320*swC^2 - 512*swC^4) + 12*sw^4*(15 - 34*swC^2 + 
            8*swC^4) + 24*sw^6*(-9 + 2*swC^2 + 24*swC^4) - 
          2*sw^2*(33 - 94*swC^2 + 56*swC^4)) + 
        4*d*(-9 + 30*swC^2 - 24*swC^4 - 72*sw^6*(-3 + 3*swC^2 + 4*swC^4) + 
          32*sw^8*(-3 - 5*swC^2 + 8*swC^4) - 12*sw^4*(15 - 38*swC^2 + 
            16*swC^4) + 2*sw^2*(33 - 98*swC^2 + 64*swC^4))) + 
      2*s*(-15*d*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
          sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
            8*swC^4)) + 3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 
          8*sw^6*(-9 + 16*swC^2) + sw^2*(-22 + 68*swC^2 - 48*swC^4) + 
          12*sw^4*(5 - 14*swC^2 + 8*swC^4)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
          32*sw^8*(3 - 5*swC^2 + 8*swC^4) - 24*sw^6*(9 - 23*swC^2 + 
            12*swC^4) + 12*sw^4*(15 - 46*swC^2 + 32*swC^4) - 
          2*sw^2*(33 - 106*swC^2 + 80*swC^4)))*t + 
      4*(9 - 30*swC^2 + 24*swC^4 + sw^2*(-66 + 236*swC^2 - 208*swC^4) + 
        32*sw^8*(3 - 20*swC^2 + 32*swC^4) - 24*sw^6*(9 - 44*swC^2 + 
          48*swC^4) + 12*sw^4*(15 - 58*swC^2 + 56*swC^4))*t^2)*
     SPList[SP[p1, p3], SP[p1, p3]])/(cw^4*cwC^2*mz^2*Pi^d*(mz^2 - s)*
     (-mzC^2 + s)*sw^4*swC^2) - ((I/9)*2^(-5 - d)*EL^6*
     (s^2*(3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
          sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
            8*swC^4)) + 4*(9 - 30*swC^2 + 24*swC^4 + 
          sw^8*(96 + 320*swC^2 - 512*swC^4) + 12*sw^4*(15 - 34*swC^2 + 
            8*swC^4) + 24*sw^6*(-9 + 2*swC^2 + 24*swC^4) - 
          2*sw^2*(33 - 94*swC^2 + 56*swC^4)) + 
        4*d*(-9 + 30*swC^2 - 24*swC^4 - 72*sw^6*(-3 + 3*swC^2 + 4*swC^4) + 
          32*sw^8*(-3 - 5*swC^2 + 8*swC^4) - 12*sw^4*(15 - 38*swC^2 + 
            16*swC^4) + 2*sw^2*(33 - 98*swC^2 + 64*swC^4))) + 
      2*s*(-15*d*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
          sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
            8*swC^4)) + 3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 
          8*sw^6*(-9 + 16*swC^2) + sw^2*(-22 + 68*swC^2 - 48*swC^4) + 
          12*sw^4*(5 - 14*swC^2 + 8*swC^4)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
          32*sw^8*(3 - 5*swC^2 + 8*swC^4) - 24*sw^6*(9 - 23*swC^2 + 
            12*swC^4) + 12*sw^4*(15 - 46*swC^2 + 32*swC^4) - 
          2*sw^2*(33 - 106*swC^2 + 80*swC^4)))*t + 
      4*(9 - 30*swC^2 + 24*swC^4 + sw^2*(-66 + 236*swC^2 - 208*swC^4) + 
        32*sw^8*(3 - 20*swC^2 + 32*swC^4) - 24*sw^6*(9 - 44*swC^2 + 
          48*swC^4) + 12*sw^4*(15 - 58*swC^2 + 56*swC^4))*t^2)*
     SPList[SP[p1, p3], SP[p1, q1]])/(cw^4*cwC^2*mz^2*Pi^d*(mz^2 - s)*
     (-mzC^2 + s)*sw^4*swC^2) + ((I/9)*2^(-6 - d)*EL^6*
     (s^2*(3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
          sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
            8*swC^4)) + 4*(9 - 30*swC^2 + 24*swC^4 + 
          sw^8*(96 + 320*swC^2 - 512*swC^4) + 12*sw^4*(15 - 34*swC^2 + 
            8*swC^4) + 24*sw^6*(-9 + 2*swC^2 + 24*swC^4) - 
          2*sw^2*(33 - 94*swC^2 + 56*swC^4)) + 
        4*d*(-9 + 30*swC^2 - 24*swC^4 - 72*sw^6*(-3 + 3*swC^2 + 4*swC^4) + 
          32*sw^8*(-3 - 5*swC^2 + 8*swC^4) - 12*sw^4*(15 - 38*swC^2 + 
            16*swC^4) + 2*sw^2*(33 - 98*swC^2 + 64*swC^4))) + 
      2*s*(-15*d*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
          sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
            8*swC^4)) + 3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 
          8*sw^6*(-9 + 16*swC^2) + sw^2*(-22 + 68*swC^2 - 48*swC^4) + 
          12*sw^4*(5 - 14*swC^2 + 8*swC^4)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
          32*sw^8*(3 - 5*swC^2 + 8*swC^4) - 24*sw^6*(9 - 23*swC^2 + 
            12*swC^4) + 12*sw^4*(15 - 46*swC^2 + 32*swC^4) - 
          2*sw^2*(33 - 106*swC^2 + 80*swC^4)))*t + 
      4*(9 - 30*swC^2 + 24*swC^4 + sw^2*(-66 + 236*swC^2 - 208*swC^4) + 
        32*sw^8*(3 - 20*swC^2 + 32*swC^4) - 24*sw^6*(9 - 44*swC^2 + 
          48*swC^4) + 12*sw^4*(15 - 58*swC^2 + 56*swC^4))*t^2)*
     SPList[SP[p1, p3], SP[p2, p3]])/(cw^4*cwC^2*mz^2*Pi^d*(mz^2 - s)*
     (-mzC^2 + s)*sw^4*swC^2) + ((I/9)*2^(-6 - d)*EL^6*
     (s^2*(3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
          sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
            8*swC^4)) + 4*(9 - 30*swC^2 + 24*swC^4 + 
          sw^8*(96 + 320*swC^2 - 512*swC^4) + 12*sw^4*(15 - 34*swC^2 + 
            8*swC^4) + 24*sw^6*(-9 + 2*swC^2 + 24*swC^4) - 
          2*sw^2*(33 - 94*swC^2 + 56*swC^4)) + 
        4*d*(-9 + 30*swC^2 - 24*swC^4 - 72*sw^6*(-3 + 3*swC^2 + 4*swC^4) + 
          32*sw^8*(-3 - 5*swC^2 + 8*swC^4) - 12*sw^4*(15 - 38*swC^2 + 
            16*swC^4) + 2*sw^2*(33 - 98*swC^2 + 64*swC^4))) + 
      2*s*(-15*d*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
          sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
            8*swC^4)) + 3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 
          8*sw^6*(-9 + 16*swC^2) + sw^2*(-22 + 68*swC^2 - 48*swC^4) + 
          12*sw^4*(5 - 14*swC^2 + 8*swC^4)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
          32*sw^8*(3 - 5*swC^2 + 8*swC^4) - 24*sw^6*(9 - 23*swC^2 + 
            12*swC^4) + 12*sw^4*(15 - 46*swC^2 + 32*swC^4) - 
          2*sw^2*(33 - 106*swC^2 + 80*swC^4)))*t + 
      4*(9 - 30*swC^2 + 24*swC^4 + sw^2*(-66 + 236*swC^2 - 208*swC^4) + 
        32*sw^8*(3 - 20*swC^2 + 32*swC^4) - 24*sw^6*(9 - 44*swC^2 + 
          48*swC^4) + 12*sw^4*(15 - 58*swC^2 + 56*swC^4))*t^2)*
     SPList[SP[p1, p3], SP[p2, q1]])/(cw^4*cwC^2*mz^2*Pi^d*(mz^2 - s)*
     (-mzC^2 + s)*sw^4*swC^2) + ((I/3)*2^(-7 - d)*EL^6*
     (s^2*(3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
          sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
            8*swC^4)) + 4*(9 - 30*swC^2 + 24*swC^4 + 
          sw^8*(96 + 320*swC^2 - 512*swC^4) + 12*sw^4*(15 - 34*swC^2 + 
            8*swC^4) + 24*sw^6*(-9 + 2*swC^2 + 24*swC^4) - 
          2*sw^2*(33 - 94*swC^2 + 56*swC^4)) + 
        4*d*(-9 + 30*swC^2 - 24*swC^4 - 72*sw^6*(-3 + 3*swC^2 + 4*swC^4) + 
          32*sw^8*(-3 - 5*swC^2 + 8*swC^4) - 12*sw^4*(15 - 38*swC^2 + 
            16*swC^4) + 2*sw^2*(33 - 98*swC^2 + 64*swC^4))) + 
      2*s*(-15*d*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
          sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
            8*swC^4)) + 3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 
          8*sw^6*(-9 + 16*swC^2) + sw^2*(-22 + 68*swC^2 - 48*swC^4) + 
          12*sw^4*(5 - 14*swC^2 + 8*swC^4)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
          32*sw^8*(3 - 5*swC^2 + 8*swC^4) - 24*sw^6*(9 - 23*swC^2 + 
            12*swC^4) + 12*sw^4*(15 - 46*swC^2 + 32*swC^4) - 
          2*sw^2*(33 - 106*swC^2 + 80*swC^4)))*t + 
      4*(9 - 30*swC^2 + 24*swC^4 + sw^2*(-66 + 236*swC^2 - 208*swC^4) + 
        32*sw^8*(3 - 20*swC^2 + 32*swC^4) - 24*sw^6*(9 - 44*swC^2 + 
          48*swC^4) + 12*sw^4*(15 - 58*swC^2 + 56*swC^4))*t^2)*
     SPList[SP[p1, p3], SP[q1, q1]])/(cw^4*cwC^2*mz^2*Pi^d*(mz^2 - s)*
     (-mzC^2 + s)*sw^4*swC^2) - ((I/9)*2^(-6 - d)*EL^6*
     (s^2*(3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
          sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
            8*swC^4)) + 4*(9 - 30*swC^2 + 24*swC^4 + 
          sw^8*(96 + 320*swC^2 - 512*swC^4) + 12*sw^4*(15 - 34*swC^2 + 
            8*swC^4) + 24*sw^6*(-9 + 2*swC^2 + 24*swC^4) - 
          2*sw^2*(33 - 94*swC^2 + 56*swC^4)) + 
        4*d*(-9 + 30*swC^2 - 24*swC^4 - 72*sw^6*(-3 + 3*swC^2 + 4*swC^4) + 
          32*sw^8*(-3 - 5*swC^2 + 8*swC^4) - 12*sw^4*(15 - 38*swC^2 + 
            16*swC^4) + 2*sw^2*(33 - 98*swC^2 + 64*swC^4))) + 
      2*s*(-15*d*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
          sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
            8*swC^4)) + 3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 
          8*sw^6*(-9 + 16*swC^2) + sw^2*(-22 + 68*swC^2 - 48*swC^4) + 
          12*sw^4*(5 - 14*swC^2 + 8*swC^4)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
          32*sw^8*(3 - 5*swC^2 + 8*swC^4) - 24*sw^6*(9 - 23*swC^2 + 
            12*swC^4) + 12*sw^4*(15 - 46*swC^2 + 32*swC^4) - 
          2*sw^2*(33 - 106*swC^2 + 80*swC^4)))*t + 
      4*(9 - 30*swC^2 + 24*swC^4 + sw^2*(-66 + 236*swC^2 - 208*swC^4) + 
        32*sw^8*(3 - 20*swC^2 + 32*swC^4) - 24*sw^6*(9 - 44*swC^2 + 
          48*swC^4) + 12*sw^4*(15 - 58*swC^2 + 56*swC^4))*t^2)*
     SPList[SP[p1, q1], SP[p2, p3]])/(cw^4*cwC^2*mz^2*Pi^d*(mz^2 - s)*
     (-mzC^2 + s)*sw^4*swC^2) - ((I/9)*2^(-6 - d)*EL^6*
     (s^2*(3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
          sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
            8*swC^4)) + 4*(9 - 30*swC^2 + 24*swC^4 + 
          sw^8*(96 + 320*swC^2 - 512*swC^4) + 12*sw^4*(15 - 34*swC^2 + 
            8*swC^4) + 24*sw^6*(-9 + 2*swC^2 + 24*swC^4) - 
          2*sw^2*(33 - 94*swC^2 + 56*swC^4)) + 
        4*d*(-9 + 30*swC^2 - 24*swC^4 - 72*sw^6*(-3 + 3*swC^2 + 4*swC^4) + 
          32*sw^8*(-3 - 5*swC^2 + 8*swC^4) - 12*sw^4*(15 - 38*swC^2 + 
            16*swC^4) + 2*sw^2*(33 - 98*swC^2 + 64*swC^4))) + 
      2*s*(-15*d*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
          sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
            8*swC^4)) + 3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 
          8*sw^6*(-9 + 16*swC^2) + sw^2*(-22 + 68*swC^2 - 48*swC^4) + 
          12*sw^4*(5 - 14*swC^2 + 8*swC^4)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
          32*sw^8*(3 - 5*swC^2 + 8*swC^4) - 24*sw^6*(9 - 23*swC^2 + 
            12*swC^4) + 12*sw^4*(15 - 46*swC^2 + 32*swC^4) - 
          2*sw^2*(33 - 106*swC^2 + 80*swC^4)))*t + 
      4*(9 - 30*swC^2 + 24*swC^4 + sw^2*(-66 + 236*swC^2 - 208*swC^4) + 
        32*sw^8*(3 - 20*swC^2 + 32*swC^4) - 24*sw^6*(9 - 44*swC^2 + 
          48*swC^4) + 12*sw^4*(15 - 58*swC^2 + 56*swC^4))*t^2)*
     SPList[SP[p1, q1], SP[p2, q1]])/(cw^4*cwC^2*mz^2*Pi^d*(mz^2 - s)*
     (-mzC^2 + s)*sw^4*swC^2) - ((I/9)*2^(-7 - d)*EL^6*
     (s^2*(3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
          sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
            8*swC^4)) + 4*(9 - 30*swC^2 + 24*swC^4 + 
          sw^8*(96 + 320*swC^2 - 512*swC^4) + 12*sw^4*(15 - 34*swC^2 + 
            8*swC^4) + 24*sw^6*(-9 + 2*swC^2 + 24*swC^4) - 
          2*sw^2*(33 - 94*swC^2 + 56*swC^4)) + 
        4*d*(-9 + 30*swC^2 - 24*swC^4 - 72*sw^6*(-3 + 3*swC^2 + 4*swC^4) + 
          32*sw^8*(-3 - 5*swC^2 + 8*swC^4) - 12*sw^4*(15 - 38*swC^2 + 
            16*swC^4) + 2*sw^2*(33 - 98*swC^2 + 64*swC^4))) + 
      2*s*(-15*d*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
          sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
            8*swC^4)) + 3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 
          8*sw^6*(-9 + 16*swC^2) + sw^2*(-22 + 68*swC^2 - 48*swC^4) + 
          12*sw^4*(5 - 14*swC^2 + 8*swC^4)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
          32*sw^8*(3 - 5*swC^2 + 8*swC^4) - 24*sw^6*(9 - 23*swC^2 + 
            12*swC^4) + 12*sw^4*(15 - 46*swC^2 + 32*swC^4) - 
          2*sw^2*(33 - 106*swC^2 + 80*swC^4)))*t + 
      4*(9 - 30*swC^2 + 24*swC^4 + sw^2*(-66 + 236*swC^2 - 208*swC^4) + 
        32*sw^8*(3 - 20*swC^2 + 32*swC^4) - 24*sw^6*(9 - 44*swC^2 + 
          48*swC^4) + 12*sw^4*(15 - 58*swC^2 + 56*swC^4))*t^2)*
     SPList[SP[p1, q1], SP[q1, q1]])/(cw^4*cwC^2*mz^2*Pi^d*(mz^2 - s)*
     (-mzC^2 + s)*sw^4*swC^2) + ((I/9)*2^(-7 - d)*EL^6*
     (s^2*(3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
          sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
            8*swC^4)) + 4*(9 - 30*swC^2 + 24*swC^4 + 
          sw^8*(96 + 320*swC^2 - 512*swC^4) + 12*sw^4*(15 - 34*swC^2 + 
            8*swC^4) + 24*sw^6*(-9 + 2*swC^2 + 24*swC^4) - 
          2*sw^2*(33 - 94*swC^2 + 56*swC^4)) + 
        4*d*(-9 + 30*swC^2 - 24*swC^4 - 72*sw^6*(-3 + 3*swC^2 + 4*swC^4) + 
          32*sw^8*(-3 - 5*swC^2 + 8*swC^4) - 12*sw^4*(15 - 38*swC^2 + 
            16*swC^4) + 2*sw^2*(33 - 98*swC^2 + 64*swC^4))) + 
      2*s*(-15*d*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
          sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
            8*swC^4)) + 3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 
          8*sw^6*(-9 + 16*swC^2) + sw^2*(-22 + 68*swC^2 - 48*swC^4) + 
          12*sw^4*(5 - 14*swC^2 + 8*swC^4)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
          32*sw^8*(3 - 5*swC^2 + 8*swC^4) - 24*sw^6*(9 - 23*swC^2 + 
            12*swC^4) + 12*sw^4*(15 - 46*swC^2 + 32*swC^4) - 
          2*sw^2*(33 - 106*swC^2 + 80*swC^4)))*t + 
      4*(9 - 30*swC^2 + 24*swC^4 + sw^2*(-66 + 236*swC^2 - 208*swC^4) + 
        32*sw^8*(3 - 20*swC^2 + 32*swC^4) - 24*sw^6*(9 - 44*swC^2 + 
          48*swC^4) + 12*sw^4*(15 - 58*swC^2 + 56*swC^4))*t^2)*
     SPList[SP[p2, p3], SP[q1, q1]])/(cw^4*cwC^2*mz^2*Pi^d*(mz^2 - s)*
     (-mzC^2 + s)*sw^4*swC^2) + ((I/9)*2^(-7 - d)*EL^6*
     (s^2*(3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
          sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
            8*swC^4)) + 4*(9 - 30*swC^2 + 24*swC^4 + 
          sw^8*(96 + 320*swC^2 - 512*swC^4) + 12*sw^4*(15 - 34*swC^2 + 
            8*swC^4) + 24*sw^6*(-9 + 2*swC^2 + 24*swC^4) - 
          2*sw^2*(33 - 94*swC^2 + 56*swC^4)) + 
        4*d*(-9 + 30*swC^2 - 24*swC^4 - 72*sw^6*(-3 + 3*swC^2 + 4*swC^4) + 
          32*sw^8*(-3 - 5*swC^2 + 8*swC^4) - 12*sw^4*(15 - 38*swC^2 + 
            16*swC^4) + 2*sw^2*(33 - 98*swC^2 + 64*swC^4))) + 
      2*s*(-15*d*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
          sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
            8*swC^4)) + 3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 
          8*sw^6*(-9 + 16*swC^2) + sw^2*(-22 + 68*swC^2 - 48*swC^4) + 
          12*sw^4*(5 - 14*swC^2 + 8*swC^4)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
          32*sw^8*(3 - 5*swC^2 + 8*swC^4) - 24*sw^6*(9 - 23*swC^2 + 
            12*swC^4) + 12*sw^4*(15 - 46*swC^2 + 32*swC^4) - 
          2*sw^2*(33 - 106*swC^2 + 80*swC^4)))*t + 
      4*(9 - 30*swC^2 + 24*swC^4 + sw^2*(-66 + 236*swC^2 - 208*swC^4) + 
        32*sw^8*(3 - 20*swC^2 + 32*swC^4) - 24*sw^6*(9 - 44*swC^2 + 
          48*swC^4) + 12*sw^4*(15 - 58*swC^2 + 56*swC^4))*t^2)*
     SPList[SP[p2, q1], SP[q1, q1]])/(cw^4*cwC^2*mz^2*Pi^d*(mz^2 - s)*
     (-mzC^2 + s)*sw^4*swC^2) + ((I/9)*2^(-8 - d)*EL^6*
     (s^2*(3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
          sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
            8*swC^4)) + 4*(9 - 30*swC^2 + 24*swC^4 + 
          sw^8*(96 + 320*swC^2 - 512*swC^4) + 12*sw^4*(15 - 34*swC^2 + 
            8*swC^4) + 24*sw^6*(-9 + 2*swC^2 + 24*swC^4) - 
          2*sw^2*(33 - 94*swC^2 + 56*swC^4)) + 
        4*d*(-9 + 30*swC^2 - 24*swC^4 - 72*sw^6*(-3 + 3*swC^2 + 4*swC^4) + 
          32*sw^8*(-3 - 5*swC^2 + 8*swC^4) - 12*sw^4*(15 - 38*swC^2 + 
            16*swC^4) + 2*sw^2*(33 - 98*swC^2 + 64*swC^4))) + 
      2*s*(-15*d*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 8*sw^6*(-9 + 16*swC^2) + 
          sw^2*(-22 + 68*swC^2 - 48*swC^4) + 12*sw^4*(5 - 14*swC^2 + 
            8*swC^4)) + 3*d^2*(3 + 32*sw^8 - 10*swC^2 + 8*swC^4 + 
          8*sw^6*(-9 + 16*swC^2) + sw^2*(-22 + 68*swC^2 - 48*swC^4) + 
          12*sw^4*(5 - 14*swC^2 + 8*swC^4)) + 8*(9 - 30*swC^2 + 24*swC^4 + 
          32*sw^8*(3 - 5*swC^2 + 8*swC^4) - 24*sw^6*(9 - 23*swC^2 + 
            12*swC^4) + 12*sw^4*(15 - 46*swC^2 + 32*swC^4) - 
          2*sw^2*(33 - 106*swC^2 + 80*swC^4)))*t + 
      4*(9 - 30*swC^2 + 24*swC^4 + sw^2*(-66 + 236*swC^2 - 208*swC^4) + 
        32*sw^8*(3 - 20*swC^2 + 32*swC^4) - 24*sw^6*(9 - 44*swC^2 + 
          48*swC^4) + 12*sw^4*(15 - 58*swC^2 + 56*swC^4))*t^2)*
     SPList[SP[q1, q1], SP[q1, q1]])/(cw^4*cwC^2*mz^2*Pi^d*(mz^2 - s)*
     (-mzC^2 + s)*sw^4*swC^2))
